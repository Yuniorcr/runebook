<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="ade1d38216915151ba7db0ce62f3199d7bf8e743" translate="yes" xml:space="preserve">
          <source>F:/bin</source>
          <target state="translated">F:/bin</target>
        </trans-unit>
        <trans-unit id="16a6231368962f338e8f37dfc91ca30753938154" translate="yes" xml:space="preserve">
          <source>FACET FIELDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="3f8b9d0d8f1563ce34d8f76abc9faf53ac55bb32" translate="yes" xml:space="preserve">
          <source>FAQs, tricks and tips for &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65569c995a4785c8ee0ddac72f9a5d5496ad6056" translate="yes" xml:space="preserve">
          <source>FAQs, tricks and tips for &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</source>
          <target state="translated">Часто задаваемые вопросы, приемы и подсказки по &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec5a3344b6b1da0ebe322bd0a2dfc8eb4528955" translate="yes" xml:space="preserve">
          <source>FATAL errors will cause the program to halt (&lt;code&gt;croak&lt;/code&gt; ), since the problem is so severe that it would be dangerous to continue. (This can always be trapped with &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, but it's not a good idea. Under the circumstances, dying is the best thing to do).</source>
          <target state="translated">ФАТАЛЬНЫЕ ошибки приведут к остановке программы ( &lt;code&gt;croak&lt;/code&gt; ), поскольку проблема настолько серьезна, что было бы опасно продолжать. (Это всегда можно поймать с помощью &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , но это плохая идея. В данных обстоятельствах лучше всего умереть).</target>
        </trans-unit>
        <trans-unit id="6b6f2d1eafcc9e88114df946d6ac19bc0f376a0c" translate="yes" xml:space="preserve">
          <source>FATAL errors will cause the program to halt (&lt;code&gt;croak&lt;/code&gt;), since the problem is so severe that it would be dangerous to continue. (This can always be trapped with &lt;code&gt;eval&lt;/code&gt;, but it's not a good idea. Under the circumstances, dying is the best thing to do).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69754788a4c6beb4ec0ff140aa5c158dca3bfa2a" translate="yes" xml:space="preserve">
          <source>FB_CROAK</source>
          <target state="translated">FB_CROAK</target>
        </trans-unit>
        <trans-unit id="b626cf33b4a041c5ce4d521b41bf3a7b58bd485d" translate="yes" xml:space="preserve">
          <source>FB_DEFAULT</source>
          <target state="translated">FB_DEFAULT</target>
        </trans-unit>
        <trans-unit id="757934dd26eb29cb3152a5f387ec3d2edb168405" translate="yes" xml:space="preserve">
          <source>FB_PERLQQ FB_HTMLCREF FB_XMLCREF</source>
          <target state="translated">FB_PERLQQ FB_HTMLCREF FB_XMLCREF</target>
        </trans-unit>
        <trans-unit id="0a74cbd8c5cb0982de1a9bcfa6850e000455346d" translate="yes" xml:space="preserve">
          <source>FB_QUIET</source>
          <target state="translated">FB_QUIET</target>
        </trans-unit>
        <trans-unit id="0dd7f31fe0e5f67c669f4440fb273121e4c806e4" translate="yes" xml:space="preserve">
          <source>FB_WARN</source>
          <target state="translated">FB_WARN</target>
        </trans-unit>
        <trans-unit id="8e8b3f3bb48e9f1566f046dd9abec5d58654f4a5" translate="yes" xml:space="preserve">
          <source>FCNTL</source>
          <target state="translated">FCNTL</target>
        </trans-unit>
        <trans-unit id="47dadeeeb2bc9f5421eaa6bbbe50810a393d4c66" translate="yes" xml:space="preserve">
          <source>FEATURE BUNDLES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ НАБОРЫ</target>
        </trans-unit>
        <trans-unit id="ec8e87c2f7d4da8aaca114d6270ea98cb522428f" translate="yes" xml:space="preserve">
          <source>FEATURES = less-&amp;gt;of()</source>
          <target state="translated">ОСОБЕННОСТИ = меньше-&amp;gt; из ()</target>
        </trans-unit>
        <trans-unit id="489edc9160737f1f5321c8439e0d90f85d95108c" translate="yes" xml:space="preserve">
          <source>FEEDBACK</source>
          <target state="translated">FEEDBACK</target>
        </trans-unit>
        <trans-unit id="a721f50a7a690a4a15e9a37c997197a6892fe7c1" translate="yes" xml:space="preserve">
          <source>FETCH</source>
          <target state="translated">FETCH</target>
        </trans-unit>
        <trans-unit id="a36834b47beb7b8fa9cc177881caffbc9273b059" translate="yes" xml:space="preserve">
          <source>FETCH this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b96ae35c4cdaf0d5015e044df05ffbf062155e" translate="yes" xml:space="preserve">
          <source>FETCH this, index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0417b5bc981c089adeff175d8d240c193a1c5f" translate="yes" xml:space="preserve">
          <source>FETCH this, key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c895bf1dc50f257bb516434bac2edbda6ee48875" translate="yes" xml:space="preserve">
          <source>FETCHSIZE and STORESIZE are used to provide &lt;code&gt;$#array&lt;/code&gt; and equivalent &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; access.</source>
          <target state="translated">FETCHSIZE и STORESIZE используются для предоставления доступа к &lt;code&gt;$#array&lt;/code&gt; и эквивалентному &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; доступу.</target>
        </trans-unit>
        <trans-unit id="9a55d444e2f42ff3332a7b20892e03b42c0dde45" translate="yes" xml:space="preserve">
          <source>FETCHSIZE and STORESIZE are used to provide &lt;code&gt;$#array&lt;/code&gt; and equivalent &lt;code&gt;scalar(@array)&lt;/code&gt; access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655cf3f775d1131bb1cd13d50dcc9384058c7e74" translate="yes" xml:space="preserve">
          <source>FETCHSIZE returned a negative value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdae04b785f3e9a65f525eb253a77d31047f28b" translate="yes" xml:space="preserve">
          <source>FETCHSIZE this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845bc45b1b1e5326c244df2ee7648f3ddd776170" translate="yes" xml:space="preserve">
          <source>FETCH_</source>
          <target state="translated">FETCH_</target>
        </trans-unit>
        <trans-unit id="05cf9a52ee9997400d322323b2f4f5f087799c04" translate="yes" xml:space="preserve">
          <source>FIELDS</source>
          <target state="translated">FIELDS</target>
        </trans-unit>
        <trans-unit id="07c257b16606b468b4287bbfd069963fcb6c04a5" translate="yes" xml:space="preserve">
          <source>FIFO</source>
          <target state="translated">FIFO</target>
        </trans-unit>
        <trans-unit id="3f799155fde6a8df0e53471e8ebc22e51aee5205" translate="yes" xml:space="preserve">
          <source>FIFO (named pipe).</source>
          <target state="translated">FIFO (названная труба).</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="188699dbc4f938b6c1d493b9b4e73beaae160b4d" translate="yes" xml:space="preserve">
          <source>FILE may contain Unicode characters outside the system codepage. Once the file has been created you can use Win32::GetANSIPathName() to get a name that can be passed to system calls and external programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1037b28078b931a2bcf7381d1504e913f7749ea4" translate="yes" xml:space="preserve">
          <source>FILEGV</source>
          <target state="translated">FILEGV</target>
        </trans-unit>
        <trans-unit id="65f4de99dee3e085c7a32fb60bb9eaf5617a70cd" translate="yes" xml:space="preserve">
          <source>FILEHANDLE may be an expression whose value can be used as an indirect filehandle, usually the real filehandle name or an autovivified handle.</source>
          <target state="translated">FILEHANDLE может быть выражением,значение которого может быть использовано в качестве косвенного файлового дескриптора,обычно это настоящее имя файлового дескриптора или автоповидимый дескриптор.</target>
        </trans-unit>
        <trans-unit id="eb6788548cba81bf001baaa9f81e8e517a13289b" translate="yes" xml:space="preserve">
          <source>FILEHANDLE may be an expression whose value gives the name of the actual filehandle. Thus:</source>
          <target state="translated">FILEHANDLE может быть выражением,значение которого дает имя реального файла-обработчика.Таким образом:</target>
        </trans-unit>
        <trans-unit id="9fb4f1d17ef878fbfbe96076658397ad86bd5264" translate="yes" xml:space="preserve">
          <source>FILES</source>
          <target state="translated">FILES</target>
        </trans-unit>
        <trans-unit id="57b2849536a1efa1f62fdf190cadb1a10c11e6b6" translate="yes" xml:space="preserve">
          <source>FILL</source>
          <target state="translated">FILL</target>
        </trans-unit>
        <trans-unit id="9632a4abb88bdcc736407e7934b81d79fbb78781" translate="yes" xml:space="preserve">
          <source>FINDING YOUR WAY AROUND</source>
          <target state="translated">НАХОДИТЬ СПОСОБ ОБОЙТИ</target>
        </trans-unit>
        <trans-unit id="059c8321d5ceafe9f97e631f972d839dbaf5b1d5" translate="yes" xml:space="preserve">
          <source>FIONREAD requires a filehandle connected to a stream, meaning that sockets, pipes, and tty devices work, but</source>
          <target state="translated">FIONREAD требует,чтобы файловая ручка была подключена к потоку,что означает,что розетки,трубы и tty устройства работают,но</target>
        </trans-unit>
        <trans-unit id="f1c14024d456e253b8073d3a89752d6ea8200326" translate="yes" xml:space="preserve">
          <source>FIRSTKEY and NEXTKEY methods go through the keys which were already read, not all the possible keys of the hash.</source>
          <target state="translated">Методы FIRSTKEY и NEXTKEY проходят через уже прочитанные ключи,не все возможные ключи хэша.</target>
        </trans-unit>
        <trans-unit id="473f2fe7fb87993b779c2cc268a4bc8822c0f618" translate="yes" xml:space="preserve">
          <source>FIRSTKEY is always called in scalar context and it should just return the first key. values(), and each() in list context, will call FETCH for the returned keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60763b7739ea9775822fa821fd5c68448c0e057f" translate="yes" xml:space="preserve">
          <source>FIRSTKEY this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93a0a6500fe82ad7af1d937eb87befdc270cb77" translate="yes" xml:space="preserve">
          <source>FIRST_MAKEFILE</source>
          <target state="translated">FIRST_MAKEFILE</target>
        </trans-unit>
        <trans-unit id="df2badbb417734bff12c2cd1ce6852a857e8b49b" translate="yes" xml:space="preserve">
          <source>FLAG VALUES</source>
          <target state="translated">ФЛАГСКИЕ ЦЕННОСТИ</target>
        </trans-unit>
        <trans-unit id="ae5c9fb3c111122e22c6f658c74f989e6c74e9ee" translate="yes" xml:space="preserve">
          <source>FLAGS</source>
          <target state="translated">FLAGS</target>
        </trans-unit>
        <trans-unit id="fc54423d9b2090ad55b78aa71f44bd7d687a3b90" translate="yes" xml:space="preserve">
          <source>FLAGS FOR JSON::PP ONLY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd98ae36981ee80a267c314ec60000c7f9d30870" translate="yes" xml:space="preserve">
          <source>FLOAT</source>
          <target state="translated">FLOAT</target>
        </trans-unit>
        <trans-unit id="73449ef74937cb8a715e6e9b0bcd4bb4e19f070f" translate="yes" xml:space="preserve">
          <source>FLOATING-POINT ENVIRONMENT</source>
          <target state="translated">СРЕДА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ</target>
        </trans-unit>
        <trans-unit id="f41751eb3ffc92663591f0374ca80b48bbc39b5b" translate="yes" xml:space="preserve">
          <source>FMTEYEWTK</source>
          <target state="translated">FMTEYEWTK</target>
        </trans-unit>
        <trans-unit id="831a66be6f43bd545fdc4414e1f4b885b9c05bb7" translate="yes" xml:space="preserve">
          <source>FMT_GV</source>
          <target state="translated">FMT_GV</target>
        </trans-unit>
        <trans-unit id="15135a59c6851b66ea7afd388b7d51c193aa382b" translate="yes" xml:space="preserve">
          <source>FMT_NAME</source>
          <target state="translated">FMT_NAME</target>
        </trans-unit>
        <trans-unit id="5ebe3bdc53012abb0f99fe6d21ef451db1b6f344" translate="yes" xml:space="preserve">
          <source>FOO()</source>
          <target state="translated">FOO()</target>
        </trans-unit>
        <trans-unit id="29f93d09c4164c56d0a4360f7af9f4da5d683665" translate="yes" xml:space="preserve">
          <source>FOOTNOTES</source>
          <target state="translated">FOOTNOTES</target>
        </trans-unit>
        <trans-unit id="a27448e44064a3e71d47db864ec6590331ae24db" translate="yes" xml:space="preserve">
          <source>FOR MODULE AUTHORS</source>
          <target state="translated">ДЛЯ АВТОРОВ МОДУЛЕЙ</target>
        </trans-unit>
        <trans-unit id="49b71cfc6dbaeaf2d7271b35e698bcb55b689647" translate="yes" xml:space="preserve">
          <source>FORM</source>
          <target state="translated">FORM</target>
        </trans-unit>
        <trans-unit id="3f6103eba0b588dc2c4ca41ac7c6811788d10af9" translate="yes" xml:space="preserve">
          <source>FORMAT</source>
          <target state="translated">FORMAT</target>
        </trans-unit>
        <trans-unit id="197bc57f95ecd67e69c42b441c686af9b56b66a3" translate="yes" xml:space="preserve">
          <source>FORMAT CONTROL ATTRIBUTES</source>
          <target state="translated">АТРИБУТЫ УПРАВЛЕНИЯ ФОРМАТОМ</target>
        </trans-unit>
        <trans-unit id="8c6077236f8ea6885b307ca6cfaf9346871ddc06" translate="yes" xml:space="preserve">
          <source>FORMAT is the</source>
          <target state="translated">Формат</target>
        </trans-unit>
        <trans-unit id="9ca6f46e23cb251edb9f7e2a3f8e64a09e982c8e" translate="yes" xml:space="preserve">
          <source>FORMAT is the &lt;a href=&quot;http://man.he.net/man3/printf&quot;&gt;printf(3)&lt;/a&gt;-style format specifier (without the leading '%') to use to print the times. It defaults to '5.2f'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5814e0479ce0db049db2be1669d632fac6aa3f" translate="yes" xml:space="preserve">
          <source>FORMATTERS</source>
          <target state="translated">FORMATTERS</target>
        </trans-unit>
        <trans-unit id="d660f8cca36ec17fdb320607d854df06b0b01126" translate="yes" xml:space="preserve">
          <source>FORMATTING SPECIFICATIONS</source>
          <target state="translated">СПЕЦИФИКАЦИИ ФОРМАТИРОВАНИЯ</target>
        </trans-unit>
        <trans-unit id="4b1e81e861fd516f97ae14bf47f22c76798cec81" translate="yes" xml:space="preserve">
          <source>FORTRAN print control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b9930b588cfbff9ca8c2607a532bbe28f9a623" translate="yes" xml:space="preserve">
          <source>FORWARD COMPATIBILITY</source>
          <target state="translated">ПРЯМАЯ СОВМЕСТИМОСТЬ</target>
        </trans-unit>
        <trans-unit id="cca2a0e16b252e41df41d698b7943121b4ce66e8" translate="yes" xml:space="preserve">
          <source>FREETMPS</source>
          <target state="translated">FREETMPS</target>
        </trans-unit>
        <trans-unit id="ac03725b51e3b18352fbcf923063a48e12b26314" translate="yes" xml:space="preserve">
          <source>FREQUENTLY ASKED QUESTIONS</source>
          <target state="translated">ЧАСТО ЗАДАВАЕМЫЕ ВОПРОСЫ</target>
        </trans-unit>
        <trans-unit id="6496f6c84e390b28e94f50597c1286993f14328b" translate="yes" xml:space="preserve">
          <source>FROM THE COMMAND LINE</source>
          <target state="translated">ИЗ КОМАНДНОЙ СТРОКИ</target>
        </trans-unit>
        <trans-unit id="8872dc813208d15328cb72820a6753a9ddec0776" translate="yes" xml:space="preserve">
          <source>FTP Archives for Perl Modules:</source>
          <target state="translated">Архивы FTP для модулей Perl:</target>
        </trans-unit>
        <trans-unit id="13add5d8be99c7156e522d0830855d1224598c3d" translate="yes" xml:space="preserve">
          <source>FTP Client class</source>
          <target state="translated">класс FTP-клиента</target>
        </trans-unit>
        <trans-unit id="99c6dd16cd765c469c507fe9b03fc9fa2810bf50" translate="yes" xml:space="preserve">
          <source>FTP Client data connection class</source>
          <target state="translated">Класс подключения данных FTP-клиента</target>
        </trans-unit>
        <trans-unit id="d6fc2619f665877d169e9fca0155476e2dbf2fb4" translate="yes" xml:space="preserve">
          <source>FTP servers can work in passive or active mode. Active mode is when you want to transfer data you have to tell the server the address and port to connect to. Passive mode is when the server provide the address and port and you establish the connection.</source>
          <target state="translated">FTP-серверы могут работать в пассивном или активном режиме.Активный режим-это когда вы хотите передать данные,вам нужно сообщить серверу адрес и порт для подключения.Пассивный режим-это когда сервер сообщает адрес и порт и вы устанавливаете соединение.</target>
        </trans-unit>
        <trans-unit id="36c1fe86d5964c4e743e91fc8cc4caa0733fb438" translate="yes" xml:space="preserve">
          <source>FTP servers usually listen on the same port number, port 21, as any other FTP server. But there is no reason why this has to be the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fa87de490d6c1ca8c48ecbbdf1e0921be54835" translate="yes" xml:space="preserve">
          <source>FTP stands for File Transfer Protocol. It is a way of transferring files between networked machines. The protocol defines a client (whose commands are provided by this module) and a server (not implemented in this module). Communication is always initiated by the client, and the server responds with a message and a status code (and sometimes with data).</source>
          <target state="translated">FTP означает протокол передачи файлов.Это способ передачи файлов между сетевыми машинами.Протокол определяет клиента (команды которого предоставляются данным модулем)и сервер (не реализованный в данном модуле).Связь всегда инициируется клиентом,а сервер отвечает сообщением и кодом состояния (а иногда и данными).</target>
        </trans-unit>
        <trans-unit id="22cfaa805c4996e790b0842ae141ee601b2ec3b2" translate="yes" xml:space="preserve">
          <source>FULLPERL</source>
          <target state="translated">FULLPERL</target>
        </trans-unit>
        <trans-unit id="96bdd2a0e835c50d5a37670cae3294bb4a92551d" translate="yes" xml:space="preserve">
          <source>FULLPERLRUN</source>
          <target state="translated">FULLPERLRUN</target>
        </trans-unit>
        <trans-unit id="4175d73a603036c7ec596dfc807dbe11477db143" translate="yes" xml:space="preserve">
          <source>FULLPERLRUNINST</source>
          <target state="translated">FULLPERLRUNINST</target>
        </trans-unit>
        <trans-unit id="64aa9da551140f123645f6df265bdb9a6b198111" translate="yes" xml:space="preserve">
          <source>FUNCLIST</source>
          <target state="translated">FUNCLIST</target>
        </trans-unit>
        <trans-unit id="63425456f14a800f08b688a005e2e85f84241751" translate="yes" xml:space="preserve">
          <source>FUNCTION</source>
          <target state="translated">FUNCTION</target>
        </trans-unit>
        <trans-unit id="f8bdd6d62e62677a02e5dc952820aa27e8b6384e" translate="yes" xml:space="preserve">
          <source>FUNCTION DIFFERENCES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ РАЗЛИЧИЯ</target>
        </trans-unit>
        <trans-unit id="9633f16041f6cad3a579e87f0baed24ec359c5c9" translate="yes" xml:space="preserve">
          <source>FUNCTION IMPLEMENTATIONS</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ ВНЕДРЕНИЯ</target>
        </trans-unit>
        <trans-unit id="a54261bf699a2c75d951095758dc3d3d9845baef" translate="yes" xml:space="preserve">
          <source>FUNCTION SPECIFIC NOTES</source>
          <target state="translated">ФУНКЦИОНАЛЬНЫЕ ОСОБЕННОСТИ</target>
        </trans-unit>
        <trans-unit id="7524394489df18e23f74e891bd713b273f05b69b" translate="yes" xml:space="preserve">
          <source>FUNCTIONAL INTERFACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0639bb5342fee4e8d445f26b3a0278cc2fe4679" translate="yes" xml:space="preserve">
          <source>FUNCTIONS</source>
          <target state="translated">FUNCTIONS</target>
        </trans-unit>
        <trans-unit id="256018c65b4eb744f4377a13a19d91631c659dd4" translate="yes" xml:space="preserve">
          <source>FUNCTIONS API</source>
          <target state="translated">API ФУНКЦИИ</target>
        </trans-unit>
        <trans-unit id="a8b599c6c2d22b5945b690bad2739bb459f033f6" translate="yes" xml:space="preserve">
          <source>FUNCTIONS FOR REFERENCES</source>
          <target state="translated">ФУНКЦИИ ДЛЯ СПРАВОК</target>
        </trans-unit>
        <trans-unit id="546e2c9a8685e17aa5c5cf752632f067b0b1ac92" translate="yes" xml:space="preserve">
          <source>FURTHER READING</source>
          <target state="translated">ДОПОЛНИТЕЛЬНЫЕ МАТЕРИАЛЫ ДЛЯ ЧТЕНИЯ</target>
        </trans-unit>
        <trans-unit id="78d5c48c1c95da4e4d7cfa29209f1e02bb56ed08" translate="yes" xml:space="preserve">
          <source>Facet for assertion amnesty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a8373446df3ec05bd53275eaae62cc9a0b479e" translate="yes" xml:space="preserve">
          <source>Facet for errors that need to be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1d180871daee0cdbe4502f47ae51bbd4bb7509" translate="yes" xml:space="preserve">
          <source>Facet for events contains other events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ea596fd77110f489e26ed692733bea3f136f34" translate="yes" xml:space="preserve">
          <source>Facet for hub actions and behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8324754e4bbbb6888e22aff420189d7b50e4e121" translate="yes" xml:space="preserve">
          <source>Facet for information a developer might care about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bfc95bb8ef012dee5214e2e8cc7a7e2fbd4d47" translate="yes" xml:space="preserve">
          <source>Facet for meta-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f415e842705d2158785c07b8927d1f8a027365" translate="yes" xml:space="preserve">
          <source>Facet for setting the plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58384918ecc4e085ca881ebf031c51a056d62901" translate="yes" xml:space="preserve">
          <source>Facet for the hubs an event passes through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378b6d9594f99674003363daa56d4fa9a71b1ed2" translate="yes" xml:space="preserve">
          <source>Facet representing an assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda3a9c60d8ab31ff000b4864eefdcc4c00171ff" translate="yes" xml:space="preserve">
          <source>Facet that dictates how to render an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b0db876f6c994e9f1b7e9e8a9af8dc92aba61e" translate="yes" xml:space="preserve">
          <source>Facet with event details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1548e5421220de5c1180140cf1e5a982f5e3c0c" translate="yes" xml:space="preserve">
          <source>Facets are how events convey their purpose to the Test2 internals and formatters. An event without facets will have no intentional effect on the overall test state, and will not be displayed at all by most formatters, except perhaps to say that an event of an unknown type was seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9935e956d4ac9064df2633764e8fb19e4ae925" translate="yes" xml:space="preserve">
          <source>Facets are produced by the &lt;code&gt;facet_data()&lt;/code&gt; subroutine, which you should nearly-always override. &lt;code&gt;facet_data()&lt;/code&gt; is expected to return a hashref where each key is the facet type, and the value is either a hashref with the data for that facet, or an array of hashrefs. Some facets must be defined as single hashrefs, some must be defined as an array of hashrefs, No facets allow both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aab1b0862ad45abd6672f0567f6c68cf09c136e" translate="yes" xml:space="preserve">
          <source>Facilitate processing an opened filehandle of a compressed archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0a833e883c67f6559509334a96f848be9e54ed" translate="yes" xml:space="preserve">
          <source>Facilities</source>
          <target state="translated">Facilities</target>
        </trans-unit>
        <trans-unit id="0b8af03a8ba1e4c01fa3396b94568da207e2f7a3" translate="yes" xml:space="preserve">
          <source>Factory for creating TAP::Parser output objects</source>
          <target state="translated">Фабрика для создания TAP::Parser выходных объектов</target>
        </trans-unit>
        <trans-unit id="579d7f5c997d76bab3032c2c355897f70853da24" translate="yes" xml:space="preserve">
          <source>Failed tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe0353ca36e091772af60ca71316fe70ddeac9e" translate="yes" xml:space="preserve">
          <source>Failed to close in-place work file %s: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194bab90ff2f1dcc5e2c4e85ff7e0a9857bb0252" translate="yes" xml:space="preserve">
          <source>Failing tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607919027b2a9b94755ff24dee0db004455fddf6" translate="yes" xml:space="preserve">
          <source>Failover to different communication modes by Nick Williams &amp;lt;</source>
          <target state="translated">Переход к различным режимам связи Ник Вильямс &amp;lt;</target>
        </trans-unit>
        <trans-unit id="c563018d20418391a3a741571c4b388d5e704fb2" translate="yes" xml:space="preserve">
          <source>Fails if the Perl DLL found via &lt;code&gt;BEGINLIBPATH&lt;/code&gt; is different from what was loaded on step 1; e.g., another process could have loaded it from &lt;code&gt;LIBPATH&lt;/code&gt; or from a different value of &lt;code&gt;BEGINLIBPATH&lt;/code&gt; . In these cases one needs to modify the setting of the system so that this other process either does not run, or loads the DLL from &lt;code&gt;BEGINLIBPATH&lt;/code&gt; with &lt;code&gt;LIBPATHSTRICT=T&lt;/code&gt; (available with kernels after September 2000).</source>
          <target state="translated">Ошибка, если Perl DLL, найденная через &lt;code&gt;BEGINLIBPATH&lt;/code&gt; , отличается от того, что было загружено на шаге 1; например, другой процесс мог загрузить его из &lt;code&gt;LIBPATH&lt;/code&gt; или из другого значения &lt;code&gt;BEGINLIBPATH&lt;/code&gt; . В этих случаях необходимо изменить настройки системы, чтобы этот другой процесс либо не запускался, либо &lt;code&gt;BEGINLIBPATH&lt;/code&gt; DLL из BEGINLIBPATH с &lt;code&gt;LIBPATHSTRICT=T&lt;/code&gt; (доступно с ядрами после сентября 2000 г.).</target>
        </trans-unit>
        <trans-unit id="b6865060f0c3e431fc8e58dc7dfb075d96c65977" translate="yes" xml:space="preserve">
          <source>Fails if the Perl DLL found via &lt;code&gt;BEGINLIBPATH&lt;/code&gt; is different from what was loaded on step 1; e.g., another process could have loaded it from &lt;code&gt;LIBPATH&lt;/code&gt; or from a different value of &lt;code&gt;BEGINLIBPATH&lt;/code&gt;. In these cases one needs to modify the setting of the system so that this other process either does not run, or loads the DLL from &lt;code&gt;BEGINLIBPATH&lt;/code&gt; with &lt;code&gt;LIBPATHSTRICT=T&lt;/code&gt; (available with kernels after September 2000).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5f423c103a5bffe6de7613de2373184d36088d" translate="yes" xml:space="preserve">
          <source>Fails if the original</source>
          <target state="translated">Не удается,если оригинал</target>
        </trans-unit>
        <trans-unit id="17027fe6c01c307085e08da87bcd8a7cbddca555" translate="yes" xml:space="preserve">
          <source>Fails if the original UTF-8 sequence cannot be represented in the native 8 bit encoding. On failure dies or, if the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e10cdcfe2f19c749e60e277e1c9015c94fdd67f" translate="yes" xml:space="preserve">
          <source>Failure of user callbacks dispatched using the &lt;code&gt;G_KEEPERR&lt;/code&gt; flag could also result in this warning. See &lt;a href=&quot;perlcall#G_KEEPERR&quot;&gt;&quot;G_KEEPERR&quot; in perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd78511c1283702ad2bb60da575ac2d0ff18ab16" translate="yes" xml:space="preserve">
          <source>Failure of user callbacks dispatched using the &lt;code&gt;G_KEEPERR&lt;/code&gt; flag could also result in this warning. See &lt;a href=&quot;perlcall#G_KEEPERR&quot;&gt;G_KEEPERR in perlcall&lt;/a&gt;.</source>
          <target state="translated">Сбой обратных вызовов пользователя, отправленных с использованием флага &lt;code&gt;G_KEEPERR&lt;/code&gt; , также может привести к этому предупреждению. См. &lt;a href=&quot;perlcall#G_KEEPERR&quot;&gt;G_KEEPERR в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e175cd49340e07a19035148ceef428c5e5467b03" translate="yes" xml:space="preserve">
          <source>Failure to find a next method will result in an exception being thrown (see below for alternatives).</source>
          <target state="translated">Неспособность найти следующий метод приведет к тому,что будет выброшено исключение (альтернативы см.ниже).</target>
        </trans-unit>
        <trans-unit id="331a7d40c82f32a89c55031f2f7712cfb5b3bd07" translate="yes" xml:space="preserve">
          <source>Fairly young with a focus on HTML5 and real-time web technologies such as WebSockets.</source>
          <target state="translated">Довольно молодой,ориентированный на HTML5 и веб-технологии реального времени,такие как WebSockets.</target>
        </trans-unit>
        <trans-unit id="b3505bf50d858a8755043974e251138d06ee1ab4" translate="yes" xml:space="preserve">
          <source>Fake on-demand retrieval of outstanding PM messages. If &lt;code&gt;force&lt;/code&gt; is false, will not dispatch messages if a real message loop is known to be present. Returns number of messages retrieved.</source>
          <target state="translated">Поддельное получение по запросу незавершенных сообщений PM. Если &lt;code&gt;force&lt;/code&gt; имеет значение false, сообщения не будут отправляться, если известно, что существует реальный цикл сообщений. Возвращает количество полученных сообщений.</target>
        </trans-unit>
        <trans-unit id="6b7d9017d82f8622025ae6965855a1db0b5bb68b" translate="yes" xml:space="preserve">
          <source>Fall-through</source>
          <target state="translated">Fall-through</target>
        </trans-unit>
        <trans-unit id="fab000fc839ca496f91ba067964c48702895aed4" translate="yes" xml:space="preserve">
          <source>Fallback Data::Dumper and Storable</source>
          <target state="translated">Данные обратного отсчета::Дампера и накопителя</target>
        </trans-unit>
        <trans-unit id="2a4cf3efe7afe1d41140981a0335c8d83aa5d220" translate="yes" xml:space="preserve">
          <source>Fallback F</source>
          <target state="translated">Отступление F</target>
        </trans-unit>
        <trans-unit id="73f8b4fb3083d20a1f8a2c30b19bc54cad14826c" translate="yes" xml:space="preserve">
          <source>Fallback for &lt;code&gt;decode&lt;/code&gt; must return decoded string (sequence of characters) and takes a list of ordinal values as its arguments. So for example if you wish to decode octets as UTF-8, and use ISO-8859-15 as a fallback for bytes that are not valid UTF-8, you could write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a969fb863f8d9f84c7595f93fb9e0917427160e1" translate="yes" xml:space="preserve">
          <source>Fallback for encoding -&amp;gt; unicode. When seen, enc2xs adds this character for the decode map only.</source>
          <target state="translated">Откат для кодировки -&amp;gt; юникод. При отображении enc2xs добавляет этот символ только для карты декодирования.</target>
        </trans-unit>
        <trans-unit id="c7fc9099ef21900d77c14fd9245e820c2f3bcb05" translate="yes" xml:space="preserve">
          <source>Fallback for unicode -&amp;gt; encoding. When seen, enc2xs adds this character for the encode map only.</source>
          <target state="translated">Откат для юникода -&amp;gt; кодировка. При отображении enc2xs добавляет этот символ только для карты кодирования.</target>
        </trans-unit>
        <trans-unit id="9c5b502e30e454f9201574751906e3d638bd47ad" translate="yes" xml:space="preserve">
          <source>False [] range &quot;%s&quot; in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4bc2a882c589e2e3abf29bf34c6abd040f95e8" translate="yes" xml:space="preserve">
          <source>False by default. This will return true on events that should not be displayed by formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc126519ccb2cce10803355bc133ed10a33eb9" translate="yes" xml:space="preserve">
          <source>Family =&amp;gt; INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc390dbd71040b4339ecd1673e22c52149414722" translate="yes" xml:space="preserve">
          <source>Family-neutral IP socket supporting both IPv4 and IPv6</source>
          <target state="translated">Семейно-нейтральный IP-сокет с поддержкой как IPv4,так и IPv6</target>
        </trans-unit>
        <trans-unit id="b4fab41a1c219c7c774d4d5b99f19bfff38b0e96" translate="yes" xml:space="preserve">
          <source>Fancy term for &lt;b&gt;tokenizing&lt;/b&gt;.</source>
          <target state="translated">Замечательный термин для &lt;b&gt;токенизации&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="94700cb17db6026703f0124336c1c74248aa0c67" translate="yes" xml:space="preserve">
          <source>Fancy term for a &lt;b&gt;token&lt;/b&gt;.</source>
          <target state="translated">Замечательный термин для &lt;b&gt;жетона&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ae38f29ac6b64f59f2ed532d4ca0474fdf64d92e" translate="yes" xml:space="preserve">
          <source>Fancy term for a &lt;b&gt;tokener&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;Замечательный&lt;/b&gt; термин для &lt;b&gt;токенера&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f5c2b89d95eac3e9d7a030078747e18b17f8f9e8" translate="yes" xml:space="preserve">
          <source>Far More Than Everything You Ever Wanted To Know. An exhaustive treatise on one narrow topic, something of a super-&lt;b&gt;FAQ&lt;/b&gt;. See Tom for far more.</source>
          <target state="translated">Намного больше, чем все, что вы когда-либо хотели знать. Исчерпывающий трактат по одной узкой теме, что-то вроде супер- &lt;b&gt;FAQ&lt;/b&gt; . См. Тома, чтобы узнать больше.</target>
        </trans-unit>
        <trans-unit id="97102c70808de7b8e3d760ebf0b36147b801055a" translate="yes" xml:space="preserve">
          <source>FastCalc works exactly like Calc, in stores the numbers in decimal form, chopped into parts.</source>
          <target state="translated">FastCalc работает в точности так же,как Calc,хранит числа в десятичной форме,измельченные на части.</target>
        </trans-unit>
        <trans-unit id="915120b00045631c4e8983c0043b1f79dd8a3042" translate="yes" xml:space="preserve">
          <source>Fatal</source>
          <target state="translated">Fatal</target>
        </trans-unit>
        <trans-unit id="b4aa64ef3bff004eb3090e0a608393aba194c2eb" translate="yes" xml:space="preserve">
          <source>Fatal - Replace functions with equivalents which succeed or die</source>
          <target state="translated">Фатальный-Замена функций на эквиваленты,которые успешно или умереть</target>
        </trans-unit>
        <trans-unit id="7b51ba1a17fb15f440e9b23d89ba8c4efe01b4e8" translate="yes" xml:space="preserve">
          <source>Fatal VMS error (status=%d) at %s, line %d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d463e2edaea59c2a65ec5996b3a03a5976f772" translate="yes" xml:space="preserve">
          <source>Fatal Warnings</source>
          <target state="translated">Смертельные предупреждения</target>
        </trans-unit>
        <trans-unit id="a4a739fca7ca0c79dbb282ff772c97aebe6957a9" translate="yes" xml:space="preserve">
          <source>Fcntl</source>
          <target state="translated">Fcntl</target>
        </trans-unit>
        <trans-unit id="e79e4cb9771eccd5b0301896c4fb88d90381fa77" translate="yes" xml:space="preserve">
          <source>Fcntl - load the C Fcntl.h defines</source>
          <target state="translated">Fcntl-загрузить C Fcntl.h определяет</target>
        </trans-unit>
        <trans-unit id="5ba5c3a5081f69770fe71f342b75f8e639b7ddd9" translate="yes" xml:space="preserve">
          <source>FdGetOsFHandle</source>
          <target state="translated">FdGetOsFHandle</target>
        </trans-unit>
        <trans-unit id="01ed00607d92181e571c2670c20709d97c5c44ac" translate="yes" xml:space="preserve">
          <source>Features a comprehensive coverage of CJKV character sets and encodings along with many other issues faced by anyone trying to better support CJKV languages/scripts in all the areas of information processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c2035f4aec78ea8439cfaab9ef160e590f22f" translate="yes" xml:space="preserve">
          <source>Features can also be turned off by using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;foo&quot;&lt;/code&gt; . This too has lexical effect.</source>
          <target state="translated">Возможности программы также можно отключить, используя не &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;foo&quot;&lt;/code&gt; . Это тоже имеет лексический эффект.</target>
        </trans-unit>
        <trans-unit id="0e379ae6e30b736192025420af358547c6ada5ad" translate="yes" xml:space="preserve">
          <source>Features can also be turned off by using &lt;code&gt;no feature &quot;foo&quot;&lt;/code&gt;. This too has lexical effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03d65a3c6febccc90e9f30f5a749117a92b9dcc" translate="yes" xml:space="preserve">
          <source>February 28, 2013</source>
          <target state="translated">28 февраля 2013 года</target>
        </trans-unit>
        <trans-unit id="23cf501c0a2b5c8f4c1ddd40cb4a07d73b755042" translate="yes" xml:space="preserve">
          <source>February, 2004; by Chia-liang Kao: make cmpthese and timestr use time statistics for children instead of parent when the style is 'nop'.</source>
          <target state="translated">Февраль,2004;по Chia-liang Kao:сделайте cmpthese и timestr использовать статистику времени для детей вместо родителя,когда стиль 'nop'.</target>
        </trans-unit>
        <trans-unit id="1d3095f775b3bd756ca42dc28dbbcb522fa556f5" translate="yes" xml:space="preserve">
          <source>Feel free to add any member data fields you need to keep track of things like current font, indentation, horizontal or vertical position, or whatever else you like. Be sure to read &lt;a href=&quot;#PRIVATE-METHODS-AND-DATA&quot;&gt;PRIVATE METHODS AND DATA&lt;/a&gt; to avoid name collisions.</source>
          <target state="translated">Не стесняйтесь добавлять любые поля данных участников, которые вам нужны, чтобы отслеживать такие вещи, как текущий шрифт, отступ, горизонтальное или вертикальное положение или что-то еще, что вам нравится. Обязательно прочтите &lt;a href=&quot;#PRIVATE-METHODS-AND-DATA&quot;&gt;ЧАСТНЫЕ МЕТОДЫ И ДАННЫЕ,&lt;/a&gt; чтобы избежать конфликтов имен.</target>
        </trans-unit>
        <trans-unit id="70cbb102105e81fb1b4636c361737ff2e64d0599" translate="yes" xml:space="preserve">
          <source>Feel free to update the ticket about your bug on &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org&lt;/a&gt; if a new version of Perl is released and your bug is still present.</source>
          <target state="translated">Не стесняйтесь обновлять заявку о своей ошибке на &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org,&lt;/a&gt; если выпущена новая версия Perl, а ваша ошибка все еще присутствует.</target>
        </trans-unit>
        <trans-unit id="818e0f82dbbed731afa80bbab7b35df92f5cc034" translate="yes" xml:space="preserve">
          <source>Feel free to update the ticket about your bug on &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; if a new version of Perl is released and your bug is still present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b9072d4d9d0784cf29d859c2595c262d17ce85" translate="yes" xml:space="preserve">
          <source>Felipe Gasper &amp;lt;felipe@felipegasper.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7064e4dbef9d61b58b480cbcce388f810d38f0" translate="yes" xml:space="preserve">
          <source>Fetch a specified numbered capture. &lt;code&gt;sv&lt;/code&gt; should be set to the scalar to return, the scalar is passed as an argument rather than being returned from the function because when it's called Perl already has a scalar to store the value, creating another one would be redundant. The scalar can be set with &lt;code&gt;sv_setsv&lt;/code&gt; , &lt;code&gt;sv_setpvn&lt;/code&gt; and friends, see &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">Получите заданный пронумерованный захват. &lt;code&gt;sv&lt;/code&gt; должен быть установлен на скаляр для возврата, скаляр передается как аргумент, а не возвращается из функции, потому что, когда он вызывается, Perl уже имеет скаляр для хранения значения, создание другого будет излишним. &lt;code&gt;sv_setsv&lt;/code&gt; можно установить с помощью sv_setsv , &lt;code&gt;sv_setpvn&lt;/code&gt; и других, см. &lt;a href=&quot;perlapi&quot;&gt;Perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48fd141ea5546433e7ee18f3519e592b58062912" translate="yes" xml:space="preserve">
          <source>Fetch a specified numbered capture. &lt;code&gt;sv&lt;/code&gt; should be set to the scalar to return, the scalar is passed as an argument rather than being returned from the function because when it's called Perl already has a scalar to store the value, creating another one would be redundant. The scalar can be set with &lt;code&gt;sv_setsv&lt;/code&gt;, &lt;code&gt;sv_setpvn&lt;/code&gt; and friends, see &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb89725e8e52167503480d3ef11a278907f1601" translate="yes" xml:space="preserve">
          <source>Fetch an ARexx message from the host port. Returns an objrct of class Amiga::ARexx::Msg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361d18ac190751239212937c28a02d801b3fdb96" translate="yes" xml:space="preserve">
          <source>Fetch and install dmake somewhere on your path.</source>
          <target state="translated">Найдите и установите dmake где-нибудь на вашем пути.</target>
        </trans-unit>
        <trans-unit id="2ef1611403db02cc8268d0f9fa27bf2626bfc429" translate="yes" xml:space="preserve">
          <source>Fetch the value of a constant. Returns &lt;code&gt;undef&lt;/code&gt; if &lt;code&gt;$sConstantName&lt;/code&gt; is not the name of a constant supported by this module. Never sets &lt;code&gt;$!&lt;/code&gt; nor &lt;code&gt;$^E&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06725480fea615d084c694cfa90098fe4e3f491f" translate="yes" xml:space="preserve">
          <source>Fetches an entry of the INPUT section of the typemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a9ae8436e8d3cd5ef250d912f1bdeb9859c506" translate="yes" xml:space="preserve">
          <source>Fetches an entry of the OUTPUT section of the typemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c736b0f8cda63c68f4e793293e1f7b1c4a83bcc7" translate="yes" xml:space="preserve">
          <source>Fetches an entry of the TYPEMAP section of the typemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804d920af683a75f739608bbcb40c81ec9c0980c" translate="yes" xml:space="preserve">
          <source>Fetches the file you requested and returns the full path to the file.</source>
          <target state="translated">Получает запрошенный файл и возвращает полный путь к файлу.</target>
        </trans-unit>
        <trans-unit id="827c97bde84978a3bb98e5034a1b606013a63c45" translate="yes" xml:space="preserve">
          <source>Fetches the pad name from the given index.</source>
          <target state="translated">Получает имя колодки из данного индекса.</target>
        </trans-unit>
        <trans-unit id="71f58f8d922f796a2889048895e8dc9ffd8f6c42" translate="yes" xml:space="preserve">
          <source>Fetching network info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d83d9a37e933efbb23620fd66a3863f0d6f889" translate="yes" xml:space="preserve">
          <source>Fetching user and group info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b0630621dc693a0b82b1ac72066204ea3cb1ff" translate="yes" xml:space="preserve">
          <source>Fiddling with the Perl stack from your C program</source>
          <target state="translated">Сложность со стеком Perl из вашей программы на C</target>
        </trans-unit>
        <trans-unit id="9ae894619db092857c73b584dce0433ed00f6245" translate="yes" xml:space="preserve">
          <source>Field too wide in 'u' format in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5264e2b4a8e426bffe920139d4498e83c17f919e" translate="yes" xml:space="preserve">
          <source>FieldHash-based inside-out implementation. Object registry happens automatically. No destructor is needed and objects are thread safe.</source>
          <target state="translated">Внутреннее внедрение на базе FieldHash.Реестр объектов происходит автоматически.Деструктор не требуется,а объекты являются потокобезопасными.</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="07d174584450454292329995c0541462f26066d7" translate="yes" xml:space="preserve">
          <source>Fields are as follows:</source>
          <target state="translated">Поля выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="5d74e30558c4268af35bc2d593f402b9621c70e4" translate="yes" xml:space="preserve">
          <source>Fields in the &lt;a href=&quot;#STRUCTURE&quot;&gt;&quot;STRUCTURE&quot;&lt;/a&gt; section describe data elements, each of which has an associated data type as described herein. There are four primitive types: Boolean, String, List and Map. Other types are subtypes of primitives and define compound data structures or define constraints on the values of a data element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d320afb6b0630e1ccda485797b8576696531e08" translate="yes" xml:space="preserve">
          <source>Fields that aren't applicable to the particular code point argument exist in the returned hash, and are empty.</source>
          <target state="translated">Поля,которые не применимы к конкретному аргументу точки кода,существуют в возвращаемом хэше и пусты.</target>
        </trans-unit>
        <trans-unit id="69b39efda9ad6870df874aed2f0bbeddee020a37" translate="yes" xml:space="preserve">
          <source>Fifth:</source>
          <target state="translated">Fifth:</target>
        </trans-unit>
        <trans-unit id="f4f4e020ef73cd3f9c800d7b4c395570858c0611" translate="yes" xml:space="preserve">
          <source>Figures out the current line number in the XS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659f180bfdb0412ca17466a6655bb668ede0196b" translate="yes" xml:space="preserve">
          <source>Figures out which SourceHandler objects to use for a given Source</source>
          <target state="translated">Выясняет,какие объекты SourceHandler использовать для данного Source</target>
        </trans-unit>
        <trans-unit id="4b9b547e63da9c5d210106fd0343b71348efc18f" translate="yes" xml:space="preserve">
          <source>Figuring out the hexadecimal sequence of a Unicode character you want or deciphering someone else's hexadecimal Unicode regexp is about as much fun as programming in machine code. So another way to specify Unicode characters is to use the</source>
          <target state="translated">Вычислить нужную вам шестнадцатеричную последовательность символов Юникода или расшифровать чужой шестнадцатеричный юникодный регеxp-это примерно так же увлекательно,как программирование в машинном коде.Так что еще один способ указать символы Юникода-это использовать</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="00acd6f7be2c3aca96cab1792dd9c533c4fb99b0" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.pm&lt;/code&gt; : Perl module for the RPC extension.</source>
          <target state="translated">Файл &lt;code&gt;RPC.pm&lt;/code&gt; : Perl-модуль для расширения RPC.</target>
        </trans-unit>
        <trans-unit id="a012c4fa9de1752d421e1a0c810e66e54c1bc04d" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.pm&lt;/code&gt;: Perl module for the RPC extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2572733e62323918ecd19b3a5f28f1fad3d4a4e6" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.xs&lt;/code&gt; : Interface to some ONC+ RPC bind library functions.</source>
          <target state="translated">Файл &lt;code&gt;RPC.xs&lt;/code&gt; : интерфейс для некоторых функций библиотеки связывания ONC + RPC.</target>
        </trans-unit>
        <trans-unit id="d21d0a1f8e28ac4439c9ff42ce00b69859e99056" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;RPC.xs&lt;/code&gt;: Interface to some ONC+ RPC bind library functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0858ff16b7316b0da87cf27e491f57eeba0e7c11" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;rpctest.pl&lt;/code&gt; : Perl test program for the RPC extension.</source>
          <target state="translated">Файл &lt;code&gt;rpctest.pl&lt;/code&gt; : программа тестирования Perl для расширения RPC.</target>
        </trans-unit>
        <trans-unit id="b9b9f794d632ec2a1eb3d647f9b9b9ab58436d10" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;rpctest.pl&lt;/code&gt;: Perl test program for the RPC extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89663ab01d6a733daa8d8f050b0e4c86205af531" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;typemap&lt;/code&gt; : Custom typemap for RPC.xs. (cf. &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;typemap&lt;/code&gt; файлов : Пользовательская карта типов для RPC.xs. (см. &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="08279cd069867bec755240f0d6eb568b4f16393a" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;typemap&lt;/code&gt;: Custom typemap for RPC.xs. (cf. &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d73d8626a39dd86d3fe7032f41a3ecc0c3dd715" translate="yes" xml:space="preserve">
          <source>File Extraction Problems on Solaris.</source>
          <target state="translated">Проблемы с извлечением файлов на Соларисе.</target>
        </trans-unit>
        <trans-unit id="ab608d2ad8085ce03268de7bd1b1cc78fcd297d4" translate="yes" xml:space="preserve">
          <source>File Globbing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f0aef527a940964fa9d548817f94f5c7e0d938" translate="yes" xml:space="preserve">
          <source>File Handle and Input/Output Stream Utilities</source>
          <target state="translated">Утилиты для работы с файлами и ввода/вывода данных</target>
        </trans-unit>
        <trans-unit id="2c21dac263de829a5861211698806d60572e8b18" translate="yes" xml:space="preserve">
          <source>File Input and Output</source>
          <target state="translated">Вход и выход файла</target>
        </trans-unit>
        <trans-unit id="ed7b317f92a6f66879f8f8669d4497dbe06ba062" translate="yes" xml:space="preserve">
          <source>File Names, File Systems and File Locking (see also File Handles)</source>
          <target state="translated">Имена файлов,файловые системы и блокировка файлов (см.также раздел &quot;Файловые ручки&quot;).</target>
        </trans-unit>
        <trans-unit id="5c1cc1d41d3f3f53b541537cbb16ed14651ac798" translate="yes" xml:space="preserve">
          <source>File Naming Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a726cab0d7c518573e2f7003375fc21599153b1b" translate="yes" xml:space="preserve">
          <source>File Operations</source>
          <target state="translated">Файловые операции</target>
        </trans-unit>
        <trans-unit id="7572853d675e9450d66b583e3f295602cd6e9a54" translate="yes" xml:space="preserve">
          <source>File Permissions on Cygwin</source>
          <target state="translated">Файловые разрешения на Сигвина</target>
        </trans-unit>
        <trans-unit id="0f4d62f2c22e44d7f4ed81d343bbd5948187b552" translate="yes" xml:space="preserve">
          <source>File Positioning</source>
          <target state="translated">Позиционирование файла</target>
        </trans-unit>
        <trans-unit id="caf0d3d658336bf20ddebae36071045171882da3" translate="yes" xml:space="preserve">
          <source>File attribute constants. Returned by &lt;code&gt;attrLetsToBits&lt;/code&gt; and used in the &lt;code&gt;$uFlags&lt;/code&gt; argument to &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96516abc6bebff8831916b6857ba16f8d6fdd597" translate="yes" xml:space="preserve">
          <source>File blocksize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1d825c16be42dcd9eac27ad46d89bd0981bbff" translate="yes" xml:space="preserve">
          <source>File can only be processed in a sequential manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2776d2d7b4fdf0cd1f81238e59693ef37962888" translate="yes" xml:space="preserve">
          <source>File characteristic options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a98d820804906c7cbc4a39c07f594d33f47d588" translate="yes" xml:space="preserve">
          <source>File containing the body of the report. Use this to quickly send a prepared message.</source>
          <target state="translated">Файл,содержащий тело доклада.Используйте его для быстрой отправки подготовленного сообщения.</target>
        </trans-unit>
        <trans-unit id="5f1051fa7a3f3c8d871c9acc4c30e002dc5cc847" translate="yes" xml:space="preserve">
          <source>File containing the body of the report. Use this to quickly send a prepared report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1653ca6d1bd7cd87184004c951688277cfc7e58a" translate="yes" xml:space="preserve">
          <source>File has been &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt;ed, or should be deleted on &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Файл был &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; отредактирован или должен быть удален при &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7d76d456ba6834e47b16e8b42081256fccbf9d8" translate="yes" xml:space="preserve">
          <source>File has been &lt;code&gt;unlink()&lt;/code&gt;ed, or should be deleted on &lt;code&gt;close()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f5f1c8650cee1864991294b341c02bd2c5622a" translate="yes" xml:space="preserve">
          <source>File locking using the &lt;code&gt;F_GETLK&lt;/code&gt; command to &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; is a stub that returns &lt;code&gt;ENOSYS&lt;/code&gt; .</source>
          <target state="translated">Блокировка файла с использованием команды &lt;code&gt;F_GETLK&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; - это заглушка, которая возвращает &lt;code&gt;ENOSYS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf0b815315c825f3269c03242b3b198ccea50919" translate="yes" xml:space="preserve">
          <source>File locking using the &lt;code&gt;F_GETLK&lt;/code&gt; command to &lt;code&gt;fcntl()&lt;/code&gt; is a stub that returns &lt;code&gt;ENOSYS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa00f1ae5815d6eaab80150e5fdb0f9d6b07ccd" translate="yes" xml:space="preserve">
          <source>File names are case insensitive, but case preserving. A pathname that contains a backslash or drive letter is a Win32 pathname, and not subject to the translations applied to POSIX style pathnames, but cygwin will warn you, so better convert them to POSIX.</source>
          <target state="translated">Имена файлов не чувствительны к регистру,но сохраняют регистр.Патерн,содержащий обратный слеш или букву диска,является Win32-патерн именем,и не зависит от переводов,применяемых к POSIX-патерн именам,но cygwin предупредит вас,так что лучше конвертировать их в POSIX.</target>
        </trans-unit>
        <trans-unit id="9b9dd24c17d5e17210a1ec27701054547639bdec" translate="yes" xml:space="preserve">
          <source>File names on Mac OS X will at the OS-level be converted to NFD-form. A file created by passing a NFC-filename will come in NFD-form from readdir(). See &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; for details of NFD/NFC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54cd453577fef9dfe80492dac9d8160d18c32b6" translate="yes" xml:space="preserve">
          <source>File option flag constants. Used in the &lt;code&gt;$uFlags&lt;/code&gt; argument to &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5919b0472cf28437e422bab84192d0873dd39a7" translate="yes" xml:space="preserve">
          <source>File or pipe to print line number info to. If it is a pipe (say, &lt;code&gt;|visual_perl_db&lt;/code&gt;), then a short message is used. This is the mechanism used to interact with a slave editor or visual debugger, such as the special &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;emacs&lt;/code&gt; hooks, or the &lt;code&gt;ddd&lt;/code&gt; graphical debugger.</source>
          <target state="translated">Файл или канал для вывода информации о номере строки. Если это канал (скажем, &lt;code&gt;|visual_perl_db&lt;/code&gt; ), то используется короткое сообщение. Это механизм, используемый для взаимодействия с подчиненным редактором или визуальным отладчиком, таким как специальные перехватчики &lt;code&gt;vi&lt;/code&gt; или &lt;code&gt;emacs&lt;/code&gt; , или графический отладчик &lt;code&gt;ddd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f440d36d60fd2a51c020f6cb4de72889008d2bd8" translate="yes" xml:space="preserve">
          <source>File paths in a MANIFEST always use Unix conventions (ie. /) even if you're not on Unix.</source>
          <target state="translated">Пути файлов в MANIFEST всегда используют соглашения Unix (т.е./),даже если вы не на Unix.</target>
        </trans-unit>
        <trans-unit id="7dc956feddc3d2623d44caf49dd0d8e0007cbbed" translate="yes" xml:space="preserve">
          <source>File processing option. Takes one or more of the following (in a comma-separated list if there's more than one)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55fcbf3081365ea2dbdf9c282d44d6f2691df69" translate="yes" xml:space="preserve">
          <source>File record attributes. Takes one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f41398b31aa302780598177a116cea6dc3fa88e" translate="yes" xml:space="preserve">
          <source>File record format. Takes one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f7a88505dbe3f5824d9ceaa62700ff84c27915" translate="yes" xml:space="preserve">
          <source>File sharing constants. Used in the &lt;code&gt;$uShare&lt;/code&gt; argument to &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f11680d8841bb7f976e1fe18696bfa60b7ed127" translate="yes" xml:space="preserve">
          <source>File sharing options. Choose one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d684db983e8b5220e9565d325f0ae9bbe13b32e7" translate="yes" xml:space="preserve">
          <source>File size in bytes</source>
          <target state="translated">Размер файла в байтах</target>
        </trans-unit>
        <trans-unit id="c37e8261b4c2e82f199fe5efaafed18a68582d21" translate="yes" xml:space="preserve">
          <source>File specifications</source>
          <target state="translated">Спецификации файлов</target>
        </trans-unit>
        <trans-unit id="4007cbed1dac0ce1704758796b77f5a74a2f4ba7" translate="yes" xml:space="preserve">
          <source>File specifications containing wildcards are allowed both on the command line and within Perl globs (e.g. &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; ). If the wildcard filespec uses VMS syntax, the resultant filespecs will follow VMS syntax; if a Unix-style filespec is passed in, Unix-style filespecs will be returned. Similar to the behavior of wildcard globbing for a Unix shell, one can escape command line wildcards with double quotation marks &lt;code&gt;&quot;&lt;/code&gt; around a perl program command line argument. However, owing to the stripping of &lt;code&gt;&quot;&lt;/code&gt; characters carried out by the C handling of argv you will need to escape a construct such as this one (in a directory containing the files</source>
          <target state="translated">Спецификации файлов, содержащие подстановочные знаки, разрешены как в командной строке, так и внутри Perl globs (например, &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt; ). Если спецификация файлов с подстановочными знаками использует синтаксис VMS, результирующие спецификации файлов будут следовать синтаксису VMS; если передается спецификация файлов в стиле Unix, будут возвращены спецификации файлов в стиле Unix. Подобно поведению подстановки подстановочных знаков для оболочки Unix, можно обойти подстановочные знаки командной строки двойными кавычками &lt;code&gt;&quot;&lt;/code&gt; вокруг аргумента командной строки программы Perl. Однако из-за удаления &lt;code&gt;&quot;&lt;/code&gt; символов, выполняемых обработкой argv C, вы получите нужно экранировать такую ​​конструкцию, как эта (в каталоге, содержащем файлы</target>
        </trans-unit>
        <trans-unit id="b9816c97101d5dbae273f4de135cc76301a683d5" translate="yes" xml:space="preserve">
          <source>File specifications containing wildcards are allowed both on the command line and within Perl globs (e.g. &lt;code&gt;&amp;lt;*.c&amp;gt;&lt;/code&gt;). If the wildcard filespec uses VMS syntax, the resultant filespecs will follow VMS syntax; if a Unix-style filespec is passed in, Unix-style filespecs will be returned. Similar to the behavior of wildcard globbing for a Unix shell, one can escape command line wildcards with double quotation marks &lt;code&gt;&quot;&lt;/code&gt; around a perl program command line argument. However, owing to the stripping of &lt;code&gt;&quot;&lt;/code&gt; characters carried out by the C handling of argv you will need to escape a construct such as this one (in a directory containing the files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1068e78c1a68e0282abb193b14dbb089a1a5b4e" translate="yes" xml:space="preserve">
          <source>File system characteristics constants. Placed in the &lt;code&gt;$ouFsFlags&lt;/code&gt; argument to &lt;code&gt;GetVolumeInformation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2125f6818b6fbbdb018675e8c02915ed59c3e1f9" translate="yes" xml:space="preserve">
          <source>File system control operations. Used in the &lt;code&gt;$uIoControlCode&lt;/code&gt; argument to &lt;code&gt;DeviceIoControl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27043a55dfbf95c6c91cec59ce3a34dd5e54519" translate="yes" xml:space="preserve">
          <source>File systems might vary in what encoding is to be used for filenames. Since this module has no way to actually figure out what the is correct it goes with the best guess which is to assume filenames are encoding according to the current locale. Users are advised to always specify UTF-8 as the locale charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8c7530b6eaca2532adfa79d220d7c301f8b86e" translate="yes" xml:space="preserve">
          <source>File tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e67adde1ffcac9182fdc414ea1c59b8537d99ba" translate="yes" xml:space="preserve">
          <source>File to output the results to instead of sending as an email. Useful particularly when running perlbug on a machine with no direct internet connection.</source>
          <target state="translated">Файл для вывода результатов вместо отправки по электронной почте.Полезно,в частности,при запуске perlbug на машине без прямого подключения к Интернету.</target>
        </trans-unit>
        <trans-unit id="5c4f076ba5b3985d1e9a4302dcb8d52cb294c95e" translate="yes" xml:space="preserve">
          <source>File to output the results to. Defaults to &lt;b&gt;perlbug.rep&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8524b9f3585575ad7dfc6698bc36a14994079bf5" translate="yes" xml:space="preserve">
          <source>File to save your history?</source>
          <target state="translated">Файл,чтобы спасти свою историю?</target>
        </trans-unit>
        <trans-unit id="1e509862932466ee82e463191172e37b3cea6512" translate="yes" xml:space="preserve">
          <source>File type -- numeric, but comparable to exported constants -- see Archive::Tar's documentation</source>
          <target state="translated">Тип файла --цифровой,но сравнимый с экспортируемыми константами --смотрите документацию Archive::Tar's documentation</target>
        </trans-unit>
        <trans-unit id="0bb575a41b8c42befee7e0cd23f0879559755be1" translate="yes" xml:space="preserve">
          <source>File type constants. Returned by &lt;code&gt;GetFileType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568294b0f0962c9dce2ed86a0644f0e488d0d8e1" translate="yes" xml:space="preserve">
          <source>File/Spec.pm</source>
          <target state="translated">File/Spec.pm</target>
        </trans-unit>
        <trans-unit id="0197048641dc3512ca3dbea2bb733e20d4882d0f" translate="yes" xml:space="preserve">
          <source>File::Basename</source>
          <target state="translated">File::Basename</target>
        </trans-unit>
        <trans-unit id="7643855ad41fd167cd1d19d2fc94a1d9a81f520d" translate="yes" xml:space="preserve">
          <source>File::Basename - Parse file paths into directory, filename and suffix.</source>
          <target state="translated">Файл::Basename-Разобрать пути к файлам в каталоге,имя файла и суффикс.</target>
        </trans-unit>
        <trans-unit id="a8d61a1262a25e3e4a3b5f743fafe0ce5ae8780f" translate="yes" xml:space="preserve">
          <source>File::Compare</source>
          <target state="translated">File::Compare</target>
        </trans-unit>
        <trans-unit id="d243fbac9648f0d6978bc733f70a7d07c623feba" translate="yes" xml:space="preserve">
          <source>File::Compare - Compare files or filehandles</source>
          <target state="translated">Файл::Сравнение-Сравнение файлов или файловых дескрипторов</target>
        </trans-unit>
        <trans-unit id="fb8db5002f44755b6149a0ab982916a8075daf8b" translate="yes" xml:space="preserve">
          <source>File::Compare was written by Nick Ing-Simmons. Its original documentation was written by Chip Salzenberg.</source>
          <target state="translated">Файл::Сравнение написал Ник Инг-Симмонс.Его оригинальная документация была написана Чипом Зальценбергом.</target>
        </trans-unit>
        <trans-unit id="e84e49c86f519c366047d4a68a91823d7167c285" translate="yes" xml:space="preserve">
          <source>File::Compare::cmp is a synonym for File::Compare::compare. It is exported from File::Compare only by request.</source>
          <target state="translated">Файл::Сравнить::cmp является синонимом для File::Compare::compare.Он экспортируется из File::Compare только по запросу.</target>
        </trans-unit>
        <trans-unit id="cced95c8b6209ce495a6cd5c577674c5e6e53b3a" translate="yes" xml:space="preserve">
          <source>File::Compare::compare and its sibling functions return 0 if the files are equal, 1 if the files are unequal, or -1 if an error was encountered.</source>
          <target state="translated">Файл::Сравнить::сравнивать и его родственные функции возвращают 0,если файлы равны,1,если файлы неравны,или -1,если произошла ошибка.</target>
        </trans-unit>
        <trans-unit id="def94ece5481d3beb5558118d685c1a96647aecc" translate="yes" xml:space="preserve">
          <source>File::Compare::compare_text does a line by line comparison of the two files. It stops as soon as a difference is detected. compare_text() accepts an optional third argument: This must be a CODE reference to a line comparison function, which returns 0 when both lines are considered equal. For example:</source>
          <target state="translated">Файл::Compare::comparison_text делает сравнение двух файлов построчно.Оно останавливается,как только обнаруживается разница.функция compare_text()принимает необязательный третий аргумент:Это должна быть CODE-ссылка на функцию сравнения строк,которая возвращает 0,когда обе строки считаются равными.Например:</target>
        </trans-unit>
        <trans-unit id="bc3cb79c7383464148f9e6e9b35dc66828ee89ef" translate="yes" xml:space="preserve">
          <source>File::Copy</source>
          <target state="translated">File::Copy</target>
        </trans-unit>
        <trans-unit id="054808322e1fad4b177e7be1b21dbd651d7b51df" translate="yes" xml:space="preserve">
          <source>File::Copy - Copy files or filehandles</source>
          <target state="translated">Файл::Копировать-Копировать файлы или файловые дескрипторы</target>
        </trans-unit>
        <trans-unit id="f2e6bb244559c9a61df5a32393bbd55e499cf28c" translate="yes" xml:space="preserve">
          <source>File::Copy also provides the &lt;code&gt;syscopy&lt;/code&gt; routine, which copies the file specified in the first parameter to the file specified in the second parameter, preserving OS-specific attributes and file structure. For Unix systems, this is equivalent to the simple &lt;code&gt;copy&lt;/code&gt; routine, which doesn't preserve OS-specific attributes. For VMS systems, this calls the &lt;code&gt;rmscopy&lt;/code&gt; routine (see below). For OS/2 systems, this calls the &lt;code&gt;syscopy&lt;/code&gt; XSUB directly. For Win32 systems, this calls &lt;code&gt;Win32::CopyFile&lt;/code&gt; .</source>
          <target state="translated">File :: Copy также предоставляет подпрограмму &lt;code&gt;syscopy&lt;/code&gt; , которая копирует файл, указанный в первом параметре, в файл, указанный во втором параметре, с сохранением специфичных для ОС атрибутов и файловой структуры. Для систем Unix это эквивалентно простой процедуре &lt;code&gt;copy&lt;/code&gt; , которая не сохраняет атрибуты, специфичные для ОС. Для систем VMS это вызывает процедуру &lt;code&gt;rmscopy&lt;/code&gt; (см. Ниже). Для систем OS / 2 это напрямую вызывает &lt;code&gt;syscopy&lt;/code&gt; syscopy. Для систем Win32 это вызывает &lt;code&gt;Win32::CopyFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54b31fb1c73438315d9d76e490580acedf76b91a" translate="yes" xml:space="preserve">
          <source>File::Copy also provides the &lt;code&gt;syscopy&lt;/code&gt; routine, which copies the file specified in the first parameter to the file specified in the second parameter, preserving OS-specific attributes and file structure. For Unix systems, this is equivalent to the simple &lt;code&gt;copy&lt;/code&gt; routine, which doesn't preserve OS-specific attributes. For VMS systems, this calls the &lt;code&gt;rmscopy&lt;/code&gt; routine (see below). For OS/2 systems, this calls the &lt;code&gt;syscopy&lt;/code&gt; XSUB directly. For Win32 systems, this calls &lt;code&gt;Win32::CopyFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f88864b88bba7acff99452234fd97bf0f47f99" translate="yes" xml:space="preserve">
          <source>File::Copy was written by Aaron Sherman</source>
          <target state="translated">Файл::Копия написана Аароном Шерманом.</target>
        </trans-unit>
        <trans-unit id="f01a5358f4ca69063ca392607e003dc733b2597f" translate="yes" xml:space="preserve">
          <source>File::DosGlob</source>
          <target state="translated">File::DosGlob</target>
        </trans-unit>
        <trans-unit id="5c17116d51c1f03e40c8b694ba6c585eabe2a321" translate="yes" xml:space="preserve">
          <source>File::DosGlob - DOS like globbing and then some</source>
          <target state="translated">Файл::DosGlob-DOS любит глотать,а потом некоторые</target>
        </trans-unit>
        <trans-unit id="bfa471141e1f7096bf78ca1f82e51c1164281798" translate="yes" xml:space="preserve">
          <source>File::Fetch</source>
          <target state="translated">File::Fetch</target>
        </trans-unit>
        <trans-unit id="dcff4894464604256beca2d13f60a2e0200dbabf" translate="yes" xml:space="preserve">
          <source>File::Fetch - A generic file fetching mechanism</source>
          <target state="translated">Файл::Fetch-Общий механизм извлечения файлов</target>
        </trans-unit>
        <trans-unit id="c8dc9651ac05b80071b1feb534cf5a5de8f9de03" translate="yes" xml:space="preserve">
          <source>File::Fetch is a generic file fetching mechanism.</source>
          <target state="translated">File::Fetch-это общий механизм извлечения файлов.</target>
        </trans-unit>
        <trans-unit id="2cb1276427ae5064c5b11d564d8f990a7923f8fb" translate="yes" xml:space="preserve">
          <source>File::Fetch is able to fetch a variety of uris, by using several external programs and modules.</source>
          <target state="translated">File::Fetch имеет возможность получать различные uris,используя несколько внешних программ и модулей.</target>
        </trans-unit>
        <trans-unit id="652b8a474fd7bf89a6c10654387f68b029ba4afc" translate="yes" xml:space="preserve">
          <source>File::Find</source>
          <target state="translated">File::Find</target>
        </trans-unit>
        <trans-unit id="dabbc689655c180a270054bdf94079c67c56996d" translate="yes" xml:space="preserve">
          <source>File::Find - Traverse a directory tree.</source>
          <target state="translated">Файл::Поиск-Обход дерева каталогов.</target>
        </trans-unit>
        <trans-unit id="602f452d2b6cab137b630932705ec11b4fbc5825" translate="yes" xml:space="preserve">
          <source>File::Find used to produce incorrect results if called recursively. During the development of perl 5.8 this bug was fixed. The first fixed version of File::Find was 1.01.</source>
          <target state="translated">Файл::Поиск,используемый для получения неверных результатов при рекурсивном вызове.Во время разработки perl 5.8 эта ошибка была исправлена.Первой исправленной версией File::Find была 1.01.</target>
        </trans-unit>
        <trans-unit id="cf7493e2714621d4472c83b7fb17367a3f07e0e0" translate="yes" xml:space="preserve">
          <source>File::Find::Rule</source>
          <target state="translated">File::Find::Rule</target>
        </trans-unit>
        <trans-unit id="fdabb48d19b73dd4070bb82d3a9c90ab1b81880a" translate="yes" xml:space="preserve">
          <source>File::Glob</source>
          <target state="translated">File::Glob</target>
        </trans-unit>
        <trans-unit id="8d9f792f087977bcc4f2c40334cf6983814a1f4b" translate="yes" xml:space="preserve">
          <source>File::Glob - Perl extension for BSD glob routine</source>
          <target state="translated">Файл::Glob-Расширение на Perl для глобуса BSD</target>
        </trans-unit>
        <trans-unit id="5c88309ce18d22b575a2e92f21ed146adc833a5f" translate="yes" xml:space="preserve">
          <source>File::Glob::bsd_glob() implements the FreeBSD glob(3) routine, which is a superset of the POSIX glob() (described in IEEE Std 1003.2 &quot;POSIX.2&quot;). bsd_glob() takes a mandatory &lt;code&gt;pattern&lt;/code&gt; argument, and an optional &lt;code&gt;flags&lt;/code&gt; argument, and returns a list of filenames matching the pattern, with interpretation of the pattern modified by the &lt;code&gt;flags&lt;/code&gt; variable.</source>
          <target state="translated">File :: Glob :: bsd_glob () реализует подпрограмму FreeBSD glob (3), которая является надмножеством POSIX glob () (описанной в IEEE Std 1003.2 &amp;laquo;POSIX.2&amp;raquo;). bsd_glob () принимает обязательный аргумент &lt;code&gt;pattern&lt;/code&gt; и необязательный аргумент &lt;code&gt;flags&lt;/code&gt; и возвращает список имен файлов, соответствующих шаблону, с интерпретацией шаблона, измененного переменной &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f87067e2d659155bfc6a9854ce51bc4675107538" translate="yes" xml:space="preserve">
          <source>File::Glob::glob() was removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1ec8d2c1b6a1f048a3125e50262ab2025f6341" translate="yes" xml:space="preserve">
          <source>File::Glob::glob() will disappear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53041d7596d97d11a152927840695227b7f906a6" translate="yes" xml:space="preserve">
          <source>File::Glob::glob() will disappear in perl 5.30. Use File::Glob::bsd_glob() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca454d7c1a5b19f064af8b037120ba60d6c7a525" translate="yes" xml:space="preserve">
          <source>File::GlobMapper</source>
          <target state="translated">File::GlobMapper</target>
        </trans-unit>
        <trans-unit id="7f7d175bf488aed0eb444cb11c08455ad8599ba6" translate="yes" xml:space="preserve">
          <source>File::GlobMapper - Extend File Glob to Allow Input and Output Files</source>
          <target state="translated">Файл::GlobMapper-Расширить глобус файлов,чтобы разрешить входные и выходные файлы</target>
        </trans-unit>
        <trans-unit id="1ee8431a726a8a5ed8c4e143748ae9ecf3b924c2" translate="yes" xml:space="preserve">
          <source>File::Path</source>
          <target state="translated">File::Path</target>
        </trans-unit>
        <trans-unit id="1686306ed7a2e3c93f30ae5144bea665fa4f6ad8" translate="yes" xml:space="preserve">
          <source>File::Path - Create or remove directory trees</source>
          <target state="translated">Файл::Путь-создание или удаление деревьев каталогов</target>
        </trans-unit>
        <trans-unit id="e96111b9d00440bfa3194f5f2b0d6ee8ef1d305a" translate="yes" xml:space="preserve">
          <source>File::Path::Tiny</source>
          <target state="translated">File::Path::Tiny</target>
        </trans-unit>
        <trans-unit id="a4ef679a008a6f84865a9e072a31d15ade694f3b" translate="yes" xml:space="preserve">
          <source>File::Remove</source>
          <target state="translated">File::Remove</target>
        </trans-unit>
        <trans-unit id="315013b7403b971bbccc00acbcaa29af9f35ca59" translate="yes" xml:space="preserve">
          <source>File::Spec</source>
          <target state="translated">File::Spec</target>
        </trans-unit>
        <trans-unit id="e03ff856a0868930dbc9cd6d64ff461d1bdaaabc" translate="yes" xml:space="preserve">
          <source>File::Spec &amp;lt;= 0.83 has a bug where the file part of catfile is not canonicalized. This override fixes that bug.</source>
          <target state="translated">File :: Spec &amp;lt;= 0.83 имеет ошибку, из-за которой файловая часть catfile не канонизируется. Это переопределение исправляет эту ошибку.</target>
        </trans-unit>
        <trans-unit id="5c2545f01462091353041ce999852a980063ef93" translate="yes" xml:space="preserve">
          <source>File::Spec - portably perform operations on file names</source>
          <target state="translated">Файл::Spec-portably выполнять операции с именами файлов</target>
        </trans-unit>
        <trans-unit id="9959b013bbb548a84f49a147644db4f6f8b5d759" translate="yes" xml:space="preserve">
          <source>File::Spec for AmigaOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377c35de2ed196f9c5385b1edfdc4eb6ca2a2256" translate="yes" xml:space="preserve">
          <source>File::Spec for Mac OS (Classic)</source>
          <target state="translated">Файл::Spec для Mac OS (Классический)</target>
        </trans-unit>
        <trans-unit id="e9dc37ac681ea880968c6d2c9418018b55ac8a4a" translate="yes" xml:space="preserve">
          <source>File::Spec for Unix, base for other File::Spec modules</source>
          <target state="translated">Файл::Spec для Unix,база для других Файл::Spec модулей</target>
        </trans-unit>
        <trans-unit id="2230f7295f7621836cbf459a68fa7d245b56ed9e" translate="yes" xml:space="preserve">
          <source>File::Spec should now recognise an Amiga style absolute path as well as an Unix style one. Relative paths must always be Unix style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e2d6a2a684c855af3654d42b2d52642b0b206" translate="yes" xml:space="preserve">
          <source>File::Spec wrappers</source>
          <target state="translated">Файл::Spec обертки</target>
        </trans-unit>
        <trans-unit id="57d505f90f23c581eff3d8fd504c98b55b80e3f3" translate="yes" xml:space="preserve">
          <source>File::Spec, File::Spec::Unix, File::Spec::Mac, File::Spec::OS2, File::Spec::Win32, File::Spec::VMS, ExtUtils::MakeMaker</source>
          <target state="translated">Файл::Spec,Файл::Spec::Unix,Файл::Spec::Mac,Файл::Spec::OS2,Файл::Spec::Win32,Файл::Spec::VMS,ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="6d1ab27caf0a586b7f11d8ddbe66da5da11dfe66" translate="yes" xml:space="preserve">
          <source>File::Spec::AmigaOS</source>
          <target state="translated">File::Spec::AmigaOS</target>
        </trans-unit>
        <trans-unit id="f6e69f2aec454b070b65436d8f6402978ebd5c22" translate="yes" xml:space="preserve">
          <source>File::Spec::AmigaOS - File::Spec for AmigaOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641add72b7fdbf25abb0c07f6fb8252f0c914b3a" translate="yes" xml:space="preserve">
          <source>File::Spec::Cygwin</source>
          <target state="translated">File::Spec::Cygwin</target>
        </trans-unit>
        <trans-unit id="cdfed1a8102059cb23af35a0f86b67871164f579" translate="yes" xml:space="preserve">
          <source>File::Spec::Cygwin - methods for Cygwin file specs</source>
          <target state="translated">Файл::Spec::Cygwin-методы для спецификаций файлов Cygwin</target>
        </trans-unit>
        <trans-unit id="e72fdb6ea5dc0105bf8962f6650693bd46fc1242" translate="yes" xml:space="preserve">
          <source>File::Spec::Epoc</source>
          <target state="translated">File::Spec::Epoc</target>
        </trans-unit>
        <trans-unit id="eb8693815ec649d283b89619fb500489b50c284c" translate="yes" xml:space="preserve">
          <source>File::Spec::Epoc - methods for Epoc file specs</source>
          <target state="translated">Файл::Spec::Epoc-методы для спецификаций файлов Epoc</target>
        </trans-unit>
        <trans-unit id="58ab258073f8844f58a13c0e540afd7c70528044" translate="yes" xml:space="preserve">
          <source>File::Spec::Functions</source>
          <target state="translated">File::Spec::Functions</target>
        </trans-unit>
        <trans-unit id="5200acce0e1b5700ec3f6c1ce8b085a9594ec913" translate="yes" xml:space="preserve">
          <source>File::Spec::Functions - portably perform operations on file names</source>
          <target state="translated">Файл::Spec::Функции-portably выполнять операции с именами файлов</target>
        </trans-unit>
        <trans-unit id="fc6db1e1b5de7797ac516f96a446cab61cfc0d6a" translate="yes" xml:space="preserve">
          <source>File::Spec::Mac</source>
          <target state="translated">File::Spec::Mac</target>
        </trans-unit>
        <trans-unit id="d79a8c64b96c6d94516d88b113e5eac3b9da4ad8" translate="yes" xml:space="preserve">
          <source>File::Spec::Mac - File::Spec for Mac OS (Classic)</source>
          <target state="translated">Файл::Spec::Mac-Файл::Spec для Mac OS (Classic)</target>
        </trans-unit>
        <trans-unit id="dd2e7ffeaaea8af26591abffe1ee1b6f540db20c" translate="yes" xml:space="preserve">
          <source>File::Spec::OS2</source>
          <target state="translated">File::Spec::OS2</target>
        </trans-unit>
        <trans-unit id="40e2993be3fcfb49e9dff0bf954a4b4fc18277d7" translate="yes" xml:space="preserve">
          <source>File::Spec::OS2 - methods for OS/2 file specs</source>
          <target state="translated">Файл::Spec::OS2-методы для спецификации файла OS/2</target>
        </trans-unit>
        <trans-unit id="f7a8d4f1ec9c1ccc3e150ac09fa9f67a10dfcb83" translate="yes" xml:space="preserve">
          <source>File::Spec::Unix</source>
          <target state="translated">File::Spec::Unix</target>
        </trans-unit>
        <trans-unit id="0d7acdcbd611107237cca4df6cbd4c594405934d" translate="yes" xml:space="preserve">
          <source>File::Spec::Unix - File::Spec for Unix, base for other File::Spec modules</source>
          <target state="translated">Файл::Spec::Unix-Файл::Spec для Unix,база для других Файл::Spec модулей</target>
        </trans-unit>
        <trans-unit id="bf21f77214d880322c14e8ee35bc09087fde112d" translate="yes" xml:space="preserve">
          <source>File::Spec::VMS</source>
          <target state="translated">File::Spec::VMS</target>
        </trans-unit>
        <trans-unit id="c14aa057f43f4a505144d4210ab15e571114fe16" translate="yes" xml:space="preserve">
          <source>File::Spec::VMS - methods for VMS file specs</source>
          <target state="translated">Файл::Spec::VMS-методы для спецификаций файлов VMS</target>
        </trans-unit>
        <trans-unit id="2822248f9e471c31171c089c3fdd48b3debb74f9" translate="yes" xml:space="preserve">
          <source>File::Spec::Win32</source>
          <target state="translated">File::Spec::Win32</target>
        </trans-unit>
        <trans-unit id="080364c33593182b7f7f657492fb3b2d46eb857c" translate="yes" xml:space="preserve">
          <source>File::Spec::Win32 - methods for Win32 file specs</source>
          <target state="translated">Файл::Spec::Win32-методы для спецификаций Win32 файлов</target>
        </trans-unit>
        <trans-unit id="e0fd4afcd716107e17e677aa59b46d6470fb899a" translate="yes" xml:space="preserve">
          <source>File::Temp</source>
          <target state="translated">File::Temp</target>
        </trans-unit>
        <trans-unit id="3fe450162cf54232d01afd15746195856bbdbb84" translate="yes" xml:space="preserve">
          <source>File::Temp - return name and handle of a temporary file safely</source>
          <target state="translated">Файл::Temp-безопасно вернуть имя и обработку временного файла.</target>
        </trans-unit>
        <trans-unit id="d91ecfa6abec25b99ed11c8b2d5f3accbd385c89" translate="yes" xml:space="preserve">
          <source>File::chdir</source>
          <target state="translated">File::chdir</target>
        </trans-unit>
        <trans-unit id="e83a936a3382a41b1f3f93e3d07a775dcb299d22" translate="yes" xml:space="preserve">
          <source>File::stat</source>
          <target state="translated">File::stat</target>
        </trans-unit>
        <trans-unit id="9639e61c73c9c60e6cfa27fbe83124dab13c12b1" translate="yes" xml:space="preserve">
          <source>File::stat - by-name interface to Perl's built-in stat() functions</source>
          <target state="translated">Файл::stat-интерфейс с именем для встроенных функций stat()Perl.</target>
        </trans-unit>
        <trans-unit id="3aaa59844e5f806feadbfe38925fb866e1cd3f21" translate="yes" xml:space="preserve">
          <source>File::stat ignores VMS ACLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fb53931e742958a9e4d829323954f481f89cc9" translate="yes" xml:space="preserve">
          <source>File::stat ignores use filetest 'access'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5f659600c421b89a34289668dcda4b8fde8960" translate="yes" xml:space="preserve">
          <source>FileCache</source>
          <target state="translated">FileCache</target>
        </trans-unit>
        <trans-unit id="dd4dfad3675618140d4d83ded99b3dd8deb7df16" translate="yes" xml:space="preserve">
          <source>FileCache - keep more files open than the system permits</source>
          <target state="translated">FileCache-держать больше файлов открытыми,чем позволяет система.</target>
        </trans-unit>
        <trans-unit id="a5cc97ff5fda266750b3dee9900ddf98823854aa" translate="yes" xml:space="preserve">
          <source>FileCache does not store the current file offset if it finds it necessary to close a file. When the file is reopened, the offset will be as specified by the original &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; file mode. This could be construed to be a bug.</source>
          <target state="translated">FileCache не сохраняет текущее смещение файла, если считает необходимым закрыть файл. При повторном &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; файла смещение будет таким, как указано в исходном режиме открытия файла. Это может быть истолковано как ошибка.</target>
        </trans-unit>
        <trans-unit id="e560be1c46271875fcf2c02c89a0fafd349042ff" translate="yes" xml:space="preserve">
          <source>FileCache does not store the current file offset if it finds it necessary to close a file. When the file is reopened, the offset will be as specified by the original &lt;code&gt;open&lt;/code&gt; file mode. This could be construed to be a bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f533c3cd15e297fdf4aabaf6ece0f9c1be27a5" translate="yes" xml:space="preserve">
          <source>FileHandle</source>
          <target state="translated">FileHandle</target>
        </trans-unit>
        <trans-unit id="794819fbb3c9526c54cbc3cce598cbc494f7c4eb" translate="yes" xml:space="preserve">
          <source>FileHandle - supply object methods for filehandles</source>
          <target state="translated">FileHandle-методы поставки объектов для файловых дескрипторов</target>
        </trans-unit>
        <trans-unit id="caccd2fd17d3701ac8d56515a20a8537c819133d" translate="yes" xml:space="preserve">
          <source>Filehandle %s opened only for input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452cce9d01c3fa809d5699a1472cfe4e819be842" translate="yes" xml:space="preserve">
          <source>Filehandle %s opened only for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843eb3eeb3ed68dd4ce2373716c6a0c575f1c73d" translate="yes" xml:space="preserve">
          <source>Filehandle %s reopened as %s only for input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7038d4dbae8378dfacc2e299daf12024b15451" translate="yes" xml:space="preserve">
          <source>Filehandle STDIN reopened as %s only for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e986485fa2d06cffe03b4cb5d722b8847e7c236" translate="yes" xml:space="preserve">
          <source>Filehandles</source>
          <target state="translated">Filehandles</target>
        </trans-unit>
        <trans-unit id="d3712e0344c29c9b6fcd8cd69a7b601cf8888c11" translate="yes" xml:space="preserve">
          <source>Filehandles into commands are also known as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745059e953a17e849a5f1d5cc58b8c65a4690f8b" translate="yes" xml:space="preserve">
          <source>Filehandles returned by these functions support the seekable methods.</source>
          <target state="translated">Ручки файлов,возвращаемые этими функциями,поддерживают методы поиска.</target>
        </trans-unit>
        <trans-unit id="d917728ca0ac0c4b9a39ce3d45425ec35d9ebdc0" translate="yes" xml:space="preserve">
          <source>Filename Case</source>
          <target state="translated">Дело о фильме</target>
        </trans-unit>
        <trans-unit id="fb7a4b255171595818c7e230dab6fcf171fbaa94" translate="yes" xml:space="preserve">
          <source>Filenames</source>
          <target state="translated">Filenames</target>
        </trans-unit>
        <trans-unit id="9fd1eebd086da1a91988827a7bacbfddddd4cb35" translate="yes" xml:space="preserve">
          <source>Filenames can be picked arbitrarily; &lt;code&gt;CPAN.pm&lt;/code&gt; always reads all files (in alphabetical order) and takes the key &lt;code&gt;match&lt;/code&gt; (see below in</source>
          <target state="translated">Имена файлов можно выбирать произвольно; &lt;code&gt;CPAN.pm&lt;/code&gt; всегда читает все файлы (в алфавитном порядке) и занимает ключевой &lt;code&gt;match&lt;/code&gt; (см ниже</target>
        </trans-unit>
        <trans-unit id="c9784173a96e4b1510622cabd6602208c753b868" translate="yes" xml:space="preserve">
          <source>Filenames with * and ? will be glob expanded.</source>
          <target state="translated">Фильмы с*и ? будут расширены.</target>
        </trans-unit>
        <trans-unit id="6d5cddfd74101a38239a8348d8bb2b2793e6fb31" translate="yes" xml:space="preserve">
          <source>Fileno</source>
          <target state="translated">Fileno</target>
        </trans-unit>
        <trans-unit id="048ca477f6d313575e8e768358930dd94a0805a0" translate="yes" xml:space="preserve">
          <source>Files I'm trying to fetch have reserved characters or non-ASCII characters in them. What do I do?</source>
          <target state="translated">В файлах,которые я пытаюсь получить,есть зарезервированные символы или не-ASCII символы.Что мне делать?</target>
        </trans-unit>
        <trans-unit id="119c6ebf5f034a0bdf47e2ccf4a4a00d52bae121" translate="yes" xml:space="preserve">
          <source>Files and Filesystems</source>
          <target state="translated">Файлы и файловые системы</target>
        </trans-unit>
        <trans-unit id="1b66cfb0249a670160094a9d9a1226caf17ef912" translate="yes" xml:space="preserve">
          <source>Files and I/O</source>
          <target state="translated">Файлы и входы/выходы</target>
        </trans-unit>
        <trans-unit id="dc090aa9a69fc8ac0e7b03719c86dccf85d1fb26" translate="yes" xml:space="preserve">
          <source>Files can be &quot;renamed&quot; between file systems and the file contents and some attributes will be moved. Directories can only be renamed within one file system. If there is already a file or directory named &lt;code&gt;$sNewName&lt;/code&gt;, then &lt;code&gt;MoveFile&lt;/code&gt; will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcfdef82017aca1b62d322f75f45269c52cebb0" translate="yes" xml:space="preserve">
          <source>Files older than v2.0 will have the one of the version numbers &quot;-1&quot;, &quot;0&quot; or &quot;1&quot;. No minor number was used at that time.</source>
          <target state="translated">Файлы старше версии v2.0 будут иметь один из номеров версии &quot;-1&quot;,&quot;0&quot; или &quot;1&quot;.Незначительный номер в то время не использовался.</target>
        </trans-unit>
        <trans-unit id="ce0b65cbec28e6a52a00f89d26a974e92b387838" translate="yes" xml:space="preserve">
          <source>Files opened without an encoding argument will be in UTF-8:</source>
          <target state="translated">Файлы,открытые без аргумента кодировки,будут в UTF-8:</target>
        </trans-unit>
        <trans-unit id="646de437489432c391060b841f63b51dd2e343a9" translate="yes" xml:space="preserve">
          <source>Files which are not &lt;code&gt;mmap()&lt;/code&gt; -able revert to behaving like the &lt;code&gt;:perlio&lt;/code&gt; layer. Writes also behave like the &lt;code&gt;:perlio&lt;/code&gt; layer, as &lt;code&gt;mmap()&lt;/code&gt; for write needs extra house-keeping (to extend the file) which negates any advantage.</source>
          <target state="translated">Файлы, не поддерживающие &lt;code&gt;mmap()&lt;/code&gt; возвращаются к &lt;code&gt;:perlio&lt;/code&gt; . Запись также ведет себя как слой &lt;code&gt;:perlio&lt;/code&gt; , поскольку &lt;code&gt;mmap()&lt;/code&gt; для записи требует дополнительного обслуживания (для расширения файла), что сводит на нет любое преимущество.</target>
        </trans-unit>
        <trans-unit id="24cde58079ede41bb0ed81d8b77089f0773128f0" translate="yes" xml:space="preserve">
          <source>Files which are not &lt;code&gt;mmap()&lt;/code&gt;-able revert to behaving like the &lt;code&gt;:perlio&lt;/code&gt; layer. Writes also behave like the &lt;code&gt;:perlio&lt;/code&gt; layer, as &lt;code&gt;mmap()&lt;/code&gt; for write needs extra house-keeping (to extend the file) which negates any advantage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adb6736cf2c9ae017b128f98738ffbae0e58655" translate="yes" xml:space="preserve">
          <source>Fill</source>
          <target state="translated">Fill</target>
        </trans-unit>
        <trans-unit id="a4b96b98ba0acc4a2c64164e14e7284859d739a2" translate="yes" xml:space="preserve">
          <source>Fill &lt;code&gt;sv&lt;/code&gt; with current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a624b168584689d4ad50d72852da812cefd7de42" translate="yes" xml:space="preserve">
          <source>Fill the sv with current working directory</source>
          <target state="translated">Заполните sv текущим рабочим каталогом</target>
        </trans-unit>
        <trans-unit id="7c991b879751864162456f044ae4b061287a9ddd" translate="yes" xml:space="preserve">
          <source>Fill up memory with a byte pattern (a byte repeated over and over again) that hopefully catches attempts to access uninitialized memory.</source>
          <target state="translated">Заполнение памяти байтовым паттерном (байт,повторяющийся снова и снова),который,надеюсь,поймает попытки доступа к неинициализированной памяти.</target>
        </trans-unit>
        <trans-unit id="1caa98b8fe4b092dfaf90807d48e36c7313a1fe3" translate="yes" xml:space="preserve">
          <source>Filter DBM keys/values</source>
          <target state="translated">Фильтр DBM ключи/значения</target>
        </trans-unit>
        <trans-unit id="49db338137c69e197263cbd2a2a02d160fa11306" translate="yes" xml:space="preserve">
          <source>Filter for DBM_Filter</source>
          <target state="translated">Фильтр для DBM_Filter</target>
        </trans-unit>
        <trans-unit id="155bc63929438bf5891026e88a669c019cfee1eb" translate="yes" xml:space="preserve">
          <source>Filter the file list so that all the test files run match /(LIST|OF|PATTERNS)/. Note that with this form the patterns are joined by '|' and you cannot supply a list of files, instead the test files are obtained from the MANIFEST.</source>
          <target state="translated">Отфильтровать список файлов так,чтобы все запущенные тестовые файлы соответствовали /(LIST|OF|PATTERNS)/.Обратите внимание,что при такой форме к шаблонам присоединяется &quot;|&quot;,и вы не можете предоставить список файлов,вместо этого тестовые файлы получаются из MANIFEST'а.</target>
        </trans-unit>
        <trans-unit id="d5a596c0ce5a2b7a7aba6646e13f8fdc098b26bf" translate="yes" xml:space="preserve">
          <source>Filter the file list so that all the test files run match PATTERN. Note that this form is distinct from the &lt;b&gt;-re LIST OF PATTERNS&lt;/b&gt; form below in that it allows the file list to be provided as well.</source>
          <target state="translated">Отфильтруйте список файлов, чтобы все запускаемые тестовые файлы соответствовали ШАБЛОНУ. Обратите внимание, что эта форма отличается от формы &lt;b&gt;-re СПИСОК ШАБЛОНОВ&lt;/b&gt; ниже тем, что она позволяет также предоставить список файлов.</target>
        </trans-unit>
        <trans-unit id="42d3a31d1c9ff4adea6e61106fd398bfebcdb7bc" translate="yes" xml:space="preserve">
          <source>Filter::Simple</source>
          <target state="translated">Filter::Simple</target>
        </trans-unit>
        <trans-unit id="8902388c9d4dcc551448da4cca3d317ed63a6414" translate="yes" xml:space="preserve">
          <source>Filter::Simple - Simplified source filtering</source>
          <target state="translated">Фильтр::Простая-Упрощенная фильтрация источников</target>
        </trans-unit>
        <trans-unit id="4d594a2e8094dc15ca9e42ca0d84c3e0a33987d2" translate="yes" xml:space="preserve">
          <source>Filter::Simple generates a special &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine for your module (see &lt;a href=&quot;#How-it-works&quot;&gt;How it works&lt;/a&gt;) which would normally replace any &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine you might have explicitly declared.</source>
          <target state="translated">Filter :: Simple генерирует специальную подпрограмму &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; для вашего модуля (см. &lt;a href=&quot;#How-it-works&quot;&gt;Как это работает&lt;/a&gt; ), которая обычно заменяет любую подпрограмму &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; вы могли явно объявить.</target>
        </trans-unit>
        <trans-unit id="55a67bc6b5c9e931b9cfc1d00997088616960c2d" translate="yes" xml:space="preserve">
          <source>Filter::Simple generates a special &lt;code&gt;import&lt;/code&gt; subroutine for your module (see &lt;a href=&quot;#How-it-works&quot;&gt;&quot;How it works&quot;&lt;/a&gt;) which would normally replace any &lt;code&gt;import&lt;/code&gt; subroutine you might have explicitly declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b045aab2dc3c12f8983dd3d86529beb5ee5d291" translate="yes" xml:space="preserve">
          <source>Filter::Simple is now maintained by the Perl5-Porters. Please submit bug via the &lt;code&gt;perlbug&lt;/code&gt; tool that comes with your perl. For usage instructions, read &lt;code&gt;perldoc perlbug&lt;/code&gt; or possibly &lt;code&gt;man perlbug&lt;/code&gt; . For mostly anything else, please contact &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">Filter :: Simple теперь поддерживается Perl5-Porters. Пожалуйста, отправьте сообщение об ошибке с помощью инструмента &lt;code&gt;perlbug&lt;/code&gt; , который поставляется с вашим perl. Инструкции по использованию см. В &lt;code&gt;perldoc perlbug&lt;/code&gt; или, возможно, в &lt;code&gt;man perlbug&lt;/code&gt; . По всем остальным вопросам обращайтесь по адресу &amp;lt;perl5-porters@perl.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="5efffe4d78970f8e0d9b73652dcdf366fc15a91e" translate="yes" xml:space="preserve">
          <source>Filter::Simple is now maintained by the Perl5-Porters. Please submit bug via the &lt;code&gt;perlbug&lt;/code&gt; tool that comes with your perl. For usage instructions, read &lt;code&gt;perldoc perlbug&lt;/code&gt; or possibly &lt;code&gt;man perlbug&lt;/code&gt;. For mostly anything else, please contact &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19879ac495533ad1077ba2c41a6a1388fc0daf98" translate="yes" xml:space="preserve">
          <source>Filter::Simple supports this type of filtering by automatically exporting the &lt;code&gt;FILTER_ONLY&lt;/code&gt; subroutine.</source>
          <target state="translated">Filter :: Simple поддерживает этот тип фильтрации, автоматически экспортируя подпрограмму &lt;code&gt;FILTER_ONLY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7738927e99aa19b5661cca71074c5a3666ddd066" translate="yes" xml:space="preserve">
          <source>Filter::Util::Call</source>
          <target state="translated">Filter::Util::Call</target>
        </trans-unit>
        <trans-unit id="7dc52ff0d48741e56609be222232752914b7f609" translate="yes" xml:space="preserve">
          <source>Filter::Util::Call - Perl Source Filter Utility Module</source>
          <target state="translated">Фильтр::Util::Call-Утилитный модуль фильтра Perl Source</target>
        </trans-unit>
        <trans-unit id="04afd517e71c6ed7b121bd0e3b2068ee5c553269" translate="yes" xml:space="preserve">
          <source>Filter_Key_Push</source>
          <target state="translated">Filter_Key_Push</target>
        </trans-unit>
        <trans-unit id="2601ba4f6f8e8afb00fbd46ca3a26e97043b25fc" translate="yes" xml:space="preserve">
          <source>Filter_Push</source>
          <target state="translated">Filter_Push</target>
        </trans-unit>
        <trans-unit id="0a1a4c0dfa7b456e4ecab8567d85b94d3dafc1a1" translate="yes" xml:space="preserve">
          <source>Filter_Value_Push</source>
          <target state="translated">Filter_Value_Push</target>
        </trans-unit>
        <trans-unit id="0cabe77e4a0f9142f83082a357c9dd9516395a45" translate="yes" xml:space="preserve">
          <source>Filtering only specific components of source code</source>
          <target state="translated">Фильтрация только определенных компонентов исходного кода</target>
        </trans-unit>
        <trans-unit id="0d724af3cdfe968bbaf60122abf6756e0bff8902" translate="yes" xml:space="preserve">
          <source>Filtering only the code parts of source code</source>
          <target state="translated">Фильтрация только частей кода исходного кода</target>
        </trans-unit>
        <trans-unit id="064b3406638df42c905600b3e499487ada8eb46b" translate="yes" xml:space="preserve">
          <source>Filters Included</source>
          <target state="translated">Фильтры включены</target>
        </trans-unit>
        <trans-unit id="c7c6a6ca2fc222f307864374baefcbe6fd304196" translate="yes" xml:space="preserve">
          <source>Filters a list of values to remove subsequent duplicates, as judged by a DWIM-ish string equality or &lt;code&gt;undef&lt;/code&gt; test. Preserves the order of unique elements, and retains the first value of any duplicate set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f26bfb39da45fe446ab2ace33aa6a4dfb8d959e" translate="yes" xml:space="preserve">
          <source>Filters a list of values to remove subsequent duplicates, as judged by a numerical equality test. Preserves the order of unique elements, and retains the first value of any duplicate set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e1b8102595dc1b879e1156836436fadd592ceb" translate="yes" xml:space="preserve">
          <source>Filters a list of values to remove subsequent duplicates, as judged by a string equality test. Preserves the order of unique elements, and retains the first value of any duplicate set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700795207cadfd27a83211dfeea9a61a315dd6d9" translate="yes" xml:space="preserve">
          <source>Filters a list of values to remove subsequent duplicates, as judged by an integer numerical equality test. Preserves the order of unique elements, and retains the first value of any duplicate set. Values in the returned list will be coerced into integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a48634134a41cfb47919ca0620c4a4eb370a44f" translate="yes" xml:space="preserve">
          <source>Filters can be created in two main ways</source>
          <target state="translated">Фильтры могут быть созданы двумя основными способами</target>
        </trans-unit>
        <trans-unit id="f3f0a8fb43e79067faffa3f02bee42380f1453b8" translate="yes" xml:space="preserve">
          <source>Filters everything. Identical in effect to &lt;code&gt;FILTER&lt;/code&gt; .</source>
          <target state="translated">Все фильтрует. По действию &lt;code&gt;FILTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bbcb71b4ba53e50f605e87980abfc0509da65aa" translate="yes" xml:space="preserve">
          <source>Filters everything. Identical in effect to &lt;code&gt;FILTER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7559e7e19f13b99b80c4310a808291f2993fd" translate="yes" xml:space="preserve">
          <source>Filters only Perl quotelikes (as interpreted by &lt;code&gt;&amp;amp;Text::Balanced::extract_quotelike&lt;/code&gt; ).</source>
          <target state="translated">Фильтрует только кавычки Perl (как интерпретируется &lt;code&gt;&amp;amp;Text::Balanced::extract_quotelike&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="afc20f79a9a572c35fd24561f6a83d84c1928e1a" translate="yes" xml:space="preserve">
          <source>Filters only Perl quotelikes (as interpreted by &lt;code&gt;&amp;amp;Text::Balanced::extract_quotelike&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46715be5a6c7c637a101bd3fb514ca34a022fd4" translate="yes" xml:space="preserve">
          <source>Filters only the pattern literal parts of a Perl quotelike (i.e. the contents of a &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; or an &lt;code&gt;&lt;a href=&quot;../functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, the first half of an &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Отфильтровывает только части литералов шаблона в кавычках Perl (т. Е. Содержимое &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , первая половина &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d870e55b5ec07b87a5f7e4519042304d42ec2f31" translate="yes" xml:space="preserve">
          <source>Filters only the pattern literal parts of a Perl quotelike (i.e. the contents of a &lt;code&gt;qr//&lt;/code&gt; or an &lt;code&gt;m//&lt;/code&gt;, the first half of an &lt;code&gt;s///&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6c7da3a59381ce364937477b0de797b35ca66f" translate="yes" xml:space="preserve">
          <source>Filters only the string literal parts of a Perl quotelike (i.e. the contents of a string literal, either half of a &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;, the second half of an &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Фильтрует только части строкового литерала кавычки Perl (т. Е. Содержимое строкового литерала, либо половину &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; , либо вторую половину &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="20f3795aaefe54c90ea0bd4135d4048324d2a28b" translate="yes" xml:space="preserve">
          <source>Filters only the string literal parts of a Perl quotelike (i.e. the contents of a string literal, either half of a &lt;code&gt;tr///&lt;/code&gt;, the second half of an &lt;code&gt;s///&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c3fceb1f21a8d2c7a7604d5f15909ba3c4e6bc" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются POD или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd5107f13a5a36c0e20ccaa94005d515585510f" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD or &lt;code&gt;__DATA__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0e4690844c0e997ddfae93ebb04be08becd5b9" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются POD, комментариями или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63d1267df0fbacd4b2081c851758f74bcc49c06b" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c4703434d54b35a96afa23550eee383050c8e7" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются кавычками, POD, комментариями или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67191f1183b6941ed0c22be475d8782510da690a" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, comments, or &lt;code&gt;__DATA__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6768e7cdb67b7548d17f5b47c853204a354ef8a8" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, or &lt;code&gt;__DATA__&lt;/code&gt; .</source>
          <target state="translated">Фильтрует только те разделы исходного кода, которые не являются кавычками, POD или &lt;code&gt;__DATA__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58ed29de26d37c777bddc03a8e289c5c5c06ef78" translate="yes" xml:space="preserve">
          <source>Filters only those sections of the source code that are not quotelikes, POD, or &lt;code&gt;__DATA__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a835e84e6476a3627bf2cb0ac10839ce913c16ff" translate="yes" xml:space="preserve">
          <source>Final $ should be \$ or $name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5efd60aef7150698692bd9522cefaa126df2ec" translate="yes" xml:space="preserve">
          <source>Finally there is the 'default', and the related 'default_get' and 'default_set' options. These options control the &quot;default&quot; object which is provided by the class interface to the methods. Setting &lt;code&gt;default_get&lt;/code&gt; to true tells the constructor to return the default object if it is defined. Setting &lt;code&gt;default_set&lt;/code&gt; to true tells the constructor to make the default object the constructed object. Setting the &lt;code&gt;default&lt;/code&gt; option is like setting both to true. This is used primarily internally and probably isn't interesting to any real user.</source>
          <target state="translated">Наконец, есть &quot;default&quot; и связанные параметры &quot;default_get&quot; и &quot;default_set&quot;. Эти параметры управляют объектом &quot;по умолчанию&quot;, который предоставляется классовым интерфейсом для методов. Установка &lt;code&gt;default_get&lt;/code&gt; в значение true указывает конструктору вернуть объект по умолчанию, если он определен. Установка &lt;code&gt;default_set&lt;/code&gt; в true указывает конструктору сделать объект по умолчанию созданным объектом. Установка параметра по &lt;code&gt;default&lt;/code&gt; аналогична установке для обоих значений true. Это используется в основном для внутренних целей и, вероятно, не интересует ни одного реального пользователя.</target>
        </trans-unit>
        <trans-unit id="b793b4c7037146e44c6ebbd985a0e8b5eea1bc2d" translate="yes" xml:space="preserve">
          <source>Finally,</source>
          <target state="translated">Finally,</target>
        </trans-unit>
        <trans-unit id="c007289d889b2ac012d30249ede8e24355c7610c" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; is a Perl module and toolkit that contains PSGI middleware, helpers and adapters to web servers, allowing you to easily deploy scripts which can continue running, and provides flexibility with regards to which web server you use. It can allow existing CGI scripts to enjoy this flexibility and performance with minimal changes, or can be used along with modern Perl web frameworks to make writing and deploying web services with Perl a breeze.</source>
          <target state="translated">Наконец, &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; - это модуль и инструментарий Perl, который содержит промежуточное ПО PSGI, помощники и адаптеры для веб-серверов, позволяя легко развертывать сценарии, которые могут продолжать работать, и обеспечивает гибкость в отношении того, какой веб-сервер вы используете. Он может позволить существующим сценариям CGI обладать такой гибкостью и производительностью с минимальными изменениями или может использоваться вместе с современными веб-фреймворками Perl, чтобы упростить написание и развертывание веб-сервисов с помощью Perl.</target>
        </trans-unit>
        <trans-unit id="458f93c6634aea5d4fadc6ced58e859af016d537" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;plack&quot;&gt;Plack&lt;/a&gt; is a Perl module and toolkit that contains PSGI middleware, helpers and adapters to web servers, allowing you to easily deploy scripts which can continue running, and provides flexibility with regards to which web server you use. It can allow existing CGI scripts to enjoy this flexibility and performance with minimal changes, or can be used along with modern Perl web frameworks to make writing and deploying web services with Perl a breeze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44941dad1d15df314302a9115d5bc5d8a2ec4415" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;$?&lt;/code&gt; may be set to a non-0 value if the external program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec318bbb4a97f05c20b43c3d365fb178815d120" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;$?&lt;/code&gt; may be set to non-0 value if the external program</source>
          <target state="translated">Наконец, &lt;code&gt;$?&lt;/code&gt; может быть установлено значение, отличное от 0, если внешняя программа</target>
        </trans-unit>
        <trans-unit id="92dd49b4407ac7414e31cf79437fb39879d44f34" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; will traverse up references exactly</source>
          <target state="translated">Наконец, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; будет точно перемещать ссылки вверх</target>
        </trans-unit>
        <trans-unit id="66c1abb8f12ea81297c1b86ceb245b7ba4213937" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; also has an additional affect on the bitwise operators. Normally, the operands and results are treated as &lt;b&gt;unsigned&lt;/b&gt; integers, but with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; the operands and results are &lt;b&gt;signed&lt;/b&gt;. This means, among other things, that ~0 is -1, and -2 &amp;amp; -5 is -6.</source>
          <target state="translated">Наконец, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; также оказывает дополнительное влияние на побитовые операторы. Обычно операнды и результаты обрабатываются как целые числа &lt;b&gt;без знака&lt;/b&gt; , но с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; операнды и результаты &lt;b&gt;подписываются&lt;/b&gt; . Это означает, среди прочего, что ~ 0 равно -1, а -2 &amp;amp; -5 равно -6.</target>
        </trans-unit>
        <trans-unit id="4298e2e9c529f41f2c9de7ef565329b328f06ed5" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;LC_CTYPE&lt;/code&gt; affects the (deprecated) POSIX character-class test functions--&lt;code&gt;POSIX::isalpha()&lt;/code&gt; , &lt;code&gt;POSIX::islower()&lt;/code&gt; , and so on. For example, if you move from the &quot;C&quot; locale to a 7-bit ISO 646 one, you may find--possibly to your surprise--that &lt;code&gt;&quot;|&quot;&lt;/code&gt; moves from the &lt;code&gt;POSIX::ispunct()&lt;/code&gt; class to &lt;code&gt;POSIX::isalpha()&lt;/code&gt; . Unfortunately, this creates big problems for regular expressions. &quot;|&quot; still means alternation even though it matches &lt;code&gt;\w&lt;/code&gt; . Starting in v5.22, a warning will be raised when such a locale is switched into. More details are given several paragraphs further down.</source>
          <target state="translated">Наконец, &lt;code&gt;LC_CTYPE&lt;/code&gt; влияет на (устаревшие) тестовые функции символьного класса &lt;code&gt;POSIX::isalpha()&lt;/code&gt; , &lt;code&gt;POSIX::islower()&lt;/code&gt; и т. Д. Например, если вы перейдете с локали &amp;laquo;C&amp;raquo; на 7-битную локаль ISO 646, вы можете обнаружить - возможно, к своему удивлению, - что &lt;code&gt;&quot;|&quot;&lt;/code&gt; переходит из класса &lt;code&gt;POSIX::ispunct()&lt;/code&gt; в &lt;code&gt;POSIX::isalpha()&lt;/code&gt; . К сожалению, это создает большие проблемы для регулярных выражений. &quot;|&quot; по-прежнему означает чередование, даже если оно соответствует &lt;code&gt;\w&lt;/code&gt; . Начиная с v5.22, при переключении на такой языковой стандарт будет появляться предупреждение. Более подробная информация приводится в нескольких абзацах ниже.</target>
        </trans-unit>
        <trans-unit id="d41a6a4619356e1937fb9383734f7392b639a1de" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;Perl_setlocale&lt;/code&gt; works under all circumstances, whereas plain &lt;code&gt;setlocale&lt;/code&gt; can be completely ineffective on some platforms under some configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a072e67c07cec137145f02eb0728c6abe18c863" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;lock&lt;/code&gt; will traverse up references exactly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e32346666d60836d8d3015ff2538a7278da0426" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;use integer;&lt;/code&gt; also has an additional affect on the bitwise operators. Normally, the operands and results are treated as &lt;b&gt;unsigned&lt;/b&gt; integers, but with &lt;code&gt;use integer;&lt;/code&gt; the operands and results are &lt;b&gt;signed&lt;/b&gt;. This means, among other things, that ~0 is -1, and -2 &amp;amp; -5 is -6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863cc6df01692aa36bb18136100716eadd4c9578" translate="yes" xml:space="preserve">
          <source>Finally, any other list of arguments is taken as a new list value for the KEY variable discarding the previous value.</source>
          <target state="translated">Наконец,любой другой список аргументов принимается как новое значение списка для переменной KEY,отбрасывающей предыдущее значение.</target>
        </trans-unit>
        <trans-unit id="5736dff3a318282c51e7671e4d8cd7e83294c7ec" translate="yes" xml:space="preserve">
          <source>Finally, as a general note, try not to use an excessive amount of markup. As documented here and in &lt;a href=&quot;Pod::Man&quot;&gt;Pod::Man&lt;/a&gt;, you can safely leave Perl variables, function names, man page references, and the like unadorned by markup and the POD translators will figure it out for you. This makes it much easier to later edit the documentation. Note that many existing translators will do the wrong thing with e-mail addresses when wrapped in L&amp;lt;&amp;gt;, so don't do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2782a08306f78a46a43ca3f4245df407dada422a" translate="yes" xml:space="preserve">
          <source>Finally, as a general note, try not to use an excessive amount of markup. As documented here and in &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt;, you can safely leave Perl variables, function names, man page references, and the like unadorned by markup and the POD translators will figure it out for you. This makes it much easier to later edit the documentation. Note that many existing translators will do the wrong thing with e-mail addresses when wrapped in L&amp;lt;&amp;gt;, so don't do that.</source>
          <target state="translated">Наконец, в качестве общего примечания постарайтесь не использовать чрезмерное количество разметки. Как описано здесь и в &lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt; , вы можете спокойно оставить Perl-переменные, имена функций, ссылки на справочные страницы и тому подобное, не приукрашенные разметкой, и переводчики POD разберются с этим за вас. Это значительно упрощает последующее редактирование документации. Обратите внимание, что многие существующие переводчики будут делать неправильные вещи с адресами электронной почты, заключенными в L &amp;lt;&amp;gt;, поэтому не делайте этого.</target>
        </trans-unit>
        <trans-unit id="09dd5948c51d9dbe80c668a49680794506b31bfd" translate="yes" xml:space="preserve">
          <source>Finally, because Perl is frequently (but not always, and certainly not by definition) an interpreted language, you can write your programs and test them without an intermediate compilation step, allowing you to experiment and test/debug quickly and easily. This ease of experimentation flattens the learning curve even more.</source>
          <target state="translated">Наконец,поскольку Perl часто (но не всегда,и уж точно не по определению)является интерпретируемым языком,вы можете писать свои программы и тестировать их без промежуточного этапа компиляции,позволяя вам экспериментировать и тестировать/отлаживать их быстро и легко.Такая простота экспериментов еще больше сглаживает кривую обучения.</target>
        </trans-unit>
        <trans-unit id="cc57fb18e220062e45c185e13f725e4b2cd6843f" translate="yes" xml:space="preserve">
          <source>Finally, create a Pull Request on GitHub from your branch to blead as described in the GitHub documentation at &lt;a href=&quot;https://help.github.com/en/articles/creating-a-pull-request-from-a-fork&quot;&gt;https://help.github.com/en/articles/creating-a-pull-request-from-a-fork&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a510065fc482271aa62171fe6b3a6de41010a11" translate="yes" xml:space="preserve">
          <source>Finally, documentation intended for core Perl developers lives in the</source>
          <target state="translated">Наконец,документация,предназначенная для разработчиков на ядре Perl,живет в</target>
        </trans-unit>
        <trans-unit id="ef0d2a6fbc127dfe3fabf24f53dec0be787cb458" translate="yes" xml:space="preserve">
          <source>Finally, for backward (and we do mean &quot;backward&quot;) compatibility, Perl permits these unnecessary but widely-supported conversions:</source>
          <target state="translated">Наконец,для обратной (а мы действительно имеем в виду &quot;обратную&quot;)совместимости Perl допускает эти ненужные,но широко поддерживаемые преобразования:</target>
        </trans-unit>
        <trans-unit id="b81575352f8aab412fd4cb07d0470076b14f1f18" translate="yes" xml:space="preserve">
          <source>Finally, here is yet another way to do comma-separated value parsing:</source>
          <target state="translated">Наконец,вот еще один способ разобрать разделенные запятыми значения:</target>
        </trans-unit>
        <trans-unit id="834a9815bc42b39ddd5279d8456b87a013959fa0" translate="yes" xml:space="preserve">
          <source>Finally, here's an example of the full typemap file for mapping C strings of the &lt;code&gt;char *&lt;/code&gt; type to Perl scalars/strings:</source>
          <target state="translated">Наконец, вот пример полного файла карты типов для отображения строк C типа &lt;code&gt;char *&lt;/code&gt; на скаляры / строки Perl:</target>
        </trans-unit>
        <trans-unit id="bba57917092f0217e7811ec4321a57605d773dd9" translate="yes" xml:space="preserve">
          <source>Finally, if the command line ends with '&amp;amp;', the entire command is run in the background as an asynchronous subprocess.</source>
          <target state="translated">Наконец, если командная строка заканчивается символом &amp;laquo;&amp;amp;&amp;raquo;, вся команда выполняется в фоновом режиме как асинхронный подпроцесс.</target>
        </trans-unit>
        <trans-unit id="1e49365bee26ebdbc8e5446418348a20a97dc14c" translate="yes" xml:space="preserve">
          <source>Finally, if you feel like a real challenge, have a go at writing a full-blown Perl macro preprocessor as a source filter. Borrow the useful features from the C preprocessor and any other macro processors you know. The tricky bit will be choosing how much knowledge of Perl's syntax you want your filter to have.</source>
          <target state="translated">Наконец,если вы чувствуете себя настоящим вызовом,попробуйте написать полноценный макропроцессор Perl в качестве исходного фильтра.Одолжите полезные функции препроцессора C и любых других макропроцессоров,которые вам известны.Коварный бит будет заключаться в выборе того,сколько знаний синтаксиса Perl вы хотите,чтобы ваш фильтр имел.</target>
        </trans-unit>
        <trans-unit id="88728c279fead59f6cd8637f346aa4a89bc4ca1d" translate="yes" xml:space="preserve">
          <source>Finally, it searches down the C3 MRO list until it reaches the contextually enclosing class, then searches further down the MRO list for the next method with the same name as the contextually enclosing method.</source>
          <target state="translated">Наконец,он ищет вниз по списку C3 MRO до тех пор,пока не достигнет класса контекстного добавления,затем ищет дальше по списку MRO следующий метод с тем же именем,что и метод контекстного добавления.</target>
        </trans-unit>
        <trans-unit id="d8f4b0ff247923b3eb8f0e0514234b9fa893f6fd" translate="yes" xml:space="preserve">
          <source>Finally, it's possible to override localtime and gmtime everywhere, by including the ':override' tag in the import list:</source>
          <target state="translated">Наконец,можно переопределить локальное время и gmtime везде,включив тег ':override' в список импорта:</target>
        </trans-unit>
        <trans-unit id="f5aad188b46d292eb5dea6e10dfb430bbcea6367" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that Perl might not be the right tool for every job. You're a much better advocate if your claims are reasonable and grounded in reality. Dogmatically advocating anything tends to make people discount your message. Be honest about possible disadvantages to your choice of Perl since any choice has trade-offs.</source>
          <target state="translated">Наконец,имейте в виду,что Perl может быть не самым подходящим инструментом для любой работы.Ты гораздо лучше защищаешь,если твои претензии разумны и обоснованы в реальности.Догматически отстаивая что-либо,люди склонны сбрасывать со счетов ваше послание.Будьте честны в отношении возможных недостатков вашего выбора Perl,так как любой выбор имеет компромиссы.</target>
        </trans-unit>
        <trans-unit id="12d654760faef187bf9fcd2c080146c42b559499" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that subpatterns created inside a DEFINE block count towards the absolute and relative number of captures, so this:</source>
          <target state="translated">Наконец,имейте в виду,что подмаски,созданные внутри блока DEFINE,отсчитывают абсолютное и относительное число захватов,так что это:</target>
        </trans-unit>
        <trans-unit id="e50add68bf383c512c89d12d1f1fbdacf62aaedc" translate="yes" xml:space="preserve">
          <source>Finally, let's get those four fields. By now, you shouldn't have any problems with the first three fields - but how can we use the byte count of the data in the first field as a length for the data field? Here the codes &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;X&lt;/code&gt; come to the rescue, as they permit jumping back and forth in the string to unpack.</source>
          <target state="translated">Наконец, давайте получим эти четыре поля. К настоящему времени у вас не должно возникнуть проблем с первыми тремя полями - но как мы можем использовать количество байтов данных в первом поле в качестве длины для поля данных? Здесь на помощь приходят коды &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;X&lt;/code&gt; , так как они позволяют прыгать вперед и назад по строке для распаковки.</target>
        </trans-unit>
        <trans-unit id="4c63136357795194b6348dcbe928896e7138655b" translate="yes" xml:space="preserve">
          <source>Finally, most properties related to decomposition are accessible via &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb929b935f9baf3ae2ecaa9eade20a81808b33d" translate="yes" xml:space="preserve">
          <source>Finally, most properties related to decomposition are accessible via &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;.</source>
          <target state="translated">Наконец, большинство свойств, связанных с декомпозицией, доступны через &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de4b908f9ba516df7dd4589f61d68201fc354294" translate="yes" xml:space="preserve">
          <source>Finally, on NFS file systems the link count of the file handle does not always go to zero immediately after unlinking. Currently, this command is expected to fail on NFS disks.</source>
          <target state="translated">Наконец,на файловых системах NFS счетчик ссылок в файловом дескрипторе не всегда сходит на ноль сразу после развязки.В настоящее время ожидается,что эта команда не будет работать на дисках NFS.</target>
        </trans-unit>
        <trans-unit id="c0056d49190cd844d22da94e2f6a73f54ba22274" translate="yes" xml:space="preserve">
          <source>Finally, once the loop terminates (because we got a 0 or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in the queue, which serves as a note to terminate), we pass on the notice to our child, and wait for it to exit if we've created a child (lines 27 and 30).</source>
          <target state="translated">Наконец, как только цикл завершается (поскольку у нас есть 0 или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в очереди, что служит примечанием для завершения), мы передаем уведомление нашему дочернему элементу и ждем его выхода, если мы создали дочерний элемент ( строки 27 и 30).</target>
        </trans-unit>
        <trans-unit id="32fe94e035cd45ddddcda4070bc6753cb09716c1" translate="yes" xml:space="preserve">
          <source>Finally, once the loop terminates (because we got a 0 or &lt;code&gt;undef&lt;/code&gt; in the queue, which serves as a note to terminate), we pass on the notice to our child, and wait for it to exit if we've created a child (lines 27 and 30).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b58a368a203e349112a813fb51574ad5df46e1" translate="yes" xml:space="preserve">
          <source>Finally, quoted strings cannot span multiple lines. The general rule is that the identifier must be a string literal. Stick with that, and you should be safe.</source>
          <target state="translated">Наконец,цитируемые строки не могут охватывать несколько строк.Общее правило заключается в том,что идентификатор должен быть строковым литералом.Придерживайтесь этого правила,и вы должны быть в безопасности.</target>
        </trans-unit>
        <trans-unit id="826093a59348aea220454d887a381ab8cec4085f" translate="yes" xml:space="preserve">
          <source>Finally, see the published Unicode Standard (page numbers are from version 6.0.0), including these specific annexes and technical reports:</source>
          <target state="translated">Наконец,см.опубликованный стандарт Юникод (номера страниц начиная с версии 6.0.0),включая эти конкретные приложения и технические отчеты:</target>
        </trans-unit>
        <trans-unit id="8e4fc718922fd33861fef8abc551f702371be5ab" translate="yes" xml:space="preserve">
          <source>Finally, some built-ins (e.g. &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;) can't be overridden.</source>
          <target state="translated">Наконец, некоторые встроенные функции (например, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; ) нельзя переопределить.</target>
        </trans-unit>
        <trans-unit id="c0028dee23b87898288cc766ae53749c2f4ecb87" translate="yes" xml:space="preserve">
          <source>Finally, some built-ins (e.g. &lt;code&gt;exists&lt;/code&gt; or &lt;code&gt;grep&lt;/code&gt;) can't be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb0bc03e6c567aa9d048447baa9b177ddc77752" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;b&gt;-i&lt;/b&gt; switch does not impede execution when no files are given on the command line. In this case, no backup is made (the original file cannot, of course, be determined) and processing proceeds from STDIN to STDOUT as might be expected.</source>
          <target state="translated">Наконец, ключ &lt;b&gt;-i&lt;/b&gt; не препятствует выполнению, если в командной строке не указаны файлы. В этом случае резервное копирование не производится (исходный файл, конечно, не может быть определен), и обработка переходит от STDIN к STDOUT, как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="6e903744590309f2cbd34fe629a8e6cdbf621b80" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;//&lt;/code&gt; default delimiters for a match can be changed to arbitrary delimiters by putting an &lt;code&gt;'m'&lt;/code&gt; out front:</source>
          <target state="translated">Наконец, разделители &lt;code&gt;//&lt;/code&gt; по умолчанию для совпадения можно заменить на произвольные, поставив перед ним &lt;code&gt;'m'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="042bc8fcc5c7d7efd6780c2133d47ab6beba3218" translate="yes" xml:space="preserve">
          <source>Finally, the Mytest.xs file should look something like this:</source>
          <target state="translated">Наконец,файл Mytest.xs должен выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="c759b85c1874191b3c67e6077ecccb7f1cac3596" translate="yes" xml:space="preserve">
          <source>Finally, the Perl community as a whole recognizes that respect for ownership of code, respect for artistic control, proper credit, and active effort to prevent unintentional code skew or communication gaps is vital to the health of the community and Perl itself. Members of a community should not normally have to resort to rules and laws to deal with each other, and this document, although it contains rules so as to be clear, is about an attitude and general approach. The first step in any dispute should be open communication, respect for opposing views, and an attempt at a compromise. In nearly every circumstance nothing more will be necessary, and certainly no more drastic measure should be used until every avenue of communication and discussion has failed.</source>
          <target state="translated">Наконец,сообщество Perl в целом признает,что уважение права собственности на кодекс,уважение художественного контроля,надлежащий кредит и активные усилия по предотвращению непреднамеренного перекоса кода или пробелов в коммуникации имеют жизненно важное значение для здоровья сообщества и самого Perl.Члены сообщества,как правило,не должны прибегать к правилам и законам,чтобы иметь дело друг с другом,и настоящий документ,хотя он и содержит правила,чтобы быть ясным,касается отношения и общего подхода.Первым шагом в любом споре должно быть открытое общение,уважение противоположных взглядов и попытка компромисса.Практически при любых обстоятельствах больше ничего не потребуется,и,конечно же,не следует применять более решительные меры до тех пор,пока все способы коммуникации и обсуждения не будут исчерпаны.</target>
        </trans-unit>
        <trans-unit id="64c2b89b8066b657581a5a8b0c2006c676558b10" translate="yes" xml:space="preserve">
          <source>Finally, the context stack pointer is actually decremented by &lt;code&gt;CX_POP(cx)&lt;/code&gt;. After this point, it's possible that that the current context frame could be overwritten by other contexts being pushed. Although things like ties and &lt;code&gt;DESTROY&lt;/code&gt; are supposed to work within a new context stack, it's best not to assume this. Indeed on debugging builds, &lt;code&gt;CX_POP(cx)&lt;/code&gt; deliberately sets &lt;code&gt;cx&lt;/code&gt; to null to detect code that is still relying on the field values in that context frame. Note in the &lt;code&gt;pp_leavesub()&lt;/code&gt; example above, we grab &lt;code&gt;blk_sub.retop&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b5ad0b05d4d0374aa60aaf0eda94d058db5ae7" translate="yes" xml:space="preserve">
          <source>Finally, the documentation. The job is never done until the paperwork is over, so let's describe the change we've just made. The relevant place is</source>
          <target state="translated">Наконец-то,документация.Работа никогда не выполняется до тех пор,пока не закончится бумажная работа,так что давайте опишем изменения,которые мы только что сделали.Соответствующее место</target>
        </trans-unit>
        <trans-unit id="80876825b2c59d50931c0454f32d3120b5201e0a" translate="yes" xml:space="preserve">
          <source>Finally, the following set of approaches was offered by Jeffrey Friedl, whose article in issue #5 of The Perl Journal talks about this very matter.</source>
          <target state="translated">Наконец,следующий набор подходов предложил Джеффри Фридл,чья статья в номере 5 журнала The Perl Journal рассказывает именно об этом вопросе.</target>
        </trans-unit>
        <trans-unit id="3dff018de1b9478268177e77483e9300bee06c55" translate="yes" xml:space="preserve">
          <source>Finally, the message also can happen under the &lt;code&gt;/x&lt;/code&gt; regex modifier when the &lt;code&gt;\N&lt;/code&gt; is separated by spaces from the &lt;code&gt;{&lt;/code&gt;, in which case, remove the spaces.</source>
          <target state="translated">Наконец, сообщение также может появиться под модификатором регулярного выражения &lt;code&gt;/x&lt;/code&gt; , когда &lt;code&gt;\N&lt;/code&gt; отделяется пробелами от &lt;code&gt;{&lt;/code&gt; , и в этом случае удалите пробелы.</target>
        </trans-unit>
        <trans-unit id="0a5ec48900bcd82fa327a360a4d32095f98f60a4" translate="yes" xml:space="preserve">
          <source>Finally, the modifier may be used with all of the forms mentioned above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778ba92f0eda34f1617f29aaf6a42ae17012b6e9" translate="yes" xml:space="preserve">
          <source>Finally, the multiple-angle-bracket form does</source>
          <target state="translated">Наконец,форма с множественными угловыми скобками делает</target>
        </trans-unit>
        <trans-unit id="69cd41be402812aa1fc1573ee80c91588133088e" translate="yes" xml:space="preserve">
          <source>Finally, there is &lt;code&gt;cx_topblock(cx)&lt;/code&gt;, which acts like a super-&lt;code&gt;nextstate&lt;/code&gt; as regards to resetting various vars to their base values. It is used in places like &lt;code&gt;pp_next&lt;/code&gt;, &lt;code&gt;pp_redo&lt;/code&gt; and &lt;code&gt;pp_goto&lt;/code&gt; where rather than exiting a scope, we want to re-initialise the scope. As well as resetting &lt;code&gt;PL_stack_sp&lt;/code&gt; like &lt;code&gt;nextstate&lt;/code&gt;, it also resets &lt;code&gt;PL_markstack_ptr&lt;/code&gt;, &lt;code&gt;PL_scopestack_ix&lt;/code&gt; and &lt;code&gt;PL_curpm&lt;/code&gt;. Note that it doesn't do a &lt;code&gt;FREETMPS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f8e8ad12d75d623f33e44387f1b276ef571892" translate="yes" xml:space="preserve">
          <source>Finally, there is a &lt;code&gt;LOGOP&lt;/code&gt; , or logic op. Like a &lt;code&gt;LISTOP&lt;/code&gt; , this has one or more children, but it doesn't have an &lt;code&gt;op_last&lt;/code&gt; field: so you have to follow &lt;code&gt;op_first&lt;/code&gt; and then the &lt;code&gt;OpSIBLING&lt;/code&gt; chain itself to find the last child. Instead it has an &lt;code&gt;op_other&lt;/code&gt; field, which is comparable to the &lt;code&gt;op_next&lt;/code&gt; field described below, and represents an alternate execution path. Operators like &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; are &lt;code&gt;LOGOP&lt;/code&gt; s. Note that in general, &lt;code&gt;op_other&lt;/code&gt; may not point to any of the direct children of the &lt;code&gt;LOGOP&lt;/code&gt; .</source>
          <target state="translated">Наконец, есть &lt;code&gt;LOGOP&lt;/code&gt; , или логическая операция . Как и &lt;code&gt;LISTOP&lt;/code&gt; , у него есть один или несколько дочерних элементов , но у него нет поля &lt;code&gt;op_last&lt;/code&gt; : поэтому вы должны следовать &lt;code&gt;op_first&lt;/code&gt; , а затем самой цепочке &lt;code&gt;OpSIBLING&lt;/code&gt; , чтобы найти последнего дочернего элемента . Вместо этого у него есть поле &lt;code&gt;op_other&lt;/code&gt; , которое сравнимо с полем &lt;code&gt;op_next&lt;/code&gt; , описанным ниже, и представляет собой альтернативный путь выполнения. Операторы любят &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; и &lt;code&gt;?&lt;/code&gt; являются &lt;code&gt;LOGOP&lt;/code&gt; . Обратите внимание, что обычно &lt;code&gt;op_other&lt;/code&gt; не может указывать ни на одного из прямых дочерних элементов &lt;code&gt;LOGOP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b751f83017cbd5bbf78b027bd8e55f818cb0e53" translate="yes" xml:space="preserve">
          <source>Finally, there is a &lt;code&gt;LOGOP&lt;/code&gt;, or logic op. Like a &lt;code&gt;LISTOP&lt;/code&gt;, this has one or more children, but it doesn't have an &lt;code&gt;op_last&lt;/code&gt; field: so you have to follow &lt;code&gt;op_first&lt;/code&gt; and then the &lt;code&gt;OpSIBLING&lt;/code&gt; chain itself to find the last child. Instead it has an &lt;code&gt;op_other&lt;/code&gt; field, which is comparable to the &lt;code&gt;op_next&lt;/code&gt; field described below, and represents an alternate execution path. Operators like &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; are &lt;code&gt;LOGOP&lt;/code&gt;s. Note that in general, &lt;code&gt;op_other&lt;/code&gt; may not point to any of the direct children of the &lt;code&gt;LOGOP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7cdec53bb27d155c030f9892a0eeb03fd88eb1" translate="yes" xml:space="preserve">
          <source>Finally, there is also an entirely different approach by unpacking big endian shorts and packing them in the reverse byte order:</source>
          <target state="translated">Наконец,существует и совершенно другой подход:распаковывать большие эндийские шорты и упаковывать их в обратном порядке байтов:</target>
        </trans-unit>
        <trans-unit id="453b0692eb90c0dfa9ea5982b6a592f258b890f5" translate="yes" xml:space="preserve">
          <source>Finally, there is the code that actually does the filtering. For this type of Perl source filter, all the filtering is done in a method called &lt;code&gt;filter()&lt;/code&gt; . (It is also possible to write a Perl source filter using a closure. See the &lt;code&gt;Filter::Util::Call&lt;/code&gt; manual page for more details.) It's called every time the Perl parser needs another line of source to process. The &lt;code&gt;filter()&lt;/code&gt; method, in turn, reads lines from the source stream using the &lt;code&gt;filter_read()&lt;/code&gt; function.</source>
          <target state="translated">Наконец, есть код, который фактически выполняет фильтрацию. Для этого типа исходного фильтра Perl вся фильтрация выполняется с помощью метода &lt;code&gt;filter()&lt;/code&gt; . (Также можно написать исходный фильтр Perl, используя замыкание. Для получения дополнительной информации см. Страницу руководства &lt;code&gt;Filter::Util::Call&lt;/code&gt; .) Он вызывается каждый раз, когда парсеру Perl требуется другая строка исходного кода для обработки. Метод &lt;code&gt;filter()&lt;/code&gt; , в свою очередь, считывает строки из исходного потока с помощью функции &lt;code&gt;filter_read()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f63b79d41e03c44ce7102b1bce3292ba0ca343a6" translate="yes" xml:space="preserve">
          <source>Finally, there is the code that actually does the filtering. For this type of Perl source filter, all the filtering is done in a method called &lt;code&gt;filter()&lt;/code&gt;. (It is also possible to write a Perl source filter using a closure. See the &lt;code&gt;Filter::Util::Call&lt;/code&gt; manual page for more details.) It's called every time the Perl parser needs another line of source to process. The &lt;code&gt;filter()&lt;/code&gt; method, in turn, reads lines from the source stream using the &lt;code&gt;filter_read()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70b6b76ef8b9f1c2f4e8ed6e19c93e5bed492e5" translate="yes" xml:space="preserve">
          <source>Finally, this technique can be used to implement a sort on a keyvalue pair list; e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff384a2e72772724b586203a02673aa837c967d" translate="yes" xml:space="preserve">
          <source>Finally, using accessors makes inheritance much simpler. Subclasses can use the accessors rather than having to know how a parent class is implemented internally.</source>
          <target state="translated">Наконец,использование аксессуаров значительно упрощает процесс наследования.Подклассы могут использовать аксессуары вместо того,чтобы знать,как класс-родитель реализован внутри себя.</target>
        </trans-unit>
        <trans-unit id="0de55aa6b3e2509718d66dd5a0030529d86bf08c" translate="yes" xml:space="preserve">
          <source>Finally, we have &lt;a href=&quot;Class::Tiny&quot;&gt;Class::Tiny&lt;/a&gt;. This module truly lives up to its name. It has an incredibly minimal API and absolutely no dependencies on any recent Perl. Still, we think it's a lot easier to use than writing your own OO code from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ee269426b10540758eda6f3baa910232cd84eb" translate="yes" xml:space="preserve">
          <source>Finally, we have &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class::Tiny&lt;/a&gt;. This module truly lives up to its name. It has an incredibly minimal API and absolutely no dependencies on any recent Perl. Still, we think it's a lot easier to use than writing your own OO code from scratch.</source>
          <target state="translated">Наконец, у нас есть &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class :: Tiny&lt;/a&gt; . Этот модуль действительно оправдывает свое название. Он имеет невероятно минимальный API и абсолютно не зависит от какого-либо недавнего Perl. Тем не менее, мы думаем, что это намного проще в использовании, чем писать собственный объектно-ориентированный код с нуля.</target>
        </trans-unit>
        <trans-unit id="80f162582be94b96acbf3901ff2dad6e5237d61d" translate="yes" xml:space="preserve">
          <source>Finally, when &lt;code&gt;filter&lt;/code&gt; or the anonymous sub are finished processing, they are expected to return the filtered source using &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Наконец, когда &lt;code&gt;filter&lt;/code&gt; или анонимная подпрограмма завершают обработку, ожидается, что они вернут отфильтрованный источник с помощью &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="879473db2990543f072d8e3f8060a5f6514793f3" translate="yes" xml:space="preserve">
          <source>Finally, when &lt;code&gt;filter&lt;/code&gt; or the anonymous sub are finished processing, they are expected to return the filtered source using &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237e2517518e5a7e38bf850e59773fff293d743f" translate="yes" xml:space="preserve">
          <source>Finally, you can append an optional third argument, in &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;,&lt;i&gt;arg2&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt;, where</source>
          <target state="translated">Наконец, вы можете добавить необязательный третий аргумент в &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;,&lt;i&gt;arg2&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt; , где</target>
        </trans-unit>
        <trans-unit id="e97f51f439c9ae965cec0b2dc4c4355eaa28a624" translate="yes" xml:space="preserve">
          <source>Finally, you should then delete the remote smoke-me branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694939534870b0a1edb23c3bf281899ee38f8c47" translate="yes" xml:space="preserve">
          <source>Finally, you'll need to copy the extension's Perl library module to the</source>
          <target state="translated">Наконец,вам нужно будет скопировать модуль библиотеки Perl расширения в папку</target>
        </trans-unit>
        <trans-unit id="860f05ae24e478a14a3acf15fc650e6557c5de7d" translate="yes" xml:space="preserve">
          <source>Find POD documents in directory trees</source>
          <target state="translated">Поиск документов POD в деревьях каталогов</target>
        </trans-unit>
        <trans-unit id="e1857def4ee2d2eb29e93e010b1a0b29040a49b1" translate="yes" xml:space="preserve">
          <source>Find a named lexical anywhere in a chain of nested pads. Add fake entries in the inner pads if it's found in an outer one.</source>
          <target state="translated">Найдите названный лексикон в любом месте цепочки вложенных подушечек.Добавьте фальшивые записи во внутренние прокладки,если они найдены во внешней.</target>
        </trans-unit>
        <trans-unit id="4564f34f47e157e7d1dad65f67463f62f1be357a" translate="yes" xml:space="preserve">
          <source>Find an area of Perl that seems interesting to you, and see if you can work out how it works. Scan through the source, and step over it in the debugger. Play, poke, investigate, fiddle! You'll probably get to understand not just your chosen area but a much wider range of</source>
          <target state="translated">Найдите область Perl,которая кажется вам интересной,и посмотрите,сможете ли вы разобраться,как она работает.Просканируйте исходник и перешагните через него в отладчике.Играй,тыкай,исследуй,скрипка! Скорее всего,вы поймете не только выбранную область,но и гораздо более широкий диапазон</target>
        </trans-unit>
        <trans-unit id="b0f962c203daff2b574f4bbd4661b46cb058cc00" translate="yes" xml:space="preserve">
          <source>Find and return the variable that is named &lt;code&gt;$_&lt;/code&gt; in the lexical scope of the currently-executing function. This may be a lexical &lt;code&gt;$_&lt;/code&gt; , or will otherwise be the global one.</source>
          <target state="translated">Найдите и верните переменную с именем &lt;code&gt;$_&lt;/code&gt; в лексической области выполняемой в данный момент функции. Это может быть лексический знак &lt;code&gt;$_&lt;/code&gt; или глобальный.</target>
        </trans-unit>
        <trans-unit id="f3987e57a4047735115abd7670e17ea834246318" translate="yes" xml:space="preserve">
          <source>Find close matches to the named modules that you think you might have mistyped. This requires the optional installation of Text::Levenshtein or Text::Levenshtein::Damerau.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418498cca51e97a1b0d2b4c89d2b05e75464656f" translate="yes" xml:space="preserve">
          <source>Find out whether a plan has been defined. &lt;code&gt;$plan&lt;/code&gt; is either &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (no plan has been set), &lt;code&gt;no_plan&lt;/code&gt; (indeterminate # of tests) or an integer (the number of expected tests).</source>
          <target state="translated">Узнайте, определен ли план. &lt;code&gt;$plan&lt;/code&gt; имеет &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (не задан план), &lt;code&gt;no_plan&lt;/code&gt; (неопределенное количество тестов) или целое число (количество ожидаемых тестов).</target>
        </trans-unit>
        <trans-unit id="b7a3095b5282b9401d12f20b31b6ecddeb954040" translate="yes" xml:space="preserve">
          <source>Find out whether a plan has been defined. &lt;code&gt;$plan&lt;/code&gt; is either &lt;code&gt;undef&lt;/code&gt; (no plan has been set), &lt;code&gt;no_plan&lt;/code&gt; (indeterminate # of tests) or an integer (the number of expected tests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca0c65ce5ae45823f61afddf86cef29c2b9896f" translate="yes" xml:space="preserve">
          <source>Find the best mirrors you could be using and use them for the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299f4826369de8d05aca882ad20a8c23e29f25dd" translate="yes" xml:space="preserve">
          <source>Find the directory name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff33fe789ed52358ad4a6f6237332d2d9560dc4" translate="yes" xml:space="preserve">
          <source>Find the first (leftmost) occurrence of a sequence of bytes within another sequence. This is the Perl version of &lt;code&gt;strstr()&lt;/code&gt;, extended to handle arbitrary sequences, potentially containing embedded &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;NUL&lt;/code&gt; is what the initial &lt;code&gt;n&lt;/code&gt; in the function name stands for; some systems have an equivalent, &lt;code&gt;memmem()&lt;/code&gt;, but with a somewhat different API).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac57f2d73d65d94cbdbe0755aabac6325af065d" translate="yes" xml:space="preserve">
          <source>Find the general category of a numeric codepoint.</source>
          <target state="translated">Найдите общую категорию числовой кодовой точки.</target>
        </trans-unit>
        <trans-unit id="c8f2ac7f85f4a8cad43d51157f3d77d5c06e4db0" translate="yes" xml:space="preserve">
          <source>Find the name of the undefined variable (if any) that caused the operator to issue a &quot;Use of uninitialized value&quot; warning. If match is true, only return a name if its value matches &lt;code&gt;uninit_sv&lt;/code&gt;. So roughly speaking, if a unary operator (such as &lt;code&gt;OP_COS&lt;/code&gt;) generates a warning, then following the direct child of the op may yield an &lt;code&gt;OP_PADSV&lt;/code&gt; or &lt;code&gt;OP_GV&lt;/code&gt; that gives the name of the undefined variable. On the other hand, with &lt;code&gt;OP_ADD&lt;/code&gt; there are two branches to follow, so we only print the variable name if we get an exact match. &lt;code&gt;desc_p&lt;/code&gt; points to a string pointer holding the description of the op. This may be updated if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49c3913d7af3c4d57a065a7a52f55890db2015f" translate="yes" xml:space="preserve">
          <source>Find the name of the undefined variable (if any) that caused the operator to issue a &quot;Use of uninitialized value&quot; warning. If match is true, only return a name if its value matches uninit_sv. So roughly speaking, if a unary operator (such as OP_COS) generates a warning, then following the direct child of the op may yield an OP_PADSV or OP_GV that gives the name of the undefined variable. On the other hand, with OP_ADD there are two branches to follow, so we only print the variable name if we get an exact match. desc_p points to a string pointer holding the description of the op. This may be updated if needed.</source>
          <target state="translated">Найти имя неопределённой переменной (если таковая имеется),из-за которой оператор выдал предупреждение &quot;Use of uninitialized value&quot; (Использование неинициализированного значения).Если значение совпадает с uninit_sv,возвращать имя можно только в том случае,если его значение совпадает с uninit_sv.Таким образом,грубо говоря,если унарный оператор (например,OP_COS)выдает предупреждение,то вслед за прямым дочерним оператором может выдаваться OP_PADSV или OP_GV,который выдает имя неопределённой переменной.С другой стороны,в случае OP_ADD есть две ветви,которым нужно следовать,поэтому мы выводим имя переменной только в том случае,если получим точное совпадение.desc_p указывает на строковый указатель,содержащий описание операции.При необходимости оно может быть обновлено.</target>
        </trans-unit>
        <trans-unit id="6ac43fb4e0d5bd1c0782abaa41490e339609fd8c" translate="yes" xml:space="preserve">
          <source>Find the position of the lexical &lt;code&gt;$_&lt;/code&gt; in the pad of the currently-executing function. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if there is no lexical &lt;code&gt;$_&lt;/code&gt; in scope (in which case the global one should be used instead). &lt;a href=&quot;#find_rundefsv&quot;&gt;find_rundefsv&lt;/a&gt; is likely to be more convenient.</source>
          <target state="translated">Найдите положение лексического символа &lt;code&gt;$_&lt;/code&gt; на панели выполняемой в данный момент функции. Возвращает смещение в текущем &lt;code&gt;NOT_IN_PAD&lt;/code&gt; или NOT_IN_PAD, если в области нет лексического &lt;code&gt;$_&lt;/code&gt; (в этом случае вместо него следует использовать глобальный). &lt;a href=&quot;#find_rundefsv&quot;&gt;find_rundefsv&lt;/a&gt; скорее всего будет удобнее.</target>
        </trans-unit>
        <trans-unit id="449a6849d1b11914b85fc078a256f3db73a2b32b" translate="yes" xml:space="preserve">
          <source>Find the start position where a regex match should be attempted, or possibly if the regex engine should not be run because the pattern can't match. This is called, as appropriate, by the core, depending on the values of the &lt;code&gt;extflags&lt;/code&gt; member of the &lt;code&gt;regexp&lt;/code&gt; structure.</source>
          <target state="translated">Найдите начальную позицию, в которой следует попытаться сопоставить регулярное выражение, или, возможно, если механизм регулярных выражений не должен запускаться, потому что шаблон не может совпадать. При необходимости это вызывается ядром в зависимости от значений члена &lt;code&gt;extflags&lt;/code&gt; структуры &lt;code&gt;regexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6483e76c333ac42379066b4aedb6e408fdbe129b" translate="yes" xml:space="preserve">
          <source>FindBin</source>
          <target state="translated">FindBin</target>
        </trans-unit>
        <trans-unit id="24c31d2b2286d66b429b3c123e559310944ed2de" translate="yes" xml:space="preserve">
          <source>FindBin - Locate directory of original perl script</source>
          <target state="translated">FindBin-Найти каталог оригинального perl скрипта</target>
        </trans-unit>
        <trans-unit id="4369a8a5c4e42e43d5e7bb66ccfd1c78f33f275a" translate="yes" xml:space="preserve">
          <source>FindBin - optional module which deals with paths relative to the source file.</source>
          <target state="translated">FindBin-дополнительный модуль,который работает с путями относительно исходного файла.</target>
        </trans-unit>
        <trans-unit id="f086fc99759a8e3bb0203cfe84782842d1a193aa" translate="yes" xml:space="preserve">
          <source>FindBin is supported as part of the core perl distribution. Please send bug reports to &amp;lt;</source>
          <target state="translated">FindBin поддерживается как часть основного дистрибутива Perl. Отправляйте отчеты об ошибках по адресу &amp;lt;</target>
        </trans-unit>
        <trans-unit id="9448bfafc842c027dacc4896519d4bae55c41c99" translate="yes" xml:space="preserve">
          <source>Finding IANA Character Set Registry names</source>
          <target state="translated">Поиск имен регистров наборов символов IANA</target>
        </trans-unit>
        <trans-unit id="eef2fdb8cb6b261375ae8d62a702d5b95f90b35a" translate="yes" xml:space="preserve">
          <source>Finding Magic</source>
          <target state="translated">Поиск магии</target>
        </trans-unit>
        <trans-unit id="e4f6c5e89298ef6e35e80792cf1b54756849aae5" translate="yes" xml:space="preserve">
          <source>Finding and running system commands made easy</source>
          <target state="translated">Поиск и запуск системных команд стал легким</target>
        </trans-unit>
        <trans-unit id="96480ceeb561d8e5864564872e9b2a46637a4002" translate="yes" xml:space="preserve">
          <source>Finding locales</source>
          <target state="translated">Поиск локалей</target>
        </trans-unit>
        <trans-unit id="3153f313a1b462b04bbeda7ea0617a540d2d82e4" translate="yes" xml:space="preserve">
          <source>Finding out your status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d12ac1eef851da5ad3ec16ab4427086784516f" translate="yes" xml:space="preserve">
          <source>Finding packages and VERSION</source>
          <target state="translated">Поиск пакетов и ВЕРСИИ</target>
        </trans-unit>
        <trans-unit id="192a400dd7758944da905f5786b9b1af628198e2" translate="yes" xml:space="preserve">
          <source>Finding the end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d70dab88d530f69df03bc2322d08f1cd465a479" translate="yes" xml:space="preserve">
          <source>Finds the executables PERL and FULLPERL</source>
          <target state="translated">Находит исполняемые файлы PERL и FULLPERL</target>
        </trans-unit>
        <trans-unit id="cb3d12363ae65c418567d25fa6af068fa57bcd89" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer for &lt;code&gt;type&lt;/code&gt; matching the SV. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bcd7072415a74f9601a9db40691f4be186016b" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer for type matching the SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Находит волшебный указатель для типа, соответствующего SV. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25d979215bfecc25b84803c1f222b66fe8c9e2ae" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer of &lt;code&gt;type&lt;/code&gt; with the given &lt;code&gt;vtbl&lt;/code&gt; for the &lt;code&gt;SV&lt;/code&gt; . See &lt;code&gt;sv_magicext&lt;/code&gt; .</source>
          <target state="translated">Находит волшебный указатель &lt;code&gt;type&lt;/code&gt; с данным &lt;code&gt;vtbl&lt;/code&gt; для &lt;code&gt;SV&lt;/code&gt; . См. &lt;code&gt;sv_magicext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1508cd21f25aec8c8ff0233e3ab9fa73bbb76820" translate="yes" xml:space="preserve">
          <source>Finds the magic pointer of &lt;code&gt;type&lt;/code&gt; with the given &lt;code&gt;vtbl&lt;/code&gt; for the &lt;code&gt;SV&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#sv_magicext&quot;&gt;&quot;sv_magicext&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c909b138eba89ecfbd86df4c9d170ac78d4a3820" translate="yes" xml:space="preserve">
          <source>Finland</source>
          <target state="translated">Finland</target>
        </trans-unit>
        <trans-unit id="267b05432936f6d23e350d21b3fe892d9d8dbea3" translate="yes" xml:space="preserve">
          <source>Fire the debugger up again on your script and we'll look at the help menu. There's a couple of ways of calling help: a simple '&lt;b&gt;h&lt;/b&gt;' will get the summary help list, '&lt;b&gt;|h&lt;/b&gt;' (pipe-h) will pipe the help through your pager (which is (probably 'more' or 'less'), and finally, '&lt;b&gt;h h&lt;/b&gt;' (h-space-h) will give you the entire help screen. Here is the summary page:</source>
          <target state="translated">Снова запустите отладчик в своем скрипте, и мы посмотрим на меню справки. Есть несколько способов вызвать справку: простой ' &lt;b&gt;h&lt;/b&gt; ' получит сводный список справки, ' &lt;b&gt;| h&lt;/b&gt; ' (pipe-h) направит справку через ваш пейджер (что (вероятно, 'больше' или 'меньше') и, наконец, &quot; &lt;b&gt;чч&lt;/b&gt; &quot; (ч-пробел-ч) откроет вам весь экран справки. Вот итоговая страница:</target>
        </trans-unit>
        <trans-unit id="cef42e83f0eb4f1a99e0bddde90be004038a21df" translate="yes" xml:space="preserve">
          <source>Fires when Perl has successfully loaded an individual file, whether from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;. This probe fires after the file is read from disk and its contents evaluated. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt; -style names.</source>
          <target state="translated">Срабатывает, когда Perl успешно загрузил отдельный файл, будь то из &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; . Этот зонд запускается после чтения файла с диска и оценки его содержимого. Аргумент filename преобразуется в пути локальной файловой системы вместо предоставления &lt;code&gt;Module::Name&lt;/code&gt; стиле Module :: Name .</target>
        </trans-unit>
        <trans-unit id="757a897afd699db960721899607f96100462820d" translate="yes" xml:space="preserve">
          <source>Fires when Perl has successfully loaded an individual file, whether from &lt;code&gt;use&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt;. This probe fires after the file is read from disk and its contents evaluated. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt;-style names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7704de478a9404e667918d6d09d2c1e3a1cb6a87" translate="yes" xml:space="preserve">
          <source>Fires when Perl is about to load an individual file, whether from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;. This probe fires before the file is read from disk. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt; -style names.</source>
          <target state="translated">Срабатывает, когда Perl собирается загрузить отдельный файл, будь то &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; . Этот зонд срабатывает перед чтением файла с диска. Аргумент filename преобразуется в пути локальной файловой системы вместо предоставления &lt;code&gt;Module::Name&lt;/code&gt; стиле Module :: Name .</target>
        </trans-unit>
        <trans-unit id="b9f10e7adabcd669986aa11e5c555213012ea407" translate="yes" xml:space="preserve">
          <source>Fires when Perl is about to load an individual file, whether from &lt;code&gt;use&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt;. This probe fires before the file is read from disk. The filename argument is converted to local filesystem paths instead of providing &lt;code&gt;Module::Name&lt;/code&gt;-style names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d7fed0e266f24545d9104466ab74b18bdd8f35" translate="yes" xml:space="preserve">
          <source>Firewalls can be categorized into three basic types.</source>
          <target state="translated">Брандмауэры можно разделить на три основных типа.</target>
        </trans-unit>
        <trans-unit id="a00bc27da396d3a81b2819430816be98253f7657" translate="yes" xml:space="preserve">
          <source>First In, First Out. See also &lt;b&gt;LIFO&lt;/b&gt;. Also a nickname for a &lt;b&gt;named pipe&lt;/b&gt;.</source>
          <target state="translated">Первым прибыл, первым обслужен. См. Также &lt;b&gt;LIFO&lt;/b&gt; . Также псевдоним для &lt;b&gt;именованного канала&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="8fe7145d9c6c14d380f19ecbb52aad0be3d15872" translate="yes" xml:space="preserve">
          <source>First available in Perl 5.10.1 (the 5.10.0 version behaved differently), binary &lt;code&gt;~~&lt;/code&gt; does a &quot;smartmatch&quot; between its arguments. This is mostly used implicitly in the &lt;code&gt;when&lt;/code&gt; construct described in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;, although not all &lt;code&gt;when&lt;/code&gt; clauses call the smartmatch operator. Unique among all of Perl's operators, the smartmatch operator can recurse. The smartmatch operator is &lt;a href=&quot;perlpolicy#experimental&quot;&gt;experimental&lt;/a&gt; and its behavior is subject to change.</source>
          <target state="translated">Впервые доступный в Perl 5.10.1 (версия 5.10.0 вела себя по-другому), двоичный &lt;code&gt;~~&lt;/code&gt; выполняет &amp;laquo;интеллектуальное соответствие&amp;raquo; между своими аргументами. Это в основном используется неявно в &lt;code&gt;when&lt;/code&gt; это конструкции , описанной в &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; , хотя и не все , &lt;code&gt;when&lt;/code&gt; пункты вызвать smartmatch оператора. Уникальный среди всех операторов Perl оператор smartmatch может выполнять рекурсию. Оператор smartmatch является &lt;a href=&quot;perlpolicy#experimental&quot;&gt;экспериментальным,&lt;/a&gt; и его поведение может изменяться.</target>
        </trans-unit>
        <trans-unit id="63af0ded76d246a89c78d019ed5af7004abaf7ca" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command, followed by $(TO_UNIX), which defaults to a null command under UNIX, and will convert files in distribution directory to UNIX format otherwise. Next it runs &lt;code&gt;tar&lt;/code&gt; on that directory into a tarfile and deletes the directory. Finishes with a command $(POSTOP) which defaults to a null command.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой, за которой следует $ (TO_UNIX), которая по умолчанию является пустой командой в UNIX, и в противном случае преобразует файлы в каталоге распространения в формат UNIX. Затем он запускает &lt;code&gt;tar&lt;/code&gt; для этого каталога в tar-файл и удаляет каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null.</target>
        </trans-unit>
        <trans-unit id="2af22b932d239ecb2692524f84027e701417e610" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command. Next it runs &lt;code&gt;shar&lt;/code&gt; on that directory into a sharfile and deletes the intermediate directory again. Finishes with a command $(POSTOP) which defaults to a null command. Note: For shdist to work properly a &lt;code&gt;shar&lt;/code&gt; program that can handle directories is mandatory.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой. Затем он запускает &lt;code&gt;shar&lt;/code&gt; для этого каталога в sharfile и снова удаляет промежуточный каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null. Примечание. Для правильной работы shdist необходима программа &lt;code&gt;shar&lt;/code&gt; , которая может обрабатывать каталоги.</target>
        </trans-unit>
        <trans-unit id="32b6865bf0f3ae68c2cf337647431ed6a911b654" translate="yes" xml:space="preserve">
          <source>First does a distdir. Then a command $(PREOP) which defaults to a null command. Runs &lt;code&gt;$(ZIP) $(ZIPFLAGS)&lt;/code&gt; on that directory into a zipfile. Then deletes that directory. Finishes with a command $(POSTOP) which defaults to a null command.</source>
          <target state="translated">Сначала делает distdir. Затем команда $ (PREOP), которая по умолчанию является пустой командой. Запускает &lt;code&gt;$(ZIP) $(ZIPFLAGS)&lt;/code&gt; из этого каталога в zip-файл. Затем удаляет этот каталог. Завершается командой $ (POSTOP), значение которой по умолчанию равно null.</target>
        </trans-unit>
        <trans-unit id="94aa237f5671c72c12a3009e96b0d0c3b639055e" translate="yes" xml:space="preserve">
          <source>First example to &lt;code&gt;use deprecate;&lt;/code&gt; was &lt;a href=&quot;switch&quot;&gt;Switch&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87237cd69962d954afc8149676070ba7e99a30f3" translate="yes" xml:space="preserve">
          <source>First is the &quot;transitional compilation environment&quot;, described in lfcompile64(5). According to the man page,</source>
          <target state="translated">Во-первых,это &quot;переходное окружение компиляции&quot;,описанное в lfcompile64(5).Согласно man-странице,</target>
        </trans-unit>
        <trans-unit id="39f2e43e592aba75880c16ffdbd2296c6893e732" translate="yes" xml:space="preserve">
          <source>First of all &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; gets the type of the third parameter ('CODE' in this case). &lt;code&gt;attributes.pm&lt;/code&gt; checks if there is a subroutine called &lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; in the caller's namespace (here: 'main'). In this case a subroutine &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; is required. Then this method is called to check if you have used a &quot;bad attribute&quot;. The subroutine call in this example would look like</source>
          <target state="translated">В первую очередь &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; получает тип третьего параметра (в данном случае CODE). &lt;code&gt;attributes.pm&lt;/code&gt; проверяет, есть ли подпрограмма &lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; в пространстве имен вызывающего (здесь: 'main'). В этом случае требуется подпрограмма &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; . Затем этот метод вызывается, чтобы проверить, не использовали ли вы &amp;laquo;плохой атрибут&amp;raquo;. Вызов подпрограммы в этом примере будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="b7822424c868e3dc633b16628199202fe7a79904" translate="yes" xml:space="preserve">
          <source>First of all &lt;code&gt;import&lt;/code&gt; gets the type of the third parameter ('CODE' in this case). &lt;code&gt;attributes.pm&lt;/code&gt; checks if there is a subroutine called &lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; in the caller's namespace (here: 'main'). In this case a subroutine &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; is required. Then this method is called to check if you have used a &quot;bad attribute&quot;. The subroutine call in this example would look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5edeb3fa4c30eb9326cfd6ee3072f89d302a7fb" translate="yes" xml:space="preserve">
          <source>First of all note that if you're doing this for security reasons (to avoid people seeing passwords, for example) then you should rewrite your program so that critical information is never given as an argument. Hiding the arguments won't make your program completely secure.</source>
          <target state="translated">Прежде всего,обратите внимание,что если вы делаете это из соображений безопасности (чтобы люди не видели пароли,например),то вам следует переписать свою программу так,чтобы критическая информация никогда не приводилась в качестве аргумента.Скрытие аргументов не сделает вашу программу полностью безопасной.</target>
        </trans-unit>
        <trans-unit id="02342cfce74aa40ebbe7459fd67794792aa8eda6" translate="yes" xml:space="preserve">
          <source>First of all note that you have full access to the Symbian device when using Perl: you can do a lot of damage to your device (like removing system files) unless you are careful. Please do take backups before doing anything.</source>
          <target state="translated">Прежде всего,обратите внимание,что у вас есть полный доступ к Symbian-устройству при использовании Perl:вы можете сделать много повреждений устройству (например,удалить системные файлы),если не будете осторожны.Пожалуйста,сделайте резервное копирование,прежде чем что-либо делать.</target>
        </trans-unit>
        <trans-unit id="82d1faba2416c529064d9e355ea5a87b152dcd77" translate="yes" xml:space="preserve">
          <source>First of all, have you tried using &lt;a href=&quot;strict&quot;&gt;&lt;code&gt;use strict;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;warnings&quot;&gt;&lt;code&gt;use warnings;&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1463803ecb1c9b404836c68a0992ffedefb430c0" translate="yes" xml:space="preserve">
          <source>First of all, have you tried using the &lt;b&gt;-w&lt;/b&gt; switch?</source>
          <target state="translated">Прежде всего, пробовали ли вы использовать ключ &lt;b&gt;-w&lt;/b&gt; ?</target>
        </trans-unit>
        <trans-unit id="a4f52d54cf15399bdc6e2cfb2dc28b7c88455e40" translate="yes" xml:space="preserve">
          <source>First of all, however, you</source>
          <target state="translated">Прежде всего,ты</target>
        </trans-unit>
        <trans-unit id="83147c6de1b08740dd2da15332f4959df7841375" translate="yes" xml:space="preserve">
          <source>First of all, there's a few things you can do to make your life a lot more straightforward when it comes to debugging perl programs, without using the debugger at all. To demonstrate, here's a simple script, named &quot;hello&quot;, with a problem:</source>
          <target state="translated">Прежде всего,есть несколько вещей,которые можно сделать,чтобы сделать свою жизнь намного проще,когда дело доходит до отладки perl программ,без использования отладчика вообще.Чтобы продемонстрировать,вот простой сценарий,названный &quot;привет&quot;,с проблемой:</target>
        </trans-unit>
        <trans-unit id="04c84bafcaec13f658619ad91db4027ae060911a" translate="yes" xml:space="preserve">
          <source>First of all, when doing a match, one may get no run-time output even if debugging is enabled. This means that the regex engine was never entered and that all of the job was therefore done by the optimizer.</source>
          <target state="translated">Прежде всего,при совпадении можно не получить вывод времени выполнения,даже если включена отладка.Это означает,что регекс-движок так и не был введен,а значит,вся работа была выполнена оптимизатором.</target>
        </trans-unit>
        <trans-unit id="960494596b28f0ed04786d5db795d0496594f162" translate="yes" xml:space="preserve">
          <source>First off, you must have zlib 1.0.5 or better.</source>
          <target state="translated">Во-первых,у вас должен быть злиб 1.0.5 или лучше.</target>
        </trans-unit>
        <trans-unit id="69ce5e02622d1bff00c96b8c962f42da114efb4f" translate="yes" xml:space="preserve">
          <source>First problem: deciding which functions will be public API functions and which will be private. All functions whose names begin &lt;code&gt;S_&lt;/code&gt; are private (think &quot;S&quot; for &quot;secret&quot; or &quot;static&quot;). All other functions begin with &quot;Perl_&quot;, but just because a function begins with &quot;Perl_&quot; does not mean it is part of the API. (See &lt;a href=&quot;#Internal-Functions&quot;&gt;&quot;Internal Functions&quot;&lt;/a&gt;.) The easiest way to be &lt;b&gt;sure&lt;/b&gt; a function is part of the API is to find its entry in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;. If it exists in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, it's part of the API. If it doesn't, and you think it should be (i.e., you need it for your extension), submit an issue at &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; explaining why you think it should be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5548dc2d3eeb7fa10ed6d62335952f1161d1be5c" translate="yes" xml:space="preserve">
          <source>First problem: deciding which functions will be public API functions and which will be private. All functions whose names begin &lt;code&gt;S_&lt;/code&gt; are private (think &quot;S&quot; for &quot;secret&quot; or &quot;static&quot;). All other functions begin with &quot;Perl_&quot;, but just because a function begins with &quot;Perl_&quot; does not mean it is part of the API. (See &lt;a href=&quot;#Internal-Functions&quot;&gt;Internal Functions&lt;/a&gt;.) The easiest way to be &lt;b&gt;sure&lt;/b&gt; a function is part of the API is to find its entry in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;. If it exists in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, it's part of the API. If it doesn't, and you think it should be (i.e., you need it for your extension), send mail via &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; explaining why you think it should be.</source>
          <target state="translated">Первая проблема: решить, какие функции будут общедоступными функциями API, а какие - частными. Все функции, имена которых начинаются с &lt;code&gt;S_&lt;/code&gt; , являются частными (думайте, что &amp;laquo;S&amp;raquo; означает &amp;laquo;секретный&amp;raquo; или &amp;laquo;статический&amp;raquo;). Все остальные функции начинаются с &amp;laquo;Perl_&amp;raquo;, но то, что функция начинается с &amp;laquo;Perl_&amp;raquo;, не означает, что она является частью API. (См. &lt;a href=&quot;#Internal-Functions&quot;&gt;Внутренние функции&lt;/a&gt; .) Самый простой способ &lt;b&gt;убедиться,&lt;/b&gt; что функция является частью API, - это найти ее запись в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; . Если он существует в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; , это часть API. Если это не так, и вы думаете, что так и должно быть (т.е. вам это нужно для вашего расширения), отправьте письмо через &lt;a href=&quot;perlbug&quot;&gt;perlbug,&lt;/a&gt; объясняя, почему вы думаете, что это должно быть.</target>
        </trans-unit>
        <trans-unit id="6d90388b269f11ed13790611d5c39ef23068273b" translate="yes" xml:space="preserve">
          <source>First release of port to 5.16.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6d177453ba632a0301eb097966ff6e4ecd7e13" translate="yes" xml:space="preserve">
          <source>First runs the &lt;code&gt;get&lt;/code&gt; method to make sure the distribution is downloaded and unpacked. Changes to the directory where the distribution has been unpacked and runs the external commands &lt;code&gt;perl
Makefile.PL&lt;/code&gt; or &lt;code&gt;perl Build.PL&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; there.</source>
          <target state="translated">Сначала запускается метод &lt;code&gt;get&lt;/code&gt; , чтобы убедиться, что дистрибутив загружен и распакован. Переходит в каталог, в который был распакован дистрибутив, и запускает внешние команды &lt;code&gt;perl Makefile.PL&lt;/code&gt; или &lt;code&gt;perl Build.PL&lt;/code&gt; и &lt;code&gt;make&lt;/code&gt; там.</target>
        </trans-unit>
        <trans-unit id="8990c7669972aeb5dbf3f8f7c6f26f615b1eba3b" translate="yes" xml:space="preserve">
          <source>First try</source>
          <target state="translated">Первая попытка</target>
        </trans-unit>
        <trans-unit id="8c24340fb0abf478cd12d4c9a81be46a9b570102" translate="yes" xml:space="preserve">
          <source>First version July 22, 1998; last revised November 21, 2001.</source>
          <target state="translated">Первый вариант-22 июля 1998 года;последняя редакция-21 ноября 2001 года.</target>
        </trans-unit>
        <trans-unit id="31fb5f76604a7e6f413356e0c06e90b3583d1c3f" translate="yes" xml:space="preserve">
          <source>First we need to create a temporary new branch for these changes and switch into it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5b85580c1cc1af9d07f10dd52a32a103df1c0f" translate="yes" xml:space="preserve">
          <source>First we start with which characters to include. We call this collection of characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bcb6253b995340d8661abf6d3eb20fd1447df3" translate="yes" xml:space="preserve">
          <source>First you extract the keys from the hashes into lists, then solve the &quot;removing duplicates&quot; problem described above. For example:</source>
          <target state="translated">Сначала вы извлекаете ключи из хэшей в списки,затем решаете описанную выше проблему &quot;удаления дубликатов&quot;.Например:</target>
        </trans-unit>
        <trans-unit id="2044f5e8e1c516409eb219e4d2d2da652d96754d" translate="yes" xml:space="preserve">
          <source>First you get the BS2000 commandline prompt ('*'). Here you may enter your parameters, e.g. &lt;code&gt;-e 'print &quot;Hello World!\\n&quot;;'&lt;/code&gt; (note the double backslash!) or &lt;code&gt;-w&lt;/code&gt; and the name of your Perl script. Filenames starting with &lt;code&gt;/&lt;/code&gt; are searched in the Posix filesystem, others are searched in the BS2000 filesystem. You may even use wildcards if you put a &lt;code&gt;%&lt;/code&gt; in front of your filename (e.g. &lt;code&gt;-w
checkfiles.pl %*.c&lt;/code&gt; ). Read your C/C++ manual for additional possibilities of the commandline prompt (look for PARAMETER-PROMPTING).</source>
          <target state="translated">Сначала вы получите приглашение командной строки BS2000 ('*'). Здесь вы можете ввести свои параметры, например &lt;code&gt;-e 'print &quot;Hello World!\\n&quot;;'&lt;/code&gt; (обратите внимание на двойную обратную косую черту!) или &lt;code&gt;-w&lt;/code&gt; и имя вашего Perl-скрипта. Имена файлов, начинающиеся с &lt;code&gt;/&lt;/code&gt; , ищутся в файловой системе Posix, остальные ищутся в файловой системе BS2000. Вы даже можете использовать подстановочные знаки, если поставите &lt;code&gt;%&lt;/code&gt; перед именем файла (например, &lt;code&gt;-w checkfiles.pl %*.c&lt;/code&gt; ). Прочтите руководство по C / C ++, чтобы узнать о дополнительных возможностях командной строки (ищите PARAMETER-PROMPTING).</target>
        </trans-unit>
        <trans-unit id="0e1074481eb31b2beb0a93b170e055ca8fbaf015" translate="yes" xml:space="preserve">
          <source>First you get the BS2000 commandline prompt ('*'). Here you may enter your parameters, e.g. &lt;code&gt;-e 'print &quot;Hello World!\\n&quot;;'&lt;/code&gt; (note the double backslash!) or &lt;code&gt;-w&lt;/code&gt; and the name of your Perl script. Filenames starting with &lt;code&gt;/&lt;/code&gt; are searched in the Posix filesystem, others are searched in the BS2000 filesystem. You may even use wildcards if you put a &lt;code&gt;%&lt;/code&gt; in front of your filename (e.g. &lt;code&gt;-w checkfiles.pl %*.c&lt;/code&gt;). Read your C/C++ manual for additional possibilities of the commandline prompt (look for PARAMETER-PROMPTING).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69813602a455899e097cd99c025cf3e1ca0fd741" translate="yes" xml:space="preserve">
          <source>First you'll need to know how to convert between C types and Perl types, with newSViv() and sv_setnv() and newAV() and all their friends. They're described in &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">Сначала вам нужно знать, как конвертировать между типами C и типами Perl с помощью newSViv (), sv_setnv () и newAV () и всех их друзей. Они описаны в &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; и &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d47635cc5b345a29da6fbd6f1b60ef579fbee7af" translate="yes" xml:space="preserve">
          <source>First,</source>
          <target state="translated">First,</target>
        </trans-unit>
        <trans-unit id="d7c19c1fc6c3dbafd3921057c37d39372855cf85" translate="yes" xml:space="preserve">
          <source>First, adding the new possessive &lt;code&gt;+&lt;/code&gt; to any quantifier finds the longest match and does not backtrack. That's important since you want to handle any angle brackets through the recursion, not backtracking. The group &lt;code&gt;[^&amp;lt;&amp;gt;]++&lt;/code&gt; finds one or more non-angle brackets without backtracking.</source>
          <target state="translated">Во-первых, добавление нового притяжательного падежа &lt;code&gt;+&lt;/code&gt; к любому квантификатору позволяет найти самое длинное совпадение без возврата. Это важно, поскольку вы хотите обрабатывать любые угловые скобки с помощью рекурсии, а не с возвратом. Группа &lt;code&gt;[^&amp;lt;&amp;gt;]++&lt;/code&gt; находит одну или несколько неугловых скобок без возврата.</target>
        </trans-unit>
        <trans-unit id="50b1a9b57fc0e96ef3cb9ee0ed192e6dd3187f0f" translate="yes" xml:space="preserve">
          <source>First, an easy one. Rather than having debugging code that is all-or-nothing, it would be much more useful to be able to control which specific blocks of debugging code get included. Try extending the syntax for debug blocks to allow each to be identified. The contents of the &lt;code&gt;DEBUG&lt;/code&gt; environment variable can then be used to control which blocks get included.</source>
          <target state="translated">Во-первых, легкий. Вместо того, чтобы иметь отладочный код по принципу &amp;laquo;все или ничего&amp;raquo;, было бы гораздо полезнее иметь возможность контролировать, какие конкретные блоки отладочного кода будут включены. Попробуйте расширить синтаксис для блоков отладки, чтобы можно было идентифицировать каждый из них. Затем содержимое переменной среды &lt;code&gt;DEBUG&lt;/code&gt; можно использовать для управления включенными блоками.</target>
        </trans-unit>
        <trans-unit id="3f1e59ee032bf3e9e20cd69af8996ee89b862626" translate="yes" xml:space="preserve">
          <source>First, are you sure that the module isn't already on your system? Try &lt;code&gt;perl -MFoo -e 1&lt;/code&gt; . (Replace &quot;Foo&quot; with the name of the module; for instance, &lt;code&gt;perl -MCGI::Carp -e 1&lt;/code&gt; .)</source>
          <target state="translated">Во-первых, уверены ли вы, что модуля еще нет в вашей системе? Попробуйте &lt;code&gt;perl -MFoo -e 1&lt;/code&gt; . (Замените &amp;laquo;Foo&amp;raquo; именем модуля; например, &lt;code&gt;perl -MCGI::Carp -e 1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7b89c936bc5ff3bf6eeb7c0528bfdef316cf1b24" translate="yes" xml:space="preserve">
          <source>First, are you sure that the module isn't already on your system? Try &lt;code&gt;perl -MFoo -e 1&lt;/code&gt;. (Replace &quot;Foo&quot; with the name of the module; for instance, &lt;code&gt;perl -MCGI::Carp -e 1&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebaf97085b1af9a8aca032d5654d4392116d444" translate="yes" xml:space="preserve">
          <source>First, download the module package from CPAN (e.g., the &quot;Comma Separated Value&quot; text package, Text-CSV-0.01.tar.gz). Then expand the contents of the package into some location on your disk. Most CPAN modules are built with an internal directory structure, so it is usually safe to expand it in the root of your DJGPP installation. Some people prefer to locate source trees under /usr/src (i.e., &lt;code&gt;($DJDIR)/usr/src&lt;/code&gt; ), but you may put it wherever seems most logical to you, *EXCEPT* under the same directory as your perl source code. There are special rules that apply to modules which live in the perl source tree that do not apply to most of the modules in CPAN.</source>
          <target state="translated">Сначала загрузите пакет модуля из CPAN (например, текстовый пакет &amp;laquo;Значения, разделенные запятыми&amp;raquo;, Text-CSV-0.01.tar.gz). Затем разверните содержимое пакета в какое-нибудь место на вашем диске. Большинство модулей CPAN построены с внутренней структурой каталогов, поэтому обычно безопасно развернуть ее в корне вашей установки DJGPP. Некоторые люди предпочитают размещать деревья исходного кода в &lt;code&gt;($DJDIR)/usr/src&lt;/code&gt; / usr / src (т.е. ($ DJDIR) / usr / src ), но вы можете разместить его там, где вам кажется наиболее логичным, * ИСКЛЮЧАЯ * *, в том же каталоге, что и исходный код perl. Существуют особые правила, которые применяются к модулям, находящимся в дереве исходных текстов perl, но не применяются к большинству модулей в CPAN.</target>
        </trans-unit>
        <trans-unit id="a4cf2a47c74d08c7608aab2490244eccf86d59a1" translate="yes" xml:space="preserve">
          <source>First, download the module package from CPAN (e.g., the &quot;Comma Separated Value&quot; text package, Text-CSV-0.01.tar.gz). Then expand the contents of the package into some location on your disk. Most CPAN modules are built with an internal directory structure, so it is usually safe to expand it in the root of your DJGPP installation. Some people prefer to locate source trees under /usr/src (i.e., &lt;code&gt;($DJDIR)/usr/src&lt;/code&gt;), but you may put it wherever seems most logical to you, *EXCEPT* under the same directory as your perl source code. There are special rules that apply to modules which live in the perl source tree that do not apply to most of the modules in CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd8c84d305c51b13e814aea0158d4e7f9348781" translate="yes" xml:space="preserve">
          <source>First, ensure that you've found an actual bug. Second, ensure you've found an actual bug.</source>
          <target state="translated">Сначала убедитесь,что нашли настоящий жучок.Во-вторых,убедитесь,что нашли настоящую ошибку.</target>
        </trans-unit>
        <trans-unit id="ae1f5078345edb7a706a89221e3d6b7ce9cef2cd" translate="yes" xml:space="preserve">
          <source>First, export the path to the SDK into the build environment:</source>
          <target state="translated">Сначала экспортируйте путь к SDK в среду сборки:</target>
        </trans-unit>
        <trans-unit id="f736b2c3892c2f343a0b6266829dd11c79e488a9" translate="yes" xml:space="preserve">
          <source>First, get rid of the libperl.dylib:</source>
          <target state="translated">Во-первых,избавься от libperl.dylib:</target>
        </trans-unit>
        <trans-unit id="152625e23957ee1b161f4b03465822ac30d6d72d" translate="yes" xml:space="preserve">
          <source>First, it can be confusing to read. In the above example, it's not clear if &lt;code&gt;save&lt;/code&gt; is a method provided by the &lt;code&gt;File&lt;/code&gt; class or simply a subroutine that expects a file object as its first argument.</source>
          <target state="translated">Во-первых, это может сбивать с толку. В приведенном выше примере неясно, является ли &lt;code&gt;save&lt;/code&gt; методом, предоставляемым классом &lt;code&gt;File&lt;/code&gt; , или просто подпрограммой, которая ожидает файловый объект в качестве своего первого аргумента.</target>
        </trans-unit>
        <trans-unit id="9d7b42a2c11d81d6afadf3ea1e473b60b0c267e3" translate="yes" xml:space="preserve">
          <source>First, it determines the linearized C3 MRO of the object or class it is being called on.</source>
          <target state="translated">Во-первых,он определяет линеаризованный C3 MRO объекта или класса,к которому он обращается.</target>
        </trans-unit>
        <trans-unit id="fb4ac5a946a8d4958fc6dfdd3a7c2b8f9b12b58f" translate="yes" xml:space="preserve">
          <source>First, let's look at reading it in from a file. This is something like adding a row at a time. We'll assume that there's a flat file in which each line is a row and each word an element. If you're trying to develop an @AoA array containing all these, here's the right way to do that:</source>
          <target state="translated">Сначала давайте посмотрим,как это можно прочитать из файла.Это что-то вроде добавления строки за раз.Предположим,что есть плоский файл,в котором каждая строка-это строка,а каждое слово-элемент.Если вы пытаетесь создать массив @AoA,содержащий все это,то вот правильный способ сделать это:</target>
        </trans-unit>
        <trans-unit id="78e2d97b2606f5e4646f167be6edb794b2d59b32" translate="yes" xml:space="preserve">
          <source>First, make a local branch and switch to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e25e60917815bcdbb3181b9454d4fd283b6a1" translate="yes" xml:space="preserve">
          <source>First, make sure you have the latest &lt;b&gt;cpan-mac&lt;/b&gt; distribution ( &lt;a href=&quot;http://www.cpan.org/authors/id/CNANDOR/&quot;&gt;http://www.cpan.org/authors/id/CNANDOR/&lt;/a&gt; ), which has utilities for doing all of the steps. Read the cpan-mac directions carefully and install it. If you choose not to use cpan-mac for some reason, there are alternatives listed here.</source>
          <target state="translated">Во-первых, убедитесь, что у вас установлена ​​последняя &lt;b&gt;версия cpan-mac&lt;/b&gt; ( &lt;a href=&quot;http://www.cpan.org/authors/id/CNANDOR/&quot;&gt;http://www.cpan.org/authors/id/CNANDOR/&lt;/a&gt; ), в которой есть утилиты для выполнения всех шагов. Внимательно прочтите инструкции cpan-mac и установите его. Если вы по какой-то причине решите не использовать cpan-mac, здесь перечислены альтернативы.</target>
        </trans-unit>
        <trans-unit id="9ff45e7f3f7ac11b2b708c0549868f02253d3144" translate="yes" xml:space="preserve">
          <source>First, please read &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; for details on hacking the Perl core. That document covers many details on how to create a good patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4209086a0693a3c62d398c3fd3a79469cf0aa1" translate="yes" xml:space="preserve">
          <source>First, read &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;Unicode Security Considerations&lt;/a&gt;.</source>
          <target state="translated">Сначала прочтите &amp;laquo; &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;Вопросы безопасности Unicode&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f75f2ff97115a58ce045c83a79898c0c702db3b" translate="yes" xml:space="preserve">
          <source>First, read &lt;a href=&quot;https://www.unicode.org/reports/tr36&quot;&gt;Unicode Security Considerations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be4fd7c33f5ba283ee1991244bc33bbae5e14ad" translate="yes" xml:space="preserve">
          <source>First, remember that &lt;code&gt;[1, 2, 3]&lt;/code&gt; makes an anonymous array containing &lt;code&gt;(1, 2, 3)&lt;/code&gt; , and gives you a reference to that array.</source>
          <target state="translated">Во-первых, помните, что &lt;code&gt;[1, 2, 3]&lt;/code&gt; создает анонимный массив, содержащий &lt;code&gt;(1, 2, 3)&lt;/code&gt; , и дает вам ссылку на этот массив.</target>
        </trans-unit>
        <trans-unit id="2c9778c828ac452ecd15f39d014e052e50b62a3b" translate="yes" xml:space="preserve">
          <source>First, remember that &lt;code&gt;[1, 2, 3]&lt;/code&gt; makes an anonymous array containing &lt;code&gt;(1, 2, 3)&lt;/code&gt;, and gives you a reference to that array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aab1dc764048d005c10306d35fb8721fb57f5b8" translate="yes" xml:space="preserve">
          <source>First, see earlier in this document about &lt;a href=&quot;#Finding-locales&quot;&gt;&quot;Finding locales&quot;&lt;/a&gt;. That tells how to find which locales are really supported--and more importantly, installed--on your system. In our example error message, environment variables affecting the locale are listed in the order of decreasing importance (and unset variables do not matter). Therefore, having LC_ALL set to &quot;En_US&quot; must have been the bad choice, as shown by the error message. First try fixing locale settings listed first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab31ac192075d493669c9807b4d74587336e2089" translate="yes" xml:space="preserve">
          <source>First, see earlier in this document about &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt;. That tells how to find which locales are really supported--and more importantly, installed--on your system. In our example error message, environment variables affecting the locale are listed in the order of decreasing importance (and unset variables do not matter). Therefore, having LC_ALL set to &quot;En_US&quot; must have been the bad choice, as shown by the error message. First try fixing locale settings listed first.</source>
          <target state="translated">Во-первых, см. Ранее в этом документе о &lt;a href=&quot;#Finding-locales&quot;&gt;поиске локалей&lt;/a&gt; . Это говорит о том, как определить, какие локали действительно поддерживаются - и, что более важно, установлены - в вашей системе. В нашем примере сообщения об ошибке переменные среды, влияющие на локаль, перечислены в порядке убывания важности (и неустановленные переменные не имеют значения). Следовательно, установка LC_ALL в &quot;En_US&quot;, должно быть, была плохим выбором, как показано в сообщении об ошибке. Сначала попробуйте исправить настройки локали, указанные первыми.</target>
        </trans-unit>
        <trans-unit id="c27578c07f284f149f1e59f8dc0cd46db350e08e" translate="yes" xml:space="preserve">
          <source>First, see the answer to &quot;Why am I getting long decimals (eg, 19.9499999999999) instead of the numbers I should be getting (eg, 19.95)?&quot;.</source>
          <target state="translated">Сначала смотрите ответ на вопрос &quot;Почему я получаю длинные десятичные цифры (например,19.9499999999999)вместо цифр,которые я должен получать (например,19.95)?&quot;.</target>
        </trans-unit>
        <trans-unit id="c7929df02929344c4da8c51ff70c78d4168b4050" translate="yes" xml:space="preserve">
          <source>First, type &lt;code&gt;ppm&lt;/code&gt; from a shell and see whether ActiveState's PPM repository has your module. If so, you can install it with &lt;code&gt;ppm&lt;/code&gt; and you won't have to bother with any of the other steps here. You might be able to use the CPAN instructions from the &quot;Unix or Linux&quot; section above as well; give it a try. Otherwise, you'll have to follow the steps below.</source>
          <target state="translated">Во- первых, тип &lt;code&gt;ppm&lt;/code&gt; из оболочки и имеет ли репозиторий PPM ActiveState в свой модуль. Если это так, вы можете установить его с помощью &lt;code&gt;ppm&lt;/code&gt; , и вам не придется беспокоиться о каких-либо других шагах здесь. Вы также можете использовать инструкции CPAN из раздела &amp;laquo;Unix или Linux&amp;raquo; выше; попробуйте. В противном случае вам придется выполнить следующие действия.</target>
        </trans-unit>
        <trans-unit id="4cf149afbf1f752337e23fcd4bf31955a925b612" translate="yes" xml:space="preserve">
          <source>First, we can calculate the plan dynamically using the &lt;code&gt;plan()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faab21d0b75e81479aa73f86a04f0c512fa41039" translate="yes" xml:space="preserve">
          <source>First, we include the &lt;code&gt;Filter::Util::Call&lt;/code&gt; module, which exports a number of functions into your filter's namespace. The filter shown above uses two of these functions, &lt;code&gt;filter_add()&lt;/code&gt; and &lt;code&gt;filter_read()&lt;/code&gt; .</source>
          <target state="translated">Во-первых, мы включаем модуль &lt;code&gt;Filter::Util::Call&lt;/code&gt; , который экспортирует ряд функций в пространство имен вашего фильтра. Показанный выше фильтр использует две из этих функций, &lt;code&gt;filter_add()&lt;/code&gt; и &lt;code&gt;filter_read()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7666b71edfd993b3751616f817f20d8eb76a68d" translate="yes" xml:space="preserve">
          <source>First, we include the &lt;code&gt;Filter::Util::Call&lt;/code&gt; module, which exports a number of functions into your filter's namespace. The filter shown above uses two of these functions, &lt;code&gt;filter_add()&lt;/code&gt; and &lt;code&gt;filter_read()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf86c04e9a07ad8ffe5ebc09738e5cc682edbbb" translate="yes" xml:space="preserve">
          <source>First, we note that this time-honored 16-bit CPU uses little-endian order, and that's why the low order byte is stored at the lower address. To unpack such a (unsigned) short we'll have to use code &lt;code&gt;v&lt;/code&gt; . A repeat count unpacks all 12 shorts:</source>
          <target state="translated">Во-первых, отметим, что этот проверенный временем 16-разрядный процессор использует порядок с прямым порядком байтов, и именно поэтому младший байт хранится по младшему адресу. Чтобы распаковать такой (беззнаковый) шорт, нам придется использовать код &lt;code&gt;v&lt;/code&gt; . Повторный счет распаковывает все 12 короткометражек:</target>
        </trans-unit>
        <trans-unit id="08bfd01e98e4edde23ed3f05bac3b5bc4b695e5c" translate="yes" xml:space="preserve">
          <source>First, we note that this time-honored 16-bit CPU uses little-endian order, and that's why the low order byte is stored at the lower address. To unpack such a (unsigned) short we'll have to use code &lt;code&gt;v&lt;/code&gt;. A repeat count unpacks all 12 shorts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec66f264026749a912802e1ee6df172076171fc" translate="yes" xml:space="preserve">
          <source>First, we'll look at the &lt;code&gt;Perl_yylex&lt;/code&gt; function in the lexer. We want to look for &lt;code&gt;case 'x'&lt;/code&gt;, where x is the first character of the operator. (Incidentally, when looking for the code that handles a keyword, you'll want to search for &lt;code&gt;KEY_foo&lt;/code&gt; where &quot;foo&quot; is the keyword.) Here is the code that handles assignment (there are quite a few operators beginning with &lt;code&gt;=&lt;/code&gt;, so most of it is omitted for brevity):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d040ecc2c88831fcb5be8f38daefabb27bdc8362" translate="yes" xml:space="preserve">
          <source>First, what is the op tree, anyway? The op tree is the parsed representation of your program, as we saw in our section on parsing, and it's the sequence of operations that Perl goes through to execute your program, as we saw in &lt;a href=&quot;#Running&quot;&gt;&quot;Running&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ae10fa25857645a38bd9df4324915b8e49d413" translate="yes" xml:space="preserve">
          <source>First, what is the op tree, anyway? The op tree is the parsed representation of your program, as we saw in our section on parsing, and it's the sequence of operations that Perl goes through to execute your program, as we saw in &lt;a href=&quot;#Running&quot;&gt;Running&lt;/a&gt;.</source>
          <target state="translated">Во-первых, что такое дерево операций? Дерево операций - это проанализированное представление вашей программы, как мы видели в разделе, посвященном синтаксическому анализу, и последовательность операций, которые Perl выполняет для выполнения вашей программы, как мы видели в разделе &amp;laquo; &lt;a href=&quot;#Running&quot;&gt;Выполнение&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd0da866187697a74c7a4d585f209f050b0a6ff" translate="yes" xml:space="preserve">
          <source>First:</source>
          <target state="translated">First:</target>
        </trans-unit>
        <trans-unit id="cd289dddd1b3873e3f239eb60db04e88470eea20" translate="yes" xml:space="preserve">
          <source>Firstly when &lt;code&gt;inflate&lt;/code&gt; has returned a status other than &lt;code&gt;Z_OK&lt;/code&gt; or &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; . This means that either the end of the compressed data stream has been reached (&lt;code&gt;Z_STREAM_END&lt;/code&gt; ) or there is an error in the compressed data. In either of these cases there is no point in continuing with reading the compressed data, so both loops are terminated.</source>
          <target state="translated">Во-первых, когда &lt;code&gt;inflate&lt;/code&gt; вернул статус, отличный от &lt;code&gt;Z_OK&lt;/code&gt; или &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; . Это означает, что либо достигнут &lt;code&gt;Z_STREAM_END&lt;/code&gt; потока сжатых данных ( Z_STREAM_END ), либо есть ошибка в сжатых данных. В любом из этих случаев нет смысла продолжать чтение сжатых данных, поэтому оба цикла завершаются.</target>
        </trans-unit>
        <trans-unit id="580dea99b6376e56628cd97fc38cd26b362ae9be" translate="yes" xml:space="preserve">
          <source>Firstly when &lt;code&gt;inflate&lt;/code&gt; has returned a status other than &lt;code&gt;Z_OK&lt;/code&gt; or &lt;code&gt;Z_BUF_ERROR&lt;/code&gt;. This means that either the end of the compressed data stream has been reached (&lt;code&gt;Z_STREAM_END&lt;/code&gt;) or there is an error in the compressed data. In either of these cases there is no point in continuing with reading the compressed data, so both loops are terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91097a50eee7fb0157c9c563333af1f9aad192e" translate="yes" xml:space="preserve">
          <source>Firstly with &lt;code&gt;uncompress&lt;/code&gt;</source>
          <target state="translated">Во-первых с &lt;code&gt;uncompress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c691ee82803b4a1c09fe4ae85950833e593adf1e" translate="yes" xml:space="preserve">
          <source>Firstly, copy the source and build a native copy of perl for your host system. Then, in the source to be cross compiled:</source>
          <target state="translated">Во-первых,скопируйте исходный текст и создайте нативную копию perl для вашей хост-системы.Затем,в исходном тексте,который будет перекрестно скомпилирован:</target>
        </trans-unit>
        <trans-unit id="b281be44ff171ec4ca97b3cec7cdd79193f13686" translate="yes" xml:space="preserve">
          <source>Firstly, here is code that uses &lt;code&gt;retr&lt;/code&gt; to uncompressed a file as it is read from the FTP Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429b0e6343c2120d22b3e87cee9b0d4bae245bf0" translate="yes" xml:space="preserve">
          <source>Firstly, the code is considerably more complex than with the previous example.</source>
          <target state="translated">Во-первых,код значительно сложнее,чем в предыдущем примере.</target>
        </trans-unit>
        <trans-unit id="276509a617a885ae6ba6cc6313c1176be3ee48f5" translate="yes" xml:space="preserve">
          <source>Firstly, when either &lt;code&gt;filter&lt;/code&gt; or the anonymous sub are called, a local copy of &lt;code&gt;$_&lt;/code&gt; will automatically be created. It will always contain the empty string at this point.</source>
          <target state="translated">Во-первых, когда вызывается &lt;code&gt;filter&lt;/code&gt; или анонимный подпрограмм, автоматически создается локальная копия &lt;code&gt;$_&lt;/code&gt; . На этом этапе он всегда будет содержать пустую строку.</target>
        </trans-unit>
        <trans-unit id="2cac4ae7495bba4659c20ff2b612b63d1529752e" translate="yes" xml:space="preserve">
          <source>Firstly, you need to establish a baseline time for the existing code, which timing needs to be reliable and repeatable. You'll probably want to use the &lt;code&gt;Benchmark&lt;/code&gt; or &lt;code&gt;Devel::NYTProf&lt;/code&gt; modules, or something similar, for this step, or perhaps the Unix system &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; utility, whichever is appropriate. See the base of this document for a longer list of benchmarking and profiling modules, and recommended further reading.</source>
          <target state="translated">Во-первых, вам необходимо установить базовое время для существующего кода, которое должно быть надежным и повторяемым. Вероятно, вы захотите использовать модули &lt;code&gt;Benchmark&lt;/code&gt; или &lt;code&gt;Devel::NYTProf&lt;/code&gt; или что-то подобное для этого шага или, возможно, утилиту системного &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; Unix , в зависимости от того, что подходит. См. Базу этого документа, где вы найдете более длинный список модулей для тестирования и профилирования, а также рекомендации для дальнейшего чтения.</target>
        </trans-unit>
        <trans-unit id="0912ace39576f3bff8ff6347fdfed9f37c93af54" translate="yes" xml:space="preserve">
          <source>Firstly, you need to establish a baseline time for the existing code, which timing needs to be reliable and repeatable. You'll probably want to use the &lt;code&gt;Benchmark&lt;/code&gt; or &lt;code&gt;Devel::NYTProf&lt;/code&gt; modules, or something similar, for this step, or perhaps the Unix system &lt;code&gt;time&lt;/code&gt; utility, whichever is appropriate. See the base of this document for a longer list of benchmarking and profiling modules, and recommended further reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda4e517cc99c618a0166c7c1427ce12e089520b" translate="yes" xml:space="preserve">
          <source>Five specially named code blocks are executed at the beginning and at the end of a running Perl program. These are the &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , and &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Пять специально названных блоков кода выполняются в начале и в конце работающей программы Perl. Это &lt;code&gt;UNITCHECK&lt;/code&gt; &lt;code&gt;BEGIN&lt;/code&gt; , UNITCHECK , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; и &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17ff08381265b477655a45e70fb5ae3e698605cc" translate="yes" xml:space="preserve">
          <source>Five specially named code blocks are executed at the beginning and at the end of a running Perl program. These are the &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;UNITCHECK&lt;/code&gt;, &lt;code&gt;CHECK&lt;/code&gt;, &lt;code&gt;INIT&lt;/code&gt;, and &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c722bf4ef529e4eded31ce8c62d796cc90fbd29c" translate="yes" xml:space="preserve">
          <source>Fix as many discovered bugs as possible. Document all the bugs which are not fixed, and all the failures with unknown reasons. Inspect the produced logs</source>
          <target state="translated">Исправьте как можно больше обнаруженных ошибок.Документируйте все ошибки,которые не исправлены,и все сбои по неизвестным причинам.Проверяйте созданные журналы</target>
        </trans-unit>
        <trans-unit id="df44dd4e66d3cab9cceb66ab9337728c16a604cb" translate="yes" xml:space="preserve">
          <source>Fix bugs!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d2b0f6093e9267469793bea33648599961e32d" translate="yes" xml:space="preserve">
          <source>Fix exec, and exit in &quot;forked&quot; subprocesses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9517d098aab673cc930fe5f552eaf1cd6c8267f" translate="yes" xml:space="preserve">
          <source>Fix inheritance of environment variables by subprocesses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5904c927a01dfd60190d4b60c8207a1973b7d9" translate="yes" xml:space="preserve">
          <source>Fix issue where kill was using the wrong kind of process ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc92e3cff9e6a0dbd7ac3e0c0e26e4976790465" translate="yes" xml:space="preserve">
          <source>Fix issue with newlib's unlink, which could cause infinite loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83649da6d49364618a24bf1f42332f131fef232" translate="yes" xml:space="preserve">
          <source>Fixed characters</source>
          <target state="translated">Исправленные символы</target>
        </trans-unit>
        <trans-unit id="8fb62c73dff6424fec02bbefb83788e346747c19" translate="yes" xml:space="preserve">
          <source>Fixed existing link to YAML discussion thread to point to new &lt;a href=&quot;http://nntp.x.perl.org/group/&quot;&gt;http://nntp.x.perl.org/group/&lt;/a&gt; site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f24223efa38b1e0c821d29e1e2ff7c73dc2563" translate="yes" xml:space="preserve">
          <source>Fixed header size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1612bd15c9421b6746280d95829fe2d2256c0953" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.007</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f610e5ac87fab90f9565500603b8bb2a7f5611de" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.012</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7cd10c589a3c1a03bf67a931ca237c61708446" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.025</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6fc7d1e7bb925f0e155f6d3f8f4dd7c55cff80" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838194fc7cb5c547a3b4bbbf33000d2979b011eb" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.07</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cda70e9024dd56f02f35dcb5eb32f0c7fbf2708" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51cff993c578c025a312a4daf87907ca66414a9" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e2f5911aadd9d8733160e7a729bf6a6f49643e" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.2.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7c26595c9e0a4a54b1ef55fb178f6deeee31ff" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.35</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bd05ad86efd33899ea3b32b7ed1a482bc6997f" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.43</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4082202243548ced8a0d06b10b7e9ffd11225f9" translate="yes" xml:space="preserve">
          <source>Fixed in version: 0.45</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7762ab1f09d953c6f1610b6340e1b5f2b6d726" translate="yes" xml:space="preserve">
          <source>Fixed in version: 1.1.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb1364271d22264a4012395e53d8c7918c07fa7" translate="yes" xml:space="preserve">
          <source>Fixed in version: 1.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388c87de5e532d033e7c749d0900a68a3b45fb12" translate="yes" xml:space="preserve">
          <source>Fixed in version: 2.15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a93260b08de69ccea121c2ab5c95665512b9b8" translate="yes" xml:space="preserve">
          <source>Fixed some dead links to point to active resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfb2a96b4b5f73e1fa6089350af79bfe24ae8f4" translate="yes" xml:space="preserve">
          <source>Fixed, sped-up and enhanced by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2001-2003. Further streamlining (api_version 1 etc.) by Tels 2004-2007.</source>
          <target state="translated">Исправлено, ускорено и улучшено Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2001-2003. Дальнейшая оптимизация (api_version 1 и т. Д.) Tels 2004-2007.</target>
        </trans-unit>
        <trans-unit id="330c21b294e09432feca3391543087a4db397d9c" translate="yes" xml:space="preserve">
          <source>Fixed, sped-up and enhanced by Tels http://bloodgate.com 2001-2003. Further streamlining (api_version 1 etc.) by Tels 2004-2007.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405b043abf0e87a42c31429945169f0dd7c5d88d" translate="yes" xml:space="preserve">
          <source>Fixed, speed-up, streamlined and enhanced by Tels 2001 - 2007.</source>
          <target state="translated">Исправлена,ускорена,рационализирована и усовершенствована Телс 2001-2007.</target>
        </trans-unit>
        <trans-unit id="3ca59c972a528af8e7a14352bd6c37f9e70222bb" translate="yes" xml:space="preserve">
          <source>Fixed-length mode. Leave-blanks mode.</source>
          <target state="translated">Режим фиксированной длины.Режим &quot;оставить заготовки&quot;.</target>
        </trans-unit>
        <trans-unit id="f1659338bac13f477d12cd7d829279169513026b" translate="yes" xml:space="preserve">
          <source>Fixed-length record format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959687f22ec208a2b336a28e627dad8c7a247264" translate="yes" xml:space="preserve">
          <source>Fixed-table-size, fixed-key-length hashing</source>
          <target state="translated">Хеширование с фиксированным размером стола,фиксированной длиной ключа</target>
        </trans-unit>
        <trans-unit id="d34a8295ae4d44653579918a6b463ec2c7d9fc59" translate="yes" xml:space="preserve">
          <source>Fixes up numerous file and directory macros to insure VMS syntax regardless of input syntax. Also makes lists of files comma-separated.</source>
          <target state="translated">Исправлены многочисленные макросы для файлов и каталогов,чтобы застраховать синтаксис VMS вне зависимости от синтаксиса входных данных.Также сделаны списки файлов,разделенные запятыми.</target>
        </trans-unit>
        <trans-unit id="d40ac06cf36190f3752a227ce1d3e621fc0665b2" translate="yes" xml:space="preserve">
          <source>Fixing security issues and user-visible bugs in the core</source>
          <target state="translated">Исправление проблем безопасности и видимых пользователю ошибок в ядре</target>
        </trans-unit>
        <trans-unit id="29642e3ca9418aa5ace5fd4900eeec9b27f8007e" translate="yes" xml:space="preserve">
          <source>Fixing system locale configuration</source>
          <target state="translated">Настройка системной локали</target>
        </trans-unit>
        <trans-unit id="73cc249f918f8969b3fba39295da9b9b7fa5e26c" translate="yes" xml:space="preserve">
          <source>Flag bits modifying the behavior of an object handle and accessed via &lt;code&gt;GetHandleInformation&lt;/code&gt; and &lt;code&gt;SetHandleInformation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daddf7d8bd736866de91cc44a32f0bc29d86f601" translate="yes" xml:space="preserve">
          <source>Flags =&amp;gt; $uFlags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83689a42f870aeb8b820eedd460f0c265e2f627" translate="yes" xml:space="preserve">
          <source>Flags are ORed together values, such as &lt;code&gt;MSG_BCAST&lt;/code&gt;, &lt;code&gt;MSG_OOB&lt;/code&gt;, &lt;code&gt;MSG_TRUNC&lt;/code&gt;. The default value for the flags is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b4613698349d05ae2cbeb0e1d73fba54ce4b08" translate="yes" xml:space="preserve">
          <source>Flags described further in &lt;a href=&quot;perlretut#Using-regular-expressions-in-Perl&quot;&gt;&quot;Using regular expressions in Perl&quot; in perlretut&lt;/a&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6014390aa4fd7e389a7243e9000e4c32cd912a43" translate="yes" xml:space="preserve">
          <source>Flags described further in &lt;a href=&quot;perlretut#Using-regular-expressions-in-Perl&quot;&gt;Using regular expressions in Perl in perlretut&lt;/a&gt; are:</source>
          <target state="translated">Флаги, описанные далее &lt;a href=&quot;perlretut#Using-regular-expressions-in-Perl&quot;&gt;в разделе Использование регулярных выражений в Perl в perlretut,&lt;/a&gt; следующие:</target>
        </trans-unit>
        <trans-unit id="95cffe720f5843720b2f2791ed48ac4c103a313f" translate="yes" xml:space="preserve">
          <source>Flags may be one of:</source>
          <target state="translated">Флаги могут быть одним из них:</target>
        </trans-unit>
        <trans-unit id="adc8e7329bf4555216d7a3bfa9cef9955718902b" translate="yes" xml:space="preserve">
          <source>Flags. Use one of:</source>
          <target state="translated">Флаги.Используй один из них:</target>
        </trans-unit>
        <trans-unit id="6103463409204cb527cdac9c41a9a07b15e276a0" translate="yes" xml:space="preserve">
          <source>Flavors of Perl numeric operations</source>
          <target state="translated">Вкусы числовых операций Perl</target>
        </trans-unit>
        <trans-unit id="8b3926c9cc6bcbb663057b65eb8ebe30826dbb42" translate="yes" xml:space="preserve">
          <source>Floating Point Anomalies with Perl on OS/390</source>
          <target state="translated">Аномалии плавающей точки с Perl на OS/390</target>
        </trans-unit>
        <trans-unit id="5a5e19070c0cf7a423dbae9f66841c3fabf1ca2c" translate="yes" xml:space="preserve">
          <source>Floating point Numbers</source>
          <target state="translated">Числа с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="cdc8e382e56841728abcd2d046d6a53518ddf43c" translate="yes" xml:space="preserve">
          <source>Floating point anomalies on BS2000</source>
          <target state="translated">Аномалии с плавающей точкой на BS2000</target>
        </trans-unit>
        <trans-unit id="6458d7358a6010e05479d7d3065fd1dc70e53021" translate="yes" xml:space="preserve">
          <source>Floating point comparisons which handle the &lt;code&gt;NaN&lt;/code&gt; [C99].</source>
          <target state="translated">Сравнение с плавающей точкой, обрабатывающее &lt;code&gt;NaN&lt;/code&gt; [C99].</target>
        </trans-unit>
        <trans-unit id="12643a69610ec7d65c380165a5bf7f423a31ce49" translate="yes" xml:space="preserve">
          <source>Floating point constants are truncated to integer. All parts and results of expressions are also truncated.</source>
          <target state="translated">Константы с плавающей точкой усекаются до целого числа.Все части и результаты выражений также усекаются.</target>
        </trans-unit>
        <trans-unit id="cede3872ee4aa83d2bda6798fe8042b21fbcd8fe" translate="yes" xml:space="preserve">
          <source>Floating point values include the special values &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; , for infinity and not-a-number. The infinity can be also negative.</source>
          <target state="translated">Значения с плавающей запятой включают специальные значения &lt;code&gt;Inf&lt;/code&gt; и &lt;code&gt;NaN&lt;/code&gt; для бесконечности и не числа. Бесконечность также может быть отрицательной.</target>
        </trans-unit>
        <trans-unit id="bd8d0ea7718d52d1572fd73c8242126ae8862128" translate="yes" xml:space="preserve">
          <source>Floating point values include the special values &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;, for infinity and not-a-number. The infinity can be also negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709713db0a0caca978c5c319c22711e133d5178a" translate="yes" xml:space="preserve">
          <source>Floating-point Arithmetic</source>
          <target state="translated">Арифметика с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="c49d97794f62dac628d25ae12fcfb3dd4f71313b" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are only approximations to what a mathematician would call real numbers. There are infinitely more reals than floats, so some corners must be cut. For example:</source>
          <target state="translated">Числа с плавающей точкой-это только приближения к тому,что математик назвал бы вещественными числами.Реалов бесконечно больше,чем поплавков,поэтому некоторые углы должны быть срезаны.Например:</target>
        </trans-unit>
        <trans-unit id="6477529bc9646ecedaf8e4ae8b6c8d51a8bc8383" translate="yes" xml:space="preserve">
          <source>Floppy, Zip, Offline Mode</source>
          <target state="translated">Флоппи,Зип,Автономный режим.</target>
        </trans-unit>
        <trans-unit id="8adaf25b2605056f2e07d65e18faabac22731925" translate="yes" xml:space="preserve">
          <source>Florian Ragwitz</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fba67b0eee19071b7f3acb8dc1d2691dff0393" translate="yes" xml:space="preserve">
          <source>Florian Ragwitz &amp;lt;flora@cpan.org&amp;gt;, 2010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc546391510adffd5d42495f4fcd24b543fc28de" translate="yes" xml:space="preserve">
          <source>Florian Ragwitz &amp;lt;rafl@debian.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c936d7c5a91dca9198671c84f6c29001e1635e0" translate="yes" xml:space="preserve">
          <source>Flush</source>
          <target state="translated">Flush</target>
        </trans-unit>
        <trans-unit id="8a27fc117a1fc8843011dfb82df5f33f7d437936" translate="yes" xml:space="preserve">
          <source>Flush any buffered write data. May possibly be called on readable handles too. Should return 0 on success, -1 on error.</source>
          <target state="translated">Промойте любые буферизованные данные при записи.Может быть вызван и на читаемых ручках.Должен возвращать 0 на успех,-1 на ошибку.</target>
        </trans-unit>
        <trans-unit id="209099cf56b373e5745037d20085b43c5b416a14" translate="yes" xml:space="preserve">
          <source>Flush the cache.</source>
          <target state="translated">Промой кэш.</target>
        </trans-unit>
        <trans-unit id="7ea0600877c74e6c0fe89bbd3afcee971963f892" translate="yes" xml:space="preserve">
          <source>Flushes all pending output into the compressed file.</source>
          <target state="translated">Промывает все ожидающие вывода в сжатый файл.</target>
        </trans-unit>
        <trans-unit id="082adecce9ec5788047efdf4da353f56b28da59d" translate="yes" xml:space="preserve">
          <source>Flushes any cached buffers to disk.</source>
          <target state="translated">Промывает любые кэшированные буферы на диск.</target>
        </trans-unit>
        <trans-unit id="0946db717a74209041c8e2e8789decc09b0c8c1a" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data and then closes the output file/buffer.</source>
          <target state="translated">Промывает любые отложенные сжатые данные,а затем закрывает выходной файл/буфер.</target>
        </trans-unit>
        <trans-unit id="cd9697be2c5b575554432a6587a955d4836a8e65" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Сбрасывает все ожидающие обработки сжатые данные в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ff0666143651d5f03566ea681f5c75e80fe909d" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3085611069b17b4d4af56b56fce73f275cd2d511" translate="yes" xml:space="preserve">
          <source>Flushes any pending compressed data to the output file/buffer.</source>
          <target state="translated">Сбрасывает все отложенные сжатые данные в выходной файл/буфер.</target>
        </trans-unit>
        <trans-unit id="4773551f475406069f00051e9d104d3a35f79ad2" translate="yes" xml:space="preserve">
          <source>Flushes the directory cache.</source>
          <target state="translated">Промывает кэш каталогов.</target>
        </trans-unit>
        <trans-unit id="928fef4d7417d4484f1f3fc7a84c5c97a0c10f03" translate="yes" xml:space="preserve">
          <source>Foldcase</source>
          <target state="translated">Foldcase</target>
        </trans-unit>
        <trans-unit id="8b66e3d01ed62d27bcca95567dd515e099e2e9d3" translate="yes" xml:space="preserve">
          <source>Follow the guidelines in &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt;.</source>
          <target state="translated">Следуйте инструкциям в &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="630bce1629a6b0e8bb4da21f695760c25a3efb55" translate="yes" xml:space="preserve">
          <source>Follow the instructions and links on:</source>
          <target state="translated">Следуйте инструкциям и ссылкам:</target>
        </trans-unit>
        <trans-unit id="444ce8dc04bb6c539c04e93cd526f6da5b1561ad" translate="yes" xml:space="preserve">
          <source>Follow the instructions in</source>
          <target state="translated">Следуйте инструкциям в</target>
        </trans-unit>
        <trans-unit id="e85aee671a6a0df6df7d5aaa8c5a698b13785622" translate="yes" xml:space="preserve">
          <source>Follow the messages ... and you're done.</source>
          <target state="translated">Следуй за сообщениями...и все.</target>
        </trans-unit>
        <trans-unit id="e08690a98d641e3cbc8171b5ab25389a2271c13b" translate="yes" xml:space="preserve">
          <source>Follow the normal instructions for building perl; e.g, enter bash, run the Configure script, then use &quot;gmake&quot; to build perl.</source>
          <target state="translated">Следуйте обычным инструкциям по сборке perl;например,введите bash,запустите скрипт Configure,затем используйте &quot;gmake&quot; для сборки perl.</target>
        </trans-unit>
        <trans-unit id="864440f25ee94f2eebf5d9e755372bbba17b62ef" translate="yes" xml:space="preserve">
          <source>Followed by a view command to see where we are:</source>
          <target state="translated">Следующая команда просмотра,чтобы увидеть,где мы находимся:</target>
        </trans-unit>
        <trans-unit id="1a41044e3e9273867bb8cc0dfd68db2b82f20837" translate="yes" xml:space="preserve">
          <source>Following bisection you may wish to configure, build and test perl at commits identified by the bisection process. Sometimes, particularly with older perls, &lt;code&gt;make&lt;/code&gt; may fail during this process. In this case you may be able to patch the source code at the older commit point. To do so, please follow the suggestions provided in &lt;a href=&quot;perlhack#Building-perl-at-older-commits&quot;&gt;&quot;Building perl at older commits&quot; in perlhack&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2431a18b10300a9cb947cadd732f97519440b32" translate="yes" xml:space="preserve">
          <source>Following codes are same.</source>
          <target state="translated">Следующие коды те же самые.</target>
        </trans-unit>
        <trans-unit id="1a1472c72b3b35650919410041b1e204b2d5f373" translate="yes" xml:space="preserve">
          <source>Following the normal convention of sixteen-color emulators, this module provides a pair of attributes for each color. For every normal color (0 through 7), the corresponding bright color (8 through 15) is obtained by prepending the string &lt;code&gt;bright_&lt;/code&gt; to the normal color name. For example, &lt;code&gt;red&lt;/code&gt; is color 1 and &lt;code&gt;bright_red&lt;/code&gt; is color 9. The same applies for background colors: &lt;code&gt;on_red&lt;/code&gt; is the normal color and &lt;code&gt;on_bright_red&lt;/code&gt; is the bright color. Capitalize these strings for the constant interface.</source>
          <target state="translated">Следуя обычному соглашению эмуляторов шестнадцати цветов, этот модуль предоставляет пару атрибутов для каждого цвета. Для каждого нормального цвета (от 0 до 7) соответствующий яркий цвет (от 8 до 15) получается добавлением строки &lt;code&gt;bright_&lt;/code&gt; к имени обычного цвета. Например, &lt;code&gt;red&lt;/code&gt; - это цвет 1, а &lt;code&gt;bright_red&lt;/code&gt; - это цвет 9. То же самое относится и к цветам фона: &lt;code&gt;on_red&lt;/code&gt; - это нормальный цвет, а &lt;code&gt;on_bright_red&lt;/code&gt; - это яркий цвет. Используйте эти строки для постоянного интерфейса.</target>
        </trans-unit>
        <trans-unit id="339a6f2fa2aeea3b1c39c8b8cdd86cfc5ca212f8" translate="yes" xml:space="preserve">
          <source>Following the optimizer information is a dump of the offset/length table, here split across several lines:</source>
          <target state="translated">Следующая за оптимизатором информация представляет собой дамп таблицы смещения/длины,здесь она разделена на несколько строк:</target>
        </trans-unit>
        <trans-unit id="122efc697c2e89462f088f0feebaa5c870210258" translate="yes" xml:space="preserve">
          <source>Follows VMS naming conventions for executable files. If the name passed in doesn't exactly match an executable file, appends</source>
          <target state="translated">Следуйте соглашениям по именованию VMS для исполняемых файлов.Если передаваемое имя не точно совпадает с исполняемым файлом,то добавляется</target>
        </trans-unit>
        <trans-unit id="fcc0b02fa7c86000beeb89a30eaf5629188e75a8" translate="yes" xml:space="preserve">
          <source>Foo.pm</source>
          <target state="translated">Foo.pm</target>
        </trans-unit>
        <trans-unit id="da5d4e2f7dabe2f03b8a59da35c55f83a0e24606" translate="yes" xml:space="preserve">
          <source>Foo.txt</source>
          <target state="translated">Foo.txt</target>
        </trans-unit>
        <trans-unit id="d715482d55fabe025e318c022fd82a1c933e4100" translate="yes" xml:space="preserve">
          <source>Foo.xs</source>
          <target state="translated">Foo.xs</target>
        </trans-unit>
        <trans-unit id="df808fb24c9efb33a59855928a13b51fb91724c1" translate="yes" xml:space="preserve">
          <source>Foo/Bar.pm</source>
          <target state="translated">Foo/Bar.pm</target>
        </trans-unit>
        <trans-unit id="ac143ab3d1c17f2a31332e229167b913e207dde2" translate="yes" xml:space="preserve">
          <source>Foo::Bar</source>
          <target state="translated">Foo::Bar</target>
        </trans-unit>
        <trans-unit id="cdf8cb90a5029548db08a3400753c839b0a8694f" translate="yes" xml:space="preserve">
          <source>Footers</source>
          <target state="translated">Footers</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="d69332b2911636a58346ec04cf4c168ff3905a2a" translate="yes" xml:space="preserve">
          <source>For &quot;Insecure &lt;code&gt;$ENV{PATH}&lt;/code&gt; &quot; messages, you need to set &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; to a known value, and each directory in the path must be absolute and non-writable by others than its owner and group. You may be surprised to get this message even if the pathname to your executable is fully qualified. This is</source>
          <target state="translated">Для сообщений &amp;laquo;Небезопасный &lt;code&gt;$ENV{PATH}&lt;/code&gt; &amp;raquo; вам необходимо установить &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; на известное значение, и каждый каталог в пути должен быть абсолютным и недоступным для записи другим лицам, кроме его владельца и группы. Вы можете быть удивлены, получив это сообщение, даже если путь к вашему исполняемому файлу полностью определен. Это</target>
        </trans-unit>
        <trans-unit id="458ce0be0117f196e68aa4441aff2c235ffca77c" translate="yes" xml:space="preserve">
          <source>For &quot;Insecure &lt;code&gt;$ENV{PATH}&lt;/code&gt;&quot; messages, you need to set &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; to a known value, and each directory in the path must be absolute and non-writable by others than its owner and group. You may be surprised to get this message even if the pathname to your executable is fully qualified. This is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714f0a7ac0b9ec15987d10f44460eec1efc59934" translate="yes" xml:space="preserve">
          <source>For &quot;big&quot; data stores (i.e. ones that exceed available memory) consider using one of the DB modules to store it on disk instead of in RAM. This will incur a penalty in access time, but that's probably better than causing your hard disk to thrash due to massive swapping.</source>
          <target state="translated">Для &quot;больших&quot; хранилищ данных (т.е.тех,которые превышают доступную память)подумайте об использовании одного из модулей БД для их хранения на диске,а не в оперативной памяти.Это повлечет за собой штрафные санкции за время доступа,но это,вероятно,лучше,чем вызвать обрыв жесткого диска из-за массивной замены.</target>
        </trans-unit>
        <trans-unit id="216bed6df8bedc927acdb0d380e3ce0b17cdad4f" translate="yes" xml:space="preserve">
          <source>For &quot;g&quot; and &quot;G&quot;, this specifies the maximum number of digits to show, including those prior to the decimal point and those after it; for example:</source>
          <target state="translated">Для &quot;g&quot; и &quot;G&quot; указывается максимальное количество отображаемых цифр,включая цифры,предшествующие десятичной точке,и цифры,следующие за ней;например:</target>
        </trans-unit>
        <trans-unit id="a648af0ad15c0dfdeff44093b0ccaf3206a57268" translate="yes" xml:space="preserve">
          <source>For &quot;g&quot; and &quot;G&quot;, this specifies the maximum number of significant digits to show; for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f35f055609ac0e205f7abbab4e89f59e70313b8" translate="yes" xml:space="preserve">
          <source>For 256-color emulators, this module additionally provides &lt;code&gt;ansi0&lt;/code&gt; through &lt;code&gt;ansi15&lt;/code&gt; , which are the same as colors 0 through 15 in sixteen-color emulators but use the 256-color escape syntax, &lt;code&gt;grey0&lt;/code&gt; through &lt;code&gt;grey23&lt;/code&gt; ranging from nearly black to nearly white, and a set of RGB colors. The RGB colors are of the form &lt;code&gt;rgb&lt;i&gt;RGB&lt;/i&gt;&lt;/code&gt; where</source>
          <target state="translated">Для 256-цветных эмуляторов этот модуль дополнительно предоставляет от &lt;code&gt;ansi0&lt;/code&gt; до &lt;code&gt;ansi15&lt;/code&gt; , которые совпадают с цветами от 0 до 15 в шестнадцатикрасочных эмуляторах, но используют 256-цветный escape-синтаксис, от &lt;code&gt;grey0&lt;/code&gt; до &lt;code&gt;grey23&lt;/code&gt; в диапазоне от почти черного до почти белого, и набор цветов RGB. Цвета RGB имеют вид &lt;code&gt;rgb&lt;i&gt;RGB&lt;/i&gt;&lt;/code&gt; где</target>
        </trans-unit>
        <trans-unit id="a433027d577c25f33bfe8c1ce8c632502b230d50" translate="yes" xml:space="preserve">
          <source>For 256-color emulators, this module additionally provides &lt;code&gt;ansi0&lt;/code&gt; through &lt;code&gt;ansi15&lt;/code&gt;, which are the same as colors 0 through 15 in sixteen-color emulators but use the 256-color escape syntax, &lt;code&gt;grey0&lt;/code&gt; through &lt;code&gt;grey23&lt;/code&gt; ranging from nearly black to nearly white, and a set of RGB colors. The RGB colors are of the form &lt;code&gt;rgb&lt;i&gt;RGB&lt;/i&gt;&lt;/code&gt; where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dba65b3ab3aa02b8076d20aa76888328be8a5c9" translate="yes" xml:space="preserve">
          <source>For 256-color terminals, the recognized foreground colors are:</source>
          <target state="translated">Для 256-цветных терминалов распознаются цвета переднего плана:</target>
        </trans-unit>
        <trans-unit id="c5d9dc655e83477215f485473f4a8c147ee45bb5" translate="yes" xml:space="preserve">
          <source>For 5.11.0 and later, B::RV is abolished, and IVs can be used to store references, and a new type B::REGEXP is introduced, giving this structure:</source>
          <target state="translated">Для 5.11.0 и более поздних версий,B::RV отменяется,а для хранения ссылок можно использовать IVs,и вводится новый тип B::REGEXP,дающий такую структуру:</target>
        </trans-unit>
        <trans-unit id="a3b9459bd4ecaaeabf24e953c1001374ffa8f984" translate="yes" xml:space="preserve">
          <source>For 5.9.0 and earlier, PVLV is a direct subclass of PVMG, and BM is still present as a distinct type, so the base of this diagram is</source>
          <target state="translated">Для 5.9.0 и более ранних версий PVLV является прямым подклассом PVMG,а BM все еще присутствует как отдельный тип,поэтому основой этой диаграммы является</target>
        </trans-unit>
        <trans-unit id="afcd88ba3a43999bb13c6a0581bba573aa2225e9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67046d89d36d48c7efd6e356e0580695c3d2279" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;, you write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb349f3962801c59d331a216fd1e10a8dbe12696" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt;, an internal stack of integer arguments unpacked so far is used. You write &lt;code&gt;/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f07249c48d21c67ab8413541e063aa7a291c88" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;sed&lt;/b&gt; devotees, &lt;code&gt;y&lt;/code&gt; is provided as a synonym for &lt;code&gt;tr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12aacf89124604a604d76e2c1ffa17f7f2f13984" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, you have to be more elaborate:</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , вы должны быть более сложными:</target>
        </trans-unit>
        <trans-unit id="33083321ae1d2e32225ec575a8dfdad8fc51bef0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8b70fae6950aa7895e620a82de485cc8ac6c8f65" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, you write</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; вы пишете</target>
        </trans-unit>
        <trans-unit id="68b84a9c646a03b6d82fe08053257a1d8dc4ee20" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, an internal stack of integer arguments unpacked so far is used. You write &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; используется внутренний стек целочисленных аргументов, распакованных до сих пор. Вы пишете &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c6bfa42e2fbb77bda7d82e8856005087ade0aff" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f6f91e66939fc35306c48af011860c291352dd16" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, you write</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; вы пишете</target>
        </trans-unit>
        <trans-unit id="9437652f34a1038c4388b97e25d520817a521814" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, an internal stack of integer arguments unpacked so far is used. You write &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">Для &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; используется внутренний стек целочисленных аргументов, распакованных до сих пор. Вы пишете &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9c5e92c976c0b87d55fa26353e0a93acdc6c1ce" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Build.PL&lt;/code&gt; -based distributions, use the --install_base option:</source>
          <target state="translated">Для &lt;code&gt;Build.PL&lt;/code&gt; основе Build.PL используйте параметр --install_base:</target>
        </trans-unit>
        <trans-unit id="4ecf98761e1a3b107c4b1b90f83825ea697cbbba" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Build.PL&lt;/code&gt;-based distributions, use the --install_base option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c829467e9c4b40b28176534e89832125f74b7e18" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_PTROBJ is optimized to a T_PTRREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_PTROBJ оптимизирован для T_PTRREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="3f0884055516afc34f2b13593cc64878ec3fa103" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_REFOBJ is optimized to a T_REFREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_REFOBJ оптимизирован для T_REFREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="1484118e1397c1b2c2710771f398a13c8a642ded" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DESTROY&lt;/code&gt; XSUBs only, a T_REF_IV_PTR is optimized to a T_PTRREF. This means the class check is skipped.</source>
          <target state="translated">Для &lt;code&gt;DESTROY&lt;/code&gt; только XSUBs, T_REF_IV_PTR оптимизирован для T_PTRREF. Это означает, что проверка класса пропускается.</target>
        </trans-unit>
        <trans-unit id="66b2f35d5f8f8421c2121030f67ed492cb7aab30" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; codes without a &quot;name|&quot; part, only &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; and &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt; codes may occur. That is, authors should not use &quot;&lt;code&gt;L&amp;lt;B&amp;lt;Foo::Bar&amp;gt;&amp;gt;&lt;/code&gt; &quot;.</source>
          <target state="translated">Для кодов &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; без &quot;имени |&quot; части могут встречаться только коды &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; и &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt; . То есть авторы не должны использовать &amp;laquo; &lt;code&gt;L&amp;lt;B&amp;lt;Foo::Bar&amp;gt;&amp;gt;&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f0f87c65e7fff8eb6f507b6ea128ab017e2cdc4d" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; codes without a &quot;name|&quot; part, only &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; and &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt; codes may occur. That is, authors should not use &quot;&lt;code&gt;L&amp;lt;B&amp;lt;Foo::Bar&amp;gt;&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45be8d936a33aec210b53bde0ce7f71408df21fa" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Makefile.PL&lt;/code&gt; -based distributions, use the INSTALL_BASE option when generating Makefiles:</source>
          <target state="translated">Для дистрибутивов на основе &lt;code&gt;Makefile.PL&lt;/code&gt; используйте параметр INSTALL_BASE при создании Makefile:</target>
        </trans-unit>
        <trans-unit id="1d9c46fd3bfeb22a99c449a7ef39ec2d82f1f5fd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Makefile.PL&lt;/code&gt;-based distributions, use the INSTALL_BASE option when generating Makefiles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6affbdccf85e4a86ac6e1ea88088cb893b7138f5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;\N{NAME}&lt;/code&gt; , it is a fatal error if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; is in effect and the input name is that of a character that won't fit into a byte (i.e., whose ordinal is above 255).</source>
          <target state="translated">Для &lt;code&gt;\N{NAME}&lt;/code&gt; это фатальная ошибка, если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , а имя входа - это имя символа, который не помещается в байт (т. Е. Чей порядковый номер больше 255).</target>
        </trans-unit>
        <trans-unit id="56c98115c3b61593c6a9cc1d27a8a4d0986a1864" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;\N{NAME}&lt;/code&gt;, it is a fatal error if &lt;code&gt;use bytes&lt;/code&gt; is in effect and the input name is that of a character that won't fit into a byte (i.e., whose ordinal is above 255).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea67c402005690cbe6252230aeb1b9e29463940b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;last&lt;/code&gt;, you have to be more elaborate and put braces around it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79cd427b6a6f27bc463bdbb4440a5f8655fa529" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode=anyorder&lt;/code&gt; CPAN.pm answers a question as soon as the timeout is reached for the next byte in the input stream. In this mode you can use the &lt;code&gt;reuse&lt;/code&gt; parameter to decide what will happen with a question-answer pair after it has been used. In the default case (reuse=0) it is removed from the array, avoiding being used again accidentally. If you want to answer the question &lt;code&gt;Do you really want to &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; that&lt;/code&gt; several times, then it must be included in the array at least as often as you want this answer to be given. Setting the parameter &lt;code&gt;reuse&lt;/code&gt; to 1 makes this repetition unnecessary.</source>
          <target state="translated">Для &lt;code&gt;mode=anyorder&lt;/code&gt; CPAN.pm отвечает на вопрос, как только истечет время ожидания для следующего байта во входном потоке. В этом режиме вы можете использовать параметр &lt;code&gt;reuse&lt;/code&gt; чтобы решить, что произойдет с парой вопрос-ответ после ее использования. В случае по умолчанию (повторное использование = 0) он удаляется из массива, чтобы избежать случайного повторного использования. Если вы хотите ответить на вопрос &amp;laquo; &lt;code&gt;Do you really want to &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; that&lt;/code&gt; несколько раз&amp;raquo;, то его необходимо включать в массив как минимум так часто, как вы хотите, чтобы этот ответ давался. Установка &lt;code&gt;reuse&lt;/code&gt; параметра на 1 делает это повторение ненужным.</target>
        </trans-unit>
        <trans-unit id="9c8630b83e11b62d7083ae08d4bcbe9c6233a2fe" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode=deterministic&lt;/code&gt; , the CPAN.pm injects the corresponding answer as soon as the stream matches the regular expression.</source>
          <target state="translated">Для &lt;code&gt;mode=deterministic&lt;/code&gt; CPAN.pm вводит соответствующий ответ, как только поток соответствует регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="92e601981acde6d883af496a8f5b209e79aaf450" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;redo&lt;/code&gt;, just double the braces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef14d5377f916291fb2a9d24329993be66568e7c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;signal&lt;/code&gt; /&lt;code&gt;sigaction&lt;/code&gt; , use &lt;code&gt;rsignal(signo, handler)&lt;/code&gt; .</source>
          <target state="translated">Для &lt;code&gt;signal&lt;/code&gt; / &lt;code&gt;sigaction&lt;/code&gt; используйте &lt;code&gt;rsignal(signo, handler)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c6ef77a69497373d8f3b5756e0eb701254fe1dc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;signal&lt;/code&gt;/&lt;code&gt;sigaction&lt;/code&gt;, use &lt;code&gt;rsignal(signo, handler)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ab0c714668cca72c9c6d7568133eb235eee645" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;version&lt;/code&gt; 2 (or higher), the filename should end in '.json'. &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; is the default JSON backend. Using another JSON backend requires &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; 2.5 or later and you must set the &lt;code&gt;$ENV{PERL_JSON_BACKEND}&lt;/code&gt; to a supported alternate backend like &lt;a href=&quot;JSON::XS&quot;&gt;JSON::XS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c2fddde0dcb7e596a58cd7354413b00cdbb867" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;version&lt;/code&gt; greater than or equal to 2, the string will be serialized as JSON. For &lt;code&gt;version&lt;/code&gt; less than 2, the string will be serialized as YAML. In both cases, the same rules are followed as in the &lt;code&gt;save()&lt;/code&gt; method for choosing a serialization backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b66f10f5f611d13a272f684c07136d9442ecc4a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;version&lt;/code&gt; less than 2, the filename should end in '.yml'. &lt;a href=&quot;CPAN::Meta::Converter&quot;&gt;CPAN::Meta::Converter&lt;/a&gt; is used to generate an older metadata structure, which is serialized to YAML. CPAN::Meta::YAML is the default YAML backend. You may set the &lt;code&gt;$ENV{PERL_YAML_BACKEND}&lt;/code&gt; to a supported alternative backend, though this is not recommended due to subtle incompatibilities between YAML parsers on CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61181a75805f7799b6c0c697c05f83d8dd25596" translate="yes" xml:space="preserve">
          <source>For BigInts, no padding occurs.</source>
          <target state="translated">Для BigInts не происходит набивка.</target>
        </trans-unit>
        <trans-unit id="a198a8cc7df6e759ce28837fe6aa6551a85a48c7" translate="yes" xml:space="preserve">
          <source>For C99 and later compilers, these correspond to things like &lt;code&gt;INT_MAX&lt;/code&gt;, which are available to the C code. But these constants, furnished by Perl, allow code compiled on earlier compilers to portably have access to the same constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159007f5b1b467e0716f482dcfafb34641ca6593" translate="yes" xml:space="preserve">
          <source>For CPAN distributions, you can assume that the XS types defined by the perl core are already available. Additionally, the core typemap has default XS types for a large number of C types. For example, if you simply return a &lt;code&gt;char *&lt;/code&gt; from your XSUB, the core typemap will have this C type associated with the T_PV XS type. That means your C string will be copied into the PV (pointer value) slot of a new scalar that will be returned from your XSUB to Perl.</source>
          <target state="translated">Для дистрибутивов CPAN вы можете предположить, что типы XS, определенные ядром perl, уже доступны. Кроме того, основная карта типов имеет типы XS по умолчанию для большого количества типов C. Например, если вы просто вернете &lt;code&gt;char *&lt;/code&gt; из своего XSUB, в основной карте типов этот тип C будет связан с типом T_PV XS. Это означает, что ваша строка C будет скопирована в слот PV (значение указателя) нового скаляра, который будет возвращен из вашего XSUB в Perl.</target>
        </trans-unit>
        <trans-unit id="067800c18ab159aedbe7176e2a1ed014fc0ab19b" translate="yes" xml:space="preserve">
          <source>For CPerlMode, see &lt;a href=&quot;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&quot;&gt;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&lt;/a&gt;</source>
          <target state="translated">Для CPerlMode см. &lt;a href=&quot;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&quot;&gt;Http://www.emacswiki.org/cgi-bin/wiki/CPerlMode.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="341ec625bce09fbf5b1fa92d6e293411fe6cb9c3" translate="yes" xml:space="preserve">
          <source>For CPerlMode, see &lt;a href=&quot;https://www.emacswiki.org/cgi-bin/wiki/CPerlMode&quot;&gt;http://www.emacswiki.org/cgi-bin/wiki/CPerlMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e12f48bd95a450fad76910cdbdd13b43b481003" translate="yes" xml:space="preserve">
          <source>For Haiku specific problems contact the HaikuPorts developers: &lt;a href=&quot;http://ports.haiku-files.org/&quot;&gt;http://ports.haiku-files.org/&lt;/a&gt;</source>
          <target state="translated">По вопросам, связанным с конкретными проблемами Haiku, обращайтесь к разработчикам HaikuPorts: &lt;a href=&quot;http://ports.haiku-files.org/&quot;&gt;http://ports.haiku-files.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aa725456deafc0e9398eb1c8777ad30635d6763" translate="yes" xml:space="preserve">
          <source>For Irix 6.2 with perl threads, you have to have the following patches installed:</source>
          <target state="translated">Для Irix 6.2 с perl-резьбой необходимо установить следующие заплаты:</target>
        </trans-unit>
        <trans-unit id="a36b859180dd2062331e5d0956bbf601eda4340d" translate="yes" xml:space="preserve">
          <source>For Loops</source>
          <target state="translated">Для петлей</target>
        </trans-unit>
        <trans-unit id="f525ec14cf3a7406a3fd20ef6618215772bcd0e1" translate="yes" xml:space="preserve">
          <source>For Mac OS X see README.macosx</source>
          <target state="translated">Для Mac OS X см.README.macosx.</target>
        </trans-unit>
        <trans-unit id="eed4676ab31dbcb6f11dfd095f0c73b413f8978b" translate="yes" xml:space="preserve">
          <source>For Math::BigInt objects, no padding occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38d4d7cfb9b600d5802da277c23639b1baaadfc" translate="yes" xml:space="preserve">
          <source>For OS/2 just use</source>
          <target state="translated">Для OS/2 просто используйте</target>
        </trans-unit>
        <trans-unit id="ce1ecc333508fb99ea251c3b1fc189bc1c2a1790" translate="yes" xml:space="preserve">
          <source>For Perl 5.9.4 or later, this module's effect is lexical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e030cb0c555e8c70da95992616dd7168e848f991" translate="yes" xml:space="preserve">
          <source>For Perl versions prior to 5.9.4, this module affects the whole script, instead of inside its lexical block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123b8c1601c884b5764bece329526a87e1364285" translate="yes" xml:space="preserve">
          <source>For Perls earlier than those described above, or when a string is passed to a function outside the scope of &lt;code&gt;unicode_strings&lt;/code&gt; , see the next section.</source>
          <target state="translated">Для Perls более ранних, чем описанные выше, или когда строка передается в функцию, &lt;code&gt;unicode_strings&lt;/code&gt; за пределы unicode_strings , см. Следующий раздел.</target>
        </trans-unit>
        <trans-unit id="3f0e9fab4a1b7e92028bd04a307df33da9707d95" translate="yes" xml:space="preserve">
          <source>For Perls earlier than those described above, or when a string is passed to a function outside the scope of &lt;code&gt;unicode_strings&lt;/code&gt;, see the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e9cd46d8dc985ae6ee50db0816aefe5399b510" translate="yes" xml:space="preserve">
          <source>For RFC 1950, 1951 and 1952 see</source>
          <target state="translated">Для RFC 1950,1951 и 1952 см.</target>
        </trans-unit>
        <trans-unit id="e866e04431ebd2a55ea722b05274f955f01d07ee" translate="yes" xml:space="preserve">
          <source>For RFC 1950, 1951 and 1952 see &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1950.html&quot;&gt;http://www.faqs.org/rfcs/rfc1950.html&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1951.html&quot;&gt;http://www.faqs.org/rfcs/rfc1951.html&lt;/a&gt; and &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1952.html&quot;&gt;http://www.faqs.org/rfcs/rfc1952.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d250a5e514d12306957ae3038fcbffa25a0e46" translate="yes" xml:space="preserve">
          <source>For SV-heads, the first slot in each arena is reserved, and holds a link to the next arena, some flags, and a note of the number of slots. Snaked through each arena chain is a linked list of free items; when this becomes empty, an extra arena is allocated and divided up into N items which are threaded into the free list.</source>
          <target state="translated">Для SV-хедов первый слот в каждой арене зарезервирован и содержит ссылку на следующую арену,некоторые флаги,а также отметку о количестве слотов.Пропущенный через каждую цепочку арен-это связанный список свободных элементов;когда он становится пустым,выделяется дополнительная арена и делится на N элементов,которые попадают в свободный список.</target>
        </trans-unit>
        <trans-unit id="d83cc596cefab565f5916e26bce4790ad8fbd819" translate="yes" xml:space="preserve">
          <source>For Solaris 2.6 and onwards, there are two different ways for 32-bit applications to manipulate large files (files whose size is &amp;gt; 2GByte). (A 64-bit application automatically has largefile support built in by default.)</source>
          <target state="translated">Для Solaris 2.6 и более поздних версий 32-разрядные приложения могут использовать два разных способа управления большими файлами (файлами, размер которых превышает 2 Гбайта). (64-разрядное приложение автоматически имеет встроенную поддержку больших файлов по умолчанию.)</target>
        </trans-unit>
        <trans-unit id="8dd5fe06604a74e02ef8359829b5b43f385d6346" translate="yes" xml:space="preserve">
          <source>For Storable files the rule is that they must be constructed such that &lt;code&gt;Storable::retrieve(file)&lt;/code&gt; returns an array reference and the array elements represent one distropref object each. The conversion from YAML would look like so:</source>
          <target state="translated">Для файлов Storable правило состоит в том, что они должны быть сконструированы таким образом, чтобы &lt;code&gt;Storable::retrieve(file)&lt;/code&gt; возвращала ссылку на массив, а каждый элемент массива представлял один объект distropref. Конвертация из YAML будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="72dfa7009d0195f370727c265fe04b54add44bed" translate="yes" xml:space="preserve">
          <source>For Titlecase, see &lt;a href=&quot;#Titlecase&quot;&gt;&quot;Titlecase&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f58ed6574a36d30b785f4f498f48637179894cd" translate="yes" xml:space="preserve">
          <source>For Titlecase, see &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt;.</source>
          <target state="translated">Для Titlecase см. &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="805f6202ade256f373021f2e5892254d89bc09aa" translate="yes" xml:space="preserve">
          <source>For Unicode versions between 3.1 and 3.1.1 inclusive,</source>
          <target state="translated">Для версий Юникода между 3.1 и 3.1.1 включительно,</target>
        </trans-unit>
        <trans-unit id="04defd080a27e1372a9c1dbe8cf6a89380139dd2" translate="yes" xml:space="preserve">
          <source>For Unicode versions between 3.1 and 3.1.1 inclusive, this field is empty unless there is a special folding for Turkic languages, in which case</source>
          <target state="translated">Для версий Юникода между 3.1 и 3.1.1 включительно,это поле пустое,если только не предусмотрено специальное складывание для тюркских языков,и в этом случае</target>
        </trans-unit>
        <trans-unit id="5ee5d030e77aa7ec603a17bf82531f5a250c7f69" translate="yes" xml:space="preserve">
          <source>For Unix platforms that will be the equivalent of &quot;:unix:perlio&quot; or &quot;:stdio&quot;. Configure is set up to prefer the &quot;:stdio&quot; implementation if the system's library provides for fast access to the buffer (not common on modern architectures); otherwise, it uses the &quot;:unix:perlio&quot; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc319b6a7e7bbc5b0a21fcef4a3c90f8aa75d2f" translate="yes" xml:space="preserve">
          <source>For Unix platforms that will be the equivalent of &quot;unix perlio&quot; or &quot;stdio&quot;. Configure is set up to prefer the &quot;stdio&quot; implementation if the system's library provides for fast access to the buffer; otherwise, it uses the &quot;unix perlio&quot; implementation.</source>
          <target state="translated">Для Unix-платформ,которые будут эквивалентны &quot;unix perlio&quot; или &quot;stdio&quot;.Настройка настроена на предпочтение реализации &quot;stdio&quot;,если системная библиотека обеспечивает быстрый доступ к буферу;в противном случае она использует реализацию &quot;unix perlio&quot;.</target>
        </trans-unit>
        <trans-unit id="ddf8e7684d2c33a7c1793ba874a5f04310e9d4fc" translate="yes" xml:space="preserve">
          <source>For WHENCE, you may also use the constants &lt;code&gt;SEEK_SET&lt;/code&gt; , &lt;code&gt;SEEK_CUR&lt;/code&gt; , and &lt;code&gt;SEEK_END&lt;/code&gt; (start of the file, current position, end of the file) from the Fcntl module. Use of the constants is also more portable than relying on 0, 1, and 2. For example to define a &quot;systell&quot; function:</source>
          <target state="translated">Для WHENCE вы также можете использовать константы &lt;code&gt;SEEK_SET&lt;/code&gt; , &lt;code&gt;SEEK_CUR&lt;/code&gt; и &lt;code&gt;SEEK_END&lt;/code&gt; (начало файла, текущая позиция, конец файла) из модуля Fcntl. Использование констант также более переносимо, чем использование 0, 1 и 2. Например, для определения функции &quot;systell&quot;:</target>
        </trans-unit>
        <trans-unit id="4713c9fe1d32698f610a4455023de1df0dafca06" translate="yes" xml:space="preserve">
          <source>For WHENCE, you may also use the constants &lt;code&gt;SEEK_SET&lt;/code&gt;, &lt;code&gt;SEEK_CUR&lt;/code&gt;, and &lt;code&gt;SEEK_END&lt;/code&gt; (start of the file, current position, end of the file) from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module. Use of the constants is also more portable than relying on 0, 1, and 2. For example to define a &quot;systell&quot; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6f354666b012fb0b17a8266f1f19a75a5cd7ea" translate="yes" xml:space="preserve">
          <source>For Windows, use a binary version of Perl, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstrawberryperl.com%2f&quot;&gt;Strawberry Perl&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActivePerl&lt;/a&gt; come with a bundled C compiler.</source>
          <target state="translated">Для Windows используйте двоичную версию Perl, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstrawberryperl.com%2f&quot;&gt;Strawberry Perl&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActivePerl&lt;/a&gt; поставляются со встроенным компилятором C.</target>
        </trans-unit>
        <trans-unit id="2f693188a9ab8e985eb42e0efe6af6a9b973fe16" translate="yes" xml:space="preserve">
          <source>For Windows, use a binary version of Perl, &lt;a href=&quot;http://strawberryperl.com/&quot;&gt;Strawberry Perl&lt;/a&gt; and &lt;a href=&quot;http://www.activestate.com/activeperl&quot;&gt;ActivePerl&lt;/a&gt; come with a bundled C compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc29c01f1f40b44222495237814148b2dc132b8" translate="yes" xml:space="preserve">
          <source>For Windows, use a binary version of Perl, &lt;a href=&quot;http://strawberryperl.com/&quot;&gt;Strawberry Perl&lt;/a&gt; and &lt;a href=&quot;https://www.activestate.com/activeperl&quot;&gt;ActivePerl&lt;/a&gt; come with a bundled C compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddebad79af1e1455a2ecfd8699251bd717e5556f" translate="yes" xml:space="preserve">
          <source>For a complete description of all MakeMaker methods see &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4096062d54d81319c0a84a69e9fb5a2773f4aae4" translate="yes" xml:space="preserve">
          <source>For a complete description of all MakeMaker methods see &lt;a href=&quot;mm_unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt;.</source>
          <target state="translated">Полное описание всех методов &lt;a href=&quot;mm_unix&quot;&gt;MakeMaker&lt;/a&gt; см. В ExtUtils :: MM_Unix .</target>
        </trans-unit>
        <trans-unit id="8f3ff924d2e8af712b8d94ac227d4cdb31a1d1a1" translate="yes" xml:space="preserve">
          <source>For a complete description of the PerlIO abstraction, consult &lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;.</source>
          <target state="translated">Полное описание абстракции &lt;a href=&quot;perlapio&quot;&gt;PerlIO&lt;/a&gt; см. В perlapio .</target>
        </trans-unit>
        <trans-unit id="cc9dbf2a0896fe69103f2db77a57c60a5869908f" translate="yes" xml:space="preserve">
          <source>For a complete list of features check &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Для получения полного списка функций проверьте &lt;a href=&quot;feature&quot;&gt;функцию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99ae84c904dc87594aba13edffb373bf48c2a651" translate="yes" xml:space="preserve">
          <source>For a complete version of Tom Christiansen's vi configuration file, see &lt;a href=&quot;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&lt;/a&gt; , the standard benchmark file for vi emulators. The file runs best with nvi, the current version of vi out of Berkeley, which incidentally can be built with an embedded Perl interpreter--see &lt;a href=&quot;http://www.cpan.org/src/misc/&quot;&gt;http://www.cpan.org/src/misc/&lt;/a&gt; .</source>
          <target state="translated">Полную версию файла конфигурации vi Тома Кристиансена можно найти в &lt;a href=&quot;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/Tom_Christiansen/scripts/toms.exrc.gz&lt;/a&gt; , стандартном файле тестов для эмуляторов vi. Этот файл лучше всего работает с nvi, текущей версией vi от Berkeley, которая, кстати, может быть создана с помощью встроенного интерпретатора Perl - см. &lt;a href=&quot;http://www.cpan.org/src/misc/&quot;&gt;Http://www.cpan.org/src/misc/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="537d1bfba604bd0eb2268586149eaf40c35ff3c1" translate="yes" xml:space="preserve">
          <source>For a complete version of Tom Christiansen's vi configuration file, see &lt;a href=&quot;http://www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gz&quot;&gt;http://www.cpan.org/authors/id/T/TO/TOMC/scripts/toms.exrc.gz&lt;/a&gt; , the standard benchmark file for vi emulators. The file runs best with nvi, the current version of vi out of Berkeley, which incidentally can be built with an embedded Perl interpreter--see &lt;a href=&quot;http://www.cpan.org/src/misc/&quot;&gt;http://www.cpan.org/src/misc/&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705318b135eb6a59cbff8cc7756ef8640468bf71" translate="yes" xml:space="preserve">
          <source>For a comprehensive date and time representation look at the &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; module on CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666016f5dbbd95bef8b212430bb2473fc2b4dcb2" translate="yes" xml:space="preserve">
          <source>For a comprehensive date and time representation look at the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module on CPAN.</source>
          <target state="translated">Для полного представления даты и времени посмотрите модуль &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; на CPAN.</target>
        </trans-unit>
        <trans-unit id="16eedbead27a5bc94e1ec2e16fa1f6580882483a" translate="yes" xml:space="preserve">
          <source>For a definition of the meaning and valid values for &lt;code&gt;MemLevel&lt;/code&gt; refer to the</source>
          <target state="translated">Для определения значения и допустимых значений для &lt;code&gt;MemLevel&lt;/code&gt; обратитесь к</target>
        </trans-unit>
        <trans-unit id="a1e24d70e0b1f2c78e32cfdc770b1dd79ea05b81" translate="yes" xml:space="preserve">
          <source>For a definition of the meaning and valid values for &lt;code&gt;WindowBits&lt;/code&gt; refer to the</source>
          <target state="translated">Для определения значения и допустимых значений &lt;code&gt;WindowBits&lt;/code&gt; см.</target>
        </trans-unit>
        <trans-unit id="e1dffbb7b106a3b121865266cc8508e33d6967ff" translate="yes" xml:space="preserve">
          <source>For a description of the variables, please have a look at the Glossary file, as written in the Porting folder, or use the url: &lt;a href=&quot;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&quot;&gt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&lt;/a&gt;</source>
          <target state="translated">Описание переменных см. В файле глоссария в папке &amp;laquo;Перенос&amp;raquo; или используйте URL-адрес: &lt;a href=&quot;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary&quot;&gt;http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting / Глоссарий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6062949904481f0e001f1e56a47c4953d0a38335" translate="yes" xml:space="preserve">
          <source>For a description of the variables, please have a look at the Glossary file, as written in the Porting folder, or use the url: https://github.com/Perl/perl5/blob/blead/Porting/Glossary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522716bff942007c71b30eff73794b6a193c83f7" translate="yes" xml:space="preserve">
          <source>For a detailed description of calling conventions from C to Perl, consult &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Подробное описание соглашений о вызовах от C до Perl можно &lt;a href=&quot;perlcall&quot;&gt;найти в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce6a785d30d6f70115ae56148dad0b5f07adc9c9" translate="yes" xml:space="preserve">
          <source>For a discussion of issues surrounding file permissions and &lt;b&gt;-i&lt;/b&gt;, see &lt;a href=&quot;perlfaq5#Why-does-Perl-let-me-delete-read-only-files%3F-Why-does-i-clobber-protected-files%3F-Isn%27t-this-a-bug-in-Perl%3F&quot;&gt;&quot;Why does Perl let me delete read-only files? Why does -i clobber protected files? Isn't this a bug in Perl?&quot; in perlfaq5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb11e0b0c0d1be60a6f42c39836c50cc82216796" translate="yes" xml:space="preserve">
          <source>For a discussion of issues surrounding file permissions and &lt;b&gt;-i&lt;/b&gt;, see &lt;a href=&quot;perlfaq5#Why-does-Perl-let-me-delete-read-only-files%3f-Why-does--i-clobber-protected-files%3f-Isn't-this-a-bug-in-Perl%3f&quot;&gt;Why does Perl let me delete read-only files? Why does -i clobber protected files? Isn't this a bug in Perl? in perlfaq5&lt;/a&gt;.</source>
          <target state="translated">Для обсуждения проблем, связанных с разрешениями файлов и &lt;b&gt;-i&lt;/b&gt; , см. &lt;a href=&quot;perlfaq5#Why-does-Perl-let-me-delete-read-only-files%3f-Why-does--i-clobber-protected-files%3f-Isn't-this-a-bug-in-Perl%3f&quot;&gt;Почему Perl позволяет мне удалять файлы, доступные только для чтения? Почему -i сбивает защищенные файлы? Разве это не ошибка Perl? в perlfaq5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c17a0e02c18fc6ec53a4e2d1835d5c3756570710" translate="yes" xml:space="preserve">
          <source>For a full definition of the meaning and valid values for &lt;code&gt;WindowBits&lt;/code&gt; refer to the</source>
          <target state="translated">Полное определение значения и допустимых значений &lt;code&gt;WindowBits&lt;/code&gt; см. В</target>
        </trans-unit>
        <trans-unit id="ab6b2ccf022ed8c112662e8962e31264cb2b6d19" translate="yes" xml:space="preserve">
          <source>For a list of known issues, visit:</source>
          <target state="translated">Для списка известных вопросов,посетите:</target>
        </trans-unit>
        <trans-unit id="e95ee6825d4d62b379fa548316d0c1e1647b716e" translate="yes" xml:space="preserve">
          <source>For a lot of situations, like interfacing to an error handler, this may be a perfectly adequate solution.</source>
          <target state="translated">Для многих ситуаций,например,для взаимодействия с обработчиком ошибок,это может быть вполне адекватным решением.</target>
        </trans-unit>
        <trans-unit id="78fb5d513c6711626eae157d1505b4fda1465fce" translate="yes" xml:space="preserve">
          <source>For a module, this is generally where the documentation of the interfaces provided by the module goes, usually in the form of a list with an &lt;code&gt;=item&lt;/code&gt; for each interface. Depending on how many interfaces there are, you may want to put that documentation in separate METHODS, FUNCTIONS, CLASS METHODS, or INSTANCE METHODS sections instead and save the DESCRIPTION section for an overview.</source>
          <target state="translated">Для модуля это обычно то место, куда идет документация интерфейсов, предоставляемых модулем, обычно в форме списка с &lt;code&gt;=item&lt;/code&gt; для каждого интерфейса. В зависимости от количества интерфейсов вы можете захотеть поместить эту документацию в отдельные разделы МЕТОДЫ, ФУНКЦИИ, МЕТОДЫ КЛАССА или МЕТОДЫ ЭКЗАМЕНА и сохранить раздел ОПИСАНИЕ для обзора.</target>
        </trans-unit>
        <trans-unit id="a1d4f8c4cd53b34a329bab7f01392ac51898bdf5" translate="yes" xml:space="preserve">
          <source>For a more complete explanation of 64-bit issues, see the &quot;Solaris 64-bit Developer's Guide&quot; at &lt;a href=&quot;http://docs.sun.com/&quot;&gt;http://docs.sun.com/&lt;/a&gt;</source>
          <target state="translated">Для более полного объяснения проблем с 64-разрядной версией см. &amp;laquo;Руководство разработчика 64-разрядной версии Solaris&amp;raquo; по адресу &lt;a href=&quot;http://docs.sun.com/&quot;&gt;http://docs.sun.com/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e2c5e657d81bf42c0416b6bb7cf83065d719466" translate="yes" xml:space="preserve">
          <source>For a more complicated interface, see &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;. Many (most) features of &lt;code&gt;DynaLoader&lt;/code&gt; are not implemented in &lt;code&gt;XSLoader&lt;/code&gt; , like for example the &lt;code&gt;dl_load_flags&lt;/code&gt; , not honored by &lt;code&gt;XSLoader&lt;/code&gt; .</source>
          <target state="translated">Для более сложного интерфейса см. &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; . Многие (большинство) функций &lt;code&gt;DynaLoader&lt;/code&gt; не реализованы в &lt;code&gt;XSLoader&lt;/code&gt; , как, например, &lt;code&gt;dl_load_flags&lt;/code&gt; , не поддерживаемые &lt;code&gt;XSLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a54563befbfb9741b74c08411d734d73a701db49" translate="yes" xml:space="preserve">
          <source>For a more complicated interface, see &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;. Many (most) features of &lt;code&gt;DynaLoader&lt;/code&gt; are not implemented in &lt;code&gt;XSLoader&lt;/code&gt;, like for example the &lt;code&gt;dl_load_flags&lt;/code&gt;, not honored by &lt;code&gt;XSLoader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c134a320b4cf48bdf8f6ab3775da940622ed9a6" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;Unicode::Semantics&quot;&gt;Unicode::Semantics&lt;/a&gt; on CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd2b461432789a1d128d890e829743972bfea8c" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Semantics&quot;&gt;Unicode::Semantics&lt;/a&gt; on CPAN.</source>
          <target state="translated">Для более подробного обсуждения см. &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Semantics&quot;&gt;Unicode :: Semantics&lt;/a&gt; на CPAN.</target>
        </trans-unit>
        <trans-unit id="734d1e26906ca381487d708f04f33fc705057ebb" translate="yes" xml:space="preserve">
          <source>For a more featureful version of this program, you should look to the</source>
          <target state="translated">Для более функциональной версии этой программы,вы должны обратиться к</target>
        </trans-unit>
        <trans-unit id="6cc9a4597b12d4f9cbe49ad17ba062101c23d9dc" translate="yes" xml:space="preserve">
          <source>For a multi-line string, you can apply the regular expression to each logical line in the string by adding the &lt;code&gt;/m&lt;/code&gt; flag (for &quot;multi-line&quot;). With the &lt;code&gt;/m&lt;/code&gt; flag, the &lt;code&gt;$&lt;/code&gt; matches</source>
          <target state="translated">Для многострочной строки вы можете применить регулярное выражение к каждой логической строке в строке, добавив флаг &lt;code&gt;/m&lt;/code&gt; (для &amp;laquo;многострочного&amp;raquo;). С флагом &lt;code&gt;/m&lt;/code&gt; &lt;code&gt;$&lt;/code&gt; соответствует</target>
        </trans-unit>
        <trans-unit id="853ea4ea0b4a8a77b8f91e4b9431c81b99fef254" translate="yes" xml:space="preserve">
          <source>For a platform independent &lt;a href=&quot;File::Copy#move&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; function look at the &lt;a href=&quot;File::Copy&quot;&gt;File::Copy&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bf5a779844f3ff794b0be678bf9271933d780d" translate="yes" xml:space="preserve">
          <source>For a platform independent &lt;code&gt;move&lt;/code&gt; function look at the &lt;a href=&quot;../file/copy&quot;&gt;File::Copy&lt;/a&gt; module.</source>
          <target state="translated">Для независимой от платформы функции &lt;code&gt;move&lt;/code&gt; посмотрите модуль &lt;a href=&quot;../file/copy&quot;&gt;File :: Copy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fab0333533e228e4f9c3f37bd78da5462c6d46ad" translate="yes" xml:space="preserve">
          <source>For a platform independent &lt;code&gt;move&lt;/code&gt; function look at the &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt; module.</source>
          <target state="translated">Для независимой от платформы функции &lt;code&gt;move&lt;/code&gt; посмотрите модуль &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fe5f7ac43651f01500eab4dab5aa1857bdfdac3" translate="yes" xml:space="preserve">
          <source>For a reference of available functions, please consult &lt;a href=&quot;File::Spec::Unix&quot;&gt;File::Spec::Unix&lt;/a&gt;, which contains the entire set, and which is inherited by the modules for other platforms. For further information, please see &lt;a href=&quot;File::Spec::Mac&quot;&gt;File::Spec::Mac&lt;/a&gt;, &lt;a href=&quot;File::Spec::OS2&quot;&gt;File::Spec::OS2&lt;/a&gt;, &lt;a href=&quot;File::Spec::Win32&quot;&gt;File::Spec::Win32&lt;/a&gt;, or &lt;a href=&quot;File::Spec::VMS&quot;&gt;File::Spec::VMS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f487551c011cbdc8bfa8463318b0aee937e41d35" translate="yes" xml:space="preserve">
          <source>For a reference of available functions, please consult &lt;a href=&quot;unix&quot;&gt;File::Spec::Unix&lt;/a&gt;, which contains the entire set, and which is inherited by the modules for other platforms. For further information, please see &lt;a href=&quot;mac&quot;&gt;File::Spec::Mac&lt;/a&gt;, &lt;a href=&quot;os2&quot;&gt;File::Spec::OS2&lt;/a&gt;, &lt;a href=&quot;win32&quot;&gt;File::Spec::Win32&lt;/a&gt;, or &lt;a href=&quot;vms&quot;&gt;File::Spec::VMS&lt;/a&gt;.</source>
          <target state="translated">Для справки о доступных функциях обратитесь к &lt;a href=&quot;unix&quot;&gt;File :: Spec :: Unix&lt;/a&gt; , который содержит весь набор и который наследуется модулями для других платформ. Для получения дополнительной информации см. &lt;a href=&quot;mac&quot;&gt;File :: Spec :: Mac&lt;/a&gt; , &lt;a href=&quot;os2&quot;&gt;File :: Spec :: OS2&lt;/a&gt; , &lt;a href=&quot;win32&quot;&gt;File :: Spec :: Win32&lt;/a&gt; или &lt;a href=&quot;vms&quot;&gt;File :: Spec :: VMS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9c9e2ecd1a16426e5e2b2966118c8ee32aab8e" translate="yes" xml:space="preserve">
          <source>For a regular expression to match, the</source>
          <target state="translated">Чтобы регулярное выражение совпадало</target>
        </trans-unit>
        <trans-unit id="12a058b2c4bc4051745b895283da9f14f036e153" translate="yes" xml:space="preserve">
          <source>For a shorter message you can use &lt;code&gt;carp()&lt;/code&gt; or &lt;code&gt;croak()&lt;/code&gt; which report the error as being from where your module was called. &lt;code&gt;shortmess()&lt;/code&gt; returns the contents of this error message. There is no guarantee that that is where the error was, but it is a good educated guess.</source>
          <target state="translated">Для более короткого сообщения вы можете использовать &lt;code&gt;carp()&lt;/code&gt; или &lt;code&gt;croak()&lt;/code&gt; которые сообщают об ошибке как о том, откуда был вызван ваш модуль. &lt;code&gt;shortmess()&lt;/code&gt; возвращает содержимое этого сообщения об ошибке. Нет никакой гарантии, что именно здесь была ошибка, но это хорошо обоснованное предположение.</target>
        </trans-unit>
        <trans-unit id="fb0c681298006459cb4148344c2595f821ef7745" translate="yes" xml:space="preserve">
          <source>For a simple memory dump we unpack some bytes into just as many pairs of hex digits, and use &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; to handle the traditional spacing - 16 bytes to a line:</source>
          <target state="translated">Для простого дампа памяти мы распаковываем некоторые байты в такое же количество пар шестнадцатеричных цифр и используем &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; для обработки традиционного интервала - 16 байтов на строку:</target>
        </trans-unit>
        <trans-unit id="ccb1c1f18575521b9ef05aa8422ef0eb387743f9" translate="yes" xml:space="preserve">
          <source>For a simple memory dump we unpack some bytes into just as many pairs of hex digits, and use &lt;code&gt;map&lt;/code&gt; to handle the traditional spacing - 16 bytes to a line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2806550c8443279c35452efc8ac267d0d3adceb" translate="yes" xml:space="preserve">
          <source>For a string not starting with a colon, the string exactly matches the package and subroutine that threw the exception. For example, &lt;code&gt;MyModule::log&lt;/code&gt;. If the string does not contain a package name, &lt;code&gt;CORE::&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474b374fb568d2c64a0a26b261b680939a644f1e" translate="yes" xml:space="preserve">
          <source>For a string that does start with a colon, if the subroutine throwing the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9983d9987e6ef65795138624e5828a8ab90649d" translate="yes" xml:space="preserve">
          <source>For a summary of common filehandle operations such as these, see &lt;a href=&quot;perlintro#Files-and-I%2FO&quot;&gt;&quot;Files and I/O&quot; in perlintro&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026cee18f593cdbc6cd7c55d97ff71525a5c1f08" translate="yes" xml:space="preserve">
          <source>For a temporary directory object the directory will be removed unless the CLEANUP argument was used in the constructor (and set to false) or &lt;code&gt;unlink_on_destroy&lt;/code&gt; was modified after creation. Note that if a temp directory is your current directory, it cannot be removed - a warning will be given in this case. &lt;code&gt;chdir()&lt;/code&gt; out of the directory before letting the object go out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e678ac9367be7209ea98d2129135c603f780f7f5" translate="yes" xml:space="preserve">
          <source>For a temporary directory object the directory will be removed unless the CLEANUP argument was used in the constructor (and set to false) or C</source>
          <target state="translated">Для объекта временной директории директория будет удалена,если только аргумент CLEANUP не был использован в конструкторе (и установлен в false)или C</target>
        </trans-unit>
        <trans-unit id="0e148eb23ba15eaf53b9aed2b26acd83d3960120" translate="yes" xml:space="preserve">
          <source>For a yet-more-powerful import facility, see &lt;a href=&quot;#use&quot;&gt;use&lt;/a&gt; and &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">Для еще более мощного средства импорта см. &lt;a href=&quot;#use&quot;&gt;Использование&lt;/a&gt; и &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb4aa2117d863e4ff4ee47b2be92089f4f6d542" translate="yes" xml:space="preserve">
          <source>For a yet-more-powerful import facility, see &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99100d6030ac9440264e837ee275b962c9e0a325" translate="yes" xml:space="preserve">
          <source>For a yet-more-powerful import facility, see &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; and &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">Для еще более мощного средства импорта см. &lt;a href=&quot;use&quot;&gt;Использование&lt;/a&gt; и &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12d37a3337ef055e2912d9c372185cda516b253c" translate="yes" xml:space="preserve">
          <source>For abbreviated and full length days of the week and months of the year:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a93e384211636cb7b918f38dba4af06dd07c92" translate="yes" xml:space="preserve">
          <source>For absolute paths, some cleanup is done, to ensure that the volume name isn't immediately followed by updirs. This is invalid, because this would go beyond &quot;root&quot;. Generally, these cases are handled like their Unix counterparts:</source>
          <target state="translated">Для абсолютных путей выполняется некоторая очистка,чтобы гарантировать,что имя тома не будет сразу же сопровождаться обновлениями.Это недействительно,потому что это выходит за рамки &quot;root&quot;.Обычно эти случаи обрабатываются так же,как и их коллеги из Unix:</target>
        </trans-unit>
        <trans-unit id="de74cc30b9d5ee8d61e142d3f7218703345c5703" translate="yes" xml:space="preserve">
          <source>For accessing ftp servers behind such firewalls you usually need to set the environment variable &lt;code&gt;FTP_PASSIVE&lt;/code&gt; or the config variable ftp_passive to a true value.</source>
          <target state="translated">Для доступа к ftp-серверам за такими брандмауэрами обычно необходимо установить для переменной среды &lt;code&gt;FTP_PASSIVE&lt;/code&gt; или переменной конфигурации ftp_passive истинное значение.</target>
        </trans-unit>
        <trans-unit id="e841dd02723243da9bd704ad42284da8ce16a1a4" translate="yes" xml:space="preserve">
          <source>For additional guidance on the naming of modules, please consult:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4892803f30a1551edad3f36449d4dfea0cc9e9" translate="yes" xml:space="preserve">
          <source>For additional information that may be more accurate for your specific system, see either</source>
          <target state="translated">Для получения дополнительной информации,которая может быть более точной для вашей конкретной системы,смотрите либо</target>
        </trans-unit>
        <trans-unit id="df5c3063e1e7bfc9c45afac4a1ff3ef3df54c7f4" translate="yes" xml:space="preserve">
          <source>For additional information that may be more accurate for your specific system, see either &lt;a href=&quot;http://man.he.net/man5/man&quot;&gt;man(5)&lt;/a&gt; or &lt;a href=&quot;http://man.he.net/man7/man&quot;&gt;man(7)&lt;/a&gt; depending on your system manual section numbering conventions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5a320ada3dc4a8bf88fe25047c87af995b7a83" translate="yes" xml:space="preserve">
          <source>For affected functions, the simple strategy to avoid data corruption is to always make the encoding of the exchanged data explicit. Choose an encoding that you know the extension can handle. Convert arguments passed to the extensions to that encoding and convert results back from that encoding. Write wrapper functions that do the conversions for you, so you can later change the functions when the extension catches up.</source>
          <target state="translated">Для затрагиваемых функций простая стратегия,позволяющая избежать повреждения данных,заключается в том,чтобы всегда делать кодирование данных,которыми обмениваются,явным.Выберите кодировку,с которой,как вы знаете,может справиться расширение.Конвертируйте аргументы,переданные в расширения,в эту кодировку и конвертируйте результаты обратно из этой кодировки.Напишите функции обёртки,которые производят преобразование за вас,чтобы позже вы могли изменить эти функции,когда расширение догонит вас.</target>
        </trans-unit>
        <trans-unit id="615225b2c41ede3ced593276d5e4d897d1d4111d" translate="yes" xml:space="preserve">
          <source>For alignment commands, a &lt;code&gt;count&lt;/code&gt; of 0 is equivalent to a &lt;code&gt;count&lt;/code&gt; of 1; both are no-ops.</source>
          <target state="translated">Для команд выравнивания &lt;code&gt;count&lt;/code&gt; 0 эквивалентен &lt;code&gt;count&lt;/code&gt; 1; оба не работают.</target>
        </trans-unit>
        <trans-unit id="317a7397e46e0f3311065cf89b919865f2fa40b0" translate="yes" xml:space="preserve">
          <source>For all Perl keywords, a &lt;code&gt;CORE::&lt;/code&gt; prefix will force the built-in function to be used, even if it has been overridden or would normally require the &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; pragma. Despite appearances, this has nothing to do with the CORE package, but is part of Perl's syntax.</source>
          <target state="translated">Для всех ключевых слов Perl префикс &lt;code&gt;CORE::&lt;/code&gt; заставит использовать встроенную функцию, даже если она была переопределена или обычно требует прагмы &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; . Несмотря на внешность, это не имеет ничего общего с пакетом CORE, но является частью синтаксиса Perl.</target>
        </trans-unit>
        <trans-unit id="5654c5499f83106c9fbc91a4a0b159f7465964f0" translate="yes" xml:space="preserve">
          <source>For all of these quantifiers, Perl will try to match as much of the string as possible, while still allowing the regexp to succeed. Thus with &lt;code&gt;/a?.../&lt;/code&gt; , Perl will first try to match the regexp with the &lt;code&gt;a&lt;/code&gt; present; if that fails, Perl will try to match the regexp without the &lt;code&gt;a&lt;/code&gt; present. For the quantifier &lt;code&gt;*&lt;/code&gt; , we get the following:</source>
          <target state="translated">Для всех этих квантификаторов Perl будет пытаться сопоставить как можно большую часть строки, все еще позволяя регулярному выражению успешно выполняться. Таким образом , с &lt;code&gt;/a?.../&lt;/code&gt; , Perl сначала пытается соответствовать регулярное выражение с &lt;code&gt;a&lt;/code&gt; настоящее время ; если это не удается, Perl будет пытаться соответствовать регулярному выражению без &lt;code&gt;a&lt;/code&gt; настоящее время . Для квантификатора &lt;code&gt;*&lt;/code&gt; получаем следующее:</target>
        </trans-unit>
        <trans-unit id="c8d03f9e49df228290537d529cbf4990c0671b80" translate="yes" xml:space="preserve">
          <source>For all of these quantifiers, Perl will try to match as much of the string as possible, while still allowing the regexp to succeed. Thus with &lt;code&gt;/a?.../&lt;/code&gt;, Perl will first try to match the regexp with the &lt;code&gt;'a'&lt;/code&gt; present; if that fails, Perl will try to match the regexp without the &lt;code&gt;'a'&lt;/code&gt; present. For the quantifier &lt;code&gt;'*'&lt;/code&gt;, we get the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230fb8eb56a362692b30784cae41866149fb8d70" translate="yes" xml:space="preserve">
          <source>For all other systems it defaults to 0.</source>
          <target state="translated">Для всех остальных систем по умолчанию установлено значение 0.</target>
        </trans-unit>
        <trans-unit id="2b3be3625a22c5493e08ee37b2b7c03a9c3eeed2" translate="yes" xml:space="preserve">
          <source>For an alternate representation of digits, for the radix character used between the integer and the fractional part of decimal numbers, the group separator string for large-ish floating point numbers (yes, the final two are redundant with &lt;a href=&quot;posix#localeconv&quot;&gt;POSIX::localeconv()&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e88409e21116c6609cbafa0cf03db229fac1d32" translate="yes" xml:space="preserve">
          <source>For an autoloaded subroutine without a GV, will create a GV even if &lt;code&gt;level &amp;lt; 0&lt;/code&gt; . For an autoloaded subroutine without a stub, GvCV() of the result may be zero.</source>
          <target state="translated">Для автоматически загружаемой подпрограммы без GV будет создавать GV, даже если &lt;code&gt;level &amp;lt; 0&lt;/code&gt; . Для автоматически загружаемой подпрограммы без заглушки GvCV () результата может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="44153398dcf07d8feee0f56cbeb2ca6ed0e81196" translate="yes" xml:space="preserve">
          <source>For an autoloaded subroutine without a GV, will create a GV even if &lt;code&gt;level &amp;lt; 0&lt;/code&gt;. For an autoloaded subroutine without a stub, &lt;code&gt;GvCV()&lt;/code&gt; of the result may be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9633677d1ed3a18e80dde705c855341e6f6f1ec2" translate="yes" xml:space="preserve">
          <source>For an example of its output, see &lt;a href=&quot;Devel::Peek&quot;&gt;Devel::Peek&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce8b2cbb90270479552270e5bb2cd555b023f38" translate="yes" xml:space="preserve">
          <source>For an example of its output, see &lt;a href=&quot;devel/peek&quot;&gt;Devel::Peek&lt;/a&gt;.</source>
          <target state="translated">Пример его вывода см. В разделе &lt;a href=&quot;devel/peek&quot;&gt;Devel :: Peek&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a82a650eab82474d19ec3ef8108ffe5370503228" translate="yes" xml:space="preserve">
          <source>For an example of the use of Net::FTP see</source>
          <target state="translated">Пример использования Net::FTP см.в разделе</target>
        </trans-unit>
        <trans-unit id="bda70344f536c3a618951e75f8672661f9576c18" translate="yes" xml:space="preserve">
          <source>For an excellent all-around resource on the care and feeding of regular expressions, see the book</source>
          <target state="translated">За отличным всесторонним ресурсом по уходу и кормлению регулярных выражений,смотрите книгу</target>
        </trans-unit>
        <trans-unit id="ca7f7d7124f6e693d58d8f8e7a5726f3c3d7d898" translate="yes" xml:space="preserve">
          <source>For an individual module:</source>
          <target state="translated">Для отдельного модуля:</target>
        </trans-unit>
        <trans-unit id="e7eb2c9e0a9fd3fe5a6939bf4841e243661494a7" translate="yes" xml:space="preserve">
          <source>For an up-to-date list of plugins available, please check CPAN:</source>
          <target state="translated">Для получения актуального списка доступных плагинов,пожалуйста,проверьте CPAN:</target>
        </trans-unit>
        <trans-unit id="cbc0f0a5a1b385be37d862973bb36b0e683cb185" translate="yes" xml:space="preserve">
          <source>For an up-to-date listing of CPAN sites, see &lt;a href=&quot;http://www.cpan.org/SITES&quot;&gt;http://www.cpan.org/SITES&lt;/a&gt; or &lt;a href=&quot;ftp://www.cpan.org/SITES&quot;&gt;ftp://www.cpan.org/SITES&lt;/a&gt; .</source>
          <target state="translated">Актуальный список сайтов CPAN можно найти на &lt;a href=&quot;http://www.cpan.org/SITES&quot;&gt;http://www.cpan.org/SITES&lt;/a&gt; или &lt;a href=&quot;ftp://www.cpan.org/SITES&quot;&gt;ftp://www.cpan.org/SITES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8d2f0deaef3e0e49b686044d018ef1fecb88ca" translate="yes" xml:space="preserve">
          <source>For an up-to-date listing of CPAN sites, see &lt;a href=&quot;https://www.cpan.org/SITES&quot;&gt;https://www.cpan.org/SITES&lt;/a&gt; or &lt;a href=&quot;ftp://www.cpan.org/SITES&quot;&gt;ftp://www.cpan.org/SITES&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b089e20c1565cbb5757e1f93796b566e25654df" translate="yes" xml:space="preserve">
          <source>For another example using &lt;code&gt;IO::Poll&lt;/code&gt; and &lt;code&gt;Net::LibAsyncNS&lt;/code&gt;, see the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a44adc0de3b8707fce2595b82fd4151cd924248" translate="yes" xml:space="preserve">
          <source>For any anon CVs in the pad, change &lt;code&gt;CvOUTSIDE&lt;/code&gt; of that CV from &lt;code&gt;old_cv&lt;/code&gt; to &lt;code&gt;new_cv&lt;/code&gt; if necessary. Needed when a newly-compiled CV has to be moved to a pre-existing CV struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33a39ca090b8a159c7f5059badc4bd7ae75ac58" translate="yes" xml:space="preserve">
          <source>For any anon CVs in the pad, change CvOUTSIDE of that CV from old_cv to new_cv if necessary. Needed when a newly-compiled CV has to be moved to a pre-existing CV struct.</source>
          <target state="translated">Для любого анонового CV в блокноте,измените CvOUTSIDE этого CV со старого_cv на новый_cv,если это необходимо.Требуется,когда вновь скомпилированное CV должно быть перемещено в уже существующую структуру CV.</target>
        </trans-unit>
        <trans-unit id="a477cbd70fca9ccf72bc4fea464de24ee1323a5a" translate="yes" xml:space="preserve">
          <source>For any of the above listed attributes, case is not significant.</source>
          <target state="translated">Для любого из вышеперечисленных атрибутов случай не является существенным.</target>
        </trans-unit>
        <trans-unit id="03cdf2cd57fb98494228a618ca150d5e64571b39" translate="yes" xml:space="preserve">
          <source>For any text entered at the debugger prompt, leading and trailing whitespace is first stripped before further processing. If a debugger command coincides with some function in your own program, merely precede the function with something that doesn't look like a debugger command, such as a leading &lt;code&gt;;&lt;/code&gt; or perhaps a &lt;code&gt;+&lt;/code&gt; , or by wrapping it with parentheses or braces.</source>
          <target state="translated">Для любого текста, вводимого в приглашении отладчика, перед дальнейшей обработкой сначала удаляются начальные и конечные пробелы. Если команда отладчика совпадает с некоторой функцией в вашей собственной программе, просто поставьте перед функцией что-то, что не похоже на команду отладчика, например, начало &lt;code&gt;;&lt;/code&gt; или, возможно, &lt;code&gt;+&lt;/code&gt; , или заключив его в круглые или фигурные скобки.</target>
        </trans-unit>
        <trans-unit id="b820379547056e253ff549ed899ea5e188fbe0e7" translate="yes" xml:space="preserve">
          <source>For any text entered at the debugger prompt, leading and trailing whitespace is first stripped before further processing. If a debugger command coincides with some function in your own program, merely precede the function with something that doesn't look like a debugger command, such as a leading &lt;code&gt;;&lt;/code&gt; or perhaps a &lt;code&gt;+&lt;/code&gt;, or by wrapping it with parentheses or braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f345c4981dc60d036c3d28eb6a32e02870746a6" translate="yes" xml:space="preserve">
          <source>For any type of reference, &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; is checked (see below). This variable is expected to be a code reference, and the current parameter is passed in. If this function doesn't exist (the variable is undef), or it recurses into &lt;code&gt;Carp&lt;/code&gt; , or it otherwise throws an exception, this is skipped, and Carp moves on to the next option, otherwise checking stops and the string returned is used.</source>
          <target state="translated">Для любого типа ссылки проверяется &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; (см. Ниже). Ожидается, что эта переменная будет ссылкой на код, и будет передан текущий параметр. Если эта функция не существует (переменная undef), или она рекурсивно переходит в &lt;code&gt;Carp&lt;/code&gt; , или в противном случае генерирует исключение, это пропускается, и Карп переходит к следующему варианту, в противном случае проверка прекращается и используется возвращенная строка.</target>
        </trans-unit>
        <trans-unit id="59d104c59f183c270405bd88f8a633e59e8f7fcf" translate="yes" xml:space="preserve">
          <source>For any type of reference, &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; is checked (see below). This variable is expected to be a code reference, and the current parameter is passed in. If this function doesn't exist (the variable is undef), or it recurses into &lt;code&gt;Carp&lt;/code&gt;, or it otherwise throws an exception, this is skipped, and Carp moves on to the next option, otherwise checking stops and the string returned is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e7ed4a969818cfa2aa043eb8a07c31ce2abf8d" translate="yes" xml:space="preserve">
          <source>For any version object which is initialized with multiple decimal places (either quoted or if possible v-string), or initialized using the &lt;a href=&quot;version#qv%28%29&quot;&gt;qv()&lt;/a&gt; operator, the stringified representation is returned in a normalized or reduced form (no extraneous zeros), and with a leading 'v':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa27de554c50c9df409ef4245d850e6b4403907" translate="yes" xml:space="preserve">
          <source>For applications using database backends, the standard &lt;code&gt;DBIx&lt;/code&gt; namespace has tries to help with keeping things nippy, not least because it tries to</source>
          <target state="translated">Для приложений, использующих &lt;code&gt;DBIx&lt;/code&gt; баз данных, стандартное пространство имен DBIx пытается помочь в поддержании спокойствия, не в последнюю очередь потому, что оно пытается</target>
        </trans-unit>
        <trans-unit id="6520acef19e880d0e0ded68b3e58665471c2f6a0" translate="yes" xml:space="preserve">
          <source>For authors of extensions MakeMaker provides several Makefile targets. Most of the support comes from the &lt;a href=&quot;ExtUtils::Manifest&quot;&gt;ExtUtils::Manifest&lt;/a&gt; module, where additional documentation can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bce7a5486f7524150794956c47fe07d202d9af7" translate="yes" xml:space="preserve">
          <source>For authors of extensions MakeMaker provides several Makefile targets. Most of the support comes from the ExtUtils::Manifest module, where additional documentation can be found.</source>
          <target state="translated">Для авторов расширений MakeMaker предоставляет несколько целей Makefile.Большая часть поддержки поступает из модуля ExtUtils::Manifest,где можно найти дополнительную документацию.</target>
        </trans-unit>
        <trans-unit id="22bf05bb17e4a865ba888114b8b9f35fd176e0a9" translate="yes" xml:space="preserve">
          <source>For backward compatibility (with Perl 5.6), all properties writable without using the compound form mentioned so far may have &lt;code&gt;Is&lt;/code&gt; or &lt;code&gt;Is_&lt;/code&gt; prepended to their name, so &lt;code&gt;\P{Is_Lu}&lt;/code&gt; , for example, is equal to &lt;code&gt;\P{Lu}&lt;/code&gt; , and &lt;code&gt;\p{IsScript:Arabic}&lt;/code&gt; is equal to &lt;code&gt;\p{Arabic}&lt;/code&gt; .</source>
          <target state="translated">Для обратной совместимости (с Perl 5.6) все свойства, доступные для записи без использования упомянутой составной формы, могут иметь перед именем &lt;code&gt;Is&lt;/code&gt; или &lt;code&gt;Is_&lt;/code&gt; , поэтому &lt;code&gt;\P{Is_Lu}&lt;/code&gt; , например, равно &lt;code&gt;\P{Lu}&lt;/code&gt; , а &lt;code&gt;\p{IsScript:Arabic}&lt;/code&gt; равно &lt;code&gt;\p{Arabic}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6f8997b0405898deebf35ed5de7d2d35e93f64e" translate="yes" xml:space="preserve">
          <source>For backward compatibility (with ancient Perl 5.6), all properties writable without using the compound form mentioned so far may have &lt;code&gt;Is&lt;/code&gt; or &lt;code&gt;Is_&lt;/code&gt; prepended to their name, so &lt;code&gt;\P{Is_Lu}&lt;/code&gt;, for example, is equal to &lt;code&gt;\P{Lu}&lt;/code&gt;, and &lt;code&gt;\p{IsScript:Arabic}&lt;/code&gt; is equal to &lt;code&gt;\p{Arabic}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801eea6f48c31944eef870e82f2becb1739f362a" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons defining just PERL_GLOBAL_STRUCT doesn't actually hide all symbols inside a big global struct: some PerlIO_xxx vtables are left visible. The PERL_GLOBAL_STRUCT_PRIVATE then hides everything (see how the PERLIO_FUNCS_DECL is used).</source>
          <target state="translated">По причинам обратной совместимости определение только PERL_GLOBAL_STRUCT на самом деле не прячет все символы внутри большой глобальной структуры:некоторые таблицы PerlIO_xxx остаются видимыми.PERL_GLOBAL_STRUCT_PRIVATE затем скрывает все (смотрите,как используется PERLIO_FUNCS_DECL).</target>
        </trans-unit>
        <trans-unit id="e59de1fc73fecfb78c070b75065d56f22077db4d" translate="yes" xml:space="preserve">
          <source>For backward compatibility with older implementations that didn't support anonymous globs, &lt;code&gt;Symbol::ungensym&lt;/code&gt; is also provided. But it doesn't do anything.</source>
          <target state="translated">Для обратной совместимости со старыми реализациями, которые не поддерживали анонимные глобусы, также предоставляется &lt;code&gt;Symbol::ungensym&lt;/code&gt; . Но это ничего не дает.</target>
        </trans-unit>
        <trans-unit id="1875b2cf9d0a9f2703d0d978c0e4f011fb418414" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;alternate&lt;/code&gt; (old name) can be used as an alias for &lt;code&gt;variable&lt;/code&gt; .</source>
          <target state="translated">Для обратной совместимости можно использовать &lt;code&gt;alternate&lt;/code&gt; (старое имя) в качестве псевдонима &lt;code&gt;variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7db95484ae8f465f4ba0bfd96939032aa4269a8b" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;alternate&lt;/code&gt; (old name) can be used as an alias for &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a69034e83ea0d1a42d93d489742ef68d2660151" translate="yes" xml:space="preserve">
          <source>For backward compatibility, it is also possible to pass the parameters as a reference to a hash containing the &lt;code&gt;name=&amp;gt;value&lt;/code&gt; pairs.</source>
          <target state="translated">Для обратной совместимости также можно передавать параметры как ссылку на хэш, содержащий пары &lt;code&gt;name=&amp;gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3148562bf6a9aa8595388062dcaa9f8f17ba0473" translate="yes" xml:space="preserve">
          <source>For backward compatibility, it is also possible to pass the parameters as a reference to a hash containing the name=&amp;gt;value pairs.</source>
          <target state="translated">Для обратной совместимости также можно передавать параметры как ссылку на хэш, содержащий пары имя =&amp;gt; значение.</target>
        </trans-unit>
        <trans-unit id="2ec61a0442a19b1bc3402a65ad2b4e4eaf169d23" translate="yes" xml:space="preserve">
          <source>For backward-compatibility, if the PADNAMEt_OUTER flag is set, the FLAGS method adds the SVf_FAKE flag, too.</source>
          <target state="translated">Для обратной совместимости,если установлен флаг PADNAMEt_OUTER,метод FLAGS добавляет также флаг SVf_FAKE.</target>
        </trans-unit>
        <trans-unit id="345abbc3eef47b853413a18eb3df89f5eb02f40e" translate="yes" xml:space="preserve">
          <source>For backwards compatibility in callbacks.</source>
          <target state="translated">Для обратной совместимости при обратных вызовах.</target>
        </trans-unit>
        <trans-unit id="fc612a7ead920771085f353b3e4c345acbc9a4da" translate="yes" xml:space="preserve">
          <source>For backwards compatibility reasons it is still possible to request a different storage class for use with Math::BigFloat:</source>
          <target state="translated">По причинам обратной совместимости все же можно запросить другой класс хранения для использования с Math::BigFloat:</target>
        </trans-unit>
        <trans-unit id="5515551787402a0e5935331cd95604ada3a19af4" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the &lt;code&gt;In&lt;/code&gt; prefix may be omitted if there is no naming conflict with a script or any other property, and you can even use an &lt;code&gt;Is&lt;/code&gt; prefix instead in those cases. But don't do this for new code because your code could break in new releases, and this has already happened: There was a time in very early Unicode releases when &lt;code&gt;\p{Hebrew}&lt;/code&gt; would have matched the</source>
          <target state="translated">Для обратной совместимости префикс &lt;code&gt;In&lt;/code&gt; может быть опущен, если нет конфликта имен со сценарием или любым другим свойством, и в этих случаях вы даже можете использовать префикс &lt;code&gt;Is&lt;/code&gt; . Но не делайте этого для нового кода, потому что ваш код может сломаться в новых выпусках, и это уже произошло: в очень ранних выпусках Unicode было время, когда &lt;code&gt;\p{Hebrew}&lt;/code&gt; соответствовал бы</target>
        </trans-unit>
        <trans-unit id="8221b631540f7fb41054f5d592fba788a0c89204" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, this error is also available as &lt;code&gt;$Archive::Tar::error&lt;/code&gt; although it is much recommended you use the method call instead.</source>
          <target state="translated">Для обратной совместимости эта ошибка также доступна как &lt;code&gt;$Archive::Tar::error&lt;/code&gt; хотя настоятельно рекомендуется использовать вместо нее вызов метода.</target>
        </trans-unit>
        <trans-unit id="04c26648635d004dc1846a0436ba6682f4177e2f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_bin&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_bin&lt;/code&gt; этого используйте grok_bin .</target>
        </trans-unit>
        <trans-unit id="7b83ee316e5b3391a5d7939b8d9c91163c18f189" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_hex&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_hex&lt;/code&gt; этого используйте grok_hex .</target>
        </trans-unit>
        <trans-unit id="36110c740cb1d17f9559cf294dd0deb0c3ace7b6" translate="yes" xml:space="preserve">
          <source>For backwards compatibility. Use &lt;code&gt;grok_oct&lt;/code&gt; instead.</source>
          <target state="translated">Для обратной совместимости. &lt;code&gt;grok_oct&lt;/code&gt; этого используйте grok_oct .</target>
        </trans-unit>
        <trans-unit id="31ce154734530fbfe5db4b0523f628ba63c57438" translate="yes" xml:space="preserve">
          <source>For best results compile the C file below with the same options as the Perl DLL. However, a lot of functionality will work even if the executable is not an EMX applications, e.g., if compiled with</source>
          <target state="translated">Для достижения наилучших результатов скомпилируйте нижеприведенный C-файл с теми же опциями,что и Perl DLL.Тем не менее,многие функциональные возможности будут работать,даже если исполняемый файл не является EMX-приложением,например,если он скомпилирован с помощью</target>
        </trans-unit>
        <trans-unit id="3d5f802bf9952ee74baf54e5c421227e48fa981f" translate="yes" xml:space="preserve">
          <source>For best results use EMX pdksh. The standard binary (5.2.14 or later) runs under DOS (with &lt;a href=&quot;#RSX&quot;&gt;&quot;RSX&quot;&lt;/a&gt;) as well, see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e295c225a2c063ef46517c1ea68fc0b9b4d3dfb" translate="yes" xml:space="preserve">
          <source>For best results use EMX pdksh. The standard binary (5.2.14 or later) runs under DOS (with &lt;a href=&quot;#RSX&quot;&gt;RSX&lt;/a&gt;) as well, see</source>
          <target state="translated">Для достижения наилучших результатов используйте EMX pdksh. Стандартный двоичный файл (5.2.14 или новее) также работает под DOS (с &lt;a href=&quot;#RSX&quot;&gt;RSX&lt;/a&gt; ), см.</target>
        </trans-unit>
        <trans-unit id="2f0811095fb18bd277912b660d1d859a6e53803d" translate="yes" xml:space="preserve">
          <source>For bigger projects, &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; provides a rich set of features that will let you focus on implementing your business logic.</source>
          <target state="translated">Для более крупных проектов &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; предоставляет богатый набор функций, которые позволят вам сосредоточиться на реализации своей бизнес-логики.</target>
        </trans-unit>
        <trans-unit id="485ae73f79d1afbd4e51bbd788b440af01136078" translate="yes" xml:space="preserve">
          <source>For bigger projects, &lt;a href=&quot;moose&quot;&gt;Moose&lt;/a&gt; provides a rich set of features that will let you focus on implementing your business logic. &lt;a href=&quot;moo&quot;&gt;Moo&lt;/a&gt; provides a nice alternative to &lt;a href=&quot;moose&quot;&gt;Moose&lt;/a&gt; when you want a lot of features but need faster compile time or to avoid XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b33560e28b1291edf22e615119f480a2b62681f" translate="yes" xml:space="preserve">
          <source>For bit fields, it returns a hash ref containing details about the field. The same reference will be returned for all bit positions that make up the bit field; so for example these both return the same hash ref:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59e13b49a3ea8a677214c0ffa9c8aba3e39fb3c" translate="yes" xml:space="preserve">
          <source>For blocks see &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/Blocks.txt&quot;&gt;http://www.unicode.org/Public/UNIDATA/Blocks.txt&lt;/a&gt;</source>
          <target state="translated">Для блоков см. &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/Blocks.txt&quot;&gt;Http://www.unicode.org/Public/UNIDATA/Blocks.txt.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b4a370c8e600d80c0ddcf91afaf7c79cb7be44e" translate="yes" xml:space="preserve">
          <source>For blocks see &lt;a href=&quot;https://www.unicode.org/Public/UNIDATA/Blocks.txt&quot;&gt;http://www.unicode.org/Public/UNIDATA/Blocks.txt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af4234a6a3a035875ec423a946acfcba1e657d0" translate="yes" xml:space="preserve">
          <source>For building and installing non-XS modules, all you need is a working perl under DJGPP. Non-XS modules do not require re-linking the perl binary, and so are simpler to build and install.</source>
          <target state="translated">Для сборки и установки не XS модулей,все,что вам нужно,это рабочий perl под DJGPP.Модули без XS не требуют перекомпоновки бинарного файла perl,поэтому их проще собрать и установить.</target>
        </trans-unit>
        <trans-unit id="bae42e060753892a262ac6235f3d580be0d729e0" translate="yes" xml:space="preserve">
          <source>For building perl to support Oracle, it needs to be linked with libcl and libpthread. So even if your perl is an unthreaded build, these libraries might be required. See &quot;Oracle on HP-UX&quot; below.</source>
          <target state="translated">Для того,чтобы построить perl для поддержки Oracle,он должен быть связан с libcl и libpthread.Так что,даже если ваш perl является непрочитанной сборкой,эти библиотеки могут потребоваться.Смотрите &quot;Oracle on HP-UX&quot; ниже.</target>
        </trans-unit>
        <trans-unit id="ae71424b7af33e662d7ce3e8063ed7f56ae7be34" translate="yes" xml:space="preserve">
          <source>For case-insensitive comparisions, look at the &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; case-folding function, available in Perl v5.16 or later:</source>
          <target state="translated">Для сравнения без учета регистра посмотрите на функцию сворачивания регистра &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; , доступную в Perl v5.16 или новее:</target>
        </trans-unit>
        <trans-unit id="c2c9f18069c14b8953e6086438f1569f7befce24" translate="yes" xml:space="preserve">
          <source>For case-insensitive comparisons, look at the &lt;a href=&quot;perlfunc#fc&quot;&gt;&quot;fc&quot; in perlfunc&lt;/a&gt; case-folding function, available in Perl v5.16 or later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb5c1d99fc673348b120d9a851d1117c6607188" translate="yes" xml:space="preserve">
          <source>For case-insensitiveness, the &quot;casefolding&quot; of Unicode is used instead of upper/lowercasing both the characters, see &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr21/&quot;&gt;http://www.unicode.org/unicode/reports/tr21/&lt;/a&gt; (Case Mappings).</source>
          <target state="translated">Для нечувствительности к регистру используется &quot;регистр&quot; Unicode вместо верхнего / нижнего регистра обоих символов, см. &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr21/&quot;&gt;Http://www.unicode.org/unicode/reports/tr21/&lt;/a&gt; (Отображение регистра).</target>
        </trans-unit>
        <trans-unit id="844ac956827b7b88b1f14a571dd1efe3bff10e90" translate="yes" xml:space="preserve">
          <source>For case-insensitiveness, the &quot;casefolding&quot; of Unicode is used instead of upper/lowercasing both the characters, see &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr21/&quot;&gt;https://www.unicode.org/unicode/reports/tr21/&lt;/a&gt; (Case Mappings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724ee81f8304298ce7234758616a260234c90146" translate="yes" xml:space="preserve">
          <source>For changes significant enough to warrant a</source>
          <target state="translated">Для изменений,достаточно существенных,чтобы гарантировать</target>
        </trans-unit>
        <trans-unit id="b3dbbc26b46cd95b55d97892c7e30b541879c832" translate="yes" xml:space="preserve">
          <source>For clarity, you should already have been using &lt;code&gt;\t&lt;/code&gt; to specify a literal tab, and &lt;code&gt;\t&lt;/code&gt; is unaffected by &lt;code&gt;/xx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3357a4c3d096539100edeae44fe0fc63f41c1eb0" translate="yes" xml:space="preserve">
          <source>For cloning empty array or hash refs, the following may also be used:</source>
          <target state="translated">Для клонирования пустого массива или хэш-ссылки также можно использовать следующее:</target>
        </trans-unit>
        <trans-unit id="066974b34c56796aa4147b1a5208072b1da06843" translate="yes" xml:space="preserve">
          <source>For code points above 255 ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c34d997e245e8b3d1bd93691addc32a9edcde31" translate="yes" xml:space="preserve">
          <source>For code points below 256 ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fc59bd49cfa06cf9318166c80386309a2f14db" translate="yes" xml:space="preserve">
          <source>For compactness, '&lt;b&gt;*&lt;/b&gt;' is used as a wildcard instead of showing all possible combinations. For example, entries like:</source>
          <target state="translated">Для компактности &quot; &lt;b&gt;*&lt;/b&gt; &quot; используется как подстановочный знак вместо отображения всех возможных комбинаций. Например, такие записи, как:</target>
        </trans-unit>
        <trans-unit id="7c09a91ddfd48857b97077c2773ecb81af6bc79f" translate="yes" xml:space="preserve">
          <source>For comparisons to a specific language it is often best to create a small project in both languages and compare the results, make sure to use all the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;resources&lt;/a&gt; of each language, as a language is far more than just it's syntax.</source>
          <target state="translated">Для сравнения с конкретным языком часто лучше создать небольшой проект на обоих языках и сравнить результаты, обязательно используйте все &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;ресурсы&lt;/a&gt; каждого языка, поскольку язык - это гораздо больше, чем просто его синтаксис.</target>
        </trans-unit>
        <trans-unit id="ced2a540dc94c886c1cbe6db66090842cbab20ed" translate="yes" xml:space="preserve">
          <source>For comparisons to a specific language it is often best to create a small project in both languages and compare the results, make sure to use all the &lt;a href=&quot;http://www.cpan.org/&quot;&gt;resources&lt;/a&gt; of each language, as a language is far more than just it's syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5928beb9ec422a398dc240b1a98fb88a78eacc43" translate="yes" xml:space="preserve">
          <source>For compatibility with</source>
          <target state="translated">Для совместимости с</target>
        </trans-unit>
        <trans-unit id="c8f850be2ede8c9aabb5e0eb4de353aba7ade37a" translate="yes" xml:space="preserve">
          <source>For compatibility with other parts of Perl, all the single forms given in the table in the &lt;a href=&quot;#Properties-accessible-through-%5Cp%7B%7D-and-%5CP%7B%7D&quot;&gt;section above&lt;/a&gt; are recognized. BUT, there are some ambiguities between some Perl extensions and the Unicode properties, all of which are silently resolved in favor of the official Unicode property. To avoid surprises, you should only use &lt;code&gt;prop_invmap()&lt;/code&gt; for forms listed in the table below, which omits the non-recommended ones. The affected forms are the Perl single form equivalents of Unicode properties, such as &lt;code&gt;\p{sc}&lt;/code&gt; being a single-form equivalent of &lt;code&gt;\p{gc=sc}&lt;/code&gt;, which is treated by &lt;code&gt;prop_invmap()&lt;/code&gt; as the &lt;code&gt;Script&lt;/code&gt; property, whose short name is &lt;code&gt;sc&lt;/code&gt;. The table indicates the current ambiguities in the INFO column, beginning with the word &lt;code&gt;&quot;NOT&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7092eb766c083ed1177ee219bb4e03d914e1567" translate="yes" xml:space="preserve">
          <source>For compatibility with other parts of Perl, all the single forms given in the table in the &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;section above&lt;/a&gt; are recognized. BUT, there are some ambiguities between some Perl extensions and the Unicode properties, all of which are silently resolved in favor of the official Unicode property. To avoid surprises, you should only use &lt;code&gt;prop_invmap()&lt;/code&gt; for forms listed in the table below, which omits the non-recommended ones. The affected forms are the Perl single form equivalents of Unicode properties, such as &lt;code&gt;\p{sc}&lt;/code&gt; being a single-form equivalent of &lt;code&gt;\p{gc=sc}&lt;/code&gt; , which is treated by &lt;code&gt;prop_invmap()&lt;/code&gt; as the &lt;code&gt;Script&lt;/code&gt; property, whose short name is &lt;code&gt;sc&lt;/code&gt; . The table indicates the current ambiguities in the INFO column, beginning with the word &lt;code&gt;&quot;NOT&quot;&lt;/code&gt; .</source>
          <target state="translated">Для совместимости с другими частями Perl распознаются все отдельные формы, приведенные в таблице в &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;разделе выше&lt;/a&gt; . НО, есть некоторая двусмысленность между некоторыми расширениями Perl и свойствами Unicode, все из которых молча разрешаются в пользу официального свойства Unicode. Чтобы избежать сюрпризов, вы должны использовать &lt;code&gt;prop_invmap()&lt;/code&gt; для форм, перечисленных в таблице ниже, в которой не указаны нерекомендуемые. Затронутые формы являются эквивалентами единой формы Perl свойств Unicode, например, &lt;code&gt;\p{sc}&lt;/code&gt; является эквивалентом единственной формы &lt;code&gt;\p{gc=sc}&lt;/code&gt; , который обрабатывается &lt;code&gt;prop_invmap()&lt;/code&gt; как свойство &lt;code&gt;Script&lt;/code&gt; , короткое имя которого это &lt;code&gt;sc&lt;/code&gt; . В таблице указаны текущие неоднозначности в столбце ИНФОРМАЦИЯ, начиная со слова &lt;code&gt;&quot;NOT&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8f8cf45418f21110ef02ba18a8fe7b0e0a35cfe" translate="yes" xml:space="preserve">
          <source>For compatibility with perl scripts written for the Unix environment, Plan 9 Perl uses the POSIX signal emulation provided in Plan 9's ANSI POSIX Environment (APE). Signal stacking isn't supported. The signals provided are:</source>
          <target state="translated">Для совместимости с perl-скриптами,написанными для Unix-окружения,Plan 9 Perl использует эмуляцию POSIX-сигнала,предоставляемую в ANSI POSIX-окружении (APE)Plan 9.Стек сигналов не поддерживается.Предоставляемые сигналы:</target>
        </trans-unit>
        <trans-unit id="f7ddc7130612083ca6f3d06a09409b25b9346875" translate="yes" xml:space="preserve">
          <source>For compatibility with popular C library functions, Perl implementations of the mkstemp() family of functions are provided. These are, mkstemp(), mkstemps(), mkdtemp() and mktemp().</source>
          <target state="translated">Для совместимости с популярными библиотечными функциями Си предусмотрены реализации на Perl из семейства функций mkstemp().Это mkstemp(),mkstemps(),mkdtemp()и mktemp().</target>
        </trans-unit>
        <trans-unit id="d25b76835899d4044aad201d72be6ea01f31876a" translate="yes" xml:space="preserve">
          <source>For compatibility with the old B::Terse, this module also adds a method named &lt;code&gt;terse&lt;/code&gt; to B::OP and B::SV objects. The B::SV method is largely compatible with the old one, though authors of new software might be advised to choose a more user-friendly output format. The B::OP &lt;code&gt;terse&lt;/code&gt; method, however, doesn't work well. Since B::Terse was first written, much more information in OPs has migrated to the scratchpad datastructure, but the &lt;code&gt;terse&lt;/code&gt; interface doesn't have any way of getting to the correct pad. As a kludge, the new version will always use the pad for the main program, but for OPs in subroutines this will give the wrong answer or crash.</source>
          <target state="translated">Для совместимости со старым B :: Terse этот модуль также добавляет метод с именем &lt;code&gt;terse&lt;/code&gt; к объектам B :: OP и B :: SV. Метод B :: SV в значительной степени совместим со старым, хотя авторам нового программного обеспечения можно посоветовать выбрать более удобный формат вывода. Однако &lt;code&gt;terse&lt;/code&gt; метод B :: OP не работает. С тех пор, как B :: Terse был впервые написан, гораздо больше информации из OP было перенесено в структуру данных блокнота, но &lt;code&gt;terse&lt;/code&gt; интерфейс не имеет никакого способа добраться до нужной панели. В качестве кладжа новая версия всегда будет использовать панель для основной программы, но для OP в подпрограммах это приведет к неправильному ответу или сбою.</target>
        </trans-unit>
        <trans-unit id="67ec1b88f948f8864ab885d448e428104a1f5cbb" translate="yes" xml:space="preserve">
          <source>For compiling, you need following:</source>
          <target state="translated">Для компиляции,вам нужно следовать:</target>
        </trans-unit>
        <trans-unit id="2c3582fce0d2ea8e40bba69ca7dfa38ec981ba20" translate="yes" xml:space="preserve">
          <source>For completeness, here is &lt;code&gt;asynch_close&lt;/code&gt; . This shows how to remove the entry from the hash &lt;code&gt;Mapping&lt;/code&gt; .</source>
          <target state="translated">Для полноты здесь &lt;code&gt;asynch_close&lt;/code&gt; . Это показывает, как удалить запись из хеш- &lt;code&gt;Mapping&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9211f9a6bd70a952eb9e084b22fff2574a69c350" translate="yes" xml:space="preserve">
          <source>For completeness, here is &lt;code&gt;asynch_close&lt;/code&gt;. This shows how to remove the entry from the hash &lt;code&gt;Mapping&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c043d0855883cdf3536e0246bdff4dcd9fcd74e" translate="yes" xml:space="preserve">
          <source>For consistency with common usage, perl's Configure script performs some minor manipulations on the operating system name and version number as reported by uname. Here's a partial translation table:</source>
          <target state="translated">Для соответствия общему использованию,скрипт perl's Configure выполняет некоторые незначительные манипуляции с именем операционной системы и номером версии,о которых сообщает uname.Вот таблица частичного перевода:</target>
        </trans-unit>
        <trans-unit id="c929174990d09b02dcdbbabbaa2a02596a638c93" translate="yes" xml:space="preserve">
          <source>For constant subroutines, returns the constant SV returned by the subroutine.</source>
          <target state="translated">Для постоянных подпрограмм возвращает постоянную SV,возвращаемую подпрограммой.</target>
        </trans-unit>
        <trans-unit id="9e387ea14df2d8d86cc5babf9af2677b505e2619" translate="yes" xml:space="preserve">
          <source>For constructs that do interpolate, variables beginning with &quot;&lt;code&gt;$&lt;/code&gt; &quot; or &quot;&lt;code&gt;@&lt;/code&gt; &quot; are interpolated. Subscripted variables such as &lt;code&gt;$a[3]&lt;/code&gt; or &lt;code&gt;$href-&amp;gt;{key}[0]&lt;/code&gt; are also interpolated, as are array and hash slices. But method calls such as &lt;code&gt;$obj-&amp;gt;meth&lt;/code&gt; are not.</source>
          <target state="translated">Для конструкций, которые действительно интерполируются, интерполируются переменные, начинающиеся с &amp;laquo; &lt;code&gt;$&lt;/code&gt; &amp;raquo; или &amp;laquo; &lt;code&gt;@&lt;/code&gt; &amp;raquo;. Переменные с индексами, такие как &lt;code&gt;$a[3]&lt;/code&gt; или &lt;code&gt;$href-&amp;gt;{key}[0]&lt;/code&gt; , также интерполируются, как и массивы и срезы хэша. Но вызовы методов, такие как &lt;code&gt;$obj-&amp;gt;meth&lt;/code&gt; , нет.</target>
        </trans-unit>
        <trans-unit id="d824f17a668c6fb9730318bb144f77718695736e" translate="yes" xml:space="preserve">
          <source>For constructs that do interpolate, variables beginning with &quot;&lt;code&gt;$&lt;/code&gt;&quot; or &quot;&lt;code&gt;@&lt;/code&gt;&quot; are interpolated. Subscripted variables such as &lt;code&gt;$a[3]&lt;/code&gt; or &lt;code&gt;$href-&amp;gt;{key}[0]&lt;/code&gt; are also interpolated, as are array and hash slices. But method calls such as &lt;code&gt;$obj-&amp;gt;meth&lt;/code&gt; are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec376fd19b0ff28e80aef02d1aa6f9c7cab7d82a" translate="yes" xml:space="preserve">
          <source>For constructs with three-part delimiters (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;), the search is repeated once more. If the first delimiter is not an opening punctuation, the three delimiters must be the same, such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr)))&lt;/a&gt;&lt;/code&gt;, in which case the second delimiter terminates the left part and starts the right part at once. If the left part is delimited by bracketing punctuation (that is &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; , or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), the right part needs another pair of delimiters such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(){}&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[]//&lt;/a&gt;&lt;/code&gt;. In these cases, whitespace and comments are allowed between the two parts, although the comment must follow at least one whitespace character; otherwise a character expected as the start of the comment may be regarded as the starting delimiter of the right part.</source>
          <target state="translated">Для конструкций с разделителями из трех частей ( &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ) поиск повторяется еще раз. Если первый разделитель не является открывающим знаком препинания, три разделителя должны быть одинаковыми, например &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr)))&lt;/a&gt;&lt;/code&gt; , и в этом случае второй разделитель завершает левую часть и сразу же начинает правую часть. Если левая часть разделена знаками препинания в скобках (то есть &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; или &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), для правой части потребуется еще одна пара разделителей, например &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(){}&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[]//&lt;/a&gt;&lt;/code&gt; . В этих случаях между двумя частями разрешены пробелы и комментарии, хотя комментарий должен следовать по крайней мере за одним символом пробела; в противном случае символ, ожидаемый в качестве начала комментария, может рассматриваться как начальный ограничитель правой части.</target>
        </trans-unit>
        <trans-unit id="69f740e18c473e8e61739f44b26934139fa90e6b" translate="yes" xml:space="preserve">
          <source>For constructs with three-part delimiters (&lt;code&gt;s///&lt;/code&gt;, &lt;code&gt;y///&lt;/code&gt;, and &lt;code&gt;tr///&lt;/code&gt;), the search is repeated once more. If the first delimiter is not an opening punctuation, the three delimiters must be the same, such as &lt;code&gt;s!!!&lt;/code&gt; and &lt;code&gt;tr)))&lt;/code&gt;, in which case the second delimiter terminates the left part and starts the right part at once. If the left part is delimited by bracketing punctuation (that is &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;, or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;), the right part needs another pair of delimiters such as &lt;code&gt;s(){}&lt;/code&gt; and &lt;code&gt;tr[]//&lt;/code&gt;. In these cases, whitespace and comments are allowed between the two parts, although the comment must follow at least one whitespace character; otherwise a character expected as the start of the comment may be regarded as the starting delimiter of the right part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343bf25e2927a4e247fde284894e20f4a2092df4" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;GLOB_CSH&lt;/code&gt; is a synonym for &lt;code&gt;GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT&lt;/code&gt; .</source>
          <target state="translated">Для удобства &lt;code&gt;GLOB_CSH&lt;/code&gt; является синонимом &lt;code&gt;GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7db168533be63e476cbf03e4ddcd8399688a0c04" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;GLOB_CSH&lt;/code&gt; is a synonym for &lt;code&gt;GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40732251f5c21be8c597889848a82040a77a373e" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;IO::File&lt;/code&gt; exports the O_XXX constants from the Fcntl module, if this module is available.</source>
          <target state="translated">Для удобства &lt;code&gt;IO::File&lt;/code&gt; экспортирует константы O_XXX из модуля Fcntl, если этот модуль доступен.</target>
        </trans-unit>
        <trans-unit id="38a10ffe4a20ca5792a7fd00b9c73d9ce59a1dd3" translate="yes" xml:space="preserve">
          <source>For convenience, Perl sets &lt;code&gt;$+&lt;/code&gt; to the string held by the highest numbered &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... that got assigned (and, somewhat related, &lt;code&gt;$^N&lt;/code&gt; to the value of the &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... most-recently assigned; i.e. the &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,... associated with the rightmost closing parenthesis used in the match).</source>
          <target state="translated">Для удобства Perl устанавливает &lt;code&gt;$+&lt;/code&gt; в строку, содержащуюся в строке с наибольшим номером &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ..., которая была назначена (и, в некоторой степени, &lt;code&gt;$^N&lt;/code&gt; в значение &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... ; то есть &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ..., связанные с крайней правой закрывающей круглой скобкой, используемой в совпадении).</target>
        </trans-unit>
        <trans-unit id="9011b98b95f15cd4a087ddfce8ee15dfdd0721aa" translate="yes" xml:space="preserve">
          <source>For convenience, Perl sets &lt;code&gt;$+&lt;/code&gt; to the string held by the highest numbered &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,... that got assigned (and, somewhat related, &lt;code&gt;$^N&lt;/code&gt; to the value of the &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,... most-recently assigned;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5611347ffd15c1223ef802d0edf52fb7e73b41" translate="yes" xml:space="preserve">
          <source>For convenience, during a &lt;code&gt;'code...'&lt;/code&gt; filtering operation, Filter::Simple provides a package variable (&lt;code&gt;$Filter::Simple::placeholder&lt;/code&gt; ) that contains a pre-compiled regex that matches any placeholder...and captures the identifier within the placeholder. Placeholders can be moved and re-ordered within the source code as needed.</source>
          <target state="translated">Для удобства во время операции фильтрации &lt;code&gt;'code...'&lt;/code&gt; Filter :: Simple предоставляет пакетную переменную ( &lt;code&gt;$Filter::Simple::placeholder&lt;/code&gt; ), которая содержит предварительно скомпилированное регулярное выражение, которое соответствует любому заполнителю ... и фиксирует идентификатор внутри заполнителя. При необходимости заполнители можно перемещать и переупорядочивать в исходном коде.</target>
        </trans-unit>
        <trans-unit id="0a977f7d9164e482b657b3b8fb97633309d91ddb" translate="yes" xml:space="preserve">
          <source>For convenience, during a &lt;code&gt;'code...'&lt;/code&gt; filtering operation, Filter::Simple provides a package variable (&lt;code&gt;$Filter::Simple::placeholder&lt;/code&gt;) that contains a pre-compiled regex that matches any placeholder...and captures the identifier within the placeholder. Placeholders can be moved and re-ordered within the source code as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a034c7b9883166db2c708f0dc5f543d0d6c5f5c5" translate="yes" xml:space="preserve">
          <source>For conversion of code points potentially larger than will fit in a character, use &lt;a href=&quot;#NATIVE_TO_UNI&quot;&gt;&quot;NATIVE_TO_UNI&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab53246447ba99db18af65b753a1b02f0b27488" translate="yes" xml:space="preserve">
          <source>For conversion of code points potentially larger than will fit in a character, use &lt;a href=&quot;#UNI_TO_NATIVE&quot;&gt;&quot;UNI_TO_NATIVE&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4adefa4b79abf45088dcb0ac2e06a348c35319" translate="yes" xml:space="preserve">
          <source>For conversion we have &lt;code&gt;Cygwin::win_to_posix_path()&lt;/code&gt; and &lt;code&gt;Cygwin::posix_to_win_path()&lt;/code&gt; .</source>
          <target state="translated">Для преобразования у нас есть &lt;code&gt;Cygwin::win_to_posix_path()&lt;/code&gt; и &lt;code&gt;Cygwin::posix_to_win_path()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d0e531ca755bbadc32f76a7bbbf87909f5f1d0" translate="yes" xml:space="preserve">
          <source>For conversion we have &lt;code&gt;Cygwin::win_to_posix_path()&lt;/code&gt; and &lt;code&gt;Cygwin::posix_to_win_path()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d928fe0051212f2f8da39a8b5bc221435184fd0" translate="yes" xml:space="preserve">
          <source>For copyright</source>
          <target state="translated">За авторские права</target>
        </trans-unit>
        <trans-unit id="1a0a72b7c53bc47eff73c9a1bbea76977d805414" translate="yes" xml:space="preserve">
          <source>For correct handling of East Asian half- and full-width characters, see &lt;a href=&quot;Text::WrapI18N&quot;&gt;Text::WrapI18N&lt;/a&gt;. For more detailed controls: &lt;a href=&quot;Text::Format&quot;&gt;Text::Format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eecebe67970e7a41398f09174a7fb5bf129f3a9" translate="yes" xml:space="preserve">
          <source>For correct handling of East Asian half- and full-width characters, see &lt;a href=&quot;http://search.cpan.org/perldoc/Text::WrapI18N&quot;&gt;Text::WrapI18N&lt;/a&gt;. For more detailed controls: &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Format&quot;&gt;Text::Format&lt;/a&gt;.</source>
          <target state="translated">Для правильной обработки восточноазиатских символов &lt;a href=&quot;http://search.cpan.org/perldoc/Text::WrapI18N&quot;&gt;половинной&lt;/a&gt; и полной ширины см. Text :: WrapI18N . Для более подробных элементов управления: &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Format&quot;&gt;Text :: Format&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e192d740cc4683287225288711c73e147509978a" translate="yes" xml:space="preserve">
          <source>For custom ops the type is returned from the registration, and it is up to the registree to ensure it is accurate. The value returned will be one of the &lt;code&gt;OA_&lt;/code&gt;* constants from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5605d690fc41e9584f8f39d50fb58f9b59b16327" translate="yes" xml:space="preserve">
          <source>For date and time processing look at the many related modules on CPAN. For a comprehensive date and time representation look at the &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f77b308a2ac839fd33563f9a552da3eeb4daa9" translate="yes" xml:space="preserve">
          <source>For date and time processing look at the many related modules on CPAN. For a comprehensive date and time representation look at the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module.</source>
          <target state="translated">Для обработки даты и времени просмотрите множество связанных модулей на CPAN. Для полного представления даты и времени посмотрите модуль &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07b6da6b04aa2922da90bdf4ba16ff504d7726a7" translate="yes" xml:space="preserve">
          <source>For debugging of CPAN data there is the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; command which takes the same arguments as make/test/install and outputs each object's Data::Dumper dump. If an argument looks like a perl variable and contains one of &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; , it is eval()ed and fed to Data::Dumper directly.</source>
          <target state="translated">Для отладки данных CPAN существует команда &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; , которая принимает те же аргументы, что и make / test / install, и выводит дамп каждого объекта Data :: Dumper. Если аргумент выглядит как переменная perl и содержит одно из значений &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; или &lt;code&gt;%&lt;/code&gt; , он вызывается eval () и напрямую передается в Data :: Dumper.</target>
        </trans-unit>
        <trans-unit id="8a807f2c9fb85faf8c9ac5d861d440bcf8bfce3c" translate="yes" xml:space="preserve">
          <source>For debugging the code of CPAN.pm itself in interactive mode, some debugging aid can be turned on for most packages within CPAN.pm with one of</source>
          <target state="translated">Для отладки самого кода CPAN.pm в интерактивном режиме,для большинства пакетов в рамках CPAN.pm можно включить некоторую помощь по отладке с помощью одной из опций</target>
        </trans-unit>
        <trans-unit id="dc61b5871895f28ad48638872dd4fd8cf1a53e5e" translate="yes" xml:space="preserve">
          <source>For decimal versions, an integer portion (no leading 0), a decimal point, and one or more digits to the right of the decimal are all required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012acad439f571a1fc425f25a48809ae662859e2" translate="yes" xml:space="preserve">
          <source>For decimal versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18adf48baa2e5602e7386e7898a8696aea38703" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the &lt;a href=&quot;Time::HiRes&quot;&gt;Time::HiRes&lt;/a&gt; module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides &lt;a href=&quot;Time::HiRes#ualarm-%28-%24useconds-%5B%2C-%24interval_useconds-%5D-%29&quot;&gt;&lt;code&gt;ualarm&lt;/code&gt;&lt;/a&gt;. You may also use Perl's four-argument version of &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; leaving the first three arguments undefined, or you might be able to use the &lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;/a&gt; interface to access &lt;a href=&quot;http://man.he.net/man2/setitimer&quot;&gt;setitimer(2)&lt;/a&gt; if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2375819172a576f1b09ffc97251059479964eff9" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the &lt;a href=&quot;Time::HiRes&quot;&gt;Time::HiRes&lt;/a&gt; module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides &lt;a href=&quot;Time::HiRes#usleep-%28-%24useconds-%29&quot;&gt;&lt;code&gt;usleep&lt;/code&gt;&lt;/a&gt;. You may also use Perl's four-argument version of &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; leaving the first three arguments undefined, or you might be able to use the &lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;/a&gt; interface to access &lt;a href=&quot;http://man.he.net/man2/setitimer&quot;&gt;setitimer(2)&lt;/a&gt; if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5d5a55a6b1cad338bb173db36952043185ac23" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides ualarm(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет ualarm (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd003af05b2132ba4b881a232af5e4cee8933eae" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides ualarm(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;../perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет ualarm (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;../perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="048bc05974c11cb3f14983d6e8a4de95a334014e" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides usleep(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет usleep (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d999a8a7adf00f409cdbfb2fc0969a34ea071e33" translate="yes" xml:space="preserve">
          <source>For delays of finer granularity than one second, the Time::HiRes module (from CPAN, and starting from Perl 5.8 part of the standard distribution) provides usleep(). You may also use Perl's four-argument version of select() leaving the first three arguments undefined, or you might be able to use the &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; interface to access setitimer(2) if your system supports it. See &lt;a href=&quot;../perlfaq8&quot;&gt;perlfaq8&lt;/a&gt; for details.</source>
          <target state="translated">Для задержек с более мелкой детализацией, чем одна секунда, модуль Time :: HiRes (из CPAN и начиная с Perl 5.8, часть стандартного дистрибутива) предоставляет usleep (). Вы также можете использовать Perl-версию select () с четырьмя аргументами, оставив первые три аргумента неопределенными, или вы можете использовать интерфейс &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; для доступа к setitimer (2), если ваша система его поддерживает. Подробнее см. &lt;a href=&quot;../perlfaq8&quot;&gt;Perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="880c0e9f515e34271c2c3b119d8f343dab33b21c" translate="yes" xml:space="preserve">
          <source>For dependencies that are required in order to run &lt;code&gt;Makefile.PL&lt;/code&gt; , see &lt;code&gt;CONFIGURE_REQUIRES&lt;/code&gt; .</source>
          <target state="translated">Информацию о зависимостях, необходимых для запуска &lt;code&gt;Makefile.PL&lt;/code&gt; , см . В разделе &lt;code&gt;CONFIGURE_REQUIRES&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56efd43ff2633084d0c4fb894544829d1847b596" translate="yes" xml:space="preserve">
          <source>For dependencies that are required in order to run &lt;code&gt;Makefile.PL&lt;/code&gt;, see &lt;code&gt;CONFIGURE_REQUIRES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b652017d6aba87f803b1349ff4840587bb26a8" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;&quot;OVERVIEW OF CLASSES&quot;&lt;/a&gt; and &lt;a href=&quot;#OP-RELATED-CLASSES&quot;&gt;&quot;OP-RELATED CLASSES&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1506155c00ca0b29e754a84c95c6d4d84c08eb" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;&quot;OVERVIEW OF CLASSES&quot;&lt;/a&gt; and &lt;a href=&quot;#SV-RELATED-CLASSES&quot;&gt;&quot;SV-RELATED CLASSES&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33634f235f0082e4181888900b85711db47d8f18" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;OVERVIEW OF CLASSES&lt;/a&gt; and &lt;a href=&quot;#OP-RELATED-CLASSES&quot;&gt;OP-RELATED CLASSES&lt;/a&gt;.</source>
          <target state="translated">Описание иерархии классов этих объектов и методов, которые могут быть вызваны для них, см. Ниже, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;ОБЗОР КЛАССОВ&lt;/a&gt; и &lt;a href=&quot;#OP-RELATED-CLASSES&quot;&gt;КЛАССОВ, СВЯЗАННЫХ с OP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3b2ae9d73ddeeda58bc4e13e54cb8a6fed8f14d" translate="yes" xml:space="preserve">
          <source>For descriptions of the class hierarchy of these objects and the methods that can be called on them, see below, &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;OVERVIEW OF CLASSES&lt;/a&gt; and &lt;a href=&quot;#SV-RELATED-CLASSES&quot;&gt;SV-RELATED CLASSES&lt;/a&gt;.</source>
          <target state="translated">Описание иерархии классов этих объектов и методов, которые могут быть вызваны для них, см. Ниже &lt;a href=&quot;#OVERVIEW-OF-CLASSES&quot;&gt;ОБЗОР КЛАССОВ&lt;/a&gt; и &lt;a href=&quot;#SV-RELATED-CLASSES&quot;&gt;КЛАССОВ, СВЯЗАННЫХ с SV&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec22c5e89b166831180c8fd7d61e1db96cf2000" translate="yes" xml:space="preserve">
          <source>For deserialisation there are only two cases to consider: either nonstandard tagging was used, in which case &lt;code&gt;allow_tags&lt;/code&gt; decides, or objects cannot be automatically be deserialised, in which case you can use postprocessing or the &lt;code&gt;filter_json_object&lt;/code&gt; or &lt;code&gt;filter_json_single_key_object&lt;/code&gt; callbacks to get some real objects our of your JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8371a2b6a91f80da291b64adb024dd9ea39e6b" translate="yes" xml:space="preserve">
          <source>For details on typemaps: &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826700f3b65927540e360eda58122d1f12e92b58" translate="yes" xml:space="preserve">
          <source>For details, please see &lt;code&gt;Unicode mapping issues and notes:&lt;/code&gt; at &lt;a href=&quot;http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/DEVANAGA.TXT&quot;&gt;http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/DEVANAGA.TXT&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd7e01e8ce19ce8f63863a1d7ecd9db34986ac0" translate="yes" xml:space="preserve">
          <source>For details, please see &lt;code&gt;Unicode mapping issues and notes:&lt;/code&gt; at &lt;a href=&quot;https://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/DEVANAGA.TXT&quot;&gt;http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/DEVANAGA.TXT&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6890c04c351eed8402cc96040025e018355d7713" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;perldoc ppport.h&lt;/code&gt; .</source>
          <target state="translated">Подробнее см. &lt;code&gt;perldoc ppport.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98a64169dc734a8fe4119fbf2902257cf31763af" translate="yes" xml:space="preserve">
          <source>For details, see &lt;code&gt;perldoc ppport.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be1d326997ed9e19e7a04e776dc614ee400c4f2" translate="yes" xml:space="preserve">
          <source>For details, see the description for &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">Подробнее см. Описание &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2da6125e37beb908e4b87a83be8efad53c88ed6a" translate="yes" xml:space="preserve">
          <source>For details, see the description for &lt;a href=&quot;perlapi#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4cabeb3c36ea2c5a3fbd884ca6fe8ba5049b92" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied arrays, the required methods are briefly defined below. See the &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные связанные массивы, необходимые методы кратко определены ниже. См. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; для более подробного описания и примера кода:</target>
        </trans-unit>
        <trans-unit id="8316eda6036e10f32d157be6bef162675363fcbc" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied arrays, the required methods are briefly defined below. See the &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33242068f9073573772617185fa7b62c43ab672" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied hashes, the required methods are briefly defined below. See the &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные связанные хэши, необходимые методы кратко описаны ниже. См. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; для более подробного описания и примера кода:</target>
        </trans-unit>
        <trans-unit id="53d3c2e123f9e22a4cc720388ad65b46d722f606" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied hashes, the required methods are briefly defined below. See the &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; section for more detailed descriptive, as well as example code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d44567c847615da73e4dc3fbe1131bc5a3e2c2" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-handle classes, the methods are summarized below. The &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные классы связанных дескрипторов, эти методы кратко описаны ниже. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; не только документирует их, но также содержит примеры кода:</target>
        </trans-unit>
        <trans-unit id="cfab23da22f4cecd199b96340524fcbe57be2da2" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-handle classes, the methods are summarized below. The &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928786a6337e41cc2160d3e1f5e15f742b97fa65" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-scalar classes, the methods are summarized below. The &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="translated">Для разработчиков, желающих написать свои собственные скалярные классы, эти методы кратко изложены ниже. Раздел &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; не только документирует их, но также содержит примеры кода:</target>
        </trans-unit>
        <trans-unit id="44a8d6f6fe6dd4abebf057c19fabf3ddbd2841d0" translate="yes" xml:space="preserve">
          <source>For developers wishing to write their own tied-scalar classes, the methods are summarized below. The &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; section not only documents these, but has sample code as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cff3dbfb52c9f4d663ef8f25c758142a479cc70" translate="yes" xml:space="preserve">
          <source>For direct examination of the buffer, the variable &lt;a href=&quot;#PL_parser-%3Ebufend&quot;&gt;&quot;PL_parser-&amp;gt;bufend&quot;&lt;/a&gt; points to the end of the buffer. The current lexing position is pointed to by &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt;. Direct use of these pointers is usually preferable to examination of the scalar through normal scalar means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e90c795a8afb6a6c9de6553439d8f6cbbf665f" translate="yes" xml:space="preserve">
          <source>For direct examination of the buffer, the variable &lt;a href=&quot;#PL_parser-%3ebufend&quot;&gt;PL_parser-&amp;gt;bufend&lt;/a&gt; points to the end of the buffer. The current lexing position is pointed to by &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt;. Direct use of these pointers is usually preferable to examination of the scalar through normal scalar means.</source>
          <target state="translated">Для непосредственного исследования буфера переменная &lt;a href=&quot;#PL_parser-%3ebufend&quot;&gt;PL_parser-&amp;gt; bufend&lt;/a&gt; указывает на конец буфера. Текущая позиция лексирования указывается &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; . Прямое использование этих указателей обычно предпочтительнее, чем исследование скаляра с помощью обычных скалярных средств.</target>
        </trans-unit>
        <trans-unit id="13c49c22472e027f068753f3e29a491152b0010b" translate="yes" xml:space="preserve">
          <source>For distributions that use</source>
          <target state="translated">Для дистрибутивов,использующих</target>
        </trans-unit>
        <trans-unit id="985017370413b179ae3946fe35f99a058dfef566" translate="yes" xml:space="preserve">
          <source>For doing I/O it is suggested that you use the autotranslating features of PerlIO, see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;.</source>
          <target state="translated">Для выполнения операций ввода-вывода рекомендуется использовать функции автоматического перевода PerlIO, см. &lt;a href=&quot;perluniintro&quot;&gt;Perluniintro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6c6fdf9044dc1cd6c013956178bb36e51e123a3" translate="yes" xml:space="preserve">
          <source>For dotted decimals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34dd79d1671e29d1a48a8679e05577208a886df" translate="yes" xml:space="preserve">
          <source>For dotted-decimal versions, a leading 'v' is required, with three or more sub-versions of no more than three digits. A leading 0 (zero) before the first sub-version (in the above example, '1') is also prohibited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce51f0686aa7fd04915057c8a38b4ba2a606bb7b" translate="yes" xml:space="preserve">
          <source>For double-quoted strings, the quoting from &lt;code&gt;\Q&lt;/code&gt; is applied after interpolation and escapes are processed.</source>
          <target state="translated">Для строк, заключенных в двойные кавычки, кавычки из &lt;code&gt;\Q&lt;/code&gt; применяются после интерполяции и обработки escape-символов.</target>
        </trans-unit>
        <trans-unit id="812614d64656fd03480d177dcb159cfedfd0b074" translate="yes" xml:space="preserve">
          <source>For dynamic extensions at build/link time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0153ffdb0839d7060eac410231aabcc8768cf39" translate="yes" xml:space="preserve">
          <source>For dynamic extensions at load time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7153807fff58e3cc6dcc7b6391711735f5c48fc7" translate="yes" xml:space="preserve">
          <source>For each component, we mention environment variables related to each installation directory. Either choose directories to match your values of the variables, or create/append-to variables to take into account the directories.</source>
          <target state="translated">Для каждого компонента мы указываем переменные окружения,связанные с каждым каталогом установки.Либо выберите каталоги,соответствующие вашим значениям переменных,либо создайте/примените к переменным,чтобы учесть эти каталоги.</target>
        </trans-unit>
        <trans-unit id="de6d45e2b8e4280d7556487f705375ab5958c2c9" translate="yes" xml:space="preserve">
          <source>For each currently defined drive letter, a &lt;code&gt;'\0'&lt;/code&gt;-terminated string of the path to the root of its file system is constructed. All of these strings are concatenated into a single larger string and an extra terminating &lt;code&gt;'\0'&lt;/code&gt; is added. This larger string is returned in &lt;code&gt;$osBuffer&lt;/code&gt;. Note that this includes drive letters that have been defined but that have no file system, such as drive letters assigned to unformatted partitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8371507ff701446b1827e00e5e462be60a5389" translate="yes" xml:space="preserve">
          <source>For each define, this gives a reference to an array of op names that use the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c925cffa4324c85082d132c7153102054ac63" translate="yes" xml:space="preserve">
          <source>For each directory in LIST (called $dir here) the lib module also checks to see if a directory called $dir/$archname/auto exists. If so the $dir/$archname directory is assumed to be a corresponding architecture specific directory and is added to @INC in front of $dir. lib.pm also checks if directories called $dir/$version and $dir/$version/$archname exist and adds these directories to @INC.</source>
          <target state="translated">Для каждого каталога в LIST (здесь он называется $dir)модуль lib также проверяет,существует ли каталог с именем $dir/$archname/auto.Если это так,то предполагается,что каталог $dir/$archname является соответствующим каталогом,специфичным для архитектуры,и добавляется к @INC перед $dir.lib.pm также проверяет,существуют ли каталоги с именами $dir/$version и $dir/$version/$archname,и добавляет эти каталоги к @INC.</target>
        </trans-unit>
        <trans-unit id="d6c50d0e6a86403f83c942ee394e8555abc0ddcd" translate="yes" xml:space="preserve">
          <source>For each directory in LIST (called $dir here) the lib module also checks to see if a directory called $dir/$archname/auto exists. If so the $dir/$archname directory is assumed to be a corresponding architecture specific directory and is also deleted from @INC.</source>
          <target state="translated">Для каждого каталога в LIST (здесь он называется $dir)модуль lib также проверяет,существует ли каталог с именем $dir/$archname/auto.Если это так,то предполагается,что каталог $dir/$archname является соответствующим каталогом,относящимся к конкретной архитектуре,и также удаляется из @INC.</target>
        </trans-unit>
        <trans-unit id="9b55b36de0f652d038ba1cdb31f1b3a1791c2037" translate="yes" xml:space="preserve">
          <source>For each directory in LIST (called $dir here) the lib module also checks to see if a directory called $dir/$archname/auto exists. If so the $dir/$archname directory is assumed to be a corresponding architecture specific directory and is also deleted from @INC. lib.pm also checks if directories called $dir/$version and $dir/$version/$archname exist and deletes these directories from @INC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b570115f1b3f6cab2450c47d487f4ae062c54b" translate="yes" xml:space="preserve">
          <source>For each instance of amnesty the &lt;code&gt;details&lt;/code&gt; field explains why amnesty was granted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c500f7aea9ecaf66833169bb60bfa93a088a3dfe" translate="yes" xml:space="preserve">
          <source>For each key, an example is provided followed by a description. The description begins with the version of spec in which the key was added or in which the definition was modified, whether the key is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64daaac0c21c762b1798b346c0a1931a0dd72bc6" translate="yes" xml:space="preserve">
          <source>For each library that is found, an appropriate directive for a linker options file is generated. The return values are space-separated strings of these directives, rather than elements used on the linker command line.</source>
          <target state="translated">Для каждой найденной библиотеки генерируется соответствующая директива для файла опций компоновщика.Возвращаемые значения представляют собой строки этих директив,разделенные пробелами,а не элементы,используемые в командной строке компоновщика.</target>
        </trans-unit>
        <trans-unit id="3313c88e144064867d27f9004bd8e9beaf19e663" translate="yes" xml:space="preserve">
          <source>For each line, the &lt;code&gt;PARSER&lt;/code&gt; loop first tries to match a series of digits followed by a word boundary. This match has to start at the place the last match left off (or the beginning of the string on the first match). Since &lt;code&gt;m/ \G( \d+\b
)/gcx&lt;/code&gt; uses the &lt;code&gt;c&lt;/code&gt; flag, if the string does not match that regular expression, perl does not reset pos() and the next match starts at the same position to try a different pattern.</source>
          <target state="translated">Для каждой строки цикл &lt;code&gt;PARSER&lt;/code&gt; сначала пытается сопоставить серию цифр, за которыми следует граница слова. Это совпадение должно начинаться с того места, где закончилось последнее совпадение (или с начала строки в первом совпадении). Поскольку &lt;code&gt;m/ \G( \d+\b )/gcx&lt;/code&gt; использует флаг &lt;code&gt;c&lt;/code&gt; , если строка не соответствует этому регулярному выражению, perl не сбрасывает pos (), и следующее совпадение начинается с той же позиции, чтобы попробовать другой шаблон.</target>
        </trans-unit>
        <trans-unit id="1e5961cf88fc461e10eaeb188dad6082abb09771" translate="yes" xml:space="preserve">
          <source>For each line, the &lt;code&gt;PARSER&lt;/code&gt; loop first tries to match a series of digits followed by a word boundary. This match has to start at the place the last match left off (or the beginning of the string on the first match). Since &lt;code&gt;m/ \G( \d+\b )/gcx&lt;/code&gt; uses the &lt;code&gt;c&lt;/code&gt; modifier, if the string does not match that regular expression, perl does not reset pos() and the next match starts at the same position to try a different pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6cfb118370f50c9c42bb5e390e24e86523c86f" translate="yes" xml:space="preserve">
          <source>For each line-style ('concise', 'terse', 'linenoise', etc.) there are 3 format-specs which control how OPs are rendered.</source>
          <target state="translated">Для каждого стиля линии (&quot;лаконичный&quot;,&quot;лаконичный&quot;,&quot;линенуазный&quot; и т.д.)есть 3 формата-специальности,которые управляют тем,как отображаются операционные системы.</target>
        </trans-unit>
        <trans-unit id="2ef94716a1f5652ad5d33bb69a0e70bcd8744c37" translate="yes" xml:space="preserve">
          <source>For each of the fields marked &quot;(if any)&quot; the default value on success is an empty string. On failure, all of these values (except the remaining text) are &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Для каждого из полей, отмеченных &amp;laquo;(если есть)&amp;raquo;, значение по умолчанию в случае успеха - пустая строка. В случае ошибки все эти значения (кроме оставшегося текста) становятся &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="891b5f8726a4abe2a560a861ed1100968e0d0403" translate="yes" xml:space="preserve">
          <source>For each of the fields marked &quot;(if any)&quot; the default value on success is an empty string. On failure, all of these values (except the remaining text) are &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdf0186b6bb5a61b6cf887ce8022d9f1ed87feb" translate="yes" xml:space="preserve">
          <source>For each of these three lists, the collection of signals set to be trapped is checked before trapping; if your architecture does not implement a particular signal, it will not be trapped but rather silently ignored.</source>
          <target state="translated">Для каждого из этих трех списков перед ловушкой проверяется набор сигналов,установленных в ловушку;если ваша архитектура не реализует определенный сигнал,он не будет пойман в ловушку,а будет молча игнорироваться.</target>
        </trans-unit>
        <trans-unit id="ee92e857afe43bd5c799c71bf04f7d8761b4690e" translate="yes" xml:space="preserve">
          <source>For each such format, &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt; generates 4 bits of result. With non-alphabetical characters, the result is based on the 4 least-significant bits of the input character, i.e., on &lt;code&gt;ord($char)%16&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate nybbles 0 and 1, as do bytes &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt;. For characters &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt;, the result is compatible with the usual hexadecimal digits, so that &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;&lt;/code&gt; both generate the nybble &lt;code&gt;0xA==10&lt;/code&gt;. Use only these specific hex characters with this format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00c059a52bac42904c37c4c2fb8927b36fa4f53" translate="yes" xml:space="preserve">
          <source>For each such format, pack() generates 4 bits of result. With non-alphabetical characters, the result is based on the 4 least-significant bits of the input character, i.e., on &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate nybbles 0 and 1, as do bytes &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . For characters &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; , the result is compatible with the usual hexadecimal digits, so that &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;&lt;/code&gt; both generate the nybble &lt;code&gt;0xA==10&lt;/code&gt; . Use only these specific hex characters with this format.</source>
          <target state="translated">Для каждого такого формата pack () генерирует 4 бита результата. Для небуквенных символов результат основан на 4 младших битах входного символа, то есть на &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt; . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют нибблы 0 и 1, как и байты &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . Для символов &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; результат совместим с обычными шестнадцатеричными цифрами, так что &lt;code&gt;&quot;a&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;&lt;/code&gt; оба генерируют &lt;code&gt;0xA==10&lt;/code&gt; . Используйте только эти конкретные шестнадцатеричные символы с этим форматом.</target>
        </trans-unit>
        <trans-unit id="8b61b8ba63bd2e7b3403785e0beac1c665bb76ab" translate="yes" xml:space="preserve">
          <source>For each such format, pack() generates 4 bits of result. With non-alphabetical characters, the result is based on the 4 least-significant bits of the input character, i.e., on &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate nybbles 0 and 1, as do bytes &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . For characters &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; , the result is compatible with the usual hexadecimal digits, so that &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;A&quot;&lt;/code&gt; both generate the nybble &lt;code&gt;0xA==10&lt;/code&gt; . Use only these specific hex characters with this format.</source>
          <target state="translated">Для каждого такого формата pack () генерирует 4 бита результата. Для небуквенных символов результат основан на 4 младших битах входного символа, то есть на &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%16&lt;/a&gt;&lt;/code&gt; . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют нибблы 0 и 1, как и байты &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; . Для символов &lt;code&gt;&quot;a&quot;..&quot;f&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;..&quot;F&quot;&lt;/code&gt; результат совместим с обычными шестнадцатеричными цифрами, так что &lt;code&gt;&quot;a&quot;&lt;/code&gt; и &lt;code&gt;&quot;A&quot;&lt;/code&gt; оба генерируют &lt;code&gt;0xA==10&lt;/code&gt; . Используйте только эти конкретные шестнадцатеричные символы с этим форматом.</target>
        </trans-unit>
        <trans-unit id="56bab3e1fc980d5c9adf77a55a7a575a655bbcbb" translate="yes" xml:space="preserve">
          <source>For earlier Perls, a QP encoder that works on both ASCII and EBCDIC platforms would look somewhat like the following:</source>
          <target state="translated">Для более ранних Perls,QP кодировщик,который работает на платформах ASCII и EBCDIC,будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="d4008829801fc42279d6aea1087db0de93d9c0e6" translate="yes" xml:space="preserve">
          <source>For ease of access, the Perl manual has been split up into several sections.</source>
          <target state="translated">Для удобства доступа руководство Perl было разделено на несколько разделов.</target>
        </trans-unit>
        <trans-unit id="2508ccfe05f4a37451a9fb33f66c8f8a0dd451f8" translate="yes" xml:space="preserve">
          <source>For ease of use also the SEEK_* constants (for seek() and sysseek(), e.g. SEEK_END) and the S_I* constants (for chmod() and stat()) are available for import. They can be imported either separately or using the tags &lt;code&gt;:&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;:mode&lt;/code&gt; .</source>
          <target state="translated">Для простоты использования также доступны для импорта константы SEEK_ * (для seek () и sysseek (), например, SEEK_END) и константы S_I * (для chmod () и stat ()). Их можно импортировать отдельно или с помощью тегов &lt;code&gt;:&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;:mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="080c953fd655148a5acb6735a1808c4238e35fff" translate="yes" xml:space="preserve">
          <source>For ease of use also the SEEK_* constants (for seek() and sysseek(), e.g. SEEK_END) and the S_I* constants (for chmod() and stat()) are available for import. They can be imported either separately or using the tags &lt;code&gt;:seek&lt;/code&gt; and &lt;code&gt;:mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36f5b62afea33d1be2e3590e8d7005448aa361a" translate="yes" xml:space="preserve">
          <source>For easier debugging, you may prefer to always use the commas when not setting $Term::ANSIColor::AUTORESET or PUSHCOLOR/POPCOLOR so that you'll get a fatal compile error rather than a warning.</source>
          <target state="translated">Для облегчения отладки,вы можете предпочесть всегда использовать запятые,когда не устанавливаете $Term::ANSIColor::AUTORESET или PUSHCOLOR/POPCOLOR,так что вы получите фатальную ошибку компиляции,а не предупреждение.</target>
        </trans-unit>
        <trans-unit id="98fbe6111f30281308f810d30686560db37e9754" translate="yes" xml:space="preserve">
          <source>For editors: if you're on Unix you probably have vi or a vi clone already, and possibly an emacs too, so you may not need to download anything. In any emacs the cperl-mode (M-x cperl-mode) gives you perhaps the best available Perl editing mode in any editor.</source>
          <target state="translated">Для редакторов:если вы работаете на Unix,у вас,вероятно,уже есть vi или клон vi,а возможно,и Emacs,так что вам,возможно,не придется ничего скачивать.В любом emacs cperl-режиме (M-x cperl-mode),возможно,лучший доступный Perl-режим редактирования в любом редакторе.</target>
        </trans-unit>
        <trans-unit id="5aa663054769a993f1d5b54fdeaaf504f9f0a5ea" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, Perl takes a conservative view of whether data is tainted. If an expression contains tainted data, any subexpression may be considered tainted, even if the value of the subexpression is not itself affected by the tainted data.</source>
          <target state="translated">По соображениям эффективности Perl придерживается консервативного взгляда на то,не загрязняют ли данные.Если выражение содержит запятнанные данные,то любое подвыражение может считаться запятнанным,даже если значение подвыражения само по себе не подвержено влиянию запятнанных данных.</target>
        </trans-unit>
        <trans-unit id="88d03294b4e14b45668b8c5e5b3dfd1364498c9a" translate="yes" xml:space="preserve">
          <source>For efficiency, consider using &lt;code&gt;newSVpvn&lt;/code&gt; instead.</source>
          <target state="translated">Для повышения эффективности рассмотрите возможность использования вместо этого &lt;code&gt;newSVpvn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586297e0f4c9f862517187fc9706a3d0c6dfe92d" translate="yes" xml:space="preserve">
          <source>For emphasis, those properties that match no code points at all are listed as well in a separate section following the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f3b14d486219cf0d85fabf0e9eb85e0b88039e" translate="yes" xml:space="preserve">
          <source>For encodings that are implemented by the &lt;code&gt;Encode::XS&lt;/code&gt; module, &lt;code&gt;CHECK&lt;/code&gt;&lt;code&gt;==&lt;/code&gt;&lt;code&gt;Encode::FB_PERLQQ&lt;/code&gt; puts &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;decode&lt;/code&gt; into &lt;code&gt;perlqq&lt;/code&gt; fallback mode.</source>
          <target state="translated">Для кодировок, которые реализованы модулем &lt;code&gt;Encode::XS&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; &lt;code&gt;Encode::FB_PERLQQ&lt;/code&gt; переводит &lt;code&gt;encode&lt;/code&gt; и &lt;code&gt;decode&lt;/code&gt; в резервный режим &lt;code&gt;perlqq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dbd88840e300bb2976ee7b89691796d725de54c" translate="yes" xml:space="preserve">
          <source>For even better control look at &lt;a href=&quot;Test::Most&quot;&gt;Test::Most&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0461c72db1796ac384c3743d40421d6d728a24" translate="yes" xml:space="preserve">
          <source>For even better control look at &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Most&quot;&gt;Test::Most&lt;/a&gt;.</source>
          <target state="translated">Для еще лучшего контроля посмотрите &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Most&quot;&gt;Test :: Most&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6de84b40d8c9c92b7839fff9ac4fcc2776aacc0f" translate="yes" xml:space="preserve">
          <source>For even faster execution, you could do:</source>
          <target state="translated">Для еще более быстрого исполнения,вы могли бы сделать:</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b398db36194244f1d9cc63256c82345fa029b47" translate="yes" xml:space="preserve">
          <source>For example &quot;not ok 23 - hole count # TODO insufficient donuts&quot; would result in this structure:</source>
          <target state="translated">Например,&quot;not ok 23-hole count#TODO sufficient donuts&quot; приведет к такой структуре:</target>
        </trans-unit>
        <trans-unit id="a5d3ee5d1b4b93034c4647239c3af6ae67c5bde3" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;Carp&lt;/code&gt; itself is listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Therefore the full stack backtrace from &lt;code&gt;confess&lt;/code&gt; will not start inside of &lt;code&gt;Carp&lt;/code&gt; , and the short message from calling &lt;code&gt;croak&lt;/code&gt; is not placed on the line where &lt;code&gt;croak&lt;/code&gt; was called.</source>
          <target state="translated">Например, сам &lt;code&gt;Carp&lt;/code&gt; указан в &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Следовательно, обратная трассировка полного стека из &lt;code&gt;confess&lt;/code&gt; не будет запускаться внутри &lt;code&gt;Carp&lt;/code&gt; , и короткое сообщение от вызова &lt;code&gt;croak&lt;/code&gt; не помещается в строку, где была вызвана &lt;code&gt;croak&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="521fa6026ce8939c8d285bb972a9f7bcfff4cab1" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;Carp&lt;/code&gt; itself is listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;. Therefore the full stack backtrace from &lt;code&gt;confess&lt;/code&gt; will not start inside of &lt;code&gt;Carp&lt;/code&gt;, and the short message from calling &lt;code&gt;croak&lt;/code&gt; is not placed on the line where &lt;code&gt;croak&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace2b7f25e1af57e029dcfd910f2807f801a5827" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC RR&lt;/code&gt; with &lt;code&gt;COMBINING TILDE OVERLAY&lt;/code&gt; (&lt;code&gt;U+0344&lt;/code&gt; ) is &lt;code&gt;0FB2 0344 0F71 0F80&lt;/code&gt; in NFD. In this case &lt;code&gt;0FB2 0F80&lt;/code&gt; (&lt;code&gt;TIBETAN VOWEL SIGN VOCALIC R&lt;/code&gt; ) is detected, instead of &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; . Inserted &lt;code&gt;0344&lt;/code&gt; makes &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; discontiguous and lack of contraction &lt;code&gt;0FB2 0F71&lt;/code&gt; prohibits &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; from being detected.</source>
          <target state="translated">Например, &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC RR&lt;/code&gt; с &lt;code&gt;COMBINING TILDE OVERLAY&lt;/code&gt; ( &lt;code&gt;U+0344&lt;/code&gt; ) - это &lt;code&gt;0FB2 0344 0F71 0F80&lt;/code&gt; в NFD. В этом случае &lt;code&gt;0FB2 0F80&lt;/code&gt; ( &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC R&lt;/code&gt; ) вместо &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; . Поставлены &lt;code&gt;0344&lt;/code&gt; марок &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; несоприкасающиеся и отсутствие сокращения &lt;code&gt;0FB2 0F71&lt;/code&gt; запрещают &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; от обнаружения.</target>
        </trans-unit>
        <trans-unit id="5b3b5d05e6eb63eda24be82cac42fbd12530ed9c" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;TIBETAN VOWEL SIGN VOCALIC RR&lt;/code&gt; with &lt;code&gt;COMBINING TILDE OVERLAY&lt;/code&gt; (&lt;code&gt;U+0344&lt;/code&gt;) is &lt;code&gt;0FB2 0344 0F71 0F80&lt;/code&gt; in NFD. In this case &lt;code&gt;0FB2 0F80&lt;/code&gt; (&lt;code&gt;TIBETAN VOWEL SIGN VOCALIC R&lt;/code&gt;) is detected, instead of &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt;. Inserted &lt;code&gt;0344&lt;/code&gt; makes &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; discontiguous and lack of contraction &lt;code&gt;0FB2 0F71&lt;/code&gt; prohibits &lt;code&gt;0FB2 0F71 0F80&lt;/code&gt; from being detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e72f699aeed60ccae59fad4d360b3c19491b02" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;U+1F88&lt;/code&gt; is equivalent to &lt;code&gt;U+1F00 U+03B9&lt;/code&gt; , instead of just &lt;code&gt;U+1F80&lt;/code&gt; . This difference matters mainly for certain Greek capital letters with certain modifiers: the Full case-folding decomposes the letter, while the Simple case-folding would map it to a single character.</source>
          <target state="translated">Например, &lt;code&gt;U+1F88&lt;/code&gt; эквивалентно &lt;code&gt;U+1F00 U+03B9&lt;/code&gt; , а не просто &lt;code&gt;U+1F80&lt;/code&gt; . Это различие имеет значение в основном для некоторых греческих заглавных букв с определенными модификаторами: полное свертывание регистра разбивает букву, а простое свертывание регистра отображает ее в один символ.</target>
        </trans-unit>
        <trans-unit id="90b883def1af1c1a868a945977d2d26ca0ae5dc6" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;U+1F88&lt;/code&gt; is equivalent to &lt;code&gt;U+1F00 U+03B9&lt;/code&gt;, instead of just &lt;code&gt;U+1F80&lt;/code&gt;. This difference matters mainly for certain Greek capital letters with certain modifiers: the Full case-folding decomposes the letter, while the Simple case-folding would map it to a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b565d7aeb5a29ca8ef10bd80a27e15b4565fe687" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;ilogb(20)&lt;/code&gt; is 4, as an integer.</source>
          <target state="translated">Например, &lt;code&gt;ilogb(20)&lt;/code&gt; - это целое число 4.</target>
        </trans-unit>
        <trans-unit id="214bce966a0b82f5da24e7d2944d4f30b962d2dd" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;logb(20)&lt;/code&gt; is 4, as a floating point number.</source>
          <target state="translated">Например, &lt;code&gt;logb(20)&lt;/code&gt; равно 4 как число с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="ba3539c7ce6418ebe27c9aacef03ad1ef9e8f077" translate="yes" xml:space="preserve">
          <source>For example a &lt;a href=&quot;gdbm_file&quot;&gt;GDBM_File&lt;/a&gt; GDBM_READER tied hash will die with something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b87712e77039600d0bb5eadd729b52754dd4ad" translate="yes" xml:space="preserve">
          <source>For example a &lt;a href=&quot;http://search.cpan.org/perldoc/GDBM_File&quot;&gt;GDBM_File&lt;/a&gt; GDBM_READER tied hash will die with something like:</source>
          <target state="translated">Например, связанный хеш &lt;a href=&quot;http://search.cpan.org/perldoc/GDBM_File&quot;&gt;GDBM_File&lt;/a&gt; GDBM_READER умрет с чем-то вроде:</target>
        </trans-unit>
        <trans-unit id="318807e1faa6370da68f94b91a578d4d9a1a925f" translate="yes" xml:space="preserve">
          <source>For example a template of &lt;code&gt;testXXXXXX&lt;/code&gt; and suffix of &lt;code&gt;.dat&lt;/code&gt; would generate a file similar to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bb45479d65e581a981105236dd80b5a848028d" translate="yes" xml:space="preserve">
          <source>For example a template of C</source>
          <target state="translated">Например,шаблон C</target>
        </trans-unit>
        <trans-unit id="cdc25bb52677c33d7412ae881f68406f010eba12" translate="yes" xml:space="preserve">
          <source>For example after the following program:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c45cfbac1c695f1bfa7c0643b1ffc692ad7e5a" translate="yes" xml:space="preserve">
          <source>For example if there is a &lt;code&gt;=head2&lt;/code&gt; in the POD file prior to a &lt;code&gt;=head1&lt;/code&gt; .</source>
          <target state="translated">Например , если есть &lt;code&gt;=head2&lt;/code&gt; в файле POD до &lt;code&gt;=head1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6de621c77744b42e19d169bcbfad2ade8e3c01f0" translate="yes" xml:space="preserve">
          <source>For example if there is a &lt;code&gt;=head2&lt;/code&gt; in the POD file prior to a &lt;code&gt;=head1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9f1ca436392d899e51a2acc5e1317d1e2a72ba" translate="yes" xml:space="preserve">
          <source>For example the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fethanschoonover.com%2fsolarized&quot;&gt;Solarized&lt;/a&gt; colors can be mapped with:</source>
          <target state="translated">Например, цвета &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fethanschoonover.com%2fsolarized&quot;&gt;Solarized&lt;/a&gt; можно сопоставить с:</target>
        </trans-unit>
        <trans-unit id="d5022ccbe5240d64fbbb13f709a591ad35027c5e" translate="yes" xml:space="preserve">
          <source>For example the &lt;a href=&quot;https://ethanschoonover.com/solarized&quot;&gt;Solarized&lt;/a&gt; colors can be mapped with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313b954d842d0bc62b1462fc60b81d6d65b41bbd" translate="yes" xml:space="preserve">
          <source>For example the Latin &lt;b&gt;script&lt;/b&gt; is spread over several &lt;b&gt;blocks&lt;/b&gt;, such as &lt;code&gt;Basic Latin&lt;/code&gt; , &lt;code&gt;Latin 1 Supplement&lt;/code&gt;, &lt;code&gt;Latin Extended-A&lt;/code&gt; , and &lt;code&gt;Latin Extended-B&lt;/code&gt; . On the other hand, the Latin script does not contain all the characters of the &lt;code&gt;Basic Latin&lt;/code&gt; block (also known as ASCII): it includes only the letters, and not, for example, the digits nor the punctuation.</source>
          <target state="translated">Например, латинский &lt;b&gt;шрифт&lt;/b&gt; разбит на несколько &lt;b&gt;блоков&lt;/b&gt; , таких как &lt;code&gt;Basic Latin&lt;/code&gt; , &lt;code&gt;Latin 1 Supplement&lt;/code&gt; , &lt;code&gt;Latin Extended-A&lt;/code&gt; и &lt;code&gt;Latin Extended-B&lt;/code&gt; . С другой стороны, латинский шрифт не содержит всех символов блока &lt;code&gt;Basic Latin&lt;/code&gt; (также известного как ASCII): он включает только буквы, а не, например, цифры или знаки препинания.</target>
        </trans-unit>
        <trans-unit id="44972a585eb47fd3c1cfd9cd70932eb7157d7010" translate="yes" xml:space="preserve">
          <source>For example the Latin &lt;b&gt;script&lt;/b&gt; is spread over several &lt;b&gt;blocks&lt;/b&gt;, such as &lt;code&gt;Basic Latin&lt;/code&gt;, &lt;code&gt;Latin 1 Supplement&lt;/code&gt;, &lt;code&gt;Latin Extended-A&lt;/code&gt;, and &lt;code&gt;Latin Extended-B&lt;/code&gt;. On the other hand, the Latin script does not contain all the characters of the &lt;code&gt;Basic Latin&lt;/code&gt; block (also known as ASCII): it includes only the letters, and not, for example, the digits nor the punctuation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>
        </trans-unit>
        <trans-unit id="82ef4144af1f8de5f1e9ae8b466d94344115ab2d" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; excludes items listed in &lt;code&gt;no_index&lt;/code&gt; when searching for POD, meaning files in these directories will not converted to HTML and made public - which is useful if you have example or test PODs that you don't want the search engine to go through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6812d6ccb69fe61a2edf14ef55d513765cc75692" translate="yes" xml:space="preserve">
          <source>For example, &lt;b&gt;-COE&lt;/b&gt; and &lt;b&gt;-C6&lt;/b&gt; will both turn on UTF-8-ness on both STDOUT and STDERR. Repeating letters is just redundant, not cumulative nor toggling.</source>
          <target state="translated">Например, &lt;b&gt;-COE&lt;/b&gt; и &lt;b&gt;С6&lt;/b&gt; оба будут включите UTF-8-ности на обоих STDOUT и STDERR. Повторяющиеся буквы просто избыточны, а не накапливаются и не переключаются.</target>
        </trans-unit>
        <trans-unit id="e66983239615f4463efa1593676357175c070f41" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;-2&quot;..&quot;2&quot;&lt;/code&gt; is the same as &lt;code&gt;-2..2&lt;/code&gt;, and &lt;code&gt;&quot;2.18&quot;..&quot;3.14&quot;&lt;/code&gt; produces &lt;code&gt;2, 3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe6d9c5c68e102fdd57d245db85bb6c1c51a595" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;01&quot;..&quot;04&quot;&lt;/code&gt; produces &lt;code&gt;&quot;01&quot;, &quot;02&quot;, &quot;03&quot;, &quot;04&quot;&lt;/code&gt;, and &lt;code&gt;&quot;00&quot;..&quot;-1&quot;&lt;/code&gt; produces &lt;code&gt;&quot;00&quot;&lt;/code&gt; through &lt;code&gt;&quot;99&quot;&lt;/code&gt; - this may seem surprising, but see the following rules for why it works this way. To get dates with leading zeros, you can say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b2d2aa7ae22fcbe14979eb61870192c4dd7f04" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;a&quot;..&quot;--&quot;&lt;/code&gt; is the same as &lt;code&gt;&quot;a&quot;..&quot;zz&quot;&lt;/code&gt;, &lt;code&gt;&quot;0&quot;..&quot;xx&quot;&lt;/code&gt; produces &lt;code&gt;&quot;0&quot;&lt;/code&gt; through &lt;code&gt;&quot;99&quot;&lt;/code&gt;, and &lt;code&gt;&quot;aaa&quot;..&quot;--&quot;&lt;/code&gt; returns the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2c9b68575feddafd5a08ad5dafea23856e19ad" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;ax&quot;..&quot;az&quot;&lt;/code&gt; produces &lt;code&gt;&quot;ax&quot;, &quot;ay&quot;, &quot;az&quot;&lt;/code&gt;, but &lt;code&gt;&quot;*x&quot;..&quot;az&quot;&lt;/code&gt; produces only &lt;code&gt;&quot;*x&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e6ab6115ba236468a1784dbaded696c523a4aa" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;$+{foo}&lt;/code&gt; is equivalent to &lt;code&gt;$1&lt;/code&gt; after the following match:</source>
          <target state="translated">Например, &lt;code&gt;$+{foo}&lt;/code&gt; эквивалентно &lt;code&gt;$1&lt;/code&gt; после следующего совпадения:</target>
        </trans-unit>
        <trans-unit id="222cd952b129bcca43a9663919abeeb392a2e171" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&amp;lt;..\\l*b\\file/*glob.p?&amp;gt;&lt;/code&gt; will work as expected (in that it will find something like '..\lib\File/DosGlob.pm' alright). Note that all path components are case-insensitive, and that backslashes and forward slashes are both accepted, and preserved. You may have to double the backslashes if you are putting them in literally, due to double-quotish parsing of the pattern by perl.</source>
          <target state="translated">Например, &lt;code&gt;&amp;lt;..\\l*b\\file/*glob.p?&amp;gt;&lt;/code&gt; Будет работать должным образом (в том смысле, что он найдет что-то вроде '.. \ lib \ File / DosGlob.pm' хорошо). Обратите внимание, что все компоненты пути нечувствительны к регистру, и что обратная и прямая косые черты принимаются и сохраняются. Возможно, вам придется удвоить обратную косую черту, если вы вводите их буквально, из-за парсинга шаблона в двойных кавычках с помощью perl.</target>
        </trans-unit>
        <trans-unit id="062393ae2c2d73fa3bc2e3a2d91a68adfcd83483" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;-oLaTeX&lt;/code&gt; currently tries all of the following classes: Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex Pod::LATEX.</source>
          <target state="translated">Например, &lt;code&gt;-oLaTeX&lt;/code&gt; в настоящее время пробует все следующие классы: Pod :: Perldoc :: ToLaTeX Pod :: Perldoc :: Tolatex Pod :: Perldoc :: ToLatex Pod :: Perldoc :: ToLATEX Pod :: Simple :: LaTeX Pod: : Simple :: latex Pod :: Simple :: Latex Pod :: Simple :: LATEX Pod :: LaTeX Pod :: latex Pod :: Latex Pod :: LATEX.</target>
        </trans-unit>
        <trans-unit id="77a1e585a487cc3bfbbd51ad5e562a48a610c1cd" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HARNESS_PERL_SWITCHES=-T&lt;/code&gt; will turn on taint mode. &lt;code&gt;HARNESS_PERL_SWITCHES=-MDevel::Cover&lt;/code&gt; will run &lt;code&gt;Devel::Cover&lt;/code&gt; for each test.</source>
          <target state="translated">Например, &lt;code&gt;HARNESS_PERL_SWITCHES=-T&lt;/code&gt; включит режим заражения. &lt;code&gt;HARNESS_PERL_SWITCHES=-MDevel::Cover&lt;/code&gt; будет запускать &lt;code&gt;Devel::Cover&lt;/code&gt; для каждого теста.</target>
        </trans-unit>
        <trans-unit id="86e52df63e27db421ca6b9e4dc513368b0a83476" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;U+0041&lt;/code&gt;&lt;code&gt;&quot;LATIN CAPITAL LETTER A&quot;&lt;/code&gt; was present in the very first Unicode release available, which is &lt;code&gt;1.1&lt;/code&gt; , so this property is true for all valid &quot;*&quot; versions. On the other hand, &lt;code&gt;U+1EFF&lt;/code&gt; was not assigned until version 5.1 when it became &lt;code&gt;&quot;LATIN SMALL LETTER Y WITH LOOP&quot;&lt;/code&gt; , so the only &quot;*&quot; that would match it are 5.1, 5.2, and later.</source>
          <target state="translated">Например, &lt;code&gt;U+0041&lt;/code&gt; &lt;code&gt;&quot;LATIN CAPITAL LETTER A&quot;&lt;/code&gt; присутствовала в самой первой доступной версии Unicode, а именно &lt;code&gt;1.1&lt;/code&gt; , поэтому это свойство истинно для всех допустимых версий &amp;laquo;*&amp;raquo;. С другой стороны, &lt;code&gt;U+1EFF&lt;/code&gt; не был назначен до версии 5.1, когда он стал &lt;code&gt;&quot;LATIN SMALL LETTER Y WITH LOOP&quot;&lt;/code&gt; , поэтому единственные символы &amp;laquo;*&amp;raquo;, которые будут соответствовать ему, - это 5.1, 5.2 и более поздние версии .</target>
        </trans-unit>
        <trans-unit id="b293a722d09747451b766a52031476e1ba81af2d" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;U+0041&lt;/code&gt;&lt;code&gt;&quot;LATIN CAPITAL LETTER A&quot;&lt;/code&gt; was present in the very first Unicode release available, which is &lt;code&gt;1.1&lt;/code&gt;, so this property is true for all valid &quot;*&quot; versions. On the other hand, &lt;code&gt;U+1EFF&lt;/code&gt; was not assigned until version 5.1 when it became &lt;code&gt;&quot;LATIN SMALL LETTER Y WITH LOOP&quot;&lt;/code&gt;, so the only &quot;*&quot; that would match it are 5.1, 5.2, and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346cf35fe7206ef61916e68c2ca5d063324557a7" translate="yes" xml:space="preserve">
          <source>For example, Foo::Bar becomes Foo-Bar.</source>
          <target state="translated">Например,Фу::Бар становится Фу-Баром.</target>
        </trans-unit>
        <trans-unit id="ea8cd802fd235063bdbe8cd10be2c1b9866e7e9d" translate="yes" xml:space="preserve">
          <source>For example, MyExpirePolicy::TIEHASH might create an object that contains a regular Perl hash (which it will to store the cached values) and some extra information about the arguments and how old the data is and things like that. Let us call this object `C'.</source>
          <target state="translated">Например,MyExpirePolicy::TIEHASH может создать объект,который будет содержать обычный Perl хэш (который будет хранить кэшированные значения)и некоторую дополнительную информацию об аргументах,а также о том,сколько лет данным и тому подобное.Давайте назовем этот объект `C'.</target>
        </trans-unit>
        <trans-unit id="7e2c26a54a82719f79b06117790e2637ab0e300f" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;Moose&lt;/code&gt; class can subclass a &lt;code&gt;Moo&lt;/code&gt; class using &lt;code&gt;extends&lt;/code&gt; or consume a &lt;code&gt;Moo&lt;/code&gt; role using &lt;code&gt;with&lt;/code&gt; .</source>
          <target state="translated">Например, класс &lt;code&gt;Moose&lt;/code&gt; может создавать подклассы класса &lt;code&gt;Moo&lt;/code&gt; с помощью &lt;code&gt;extends&lt;/code&gt; или использовать роль &lt;code&gt;Moo&lt;/code&gt; &lt;code&gt;with&lt;/code&gt; помощью with .</target>
        </trans-unit>
        <trans-unit id="e1743f8be5bc24aa84fbb2597cf9ba3fce287be4" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;Moose&lt;/code&gt; class can subclass a &lt;code&gt;Moo&lt;/code&gt; class using &lt;code&gt;extends&lt;/code&gt; or consume a &lt;code&gt;Moo&lt;/code&gt; role using &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557d3fcd9902744d46a8cb542c3d28eade0c9716" translate="yes" xml:space="preserve">
          <source>For example, a directive consisting of this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2744eaf270dcbbff1985c2b73c221de5631d9d" translate="yes" xml:space="preserve">
          <source>For example, a version of &lt;code&gt;like()&lt;/code&gt; , sans the useful diagnostic messages, could be written as:</source>
          <target state="translated">Например, версия &lt;code&gt;like()&lt;/code&gt; без полезных диагностических сообщений может быть записана как:</target>
        </trans-unit>
        <trans-unit id="54553804eb65ab331e5083c6d74eeb123e188def" translate="yes" xml:space="preserve">
          <source>For example, a version of &lt;code&gt;like()&lt;/code&gt;, sans the useful diagnostic messages, could be written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4218fb9c51483864cd6b3fb02448d68465452ff" translate="yes" xml:space="preserve">
          <source>For example, an XSUB</source>
          <target state="translated">Например,XSUB</target>
        </trans-unit>
        <trans-unit id="cce56f257ff2d1a6e195376cb7b5f349fe5b4b57" translate="yes" xml:space="preserve">
          <source>For example, as of Oct 31, 2009, the CPAN index file contained these module-distribution mappings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7132575485b1cfbea0394c9ac448d0a435204db7" translate="yes" xml:space="preserve">
          <source>For example, both options given below are equivalent to setting &lt;code&gt;ReuseAddr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d908226f910991ef51ebc57880107e99b08586dc" translate="yes" xml:space="preserve">
          <source>For example, consider the code below:</source>
          <target state="translated">Например,рассмотрим код,приведенный ниже:</target>
        </trans-unit>
        <trans-unit id="ec1791bd29717623df33288ef02efc342f0cf537" translate="yes" xml:space="preserve">
          <source>For example, consider the following scenario. You have a DBM database that you need to share with a third-party C application. The C application assumes that</source>
          <target state="translated">Например,рассмотрим следующий сценарий.У вас есть база данных DBM,которой вы должны поделиться со сторонним приложением C.C-приложение предполагает,что</target>
        </trans-unit>
        <trans-unit id="8190f04d38d06a461e096583cfda36d375198e8e" translate="yes" xml:space="preserve">
          <source>For example, consider:</source>
          <target state="translated">Например,рассмотрим:</target>
        </trans-unit>
        <trans-unit id="120867ef674bae56ea0364ba96f034264719d15f" translate="yes" xml:space="preserve">
          <source>For example, given &lt;code&gt;dir&lt;/code&gt; of 'lib' and &lt;code&gt;prefix&lt;/code&gt; of 'lib', the return value is a hashref of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1377b5d79a1a1b8f2eb1b799a03d844580027b4" translate="yes" xml:space="preserve">
          <source>For example, given the string:</source>
          <target state="translated">Например,учитывая строку:</target>
        </trans-unit>
        <trans-unit id="61f7eb35077596ec97c395fa31a4c9dc65c12237" translate="yes" xml:space="preserve">
          <source>For example, here all the areas that are taken literally are underlined with a &quot;^&quot;, and all the in-bracket special regions are underlined with an X:</source>
          <target state="translated">Например,здесь все области,которые взяты буквально,подчеркнуты &quot;^&quot;,а все входящие в скобки специальные области подчеркнуты &quot;X&quot;:</target>
        </trans-unit>
        <trans-unit id="282f0060364377e323c90656e8982dd19487e634" translate="yes" xml:space="preserve">
          <source>For example, here is a loop that inserts index producing entries before any line containing a certain pattern:</source>
          <target state="translated">Например,здесь есть цикл,который вставляет записи,производящие индекс,перед любой линией,содержащей определенную деталь:</target>
        </trans-unit>
        <trans-unit id="c309481bf35b9a661995259865d469413fa7c131" translate="yes" xml:space="preserve">
          <source>For example, here is a minimal source code filter in a module named BANG.pm. It simply converts every occurrence of the sequence &lt;code&gt;BANG\s+BANG&lt;/code&gt; to the sequence &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt; 'BANG' if $BANG&lt;/code&gt; in any piece of code following a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; BANG;&lt;/code&gt; statement (until the next &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; BANG;&lt;/code&gt; statement, if any):</source>
          <target state="translated">Например, вот минимальный фильтр исходного кода в модуле с именем BANG.pm. Он просто преобразует каждое вхождение последовательности &lt;code&gt;BANG\s+BANG&lt;/code&gt; в последовательность &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt; 'BANG' if $BANG&lt;/code&gt; в любом фрагменте кода после &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; BANG;&lt;/code&gt; оператор (до следующего оператора &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; BANG;&lt;/code&gt; , если есть):</target>
        </trans-unit>
        <trans-unit id="1a7d21d7fdba8993fa8f320558eb8943554fa8e9" translate="yes" xml:space="preserve">
          <source>For example, here is a minimal source code filter in a module named BANG.pm. It simply converts every occurrence of the sequence &lt;code&gt;BANG\s+BANG&lt;/code&gt; to the sequence &lt;code&gt;die 'BANG' if $BANG&lt;/code&gt; in any piece of code following a &lt;code&gt;use BANG;&lt;/code&gt; statement (until the next &lt;code&gt;no BANG;&lt;/code&gt; statement, if any):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deab4a0dbceae95053981957ee52dc40c226b6c1" translate="yes" xml:space="preserve">
          <source>For example, here is a sample filter that adds a trailing NULL character to all strings before they are written to the DBM file, and removes the trailing NULL when they are read from the DBM file</source>
          <target state="translated">Например,вот пример фильтра,который добавляет символ NULL трейлинга ко всем строкам перед их записью в DBM-файл и удаляет NULL трейлинга при их чтении из DBM-файла.</target>
        </trans-unit>
        <trans-unit id="2ff6a04c682bedfc2159947b94ad35c5e1653401" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;$a&lt;/code&gt; is an object blessed into a package declaring</source>
          <target state="translated">Например, если &lt;code&gt;$a&lt;/code&gt; - объект, добавленный в пакет, объявляющий</target>
        </trans-unit>
        <trans-unit id="e47691ce5bbf77ccdd2c65322eb9ae19daa34236" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;A&lt;/code&gt; inherits from &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; (in that order), &lt;code&gt;B&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; with &lt;code&gt;\&amp;amp;D::plus_sub&lt;/code&gt; , and &lt;code&gt;C&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; by &lt;code&gt;&quot;plus_meth&quot;&lt;/code&gt; , then the subroutine &lt;code&gt;D::plus_sub&lt;/code&gt; will be called to implement operation &lt;code&gt;+&lt;/code&gt; for an object in package &lt;code&gt;A&lt;/code&gt; .</source>
          <target state="translated">Например, если &lt;code&gt;A&lt;/code&gt; наследуется от &lt;code&gt;B&lt;/code&gt; и &lt;code&gt;C&lt;/code&gt; (в этом порядке), &lt;code&gt;B&lt;/code&gt; перегружает &lt;code&gt;+&lt;/code&gt; с помощью &lt;code&gt;\&amp;amp;D::plus_sub&lt;/code&gt; , а &lt;code&gt;C&lt;/code&gt; перегружает &lt;code&gt;+&lt;/code&gt; с помощью &lt;code&gt;&quot;plus_meth&quot;&lt;/code&gt; , тогда будет вызвана подпрограмма &lt;code&gt;D::plus_sub&lt;/code&gt; для реализации операции &lt;code&gt;+&lt;/code&gt; для объект в пакете &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ff3217e3f10be1d713ebcee2d82c19ffe203ca1" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;A&lt;/code&gt; inherits from &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; (in that order), &lt;code&gt;B&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; with &lt;code&gt;\&amp;amp;D::plus_sub&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; overloads &lt;code&gt;+&lt;/code&gt; by &lt;code&gt;&quot;plus_meth&quot;&lt;/code&gt;, then the subroutine &lt;code&gt;D::plus_sub&lt;/code&gt; will be called to implement operation &lt;code&gt;+&lt;/code&gt; for an object in package &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb8e022d3a14d860cf1eee66a67b7f130110122" translate="yes" xml:space="preserve">
          <source>For example, if a user accepts only 'ca' (Catalan) and 'es' (Spanish), and the documents/interfaces you have available are just in German, Italian, and Chinese, then the user will most likely want the Italian one (and not the Chinese or German one!), instead of getting nothing. So &lt;code&gt;panic_languages('ca', 'es')&lt;/code&gt; returns a list containing 'it' (Italian).</source>
          <target state="translated">Например, если пользователь принимает только &amp;laquo;ca&amp;raquo; (каталанский) и &amp;laquo;es&amp;raquo; (испанский), а имеющиеся у вас документы / интерфейсы только на немецком, итальянском и китайском языках, то пользователь, скорее всего, захочет итальянский. (а не китайскую или немецкую!), а не получить ничего. Таким образом, &lt;code&gt;panic_languages('ca', 'es')&lt;/code&gt; возвращает список, содержащий 'it' (итальянский).</target>
        </trans-unit>
        <trans-unit id="dd033dcdd253bc51f444e9213dde5da48cee293c" translate="yes" xml:space="preserve">
          <source>For example, if all the characters in the sequence are Greek, or Common, or Inherited, this function will return TRUE, provided any decimal digits in it are from the same block of digits in Common. (These are the ASCII digits &quot;0&quot;..&quot;9&quot; and additionally a block for full width forms of these, and several others used in mathematical notation.) For scripts (unlike Greek) that have their own digits defined this will accept either digits from that set or from one of the Common digit sets, but not a combination of the two. Some scripts, such as Arabic, have more than one set of digits. All digits must come from the same set for this function to return TRUE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b2730284efb7215764ff65ce5779181405a788" translate="yes" xml:space="preserve">
          <source>For example, if both input and out are chosen to be &lt;code&gt;:encoding(UTF-8)&lt;/code&gt;, a &lt;code&gt;:std&lt;/code&gt; will mean that STDIN, STDOUT, and STDERR will also have &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; set. On the other hand, if only output is chosen to be in &lt;code&gt;:encoding(koi8r)&lt;/code&gt;, a &lt;code&gt;:std&lt;/code&gt; will cause only the STDOUT and STDERR to be in &lt;code&gt;koi8r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886940312d9491ca5ffc8d712e7908d39622ad09" translate="yes" xml:space="preserve">
          <source>For example, if no tests have run &lt;code&gt;is_passing()&lt;/code&gt; will be true because even though a suite with no tests is a failure you can add a passing test to it and start passing.</source>
          <target state="translated">Например, если ни один из тестов не выполнялся, &lt;code&gt;is_passing()&lt;/code&gt; будет истинным, потому что даже если набор без тестов является ошибочным, вы можете добавить к нему проходной тест и начать прохождение.</target>
        </trans-unit>
        <trans-unit id="f350820f8a15ee234a6d0b5f40ef9ca061810978" translate="yes" xml:space="preserve">
          <source>For example, if the bug is present on &lt;code&gt;HEAD&lt;/code&gt; but wasn't in 5.10.0, &lt;code&gt;git&lt;/code&gt; will learn about this when you enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8759c901db12e35962f36dbb59c087c3f752959f" translate="yes" xml:space="preserve">
          <source>For example, if you add a Unicode string like</source>
          <target state="translated">Например,если вы добавите строку Unicode типа</target>
        </trans-unit>
        <trans-unit id="32c9f1310448f772c98938afaa753d6c8ad8468a" translate="yes" xml:space="preserve">
          <source>For example, if you have 4 C functions multiply(), divide(), add(), subtract() all having the signature:</source>
          <target state="translated">Например,если у вас есть 4 функции на Си:multiply(),divide(),add(),subtract(),все они имеют сигнатуру:</target>
        </trans-unit>
        <trans-unit id="4a173ebec9470f66747de7c5eefed0eb1d0d01a0" translate="yes" xml:space="preserve">
          <source>For example, if you have a uuencoded and compressed source file, it is possible to stack a uudecode filter and an uncompression filter like this:</source>
          <target state="translated">Например,если у вас есть uuencoded и сжатый исходный файл,то можно сложить в стек фильтр uudecode и фильтр без сжатия,как этот:</target>
        </trans-unit>
        <trans-unit id="d9372470a314912841e718aa7d95049e68d683c3" translate="yes" xml:space="preserve">
          <source>For example, if you want all your regular expressions to have /msx on by default, simply put</source>
          <target state="translated">Например,если вы хотите,чтобы все ваши регулярные выражения имели /msx по умолчанию,просто напишите</target>
        </trans-unit>
        <trans-unit id="743af917ca6acb088488514506f78e5a56610546" translate="yes" xml:space="preserve">
          <source>For example, if you want all your regular expressions to have /msxx on by default, simply put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4909c84cf33294d068c280ab4acd84ce25b4c18c" translate="yes" xml:space="preserve">
          <source>For example, if you wanted a function to make a new hash and return a reference to it, you have these options:</source>
          <target state="translated">Например,если вы хотите,чтобы функция сделала новый хэш и вернула ссылку на него,у вас есть эти опции:</target>
        </trans-unit>
        <trans-unit id="6c2555ae4677f2fae349053aea4869881467feea" translate="yes" xml:space="preserve">
          <source>For example, if your scalar is a reference and you want to modify the &lt;code&gt;SvIVX&lt;/code&gt; slot, you can't just do &lt;code&gt;SvROK_off&lt;/code&gt;, as that will leak the referent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a570ae33985ad610c93d2b21ee03162407502a4d" translate="yes" xml:space="preserve">
          <source>For example, if your scalar is a reference and you want to modify the SvIVX slot, you can't just do SvROK_off, as that will leak the referent.</source>
          <target state="translated">Например,если ваш скаляр является ссылкой и вы хотите изменить слот SvIVX,вы не можете просто сделать SvROK_off,так как это приведет к утечке референта.</target>
        </trans-unit>
        <trans-unit id="85a3de5be37b1e7d1156f1cef62afbe6c76e2823" translate="yes" xml:space="preserve">
          <source>For example, imagine you want to return a reference from an XSUB function. Inside the XSUB routine, you create an SV which initially has a reference count of one. Then you call &lt;code&gt;newRV_inc&lt;/code&gt; , passing it the just-created SV. This returns the reference as a new SV, but the reference count of the SV you passed to &lt;code&gt;newRV_inc&lt;/code&gt; has been incremented to two. Now you return the reference from the XSUB routine and forget about the SV. But Perl hasn't! Whenever the returned reference is destroyed, the reference count of the original SV is decreased to one and nothing happens. The SV will hang around without any way to access it until Perl itself terminates. This is a memory leak.</source>
          <target state="translated">Например, представьте, что вы хотите вернуть ссылку из функции XSUB. Внутри процедуры XSUB вы создаете SV, который изначально имеет счетчик ссылок, равный единице. Затем вы вызываете &lt;code&gt;newRV_inc&lt;/code&gt; , передавая ему только что созданный SV. Это возвращает ссылку как новый SV, но счетчик ссылок SV, который вы передали в &lt;code&gt;newRV_inc&lt;/code&gt; , был увеличен до двух. Теперь вы возвращаете ссылку из процедуры XSUB и забываете о SV. Но в Perl нет! Каждый раз, когда возвращенная ссылка уничтожается, счетчик ссылок исходного SV уменьшается до единицы и ничего не происходит. SV будет зависать без какого-либо доступа к нему, пока сам Perl не завершится. Это утечка памяти.</target>
        </trans-unit>
        <trans-unit id="21d2cc6afcf04419580fbfc3f6b2421473912245" translate="yes" xml:space="preserve">
          <source>For example, imagine you want to return a reference from an XSUB function. Inside the XSUB routine, you create an SV which initially has just a single reference, owned by the XSUB routine. This reference needs to be disposed of before the routine is complete, otherwise it will leak, preventing the SV from ever being destroyed. So to create an RV referencing the SV, it is most convenient to pass the SV to &lt;code&gt;newRV_noinc()&lt;/code&gt;, which consumes that reference. Now the XSUB routine no longer owns a reference to the SV, but does own a reference to the RV, which in turn owns a reference to the SV. The ownership of the reference to the RV is then transferred by the process of returning the RV from the XSUB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb2e2ef894e1ed98060074d6b4776bf06e4d3ee" translate="yes" xml:space="preserve">
          <source>For example, intuition tells you that this XS code:</source>
          <target state="translated">Например,интуиция подсказывает вам,что этот XS код:</target>
        </trans-unit>
        <trans-unit id="74d92c0f78a3f35d2b66123bb54771dbbcbaaae8" translate="yes" xml:space="preserve">
          <source>For example, it might return these data (among others) for the difference between 5.008000 and 5.008001:</source>
          <target state="translated">Например,он может вернуть эти данные (среди прочего)для разницы между 5.008000 и 5.008001:</target>
        </trans-unit>
        <trans-unit id="8932a840658bb617ebb44a7bc96b426c503bdff7" translate="yes" xml:space="preserve">
          <source>For example, let's say that you have a long-running database server daemon that you want folks to be able to access from the Web, but only if they go through a CGI interface. You'd have a small, simple CGI program that does whatever checks and logging you feel like, and then acts as a Unix-domain client and connects to your private server.</source>
          <target state="translated">Например,допустим,у вас есть давний демон сервера баз данных,к которому вы хотите,чтобы люди имели доступ из Интернета,но только если они проходят через CGI интерфейс.У вас будет маленькая,простая CGI-программа,которая делает все,что вы хотите проверить и записать в журнал,а затем действует как Unix-клиент домена и соединяется с вашим частным сервером.</target>
        </trans-unit>
        <trans-unit id="86ba35baedd2bab7b0f63f6847d21e1fa348e167" translate="yes" xml:space="preserve">
          <source>For example, let's say you'd like to have your</source>
          <target state="translated">Например,скажем,вы бы хотели,чтобы ваш</target>
        </trans-unit>
        <trans-unit id="194fc6778319983cc9c4ca8c95042faf96fb7b65" translate="yes" xml:space="preserve">
          <source>For example, let's take a GUI driven program. It has a semaphore that it uses to synchronize access to the display, so only one thread is ever drawing at once. Handy, but of course you don't want any thread to start drawing until things are properly set up. In this case, you can create a semaphore with a counter set to zero, and up it when things are ready for drawing.</source>
          <target state="translated">Например,возьмем программу с графическим интерфейсом.У нее есть семафор,который она использует для синхронизации доступа к дисплею,так что только один поток рисует одновременно.Удобно,но,конечно,вы не хотите,чтобы какой-нибудь поток начал рисовать,пока все не будет настроено должным образом.В этом случае Вы можете создать семафор со счетчиком,установленным на ноль,и поднимать его,когда все будет готово к рисованию.</target>
        </trans-unit>
        <trans-unit id="a7c15f9bd991e32fcb9fda0fc1d672dd96785374" translate="yes" xml:space="preserve">
          <source>For example, line 2 below is wrong because it does not have at least 2 spaces, but lines 1 and 3 are fine because they have at least 2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cc0c799c8ac490a734bb661c428c57117107e1" translate="yes" xml:space="preserve">
          <source>For example, many newer useful APIs are not present in OS/2 v2; many PM-related APIs require DLLs not available on floppy-boot setup.</source>
          <target state="translated">Например,многие более новые полезные API отсутствуют в OS/2 v2;многие API,связанные с PM,требуют DLL,недоступных на дискетах.</target>
        </trans-unit>
        <trans-unit id="dc5f27a11595298226b5ecd1db6f9aeef4a5b4ec" translate="yes" xml:space="preserve">
          <source>For example, on Unix this would escape any single-quotes in $text and put single-quotes around the whole thing.</source>
          <target state="translated">Например,в Unix это позволит избежать любых одиночных кавычек в $тексте и поместить одиночные кавычки вокруг всего этого.</target>
        </trans-unit>
        <trans-unit id="609e914fb8a944506b94ed39a0575be3c2f1f46e" translate="yes" xml:space="preserve">
          <source>For example, on a poorly equipped computer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ea05a8d9aa3d31bd0e3e1d1aa6044dba6a83b8" translate="yes" xml:space="preserve">
          <source>For example, parsing a L&amp;lt;Foo/&quot;Bar&quot;&amp;gt; link will produce a start-token with a &quot;to&quot; attribute with the value &quot;Foo&quot;, a &quot;type&quot; attribute with the value &quot;pod&quot;, and a &quot;section&quot; attribute with the value &quot;Bar&quot;.</source>
          <target state="translated">Например, при синтаксическом анализе ссылки L &amp;lt;Foo / &quot;Bar&quot;&amp;gt; будет создан стартовый токен с атрибутом &quot;to&quot; со значением &quot;Foo&quot;, атрибутом &quot;type&quot; со значением &quot;pod&quot; и &quot;section&quot; атрибут со значением &amp;laquo;Бар&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="7ea4a776edac8c6f6bfd35b979f9a6514e0b64fe" translate="yes" xml:space="preserve">
          <source>For example, parsing this paragraph of Pod:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8ed73a29aeabbe37200513a23647bf9812ba11" translate="yes" xml:space="preserve">
          <source>For example, say you need to create a class implementing overloaded mathematical operators, and would like to provide your own pragma that functions much like &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; You'd like this code</source>
          <target state="translated">Например, предположим, что вам нужно создать класс, реализующий перегруженные математические операторы, и вы хотите предоставить свою собственную прагму, которая работает так же, как &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; Вам нужен этот код</target>
        </trans-unit>
        <trans-unit id="6daf57bf99f1fc518b402ca174d25b0d54e1f1c0" translate="yes" xml:space="preserve">
          <source>For example, say you need to create a class implementing overloaded mathematical operators, and would like to provide your own pragma that functions much like &lt;code&gt;use integer;&lt;/code&gt; You'd like this code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbbe0aa9845cec520a90786e8524e8299625199" translate="yes" xml:space="preserve">
          <source>For example, setting prefix_pattern to &lt;code&gt;--|-|\+|\/&lt;/code&gt; and long_prefix_pattern to &lt;code&gt;--|\/&lt;/code&gt; would add Win32 style argument handling.</source>
          <target state="translated">Например, установка prefix_pattern на &lt;code&gt;--|-|\+|\/&lt;/code&gt; и long_prefix_pattern на &lt;code&gt;--|\/&lt;/code&gt; добавит обработку аргументов в стиле Win32.</target>
        </trans-unit>
        <trans-unit id="83cdc2b87550c2073421ee9d7b2b562b30e21210" translate="yes" xml:space="preserve">
          <source>For example, suppose that a C function is declared as</source>
          <target state="translated">Например,предположим,что функция C объявлена как</target>
        </trans-unit>
        <trans-unit id="3032721d2a0b9447ee105fd0f58af3c782c7c78e" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a module, A, which already has an import function:</source>
          <target state="translated">Например,предположим,что у вас есть модуль A,который уже имеет функцию импорта:</target>
        </trans-unit>
        <trans-unit id="5d59fda06c904abab606e40ac19199fab2edd4c9" translate="yes" xml:space="preserve">
          <source>For example, suppose the start tag &quot;/para&quot; introduces a paragraph, which then continues until the next &quot;/endpara&quot; tag or until another &quot;/para&quot; tag is encountered:</source>
          <target state="translated">Например,предположим,что стартовый тег &quot;/para&quot; вводит абзац,который затем продолжается до следующего тега &quot;/endpara&quot; или до тех пор,пока не встретится другой тег &quot;/para&quot;:</target>
        </trans-unit>
        <trans-unit id="722e9b7fb9ae1447f9773a346a88fa54f1637a70" translate="yes" xml:space="preserve">
          <source>For example, suppose under the previous example, the memory footprints were</source>
          <target state="translated">Например,предположим в предыдущем примере,что следы памяти были</target>
        </trans-unit>
        <trans-unit id="05d893596622d4a80e535a21a12a1aee563b93bd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a document that starts out:</source>
          <target state="translated">Например,предположим,что у вас есть документ,который начинается:</target>
        </trans-unit>
        <trans-unit id="bffbbe302261255488cedcaf66d413bfbf36c6ca" translate="yes" xml:space="preserve">
          <source>For example, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b6b18c244e053f8f3ff342944215804ef30809" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;redundant&lt;/code&gt; category of warnings was introduced in Perl-5.22. This warning flags certain instances of superfluous arguments to &lt;code&gt;printf&lt;/code&gt; and &lt;code&gt;sprintf&lt;/code&gt;. But if your code was running warnings-free on earlier versions of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d6ac4af7dc4fb8891b91e976475ba9ad84c4ec" translate="yes" xml:space="preserve">
          <source>For example, the basic Perl does not have any of the DB libraries (db, dbm, ndbm, gdsm). You can add these using iPKGui, however, you need to set environment variable LD_LIBRARY_PATH to the appropriate value:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
