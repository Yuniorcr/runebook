<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9aa02419484468b5c8da416f7649906d690c9a05" translate="yes" xml:space="preserve">
          <source>There is the &quot;regnext&quot; from a given regop. This is the regop which is reached by jumping forward by the value of &lt;code&gt;NEXT_OFF()&lt;/code&gt;, or in a few cases for longer jumps by the &lt;code&gt;arg1&lt;/code&gt; field of the &lt;code&gt;regnode_1&lt;/code&gt; structure. The subroutine &lt;code&gt;regnext()&lt;/code&gt; handles this transparently. This is the logical successor of the node, which in some cases, like that of the &lt;code&gt;BRANCH&lt;/code&gt; regop, has special meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e93b59e1cec82fb52bcc021241febda0271114" translate="yes" xml:space="preserve">
          <source>There is unfortunately no way to know whether the current emulator supports more than eight colors, which makes the choice of colors difficult. The most conservative choice is to use only the regular colors, which are at least displayed on all emulators. However, they will appear dark in sixteen-color terminal emulators, including most common emulators in UNIX X environments. If you know the display is one of those emulators, you may wish to use the bright variants instead. Even better, offer the user a way to configure the colors for a given application to fit their terminal emulator.</source>
          <target state="translated">К сожалению,нет способа узнать,поддерживает ли текущий эмулятор более восьми цветов,что затрудняет выбор цветов.Самый консервативный выбор-использовать только обычные цвета,которые отображаются,по крайней мере,на всех эмуляторах.Однако в шестнадцатицветных терминальных эмуляторах они будут темными,в том числе и в наиболее распространенных эмуляторах в средах UNIX X.Если вы знаете,что дисплей является одним из таких эмуляторов,то,возможно,вы захотите использовать вместо него яркие варианты.Еще лучше предложить пользователю способ настройки цветов для данного приложения под терминальный эмулятор.</target>
        </trans-unit>
        <trans-unit id="695fd95569c58aad4ef775aef68eb765f2b01d11" translate="yes" xml:space="preserve">
          <source>There is whitespace at the beginning or the end of the contents of L&amp;lt;...&amp;gt;.</source>
          <target state="translated">В начале или в конце содержимого L &amp;lt;...&amp;gt; есть пробел.</target>
        </trans-unit>
        <trans-unit id="95a3b67169b42d8576a9c6b1e3142c83d233d818" translate="yes" xml:space="preserve">
          <source>There is/was a minor twist which makes this scheme fragile: what to do with DLLs loaded from</source>
          <target state="translated">Есть/был небольшой поворот,который делает эту схему хрупкой:что делать с DLL,загруженными из</target>
        </trans-unit>
        <trans-unit id="3224e59e3b76dce8e510a893a97e615a7718acdb" translate="yes" xml:space="preserve">
          <source>There may be a few system-dependent issues of concern to EBCDIC Perl programmers.</source>
          <target state="translated">Для программистов EBCDIC Perl могут существовать некоторые системно-зависимые проблемы.</target>
        </trans-unit>
        <trans-unit id="74512965a00a9ef27998a0f76a590e7ca4e44a5a" translate="yes" xml:space="preserve">
          <source>There may be a slight performance decrease in the filetest operations when the filetest pragma is in effect, because checking bits is very cheap.</source>
          <target state="translated">Может быть небольшое снижение производительности при выполнении самых филевых операций,когда действует самая филевая прагма,потому что проверка битов очень дешева.</target>
        </trans-unit>
        <trans-unit id="e5aefd712f7c17e18d56a8092421c803470327d8" translate="yes" xml:space="preserve">
          <source>There may be several other functions that have undefined behavior so this list shouldn't be considered complete.</source>
          <target state="translated">Может быть несколько других функций,которые имеют неопределенное поведение,поэтому этот список не следует считать полным.</target>
        </trans-unit>
        <trans-unit id="8f2ee1e9e100e424daf008c17d87249cb596b7da" translate="yes" xml:space="preserve">
          <source>There might be padding bytes between the fields to align the fields - the bytes can be anything</source>
          <target state="translated">Между полями могут быть байты подкладки для выравнивания полей-байты могут быть любыми.</target>
        </trans-unit>
        <trans-unit id="79bbf613c601df02685a1a8cf9fe8bf41a315d78" translate="yes" xml:space="preserve">
          <source>There must be no space after the &amp;lt;&amp;lt; part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0027f08c80bd3f13ec2adbb5ed6335850c27dec0" translate="yes" xml:space="preserve">
          <source>There needs to be at least a line separator after the end token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0e690d4d9216e705dc85028ebd1bac807095e9" translate="yes" xml:space="preserve">
          <source>There needs to be content inside E, L, and X formatting codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04957b7e4885516ed63d7f8370637e85be797dcc" translate="yes" xml:space="preserve">
          <source>There seem to be various problems in this long double implementation. If Configure detects this brokenness, it will disable the long double support. This can be overridden with explicit &lt;code&gt;-Duselongdouble&lt;/code&gt; (or &lt;code&gt;-Dusemorebits&lt;/code&gt;, which enables both long doubles and 64 bit integers). If you decide to enable long doubles, for most of the broken things Perl has implemented workarounds, but the handling of the special values infinity and NaN remains badly broken: for example infinity plus zero results in NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da2d0d0ae5db5c30555083a00bfa8e94e394bba" translate="yes" xml:space="preserve">
          <source>There seem to be various problems in this long double implementation. If Configure detects this brokenness, it will disable the long double support. This can be overriden with explicit &lt;code&gt;-Duselongdouble&lt;/code&gt; (or &lt;code&gt;-Dusemorebits&lt;/code&gt; , which enables both long doubles and 64 bit integers). If you decide to enable long doubles, for most of the broken things Perl has implemented workarounds, but the handling of the special values infinity and NaN remains badly broken: for example infinity plus zero results in NaN.</source>
          <target state="translated">Кажется, что в этой длинной двойной реализации есть различные проблемы. Если Configure обнаружит эту неисправность, он отключит длинную двойную поддержку. Это можно изменить с помощью явного &lt;code&gt;-Duselongdouble&lt;/code&gt; (или &lt;code&gt;-Dusemorebits&lt;/code&gt; , которое позволяет использовать как длинные двойные, так и 64-битные целые числа). Если вы решите включить длинные удвоения, для большинства неисправных вещей Perl реализовал обходные пути, но обработка специальных значений infinity и NaN остается сильно нарушенной: например, бесконечность плюс ноль приводит к NaN.</target>
        </trans-unit>
        <trans-unit id="0335b463034771ce67a8d72b65b51f2c22f06a51" translate="yes" xml:space="preserve">
          <source>There seems to be a broken system header file in HP-UX 11.00 that breaks perl building in 32bit mode with GNU gcc-4.x causing this error. The same file for HP-UX 11.11 (even though the file is older) does not show this failure, and has the correct definition, so the best fix is to patch the header to match:</source>
          <target state="translated">Похоже,что в HP-UX 11.00 есть сломанный системный заголовочный файл,который нарушает сборку perl в 32-битном режиме с GNU gcc-4.x,вызывая эту ошибку.Тот же самый файл для HP-UX 11.11 (даже несмотря на то,что он старше)не показывает эту ошибку и имеет правильное определение,так что лучшее исправление-это исправление заголовка в соответствии с ним:</target>
        </trans-unit>
        <trans-unit id="06ff19d7cd54ce39cc7fc4ec7d77ca64eb5bbd76" translate="yes" xml:space="preserve">
          <source>There should be a second &lt;code&gt;&quot;:&quot;&lt;/code&gt; , like this:</source>
          <target state="translated">Должен быть второй &lt;code&gt;&quot;:&quot;&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="f721ea1c84751a36c3521319fb047aa7a307e4e5" translate="yes" xml:space="preserve">
          <source>There should be an operator before the &lt;code&gt;&quot;(&quot;&lt;/code&gt; , as there's no indication as to how the digits are to be combined with the characters in the Lao and Thai scripts.</source>
          <target state="translated">Перед знаком &lt;code&gt;&quot;(&quot;&lt;/code&gt; должен стоять оператор , поскольку нет указания, как цифры должны сочетаться с символами в лаосском и тайском шрифтах.</target>
        </trans-unit>
        <trans-unit id="b71e898307cc5bb054200f4c984f66181569531c" translate="yes" xml:space="preserve">
          <source>There should be an operator before the &lt;code&gt;&quot;(&quot;&lt;/code&gt;, as there's no indication as to how the digits are to be combined with the characters in the Lao and Thai scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b586b7cb9ac2ab75263a6f83deec69bb4720e3" translate="yes" xml:space="preserve">
          <source>There should be no test failures.</source>
          <target state="translated">Не должно быть никаких сбоев в тестах.</target>
        </trans-unit>
        <trans-unit id="b05734899e6eb6dfc62f93644e8cdfe0e3686a6c" translate="yes" xml:space="preserve">
          <source>There used to be two main passes involved in parsing, the first to calculate the size of the compiled program, and the second to actually compile it. But now there is only one main pass, with an initial crude guess based on the length of the input pattern, which is increased if necessary as parsing proceeds, and afterwards, trimmed to the actual amount used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7e045068e59967e564a49c6f93bb7b24be5931" translate="yes" xml:space="preserve">
          <source>There we're using the %USER_VARS hash instead of symbolic references. Sometimes this comes up in reading strings from the user with variable references and wanting to expand them to the values of your perl program's variables. This is also a bad idea because it conflates the program-addressable namespace and the user-addressable one. Instead of reading a string and expanding it to the actual contents of your program's own variables:</source>
          <target state="translated">Там мы используем хэш %USER_VARS вместо символических ссылок.Иногда это проявляется в чтении пользователем строк со ссылками на переменные и желании расширить их до значений переменных вашей perl программы.Это также плохая идея,так как соединяет пространство имён,адресуемое программе,и пространство имён,адресуемое пользователю.Вместо того,чтобы читать строку и расширять ее до фактического содержимого собственных переменных Вашей программы:</target>
        </trans-unit>
        <trans-unit id="42ff6f078c663dbcc013a189f161b1005798db67" translate="yes" xml:space="preserve">
          <source>There were at least two consecutive &lt;code&gt;=begin&lt;/code&gt; commands without the corresponding &lt;code&gt;=end&lt;/code&gt; . Only one &lt;code&gt;=begin&lt;/code&gt; may be active at a time.</source>
          <target state="translated">Было как минимум две последовательные команды &lt;code&gt;=begin&lt;/code&gt; без соответствующего &lt;code&gt;=end&lt;/code&gt; . &lt;code&gt;=begin&lt;/code&gt; может быть активен только один = begin .</target>
        </trans-unit>
        <trans-unit id="f453a9d5941f2f68e4cfdb1b1ca5576cad8a3040" translate="yes" xml:space="preserve">
          <source>There were race conditions 1.x implementations of File::Path's &lt;code&gt;rmtree&lt;/code&gt; function (although sometimes patched depending on the OS distribution or platform). The 2.0 version contains code to avoid the problem mentioned in CVE-2002-0435.</source>
          <target state="translated">Были условия гонки 1.x реализации функции File :: Path &lt;code&gt;rmtree&lt;/code&gt; (хотя иногда исправлялись в зависимости от дистрибутива ОС или платформы). Версия 2.0 содержит код, позволяющий избежать проблемы, упомянутой в CVE-2002-0435.</target>
        </trans-unit>
        <trans-unit id="3380503a8405cff6d76d7964b6fbca011946199a" translate="yes" xml:space="preserve">
          <source>There were race conditions in the 1.x implementations of File::Path's &lt;code&gt;rmtree&lt;/code&gt; function (although sometimes patched depending on the OS distribution or platform). The 2.0 version contains code to avoid the problem mentioned in CVE-2002-0435.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c41744f80fbb19ebe5f5b692cb01709180e04c" translate="yes" xml:space="preserve">
          <source>There were two things you could do, knowing this: be paranoid or be pragmatic. The paranoid approach was to do as little as possible in your signal handler. Set an existing integer variable that already has a value, and return. This doesn't help you if you're in a slow system call, which will just restart. That means you have to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; to longjmp(3) out of the handler. Even this is a little cavalier for the true paranoiac, who avoids &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; in a handler because the system</source>
          <target state="translated">Зная это, вы могли сделать две вещи: быть параноиком или прагматиком. Параноидальный подход заключался в том, чтобы делать как можно меньше в обработчике сигналов. Установите существующую целочисленную переменную, которая уже имеет значение, и верните ее. Это не поможет вам, если вы используете медленный системный вызов, который просто перезапускается. Это означает, что вы должны &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; до longjmp (3) из обработчика. Даже это немного бесцеремонно для настоящего параноика, который избегает &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; в проводнике, потому что система</target>
        </trans-unit>
        <trans-unit id="be42f956d21114ebe79af50776e96bfca65bd05b" translate="yes" xml:space="preserve">
          <source>There were two things you could do, knowing this: be paranoid or be pragmatic. The paranoid approach was to do as little as possible in your signal handler. Set an existing integer variable that already has a value, and return. This doesn't help you if you're in a slow system call, which will just restart. That means you have to &lt;code&gt;die&lt;/code&gt; to longjmp(3) out of the handler. Even this is a little cavalier for the true paranoiac, who avoids &lt;code&gt;die&lt;/code&gt; in a handler because the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d8966c11e67db894b509268c4964e23520f68e" translate="yes" xml:space="preserve">
          <source>There will be less network overhead (and some efficiency in your program) if you specify either the udp or the icmp protocol. The tcp protocol will generate 2.5 times or more traffic for each ping than either udp or icmp. If many hosts are pinged frequently, you may wish to implement a small wait (e.g. 25ms or more) between each ping to avoid flooding your network with packets.</source>
          <target state="translated">Будет меньше накладных расходов на сеть (и некоторая эффективность в вашей программе),если вы укажете либо udp,либо протокол icmp.Протокол tcp будет генерировать в 2.5 раза или больше трафика для каждого пинга,чем udp или icmp.Если многие хосты часто проговаривают команды ping,Вы,возможно,захотите реализовать небольшое ожидание (например,25 мс и более)между каждым пингом,чтобы избежать переполнения Вашей сети пакетами.</target>
        </trans-unit>
        <trans-unit id="6b418e4f885e0ed1944b1a75c443618ba49e064f" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s More Than One Way To Do It, the Perl Motto. The notion that there can be more than one valid path to solving a programming problem in context. (This doesn&amp;rsquo;t mean that more ways are always better or that all possible paths are equally desirable&amp;mdash;just that there need not be One True Way.)</source>
          <target state="translated">Девиз Perl - больше, чем один способ сделать это. Представление о том, что может быть более одного действительного пути к решению проблемы программирования в контексте. (Это не означает, что больше способов всегда лучше или что все возможные пути одинаково желательны - просто не обязательно должен быть Один Истинный Путь.)</target>
        </trans-unit>
        <trans-unit id="f28bb8331230709c36ed738881be6c54310d8343" translate="yes" xml:space="preserve">
          <source>There's More Than One Way to Do It</source>
          <target state="translated">Есть больше,чем один способ сделать это.</target>
        </trans-unit>
        <trans-unit id="4490df2ff2d12a716aa36bd30350a041386f672a" translate="yes" xml:space="preserve">
          <source>There's a corresponding &lt;a href=&quot;#no-MODULE-VERSION-LIST&quot;&gt;&lt;code&gt;no&lt;/code&gt;&lt;/a&gt; declaration that unimports meanings imported by &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;, i.e., it calls &lt;code&gt;Module-&amp;gt;unimport(LIST)&lt;/code&gt; instead of &lt;a href=&quot;#import-LIST&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;. It behaves just as &lt;a href=&quot;#import-LIST&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; does with VERSION, an omitted or empty LIST, or no unimport method being found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d73bf3d5d8029a31c5c535e944915e019e3d9d2" translate="yes" xml:space="preserve">
          <source>There's a corresponding &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; declaration that unimports meanings imported by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, i.e., it calls &lt;code&gt;unimport Module LIST&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;. It behaves just as &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; does with VERSION, an omitted or empty LIST, or no unimport method being found.</source>
          <target state="translated">Соответствующее объявление &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; не импортирует значения, импортированные с помощью &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , т. &lt;code&gt;unimport Module LIST&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; . Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; с ВЕРСИЕЙ, с пропущенным или пустым СПИСОК, или с отсутствующим неимпортируемым методом.</target>
        </trans-unit>
        <trans-unit id="899206f410877415c07b1eae00900c686b6ba014" translate="yes" xml:space="preserve">
          <source>There's a corresponding &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; declaration that unimports meanings imported by &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, i.e., it calls &lt;code&gt;unimport Module LIST&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;. It behaves just as &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; does with VERSION, an omitted or empty LIST, or no unimport method being found.</source>
          <target state="translated">Соответствующее объявление &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; не импортирует значения, импортированные с помощью &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , т. &lt;code&gt;unimport Module LIST&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; . Он ведет себя так же, как &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; с ВЕРСИЕЙ, с пропущенным или пустым СПИСОК, или с отсутствующим неимпортируемым методом.</target>
        </trans-unit>
        <trans-unit id="5182f679e917b06933e3121044c80451fb98d666" translate="yes" xml:space="preserve">
          <source>There's a couple of useful ones to know about straight away. You wouldn't think we're using any libraries at all at the moment, but '&lt;b&gt;M&lt;/b&gt;' will show which modules are currently loaded, and their version number, while '&lt;b&gt;m&lt;/b&gt;' will show the methods, and '&lt;b&gt;S&lt;/b&gt;' shows all subroutines (by pattern) as shown below. '&lt;b&gt;V&lt;/b&gt;' and '&lt;b&gt;X&lt;/b&gt;' show variables in the program by package scope and can be constrained by pattern.</source>
          <target state="translated">Есть пара полезных, о которых стоит сразу узнать. Вы бы не подумали, что в данный момент мы используем какие-либо библиотеки, но &amp;laquo; &lt;b&gt;M&lt;/b&gt; &amp;raquo; покажет, какие модули в настоящее время загружены, и их номер версии, тогда как &amp;laquo; &lt;b&gt;m&lt;/b&gt; &amp;raquo; покажет методы, а &amp;laquo; &lt;b&gt;S&lt;/b&gt; &amp;raquo; покажет все подпрограммы. (по шаблону), как показано ниже. ' &lt;b&gt;V&lt;/b&gt; ' и ' &lt;b&gt;X&lt;/b&gt; ' показывают переменные в программе по объему пакета и могут быть ограничены шаблоном.</target>
        </trans-unit>
        <trans-unit id="4a1ef6c094aa8fbf90f65e6711f095cef82e3a69" translate="yes" xml:space="preserve">
          <source>There's a great deal of reuse possible for sharing of phrases between modules for related dialects, or for sharing of auxiliary functions between related languages. (By &quot;auxiliary functions&quot;, I mean functions that don't produce phrase-text, but which, say, return an answer to &quot;does this number require a plural noun after it?&quot;. Such auxiliary functions would be used in the internal logic of functions that actually do produce phrase-text.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ae2cf96b3321649a9e67b52ce3c6b5c29a8066" translate="yes" xml:space="preserve">
          <source>There's a lot more to networking than this, but this should get you started.</source>
          <target state="translated">В сети есть много чего другого,но это должно помочь тебе начать.</target>
        </trans-unit>
        <trans-unit id="7dfd5539590f938c8db0768ae08c09cb62cf9574" translate="yes" xml:space="preserve">
          <source>There's a lot to know about character sets, and text encodings. It's probably best to spend a full day learning all this, but the basics can be learned in minutes.</source>
          <target state="translated">О наборах символов и кодировках текста нужно знать очень много.Наверное,лучше провести полный день,изучая все это,но основы можно выучить за считанные минуты.</target>
        </trans-unit>
        <trans-unit id="99ae85d03f4b582c99ff96216db7d59e44f17f54" translate="yes" xml:space="preserve">
          <source>There's a problem with &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall(&amp;amp;SYS_pipe)&lt;/a&gt;&lt;/code&gt;: it returns the file number of the read end of the pipe it creates, but there is no way to retrieve the file number of the other end. You can avoid this problem by using &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Возникла проблема с &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall(&amp;amp;SYS_pipe)&lt;/a&gt;&lt;/code&gt; : он возвращает номер файла на прочитанном конце канала, который он создает, но нет способа получить номер файла на другом конце. Вы можете избежать этой проблемы, используя вместо этого &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66cd02292a787335ff912b7d35685e3ae9e8fbc4" translate="yes" xml:space="preserve">
          <source>There's a problem with &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall(&amp;amp;SYS_pipe)&lt;/a&gt;&lt;/code&gt;: it returns the file number of the read end of the pipe it creates, but there is no way to retrieve the file number of the other end. You can avoid this problem by using &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Возникла проблема с &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall(&amp;amp;SYS_pipe)&lt;/a&gt;&lt;/code&gt; : он возвращает номер файла на прочитанном конце канала, который он создает, но нет способа получить номер файла на другом конце. Вы можете избежать этой проблемы, используя вместо этого &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="124833fbba9a90584d7cbbd8c3f21d0d1ed7374a" translate="yes" xml:space="preserve">
          <source>There's a problem with &lt;code&gt;syscall(SYS_pipe())&lt;/code&gt;: it returns the file number of the read end of the pipe it creates, but there is no way to retrieve the file number of the other end. You can avoid this problem by using &lt;a href=&quot;#pipe-READHANDLE%2CWRITEHANDLE&quot;&gt;&lt;code&gt;pipe&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41e3a2378d95f98d33fb21414c6067f31a384cf" translate="yes" xml:space="preserve">
          <source>There's a slight complication under the hood of &lt;code&gt;Memoize&lt;/code&gt; : There are actually</source>
          <target state="translated">Под капотом &lt;code&gt;Memoize&lt;/code&gt; есть небольшая сложность : на самом деле</target>
        </trans-unit>
        <trans-unit id="e606f3dfb543a0539ef72dd37726579bac1b16a8" translate="yes" xml:space="preserve">
          <source>There's a slight complication under the hood of &lt;code&gt;Memoize&lt;/code&gt;: There are actually</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de903209b03670bb7672de0c3e9635cd117f5ca" translate="yes" xml:space="preserve">
          <source>There's a subtle trap lurking in the offing: Adding another field after the Short Message (in variable &lt;code&gt;$sm&lt;/code&gt; ) is all right when packing, but this cannot be unpacked naively:</source>
          <target state="translated">В ближайшем будущем таится тонкая ловушка: добавление еще одного поля после короткого сообщения (в переменной &lt;code&gt;$sm&lt;/code&gt; ) - это нормально при упаковке, но это не может быть распаковано наивно:</target>
        </trans-unit>
        <trans-unit id="f66d2e86f53d8e9dfa87109acbd15cc3b1bb44aa" translate="yes" xml:space="preserve">
          <source>There's a subtle trap lurking in the offing: Adding another field after the Short Message (in variable &lt;code&gt;$sm&lt;/code&gt;) is all right when packing, but this cannot be unpacked naively:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5136f0522d5206778ac4f88d48f4c827076f1a46" translate="yes" xml:space="preserve">
          <source>There's a wiki dedicated to the Test Anything Protocol:</source>
          <target state="translated">Есть вики,посвященная Протоколу Испытаний:</target>
        </trans-unit>
        <trans-unit id="3b112374a474f8a64038b7df632984baece37394" translate="yes" xml:space="preserve">
          <source>There's also</source>
          <target state="translated">Есть ещё</target>
        </trans-unit>
        <trans-unit id="40aa0d88671271215389ee01ca5270e38fa18dab" translate="yes" xml:space="preserve">
          <source>There's also a &lt;a href=&quot;File::Tail&quot;&gt;File::Tail&lt;/a&gt; module from CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a726895b66eba4d8724a2292f078a4d2648322" translate="yes" xml:space="preserve">
          <source>There's also a &lt;a href=&quot;http://search.cpan.org/perldoc/File::Tail&quot;&gt;File::Tail&lt;/a&gt; module from CPAN.</source>
          <target state="translated">Также есть модуль &lt;a href=&quot;http://search.cpan.org/perldoc/File::Tail&quot;&gt;File :: Tail&lt;/a&gt; от CPAN.</target>
        </trans-unit>
        <trans-unit id="035e86078ae3280a54d8fc426b353c9ce230b2ad" translate="yes" xml:space="preserve">
          <source>There's also a negated version of it:</source>
          <target state="translated">Есть также отрицательная версия:</target>
        </trans-unit>
        <trans-unit id="194f92c1842e4ee102fc7a284b9e315ab368c04c" translate="yes" xml:space="preserve">
          <source>There's also a negated version, for the same reason we have &lt;code&gt;unless&lt;/code&gt; :</source>
          <target state="translated">По той же причине есть и отрицательная версия, &lt;code&gt;unless&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e0601768e9aaa457e7e7ef47834fc2f32a22f940" translate="yes" xml:space="preserve">
          <source>There's also a negated version, for the same reason we have &lt;code&gt;unless&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce23f5592e874ac51b717997ee3d4abcaf17d1eb" translate="yes" xml:space="preserve">
          <source>There's an &lt;code&gt;unmemoize&lt;/code&gt; function that you can import if you want to. Why would you want to? Here's an example: Suppose you have your cache tied to a DBM file, and you want to make sure that the cache is written out to disk if someone interrupts the program. If the program exits normally, this will happen anyway, but if someone types control-C or something then the program will terminate immediately without synchronizing the database. So what you can do instead is</source>
          <target state="translated">Есть функция &lt;code&gt;unmemoize&lt;/code&gt; , которую вы можете импортировать, если хотите. Зачем тебе это нужно? Вот пример: предположим, что ваш кеш привязан к файлу DBM, и вы хотите убедиться, что кеш записывается на диск, если кто-то прерывает выполнение программы. Если программа завершается нормально, это все равно произойдет, но если кто-то наберет control-C или что-то в этом роде, программа немедленно завершится без синхронизации базы данных. Так что вы можете сделать вместо этого</target>
        </trans-unit>
        <trans-unit id="08ec3c4ec2591dd761c5a485e08fcf45d215a5be" translate="yes" xml:space="preserve">
          <source>There's an effort going on to document the internal functions and automatically produce reference manuals from them -- &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; is one such manual which details all the functions which are available to XS writers. &lt;a href=&quot;perlintern&quot;&gt;perlintern&lt;/a&gt; is the autogenerated manual for the functions which are not part of the API and are supposedly for internal use only.</source>
          <target state="translated">&lt;a href=&quot;perlapi&quot;&gt;Предпринимаются&lt;/a&gt; попытки задокументировать внутренние функции и автоматически создать на их основе справочные руководства - perlapi - одно из таких руководств, в котором подробно описаны все функции, доступные для разработчиков XS. &lt;a href=&quot;perlintern&quot;&gt;perlintern&lt;/a&gt; - это автоматически созданное руководство для функций, которые не являются частью API и предназначены только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="b109c22c8125d5fbc051e5882994774c0628f7aa" translate="yes" xml:space="preserve">
          <source>There's an example of this in &lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;). First, you put the terminal into &quot;no echo&quot; mode, then just read the password normally. You may do this with an old-style &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt; function, POSIX terminal control (see &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; or its documentation the Camel Book), or a call to the &lt;b&gt;stty&lt;/b&gt; program, with varying degrees of portability.</source>
          <target state="translated">Пример этого есть в &lt;a href=&quot;functions/crypt&quot;&gt;крипте&lt;/a&gt; ). Сначала вы переводите терминал в режим &amp;laquo;без эха&amp;raquo;, а затем просто читаете пароль в обычном режиме. Вы можете сделать это с помощью функции &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt; старого стиля , управления терминалом POSIX (см. &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; или его документацию Camel Book) или вызова программы &lt;b&gt;stty&lt;/b&gt; с различной степенью переносимости.</target>
        </trans-unit>
        <trans-unit id="e33a4a8215c89473473d7891ce0340be047dd1e2" translate="yes" xml:space="preserve">
          <source>There's an example of this in &lt;a href=&quot;perlfunc#crypt&quot;&gt;&quot;crypt&quot; in perlfunc&lt;/a&gt;. First, you put the terminal into &quot;no echo&quot; mode, then just read the password normally. You may do this with an old-style &lt;code&gt;ioctl()&lt;/code&gt; function, POSIX terminal control (see &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; or its documentation the Camel Book), or a call to the &lt;b&gt;stty&lt;/b&gt; program, with varying degrees of portability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee734c8b4d4a5b72b07450e993a31efdfcc81d2" translate="yes" xml:space="preserve">
          <source>There's an extraordinary number of people out there who don't appear to know anything about using the perl debugger, though they use the language every day. This is for them.</source>
          <target state="translated">Есть необыкновенное количество людей,которые,кажется,ничего не знают об использовании отладчика perl,хотя они используют язык каждый день.Это для них.</target>
        </trans-unit>
        <trans-unit id="36e675dcb566e351efbc0e3f85ec7104c90a083d" translate="yes" xml:space="preserve">
          <source>There's currently only one class that has a stable interface - CPAN::Shell. All commands that are available in the CPAN shell are methods of the class CPAN::Shell. The arguments on the commandline are passed as arguments to the method.</source>
          <target state="translated">В настоящее время только один класс имеет стабильный интерфейс-CPAN::Shell.Все команды,доступные в CPAN оболочке,являются методами класса CPAN::Shell.Аргументы в командной строке передаются в качестве аргументов этому методу.</target>
        </trans-unit>
        <trans-unit id="f60d62cdc295d6cbdfb5f2a35e55c4e958719c10" translate="yes" xml:space="preserve">
          <source>There's even less need to distinguish between EBCDIC code pages, but to do so try looking at one or more of the characters that differ between them.</source>
          <target state="translated">Еще меньше нужно различать кодовые страницы EBCDIC,но для этого попробуйте посмотреть на один или несколько символов,которые различаются между ними.</target>
        </trans-unit>
        <trans-unit id="241fd51f25450a5ab0b7ec2c19699d2410027de0" translate="yes" xml:space="preserve">
          <source>There's no builtin way to do this, but &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; has a couple of techniques to make it possible for the intrepid hacker.</source>
          <target state="translated">&lt;a href=&quot;perlform&quot;&gt;Встроенного&lt;/a&gt; способа сделать это нет, но в perlform есть несколько приемов, которые сделают это возможным для бесстрашного хакера.</target>
        </trans-unit>
        <trans-unit id="5ace2a9bc7f6a90948438c072e0ce5f8cdc2b9bc" translate="yes" xml:space="preserve">
          <source>There's no feedback from this, but you can see what breakpoints are set by using the list 'L' command:</source>
          <target state="translated">Обратной связи нет,но вы можете посмотреть,какие точки останова установлены с помощью команды list 'L':</target>
        </trans-unit>
        <trans-unit id="f521ff0638ee964aa0ea31d64e9248f45119c41c" translate="yes" xml:space="preserve">
          <source>There's no solution for this problem other than making the custom engine understand a construct like &lt;code&gt;(?:)&lt;/code&gt;.</source>
          <target state="translated">У этой проблемы нет другого решения, кроме как заставить пользовательский движок понимать такую ​​конструкцию, как &lt;code&gt;(?:)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f42438ddafc8a1bac998273822622081c6567570" translate="yes" xml:space="preserve">
          <source>There's no strong security layer in CPAN.pm. CPAN.pm helps you to install foreign, unmasked, unsigned code on your machine. We compare to a checksum that comes from the net just as the distribution file itself. But we try to make it easy to add security on demand:</source>
          <target state="translated">В CPAN.pm нет сильного уровня безопасности.CPAN.pm помогает вам установить на вашу машину иностранный,не маскированный,неподписанный код.Мы сравниваем с контрольной суммой,которая приходит из сети так же,как и сам файл дистрибутива.Но мы стараемся упростить добавление безопасности по требованию:</target>
        </trans-unit>
        <trans-unit id="794fc83a38998696363c5b95bfbda5c120c0de13" translate="yes" xml:space="preserve">
          <source>There's no way to tell if a &lt;code&gt;char *&lt;/code&gt; or &lt;code&gt;U8 *&lt;/code&gt; string is UTF-8 or not. But you can tell if an SV is to be treated as UTF-8 by calling &lt;code&gt;DO_UTF8&lt;/code&gt; on it, after stringifying it with &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. And, you can tell if SV is actually UTF-8 (even if it is not to be treated as such) by looking at its &lt;code&gt;SvUTF8&lt;/code&gt; flag (again after stringifying it). Don't forget to set the flag if something should be UTF-8. Treat the flag as part of the PV, even though it's not -- if you pass on the PV to somewhere, pass on the flag too.</source>
          <target state="translated">Невозможно определить, является ли строка &lt;code&gt;char *&lt;/code&gt; или &lt;code&gt;U8 *&lt;/code&gt; UTF-8 или нет. Но вы можете определить, должен ли SV обрабатываться как UTF-8, вызвав на нем &lt;code&gt;DO_UTF8&lt;/code&gt; , после преобразования его в &lt;code&gt;SvPV&lt;/code&gt; с помощью SvPV или аналогичного макроса. И вы можете определить, является ли SV на самом деле UTF-8 (даже если он не должен рассматриваться как таковой), посмотрев на его флаг &lt;code&gt;SvUTF8&lt;/code&gt; (снова после его строкового преобразования ). Не забудьте установить флаг, если что-то должно быть UTF-8. Считайте флаг частью PV, даже если это не так - если вы передадите PV куда-то, передайте и флаг.</target>
        </trans-unit>
        <trans-unit id="dcc25cfc8a3ec732d1d2283e554b506992b75eb5" translate="yes" xml:space="preserve">
          <source>There's not a single way to run code in the background so you don't have to wait for it to finish before your program moves on to other tasks. Process management depends on your particular operating system, and many of the techniques are covered in &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;.</source>
          <target state="translated">Нет единого способа запустить код в фоновом режиме, поэтому вам не нужно ждать его завершения, прежде чем ваша программа перейдет к другим задачам. Управление процессами зависит от вашей конкретной операционной системы, и многие методы описаны в &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2aa5e3dbb927bd52349be7be623e623e64f5bf0" translate="yes" xml:space="preserve">
          <source>There's now some new C code that's been added to the .xs file. The purpose of the &lt;code&gt;constant&lt;/code&gt; routine is to make the values that are #define'd in the header file accessible by the Perl script (by calling either &lt;code&gt;TESTVAL&lt;/code&gt; or &lt;code&gt;&amp;amp;Mytest2::TESTVAL&lt;/code&gt; ). There's also some XS code to allow calls to the &lt;code&gt;constant&lt;/code&gt; routine.</source>
          <target state="translated">Теперь в файл .xs добавлен новый код C. Цель подпрограммы &lt;code&gt;constant&lt;/code&gt; - сделать значения, которые определены # в заголовочном файле, доступными для сценария Perl (путем вызова либо &lt;code&gt;TESTVAL&lt;/code&gt; , либо &lt;code&gt;&amp;amp;Mytest2::TESTVAL&lt;/code&gt; ). Также есть код XS, позволяющий вызывать &lt;code&gt;constant&lt;/code&gt; подпрограмму.</target>
        </trans-unit>
        <trans-unit id="31087344a4d97cb3b80b7f78b63485fff944c0b5" translate="yes" xml:space="preserve">
          <source>There's now some new C code that's been added to the .xs file. The purpose of the &lt;code&gt;constant&lt;/code&gt; routine is to make the values that are #define'd in the header file accessible by the Perl script (by calling either &lt;code&gt;TESTVAL&lt;/code&gt; or &lt;code&gt;&amp;amp;Mytest2::TESTVAL&lt;/code&gt;). There's also some XS code to allow calls to the &lt;code&gt;constant&lt;/code&gt; routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ac8386164e4284b824a87f18c211196212c066" translate="yes" xml:space="preserve">
          <source>There's one fine point I skipped. Line 5 is unnecessary, and we can get rid of it.</source>
          <target state="translated">Есть одно замечательное замечание,которое я пропустил.Пятая линия ненужна,и мы можем от нее избавиться.</target>
        </trans-unit>
        <trans-unit id="f039a4fa9d9f10c8752271acf6c5252496665e47" translate="yes" xml:space="preserve">
          <source>There's one more item to add to this list. Do &lt;b&gt;not&lt;/b&gt; export variable names. Just because &lt;code&gt;Exporter&lt;/code&gt; lets you do that, it does not mean you should.</source>
          <target state="translated">Есть еще один пункт, который нужно добавить в этот список. Вы &lt;b&gt;не&lt;/b&gt; экспортировать имена переменных. То, что &lt;code&gt;Exporter&lt;/code&gt; позволяет вам это делать, не означает, что вы должны это делать.</target>
        </trans-unit>
        <trans-unit id="ae8f51d8071cfe43c76f4dc0a54e230b2757479f" translate="yes" xml:space="preserve">
          <source>There's plenty more to Maketext than described above -- for example, there's the details of how language tags (&quot;en-US&quot;, &quot;i-pwn&quot;, &quot;fi&quot;, etc.) or locale IDs (&quot;en_US&quot;) interact with actual module naming (&quot;BogoQuery/Locale/en_us.pm&quot;), and what magic can ensue; there's the details of how to record (and possibly negotiate) what character encoding Maketext will return text in (UTF8? Latin-1? KOI8?). There's the interesting fact that Maketext is for localization, but nowhere actually has a &quot;&lt;code&gt;use locale;&lt;/code&gt;&quot; anywhere in it. For the curious, there's the somewhat frightening details of how I actually implement something like data inheritance so that searches across modules' %Lexicon hashes can parallel how Perl implements method inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3157833531a4041a2d11a3ede90a818b20eec8a5" translate="yes" xml:space="preserve">
          <source>There's three possible options: arm-linux-androideabi for ARM, mipsel-linux-android for MIPS, and simply x86 for x86. As of 2014, most Android devices run on ARM, so that is generally a safe bet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23be60d3d8e40781087cd39d472decaae39f70d3" translate="yes" xml:space="preserve">
          <source>There, &quot;=shazbot&quot; will be parsed as a Pod command &quot;shazbot&quot;, not as a data paragraph &quot;=shazbot\n&quot;. However, you can express a data paragraph consisting of &quot;=shazbot\n&quot; using this code:</source>
          <target state="translated">Там &quot;=shazbot&quot; будет разобрано как команда Pod &quot;shazbot&quot;,а не как параграф данных &quot;=shazbot\n&quot;.Однако с помощью этого кода можно выразить абзац данных,состоящий из &quot;=shazbot\n&quot;:</target>
        </trans-unit>
        <trans-unit id="d934ecae0b30d1837eb15a99e36faf1a189e093b" translate="yes" xml:space="preserve">
          <source>There, the &quot;=begin html&quot;...&quot;=end html&quot; region is nested inside the larger &quot;=begin :biblio&quot;...&quot;=end :biblio&quot; region. Note that the content of the &quot;=begin html&quot;...&quot;=end html&quot; region is data paragraph(s), because the immediately containing region's identifier (&quot;html&quot;)</source>
          <target state="translated">Там область &quot;=begin html&quot;...&quot;=end html&quot; вложена в большую область &quot;=begin :biblio&quot;...&quot;=end :biblio&quot;.Обратите внимание,что содержимое области &quot;=begin html&quot;...&quot;=end html&quot; является параграфом(ами)данных,потому что непосредственно содержащий идентификатор области (&quot;html&quot;)</target>
        </trans-unit>
        <trans-unit id="4c11e16e3b4c4d1c6c6291b739425f3d103ebc32" translate="yes" xml:space="preserve">
          <source>Therefor, we recommend to only use &lt;code&gt;lynx&lt;/code&gt; as a last resort. This is why it is at the back of our list of methods to try as well.</source>
          <target state="translated">Поэтому мы рекомендуем использовать &lt;code&gt;lynx&lt;/code&gt; только в крайнем случае. Вот почему он также находится в конце нашего списка методов, которые можно попробовать.</target>
        </trans-unit>
        <trans-unit id="22f5648477726ba3de08027c1e14282ca2d62678" translate="yes" xml:space="preserve">
          <source>Therefore it is best to avoid &lt;code&gt;$Carp::CarpLevel&lt;/code&gt; . Instead use &lt;code&gt;@CARP_NOT&lt;/code&gt; , &lt;code&gt;%Carp::Internal&lt;/code&gt; and &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</source>
          <target state="translated">Поэтому лучше избегать &lt;code&gt;$Carp::CarpLevel&lt;/code&gt; . Вместо этого используйте &lt;code&gt;@CARP_NOT&lt;/code&gt; , &lt;code&gt;%Carp::Internal&lt;/code&gt; и &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51f60bccfa776ffe69d8f053cbc128c1c25657ab" translate="yes" xml:space="preserve">
          <source>Therefore it is best to avoid &lt;code&gt;$Carp::CarpLevel&lt;/code&gt;. Instead use &lt;code&gt;@CARP_NOT&lt;/code&gt;, &lt;code&gt;%Carp::Internal&lt;/code&gt; and &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee230bfa80dc9a35487630711b69781b4de0480c" translate="yes" xml:space="preserve">
          <source>Therefore modules that can install from CPAN to the core library must make sure not to call this pragma when they have done so. Generally this means that the exact logic from the installer must be mirrored inside the module. E.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0e80030071251142bc856e7654aae9ae473e69" translate="yes" xml:space="preserve">
          <source>Therefore we can use the &lt;code&gt;O_FILES&lt;/code&gt; variable to tell MakeMaker to use these objects into the shared library.</source>
          <target state="translated">Поэтому мы можем использовать переменную &lt;code&gt;O_FILES&lt;/code&gt; , чтобы сообщить MakeMaker о необходимости использования этих объектов в общей библиотеке.</target>
        </trans-unit>
        <trans-unit id="bc549460f9ec0f5ba049505f7c5226ae9e2f8140" translate="yes" xml:space="preserve">
          <source>Therefore, if you make changes to $ENV{TZ} from inside a thread other than the main thread then those changes will not be seen by strftime if you subsequently call that with the %Z formatting code. You must change $ENV{TZ} in the main thread to have the desired effect in this case (and you must also call _tzset() in the main thread to register the environment change).</source>
          <target state="translated">Поэтому,если вы внесете изменения в $ENV{TZ}из потока,отличного от основного,то эти изменения не будут видны по strftime,если вы впоследствии вызовете их с помощью кода форматирования %Z.Для получения желаемого эффекта в этом случае необходимо изменить $ENV{TZ}в главном потоке (а также вызвать _tzset()в главном потоке,чтобы зарегистрировать изменение среды).</target>
        </trans-unit>
        <trans-unit id="a9f8fba915c890e8c346b81a259121ea682217ff" translate="yes" xml:space="preserve">
          <source>Therefore, if you want your scripts to be able to run on all versions of Perl, you should call &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; explicitly and not rely on automatic closing.</source>
          <target state="translated">Следовательно, если вы хотите, чтобы ваши скрипты могли работать на всех версиях Perl, вы должны явно вызывать &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; и не полагаться на автоматическое закрытие.</target>
        </trans-unit>
        <trans-unit id="954446d1274139a67133d250b76f105e02594120" translate="yes" xml:space="preserve">
          <source>Therefore, if you want your scripts to be able to run on all versions of Perl, you should call &lt;code&gt;close&lt;/code&gt; explicitly and not rely on automatic closing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60bd02288d8270eaef5b4fd58dd4835333cea91" translate="yes" xml:space="preserve">
          <source>Therefore, populate such variables &lt;b&gt;after&lt;/b&gt; declaring them as shared. (Scalar and scalar refs are not affected by this problem.)</source>
          <target state="translated">Поэтому заполняйте такие переменные &lt;b&gt;после&lt;/b&gt; объявления их как общих. (Скалярные и скалярные ссылки не затрагиваются этой проблемой.)</target>
        </trans-unit>
        <trans-unit id="fd4c5f1975f02e1f013464b5926b49a349d976cd" translate="yes" xml:space="preserve">
          <source>Therefore, recursion should normally be avoided, but is nonetheless supported.</source>
          <target state="translated">Поэтому рекурсии,как правило,следует избегать,но,тем не менее,она поддерживается.</target>
        </trans-unit>
        <trans-unit id="db068f38c67a6942c06b6242bd31cfce066e66c2" translate="yes" xml:space="preserve">
          <source>Therefore, when both -f and -t are omitted, &lt;b&gt;piconv&lt;/b&gt; just acts like &lt;b&gt;cat&lt;/b&gt;.</source>
          <target state="translated">Следовательно, если опущены оба параметра -f и -t, &lt;b&gt;piconv&lt;/b&gt; действует как &lt;b&gt;cat&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="2f61899aa2182fe38363f4a728d368f7dbd80080" translate="yes" xml:space="preserve">
          <source>Therefore, when serializing hooks are involved,</source>
          <target state="translated">Поэтому,когда сериализуются крючки,</target>
        </trans-unit>
        <trans-unit id="083d92ff42dd743db0e3ca76319637c407df0e2d" translate="yes" xml:space="preserve">
          <source>Therefore, you should bless objects before sharing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c563bb79b9bbcc9436e0f964c49bd1fc0638d285" translate="yes" xml:space="preserve">
          <source>These #vars represent opcode properties that you may want as part of your rendering. The '#' is intended as a private sigil; a #var's value is interpolated into the style-line, much like &quot;read $this&quot;.</source>
          <target state="translated">Эти #vars представляют свойства опкода,которые могут понадобиться вам как часть вашего рендеринга.Значение '#' задумано как частная символика;значение #var интерполировано в строку стиля,так же как и &quot;читать $this&quot;.</target>
        </trans-unit>
        <trans-unit id="0e7355ac11ba52ff51227da22556bcbc5b08758c" translate="yes" xml:space="preserve">
          <source>These ID's are unique enough for most purposes. For identical ids to be generated you must have 2 processes with the same PID generate IDs at the same time with the same current state of the incrementing integer. This is a perfectly reasonable thing to expect to happen across multiple machines, but is quite unlikely to happen on one machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb65d165e3bae5f5ca82f785cf62dfbdc24692e" translate="yes" xml:space="preserve">
          <source>These JSON atoms become &lt;code&gt;JSON::PP::true&lt;/code&gt; and &lt;code&gt;JSON::PP::false&lt;/code&gt;, respectively. They are overloaded to act almost exactly like the numbers &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;. You can check whether a scalar is a JSON boolean by using the &lt;code&gt;JSON::PP::is_bool&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f188e4230a9960392a0f6434bcd9cdb687b2105" translate="yes" xml:space="preserve">
          <source>These actually run the tests, analogous to the functions in Test::More.</source>
          <target state="translated">Они фактически выполняют тесты,аналогично функциям в Test::More.</target>
        </trans-unit>
        <trans-unit id="47b609b8bdbe47393836decca9fbf56107eb37fe" translate="yes" xml:space="preserve">
          <source>These all match a single codepoint with the given property. Use &lt;code&gt;\P&lt;/code&gt; in place of &lt;code&gt;\p&lt;/code&gt; to match one codepoint lacking that property.</source>
          <target state="translated">Все они соответствуют одной кодовой точке с данным свойством. Используйте &lt;code&gt;\P&lt;/code&gt; вместо &lt;code&gt;\p&lt;/code&gt; чтобы соответствовать одной кодовой точке, не имеющей этого свойства.</target>
        </trans-unit>
        <trans-unit id="14b0e821748bdb374700b2c0b377f04dafebe4c2" translate="yes" xml:space="preserve">
          <source>These all might have problems handling infinity right.</source>
          <target state="translated">У них у всех могут быть проблемы с бесконечностью.</target>
        </trans-unit>
        <trans-unit id="f193401280223b6d90ef40113a3483800172634b" translate="yes" xml:space="preserve">
          <source>These are Locale::Maketext's assumptions about the class hierarchy formed by all your language classes:</source>
          <target state="translated">Это Locale::Предположения Мактекста о классовой иерархии,формируемой всеми вашими языковыми классами:</target>
        </trans-unit>
        <trans-unit id="7d93f149b189abdf70833601535a585584795222" translate="yes" xml:space="preserve">
          <source>These are Perl bindings for the Gtk toolkit ( &lt;a href=&quot;http://www.gtk.org&quot;&gt;http://www.gtk.org&lt;/a&gt; ). The interface changed significantly between versions 1 and 2 so they have separate Perl modules. It runs under Unix, Win32 and Mac OS X (currently it requires an X server on Mac OS, but a 'native' port is underway), and the widgets look the same on every platform: i.e., they don't match the native widgets. As with Wx, the Perl bindings follow the C API closely, and the documentation requires you to read the C documentation to understand it.</source>
          <target state="translated">Это привязки Perl для набора инструментов Gtk ( &lt;a href=&quot;http://www.gtk.org&quot;&gt;http://www.gtk.org&lt;/a&gt; ). Интерфейс значительно изменился между версиями 1 и 2, поэтому они имеют отдельные модули Perl. Он работает под Unix, Win32 и Mac OS X (в настоящее время для него требуется X-сервер в Mac OS, но &amp;laquo;родной&amp;raquo; порт в стадии разработки), и виджеты выглядят одинаково на каждой платформе: т. Е. Они не соответствуют нативному. виджеты. Как и в случае с Wx, привязки Perl тесно связаны с API C, и документация требует, чтобы вы прочитали документацию C, чтобы понять это.</target>
        </trans-unit>
        <trans-unit id="06cca08d46609adb849cad691c3d195ff57274e9" translate="yes" xml:space="preserve">
          <source>These are a few notes describing features peculiar to Plan 9 Perl. As such, it is not intended to be a replacement for the rest of the Perl 5 documentation (which is both copious and excellent). If you have any questions to which you can't find answers in these man pages, contact Luther Huffman at lutherh@stratcom.com and we'll try to answer them.</source>
          <target state="translated">Это несколько примечаний,описывающих особенности,характерные для Perl плана 9.Как таковая,она не предназначена для замены остальной части документации Perl 5 (которая является одновременно и обширной,и превосходной).Если у вас есть вопросы,ответы на которые вы не можете найти на этих страницах,свяжитесь с Лютером Хаффманом (Luther Huffman)по адресу lutherh@stratcom.com,и мы постараемся на них ответить.</target>
        </trans-unit>
        <trans-unit id="035e487505e2bd7d2a574e14eebe3b30a69fa1a9" translate="yes" xml:space="preserve">
          <source>These are a hotchpotch of opcodes still waiting to be considered</source>
          <target state="translated">Это хотчпотч опкодов,все еще ждущих рассмотрения.</target>
        </trans-unit>
        <trans-unit id="7deedf4836f35aa67f0c08100f5d4987addf81e4" translate="yes" xml:space="preserve">
          <source>These are a record of the hubs an event passes through. Most recent hub is the first one in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab597ea19704a4092bef6ea8610d0145fc3acd27" translate="yes" xml:space="preserve">
          <source>These are all &quot;getters&quot; which return the data set for these attributes during object construction.</source>
          <target state="translated">Это все &quot;геттеры&quot;,которые возвращают набор данных для этих атрибутов при построении объектов.</target>
        </trans-unit>
        <trans-unit id="99670b79a346a2bf9e4cb33dd6b8ba8a01dd0f06" translate="yes" xml:space="preserve">
          <source>These are all imported from &lt;a href=&quot;Test2::Util::Facets2Legacy&quot;&gt;Test2::Util::Facets2Legacy&lt;/a&gt;, see that module or &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt; for documentation on what they do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ad141ea95625d5f83dc60a511981417685e463" translate="yes" xml:space="preserve">
          <source>These are also the typical steps involved in writing a computer program. This makes perfect sense, because regular expressions are essentially programs written in a little computer language that specifies patterns.</source>
          <target state="translated">Это также типичные шаги,связанные с написанием компьютерной программы.Это имеет смысл,потому что регулярные выражения-это,по сути,программы,написанные на маленьком компьютерном языке,который задает шаблоны.</target>
        </trans-unit>
        <trans-unit id="c614a56da53c8268e03927a0382855aa589c9ffe" translate="yes" xml:space="preserve">
          <source>These are alternate syntaxes for &lt;code&gt;decode('utf8', ...)&lt;/code&gt; and &lt;code&gt;encode('utf8',
...)&lt;/code&gt; .</source>
          <target state="translated">Это альтернативные синтаксисы для &lt;code&gt;decode('utf8', ...)&lt;/code&gt; и &lt;code&gt;encode('utf8', ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c836f0954439914f97915361085c611a4a6522e" translate="yes" xml:space="preserve">
          <source>These are alternate syntaxes for &lt;code&gt;decode('utf8', ...)&lt;/code&gt; and &lt;code&gt;encode('utf8', ...)&lt;/code&gt;. Do not use these functions for data exchange. Instead use &lt;code&gt;decode('UTF-8', ...)&lt;/code&gt; and &lt;code&gt;encode('UTF-8', ...)&lt;/code&gt;; see &lt;a href=&quot;#What%27s-the-difference-between-UTF-8-and-utf8%3F&quot;&gt;&quot;What's the difference between UTF-8 and utf8?&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a504c2130962ba4555e63c517df7cfb6c3415a56" translate="yes" xml:space="preserve">
          <source>These are based on what command.com does on Win98. They may be wrong for other Windows shells, I don't know.</source>
          <target state="translated">Они основаны на том,что command.com делает на Win98.Они могут быть неправильными для других оболочек Windows,я не знаю.</target>
        </trans-unit>
        <trans-unit id="2c07d55f7a2a925e22fec82104bd39d3cabc4301" translate="yes" xml:space="preserve">
          <source>These are called mid-endian, middle-endian, mixed-endian, or just weird.</source>
          <target state="translated">Они называются средне-endian,средне-endian,смешанные-endian,или просто странные.</target>
        </trans-unit>
        <trans-unit id="e533ef7489d17854e05259c84118c5f3b5f226af" translate="yes" xml:space="preserve">
          <source>These are called whenever a context is initialized. That means when a new instance is created. These hooks are &lt;b&gt;NOT&lt;/b&gt; called every time something requests a context, just when a new one is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e21c37ef5bc936dc62910a2c3001a6fca894bc" translate="yes" xml:space="preserve">
          <source>These are called whenever a context is released. That means when the last reference to the instance is about to be destroyed. These hooks are &lt;b&gt;NOT&lt;/b&gt; called every time &lt;code&gt;$ctx-&amp;gt;release&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9105b34a20a7fdd4e6d997e3a1e1ad31f3f321" translate="yes" xml:space="preserve">
          <source>These are covered in the following section.</source>
          <target state="translated">Эти вопросы рассматриваются в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="7333c3db6eebc965b9acc79a29ea8b8aa13ff1d3" translate="yes" xml:space="preserve">
          <source>These are derived by using &lt;code&gt;strftime()&lt;/code&gt;, and not all versions of that function know about them. &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned for these on such systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543fcf9df34b75f159b226a9706c32a67f612f3d" translate="yes" xml:space="preserve">
          <source>These are effectively no-ops.</source>
          <target state="translated">Это,по сути,безошибочно.</target>
        </trans-unit>
        <trans-unit id="f6dbfbbee534ca87c61eabe600b034f42390dde5" translate="yes" xml:space="preserve">
          <source>These are equivalent</source>
          <target state="translated">Они эквивалентны</target>
        </trans-unit>
        <trans-unit id="2c34193d065093cc77699a0d9ca713a7565b5a4e" translate="yes" xml:space="preserve">
          <source>These are fetched from one or more mirrored CPAN (Comprehensive Perl Archive Network) sites and unpacked in a dedicated directory.</source>
          <target state="translated">Они извлекаются с одного или нескольких зеркальных сайтов CPAN (Comprehensive Perl Archive Network)и распаковываются в специальную директорию.</target>
        </trans-unit>
        <trans-unit id="1218c4eafb2ac24b7f5a6bfc47e38d53cda6dbb8" translate="yes" xml:space="preserve">
          <source>These are fprintf()/vfprintf() equivalents.</source>
          <target state="translated">Это эквиваленты fprintf()/vfprintf().</target>
        </trans-unit>
        <trans-unit id="c9080846b04ed2aaef61ea34f53f7101d2c5f347" translate="yes" xml:space="preserve">
          <source>These are functions for searching through directory trees doing work on each file found similar to the Unix</source>
          <target state="translated">Это функции для поиска по деревьям каталогов,выполняющие работу над каждым найденным файлом,похожим на Unix</target>
        </trans-unit>
        <trans-unit id="82d3c39fd0ecabf1c8dc2de9284d7be1c98f1d46" translate="yes" xml:space="preserve">
          <source>These are general guidelines for how to write POD documentation for Perl scripts and modules, based on general guidelines for writing good UNIX man pages. All of these guidelines are, of course, optional, but following them will make your documentation more consistent with other documentation on the system.</source>
          <target state="translated">Это общие рекомендации по написанию POD документации для Perl скриптов и модулей,основанные на общих рекомендациях по написанию хороших UNIX man-страниц.Все эти рекомендации,конечно,необязательны,но их соблюдение сделает вашу документацию более совместимой с другой документацией в системе.</target>
        </trans-unit>
        <trans-unit id="a253bda8befb626a9c36c82d1823fdc871bc54a9" translate="yes" xml:space="preserve">
          <source>These are hooks that allow you to add custom behavior to actions taken by Test2 and tools built on top of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad0e81d2d1dfbeb7b354f138de6b73ae95d9158" translate="yes" xml:space="preserve">
          <source>These are instructions for building Perl from source. This version of Perl requires the dynamic linking support that is found in OpenVOS Release 17.1 and thus is not supported on OpenVOS Release 17.0 or earlier releases.</source>
          <target state="translated">Это инструкция по созданию Perl из источника.Эта версия Perl требует поддержки динамической компоновки,которая есть в OpenVOS Release 17.1 и,таким образом,не поддерживается в OpenVOS Release 17.0 или более ранних релизах.</target>
        </trans-unit>
        <trans-unit id="c8591b5e35cdacaa99ac7aebf4d9655f41e44d08" translate="yes" xml:space="preserve">
          <source>These are instructions for building Perl under DOS (or w??), using DJGPP v2.03 or later. Under w95 long filenames are supported.</source>
          <target state="translated">Это инструкция по созданию Perl под DOS (или w??),с использованием DJGPP v2.03 или более поздней версии.Под w95 поддерживаются длинные имена файлов.</target>
        </trans-unit>
        <trans-unit id="1ebba6a1db0c9a0e274e92574c949eaf7a4b8fb7" translate="yes" xml:space="preserve">
          <source>These are instructions for building Perl under Windows 2000 and later.</source>
          <target state="translated">Это инструкции по созданию Perl под Windows 2000 и более поздними версиями.</target>
        </trans-unit>
        <trans-unit id="56039c5fbea93b2739212ecaf27c30cc3edfb9c5" translate="yes" xml:space="preserve">
          <source>These are intended to be services performed by the clients of this API.</source>
          <target state="translated">Это должны быть сервисы,выполняемые клиентами данного API.</target>
        </trans-unit>
        <trans-unit id="6d5e58ad94dd8e12f40343c4fe00cb855a20e455" translate="yes" xml:space="preserve">
          <source>These are just the most common definitions of &lt;code&gt;\n&lt;/code&gt; and &lt;code&gt;\r&lt;/code&gt; in Perl. There may well be others. For example, on an EBCDIC implementation such as z/OS (OS/390) or OS/400 (using the ILE, the PASE is ASCII-based) the above material is similar to &quot;Unix&quot; but the code numbers change:</source>
          <target state="translated">Это лишь самые распространенные определения &lt;code&gt;\n&lt;/code&gt; и &lt;code&gt;\r&lt;/code&gt; в Perl. Вполне могут быть и другие. Например, в реализации EBCDIC, такой как z / OS (OS / 390) или OS / 400 (с использованием ILE, PASE основан на ASCII), приведенный выше материал аналогичен &amp;laquo;Unix&amp;raquo;, но номера кодов меняются:</target>
        </trans-unit>
        <trans-unit id="e2a1ebead9f267c39fe9da94bb4791dac090d0bc" translate="yes" xml:space="preserve">
          <source>These are low-level functions to extract and use capabilities from a terminal capability (termcap) database.</source>
          <target state="translated">Это низкоуровневые функции для извлечения и использования возможностей из базы данных терминальных возможностей (Termcap).</target>
        </trans-unit>
        <trans-unit id="6e1b104453fcd9be9aa03bca5a6390babe809d8b" translate="yes" xml:space="preserve">
          <source>These are methods that you may find it handy to use, generally from %Lexicon routines of yours (whether expressed as Bracket Notation or not).</source>
          <target state="translated">Это методы,которые вы можете найти удобными для использования,как правило,из вашей программы %Lexicon (независимо от того,выражены ли они в виде нотации в скобках или нет).</target>
        </trans-unit>
        <trans-unit id="9a95859137ef50d66689fe259453639b6dce722a" translate="yes" xml:space="preserve">
          <source>These are methods which are used in the course of writing a test but are not themselves tests.</source>
          <target state="translated">Это методы,которые используются в процессе написания теста,но сами по себе не являются тестами.</target>
        </trans-unit>
        <trans-unit id="14859e3783966bf81d1767be73584f0ff1e6b683" translate="yes" xml:space="preserve">
          <source>These are methods which help writing cross-platform code.</source>
          <target state="translated">Это методы,которые помогают писать кроссплатформенный код.</target>
        </trans-unit>
        <trans-unit id="10fcdff63f0636b8e542860baaf4e1184f58638e" translate="yes" xml:space="preserve">
          <source>These are methods which produce make targets.</source>
          <target state="translated">Это методы,которые создают цели.</target>
        </trans-unit>
        <trans-unit id="10849203134f1b9b6877d6c9803884e2fb3562a9" translate="yes" xml:space="preserve">
          <source>These are modules that did not break, but had broken test suites that have since been fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5242bfa15c97f14acba2cd2d00dbeca39084930f" translate="yes" xml:space="preserve">
          <source>These are most easily explained from the bottom up.</source>
          <target state="translated">Это легче всего объяснить снизу вверх.</target>
        </trans-unit>
        <trans-unit id="97c6eb63dac1e7db10f1e2e9276ff1ad9b5b7b24" translate="yes" xml:space="preserve">
          <source>These are not supplied by default, but must be explicitly imported. They are lexically scoped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff3d42df745b107b6d797477e3d4e7f8d24cab3" translate="yes" xml:space="preserve">
          <source>These are not the very basics, though. It is assumed that you already know the difference between bytes and characters, and realise (and accept!) that there are many different character sets and encodings, and that your program has to be explicit about them. Recommended reading is &quot;The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)&quot; by Joel Spolsky, at &lt;a href=&quot;http://joelonsoftware.com/articles/Unicode.html&quot;&gt;http://joelonsoftware.com/articles/Unicode.html&lt;/a&gt;.</source>
          <target state="translated">Однако это не самые основы. Предполагается, что вы уже знаете разницу между байтами и символами и понимаете (и принимаете!), Что существует много разных наборов символов и кодировок, и что ваша программа должна четко указывать на них. Рекомендуемая литература - &amp;laquo;Абсолютный минимум, который должен знать каждый разработчик программного обеспечения о Unicode и наборах символов (без оправданий!)&amp;raquo; Джоэла Спольски, на &lt;a href=&quot;http://joelonsoftware.com/articles/Unicode.html&quot;&gt;http://joelonsoftware.com/articles/Unicode.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd6ee1d320e203631c0d3d164abcb5a87fff3dcb" translate="yes" xml:space="preserve">
          <source>These are often used in macro definitions. Note that you can't return a value out of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbc1741b6d34271e2ec1a26ca7d6418baa0ebb4" translate="yes" xml:space="preserve">
          <source>These are only present when &lt;code&gt;netorder&lt;/code&gt; is FALSE. These are the sizes of various C datatypes of the perl that created this image. These must match the current perl for the image to be readable by Storable.</source>
          <target state="translated">Они присутствуют, только когда &lt;code&gt;netorder&lt;/code&gt; имеет значение FALSE. Это размеры различных типов данных C языка Perl, создавшего этот образ. Они должны соответствовать текущему Perl, чтобы изображение могло быть прочитано Storable.</target>
        </trans-unit>
        <trans-unit id="920887e803f6cf14e09050db36f20df3c6ead9d1" translate="yes" xml:space="preserve">
          <source>These are only supported if your system has &amp;lt;</source>
          <target state="translated">Они поддерживаются, только если в вашей системе есть &amp;lt;</target>
        </trans-unit>
        <trans-unit id="140e31bd5bffd898fd2913825a2d2d23dcf95138" translate="yes" xml:space="preserve">
          <source>These are pairwise exclusive, i.e. compact or loose, vt or ascii.</source>
          <target state="translated">Они парные эксклюзивные,т.е.компактные или свободные,vt или ascii.</target>
        </trans-unit>
        <trans-unit id="ee44bfea63f0502e44e3769d9962bf8126742be7" translate="yes" xml:space="preserve">
          <source>These are passed in to your plugin's &lt;code&gt;load()&lt;/code&gt; class method (if it has one), along with a reference to the &lt;code&gt;App::Prove&lt;/code&gt; object that is invoking your plugin:</source>
          <target state="translated">Они передаются в метод класса &lt;code&gt;load()&lt;/code&gt; вашего плагина (если он есть) вместе со ссылкой на объект &lt;code&gt;App::Prove&lt;/code&gt; который вызывает ваш плагин:</target>
        </trans-unit>
        <trans-unit id="0a54cca37ec252d12e0edbfcecfc7fffff46a74a" translate="yes" xml:space="preserve">
          <source>These are probematic. The C standard says that these should be considered punctuation in the C locale (and the POSIX standard defers to the C standard), and Unicode is generally considered a superset of the C locale. But Unicode has added an extra category, &quot;Symbol&quot;, and classifies these particular characters as being symbols. Most UTF-8 locales have them treated as punctuation, so that &lt;a href=&quot;http://man.he.net/man2/ispunct&quot;&gt;ispunct(2)&lt;/a&gt; returns non-zero for them. But a few locales have it return 0. Perl takes the first approach, not using &lt;code&gt;ispunct()&lt;/code&gt; at all (see &lt;a href=&quot;perlrecharclass#%5B5%5D&quot;&gt;Note [5] in perlrecharclass&lt;/a&gt;), and this message is raised to notify you that you are getting Perl's approach, not the locale's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db38161fab9301a6c38e350a75487ce9dba0c7" translate="yes" xml:space="preserve">
          <source>These are readline issues and can only be fixed by studying readline configuration on your architecture and adjusting the referenced file accordingly. Please make a backup of the &lt;code&gt;/etc/inputrc&lt;/code&gt; or &lt;code&gt;~/.inputrc&lt;/code&gt; and edit them. Quite often harmless changes like uppercasing or lowercasing some arguments solves the problem.</source>
          <target state="translated">Это проблемы со строкой чтения и могут быть исправлены только путем изучения конфигурации строки чтения в вашей архитектуре и соответствующей корректировки файла, на который имеется ссылка. Сделайте резервную копию &lt;code&gt;/etc/inputrc&lt;/code&gt; или &lt;code&gt;~/.inputrc&lt;/code&gt; и отредактируйте их. Довольно часто безобидные изменения, такие как верхний или нижний регистр некоторых аргументов, решают проблему.</target>
        </trans-unit>
        <trans-unit id="b38ff2c237d2189cfc8068063c988ad558800625" translate="yes" xml:space="preserve">
          <source>These are scripts which will check the source things like ANSI C violations, POD encoding issues, etc.</source>
          <target state="translated">Это скрипты,которые будут проверять исходные вещи,такие как нарушения ANSI C,проблемы с кодировкой POD и т.д.</target>
        </trans-unit>
        <trans-unit id="08a1e3d5222d26c7ad00377b2f49dd3e19a69282" translate="yes" xml:space="preserve">
          <source>These are shortcuts for &lt;code&gt;$token-&amp;gt;tag() eq &lt;i&gt;somestring&lt;/i&gt;&lt;/code&gt;</source>
          <target state="translated">Это ярлыки для &lt;code&gt;$token-&amp;gt;tag() eq &lt;i&gt;somestring&lt;/i&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34937e959a1c366f5128e5b9fde3a8ddb4bd5e6f" translate="yes" xml:space="preserve">
          <source>These are similar to article(), body() and head(), but rather than returning the requested data directly, they return a tied filehandle from which to read the article.</source>
          <target state="translated">Они похожи на article(),body()и head(),но вместо того,чтобы напрямую возвращать запрашиваемые данные,они возвращают связанный файловый хэндл,из которого можно прочитать статью.</target>
        </trans-unit>
        <trans-unit id="992979db9b32df20ed312f9df292c8122981c5bf" translate="yes" xml:space="preserve">
          <source>These are the files in the Perl release that contain references to Cygwin. These very brief notes attempt to explain the reason for all conditional code. Hopefully, keeping this up to date will allow the Cygwin port to be kept as clean as possible.</source>
          <target state="translated">Это файлы в релизе Perl,которые содержат ссылки на Cygwin.Эти очень краткие заметки пытаются объяснить причину всего условного кода.Надеемся,что их обновление позволит поддерживать порт Cygwin в максимально чистом состоянии.</target>
        </trans-unit>
        <trans-unit id="75ac46c3e2da8e520c552d106b13b25422f4ae84" translate="yes" xml:space="preserve">
          <source>These are the functions that are available, they may either be called as functions or class methods:</source>
          <target state="translated">Это те функции,которые доступны,они могут быть либо вызваны как функции,либо как методы класса:</target>
        </trans-unit>
        <trans-unit id="da1f03a776fe8bedafea0b23935ca2ad13f5c2fe" translate="yes" xml:space="preserve">
          <source>These are the hash data structures that are available:</source>
          <target state="translated">Это доступные структуры хэш-данных:</target>
        </trans-unit>
        <trans-unit id="cf5f4459a98cf4ec50466a764ec50e3aa2bdb1de" translate="yes" xml:space="preserve">
          <source>These are the newest form of versions, and correspond to Perl's own version style beginning with 5.6.0. Starting with Perl 5.10.0, and most likely Perl 6, this is likely to be the preferred form. This method normally requires that the input parameter be quoted, although Perl's after 5.8.1 can use v-strings as a special form of quoting, but this is highly discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321abf696e1ac3f1c7e8ae4631a3e0352eed8069" translate="yes" xml:space="preserve">
          <source>These are the same as color('attribute') and can be used if you prefer typing:</source>
          <target state="translated">Они такие же,как и color('атрибут')и могут быть использованы,если Вы предпочитаете печатать:</target>
        </trans-unit>
        <trans-unit id="4187810dcd65ec8ff13d408cac42774a760ce9e6" translate="yes" xml:space="preserve">
          <source>These are the signals which a program might normally expect to encounter and which by default cause it to terminate. They are HUP, INT, PIPE and TERM.</source>
          <target state="translated">Это сигналы,с которыми программа обычно может столкнуться и которые по умолчанию приводят к ее завершению.Это HUP,INT,PIPE и TERM.</target>
        </trans-unit>
        <trans-unit id="50c4067312fedca516066cb81563c6787bf50478" translate="yes" xml:space="preserve">
          <source>These are the signals which were trapped by default by the old &lt;b&gt;sigtrap&lt;/b&gt; interface, they are ABRT, BUS, EMT, FPE, ILL, PIPE, QUIT, SEGV, SYS, TERM, and TRAP. If no signals or signals lists are passed to &lt;b&gt;sigtrap&lt;/b&gt;, this list is used.</source>
          <target state="translated">Это сигналы, которые по умолчанию &lt;b&gt;перехватывались&lt;/b&gt; старым интерфейсом &lt;b&gt;sigtrap&lt;/b&gt; , это ABRT, BUS, EMT, FPE, ILL, PIPE, QUIT, SEGV, SYS, TERM и TRAP. Если в &lt;b&gt;sigtrap&lt;/b&gt; не передаются никакие сигналы или списки сигналов , используется этот список.</target>
        </trans-unit>
        <trans-unit id="cea91aaa564fccd3f4852969e3ebc12f20249663" translate="yes" xml:space="preserve">
          <source>These are the six methods that are exported as default.</source>
          <target state="translated">Это шесть методов,которые экспортируются по умолчанию.</target>
        </trans-unit>
        <trans-unit id="107044185540681260f831f30270844d122d9842" translate="yes" xml:space="preserve">
          <source>These are the things that you can put in the parameters to plan:</source>
          <target state="translated">Это те вещи,которые можно вставить в параметры для планирования:</target>
        </trans-unit>
        <trans-unit id="cae5aa495786f78d7786c67162eeac298ded8720" translate="yes" xml:space="preserve">
          <source>These are to do with constructing a language handle:</source>
          <target state="translated">Это связано с конструированием языковой рукоятки:</target>
        </trans-unit>
        <trans-unit id="922c34b791a974e411c2469dcdbd7774f0e10924" translate="yes" xml:space="preserve">
          <source>These are used to get/set the 'active' attribute. When true this attribute will force &lt;code&gt;hub-&amp;gt;finalize()&lt;/code&gt; to take action even if there is no plan, and no tests have been run. This flag is useful for plugins that add follow-up behaviors that need to run even if no events are seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e9dcb05d530b0eaaf353a6122269805fd5136a" translate="yes" xml:space="preserve">
          <source>These are useful shortcuts to save on the typing.</source>
          <target state="translated">Это полезные ярлыки для экономии на наборе текста.</target>
        </trans-unit>
        <trans-unit id="20957167192887677e71195c4861c8a5596fbdd0" translate="yes" xml:space="preserve">
          <source>These are valid only on ASCII platforms. Starting in Perl v5.22, simply changing the octal constants to equivalent &lt;code&gt;\N{U+...}&lt;/code&gt; values makes them portable:</source>
          <target state="translated">Они действительны только на платформах ASCII. Начиная с Perl v5.22, простая замена восьмеричных констант на эквивалентные значения &lt;code&gt;\N{U+...}&lt;/code&gt; делает их переносимыми:</target>
        </trans-unit>
        <trans-unit id="121235b5fae01f0300690949bf870a51f4a735f5" translate="yes" xml:space="preserve">
          <source>These are various utility functions for manipulating UTF8-encoded strings. For the uninitiated, this is a method of representing arbitrary Unicode characters as a variable number of bytes, in such a way that characters in the ASCII range are unmodified, and a zero byte never appears within non-zero characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c3820acf49b8050b73972a9c61ce1cf6f1d9df" translate="yes" xml:space="preserve">
          <source>These are versions of the macros which take an explicit interpreter as an argument.</source>
          <target state="translated">Это версии макросов,которые принимают явный интерпретатор в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="b056cc5f487123530dc637016a4d1c22c28e035c" translate="yes" xml:space="preserve">
          <source>These are:</source>
          <target state="translated">Это:</target>
        </trans-unit>
        <trans-unit id="16d16f3cffc4ac9689654ee5a738c8ecadd74b82" translate="yes" xml:space="preserve">
          <source>These can all be disabled with</source>
          <target state="translated">Все они могут быть отключены с помощью</target>
        </trans-unit>
        <trans-unit id="e41fb2d0ecca05f4e2a4a44f51aab35f28ed5c33" translate="yes" xml:space="preserve">
          <source>These can be combined into a single regexp with a three-way alternation:</source>
          <target state="translated">Они могут быть объединены в один регэкспресс с трехходовым чередованием:</target>
        </trans-unit>
        <trans-unit id="172164005a20965708fb5481ccabdedd39caefb5" translate="yes" xml:space="preserve">
          <source>These can be imported, or called as methods on the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299d50e1fb824778d0759c0f08b0488ba008e1c8" translate="yes" xml:space="preserve">
          <source>These can be used to add filters. Filters can modify, replace, or remove events before anything else can see them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eeb7ad8186044a1f9cb1af61a0f21c3ae49622d" translate="yes" xml:space="preserve">
          <source>These can be used to remove filters and pre_filters. The &lt;code&gt;$sub&lt;/code&gt; argument is the reference returned by &lt;code&gt;filter()&lt;/code&gt; or &lt;code&gt;pre_filter()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3356ead5e79e95f8cf87a7aefe66f6dc48400c35" translate="yes" xml:space="preserve">
          <source>These can be used to turn IPC waiting on and off, or check the current value of the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b66993a553be0939fc1c087fcb0c54c5cdbbb0" translate="yes" xml:space="preserve">
          <source>These cases below violate the &quot;remainder has the sign of the second of the two arguments&quot;, since they wouldn't match up otherwise.</source>
          <target state="translated">Эти случаи,приведенные ниже,нарушают &quot;остальные имеют знак второго из двух аргументов&quot;,так как в противном случае они бы не совпали.</target>
        </trans-unit>
        <trans-unit id="1fd6f63888a958514d8ebfc5074b3f479f8a49f9" translate="yes" xml:space="preserve">
          <source>These classes correspond in the obvious way to the underlying C structures of similar names. The inheritance hierarchy mimics the underlying C &quot;inheritance&quot;:</source>
          <target state="translated">Эти классы,очевидно,соответствуют лежащим в основе С-структурам схожих названий.Иерархия наследования имитирует базовое &quot;наследование&quot; на языке С:</target>
        </trans-unit>
        <trans-unit id="5f11a03556aad53a0a7bc63133f793375ad1dc66" translate="yes" xml:space="preserve">
          <source>These code blocks can be prefixed with &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; to give the appearance of a subroutine (although this is not considered good style). One should note that these code blocks don't really exist as named subroutines (despite their appearance). The thing that gives this away is the fact that you can have &lt;b&gt;more than one&lt;/b&gt; of these code blocks in a program, and they will get &lt;b&gt;all&lt;/b&gt; executed at the appropriate moment. So you can't execute any of these code blocks by name.</source>
          <target state="translated">Эти блоки кода могут иметь префикс &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; , чтобы создать вид подпрограммы (хотя это не считается хорошим стилем). Следует отметить, что эти блоки кода на самом деле не существуют как именованные подпрограммы (несмотря на их внешний вид). Дело в том, что дает этот вынос является тот факт , что вы можете иметь &lt;b&gt;более одного&lt;/b&gt; из этих кодовых блоков в программе, и они будут получать &lt;b&gt;все&lt;/b&gt; выполнены в подходящий момент. Таким образом, вы не можете выполнить ни один из этих блоков кода по имени.</target>
        </trans-unit>
        <trans-unit id="135b8ae6adb863f81a824e0e084d6f888cb7a313" translate="yes" xml:space="preserve">
          <source>These code blocks can be prefixed with &lt;code&gt;sub&lt;/code&gt; to give the appearance of a subroutine (although this is not considered good style). One should note that these code blocks don't really exist as named subroutines (despite their appearance). The thing that gives this away is the fact that you can have &lt;b&gt;more than one&lt;/b&gt; of these code blocks in a program, and they will get &lt;b&gt;all&lt;/b&gt; executed at the appropriate moment. So you can't execute any of these code blocks by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b3b7dd37ba8a222332eb2984faedc72082d594" translate="yes" xml:space="preserve">
          <source>These commands take any number of arguments and investigate what is necessary to perform the action. Argument processing is as follows:</source>
          <target state="translated">Эти команды принимают любое количество аргументов и исследуют,что необходимо для выполнения действия.Обработка аргументов выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="1935b5d017d485fb4c9165c42281556d84b0d309" translate="yes" xml:space="preserve">
          <source>These compile phase keywords are documented in &lt;a href=&quot;../perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT and END in perlmod&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова фазы компиляции задокументированы в &lt;a href=&quot;../perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT и END в perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfb52f790e80f5471de59b15936b8e64b57f38e3" translate="yes" xml:space="preserve">
          <source>These compile phase keywords are documented in &lt;a href=&quot;perlmod#BEGIN%2C-UNITCHECK%2C-CHECK%2C-INIT-and-END&quot;&gt;&quot;BEGIN, UNITCHECK, CHECK, INIT and END&quot; in perlmod&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f96e99d050cd5ba24ce3555c69d5626ea1ddfe" translate="yes" xml:space="preserve">
          <source>These compile phase keywords are documented in &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT and END in perlmod&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова фазы компиляции задокументированы в &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT и END в perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97251eb9b01071889514a18b4c3f732daa85a7b2" translate="yes" xml:space="preserve">
          <source>These constants are not imported by &lt;code&gt;IO::Compress::Zip&lt;/code&gt; by default.</source>
          <target state="translated">По умолчанию эти константы не импортируются &lt;code&gt;IO::Compress::Zip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a9cdeb250fa9e2cb61227f4240cb75a90c2a763" translate="yes" xml:space="preserve">
          <source>These constants can also be used with fully qualified names, eg. &lt;code&gt;SDBM_File::PAGFEXT&lt;/code&gt; .</source>
          <target state="translated">Эти константы также можно использовать с полностью определенными именами, например. &lt;code&gt;SDBM_File::PAGFEXT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38e4d9e8ffca41ef0f0b08e38acc59353b323e18" translate="yes" xml:space="preserve">
          <source>These constants can also be used with fully qualified names, eg. &lt;code&gt;SDBM_File::PAGFEXT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24ced089c50142be624d4fe7279d5e7e8267bf6" translate="yes" xml:space="preserve">
          <source>These conversions are governed by the following general rules:</source>
          <target state="translated">Эти преобразования регулируются следующими общими правилами:</target>
        </trans-unit>
        <trans-unit id="8ebb9f4990eefbf7af18e7f37f2d673045cd0b59" translate="yes" xml:space="preserve">
          <source>These conversions are invoked according to context as necessary. For example, the subroutine for &lt;code&gt;'&quot;&quot;'&lt;/code&gt; (stringify) may be used where the overloaded object is passed as an argument to &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, and that for &lt;code&gt;'bool'&lt;/code&gt; where it is tested in the condition of a flow control statement (like &lt;code&gt;while&lt;/code&gt; ) or the ternary &lt;code&gt;?:&lt;/code&gt; operation.</source>
          <target state="translated">Эти преобразования вызываются в зависимости от контекста по мере необходимости. Например, подпрограмма для &lt;code&gt;'&quot;&quot;'&lt;/code&gt; (stringify) может использоваться, когда перегруженный объект передается в качестве аргумента для &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , и подпрограмма для ' &lt;code&gt;'bool'&lt;/code&gt; где он тестируется в условии оператора управления потоком (например, &lt;code&gt;while&lt;/code&gt; ) или троичный &lt;code&gt;?:&lt;/code&gt; операция.</target>
        </trans-unit>
        <trans-unit id="380117f70d82e15acd1450b3ca50a68f2d64bbe1" translate="yes" xml:space="preserve">
          <source>These conversions are invoked according to context as necessary. For example, the subroutine for &lt;code&gt;'&quot;&quot;'&lt;/code&gt; (stringify) may be used where the overloaded object is passed as an argument to &lt;code&gt;print&lt;/code&gt;, and that for &lt;code&gt;'bool'&lt;/code&gt; where it is tested in the condition of a flow control statement (like &lt;code&gt;while&lt;/code&gt;) or the ternary &lt;code&gt;?:&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40ed2255002784d89744404c25a8dfb75189849" translate="yes" xml:space="preserve">
          <source>These correspond (loosely) to fgetpos() and fsetpos(). Rather than stdio's Fpos_t they expect a &quot;Perl Scalar Value&quot; to be passed. What is stored there should be considered opaque. The layout of the data may vary from handle to handle. When not using stdio or if platform does not have the stdio calls then they are implemented in terms of PerlIO_tell() and PerlIO_seek().</source>
          <target state="translated">Они соответствуют (свободно)fgetpos()и fsetpos().Вместо stdio's Fpos_t они ожидают передачи &quot;Perl Scalar Value&quot;.То,что там хранится,должно считаться непрозрачным.Компоновка данных может варьироваться от хэндла к хэндлу.Если не используется stdio или если платформа не имеет stdio вызовов,то они реализуются в терминалах PerlIO_tell()и PerlIO_seek().</target>
        </trans-unit>
        <trans-unit id="3ab9bc2795a0ea30e5174b44302c5f3390695af2" translate="yes" xml:space="preserve">
          <source>These correspond functionally to fread() and fwrite() but the arguments and return values are different. The PerlIO_read() and PerlIO_write() signatures have been modeled on the more sane low level read() and write() functions instead: The &quot;file&quot; argument is passed first, there is only one &quot;count&quot;, and the return value can distinguish between error and &lt;code&gt;EOF&lt;/code&gt; .</source>
          <target state="translated">Функционально они соответствуют fread () и fwrite (), но аргументы и возвращаемые значения отличаются. Сигнатуры PerlIO_read () и PerlIO_write () были смоделированы на основе более разумных функций низкого уровня read () и write (), вместо этого: аргумент &amp;laquo;файл&amp;raquo; передается первым, есть только один &amp;laquo;счетчик&amp;raquo;, и возвращаемое значение может различать ошибку и &lt;code&gt;EOF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6709bb996b1b03a70d9886cbb196b8cf31182557" translate="yes" xml:space="preserve">
          <source>These correspond functionally to fread() and fwrite() but the arguments and return values are different. The PerlIO_read() and PerlIO_write() signatures have been modeled on the more sane low level read() and write() functions instead: The &quot;file&quot; argument is passed first, there is only one &quot;count&quot;, and the return value can distinguish between error and &lt;code&gt;EOF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faed5a4522cd8b94dc864e27b779abb63c4ce78" translate="yes" xml:space="preserve">
          <source>These correspond to fopen()/fdopen() and the arguments are the same. Return &lt;code&gt;NULL&lt;/code&gt; and set &lt;code&gt;errno&lt;/code&gt; if there is an error. There may be an implementation limit on the number of open handles, which may be lower than the limit on the number of open files - &lt;code&gt;errno&lt;/code&gt; may not be set when &lt;code&gt;NULL&lt;/code&gt; is returned if this limit is exceeded.</source>
          <target state="translated">Они соответствуют fopen () / fdopen (), и аргументы те же. Верните &lt;code&gt;NULL&lt;/code&gt; и установите &lt;code&gt;errno&lt;/code&gt; , если есть ошибка. Может существовать ограничение реализации на количество открытых дескрипторов, которое может быть ниже, чем ограничение на количество открытых файлов - &lt;code&gt;errno&lt;/code&gt; не может быть установлен, когда возвращается &lt;code&gt;NULL&lt;/code&gt; , если этот предел превышен.</target>
        </trans-unit>
        <trans-unit id="85c39d61ce18e7b09b1791e93aa8066eeef62084" translate="yes" xml:space="preserve">
          <source>These correspond to fputs() and fputc(). Note that arguments have been revised to have &quot;file&quot; first.</source>
          <target state="translated">Они соответствуют fputs()и fputc().Обратите внимание,что сначала были изменены аргументы на &quot;file&quot;.</target>
        </trans-unit>
        <trans-unit id="544fd46c0b10a4444296cac7b81bb5f9a1983a0b" translate="yes" xml:space="preserve">
          <source>These correspond to historical versions of Perl itself prior to 5.6.0, as well as all other modules which follow the Camel rules for the $VERSION scalar. A Decimal version is initialized with what looks like a floating point number. Leading zeros &lt;b&gt;are&lt;/b&gt; significant and trailing zeros are implied so that a minimum of three places is maintained between subversions. What this means is that any subversion (digits to the right of the decimal place) that contains less than three digits will have trailing zeros added to make up the difference, but only for purposes of comparison with other version objects. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e90caae28ef06f86a5a7c45f8c354bdfbb310ff" translate="yes" xml:space="preserve">
          <source>These defaults may change once perlio has been better tested and tuned.</source>
          <target state="translated">Эти значения по умолчанию могут измениться после того,как перлио будет лучше протестировано и настроено.</target>
        </trans-unit>
        <trans-unit id="7839c4fa6c5e549c45dd9f01f832d15a81b4f89c" translate="yes" xml:space="preserve">
          <source>These dependencies &lt;b&gt;must&lt;/b&gt; be installed for proper completion of the phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a282aac2b58f5229db8cb0a3f6d43227938378cc" translate="yes" xml:space="preserve">
          <source>These dependencies are optional, but are suggested for enhanced operation of the described distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b42ed96c36dd8480d16597a1b739ba48b433615" translate="yes" xml:space="preserve">
          <source>These directories get the man pages at 'make install' time if INSTALLDIRS=perl. Defaults to $Config{installman*dir}.</source>
          <target state="translated">Эти каталоги получают man-страницы во время 'make install',если INSTALLDIRS=perl.По умолчанию $Config{installman*dir}.</target>
        </trans-unit>
        <trans-unit id="80d2a82fca268aa8c538c7ef08b93ac2b88facef" translate="yes" xml:space="preserve">
          <source>These directories get the man pages at 'make install' time if INSTALLDIRS=site (default). Defaults to $(SITEPREFIX)/man/man$(MAN*EXT).</source>
          <target state="translated">Эти каталоги получают man-страницы во время 'make install',если INSTALLDIRS=site (по умолчанию).По умолчанию $(SITEPREFIX)/man/man$(MAN*EXT).</target>
        </trans-unit>
        <trans-unit id="68e3f1b03dd4e2ce3d50494f40f9bb4bc33a9ff9" translate="yes" xml:space="preserve">
          <source>These directories get the man pages at 'make install' time if INSTALLDIRS=vendor. Defaults to $(VENDORPREFIX)/man/man$(MAN*EXT).</source>
          <target state="translated">Эти каталоги получают man-страницы во время 'make install',если INSTALLDIRS=vendor.По умолчанию $(VENDORPREFIX)/man/man$(MAN*EXT).</target>
        </trans-unit>
        <trans-unit id="826d28206d7a0a00e581093b89d5458113f88ed8" translate="yes" xml:space="preserve">
          <source>These events are somewhat unlike the other over-* structures, as far as what their contents are. When an &quot;=over ... =back&quot; block is parsed where the items are a list of text &quot;subheadings&quot;, it will produce this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cc2ff1be108f9b3225e238afe683fc7768cc47" translate="yes" xml:space="preserve">
          <source>These events are somewhat unlike the other over-* structures, as far as what their contents are. When an &quot;=over ... =back&quot; block is parsed where there are no items, it will produce this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059d0be95b4f0a24081b715eea5d71b4a7804c63" translate="yes" xml:space="preserve">
          <source>These events are somewhat unlike the other over-* structures, as far as what their contents are. When an &quot;=over ... =back&quot; block is parsed where there is no content, it will produce this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697b26f4c2f86a2a70b8343c157814214e1b6619" translate="yes" xml:space="preserve">
          <source>These examples apply for use in the &lt;code&gt;AUTODIE_HINTS&lt;/code&gt; subroutine and when calling &lt;code&gt;autodie::hints-&amp;gt;set_hints_for()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c3a72856e79ae11ef7788be093b884c47b09d5" translate="yes" xml:space="preserve">
          <source>These examples are realized in the code below, which could be copied to a file</source>
          <target state="translated">Эти примеры реализованы в приведенном ниже коде,который можно скопировать в файл</target>
        </trans-unit>
        <trans-unit id="ea1d8aa8b62f74ea36ff39b0b63b9774953aaca0" translate="yes" xml:space="preserve">
          <source>These examples of attempts to use an ellipsis are syntax errors:</source>
          <target state="translated">Приведенные примеры попыток использования эллипсиса являются синтаксическими ошибками:</target>
        </trans-unit>
        <trans-unit id="ad269ea05e73affc724a0326dc3ecea88836b454" translate="yes" xml:space="preserve">
          <source>These examples often reflect the style and preference of the author of that piece of the documentation, and may be briefer than a corresponding line of code in a real program. Except where otherwise noted, you should assume that &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; statements appear earlier in the &quot;program&quot;, and that any variables used have already been declared, even if those declarations have been omitted to make the example easier to read.</source>
          <target state="translated">Эти примеры часто отражают стиль и предпочтения автора этой части документации и могут быть короче, чем соответствующая строка кода в реальной программе. Если не указано иное, вы должны предполагать, что операторы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; появляются раньше в &amp;laquo;программе&amp;raquo; и что все используемые переменные уже были объявлены, даже если эти объявления были пропущены, чтобы облегчить чтение примера.</target>
        </trans-unit>
        <trans-unit id="d4e7b3ca44c221b3e7c212675f6429495503147e" translate="yes" xml:space="preserve">
          <source>These examples often reflect the style and preference of the author of that piece of the documentation, and may be briefer than a corresponding line of code in a real program. Except where otherwise noted, you should assume that &lt;code&gt;use strict&lt;/code&gt; and &lt;code&gt;use warnings&lt;/code&gt; statements appear earlier in the &quot;program&quot;, and that any variables used have already been declared, even if those declarations have been omitted to make the example easier to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4181b23484c1b0366a0256854a440c5eed9952" translate="yes" xml:space="preserve">
          <source>These examples show how to make references to variables with names. Sometimes you want to make an array or a hash that doesn't have a name. This is analogous to the way you like to be able to use the string &lt;code&gt;&quot;\n&quot;&lt;/code&gt; or the number 80 without having to store it in a named variable first.</source>
          <target state="translated">Эти примеры показывают, как делать ссылки на переменные с именами. Иногда вы хотите создать массив или хеш, у которых нет имени. Это аналогично тому, как вам нравится использовать строку &lt;code&gt;&quot;\n&quot;&lt;/code&gt; или число 80 без необходимости сначала сохранять ее в именованной переменной.</target>
        </trans-unit>
        <trans-unit id="20a65f5d703ea411ed23607c52479559427bdd1b" translate="yes" xml:space="preserve">
          <source>These examples show standard binary, octal, and hexadecimal conversion. All cases return 250.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3275ce9b816da8fb07d0b0ce58c3254f177b415d" translate="yes" xml:space="preserve">
          <source>These exercise the C calls of the same names. Everything after the flags arg is passed as the args to the called function. They return whatever the C function itself pushed onto the stack, plus the return value from the function; for example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8154f7f4551172387a5e006af7a44b0eb2db652a" translate="yes" xml:space="preserve">
          <source>These exports lack the 'test2_' prefix because of how important/common they are. Exports in the &lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;&quot;OTHER API EXPORTS&quot;&lt;/a&gt; section have the 'test2_' prefix to ensure they stand out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7900d790c497c44a25852d75caed60efb96bb183" translate="yes" xml:space="preserve">
          <source>These features are no longer considered experimental and their functionality has disappeared. It's your own fault if you wrote production programs using these features after we explicitly told you not to (see &lt;a href=&quot;perlpolicy&quot;&gt;perlpolicy&lt;/a&gt;).</source>
          <target state="translated">Эти функции больше не считаются экспериментальными, и их функциональность исчезла. Это ваша собственная вина, если вы написали производственные программы с использованием этих функций после того, как мы явно сказали вам не делать этого (см. &lt;a href=&quot;perlpolicy&quot;&gt;Perlpolicy&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ecdbc29b6059151fd36541ed2cea90e388fc6071" translate="yes" xml:space="preserve">
          <source>These features were so wildly successful and played so well with others that we decided to remove their experimental status and admit them as full, stable features in the world of Perl, lavishing all the benefits and luxuries thereof. They are also awarded +5 Stability and +3 Charisma.</source>
          <target state="translated">Эти черты были настолько дико успешны и играли так хорошо с другими,что мы решили снять их экспериментальный статус и признать их как полные,стабильные черты в мире Perl,наслаждаясь всеми его преимуществами и роскошью.Они также получили +5 Стабильность и +3 Харизма.</target>
        </trans-unit>
        <trans-unit id="23bca6002a132d6b029d6fafa0db7395943b6806" translate="yes" xml:space="preserve">
          <source>These fields are documented in &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; in the details() function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e6036965bbf4c4737a51a1417b34175db545ac" translate="yes" xml:space="preserve">
          <source>These fields are exclusive to Test::Tester.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436079f5f30dfc97a1a6d7f8ea9906fefeca2983" translate="yes" xml:space="preserve">
          <source>These fields are used to keep track of how many paren groups could be matched in the pattern, which was the last open paren to be entered, and which was the last close paren to be entered.</source>
          <target state="translated">Эти поля используются для того,чтобы отслеживать,сколько групп родителей могут быть сопоставлены в шаблоне,который был последним открытым родителем,который был последним закрытым родителем,который был введен в шаблон.</target>
        </trans-unit>
        <trans-unit id="364e8607b9d0b5e1133548655910099e7ea2800f" translate="yes" xml:space="preserve">
          <source>These fields are used to keep track of: how many paren capture groups there are in the pattern; which was the highest paren to be closed (see &lt;a href=&quot;perlvar#%24%2B&quot;&gt;&quot;$+&quot; in perlvar&lt;/a&gt;); and which was the most recent paren to be closed (see &lt;a href=&quot;perlvar#%24%5EN&quot;&gt;&quot;$^N&quot; in perlvar&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f6d64891a439ddc08d9e9a7c82712ad5e53094" translate="yes" xml:space="preserve">
          <source>These fields were not always set properly by tools. These are &lt;b&gt;MOSTLY&lt;/b&gt; deprecated by the &lt;a href=&quot;Test2::EventFacet::Hub&quot;&gt;Test2::EventFacet::Hub&lt;/a&gt; facets. These fields are not required, and may only reflect the hub that was current when the event was created, which is not necessarily the same as the hub the event was sent through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8e2d7aa479f62270f36bb981c83130e3ea21ce" translate="yes" xml:space="preserve">
          <source>These files contain information on who maintains which modules. Run &lt;code&gt;perl Porting/Maintainers -M Module::Name&lt;/code&gt; to find out more information about a dual-life module.</source>
          <target state="translated">Эти файлы содержат информацию о том, кто поддерживает какие модули. Запустите &lt;code&gt;perl Porting/Maintainers -M Module::Name&lt;/code&gt; чтобы узнать больше о модуле двойной жизни.</target>
        </trans-unit>
        <trans-unit id="7c3add026b4eccbc256b7dbac98ef5e6ce0ff8a8" translate="yes" xml:space="preserve">
          <source>These flags can be set during compilation to enable optimizations in the &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">Эти флаги могут быть установлены во время компиляции, чтобы включить оптимизацию в операторе &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba4786ce1716e79f3dd44cdde2b9934a0474166a" translate="yes" xml:space="preserve">
          <source>These flags can be set during compilation to enable optimizations in the &lt;code&gt;split&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37fe8b518dd14c6463f65c8f4e797fa6141aaa5" translate="yes" xml:space="preserve">
          <source>These flags will be combined with &lt;code&gt;AI_PASSIVE&lt;/code&gt; if the &lt;code&gt;Listen&lt;/code&gt; argument is given. For more information see the documentation about &lt;code&gt;getaddrinfo()&lt;/code&gt; in the &lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad448cfc75702b92a6132746a47d8bee944a550" translate="yes" xml:space="preserve">
          <source>These flow-control keywords are documented in &lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова управления потоком задокументированы в &lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;составных выражениях perlsyn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c20b24e4fbc48221510b4bcf4dcbd023da2f2f48" translate="yes" xml:space="preserve">
          <source>These flow-control keywords are documented in &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;&quot;Compound Statements&quot; in perlsyn&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f149ae07a8478e188c52361aad3ec711ed1026a" translate="yes" xml:space="preserve">
          <source>These flow-control keywords are documented in &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова управления потоком задокументированы в &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;составных выражениях perlsyn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="309e08bc8a3175c38d05ead911b510e18b559b99" translate="yes" xml:space="preserve">
          <source>These flow-control keywords related to the experimental switch feature are documented in &lt;a href=&quot;../perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова управления потоком, относящиеся к экспериментальной функции переключения, задокументированы &lt;a href=&quot;../perlsyn#Switch-Statements&quot;&gt;в инструкциях переключения в perlsyn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6ea531d00fc508a3823794aa1be9e23af84e702" translate="yes" xml:space="preserve">
          <source>These flow-control keywords related to the experimental switch feature are documented in &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;&quot;Switch Statements&quot; in perlsyn&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a272370ad05edf250f2041efdee62784d465ad39" translate="yes" xml:space="preserve">
          <source>These flow-control keywords related to the experimental switch feature are documented in &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова управления потоком, относящиеся к экспериментальной функции переключения, задокументированы &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;в инструкциях переключения в perlsyn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc4036739b5240858c0bf581399bd57e7b5e9c9e" translate="yes" xml:space="preserve">
          <source>These forms may be assigned to, and cause the right-hand side to be evaluated in scalar context:</source>
          <target state="translated">Этим формам могут быть назначены,и они вызывают оценку правой стороны в скалярном контексте:</target>
        </trans-unit>
        <trans-unit id="b6a87abeab3fa4b07145fb59b22ed97519f70773" translate="yes" xml:space="preserve">
          <source>These free versions of Visual C++ 2008-2013 Professional contain the same compilers and linkers that ship with the full versions, and also contain everything necessary to build Perl, rather than requiring a separate download of the Windows SDK like previous versions did.</source>
          <target state="translated">Эти бесплатные версии Visual C++2008-2013 Professional содержат те же компиляторы и компоновщики,которые поставляются с полными версиями,а также содержат все необходимое для сборки Perl,а не требуют отдельной загрузки Windows SDK,как это делали предыдущие версии.</target>
        </trans-unit>
        <trans-unit id="dd071ab048c765a21e6eb3e509d63da5f9264cc6" translate="yes" xml:space="preserve">
          <source>These free versions of Visual C++ 2008-2019 Professional contain the same compilers and linkers that ship with the full versions, and also contain everything necessary to build Perl, rather than requiring a separate download of the Windows SDK like previous versions did.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdfa79cbeb17377a5124b29f2fd31a6e8d98c48" translate="yes" xml:space="preserve">
          <source>These functions allow checksums to be merged. Refer to the</source>
          <target state="translated">Эти функции позволяют объединять контрольные суммы.См.раздел</target>
        </trans-unit>
        <trans-unit id="ba57dd2ab74f37811d43a497242362420e4296f0" translate="yes" xml:space="preserve">
          <source>These functions are exported only on request. They each take a single argument and return the absolute pathname for it. If no argument is given they'll use the current working directory.</source>
          <target state="translated">Эти функции экспортируются только по запросу.Каждая из них берет по одному аргументу и возвращает для нее абсолютное имя.Если аргумент не указан,они будут использовать текущую рабочую директорию.</target>
        </trans-unit>
        <trans-unit id="11a75a016614f3f6a49b489f2532217d2dc9b130" translate="yes" xml:space="preserve">
          <source>These functions are interface of character data used internally. If you want only to get Unicode normalization forms, you don't need call them yourself.</source>
          <target state="translated">Эти функции являются интерфейсом символьных данных,используемых внутри организации.Если вы хотите получить только формы нормализации Unicode,вам не нужно вызывать их самостоятельно.</target>
        </trans-unit>
        <trans-unit id="a5805d5b7ed6958150825f5cb6f923e00d36788d" translate="yes" xml:space="preserve">
          <source>These functions are provided for backwards compatibility with common tempfile generation C library functions.</source>
          <target state="translated">Эти функции обеспечивают обратную совместимость с обычными функциями генерации временных файлов С библиотеки.</target>
        </trans-unit>
        <trans-unit id="4c85d18231511b3dd1840594c64b0cd5dd02c4fd" translate="yes" xml:space="preserve">
          <source>These functions are related to the method resolution order of perl classes</source>
          <target state="translated">Эти функции связаны с порядком разрешения метода perl классов</target>
        </trans-unit>
        <trans-unit id="f5dc09684122720f5aa9541567e929d09cbfcab9" translate="yes" xml:space="preserve">
          <source>These functions are related to the method resolution order of perl classes Also see &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565eacfa6d391bb1e8f9b310d413202832f4d770" translate="yes" xml:space="preserve">
          <source>These functions are used by the filter to obtain either a line or block from the next filter in the chain or the actual source file if there aren't any other filters.</source>
          <target state="translated">Эти функции используются фильтром для получения либо строки или блока из следующего фильтра в цепочке,либо фактического файла-источника,если нет других фильтров.</target>
        </trans-unit>
        <trans-unit id="b40856071384296779ffb96483ca0013c6d7f3df" translate="yes" xml:space="preserve">
          <source>These functions are usually used inside an &lt;code&gt;ok()&lt;/code&gt; .</source>
          <target state="translated">Эти функции обычно используются внутри &lt;code&gt;ok()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e41468bdd006d27480bb97d817c9ffa27e30a0b5" translate="yes" xml:space="preserve">
          <source>These functions are usually used inside an &lt;code&gt;ok()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9ddd863a33c4087b2128f800b2bb735b670e0b" translate="yes" xml:space="preserve">
          <source>These functions control the global state of the package.</source>
          <target state="translated">Эти функции контролируют глобальное состояние пакета.</target>
        </trans-unit>
        <trans-unit id="524d44a200305a1bdc5134c684c7bc58ebf331b8" translate="yes" xml:space="preserve">
          <source>These functions grant &lt;code&gt;&quot;SUPER&quot;&lt;/code&gt; token as a prefix of the method name. Note that if you want to keep the returned glob for a long time, you need to check for it being &quot;AUTOLOAD&quot;, since at the later time the call may load a different subroutine due to $AUTOLOAD changing its value. Use the glob created as a side effect to do this.</source>
          <target state="translated">Эти функции предоставляют токен &lt;code&gt;&quot;SUPER&quot;&lt;/code&gt; в качестве префикса имени метода. Обратите внимание, что если вы хотите сохранить возвращенный глобус в течение длительного времени, вам необходимо проверить, является ли он &amp;laquo;AUTOLOAD&amp;raquo;, так как в более позднее время вызов может загрузить другую подпрограмму из-за изменения $ AUTOLOAD своего значения. Используйте для этого созданный шар как побочный эффект.</target>
        </trans-unit>
        <trans-unit id="46e538c266b73e137dc14a5dc62eb4e35a0dc1d7" translate="yes" xml:space="preserve">
          <source>These functions grant &lt;code&gt;&quot;SUPER&quot;&lt;/code&gt; token as a prefix of the method name. Note that if you want to keep the returned glob for a long time, you need to check for it being &quot;AUTOLOAD&quot;, since at the later time the call may load a different subroutine due to &lt;code&gt;$AUTOLOAD&lt;/code&gt; changing its value. Use the glob created as a side effect to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b1137b52cacd1fbff911e830d8d14363d490cb" translate="yes" xml:space="preserve">
          <source>These functions have the same side-effects as &lt;code&gt;gv_fetchmeth&lt;/code&gt; with &lt;code&gt;level==0&lt;/code&gt; . The warning against passing the GV returned by &lt;code&gt;gv_fetchmeth&lt;/code&gt; to &lt;code&gt;call_sv&lt;/code&gt; applies equally to these functions.</source>
          <target state="translated">Эти функции имеют те же побочные эффекты, что и &lt;code&gt;gv_fetchmeth&lt;/code&gt; с &lt;code&gt;level==0&lt;/code&gt; . Предупреждение о &lt;code&gt;gv_fetchmeth&lt;/code&gt; передачи GV, возвращаемого gv_fetchmeth, в &lt;code&gt;call_sv&lt;/code&gt; в равной степени относится к этим функциям.</target>
        </trans-unit>
        <trans-unit id="2b56f3bac64bb21a82acf1501da762f0c2c856f4" translate="yes" xml:space="preserve">
          <source>These functions have the same side-effects as &lt;code&gt;gv_fetchmeth&lt;/code&gt; with &lt;code&gt;level==0&lt;/code&gt;. The warning against passing the GV returned by &lt;code&gt;gv_fetchmeth&lt;/code&gt; to &lt;code&gt;call_sv&lt;/code&gt; applies equally to these functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d4aef8dd151e8462fbb3063b8efcb68e0d87b2" translate="yes" xml:space="preserve">
          <source>These functions provide convenient and thread-safe means of manipulating hook variables.</source>
          <target state="translated">Эти функции обеспечивают удобные и потокобезопасные средства манипулирования переменными &quot;крючка&quot;.</target>
        </trans-unit>
        <trans-unit id="a1aa255500a4b04da2dc6b5da9157c66c2e72423" translate="yes" xml:space="preserve">
          <source>These functions return the filehandles that test output should be written to. They are primarily useful when writing a custom formatter and code that turns events into actual output (TAP, etc.). They will return a dupe of the original filehandles that formatted output can be sent to regardless of whatever state the currently running test may have left STDOUT and STDERR in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f738338a9dbfbee4b5a909220a80f41318a9f381" translate="yes" xml:space="preserve">
          <source>These functions simply print $Config{ccflags} and $Config{ccdlflags}</source>
          <target state="translated">Эти функции просто выводят на печать $Config{ccflags}и $Config{ccdlflags}.</target>
        </trans-unit>
        <trans-unit id="6cd020ca0f66b00dde6a2341717a3dae0fc7c828" translate="yes" xml:space="preserve">
          <source>These functions take a hash as an argument. The recognized keys of this hash are:</source>
          <target state="translated">Эти функции принимают хэш в качестве аргумента.Распознанные ключи этого хэша:</target>
        </trans-unit>
        <trans-unit id="d6359c7691ac9172680cb301b6768d6c5620c165" translate="yes" xml:space="preserve">
          <source>These functions take an input numeric code point in one encoding and return what its equivalent value is in the other.</source>
          <target state="translated">Эти функции берут точку входного числового кода в одной кодировке и возвращают эквивалентное ей значение в другой.</target>
        </trans-unit>
        <trans-unit id="7ebb5ef7a942f7d31cebfd11f8de6228de926c64" translate="yes" xml:space="preserve">
          <source>These hooks are also permitted to set the %INC entry corresponding to the files they have loaded. See &lt;a href=&quot;../perlvar#%25INC&quot;&gt;%INC in perlvar&lt;/a&gt;.</source>
          <target state="translated">Этим перехватчикам также разрешено устанавливать запись% INC, соответствующую загруженным файлам. См. &lt;a href=&quot;../perlvar#%25INC&quot;&gt;% INC в perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcbca2e2db6c0375d3253e7898e5f5abc5deaab1" translate="yes" xml:space="preserve">
          <source>These hooks are also permitted to set the %INC entry corresponding to the files they have loaded. See &lt;a href=&quot;perlvar#%25INC&quot;&gt;%INC in perlvar&lt;/a&gt;.</source>
          <target state="translated">Этим перехватчикам также разрешено устанавливать запись% INC, соответствующую загруженным файлам. См. &lt;a href=&quot;perlvar#%25INC&quot;&gt;% INC в perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5503b912c616b1c1dc8b62e0e994ce6da27034d1" translate="yes" xml:space="preserve">
          <source>These hooks are also permitted to set the &lt;a href=&quot;perlvar#%25INC&quot;&gt;&lt;code&gt;%INC&lt;/code&gt;&lt;/a&gt; entry corresponding to the files they have loaded. See &lt;a href=&quot;perlvar#%25INC&quot;&gt;&quot;%INC&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a1c65d2979db94163456cbe8161d55f284997f" translate="yes" xml:space="preserve">
          <source>These instructions almost certainly won't work with older Symbian releases or other SDKs. Patches to get this port running in other releases, SDKs, compilers, platforms, or devices are naturally welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f079e2e8fde2b1b9c52a64a204e00b961420ae" translate="yes" xml:space="preserve">
          <source>These instructions assume an Unixish build environment on your host system; they've been tested on Linux and OS X, and may work on Cygwin and MSYS. While Google also provides an NDK for Windows, these steps won't work native there, although it may be possible to cross-compile through different means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b41cc6de55339f50e9dff758782b5feb169269e" translate="yes" xml:space="preserve">
          <source>These instructions have been tested under various Nokia Series 60 Symbian SDKs (1.2 to 2.6, 2.8 should also work, 1.2 compiles but does not work), Series 80 2.0, and Nokia 7710 (Series 90) SDK. You can get the SDKs from Forum Nokia (&lt;a href=&quot;http://www.forum.nokia.com/&quot;&gt;http://www.forum.nokia.com/&lt;/a&gt;). A very rough port (&quot;it compiles&quot;) to UIQ 2.1 has also been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8243bb38a9870ed902e40da582837671b3b2a2f6" translate="yes" xml:space="preserve">
          <source>These interfaces are only available in Perl 5.9.5 and higher. See &lt;a href=&quot;MRO::Compat&quot;&gt;MRO::Compat&lt;/a&gt; on CPAN for a mostly forwards compatible implementation for older Perls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab8134e6c8ea614a58bbf4cba85fe875f47ac40" translate="yes" xml:space="preserve">
          <source>These interfaces are only available in Perl 5.9.5 and higher. See &lt;a href=&quot;http://search.cpan.org/perldoc/MRO::Compat&quot;&gt;MRO::Compat&lt;/a&gt; on CPAN for a mostly forwards compatible implementation for older Perls.</source>
          <target state="translated">Эти интерфейсы доступны только в Perl 5.9.5 и выше. См. &lt;a href=&quot;http://search.cpan.org/perldoc/MRO::Compat&quot;&gt;MRO :: Compat&lt;/a&gt; на CPAN для получения большей части прямой совместимости реализации для старых Perls.</target>
        </trans-unit>
        <trans-unit id="800024eb93ec8e2e1c9e19ed6e58201379d4f5ea" translate="yes" xml:space="preserve">
          <source>These items are the primitives used to perform indenting, and to select text from amongst alternatives.</source>
          <target state="translated">Эти элементы являются примитивами,используемыми для выполнения отступов,а также для выделения текста из числа альтернатив.</target>
        </trans-unit>
        <trans-unit id="3dfe7afbcdb97590e1c6c0085eefd647c7035d88" translate="yes" xml:space="preserve">
          <source>These keys will be populated before any exceptions are thrown should there be an error.</source>
          <target state="translated">Эти ключи будут заполнены до того,как будут брошены какие-либо исключения в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="a901d1a803d1f1e84cb86c073bdbaefe49dcbe0f" translate="yes" xml:space="preserve">
          <source>These keywords are documented in &lt;a href=&quot;../perldata#Special-Literals&quot;&gt;Special Literals in perldata&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова задокументированы в &lt;a href=&quot;../perldata#Special-Literals&quot;&gt;специальных литералах в perldata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d6b25a409414e2ca5afbdfa8033c35fbcccb54b" translate="yes" xml:space="preserve">
          <source>These keywords are documented in &lt;a href=&quot;perldata#Special-Literals&quot;&gt;&quot;Special Literals&quot; in perldata&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1500951fb5f2dd9eeebd6c439509f1ad3f36d4ce" translate="yes" xml:space="preserve">
          <source>These keywords are documented in &lt;a href=&quot;perldata#Special-Literals&quot;&gt;Special Literals in perldata&lt;/a&gt;.</source>
          <target state="translated">Эти ключевые слова задокументированы в &lt;a href=&quot;perldata#Special-Literals&quot;&gt;специальных литералах в perldata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="017f89666b16c462ff4b71931d55ca635d0ecaed" translate="yes" xml:space="preserve">
          <source>These last two are only valid for pad name SVs. They only existed in the B::NV class before Perl 5.22. In 5.22 they were moved to the B::PADNAME class.</source>
          <target state="translated">Последние два действительны только для колодок с именами SV.Они существовали только в классе B::NV до Perl 5.22.В 5.22 они были перемещены в класс B::PADNAME.</target>
        </trans-unit>
        <trans-unit id="298686bf6c6c117c0e1d2a3856c264e7ccaf286f" translate="yes" xml:space="preserve">
          <source>These let you access, or specify, the IPC system internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9833d67dc0abefa0216f41f8ee8eb9cce74882f" translate="yes" xml:space="preserve">
          <source>These let you access, or specify, the formatters that can/should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bcc5490ceb9d124e54596118346ed571b24dc1" translate="yes" xml:space="preserve">
          <source>These libraries cannot be installed when the phase is in operation. This is a very rare situation, and the &lt;code&gt;conflicts&lt;/code&gt; relationship should be used with great caution, or not at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3476aee9a9c9d8b18c6d57ac8c385c0348f0d4" translate="yes" xml:space="preserve">
          <source>These look just like character names but return multiple codepoints. Notice the &lt;code&gt;%vx&lt;/code&gt; vector-print functionality in &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Они выглядят так же, как имена персонажей, но возвращают несколько кодовых точек. Обратите внимание на функцию векторной печати &lt;code&gt;%vx&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3391fc814f15e6deaf725b432b00af48ee0dd251" translate="yes" xml:space="preserve">
          <source>These look just like character names but return multiple codepoints. Notice the &lt;code&gt;%vx&lt;/code&gt; vector-print functionality in &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76a83f91dda3c78158f07c2bcf605e73e782739" translate="yes" xml:space="preserve">
          <source>These loop ops are not included in :base_core because they can easily be used to implement a resource attack (e.g., consume all available CPU time).</source>
          <target state="translated">Эти циклические операции не включены в :base_core,так как они легко могут быть использованы для реализации атаки на ресурсы (например,потребляют все доступное процессорное время).</target>
        </trans-unit>
        <trans-unit id="a843eb74986a4e9f839472d2d8d150ea39980b05" translate="yes" xml:space="preserve">
          <source>These macros arrange things to restore the value of integer variable &lt;code&gt;i&lt;/code&gt; at the end of enclosing</source>
          <target state="translated">Эти макросы упорядочивают вещи, чтобы восстановить значение целочисленной переменной &lt;code&gt;i&lt;/code&gt; в конце включения</target>
        </trans-unit>
        <trans-unit id="f7a2a9aebcff3586f69f55801776cb23fd4e90a9" translate="yes" xml:space="preserve">
          <source>These macros arrange things to restore the value of pointers &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; must be a pointer of a type which survives conversion to &lt;code&gt;SV*&lt;/code&gt; and back, &lt;code&gt;p&lt;/code&gt; should be able to survive conversion to &lt;code&gt;char*&lt;/code&gt; and back.</source>
          <target state="translated">Эти макросы позволяют восстановить значение указателей &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;p&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; должен быть указателем типа, который переживает преобразование в &lt;code&gt;SV*&lt;/code&gt; и обратно, &lt;code&gt;p&lt;/code&gt; должен иметь возможность пережить преобразование в &lt;code&gt;char*&lt;/code&gt; и обратно.</target>
        </trans-unit>
        <trans-unit id="abe6df67a459b0e2e30bde61ddbbfa6e1689636a" translate="yes" xml:space="preserve">
          <source>These macros arrange things to restore the value of pointers &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;. &lt;code&gt;s&lt;/code&gt; must be a pointer of a type which survives conversion to &lt;code&gt;SV*&lt;/code&gt; and back, &lt;code&gt;p&lt;/code&gt; should be able to survive conversion to &lt;code&gt;char*&lt;/code&gt; and back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593dfba1d3d328349b77f1588cf82c2aaffa0443" translate="yes" xml:space="preserve">
          <source>These may not necessarily cause trouble, but indicate mediocre style.</source>
          <target state="translated">Это не обязательно доставляет неприятности,но указывает на посредственный стиль.</target>
        </trans-unit>
        <trans-unit id="e22b64582fc85ac43b9e96c24337a10a450121a5" translate="yes" xml:space="preserve">
          <source>These memory related ops are not included in :base_core because they can easily be used to implement a resource attack (e.g., consume all available memory).</source>
          <target state="translated">Эти операторы,связанные с памятью,не включены в :base_core,так как их можно легко использовать для реализации атаки на ресурсы (например,потреблять всю доступную память).</target>
        </trans-unit>
        <trans-unit id="77c1bb576863e90102788a1b3ffe564db0c5c144" translate="yes" xml:space="preserve">
          <source>These messages are classified as follows (listed in increasing order of desperation):</source>
          <target state="translated">Эти сообщения классифицируются следующим образом (перечислены в порядке возрастания отчаяния):</target>
        </trans-unit>
        <trans-unit id="b0bb74426f2aa2733dbc5c5a86f08523cab5f25f" translate="yes" xml:space="preserve">
          <source>These messages may safely be ignored. (Note that for a SunOS4 system, you must use -B/bin/ instead.)</source>
          <target state="translated">Эти сообщения могут быть безопасно проигнорированы.(Обратите внимание,что для системы SunOS4 необходимо использовать -B/bin/вместо этого).</target>
        </trans-unit>
        <trans-unit id="5b9f0b892cf28755d89fe7944f868ad5bf940e68" translate="yes" xml:space="preserve">
          <source>These methods all apply to the Ptr type for the structure; additionally two methods are constructed for the structure type itself, &lt;code&gt;_to_ptr&lt;/code&gt; which returns a Ptr type pointing to the same structure, and a &lt;code&gt;new&lt;/code&gt; method to construct and return a new structure, initialised to zeroes.</source>
          <target state="translated">Все эти методы применимы к типу Ptr для структуры; кроме того, для самого типа структуры создаются два метода: &lt;code&gt;_to_ptr&lt;/code&gt; , который возвращает тип Ptr, указывающий на ту же структуру, и &lt;code&gt;new&lt;/code&gt; метод для создания и возврата новой структуры, инициализированной нулями.</target>
        </trans-unit>
        <trans-unit id="833ac724c3c333f81488114a18e12c4a9e975d1a" translate="yes" xml:space="preserve">
          <source>These methods all test the BigInt for being one specific value and return true or false depending on the input. These are faster than doing something like:</source>
          <target state="translated">Все эти методы проверяют BigInt на одно конкретное значение и возвращают true или false в зависимости от входа.Это быстрее,чем делать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="44e7eefb77f18d6db25c4aade77e34563622be4e" translate="yes" xml:space="preserve">
          <source>These methods are called when Math::BigInt encounters an object it doesn't know how to handle. For instance, assume $x is a Math::BigInt, or subclass thereof, and $y is defined, but not a Math::BigInt, or subclass thereof. If you do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0a252991a786c320bc1feeb73f0f20e3e9795f" translate="yes" xml:space="preserve">
          <source>These methods are discussed in the section &quot;Bracket Notation Security&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92da9e899f4e8b0a6a719a6370a299d62ec6b1c8" translate="yes" xml:space="preserve">
          <source>These methods are for setting up tests and declaring how many there are. You usually only want to call one of these methods.</source>
          <target state="translated">Эти методы предназначены для настройки тестов и объявления их количества.Обычно вы хотите вызвать только один из этих методов.</target>
        </trans-unit>
        <trans-unit id="98d7c4cb78ffffaf07a8efc77ee2a4a9356ea4d1" translate="yes" xml:space="preserve">
          <source>These methods are intended to be used in the everyday dealing of exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9725043aadb2020c60801a841d8cbbe42a310c40" translate="yes" xml:space="preserve">
          <source>These methods are not intended to be called by the user, but used or over-ridden by a sub-class of &lt;code&gt;Net::Cmd&lt;/code&gt;</source>
          <target state="translated">Эти методы не предназначены для вызова пользователем, но используются или заменяются подклассом &lt;code&gt;Net::Cmd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c96be7d81aefe7494626f31fbf2d601d47ed4e3e" translate="yes" xml:space="preserve">
          <source>These methods are only testing the sign, and not the value.</source>
          <target state="translated">Эти методы только тестируют знак,а не значение.</target>
        </trans-unit>
        <trans-unit id="1d5446ceaa2f31e572217b447d4bad05a2bfe863" translate="yes" xml:space="preserve">
          <source>These methods are shorthand for calling &lt;code&gt;request()&lt;/code&gt; for the given method. The URL must have unsafe characters escaped and international domain names encoded. See &lt;code&gt;request()&lt;/code&gt; for valid options and a description of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55156f755c79786d47317ca2de0a12228b5b4b7" translate="yes" xml:space="preserve">
          <source>These methods are useful when writing your own test methods.</source>
          <target state="translated">Эти методы полезны при написании собственных методов тестирования.</target>
        </trans-unit>
        <trans-unit id="1371312bc20ca6b06acc065c53943c266c38f79b" translate="yes" xml:space="preserve">
          <source>These methods control where Test::Builder will print its output. They take either an open &lt;code&gt;$filehandle&lt;/code&gt; , a &lt;code&gt;$filename&lt;/code&gt; to open and write to or a &lt;code&gt;$scalar&lt;/code&gt; reference to append to. It will always return a &lt;code&gt;$filehandle&lt;/code&gt; .</source>
          <target state="translated">Эти методы определяют, где Test :: Builder будет печатать свой вывод. Они принимают либо открытый &lt;code&gt;$filehandle&lt;/code&gt; , либо &lt;code&gt;$filename&lt;/code&gt; для открытия и записи, либо ссылку на &lt;code&gt;$scalar&lt;/code&gt; для добавления. Он всегда будет возвращать &lt;code&gt;$filehandle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6256a8c8405e7801b12616fc7588a653b02503a" translate="yes" xml:space="preserve">
          <source>These methods control where Test::Builder will print its output. They take either an open &lt;code&gt;$filehandle&lt;/code&gt;, a &lt;code&gt;$filename&lt;/code&gt; to open and write to or a &lt;code&gt;$scalar&lt;/code&gt; reference to append to. It will always return a &lt;code&gt;$filehandle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dabfc6c3e23d636029050966dc499c5c862fee9" translate="yes" xml:space="preserve">
          <source>These methods get the values of similarly named fields within the OP data structure. See top of &lt;code&gt;op.h&lt;/code&gt; for more info.</source>
          <target state="translated">Эти методы получают значения полей с одинаковыми именами в структуре данных OP. См. &lt;code&gt;op.h&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="eac0ba268e5d0e742f5c1a8121218a2683f22449" translate="yes" xml:space="preserve">
          <source>These methods guarantee fast individual tests but require a re-organization of the original list or array. They only pay off if you have to test multiple values against the same array.</source>
          <target state="translated">Эти методы гарантируют быстрые индивидуальные тесты,но требуют реорганизации исходного списка или массива.Они окупаются только в том случае,если необходимо протестировать несколько значений в одном и том же массиве.</target>
        </trans-unit>
        <trans-unit id="f57ba0d1f35f964a5a1c34d55f9aeead1f7ad788" translate="yes" xml:space="preserve">
          <source>These methods have cycle detection and will throw an exception early if a cycle is detected. &lt;code&gt;uuid()&lt;/code&gt; is currently the only subroutine in this library that has a fallback behavior when cycles are detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb3b559e380c719f80028fb428c3eb720e12704" translate="yes" xml:space="preserve">
          <source>These methods install a transparent filter on the I/O stream that converts data from the specified encoding when it is read in from the stream. The result is always Unicode.</source>
          <target state="translated">Эти методы устанавливают прозрачный фильтр на поток ввода/вывода,который преобразует данные из указанной кодировки,когда они считываются из потока.Результатом всегда будет Unicode.</target>
        </trans-unit>
        <trans-unit id="f58c6a34e5787c6cc0d22a8ee189b8d36dae62d5" translate="yes" xml:space="preserve">
          <source>These methods modify the invocand object and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0828193002db36233bc401e0a0e9c0dbb462a1" translate="yes" xml:space="preserve">
          <source>These methods provide a user interface to the &lt;code&gt;Net::Cmd&lt;/code&gt; object.</source>
          <target state="translated">Эти методы предоставляют пользовательский интерфейс для объекта &lt;code&gt;Net::Cmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e225e7aa23799f06f35cd0332e8b4cde6a695883" translate="yes" xml:space="preserve">
          <source>These methods return lists of string values, which might be represented in the distmeta structure as arrayrefs or scalars:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff435d938391d9561763fbcab2d9f747b7f84a93" translate="yes" xml:space="preserve">
          <source>These methods set the size (in half-points, like 52 for 26-point) that these heading levels will appear as.</source>
          <target state="translated">Эти методы задают размер (в полуточках,как 52 для 26 точек),которым будут отображаться эти уровни заголовков.</target>
        </trans-unit>
        <trans-unit id="abcc7bd5fdde6b4a0c109a19d7071ed04915f8b9" translate="yes" xml:space="preserve">
          <source>These methods use commands that are not part of the RFC977 documentation. Some servers may not support all of them.</source>
          <target state="translated">В этих методах используются команды,не входящие в документацию RFC977.Некоторые серверы могут не поддерживать все из них.</target>
        </trans-unit>
        <trans-unit id="31ccd9bd046a9504a4b8ad4115c9067507a8e143" translate="yes" xml:space="preserve">
          <source>These modes are all actually set via a bitmask. Here is how the &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; constants are laid out. You can import the &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; constants via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(:fallbacks)&lt;/code&gt; , and you can import the generic bitmask constants via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(:fallback_all)&lt;/code&gt; .</source>
          <target state="translated">Все эти режимы фактически устанавливаются через битовую маску. Вот как &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; константы FB_ &lt;i&gt;XXX&lt;/i&gt; . Вы можете импортировать &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; константы через &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(:fallbacks)&lt;/code&gt; , и вы можете импортировать общие константы Bitmask через &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode qw(:fallback_all)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e33c5a40e1debe70ee0e42cb3c084926947443d" translate="yes" xml:space="preserve">
          <source>These modes are all actually set via a bitmask. Here is how the &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; constants are laid out. You can import the &lt;code&gt;FB_&lt;i&gt;XXX&lt;/i&gt;&lt;/code&gt; constants via &lt;code&gt;use Encode qw(:fallbacks)&lt;/code&gt;, and you can import the generic bitmask constants via &lt;code&gt;use Encode qw(:fallback_all)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d789a994adbfeec56de6cff1edba3230c60ae5bf" translate="yes" xml:space="preserve">
          <source>These modifiers are restored at the end of the enclosing group. For example,</source>
          <target state="translated">Эти модификаторы восстанавливаются в конце ограждающей группы.Например,</target>
        </trans-unit>
        <trans-unit id="36a2832964ad1656c58b1143307f7ac9e06be52f" translate="yes" xml:space="preserve">
          <source>These modifiers do not carry over into named subpatterns called in the enclosing group. In other words, a pattern such as &lt;code&gt;((?i)(?&amp;amp;&lt;i&gt;NAME&lt;/i&gt;))&lt;/code&gt; does not change the case-sensitivity of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b50f0d55e6d3bcc6eb1ad193029b6cf71ad0ceb" translate="yes" xml:space="preserve">
          <source>These modifiers do not carry over into named subpatterns called in the enclosing group. In other words, a pattern such as &lt;code&gt;((?i)(?&amp;amp;NAME))&lt;/code&gt; does not change the case-sensitivity of the &quot;NAME&quot; pattern.</source>
          <target state="translated">Эти модификаторы не переносятся в именованные подшаблоны, вызываемые во включающей группе. Другими словами, такой шаблон, как &lt;code&gt;((?i)(?&amp;amp;NAME))&lt;/code&gt; не изменяет чувствительность к регистру в шаблоне &amp;laquo;NAME&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="333ce465cc885bdd43387f970476181f3973f86d" translate="yes" xml:space="preserve">
          <source>These modifiers, all new in 5.14, affect which character-set rules (Unicode,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fbd761faf543e63a6416a5e28a730d54795855" translate="yes" xml:space="preserve">
          <source>These modifiers, all new in 5.14, affect which character-set rules (Unicode, etc.) are used, as described below in &lt;a href=&quot;#Character-set-modifiers&quot;&gt;Character set modifiers&lt;/a&gt;.</source>
          <target state="translated">Эти модификаторы, все новые в 5.14, влияют на то, какие правила набора символов (Unicode и т. Д.) Используются, как описано ниже в &lt;a href=&quot;#Character-set-modifiers&quot;&gt;разделе Модификаторы набора символов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2face06edd17affb51aa3f3b2560aa4d1613d318" translate="yes" xml:space="preserve">
          <source>These modules still function correctly, but their test suites will not pass. If you already have these modules installed then you can continue to use them. If you are trying to install them after upgrading Test::Builder you will need to force installation, or bypass the broken tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9708d2ade8d02334095230804c31cb6c6f062f" translate="yes" xml:space="preserve">
          <source>These names are case-insensitive. By default (if specification is omitted), 'shifted' is adopted.</source>
          <target state="translated">Эти имена не чувствительны к регистру.По умолчанию (если спецификация опущена),принимается 'сдвинутая'.</target>
        </trans-unit>
        <trans-unit id="a2a7bae57c0b7e47324c6368dda30c35ad91dca7" translate="yes" xml:space="preserve">
          <source>These notices must be retained in any copies of any part of this documentation and/or software.</source>
          <target state="translated">Эти уведомления должны быть сохранены в любых копиях любой части данной документации и/или программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="efbc4f1ae4d272c0d4681905f6fb23798e4783eb" translate="yes" xml:space="preserve">
          <source>These numbers was achieved Apr 2004 with ActivePerl-5.8.3 running under Linux on a P4 2.8 GHz CPU. The last 5 entries differ by being pure perl implementations of the algorithms, which explains why they are so slow.</source>
          <target state="translated">Эти цифры были достигнуты в апреле 2004 года с ActivePerl-5.8.3,работающей под Linux на процессоре P4 2.8 ГГц.Последние 5 записей отличаются тем,что являются чистыми реализациями алгоритмов на perl,что объясняет их медленную работу.</target>
        </trans-unit>
        <trans-unit id="397e9a46a749c3f6612fa5900c82fbeb3d54197f" translate="yes" xml:space="preserve">
          <source>These old, perl3-era utilities have been deprecated in favour of &lt;code&gt;h2xs&lt;/code&gt; for a long time. As of Perl 5.26, they have been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16394db34a86c1309e6f32038763254bbfec1e7" translate="yes" xml:space="preserve">
          <source>These operators are documented in &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Эти операторы задокументированы в &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="902ffcf3ea51513d56fbec3ce0266f1b87291429" translate="yes" xml:space="preserve">
          <source>These operators are documented in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Эти операторы задокументированы в &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23835ab35bd3941ef690822a20797ba91ee28d2e" translate="yes" xml:space="preserve">
          <source>These operators are exempt from the &quot;looks like a function rule&quot; described above. That is, an opening parenthesis after the operator does not affect how much of the following code constitutes the argument. Put the opening parentheses before the operator to separate it from code that follows (this applies only to operators with higher precedence than unary operators, of course):</source>
          <target state="translated">Эти операторы освобождаются от &quot;похожих на правило функции&quot;,описанных выше.То есть открывающаяся скобка после оператора не влияет на то,сколько из следующего кода составляет аргумент.Поставьте открывающие скобки перед оператором,чтобы отделить его от приведенного кода (конечно,это относится только к операторам,имеющим больший приоритет,чем унарные операторы):</target>
        </trans-unit>
        <trans-unit id="6b54b9bb627d1cf1404f3b5dab668ec8269f4aa6" translate="yes" xml:space="preserve">
          <source>These operators obtain the information described in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;, if you have the privileges necessary to retrieve the named user's UAF information via &lt;code&gt;sys$getuai&lt;/code&gt; . If not, then only the &lt;code&gt;$name&lt;/code&gt; , &lt;code&gt;$uid&lt;/code&gt; , and &lt;code&gt;$gid&lt;/code&gt; items are returned. The &lt;code&gt;$dir&lt;/code&gt; item contains the login directory in VMS syntax, while the &lt;code&gt;$comment&lt;/code&gt; item contains the login directory in Unix syntax. The &lt;code&gt;$gcos&lt;/code&gt; item contains the owner field from the UAF record. The &lt;code&gt;$quota&lt;/code&gt; item is not used.</source>
          <target state="translated">Эти операторы получают информацию, описанную в &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; , если у вас есть права, необходимые для получения информации &lt;code&gt;sys$getuai&lt;/code&gt; указанного пользователя через sys $ getuai . Если нет, то возвращаются только элементы &lt;code&gt;$name&lt;/code&gt; , &lt;code&gt;$uid&lt;/code&gt; и &lt;code&gt;$gid&lt;/code&gt; . Элемент &lt;code&gt;$dir&lt;/code&gt; содержит каталог входа в систему в синтаксисе VMS, а элемент &lt;code&gt;$comment&lt;/code&gt; содержит каталог входа в систему в синтаксисе Unix. Элемент &lt;code&gt;$gcos&lt;/code&gt; содержит поле владельца из записи UAF . Элемент &lt;code&gt;$quota&lt;/code&gt; не используется.</target>
        </trans-unit>
        <trans-unit id="67e9c8225d78cd00aa38baba429b7de497a323bb" translate="yes" xml:space="preserve">
          <source>These operators obtain the information described in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;, if you have the privileges necessary to retrieve the named user's UAF information via &lt;code&gt;sys$getuai&lt;/code&gt;. If not, then only the &lt;code&gt;$name&lt;/code&gt;, &lt;code&gt;$uid&lt;/code&gt;, and &lt;code&gt;$gid&lt;/code&gt; items are returned. The &lt;code&gt;$dir&lt;/code&gt; item contains the login directory in VMS syntax, while the &lt;code&gt;$comment&lt;/code&gt; item contains the login directory in Unix syntax. The &lt;code&gt;$gcos&lt;/code&gt; item contains the owner field from the UAF record. The &lt;code&gt;$quota&lt;/code&gt; item is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e657656c9789c3619d255f79ac9b3a6c835215" translate="yes" xml:space="preserve">
          <source>These ops are not included in :base_core because of the risk of them being used to generate floating point exceptions (which would have to be caught using a $SIG{FPE} handler).</source>
          <target state="translated">Эти оп не включены в :base_core из-за риска их использования для генерации исключений с плавающей точкой (которые должны быть пойманы с помощью обработчика $SIG{FPE}).</target>
        </trans-unit>
        <trans-unit id="d5ea0da5f8ce978d8d492f686d44331bb4fc3946" translate="yes" xml:space="preserve">
          <source>These ops are not included in :base_core because they have an effect beyond the scope of the compartment.</source>
          <target state="translated">Эти опции не включены в :base_core,потому что они имеют эффект,выходящий за пределы помещения.</target>
        </trans-unit>
        <trans-unit id="dc4dfb8577c0955249e95ba26e17b894dbf4b7a2" translate="yes" xml:space="preserve">
          <source>These ops are related to multi-threading.</source>
          <target state="translated">Эти операции связаны с многопоточностью.</target>
        </trans-unit>
        <trans-unit id="2901e27ec7bca28af121ed51d6417c782431820f" translate="yes" xml:space="preserve">
          <source>These ops enable</source>
          <target state="translated">Эти операции позволяют</target>
        </trans-unit>
        <trans-unit id="e55c6aacfd2933ba2a5d8d99593dbebe1787988f" translate="yes" xml:space="preserve">
          <source>These options affect which handler will be used for subsequently installed signals.</source>
          <target state="translated">Эти опции влияют на то,какой обработчик будет использоваться для последующих установленных сигналов.</target>
        </trans-unit>
        <trans-unit id="29c586cad3979b967f1d8c83a031669d4e85f7d5" translate="yes" xml:space="preserve">
          <source>These options control the 'vertical display' of opcodes. The display 'order' is also called 'mode' elsewhere in this document.</source>
          <target state="translated">Эти опции управляют &quot;вертикальным отображением&quot; опкодов.Отображение &quot;порядка&quot; также называется &quot;режимом&quot; в другом месте этого документа.</target>
        </trans-unit>
        <trans-unit id="b5693ca212dce09ab36fc48e6272f7336e49446b" translate="yes" xml:space="preserve">
          <source>These options select the line-style (or just style) used to render each opcode, and dictates what info is actually printed into each line.</source>
          <target state="translated">Эти опции выбирают стиль линии (или просто стиль),используемый для отображения каждого опкода,и диктуют,какая информация на самом деле распечатывается в каждой строке.</target>
        </trans-unit>
        <trans-unit id="822ae20d8832a94dbc806795384f0c1cb46d5024" translate="yes" xml:space="preserve">
          <source>These packages can all be downloaded by searching in the Download Center at &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt;. (Providing exact links to these packages has proven a pointless task because the links keep on changing so often.)</source>
          <target state="translated">Все эти пакеты можно загрузить, выполнив поиск в центре загрузки по адресу &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt; . (Предоставление точных ссылок на эти пакеты оказалось бессмысленной задачей, потому что ссылки продолжают меняться очень часто.)</target>
        </trans-unit>
        <trans-unit id="a96b412b0738a7917698193862d504e1b28178d5" translate="yes" xml:space="preserve">
          <source>These packages can all be downloaded by searching in the Download Center at &lt;a href=&quot;https://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;https://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt;. (Providing exact links to these packages has proven a pointless task because the links keep on changing so often.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00985d023d49949f9c18d4b6917b5fcc1fe8b04" translate="yes" xml:space="preserve">
          <source>These packages can be downloaded by searching in the Download Center at &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt;. (Providing exact links to these packages has proven a pointless task because the links keep on changing so often.)</source>
          <target state="translated">Эти пакеты можно загрузить, выполнив поиск в Центре загрузок по адресу &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt; . (Предоставление точных ссылок на эти пакеты оказалось бессмысленной задачей, потому что ссылки продолжают меняться очень часто.)</target>
        </trans-unit>
        <trans-unit id="768a190e5a4a6b2a5a78de898be2b0088fa40b69" translate="yes" xml:space="preserve">
          <source>These packages can be downloaded by searching in the Download Center at &lt;a href=&quot;https://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;https://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt;. (Providing exact links to these packages has proven a pointless task because the links keep on changing so often.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6b901a4b16ea8fd5c1a17b0f5f523262d0ae63" translate="yes" xml:space="preserve">
          <source>These packages can both be downloaded by searching in the Download Center at &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt;. (Providing exact links to these packages has proven a pointless task because the links keep on changing so often.)</source>
          <target state="translated">Оба этих пакета можно загрузить, выполнив поиск в Центре загрузок по адресу &lt;a href=&quot;http://www.microsoft.com/downloads/search.aspx?displaylang=en&quot;&gt;http://www.microsoft.com/downloads/search.aspx?displaylang=en&lt;/a&gt; . (Предоставление точных ссылок на эти пакеты оказалось бессмысленной задачей, потому что ссылки продолжают меняться очень часто.)</target>
        </trans-unit>
        <trans-unit id="b0b087e3db9d0ec8ccf2941b80cf3aaf473d4556" translate="yes" xml:space="preserve">
          <source>These perl routines currently (as of Perl v.5.8.6) cannot handle passed inf.</source>
          <target state="translated">Эти perl-процедуры в настоящее время (начиная с версии Perl v.5.8.6)не могут обрабатывать передаваемые инф.</target>
        </trans-unit>
        <trans-unit id="5ee158f8c062eca4d28a3ec2d9f8d880c70ecea2" translate="yes" xml:space="preserve">
          <source>These possessive quantifiers represent a special case of a more general concept, the</source>
          <target state="translated">Эти притягательные квантификаторы представляют собой особый случай более общего понятия,т.е.</target>
        </trans-unit>
        <trans-unit id="bfd6c7d2c77daf624f0f4dda10d349c1b00557da" translate="yes" xml:space="preserve">
          <source>These properties are &lt;code&gt;\b&lt;/code&gt; (without braces), &lt;code&gt;\B&lt;/code&gt; (without braces), &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , and all the Posix character classes</source>
          <target state="translated">Этими свойствами являются &lt;code&gt;\b&lt;/code&gt; (без фигурных скобок), &lt;code&gt;\B&lt;/code&gt; (без фигурных скобок), &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; и все классы символов Posix.</target>
        </trans-unit>
        <trans-unit id="75c6e853336d06e89c7d24890512216ff9df496b" translate="yes" xml:space="preserve">
          <source>These properties are &lt;code&gt;\b&lt;/code&gt; (without braces), &lt;code&gt;\B&lt;/code&gt; (without braces), &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\S&lt;/code&gt;, &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, and all the Posix character classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0cd3dd6b0da7da2a477124699c51a8786143da" translate="yes" xml:space="preserve">
          <source>These provide access to internal state and object instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d4c7299af6c451da747abf6a31ed43bc6d224c" translate="yes" xml:space="preserve">
          <source>These quantifiers will try to match as much of the string as possible, while still allowing the regex to match. So we have</source>
          <target state="translated">Эти квантификаторы будут пытаться соответствовать как можно большему количеству строк,позволяя при этом регрессу совпадать.Итак,у нас есть</target>
        </trans-unit>
        <trans-unit id="b9b2f742b1b0fcfd6307ec607f8aee70bbd6ff21" translate="yes" xml:space="preserve">
          <source>These readers return hashrefs of arbitrary unblessed data structures, each described more fully in the specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26153a279914ed6ae972bab9be5035c10687695d" translate="yes" xml:space="preserve">
          <source>These results are &quot;meta&quot; information about the total results of an individual test program.</source>
          <target state="translated">Эти результаты являются &quot;мета&quot; информацией об общих результатах индивидуальной тестовой программы.</target>
        </trans-unit>
        <trans-unit id="2bea10980ed9e4e8701806a5267309dec8b36b3d" translate="yes" xml:space="preserve">
          <source>These results refer to individual tests which are run.</source>
          <target state="translated">Эти результаты относятся к индивидуальным тестам,которые проводятся.</target>
        </trans-unit>
        <trans-unit id="8893a5b7811d1faa2be1d81844c471e18cd604f6" translate="yes" xml:space="preserve">
          <source>These round modes always round in the same direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39fb8588e2e03cf43f722c60791932347b9ede7" translate="yes" xml:space="preserve">
          <source>These rounding modes round to the nearest digit. They differ in how they determine which way to round in the ambiguous case when there is a tie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99e408a46643ae41ce4a2a5b658c331ee2d8a0f" translate="yes" xml:space="preserve">
          <source>These routines all create system-specific portability problems. As noted elsewhere, Perl is at the mercy of your C libraries for much of its system behavior. It's probably safest to assume broken SysV semantics for signals and to stick with simple TCP and UDP socket operations; e.g., don't try to pass open file descriptors over a local UDP datagram socket if you want your code to stand a chance of being portable.</source>
          <target state="translated">Все эти процедуры создают проблемы переноса в зависимости от системы.Как уже отмечалось,Perl находится во власти ваших библиотек C для большей части своего системного поведения.Вероятно,безопаснее всего предположить нарушенную семантику SysV для сигналов и придерживаться простых операций с TCP и UDP сокетами;например,не пытайтесь передавать открытые файловые дескрипторы через локальный UDP сокет-датаграмму,если вы хотите,чтобы ваш код имел шанс быть переносимым.</target>
        </trans-unit>
        <trans-unit id="7accb91a83a147e188cfdb7ea0bdeddeb0f7f3a7" translate="yes" xml:space="preserve">
          <source>These routines allow you to parse file paths into their directory, filename and suffix.</source>
          <target state="translated">Эти процедуры позволяют вам разобрать пути к файлам в их каталоге,имя файла и суффикс.</target>
        </trans-unit>
        <trans-unit id="b2c49f2650fd89670405ec1fbc536b94e9ae8bdf" translate="yes" xml:space="preserve">
          <source>These routines are all documented in the Locale::Codes::API man page.</source>
          <target state="translated">Все эти процедуры задокументированы в man-странице Locale::Codes::API.</target>
        </trans-unit>
        <trans-unit id="5bd965d62212a6eeb3c7fb76c8f854332dc29f76" translate="yes" xml:space="preserve">
          <source>These routines are quite efficient and yet are always guaranteed to agree with &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;. We manage this by caching the start times of any months we've seen before. If we know the start time of the month, we can always calculate any time within the month. The start times are calculated using a mathematical formula. Unlike other algorithms that do multiple calls to &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти процедуры довольно эффективны, но всегда гарантируют согласование с &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; . Мы справляемся с этим, кэшируя время начала любых месяцев, которые мы видели раньше. Если мы знаем время начала месяца, мы всегда можем рассчитать любое время в течение месяца. Время начала рассчитывается с использованием математической формулы. В отличие от других алгоритмов, которые выполняют несколько вызовов &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54b6203ba949c1c3d7c2acb41e2e6e57811ab704" translate="yes" xml:space="preserve">
          <source>These routines are quite efficient and yet are always guaranteed to agree with &lt;code&gt;localtime()&lt;/code&gt; and &lt;code&gt;gmtime()&lt;/code&gt;. We manage this by caching the start times of any months we've seen before. If we know the start time of the month, we can always calculate any time within the month. The start times are calculated using a mathematical formula. Unlike other algorithms that do multiple calls to &lt;code&gt;gmtime()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e296b7f9a5e96b639ca1839fa4442d3f45e92709" translate="yes" xml:space="preserve">
          <source>These routines are the same as their counterparts in the system C library. In list context, the return values from the various get routines are as follows:</source>
          <target state="translated">Эти процедуры такие же,как и их аналоги в библиотеке системы C.В контексте списка,возвращаемые значения из различных подпрограмм get выглядят следующим образом:</target>
        </trans-unit>
        <trans-unit id="cc1ea3e493711677c93d92be2ec1c6ec9a5ee909" translate="yes" xml:space="preserve">
          <source>These routines used to be called &lt;code&gt;perl_call_sv&lt;/code&gt; , etc., before Perl v5.6.0, but those names are now deprecated; macros of the same name are provided for compatibility.</source>
          <target state="translated">Эти процедуры раньше назывались &lt;code&gt;perl_call_sv&lt;/code&gt; и т. Д. До Perl v5.6.0, но теперь эти имена устарели; одноименные макросы предоставляются для совместимости.</target>
        </trans-unit>
        <trans-unit id="93e20f0b82d868c177a926520e899384ae0d6b0f" translate="yes" xml:space="preserve">
          <source>These routines used to be called &lt;code&gt;perl_call_sv&lt;/code&gt;, etc., before Perl v5.6.0, but those names are now deprecated; macros of the same name are provided for compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb1fb969b6c77a6565b33ce0e7b7cbfccc95cfb" translate="yes" xml:space="preserve">
          <source>These rules are complicated, but the goal is for them to do what you want (even if you don't quite understand why they are doing it). For example:</source>
          <target state="translated">Эти правила сложны,но их цель-сделать то,что вы хотите (даже если вы не совсем понимаете,почему они это делают).Например:</target>
        </trans-unit>
        <trans-unit id="c63bc3c15060a430def6be9fa36745fbd5e2304e" translate="yes" xml:space="preserve">
          <source>These rules were designed for compactness of expression, rather than legibility and maintainability. The &lt;a href=&quot;#%2Fx-and-%2Fxx&quot;&gt;&quot;/x and /xx&quot;&lt;/a&gt; pattern modifiers allow you to insert white space to improve readability. And use of &lt;code&gt;&lt;a href=&quot;re#%27strict%27-mode&quot;&gt;re 'strict'&lt;/a&gt;&lt;/code&gt; adds extra checking to catch some typos that might silently compile into something unintended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c39d28608973eadb707da3830a9f4611c69ff29" translate="yes" xml:space="preserve">
          <source>These select Unicode rules. That means that in double-quotish strings, the string is always converted to UTF-8 to force a Unicode interpretation (you can &lt;code&gt;utf8::downgrade()&lt;/code&gt; afterwards to convert back to non-UTF8, if possible). In regular expression patterns, the conversion isn't done, but if the character set modifier would otherwise be &lt;code&gt;/d&lt;/code&gt;, it is changed to &lt;code&gt;/u&lt;/code&gt; .</source>
          <target state="translated">Они выбирают правила Unicode. Это означает, что в строках, заключенных в двойные кавычки, строка всегда преобразуется в UTF-8 для принудительной интерпретации Unicode (вы можете впоследствии использовать &lt;code&gt;utf8::downgrade()&lt;/code&gt; чтобы преобразовать обратно в формат, отличный от UTF8, если это возможно). В шаблонах регулярных выражений преобразование не выполняется, но если в противном случае модификатор набора символов был бы &lt;code&gt;/d&lt;/code&gt; , он заменяется на &lt;code&gt;/u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b576853b18c74e3e57c9d5a616cf25646efde147" translate="yes" xml:space="preserve">
          <source>These select Unicode rules. That means that in double-quotish strings, the string is always converted to UTF-8 to force a Unicode interpretation (you can &lt;code&gt;utf8::downgrade()&lt;/code&gt; afterwards to convert back to non-UTF8, if possible). In regular expression patterns, the conversion isn't done, but if the character set modifier would otherwise be &lt;code&gt;/d&lt;/code&gt;, it is changed to &lt;code&gt;/u&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33be304d6b7f8ebe4e43f5c0dfa6aefb4009eb4" translate="yes" xml:space="preserve">
          <source>These sets of one-liners are equivalent:</source>
          <target state="translated">Эти наборы однослойных эквивалентны:</target>
        </trans-unit>
        <trans-unit id="52c95446c9ca7d3ffaa7ed7da6e1f21bf02cdc2e" translate="yes" xml:space="preserve">
          <source>These settings can be overridden globally too:</source>
          <target state="translated">Эти настройки могут быть переопределены и глобально:</target>
        </trans-unit>
        <trans-unit id="cbc91f3641f463359dfc31290abbc3a64d30454a" translate="yes" xml:space="preserve">
          <source>These should be familiar operations, with the exception of &lt;code&gt;av_unshift&lt;/code&gt; . This routine adds &lt;code&gt;num&lt;/code&gt; elements at the front of the array with the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; value. You must then use &lt;code&gt;av_store&lt;/code&gt; (described below) to assign values to these new elements.</source>
          <target state="translated">Это должны быть знакомые операции, за исключением &lt;code&gt;av_unshift&lt;/code&gt; . Эта процедура добавляет &lt;code&gt;num&lt;/code&gt; элементов в начало массива со значением &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Затем вы должны использовать &lt;code&gt;av_store&lt;/code&gt; (описанный ниже) для присвоения значений этим новым элементам.</target>
        </trans-unit>
        <trans-unit id="e729774b9950231de8aa37e9ccc295a6e06651f9" translate="yes" xml:space="preserve">
          <source>These should be familiar operations, with the exception of &lt;code&gt;av_unshift&lt;/code&gt;. This routine adds &lt;code&gt;num&lt;/code&gt; elements at the front of the array with the &lt;code&gt;undef&lt;/code&gt; value. You must then use &lt;code&gt;av_store&lt;/code&gt; (described below) to assign values to these new elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f249c892c517536f796cbacefae284ca0ae8032" translate="yes" xml:space="preserve">
          <source>These should give you an overall feel for how modules are laid out and written.</source>
          <target state="translated">Это должно дать вам общее представление о том,как разложены и написаны модули.</target>
        </trans-unit>
        <trans-unit id="9a888f57551ca71c1272e83f90d05d460b30fbf3" translate="yes" xml:space="preserve">
          <source>These signal to a formatter that if it is to hyphenate &quot;sigaction&quot; or &quot;manuscript&quot;, then it should be done as &quot;sig-</source>
          <target state="translated">Эти сигналы форматировщику,что если дефисом является &quot;сигкация&quot; или &quot;манускрипт&quot;,то это должно быть сделано как &quot;сиг -</target>
        </trans-unit>
        <trans-unit id="a76776d9b84dd64fcd8c2f12ffb416173943a78e" translate="yes" xml:space="preserve">
          <source>These signals usually indicate a serious problem with the Perl interpreter or with your script. They are ABRT, BUS, EMT, FPE, ILL, QUIT, SEGV, SYS and TRAP.</source>
          <target state="translated">Эти сигналы обычно указывают на серьезную проблему с интерпретатором Perl или с вашим сценарием.Это ABRT,BUS,EMT,FPE,ILL,QUIT,SEGV,SYS и TRAP.</target>
        </trans-unit>
        <trans-unit id="7ee071669b1efa68f9a3156de49d5e707921d24a" translate="yes" xml:space="preserve">
          <source>These solutions can have far-reaching effects on your system and on the way you write your CGI programs, so investigate them with care.</source>
          <target state="translated">Эти решения могут иметь далеко идущие последствия для вашей системы и для того,как вы пишете свои программы CGI,поэтому изучайте их с осторожностью.</target>
        </trans-unit>
        <trans-unit id="b7b244316194399450de143deaa053b425f44f52" translate="yes" xml:space="preserve">
          <source>These special patterns are generally of the form &lt;code&gt;(*&lt;i&gt;VERB&lt;/i&gt;:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;. Unless otherwise stated the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1c9d3db11663506b814ed4474ccb898e81f0dd" translate="yes" xml:space="preserve">
          <source>These special patterns are generally of the form &lt;code&gt;(*VERB:ARG)&lt;/code&gt;. Unless otherwise stated the ARG argument is optional; in some cases, it is forbidden.</source>
          <target state="translated">Эти специальные шаблоны обычно имеют форму &lt;code&gt;(*VERB:ARG)&lt;/code&gt; . Если не указано иное, аргумент ARG является необязательным; в некоторых случаях это запрещено.</target>
        </trans-unit>
        <trans-unit id="44f08bb0d22471168dee4b6292fc949cf275107b" translate="yes" xml:space="preserve">
          <source>These special values become JSON true and JSON false values, respectively. You can also use &lt;code&gt;\1&lt;/code&gt; and &lt;code&gt;\0&lt;/code&gt; directly if you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6fd84e089df12e602215034c3af5ac8fb7e11a" translate="yes" xml:space="preserve">
          <source>These special variables, like the &lt;code&gt;%+&lt;/code&gt; hash and the numbered match variables (&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; , etc.) are dynamically scoped until the end of the enclosing block or until the next successful match, whichever comes first. (See &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.)</source>
          <target state="translated">Эти специальные переменные, такие как хэш &lt;code&gt;%+&lt;/code&gt; и пронумерованные переменные соответствия ( &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; и т. Д.), Имеют динамическую область видимости до конца включающего блока или до следующего успешного совпадения, в зависимости от того, что наступит раньше. (См. &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;Составные операторы в perlsyn&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="f99b2f0c65b0d18630113afe2aefcc29ab8a0144" translate="yes" xml:space="preserve">
          <source>These special variables, like the &lt;code&gt;%+&lt;/code&gt; hash and the numbered match variables (&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4f20c17b5b03a6a3deb3a04503955765039642" translate="yes" xml:space="preserve">
          <source>These strengths make it especially popular with web developers and system administrators. Mathematicians, geneticists, journalists, managers and many other people also use Perl.</source>
          <target state="translated">Эти сильные стороны делают его особенно популярным среди веб-разработчиков и системных администраторов.Математики,генетики,журналисты,менеджеры и многие другие люди также используют Perl.</target>
        </trans-unit>
        <trans-unit id="a952f4bd002dc5bdafb796a94c6eaa4765c9b45b" translate="yes" xml:space="preserve">
          <source>These strings do not match /\Bam\B/</source>
          <target state="translated">Эти строки не совпадают /\Bam\B/.</target>
        </trans-unit>
        <trans-unit id="2125a4453223ddc6316d0fee4d859469467def9f" translate="yes" xml:space="preserve">
          <source>These strings do not match /\b'\b/.</source>
          <target state="translated">Эти строки не совпадают /\b'\b/.</target>
        </trans-unit>
        <trans-unit id="8aa64b62307f4ac9360d6b96b7d4a2888dc9ba0f" translate="yes" xml:space="preserve">
          <source>These strings do not match /\bPerl\b/.</source>
          <target state="translated">Эти строки не совпадают /\bPerl\b/.</target>
        </trans-unit>
        <trans-unit id="1ece96fea144561ec8d240482b56438a3b8cd021" translate="yes" xml:space="preserve">
          <source>These subroutines are only visible within the block in which they are declared, and only after that declaration:</source>
          <target state="translated">Эти подпрограммы видны только внутри блока,в котором они объявлены,и только после этого объявления:</target>
        </trans-unit>
        <trans-unit id="5002f9badee48e82e2e716cfadae24bcbea4d597" translate="yes" xml:space="preserve">
          <source>These symbolic constants are used by the &lt;code&gt;Level&lt;/code&gt; option in the constructor.</source>
          <target state="translated">Эти символические константы используются параметром &amp;laquo; &lt;code&gt;Level&lt;/code&gt; в конструкторе.</target>
        </trans-unit>
        <trans-unit id="de652943440f246885efed6bc50624dc94d59ab4" translate="yes" xml:space="preserve">
          <source>These symbolic constants are used by the &lt;code&gt;Method&lt;/code&gt; option in the constructor.</source>
          <target state="translated">Эти символические константы используются параметром &lt;code&gt;Method&lt;/code&gt; в конструкторе.</target>
        </trans-unit>
        <trans-unit id="4ec9419fff6178cfe016f55595d7a90364f97f63" translate="yes" xml:space="preserve">
          <source>These symbolic constants are used by the &lt;code&gt;Strategy&lt;/code&gt; option in the constructor.</source>
          <target state="translated">Эти символические константы используются параметром &amp;laquo; &lt;code&gt;Strategy&lt;/code&gt; в конструкторе.</target>
        </trans-unit>
        <trans-unit id="09599ebf73a41d7f3fd327344d88fceb70681aab" translate="yes" xml:space="preserve">
          <source>These symbolic constants are used by the &lt;code&gt;flush&lt;/code&gt; method.</source>
          <target state="translated">Эти символические константы используются методом &lt;code&gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="430e03746fb928435d7aa08e0e3eea945da77d4a" translate="yes" xml:space="preserve">
          <source>These symbols appear before the op-name, and indicate the B:: namespace that represents the ops in your Perl code.</source>
          <target state="translated">Эти символы появляются перед именем операции и обозначают пространство имён B::,которое представляет операционные в вашем Perl коде.</target>
        </trans-unit>
        <trans-unit id="aded896deefbdaf418ca756d53862b007b01f8b9" translate="yes" xml:space="preserve">
          <source>These terms are interpreted as described in IETF RFC 2119.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbd7a997bbaaa84741a5e1fbd14e323c239d540" translate="yes" xml:space="preserve">
          <source>These terms are your choice of any of (1) the Perl Artistic Licence, or (2) version 2 of the GNU General Public License as published by the Free Software Foundation, or (3) any later version of the GNU General Public License.</source>
          <target state="translated">Эти условия являются вашим выбором любой из (1)художественной лицензии Perl или (2)версии 2 Стандартной общественной лицензии GNU,опубликованной Фондом свободного программного обеспечения,или (3)любой более поздней версии Стандартной общественной лицензии GNU.</target>
        </trans-unit>
        <trans-unit id="5c298e17caacd4174da139fecae9a62cf22ed5cc" translate="yes" xml:space="preserve">
          <source>These tests are expected to succeed. Usually, most or all of your tests are in this category. If a normal test doesn't succeed, then that means that something is</source>
          <target state="translated">Ожидается,что эти тесты будут успешными.Обычно большинство или все ваши тесты попадают в эту категорию.Если обычный тест не удается,то это значит,что что-то</target>
        </trans-unit>
        <trans-unit id="07325952f04a521e228140b025365f61c44af25f" translate="yes" xml:space="preserve">
          <source>These three macros are used to change a memory buffer size or to free a piece of memory no longer needed. The arguments to &lt;code&gt;Renew&lt;/code&gt; and &lt;code&gt;Renewc&lt;/code&gt; match those of &lt;code&gt;New&lt;/code&gt; and &lt;code&gt;Newc&lt;/code&gt; with the exception of not needing the &quot;magic cookie&quot; argument.</source>
          <target state="translated">Эти три макроса используются для изменения размера буфера памяти или для освобождения части памяти, которая больше не нужна. Аргументы &lt;code&gt;Renew&lt;/code&gt; и &lt;code&gt;Renewc&lt;/code&gt; совпадают с аргументами &lt;code&gt;New&lt;/code&gt; и &lt;code&gt;Newc&lt;/code&gt; , за исключением того, что аргумент &amp;laquo;magic cookie&amp;raquo; не нужен.</target>
        </trans-unit>
        <trans-unit id="3b6ba4dd1926405bd4af1077435f09d7c0a86a11" translate="yes" xml:space="preserve">
          <source>These three macros are used to move, copy, or zero out previously allocated memory. The &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; arguments point to the source and destination starting points. Perl will move, copy, or zero out &lt;code&gt;number&lt;/code&gt; instances of the size of the &lt;code&gt;type&lt;/code&gt; data structure (using the &lt;code&gt;sizeof&lt;/code&gt; function).</source>
          <target state="translated">Эти три макроса используются для перемещения, копирования или обнуления ранее выделенной памяти. &lt;code&gt;source&lt;/code&gt; и точки &lt;code&gt;dest&lt;/code&gt; аргументы указывают источника и назначения исходных точек. Perl будет перемещать, копировать или обнулять &lt;code&gt;number&lt;/code&gt; экземпляров размера структуры данных &lt;code&gt;type&lt;/code&gt; (используя функцию &lt;code&gt;sizeof&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="335c760b89ccd866bd4e5cd7ec4e5ef4c599cbd4" translate="yes" xml:space="preserve">
          <source>These two export tags globally modify the default flags that bsd_glob() and, except on VMS, Perl's built-in &lt;code&gt;&lt;a href=&quot;../functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; operator use. &lt;code&gt;GLOB_NOCASE&lt;/code&gt; is turned on or off, respectively.</source>
          <target state="translated">Эти два тега экспорта глобально изменяют флаги по умолчанию, используемые bsd_glob () и, за исключением VMS, встроенным оператором &lt;code&gt;&lt;a href=&quot;../functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; в Perl . &lt;code&gt;GLOB_NOCASE&lt;/code&gt; соответственно включен или выключен.</target>
        </trans-unit>
        <trans-unit id="2f0953e19b1283bac80bee4d4c7b6b45f4e0bf61" translate="yes" xml:space="preserve">
          <source>These two export tags globally modify the default flags that bsd_glob() and, except on VMS, Perl's built-in &lt;code&gt;glob&lt;/code&gt; operator use. &lt;code&gt;GLOB_NOCASE&lt;/code&gt; is turned on or off, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660fc7e9efd93a7abe465c81de57e11a5045a23" translate="yes" xml:space="preserve">
          <source>These two features are available starting with Perl 5.16.</source>
          <target state="translated">Эти две функции доступны,начиная с Perl 5.16.</target>
        </trans-unit>
        <trans-unit id="fa5480402538907c3c246c95ce18885b4ae5225b" translate="yes" xml:space="preserve">
          <source>These two handles are held in the array part of the GLOB until either &lt;code&gt;reader&lt;/code&gt; or &lt;code&gt;writer&lt;/code&gt; is called.</source>
          <target state="translated">Эти два дескриптора удерживаются в части массива GLOB до тех пор, пока не будет вызван &lt;code&gt;reader&lt;/code&gt; или &lt;code&gt;writer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f87921e5dc8828d5a6d9ea360bbab6bf450027" translate="yes" xml:space="preserve">
          <source>These two lower level macros are defined, but must only be used when dealing with keys that are not &lt;code&gt;SV*&lt;/code&gt; s:</source>
          <target state="translated">Эти два макроса нижнего уровня определены, но должны использоваться только при работе с ключами, которые не являются &lt;code&gt;SV*&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b2d573ca29281a8113cbc1782d1b335ee12feb43" translate="yes" xml:space="preserve">
          <source>These two lower level macros are defined, but must only be used when dealing with keys that are not &lt;code&gt;SV*&lt;/code&gt;s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca39330e5c20e1239e2de6584e211ecc882f376" translate="yes" xml:space="preserve">
          <source>These two methods are discussed in the section &quot;Controlling Lookup Failure&quot;.</source>
          <target state="translated">Эти два метода обсуждаются в разделе &quot;Управление сбоем при поиске&quot;.</target>
        </trans-unit>
        <trans-unit id="0b5a74bc9d562e1d07daa7fdb3ddf9da715c3433" translate="yes" xml:space="preserve">
          <source>These two methods return the pad names, using B::SPECIAL objects for null pointers and B::PADNAME objects otherwise.</source>
          <target state="translated">Эти два метода возвращают имена пэдов,используя B::SPECIAL объекты для нулевых указателей и B::PADNAME объекты в противном случае.</target>
        </trans-unit>
        <trans-unit id="74ded97cfff6de6cbb1491c5e4159e3babfbcd36" translate="yes" xml:space="preserve">
          <source>These two parameters are used to specify the ambient pragmas in the format used by the special variables $^H and ${^WARNING_BITS}.</source>
          <target state="translated">Эти два параметра используются для задания окружающих прагм в формате,используемом специальными переменными $^H и ${^WARNING_BITS}.</target>
        </trans-unit>
        <trans-unit id="668c2e486db55d10e5d748ec32a4297d24e80364" translate="yes" xml:space="preserve">
          <source>These two values for</source>
          <target state="translated">Эти два значения для</target>
        </trans-unit>
        <trans-unit id="fded399d428f7e457d56603aa714f9152134fea1" translate="yes" xml:space="preserve">
          <source>These utilities help manage extra Perl modules that don't come with the perl distribution.</source>
          <target state="translated">Эти утилиты помогают управлять дополнительными модулями Perl,которые не поставляются с дистрибутивом perl.</target>
        </trans-unit>
        <trans-unit id="25a3a72bd29e8059a94921c647bd6ce419cc4377" translate="yes" xml:space="preserve">
          <source>These values will not change for the duration of the tied hash</source>
          <target state="translated">Эти значения не будут изменяться в течение всего времени связанного хэша.</target>
        </trans-unit>
        <trans-unit id="32b1d023c49a0c39aa9dd2f2164ec0cee979dc1b" translate="yes" xml:space="preserve">
          <source>These variables are global to an entire process. They are shared between all interpreters and all threads in a process.</source>
          <target state="translated">Эти переменные являются глобальными для всего процесса.Они разделяются между всеми интерпретаторами и всеми потоками процесса.</target>
        </trans-unit>
        <trans-unit id="c34e796e9875a610406c8f84f6c6846160af7938" translate="yes" xml:space="preserve">
          <source>These variables are global to an entire process. They are shared between all interpreters and all threads in a process. Any variables not documented here may be changed or removed without notice, so don't use them! If you feel you really do need to use an unlisted variable, first send email to &lt;a href=&quot;mailto:perl5-porters@perl.org&quot;&gt;perl5-porters@perl.org&lt;/a&gt;. It may be that someone there will point out a way to accomplish what you need without using an internal variable. But if not, you should get a go-ahead to document and then use the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f5ad69f1f855f312a7f31903221b231e10b532" translate="yes" xml:space="preserve">
          <source>These variables are read-only and dynamically-scoped, unless we note otherwise.</source>
          <target state="translated">Эти переменные доступны только для чтения и динамически масштабируются,если только мы не заметим обратного.</target>
        </trans-unit>
        <trans-unit id="2a1de91c215bb3911b0f9767ad8cb63c7c66902f" translate="yes" xml:space="preserve">
          <source>These variables are read-only and dynamically-scoped.</source>
          <target state="translated">Эти переменные доступны только для чтения и динамически масштабируются.</target>
        </trans-unit>
        <trans-unit id="c7b31baa2b679d0f632af8871cff4bfcc11fe664" translate="yes" xml:space="preserve">
          <source>These variables are used not only to represent Perl-space variables, but also any constants in the code, as well as some structures completely internal to Perl. The symbol table, for instance, is an ordinary Perl hash. Your code is represented by an SV as it's read into the parser; any program files you call are opened via ordinary Perl filehandles, and so on.</source>
          <target state="translated">Эти переменные используются не только для представления Perl-переменных,но и любых констант в коде,а также некоторых структур,полностью внутренних для Perl.Например,таблица символов-это обычный Perl-хэш.Ваш код представлен SV по мере чтения в синтаксическом анализаторе;любые программные файлы,которые вы вызываете,открываются через обычные Perl-файловые дескрипторы,и так далее.</target>
        </trans-unit>
        <trans-unit id="82a728707d8b23d45f027d3109e809864b998b05" translate="yes" xml:space="preserve">
          <source>These variables determine the default state of the object created by calling the &lt;code&gt;new&lt;/code&gt; method, but cannot be used to alter the state of the object thereafter. The equivalent method names should be used instead to query or set the internal state of the object.</source>
          <target state="translated">Эти переменные определяют состояние по умолчанию для объекта, созданного путем вызова &lt;code&gt;new&lt;/code&gt; метода, но не могут использоваться для изменения состояния объекта в дальнейшем. Вместо этого следует использовать эквивалентные имена методов для запроса или установки внутреннего состояния объекта.</target>
        </trans-unit>
        <trans-unit id="21d06b0dd7e2966bcc2949ad21cc8cf11e259059" translate="yes" xml:space="preserve">
          <source>These variables provide information about the current interpreter state.</source>
          <target state="translated">Эти переменные предоставляют информацию о текущем состоянии интерпретатора.</target>
        </trans-unit>
        <trans-unit id="44c61b22b7df4c04e51047feabc1fcdef03de656" translate="yes" xml:space="preserve">
          <source>These various prefixes correspond to the &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen(3)&lt;/a&gt; modes of &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;r+&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;w+&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;a+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee1fe032de721a344cba89480c67e716abbee89" translate="yes" xml:space="preserve">
          <source>These various prefixes correspond to the fopen(3) modes of &lt;code&gt;r&lt;/code&gt; , &lt;code&gt;r+&lt;/code&gt; , &lt;code&gt;w&lt;/code&gt; , &lt;code&gt;w+&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , and &lt;code&gt;a+&lt;/code&gt; .</source>
          <target state="translated">Эти различные префиксы соответствуют режимам fopen (3) &lt;code&gt;r&lt;/code&gt; , &lt;code&gt;r+&lt;/code&gt; , &lt;code&gt;w&lt;/code&gt; , &lt;code&gt;w+&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;a+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab874a84fee8b167d507adabcea364962ee19104" translate="yes" xml:space="preserve">
          <source>These vars take 3 forms:</source>
          <target state="translated">Эти вагоны принимают 3 формы:</target>
        </trans-unit>
        <trans-unit id="b607e9f6b449fd1b8f047ca8c774e440f540bc1c" translate="yes" xml:space="preserve">
          <source>These were was released in Test::More 0.82, and first shipped with Perl in 5.10.1 as part of Test::More 0.92.</source>
          <target state="translated">Они были выпущены в Test::More 0.82 и впервые отгружены с Perl в 5.10.1 в рамках Test::More 0.92.</target>
        </trans-unit>
        <trans-unit id="dbff7e2745b850ca42a72fcb2a24d874bb4460d2" translate="yes" xml:space="preserve">
          <source>These will take care of 64-bit integers and long doubles. For example:</source>
          <target state="translated">Они позаботятся о 64-битных целых числах и длинных удвоениях.Например:</target>
        </trans-unit>
        <trans-unit id="ac19dfbee94adc36e2c9732558c6cd8eefc750a8" translate="yes" xml:space="preserve">
          <source>These will tell you if you truly have an integer, double, or string pointer stored in your SV. The &quot;p&quot; stands for private.</source>
          <target state="translated">Они скажут вам,действительно ли у вас в SV хранится целое число,двойник или указатель на строку.&quot;p&quot; означает &quot;приватный&quot;.</target>
        </trans-unit>
        <trans-unit id="01c10ede2ffed1b0b1b81928ac4993a2913e0a5d" translate="yes" xml:space="preserve">
          <source>These work as in normal strings.</source>
          <target state="translated">Они работают как обычные струны.</target>
        </trans-unit>
        <trans-unit id="187ee14d57ea8ada7fd976b56339ad22b9d5a13e" translate="yes" xml:space="preserve">
          <source>These would be split and each converted to a prerequisite with a minimum version of zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38675552ee022f79a520bb1f28a37d1e98aa3227" translate="yes" xml:space="preserve">
          <source>They all return true if the test passed, false if the test failed.</source>
          <target state="translated">Все они возвращают true,если тест пройден,false,если тест провалился.</target>
        </trans-unit>
        <trans-unit id="8c3cf570334019dd16b6da35836503ad0b730443" translate="yes" xml:space="preserve">
          <source>They also return and accept whole hash entries (&lt;code&gt;HE*&lt;/code&gt; ), making their use more efficient (since the hash number for a particular string doesn't have to be recomputed every time). See &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for detailed descriptions.</source>
          <target state="translated">Они также возвращают и принимают целые хеш-записи ( &lt;code&gt;HE*&lt;/code&gt; ), что делает их использование более эффективным (поскольку хеш-номер для конкретной строки не нужно каждый раз пересчитывать). Смотрите &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; для подробного описания.</target>
        </trans-unit>
        <trans-unit id="48ac4e95d836a1020bf0ae83cd70b2eeacf64b7e" translate="yes" xml:space="preserve">
          <source>They also return and accept whole hash entries (&lt;code&gt;HE*&lt;/code&gt;), making their use more efficient (since the hash number for a particular string doesn't have to be recomputed every time). See &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for detailed descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25c349a57769dbafa1bf807ae04ad1d22921bb7" translate="yes" xml:space="preserve">
          <source>They are not exported and must be addressed using the full package name.</source>
          <target state="translated">Они не экспортируются и должны быть адресованы с использованием полного названия пакета.</target>
        </trans-unit>
        <trans-unit id="82e0433b7d59191ca9d6b5b4f7f2c32e84b80d15" translate="yes" xml:space="preserve">
          <source>They are suspected to be compiler errors (at least the shuffle.t failure is known from some IRIX 6 setups) and math library errors (the Trig.t failure), but since IRIX 5 is long since end-of-lifed, further fixes for the IRIX are unlikely. If you can get gcc for 5.3, you could try that, too, since gcc in IRIX 6 is a known workaround for at least the shuffle.t and sort.t failures.</source>
          <target state="translated">Предполагается,что это ошибки компилятора (по крайней мере,ошибка shuffle.t известна из некоторых установок IRIX 6)и математические ошибки библиотеки (ошибка Trig.t),но так как IRIX 5 уже давно устарел,дальнейшие исправления для IRIX маловероятны.Если вы можете получить gcc для 5.3,вы можете попробовать и это,так как gcc в IRIX 6-известный обходной путь,по крайней мере для shuffle.t и sort.t сбоев.</target>
        </trans-unit>
        <trans-unit id="69688ab534f08d7044475644301b479b2c0aa07a" translate="yes" xml:space="preserve">
          <source>They are type specifiers, as detailed in &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;:</source>
          <target state="translated">Это спецификаторы типа, как подробно описано в &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e0af70f00dfa3e42a5613047a29fed35339f3d84" translate="yes" xml:space="preserve">
          <source>They come in handy when you want to print or find the size of data.</source>
          <target state="translated">Они пригодились,когда нужно было распечатать или найти размер данных.</target>
        </trans-unit>
        <trans-unit id="af45a4b37483f2a06205c7d3d09277fb7f496321" translate="yes" xml:space="preserve">
          <source>They differ in how they behave if they have the same key as the default metadata. META_ADD will override the default value with its own. META_MERGE will merge its value with the default.</source>
          <target state="translated">Они отличаются тем,как ведут себя,если имеют тот же ключ,что и метаданные по умолчанию.META_ADD будет переопределять значение по умолчанию своим собственным.META_MERGE объединит свое значение со значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="38d5f7d4e163392c98f5f93a608be715596d63d6" translate="yes" xml:space="preserve">
          <source>They exist principally so that you can write code like:</source>
          <target state="translated">Они существуют в основном для того,чтобы можно было писать код типа:</target>
        </trans-unit>
        <trans-unit id="1d5b76cad965b54d55da4f5003ea6633c3207e12" translate="yes" xml:space="preserve">
          <source>They look like they might have been meant to be the POSIX classes &lt;code&gt;[:alnum:]&lt;/code&gt; or &lt;code&gt;[:digit:]&lt;/code&gt;. If so, they should be written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7317b86bbf49f550672235cb05f34f1bf614569a" translate="yes" xml:space="preserve">
          <source>They may be deprecated in future versions.</source>
          <target state="translated">Они могут быть устаревшими в будущих версиях.</target>
        </trans-unit>
        <trans-unit id="9d9f866ec06430c109794c0b11daa6f4be4c1816" translate="yes" xml:space="preserve">
          <source>They may be expecting something completely different.</source>
          <target state="translated">Возможно,они ожидают чего-то совершенно другого.</target>
        </trans-unit>
        <trans-unit id="330c7e5216d53f5b33c24e5c7f8fd3d4ead54c44" translate="yes" xml:space="preserve">
          <source>They seem to be caused by broken system header files, and also other open source projects are seeing them. The following HP-UX patches should make the warnings go away:</source>
          <target state="translated">Похоже,что они вызваны сломанными системными заголовочными файлами,а также другими проектами с открытым исходным кодом,которые их видят.Следующие исправления HP-UX должны устранить предупреждения:</target>
        </trans-unit>
        <trans-unit id="b797d5622b1d1393375da6062407cd69c0ce1eae" translate="yes" xml:space="preserve">
          <source>They work somewhat like compiler directives (pragmata) in that they tend to affect the compilation of your program, and thus will usually work well only when used within a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;. Most of these are lexically scoped, so an inner BLOCK may countermand them by saying:</source>
          <target state="translated">Они работают как директивы компилятора (pragmata) в том смысле, что они имеют тенденцию влиять на компиляцию вашей программы и, таким образом, обычно хорошо работают только при использовании в пределах &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; . Большинство из них имеют лексическую область видимости, поэтому внутренний BLOCK может отменить их, сказав:</target>
        </trans-unit>
        <trans-unit id="0fbe1e3187d25099c55738d9668bd711bb597a03" translate="yes" xml:space="preserve">
          <source>They work somewhat like compiler directives (pragmata) in that they tend to affect the compilation of your program, and thus will usually work well only when used within a &lt;code&gt;use&lt;/code&gt;, or &lt;code&gt;no&lt;/code&gt;. Most of these are lexically scoped, so an inner BLOCK may countermand them by saying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abf5248bc6675a47a3988cb21c2af942a4be9d1" translate="yes" xml:space="preserve">
          <source>They works like the same name operators as theirs.</source>
          <target state="translated">Они работают как одноименные операторы.</target>
        </trans-unit>
        <trans-unit id="dd7133f0a4178555cc80821515a5b2265342ef9d" translate="yes" xml:space="preserve">
          <source>They're opcode specific, and occur less often than the public ones, so they're represented by short mnemonics instead of single-chars; see B::Op_private and</source>
          <target state="translated">Они специфичны для опкодов и встречаются реже,чем публичные,поэтому представлены короткими мнемониками вместо однокамерных;см.B::Op_private и</target>
        </trans-unit>
        <trans-unit id="0131651c3742a3954926cbf8ce6d20cf77a6751b" translate="yes" xml:space="preserve">
          <source>Things not effected by this flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1537a4a381e27d6bdd2214d8f21c4c16bc119e0" translate="yes" xml:space="preserve">
          <source>Things that are broken or just don't work quite right.</source>
          <target state="translated">Вещи,которые сломаны или просто неправильно работают.</target>
        </trans-unit>
        <trans-unit id="a528372aced54ab7da812bd13e4c896f3899419e" translate="yes" xml:space="preserve">
          <source>Things that are effected by this flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e84de00a451ba7e5c811ee4e926df7205dd8b28" translate="yes" xml:space="preserve">
          <source>Things that are formatter dependant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731699b64ef1b2479598864f867653535a2b0bbe" translate="yes" xml:space="preserve">
          <source>Things that make Perl easier to learn: Unix experience, almost any kind of programming experience, an understanding of regular expressions, and the ability to understand other people's code. If there's something you need to do, then it's probably already been done, and a working example is usually available for free. Don't forget Perl modules, either. They're discussed in Part 3 of this FAQ, along with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;CPAN&lt;/a&gt;, which is discussed in Part 2.</source>
          <target state="translated">Вещи, которые упрощают изучение Perl: опыт работы с Unix, практически любой опыт программирования, понимание регулярных выражений и способность понимать код других людей. Если вам что-то нужно сделать, то это, вероятно, уже сделано, и рабочий пример обычно доступен бесплатно. Не забывайте также о модулях Perl. Они обсуждаются в Части 3 этого FAQ вместе с &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;CPAN&lt;/a&gt; , который обсуждается в Части 2.</target>
        </trans-unit>
        <trans-unit id="6bcc1ca5e0a5ecd67da294c2c8f1e99255fb0dfb" translate="yes" xml:space="preserve">
          <source>Things that make Perl easier to learn: Unix experience, almost any kind of programming experience, an understanding of regular expressions, and the ability to understand other people's code. If there's something you need to do, then it's probably already been done, and a working example is usually available for free. Don't forget Perl modules, either. They're discussed in Part 3 of this FAQ, along with &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt;, which is discussed in Part 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9717c58dca00ca4e0fdd51bb342bee53c9f4f98" translate="yes" xml:space="preserve">
          <source>Things that need to be done to improve this document.</source>
          <target state="translated">Вещи,которые необходимо сделать для улучшения этого документа.</target>
        </trans-unit>
        <trans-unit id="8bbe6bf4aeb5dea432e939ae88abe2437f8000be" translate="yes" xml:space="preserve">
          <source>Things to take special care with, sometimes called WARNINGS.</source>
          <target state="translated">Вещи,о которых нужно позаботиться,иногда называемые ПРЕДУПРЕЖДЕНИЯми.</target>
        </trans-unit>
        <trans-unit id="f330d2b9426f91894c132eec7839a297e7c3f2bb" translate="yes" xml:space="preserve">
          <source>Think about reusability. Why waste brainpower on a one-shot when you might want to do something like it again? Consider generalizing your code. Consider writing a module or object class. Consider making your code run cleanly with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; (or &lt;b&gt;-w&lt;/b&gt;) in effect. Consider giving away your code. Consider changing your whole world view. Consider... oh, never mind.</source>
          <target state="translated">Подумайте о возможности повторного использования. Зачем тратить мозги на одноразовый снимок, если вы, возможно, захотите сделать что-то подобное снова? Рассмотрите возможность обобщения вашего кода. Рассмотрите возможность написания модуля или объектного класса. Подумайте о том, чтобы ваш код работал чисто с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; и использования предупреждений (или &lt;b&gt;-w&lt;/b&gt; ). Подумайте о том, чтобы раздать свой код. Подумайте о том, чтобы изменить свое мировоззрение. Подумайте ... о, неважно.</target>
        </trans-unit>
        <trans-unit id="c82b5076931a791a0eeb9910a5bd8e3a5422353a" translate="yes" xml:space="preserve">
          <source>Think about reusability. Why waste brainpower on a one-shot when you might want to do something like it again? Consider generalizing your code. Consider writing a module or object class. Consider making your code run cleanly with &lt;code&gt;use strict&lt;/code&gt; and &lt;code&gt;use warnings&lt;/code&gt; in effect. Consider giving away your code. Consider changing your whole world view. Consider... oh, never mind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369cf00ca2016a53c53652dbdfad94b27946d096" translate="yes" xml:space="preserve">
          <source>Think carefully about whether OO is appropriate for your module. Gratuitous object orientation results in complex APIs which are difficult for the average module user to understand or use.</source>
          <target state="translated">Внимательно подумайте о том,подходит ли OO для вашего модуля.Грациозная ориентация объектов приводит к появлению сложных API,которые среднестатистическому пользователю модуля сложно понять или использовать.</target>
        </trans-unit>
        <trans-unit id="d05ca6e0d80ee8bcc4977d0ae97da44f7a9ad4e9" translate="yes" xml:space="preserve">
          <source>Think of these macros as working a bit like &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; in Perl to limit the scope of local variables.</source>
          <target state="translated">Считайте, что эти макросы работают как &lt;code&gt;{&lt;/code&gt; и &lt;code&gt;}&lt;/code&gt; в Perl для ограничения области действия локальных переменных.</target>
        </trans-unit>
        <trans-unit id="b798a2f7f99599171fc59b43924703f9a2be020d" translate="yes" xml:space="preserve">
          <source>Thinking of mixing &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; and threads? Please lie down and wait until the feeling passes. Be aware that the semantics of &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; vary between platforms. For example, some Unix systems copy all the current threads into the child process, while others only copy the thread that called &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt;. You have been warned!</source>
          <target state="translated">Думаете о смешивании &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; и потоков? Пожалуйста, лягте и подождите, пока чувство не пройдет. Имейте в виду, что семантика &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; различается в зависимости от платформы. Например, некоторые системы Unix копируют все текущие потоки в дочерний процесс, в то время как другие копируют только поток, который вызвал &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; . Вы были предупреждены!</target>
        </trans-unit>
        <trans-unit id="d855fc6f4fe4cadf88e9af157138a372400d46cf" translate="yes" xml:space="preserve">
          <source>Thinking of mixing &lt;code&gt;fork()&lt;/code&gt; and threads? Please lie down and wait until the feeling passes. Be aware that the semantics of &lt;code&gt;fork()&lt;/code&gt; vary between platforms. For example, some Unix systems copy all the current threads into the child process, while others only copy the thread that called &lt;code&gt;fork()&lt;/code&gt;. You have been warned!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ee5f16e1e054ccf1ec34b584008166d240354f" translate="yes" xml:space="preserve">
          <source>Third Edition, revised by J. C. Dumbreck. Oxford University Press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cb87c02d6ed6f908d60b7b75a5f67020a27ac2" translate="yes" xml:space="preserve">
          <source>Third:</source>
          <target state="translated">Third:</target>
        </trans-unit>
        <trans-unit id="7971e6a051104074fdae0f02322417b6eb5695a2" translate="yes" xml:space="preserve">
          <source>This</source>
          <target state="translated">This</target>
        </trans-unit>
        <trans-unit id="b2ba5f429f54422412e8d8cc932f13b88c985b41" translate="yes" xml:space="preserve">
          <source>This &quot;in all contexts&quot; construction is very common, and can be abbreviated, using the 'fail' key. This sets both the &lt;code&gt;scalar&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; hints to the same value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8ab74e7f407ff0613b1e22c57e79a02a3a70ca" translate="yes" xml:space="preserve">
          <source>This 'cheat sheet' is a handy reference, meant for beginning Perl programmers. Not everything is mentioned, but 195 features may already be overwhelming.</source>
          <target state="translated">Этот &quot;шпаргалка&quot;-удобный справочник,предназначенный для начинающих программистов на Perl.Не все упомянуто,но 195 возможностей уже может быть ошеломляющими.</target>
        </trans-unit>
        <trans-unit id="b87ead78f18a2a4de0a885f72703b5402a2fe039" translate="yes" xml:space="preserve">
          <source>This &lt;b&gt;DOES NOT&lt;/b&gt; affect context on other hubs, only the hub used by the context will be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70790687de96ba2a981057f320692cde5f07c030" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;$coderef&lt;/code&gt; is called before the one specified via &lt;code&gt;filter_json_object&lt;/code&gt;, if any. It gets passed the single value in the JSON object. If it returns a single value, it will be inserted into the data structure. If it returns nothing (not even &lt;code&gt;undef&lt;/code&gt; but the empty list), the callback from &lt;code&gt;filter_json_object&lt;/code&gt; will be called next, as if no single-key callback were specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449deebd32ed5eaf74d8aec8711aa290af1210b0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is somewhat like &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; found in C, in that it is the opposite of read. The wrapper for the perl &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function is called &lt;code&gt;format_write&lt;/code&gt; . However, whilst the C &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function returns the number of bytes written, this &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function simply returns true if successful (like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;). A more C-like &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; (see above).</source>
          <target state="translated">Эта &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; чем-то похожа на &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; в C, поскольку она противоположна чтению. &lt;code&gt;format_write&lt;/code&gt; функции &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; perl называется format_write . Однако в то время &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; функция записи C возвращает количество записанных байтов, эта функция &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; просто возвращает истину в случае успеха (например, &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; ). Более С-подобная &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;&lt;a href=&quot;../functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; (смотри выше).</target>
        </trans-unit>
        <trans-unit id="7f5f153f1937141026057a558986308f5230af60" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;IO::Socket::INET&lt;/code&gt;-style argument is ignored, except if it is defined but false. See the &lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809a4dea69e66cbb56a6927382a1c7747ff2b245" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;POSIX::SigAction&lt;/code&gt; object is intended for use with the &lt;code&gt;POSIX::sigaction()&lt;/code&gt; function.</source>
          <target state="translated">Этот объект &lt;code&gt;POSIX::SigAction&lt;/code&gt; предназначен для использования с функцией &lt;code&gt;POSIX::sigaction()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dae482e8849607cb08d3169246c6cbb9eb47f40" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;write&lt;/code&gt; is somewhat like &lt;code&gt;write&lt;/code&gt; found in C, in that it is the opposite of read. The wrapper for the perl &lt;code&gt;write&lt;/code&gt; function is called &lt;code&gt;format_write&lt;/code&gt;. However, whilst the C &lt;code&gt;write&lt;/code&gt; function returns the number of bytes written, this &lt;code&gt;write&lt;/code&gt; function simply returns true if successful (like &lt;code&gt;print&lt;/code&gt;). A more C-like &lt;code&gt;write&lt;/code&gt; is &lt;code&gt;syswrite&lt;/code&gt; (see above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5e4636d7ee396c2538c58facc6d68cb4eb415b" translate="yes" xml:space="preserve">
          <source>This CPAN module lets you create application-level DTrace probes written in Perl.</source>
          <target state="translated">Этот CPAN-модуль позволяет создавать DTrace-зонды прикладного уровня,написанные на Perl.</target>
        </trans-unit>
        <trans-unit id="511e2864753cd52a1ebcc75d7881ce1d9fb8ec6b" translate="yes" xml:space="preserve">
          <source>This DBM filter allows you to choose the character encoding will be store in the DBM file. The usage is</source>
          <target state="translated">Данный DBM фильтр позволяет выбрать кодировку символов,которая будет храниться в DBM файле.Использование</target>
        </trans-unit>
        <trans-unit id="8d6cf7bbaf015be1842a3503d362b5db206d9719" translate="yes" xml:space="preserve">
          <source>This DBM filter is used when interoperating with a C/C++ application that uses a C int as either the key and/or value in the DBM file.</source>
          <target state="translated">Этот DBM-фильтр используется при взаимодействии с приложением на С/С++,которое использует С int либо в качестве ключа,либо в качестве значения в DBM-файле.</target>
        </trans-unit>
        <trans-unit id="b9afd96c4f0113b4f4a0ca24ef6b7ce1c1eceace" translate="yes" xml:space="preserve">
          <source>This DBM filter will compress all data before it is written to the database and uncompressed it on reading.</source>
          <target state="translated">Этот DBM-фильтр сжимает все данные до того,как они будут записаны в базу данных,и сжимает их при чтении.</target>
        </trans-unit>
        <trans-unit id="b3c940c7a493363dfcc2ec46854ae2f8bf461ebc" translate="yes" xml:space="preserve">
          <source>This Filter will ensure that all data written to the DBM will be encoded in UTF-8.</source>
          <target state="translated">Этот фильтр гарантирует,что все данные,записанные в БДМ,будут закодированы в UTF-8.</target>
        </trans-unit>
        <trans-unit id="fc3e8623db78291ea4659afa55c27a0af1b2fdc1" translate="yes" xml:space="preserve">
          <source>This IPv4-only function is provided largely for legacy reasons. Newly-written code should use getaddrinfo() or inet_pton() instead for IPv6 support.</source>
          <target state="translated">Эта функция,использующая только протокол IPv4,обеспечивается в основном по причинам,связанным с наследием.Вновь написанный код для поддержки IPv6 должен использовать getaddrinfo()или inet_pton().</target>
        </trans-unit>
        <trans-unit id="a1b8940a7dbf27c2770dc1f730a7a76eb668b365" translate="yes" xml:space="preserve">
          <source>This IPv4-only function is provided largely for legacy reasons. Newly-written code should use getnameinfo() or inet_ntop() instead for IPv6 support.</source>
          <target state="translated">Эта функция,использующая только протокол IPv4,обеспечивается в основном по причинам,связанным с наследием.Вновь написанный код должен использовать getnameinfo()или inet_ntop()вместо поддержки IPv6.</target>
        </trans-unit>
        <trans-unit id="86d1fee384e2c64930f89930b421f43ee54e6dc6" translate="yes" xml:space="preserve">
          <source>This List indicates the person(s) to contact concerning the distribution. The preferred form of the contact string is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722a81c183f099f4bcdf928fea77c08691faed91" translate="yes" xml:space="preserve">
          <source>This MGVTBL structure is set at compile-time in</source>
          <target state="translated">Эта структура MGVTBL устанавливается во время компиляции в</target>
        </trans-unit>
        <trans-unit id="1eec4cedd7f076095ac2a0ca9a9e96a3c88c0b97" translate="yes" xml:space="preserve">
          <source>This Map describes any files, directories, packages, and namespaces that are private to the packaging or implementation of the distribution and should be ignored by indexing or search tools. Note that this is a list of exclusions, and the spec does not define what to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caefbceb3b0366d47f8a2872ed9d7c71305e207" translate="yes" xml:space="preserve">
          <source>This Map describes optional features with incremental prerequisites. Each key of the &lt;code&gt;optional_features&lt;/code&gt; Map is a String used to identify the feature and each value is a Map with additional information about the feature. Valid subkeys include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdaa79397a40333f189bcdc4086a9d759ea82a0" translate="yes" xml:space="preserve">
          <source>This Perl can't reset CRTL environ elements (%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb183f03494180e283020e26b8860c5c80cf5dab" translate="yes" xml:space="preserve">
          <source>This Perl can't set CRTL environ elements (%s=%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39321835728914af608511ebd3abfb95683e78c" translate="yes" xml:space="preserve">
          <source>This Perl has not been built with support for randomized hash key traversal but something called Perl_hv_rand_set().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705edfac9681ecc4ad006397ee2bb051d4e6ffce" translate="yes" xml:space="preserve">
          <source>This Perl not built to support threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d239471597c0b244a6c849bc4b21df8bfaf5b7db" translate="yes" xml:space="preserve">
          <source>This PerlIO layer opens a filehandle with a transparent encoding filter.</source>
          <target state="translated">Этот слой PerlIO открывает файловую ручку с прозрачным фильтром кодировок.</target>
        </trans-unit>
        <trans-unit id="a75ec57aa7be5f3e457676aa78fd87835feef6b5" translate="yes" xml:space="preserve">
          <source>This README was written by Sherm Pendley &amp;lt;sherm@dot-app.org&amp;gt;, and subsequently updated by Dominic Dunlop &amp;lt;domo@computer.org&amp;gt; and Breno G. de Oliveira &amp;lt;garu@cpan.org&amp;gt;. The &quot;Starting From Scratch&quot; recipe was contributed by John Montbriand &amp;lt;montbriand@apple.com&amp;gt;.</source>
          <target state="translated">Этот README был написан Шермом Пендли &amp;lt;sherm@dot-app.org&amp;gt; и впоследствии обновлен Домиником Данлопом &amp;lt;domo@computer.org&amp;gt; и Брено Дж. Де Оливейра &amp;lt;garu@cpan.org&amp;gt;. Рецепт &amp;laquo;Начиная с нуля&amp;raquo; был предоставлен Джоном Монбрианом &amp;lt;montbriand@apple.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ebd95c4f5ef4e4618995d165e48685abb75f4895" translate="yes" xml:space="preserve">
          <source>This TODO</source>
          <target state="translated">Этот ТДО</target>
        </trans-unit>
        <trans-unit id="65401762a1d1713b0f2418936baae5413a27fffb" translate="yes" xml:space="preserve">
          <source>This UTF8 flag is not visible in Perl scripts, exactly for the same reason you cannot (or rather, you</source>
          <target state="translated">Этот флаг UTF8 не виден в Perl-скриптах,именно по той же причине,по которой вы не можете (а точнее,вы</target>
        </trans-unit>
        <trans-unit id="4052f785cdabbfe61b3039b9711ade7bde52e516" translate="yes" xml:space="preserve">
          <source>This a copy of the $md5 object. It is useful when you do not want to destroy the digests state, but need an intermediate value of the digest, e.g. when calculating digests iteratively on a continuous data stream. Example:</source>
          <target state="translated">Это копия объекта в $md5.Он полезен,когда не нужно разрушать состояние дайджестов,а нужно промежуточное значение дайджеста,например,при итеративном расчете дайджестов на непрерывном потоке данных.Пример:</target>
        </trans-unit>
        <trans-unit id="1a5e99b1d24a191f2d8182b7f2daff87d3990749" translate="yes" xml:space="preserve">
          <source>This a perl class / module to enable you to use ARexx with your perlscript. Creating a function host or executing scripts in other hosts. The API is loosley modeled on the python arexx module supplied by with AmigaOS4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a160f7af224910b6019387f0709ad781bada6850" translate="yes" xml:space="preserve">
          <source>This a perl class / module to enables you to use various low level Amiga features such as waiting on an Exec signal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d41ee6bf8db4bf77abd4b3d67925380ae0e1a1" translate="yes" xml:space="preserve">
          <source>This aborts parsing of the current document, by switching on the flag that indicates that EOF has been seen. In particularly drastic cases, you might want to do this. It's rather nicer than just calling &lt;code&gt;die&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e3860a781a3958ead624c7605f67461e6feac0" translate="yes" xml:space="preserve">
          <source>This action at a distance can be confusing, so you should be careful with your use of weaken. You should weaken the reference in the variable that will go out of scope</source>
          <target state="translated">Это действие на расстоянии может сбить с толку,поэтому следует быть осторожным с использованием ослабленных.Вы должны ослабить ссылку в переменной,которая выйдет за рамки видимости</target>
        </trans-unit>
        <trans-unit id="6a24d0142f914abb864cc53bd42fb39ecd311c30" translate="yes" xml:space="preserve">
          <source>This action at a distance, perhaps a large distance, can lead to Perl silently misinterpreting what you meant, so when you specify that you want extra checking by &lt;code&gt;use re 'strict'&lt;/code&gt;, this warning is generated. If you meant the character as a literal, simply confirm that to Perl by preceding the character with a backslash, or make it into a bracketed character class (like &lt;code&gt;[}]&lt;/code&gt;). If you meant it as closing a corresponding &lt;code&gt;[&lt;/code&gt; or &lt;code&gt;{&lt;/code&gt;, you'll need to look back through the pattern to find out why that isn't happening.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddc211ce6f51988dd46dcc142aadb4340b590dc" translate="yes" xml:space="preserve">
          <source>This adds a new excluded version. For example, you might use these three method calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2561f6cd7d300e2bc3c36c86f010a9c3614953" translate="yes" xml:space="preserve">
          <source>This adds a new maximum version requirement. If the new requirement is redundant to the existing specification, this has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8012fe61f20e1a816c0a4a7242f87aff7c9fa563" translate="yes" xml:space="preserve">
          <source>This adds a new minimum version requirement. If the new requirement is redundant to the existing specification, this has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885dd09085650ee6eee0bbc42fb708bdc29aeb18" translate="yes" xml:space="preserve">
          <source>This adds your coderef as a follow-up to the root hub after Test2 is finished loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31854231243bab283e1b65fbafa450794c35d551" translate="yes" xml:space="preserve">
          <source>This affects the &quot;udp&quot;, &quot;tcp&quot;, and &quot;syn&quot; protocols.</source>
          <target state="translated">Это влияет на протоколы &quot;udp&quot;,&quot;tcp&quot; и &quot;syn&quot;.</target>
        </trans-unit>
        <trans-unit id="c5505e253bfc6bced2ca4d4a2dc1f5c2494aeece" translate="yes" xml:space="preserve">
          <source>This affects the &lt;code&gt;CreateFile&lt;/code&gt; and &lt;code&gt;GetVolumeInformation&lt;/code&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddee3439343bde4e7f7a86c9eebcbe6c66c9384" translate="yes" xml:space="preserve">
          <source>This affects the &lt;code&gt;ReadFile&lt;/code&gt; and &lt;code&gt;WriteFile&lt;/code&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873bbf87a172d66b10ad3b61904a0d639ca9b860" translate="yes" xml:space="preserve">
          <source>This allows Math::BigInt to correctly retrieve package globals from the subclass, like &lt;code&gt;$SubClass::precision&lt;/code&gt; . See t/Math/BigInt/Subclass.pm or t/Math/BigFloat/SubClass.pm completely functional subclass examples.</source>
          <target state="translated">Это позволяет Math :: BigInt правильно извлекать глобальные объекты пакета из подкласса, например &lt;code&gt;$SubClass::precision&lt;/code&gt; . См. Примеры полностью функциональных подклассов t / Math / BigInt / Subclass.pm или t / Math / BigFloat / SubClass.pm.</target>
        </trans-unit>
        <trans-unit id="fa3309366ca565335ff8288304c30cc7b99e923e" translate="yes" xml:space="preserve">
          <source>This allows Math::BigInt to correctly retrieve package globals from the subclass, like &lt;code&gt;$SubClass::precision&lt;/code&gt;. See t/Math/BigInt/Subclass.pm or t/Math/BigFloat/SubClass.pm completely functional subclass examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b11d71facfcee62095e950521946dac7a2b9c8" translate="yes" xml:space="preserve">
          <source>This allows a reference to a variable to be declared with &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt;, our &lt;code&gt;our&lt;/code&gt;, or localized with &lt;code&gt;local&lt;/code&gt;. It is intended mainly for use in conjunction with the &quot;refaliasing&quot; feature. See &lt;a href=&quot;perlref#Declaring-a-Reference-to-a-Variable&quot;&gt;&quot;Declaring a Reference to a Variable&quot; in perlref&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5501a126d7bcccb962537b6328418e9a9cd85d" translate="yes" xml:space="preserve">
          <source>This allows a user to setup a directory tree for some software with directories &lt;code&gt;&amp;lt;root&amp;gt;/bin&lt;/code&gt; and &lt;code&gt;&amp;lt;root&amp;gt;/lib&lt;/code&gt; , and then the above example will allow the use of modules in the lib directory without knowing where the software tree is installed.</source>
          <target state="translated">Это позволяет пользователю настроить дерево каталогов для некоторого программного обеспечения с каталогами &lt;code&gt;&amp;lt;root&amp;gt;/bin&lt;/code&gt; и &lt;code&gt;&amp;lt;root&amp;gt;/lib&lt;/code&gt; , а затем приведенный выше пример позволит использовать модули в каталоге lib, не зная, где установлено дерево программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="27816f401d954ec072345f1b707e0f267b956d02" translate="yes" xml:space="preserve">
          <source>This allows a user to setup a directory tree for some software with directories &lt;code&gt;&amp;lt;root&amp;gt;/bin&lt;/code&gt; and &lt;code&gt;&amp;lt;root&amp;gt;/lib&lt;/code&gt;, and then the above example will allow the use of modules in the lib directory without knowing where the software tree is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d1ac05408a326c089b0ec60746ba54464b2076" translate="yes" xml:space="preserve">
          <source>This allows for a more traditional use of sockatmark() as a procedural socket function. If your system does not support sockatmark(), the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declaration will fail at compile time.</source>
          <target state="translated">Это позволяет более традиционным образом использовать sockatmark () в качестве процедурной функции сокета. Если ваша система не поддерживает sockatmark (), объявление &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; завершится ошибкой во время компиляции.</target>
        </trans-unit>
        <trans-unit id="5c4bf55b527390af875f220a6a455b96b2cc2be5" translate="yes" xml:space="preserve">
          <source>This allows one to specify the</source>
          <target state="translated">Это позволяет указать</target>
        </trans-unit>
        <trans-unit id="dd0d07d0d3a6167b29dae996bfd8a33bb4d04031" translate="yes" xml:space="preserve">
          <source>This allows the ability to provide an extra pointer (called the &quot;host&quot; environment) for all the system calls. This makes it possible for all the system stuff to maintain their own state, broken down into seven C structures. These are thin wrappers around the usual system calls (see</source>
          <target state="translated">Это позволяет предоставить дополнительный указатель (называемый &quot;хостовой&quot; средой)для всех системных вызовов.Это позволяет всем системным служащим поддерживать свое собственное состояние,разбитое на семь структур на языке C.Это тонкие обёртки вокруг обычных системных вызовов (см.</target>
        </trans-unit>
        <trans-unit id="f2d9de12c87f7e2eb33ce435c5af882982d468fe" translate="yes" xml:space="preserve">
          <source>This allows the engine to dupe its private data but also if necessary modify the final structure if it really must.</source>
          <target state="translated">Это позволяет двигателю дублировать свои частные данные,но также,при необходимости,изменять конечную структуру,если это действительно необходимо.</target>
        </trans-unit>
        <trans-unit id="afb3f86b59b2eab9a83b014b190ee8244b9d77c6" translate="yes" xml:space="preserve">
          <source>This allows the programmer to look at the execution stack and variables to find out the cause of the exception. As the debugger is being invoked as the Perl interpreter is about to do a fatal exit, continuing the execution in debug mode is usually not practical.</source>
          <target state="translated">Это позволяет программисту посмотреть на стек выполнения и переменные,чтобы узнать причину исключения.Так как отладчик вызывается,так как интерпретатор Perl вот-вот сделает фатальный выход,продолжение выполнения в отладочном режиме обычно непрактично.</target>
        </trans-unit>
        <trans-unit id="0db2b07707171b33eaecb29767724fb7ef4d27b3" translate="yes" xml:space="preserve">
          <source>This allows the use of the &lt;code&gt;isa&lt;/code&gt; infix operator, which tests whether the scalar given by the left operand is an object of the class given by the right operand. See &lt;a href=&quot;perlop#Class-Instance-Operator&quot;&gt;&quot;Class Instance Operator&quot; in perlop&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1baefaa51fc7ed599ce445dad500d37cb72bf43c" translate="yes" xml:space="preserve">
          <source>This allows you to add a prefix to the backup file, instead of (or in addition to) a suffix:</source>
          <target state="translated">Это позволяет добавлять префикс к файлу резервной копии вместо (или в дополнение)суффикса:</target>
        </trans-unit>
        <trans-unit id="08c156e263d5342084a6b014f45a9a0f0a51e994" translate="yes" xml:space="preserve">
          <source>This allows you to add callbacks that will trigger every time a context for this hub is released. The only argument to the sub will be the &lt;a href=&quot;Test2::API::Context&quot;&gt;Test2::API::Context&lt;/a&gt; instance that was released. These will run in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13b99696d30cbc25087da7c60f284a4111dd701" translate="yes" xml:space="preserve">
          <source>This allows you to add callbacks that will trigger every time a new context is created for the hub. The only argument to the sub will be the &lt;a href=&quot;Test2::API::Context&quot;&gt;Test2::API::Context&lt;/a&gt; instance that was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9c79134ff2ae5aa3b781af2dbc70121d4e03bb" translate="yes" xml:space="preserve">
          <source>This allows you to check that your test module is setting the correct value for $Test::Builder::Level and thus giving the correct file and line number when a test fails. It is calculated by looking at caller() and $Test::Builder::Level. It should count how many subroutines there are before jumping into the function you are testing. So for example in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e47154414d862007ad5f643f15fef0b3978ca2c" translate="yes" xml:space="preserve">
          <source>This allows you to intermix your source code and your documentation text freely, as in</source>
          <target state="translated">Это позволяет вам свободно перемешивать ваш исходный код и текст документации,как в случае с</target>
        </trans-unit>
        <trans-unit id="56e637a731a56d0d223f91be743e436a188835e3" translate="yes" xml:space="preserve">
          <source>This allows you to pass a reference to a scalar, in which the data will be stored:</source>
          <target state="translated">Это позволяет передать ссылку на скаляр,в котором будут храниться данные:</target>
        </trans-unit>
        <trans-unit id="56546e50a57dfe022838ff689d536d5a9d34e4c4" translate="yes" xml:space="preserve">
          <source>This allows you to provide a UUID generator. If provided UUIDs will be attached to all events, hubs, and contexts. This is useful for storing, tracking, and linking these objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae11cd12869687833116af8fabb9e16d79564d09" translate="yes" xml:space="preserve">
          <source>This allows you to specify &lt;code&gt;constants&lt;/code&gt; in your template. ie, they keys that are not allowed to be altered by the user. It pretty much allows you to keep all your &lt;code&gt;configurable&lt;/code&gt; data in one place; the &lt;code&gt;Params::Check&lt;/code&gt; template.</source>
          <target state="translated">Это позволяет вам указывать &lt;code&gt;constants&lt;/code&gt; в вашем шаблоне. то есть это ключи, которые не могут быть изменены пользователем. Это в значительной степени позволяет хранить все &lt;code&gt;configurable&lt;/code&gt; данные в одном месте; &lt;code&gt;Params::Check&lt;/code&gt; шаблона.</target>
        </trans-unit>
        <trans-unit id="02527ae1bd59af5a043ac93acd05be3d0f9bb884" translate="yes" xml:space="preserve">
          <source>This allows you to update your local repository by pulling from &lt;code&gt;origin&lt;/code&gt;, which is faster and doesn't require you to authenticate, and to push your changes back with the &lt;code&gt;camel&lt;/code&gt; remote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3de596529e48bc02f1d5b4c0a477a1da824e62" translate="yes" xml:space="preserve">
          <source>This allows your code to set hints without relying on &lt;code&gt;autodie&lt;/code&gt; and &lt;code&gt;autodie::hints&lt;/code&gt; being loaded, or even installed. In this way your code can do the right thing when &lt;code&gt;autodie&lt;/code&gt; is installed, but does not need to depend upon it to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9cd2ea84115168b54e6b0797c0f572af954da0" translate="yes" xml:space="preserve">
          <source>This almost definitely doesn't do what you expect:</source>
          <target state="translated">Это почти наверняка не соответствует твоим ожиданиям:</target>
        </trans-unit>
        <trans-unit id="5ba2015dbd8b7d90bb6da319e60421ccbe89f224" translate="yes" xml:space="preserve">
          <source>This also applies to integers that look like floating point constants:</source>
          <target state="translated">Это также относится к целым числам,которые выглядят как константы с плавающей точкой:</target>
        </trans-unit>
        <trans-unit id="636185aa1476a4214e4b7454bccd1f721aa5d7e5" translate="yes" xml:space="preserve">
          <source>This also behaves similarly, but assigns to a lexical variable instead of to &lt;code&gt;$_&lt;/code&gt; :</source>
          <target state="translated">Это также ведет себя аналогичным образом, но назначается лексической переменной вместо &lt;code&gt;$_&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="40e97092dc934ec326d1ea3e202dbbdcd5300d45" translate="yes" xml:space="preserve">
          <source>This also behaves similarly, but assigns to a lexical variable instead of to &lt;code&gt;$_&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd00f9f641aead2aa10c5260267b8df1c16f1dcf" translate="yes" xml:space="preserve">
          <source>This also has a special use with XS AUTOLOAD subs. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;&quot;Autoloading with XSUBs&quot; in perlguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77df2183cb5ed8fa6c016243494c2444f23d3c09" translate="yes" xml:space="preserve">
          <source>This also has a special use with XS AUTOLOAD subs. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt;.</source>
          <target state="translated">Это также особенно важно с субтитрами XS AUTOLOAD. См. Раздел &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Автозагрузка с помощью XSUB в perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3d548e6c0ea6757b5bd736b5e0dc177ac6e6019" translate="yes" xml:space="preserve">
          <source>This also has implications for the use of the SUPER:: qualifier (see &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;).</source>
          <target state="translated">Это также имеет значение для использования квалификатора SUPER :: (см. &lt;a href=&quot;perlobj&quot;&gt;Perlobj&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8da07f35c437fa97e844be13f7f26224b7e80d0" translate="yes" xml:space="preserve">
          <source>This also means it is a bad idea to check for some specific package, since the actual contents of $x might be something unexpected. Due to the transparent way of bignum &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref()&lt;/a&gt;&lt;/code&gt; should not be necessary, anyway.</source>
          <target state="translated">Это также означает, что проверять наличие какого-либо конкретного пакета - плохая идея, поскольку фактическое содержимое $ x может оказаться неожиданным. В любом случае из-за прозрачности bignum &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref()&lt;/a&gt;&lt;/code&gt; не требуется.</target>
        </trans-unit>
        <trans-unit id="49deec483222c26dba8014be17034c32d563f691" translate="yes" xml:space="preserve">
          <source>This also means it is a bad idea to check for some specific package, since the actual contents of $x might be something unexpected. Due to the transparent way of bignum &lt;code&gt;ref()&lt;/code&gt; should not be necessary, anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f046ba2ed5c45f32bb7d779ddd434216adcb9e9" translate="yes" xml:space="preserve">
          <source>This also means that a first argument hash reference now becomes the second argument:</source>
          <target state="translated">Это также означает,что ссылка на хэш первого аргумента теперь становится вторым аргументом:</target>
        </trans-unit>
        <trans-unit id="53e0f20ff4a10e2905e391319be8b9814ea5ca78" translate="yes" xml:space="preserve">
          <source>This also returns the file format version. If the version is &quot;2.7&quot; then major would be 2 and minor would be 7. The minor element is missing for when major is less than 2.</source>
          <target state="translated">Также возвращается версия формата файла.Если версия &quot;2.7&quot;,то мажор будет 2,а минор-7.Маленький элемент отсутствует,если мажор меньше 2.</target>
        </trans-unit>
        <trans-unit id="61c52be3ac150c6eed66b2a1ead6f0d851e682d3" translate="yes" xml:space="preserve">
          <source>This also works for other subclasses, like Math::String.</source>
          <target state="translated">Это также работает и для других подклассов,таких как Math::String.</target>
        </trans-unit>
        <trans-unit id="8203581310d6a334ec8562f54f521a19e2fc01d8" translate="yes" xml:space="preserve">
          <source>This also works for ranges in &lt;code&gt;tr///&lt;/code&gt; starting in Perl v5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8468a87cfa0204ff52a567b1eaf4b66d1ee547eb" translate="yes" xml:space="preserve">
          <source>This always means your main memory, not your disk. Clouding the issue is the fact that your machine may implement &lt;b&gt;virtual&lt;/b&gt; memory; that is, it will pretend that it has more memory than it really does, and it&amp;rsquo;ll use disk space to hold inactive bits. This can make it seem like you have a little more memory than you really do, but it&amp;rsquo;s not a substitute for real memory. The best thing that can be said about virtual memory is that it lets your performance degrade gradually rather than suddenly when you run out of real memory. But your program can die when you run out of virtual memory, too&amp;mdash;if you haven&amp;rsquo;t thrashed your disk to death first.</source>
          <target state="translated">Это всегда означает вашу основную память, а не ваш диск. Затушевывает проблему тот факт, что ваша машина может реализовывать &lt;b&gt;виртуальную&lt;/b&gt; память; то есть он будет делать вид, что у него больше памяти, чем на самом деле, и будет использовать дисковое пространство для хранения неактивных битов. Это может создать впечатление, что у вас немного больше памяти, чем на самом деле, но это не замена реальной памяти. Лучшее, что можно сказать о виртуальной памяти, - это то, что она позволяет снижать производительность постепенно, а не внезапно, когда у вас заканчивается реальная память. Но ваша программа может умереть, когда у вас исчерпается виртуальная память - если вы сначала не забили свой диск до смерти.</target>
        </trans-unit>
        <trans-unit id="295dde8c4391c2b969f714a71c16980aac7c0b67" translate="yes" xml:space="preserve">
          <source>This and &lt;code&gt;PERL_INT_MIN&lt;/code&gt;, &lt;code&gt;PERL_LONG_MAX&lt;/code&gt;, &lt;code&gt;PERL_LONG_MIN&lt;/code&gt;, &lt;code&gt;PERL_QUAD_MAX&lt;/code&gt;, &lt;code&gt;PERL_SHORT_MAX&lt;/code&gt;, &lt;code&gt;PERL_SHORT_MIN&lt;/code&gt;, &lt;code&gt;PERL_UCHAR_MAX&lt;/code&gt;, &lt;code&gt;PERL_UCHAR_MIN&lt;/code&gt;, &lt;code&gt;PERL_UINT_MAX&lt;/code&gt;, &lt;code&gt;PERL_ULONG_MAX&lt;/code&gt;, &lt;code&gt;PERL_ULONG_MIN&lt;/code&gt;, &lt;code&gt;PERL_UQUAD_MAX&lt;/code&gt;, &lt;code&gt;PERL_UQUAD_MIN&lt;/code&gt;, &lt;code&gt;PERL_USHORT_MAX&lt;/code&gt;, &lt;code&gt;PERL_USHORT_MIN&lt;/code&gt;, &lt;code&gt;PERL_QUAD_MIN&lt;/code&gt; give the largest and smallest number representable in the current platform in variables of the corresponding types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165f78228b9bb880f61927fda978ad6714cce456" translate="yes" xml:space="preserve">
          <source>This anomaly stems from Perl's attempt to not disturb older programs that didn't use Unicode, along with Perl's desire to add Unicode support seamlessly. But the result turned out to not be seamless. (By the way, you can choose to be warned when things like this happen. See &lt;code&gt;&lt;a href=&quot;encoding/warnings&quot;&gt;encoding::warnings&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">Эта аномалия проистекает из попытки Perl не мешать более старым программам, которые не использовали Unicode, наряду с желанием Perl без проблем добавить поддержку Unicode. Но результат оказался не безупречным. (Кстати, вы можете выбрать, чтобы вас предупреждали, когда случаются подобные вещи. См. &lt;code&gt;&lt;a href=&quot;encoding/warnings&quot;&gt;encoding::warnings&lt;/a&gt;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="a34b4613636352dc25268cf3fddbf1e4e87cbb09" translate="yes" xml:space="preserve">
          <source>This anomaly stems from Perl's attempt to not disturb older programs that didn't use Unicode, along with Perl's desire to add Unicode support seamlessly. But the result turned out to not be seamless. (By the way, you can choose to be warned when things like this happen. See &lt;code&gt;&lt;a href=&quot;encoding::warnings&quot;&gt;encoding::warnings&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c246570729105a65f6bd289985b0b62d1e1f94f" translate="yes" xml:space="preserve">
          <source>This appeared in perl 5.10.0. Anything matched left of &lt;code&gt;\K&lt;/code&gt; is not included in &lt;code&gt;$&amp;amp;&lt;/code&gt; , and will not be replaced if the pattern is used in a substitution. This lets you write &lt;code&gt;s/PAT1 \K PAT2/REPL/x&lt;/code&gt; instead of &lt;code&gt;s/(PAT1) PAT2/${1}REPL/x&lt;/code&gt; or &lt;code&gt;s/(?&amp;lt;=PAT1) PAT2/REPL/x&lt;/code&gt; .</source>
          <target state="translated">Это появилось в perl 5.10.0. Все, что находится слева от &lt;code&gt;\K&lt;/code&gt; , не включается в &lt;code&gt;$&amp;amp;&lt;/code&gt; и не будет заменено, если шаблон используется в подстановке. Это позволяет вам писать &lt;code&gt;s/PAT1 \K PAT2/REPL/x&lt;/code&gt; вместо &lt;code&gt;s/(PAT1) PAT2/${1}REPL/x&lt;/code&gt; или &lt;code&gt;s/(?&amp;lt;=PAT1) PAT2/REPL/x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd3493b1232a9c4de7dc8bb2c9b05a2159dd5ec" translate="yes" xml:space="preserve">
          <source>This appeared in perl 5.10.0. Anything matched left of &lt;code&gt;\K&lt;/code&gt; is not included in &lt;code&gt;$&amp;amp;&lt;/code&gt;, and will not be replaced if the pattern is used in a substitution. This lets you write &lt;code&gt;s/PAT1 \K PAT2/REPL/x&lt;/code&gt; instead of &lt;code&gt;s/(PAT1) PAT2/${1}REPL/x&lt;/code&gt; or &lt;code&gt;s/(?&amp;lt;=PAT1) PAT2/REPL/x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbb4716327acfc3309af9888218e1b2879b1c27" translate="yes" xml:space="preserve">
          <source>This applies as well to &lt;a href=&quot;I18N::Langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e79001ab117c0cf333336e9232ddbb9a00de3d" translate="yes" xml:space="preserve">
          <source>This applies equally to method names, parameter names, and anything else which is visible to the user (and most things that aren't!)</source>
          <target state="translated">Это в равной степени относится к именам методов,именам параметров и всему остальному,что видно пользователю (и большинству вещей,которые не видны!).</target>
        </trans-unit>
        <trans-unit id="70dd8476567c22ea231857d01ff4db7f81b73be8" translate="yes" xml:space="preserve">
          <source>This applies only to lexical variables, by the way. Dynamic variables continue to work as they have always worked. Closure is not something that most Perl programmers need trouble themselves about to begin with.</source>
          <target state="translated">Кстати,это относится только к лексическим переменным.Динамические переменные продолжают работать так,как они всегда работали.Закрытие-это не то,с чего большинство Perl-программистов начинают испытывать проблемы сами по себе.</target>
        </trans-unit>
        <trans-unit id="4e13602141364999d0474f62de688119ccaf7274" translate="yes" xml:space="preserve">
          <source>This applies to the perlio system only. For versions before 5.7, &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; is equivalent to &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; .</source>
          <target state="translated">Это относится только к системе Perlio. Для версий до 5.7 &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; эквивалентен &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e11371aac7dd3f528873ed555dfe591da9dcfa07" translate="yes" xml:space="preserve">
          <source>This applies to the perlio system only. For versions before 5.7, &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; is equivalent to &lt;code&gt;PerlIO_findFILE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ab6b9c73082204ae0542a65f9bf2f5c23ef207" translate="yes" xml:space="preserve">
          <source>This approach also works for comparing hashes. Here we'll demonstrate two different answers:</source>
          <target state="translated">Этот подход также работает для сравнения хэшей.Здесь мы продемонстрируем два разных ответа:</target>
        </trans-unit>
        <trans-unit id="e5cff3b77039edbd80551481c46e471aeea07633" translate="yes" xml:space="preserve">
          <source>This approach is useful if I need to convert my TAP based test results into some other representation. See TAP::Convert::TET (http://search.cpan.org/dist/TAP-Convert-TET/) for an example of this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684f52e2ad132a8d50a850505a18c8cf67adca2e" translate="yes" xml:space="preserve">
          <source>This approach makes it comparatively easy to write code preprocessors without worrying about the form or contents of strings, regexes, etc.</source>
          <target state="translated">Такой подход позволяет сравнительно легко писать препроцессоры кода,не беспокоясь о форме или содержимом строк,регексов и т.п.</target>
        </trans-unit>
        <trans-unit id="21941c4a2190129983b70fab8729b6e9162dfa7f" translate="yes" xml:space="preserve">
          <source>This approach of treating &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; like object methods calls doesn't work for the diamond operator. That's because it's a real operator, not just a function with a comma-less argument. Assuming you've been storing typeglobs in your structure as we did above, you can use the built-in function named &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; to read a record just as &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; does. Given the initialization shown above for @fd, this would work, but only because readline() requires a typeglob. It doesn't work with objects or strings, which might be a bug we haven't fixed yet.</source>
          <target state="translated">Такой подход обработки вызовов методов &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; как объектных методов не работает для оператора diamond. Это потому, что это настоящий оператор, а не просто функция с аргументом без запятой. Предполагая, что вы храните в своей структуре typeglobs, как мы это делали выше, вы можете использовать встроенную функцию с именем &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; для чтения записи точно так же, как это делает &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; . Учитывая показанную выше инициализацию для @fd, это сработает, но только потому, что readline () требует typeglob. Он не работает с объектами или строками, что может быть ошибкой, которую мы еще не исправили.</target>
        </trans-unit>
        <trans-unit id="8f83a93621698a2bcf6c863d26ca6660360038ba" translate="yes" xml:space="preserve">
          <source>This approach of treating &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;printf&lt;/code&gt; like object methods calls doesn't work for the diamond operator. That's because it's a real operator, not just a function with a comma-less argument. Assuming you've been storing typeglobs in your structure as we did above, you can use the built-in function named &lt;code&gt;readline&lt;/code&gt; to read a record just as &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; does. Given the initialization shown above for @fd, this would work, but only because readline() requires a typeglob. It doesn't work with objects or strings, which might be a bug we haven't fixed yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9254d4c73a18d06483f51c6d39891d7febc4dc" translate="yes" xml:space="preserve">
          <source>This approach will preserve links in the installation without creating duplicate binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edd7ed16ccf46b65b081f4b967d5eb2691395f1" translate="yes" xml:space="preserve">
          <source>This argument is &lt;b&gt;required&lt;/b&gt;. All other arguments are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95f50481ff3516b07bb9d7865830ab6c1ff5648" translate="yes" xml:space="preserve">
          <source>This array holds the offsets of the beginnings of the last successful submatches in the currently active dynamic scope. &lt;code&gt;$-[0]&lt;/code&gt; is the offset into the string of the beginning of the entire match. The</source>
          <target state="translated">В этом массиве хранятся смещения начала последних успешных под совпадений в текущей активной динамической области. &lt;code&gt;$-[0]&lt;/code&gt; - это смещение в строке начала всего совпадения. В</target>
        </trans-unit>
        <trans-unit id="e96381bdcc284e80585b7b54b1e289040c1f9efb" translate="yes" xml:space="preserve">
          <source>This array holds the offsets of the ends of the last successful submatches in the currently active dynamic scope. &lt;code&gt;$+[0]&lt;/code&gt; is the offset into the string of the end of the entire match. This is the same value as what the &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; function returns when called on the variable that was matched against. The</source>
          <target state="translated">В этом массиве хранятся смещения концов последних успешных под совпадений в текущей активной динамической области. &lt;code&gt;$+[0]&lt;/code&gt; - это смещение в строке конца всего совпадения. Это то же значение, которое возвращает функция &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; при вызове переменной, с которой была сопоставлена. В</target>
        </trans-unit>
        <trans-unit id="7e3b87670db2d70a8b725b5f6afad0e3488c0499" translate="yes" xml:space="preserve">
          <source>This array holds the offsets of the ends of the last successful submatches in the currently active dynamic scope. &lt;code&gt;$+[0]&lt;/code&gt; is the offset into the string of the end of the entire match. This is the same value as what the &lt;code&gt;pos&lt;/code&gt; function returns when called on the variable that was matched against. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9df0444460b118bc16cc7a6647d43831c503da" translate="yes" xml:space="preserve">
          <source>This array of function pointers is a convenient place to hook into the compilation process. An XS module can put its own custom check function in place of any of the standard ones, to influence the compilation of a particular type of op. However, a custom check function must never fully replace a standard check function (or even a custom check function from another module). A module modifying checking must instead &lt;b&gt;wrap&lt;/b&gt; the preexisting check function. A custom check function must be selective about when to apply its custom behaviour. In the usual case where it decides not to do anything special with an op, it must chain the preexisting op function. Check functions are thus linked in a chain, with the core's base checker at the end.</source>
          <target state="translated">Этот массив указателей на функции - удобное место для подключения к процессу компиляции. Модуль XS может помещать свою собственную настраиваемую функцию проверки вместо любой из стандартных, чтобы влиять на компиляцию определенного типа операции. Однако пользовательская функция проверки никогда не должна полностью заменять стандартную функцию проверки (или даже пользовательскую функцию проверки из другого модуля). Модуль, модифицирующий проверку, должен вместо этого &lt;b&gt;оборачивать&lt;/b&gt; уже существующую функцию проверки. Пользовательская функция проверки должна быть выборочной в отношении того, когда применять свое настраиваемое поведение. В обычном случае, когда он решает не делать ничего особенного с операцией, он должен связать уже существующую функцию операции. Таким образом, проверочные функции связаны в цепочку, в конце которой находится базовый модуль проверки ядра.</target>
        </trans-unit>
        <trans-unit id="b8dc273368b99545f08bf93846a0eeb46f2d8f07" translate="yes" xml:space="preserve">
          <source>This article is about a little-known feature of Perl called</source>
          <target state="translated">Эта статья о малоизвестной особенности Perl под названием</target>
        </trans-unit>
        <trans-unit id="31e9f3bedf523d7ebb982ebf37f1569db684a386" translate="yes" xml:space="preserve">
          <source>This article originally appeared in</source>
          <target state="translated">Эта статья изначально появилась в</target>
        </trans-unit>
        <trans-unit id="290ae5b40be8703f5e688eadedc6451a7fcb95b4" translate="yes" xml:space="preserve">
          <source>This article originally appeared in The Perl Journal #11, and is copyright 1998 The Perl Journal. It appears courtesy of Jon Orwant and The Perl Journal. This document may be distributed under the same terms as Perl itself.</source>
          <target state="translated">Эта статья первоначально появилась в &quot;Журнале Perl&quot; № 11,и на нее распространяется авторское право &quot;Журнала Perl&quot; 1998 года.Она появилась благодаря Джону Оруанту и &quot;Журналу Perl&quot;.Этот документ может распространяться на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="8c193374e77ca7493defa36cbb4f120e07e0e033" translate="yes" xml:space="preserve">
          <source>This article points out cases where gettext (a common system for localizing software interfaces -- i.e., making them work in the user's language of choice) fails because of basic differences between human languages. This article then describes Maketext, a new system capable of correctly treating these differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ced083e00b961f0ed9ea00cb4d87f96f2e0533" translate="yes" xml:space="preserve">
          <source>This assertion may be used as the condition in a</source>
          <target state="translated">Это утверждение может быть использовано в качестве условия для</target>
        </trans-unit>
        <trans-unit id="0000b51c42222ffe097e200394d62769ca419cbc" translate="yes" xml:space="preserve">
          <source>This assumes that we saw the locale &quot;en_US.ISO8859-1&quot; using the commands discussed above. We decided to try that instead of the above faulty locale &quot;En_US&quot;--and in Cshish shells (&lt;b&gt;csh&lt;/b&gt;, &lt;b&gt;tcsh&lt;/b&gt;)</source>
          <target state="translated">Это предполагает, что мы видели локаль &quot;en_US.ISO8859-1&quot; с помощью команд, описанных выше. Мы решили попробовать это вместо указанной выше неисправной локали &quot;En_US&quot; - и в оболочках Cshish ( &lt;b&gt;csh&lt;/b&gt; , &lt;b&gt;tcsh&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="c0dee2f933f09058dd9bf3765b7f846ec57f52d7" translate="yes" xml:space="preserve">
          <source>This attribute is not a search parameter, but is used to report the result of &lt;code&gt;survey&lt;/code&gt; method, as discussed in the next section.</source>
          <target state="translated">Этот атрибут не является параметром поиска, но используется для сообщения результата метода &lt;code&gt;survey&lt;/code&gt; , как обсуждается в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="9c687ced37405f8cf67c894463cfe3d86f5b0e65" translate="yes" xml:space="preserve">
          <source>This attribute is used to specify names to be imported into the extension. It is currently only used by OS/2 and Win32.</source>
          <target state="translated">Данный атрибут используется для указания имен,которые будут импортированы в расширение.В настоящее время он используется только в OS/2 и Win32.</target>
        </trans-unit>
        <trans-unit id="a3e8362900ead72447d5c4ebf2182285972d3847" translate="yes" xml:space="preserve">
          <source>This attribute is used to specify names to be imported into the extension. Takes a hash ref.</source>
          <target state="translated">Данный атрибут используется для указания имен,которые будут импортированы в расширение.Принимает хэш-ссылку.</target>
        </trans-unit>
        <trans-unit id="1878c97024e58d679f418b8cab0863e53682e594" translate="yes" xml:space="preserve">
          <source>This attribute isn't overridden from &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;'s implementation. However, since we turn it on by default, it's worth mentioning here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767e4d21fb47d7f73037ece0977c12a97d29d46d" translate="yes" xml:space="preserve">
          <source>This attribute may be most useful when specified as a string on the command line: perl Makefile.PL EXCLUDE_EXT='Socket Safe'</source>
          <target state="translated">Этот атрибут может быть наиболее полезен при указании в качестве строки в командной строке:perl Makefile.PL EXCLUDE_EXT='Socket Safe'.</target>
        </trans-unit>
        <trans-unit id="79f89eca0caacc11c08af6c151f34570659a105e" translate="yes" xml:space="preserve">
          <source>This attribute may be most useful when specified as a string on the command line: perl Makefile.PL INCLUDE_EXT='POSIX Socket Devel::Peek'</source>
          <target state="translated">Этот атрибут может быть наиболее полезен при указании в качестве строки в командной строке:perl Makefile.PL INCLUDE_EXT='POSIX Socket Devel::Peek'.</target>
        </trans-unit>
        <trans-unit id="f063de8522828eff3b84027f3f1f4329111a6d6f" translate="yes" xml:space="preserve">
          <source>This attribute means that every time this search sees a matching Pod file, it should call this callback routine. The routine is called with two parameters: the current file's filespec, and its pod name. (For example: &lt;code&gt;(&quot;/etc/perljunk/File/Crunk.pm&quot;, &quot;File::Crunk&quot;)&lt;/code&gt; would be in &lt;code&gt;@_&lt;/code&gt; .)</source>
          <target state="translated">Этот атрибут означает, что каждый раз, когда этот поиск видит соответствующий файл Pod, он должен вызывать эту процедуру обратного вызова. Процедура вызывается с двумя параметрами: спецификацией файла текущего файла и именем его модуля. (Например: &lt;code&gt;(&quot;/etc/perljunk/File/Crunk.pm&quot;, &quot;File::Crunk&quot;)&lt;/code&gt; будет в &lt;code&gt;@_&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="b18ca20df7bd3e30c21736b41cee34c8a2b8e2a6" translate="yes" xml:space="preserve">
          <source>This attribute means that every time this search sees a matching Pod file, it should call this callback routine. The routine is called with two parameters: the current file's filespec, and its pod name. (For example: &lt;code&gt;(&quot;/etc/perljunk/File/Crunk.pm&quot;, &quot;File::Crunk&quot;)&lt;/code&gt; would be in &lt;code&gt;@_&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d55a165f99ccc6289583795c82aceb24ceabae" translate="yes" xml:space="preserve">
          <source>This attribute's default value is false, meaning that no callback is called.</source>
          <target state="translated">Значение этого атрибута по умолчанию ложное,что означает,что обратный вызов не вызывается.</target>
        </trans-unit>
        <trans-unit id="bcee703f93ae24f2cb5be27baf6a28edef44800c" translate="yes" xml:space="preserve">
          <source>This attribute's default value is false; and normally you won't need to turn it on.</source>
          <target state="translated">Значение этого атрибута по умолчанию ложное;и обычно его не нужно включать.</target>
        </trans-unit>
        <trans-unit id="56b03f0333e5f7d53de3d13aaa7c296581e96eb6" translate="yes" xml:space="preserve">
          <source>This attribute, if set to a nonzero positive value, will make searches output (via &lt;code&gt;&lt;a href=&quot;../../functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;) notes about what they're doing as they do it. This option may be useful for debugging a pod-related module. This attribute's default value is zero, meaning that no &lt;code&gt;&lt;a href=&quot;../../functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; messages are produced. (Setting verbose to 1 turns on some messages, and setting it to 2 turns on even more messages, i.e., makes the following search(es) even more verbose than 1 would make them.)</source>
          <target state="translated">Если для этого атрибута задано ненулевое положительное значение, поисковые запросы будут выводить (через &lt;code&gt;&lt;a href=&quot;../../functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; ) примечания о том, что они делают, как они это делают. Эта опция может быть полезна для отладки модуля, относящегося к поду. Значение этого атрибута по умолчанию равно нулю, что означает, что &lt;code&gt;&lt;a href=&quot;../../functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; сообщения не создаются. (Установка подробного значения 1 включает некоторые сообщения, а установка значения 2 включает еще больше сообщений, т. Е. Делает следующие поисковые запросы даже более подробными, чем их сделал бы 1.)</target>
        </trans-unit>
        <trans-unit id="0c5539e5a1f8b4ae98bcf6660273088727acad03" translate="yes" xml:space="preserve">
          <source>This attribute, if set to a nonzero positive value, will make searches output (via &lt;code&gt;warn&lt;/code&gt;) notes about what they're doing as they do it. This option may be useful for debugging a pod-related module. This attribute's default value is zero, meaning that no &lt;code&gt;warn&lt;/code&gt; messages are produced. (Setting verbose to 1 turns on some messages, and setting it to 2 turns on even more messages, i.e., makes the following search(es) even more verbose than 1 would make them.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5ab376fb5b92c88b226665b3b3189f69774bb5" translate="yes" xml:space="preserve">
          <source>This attribute, if set to a true value, means that searches should implicitly add perl's</source>
          <target state="translated">Этот атрибут,если он установлен в истинное значение,означает,что поиск должен неявно добавлять perl's</target>
        </trans-unit>
        <trans-unit id="cb9b1d7b2cb6a7fd551e138029c10c2929f9890c" translate="yes" xml:space="preserve">
          <source>This attribute, if set to true will send complaints to STDERR. The default value is false -- i.e., complaints do not go to STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61204e83fba97c2ca8def6dbf1ab66670d89867" translate="yes" xml:space="preserve">
          <source>This attribute, if set to true, will suppress generation of an errata section. The default value is false -- i.e., an errata section will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571c6c575be741c0ccb3900f5d3e71326d82d454" translate="yes" xml:space="preserve">
          <source>This attribute, if set to true, will suppress reports of non-fatal error messages. The default value is false, meaning that complaints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a182f040f9812e41854866431a64ba79744c6637" translate="yes" xml:space="preserve">
          <source>This attribute, when set to a true value (and it is false by default) ignores any &quot;X&amp;lt;...&amp;gt;&quot; sequences in the document being parsed. Many formats don't actually use the content of these codes, so have no reason to process them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b434a6b0cc83e10e398b4286a85f3e17ab1066b8" translate="yes" xml:space="preserve">
          <source>This attribute, when set to a true value (and it is false by default) makes sure that only one event (or token, or node) will be created for any single contiguous sequence of text. For example, consider this somewhat contrived example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a15dcae492825f898078cd25d1654376a0c6156" translate="yes" xml:space="preserve">
          <source>This attribute, when set to a true value (it is false by default) will keep &lt;code&gt;=encoding&lt;/code&gt; and its content in the event structure. Most formats don't actually need to process the content of an &lt;code&gt;=encoding&lt;/code&gt; directive, even when this directive sets the encoding and the processor makes use of the encoding information. Indeed, it is possible to know the encoding without processing the directive content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696114490e2efba39fd9f36eac6a38a5d07a8aca" translate="yes" xml:space="preserve">
          <source>This became fatal in Perl 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39a84ee1b444ad72be8b273ce2aa43be2362f55" translate="yes" xml:space="preserve">
          <source>This behavior can be overridden by supplying your own set of files to search. PL_FILES accepts a hash ref, the key being the file to run and the value is passed in as the first argument when the PL file is run.</source>
          <target state="translated">Такое поведение можно переопределить,предоставив свой собственный набор файлов для поиска.PL_FILES принимает хэш-файл,ключом которого является выполняемый файл,а значение передается в качестве первого аргумента при запуске PL-файла.</target>
        </trans-unit>
        <trans-unit id="fa4bb1602ab15283bd3eccd436e14ac034642f38" translate="yes" xml:space="preserve">
          <source>This behavior is convenient, because we usually want to ignore newlines when we count and match characters in a line. Sometimes, however, we want to keep track of newlines. We might even want &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'$'&lt;/code&gt; to anchor at the beginning and end of lines within the string, rather than just the beginning and end of the string. Perl allows us to choose between ignoring and paying attention to newlines by using the &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; modifiers. &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; stand for single line and multi-line and they determine whether a string is to be treated as one continuous string, or as a set of lines. The two modifiers affect two aspects of how the regexp is interpreted: 1) how the &lt;code&gt;'.'&lt;/code&gt; character class is defined, and 2) where the anchors &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'$'&lt;/code&gt; are able to match. Here are the four possible combinations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31de598976c4af9df58fa731498e0e725fcefe91" translate="yes" xml:space="preserve">
          <source>This behavior is convenient, because we usually want to ignore newlines when we count and match characters in a line. Sometimes, however, we want to keep track of newlines. We might even want &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; to anchor at the beginning and end of lines within the string, rather than just the beginning and end of the string. Perl allows us to choose between ignoring and paying attention to newlines by using the &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; modifiers. &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; stand for single line and multi-line and they determine whether a string is to be treated as one continuous string, or as a set of lines. The two modifiers affect two aspects of how the regexp is interpreted: 1) how the &lt;code&gt;'.'&lt;/code&gt; character class is defined, and 2) where the anchors &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are able to match. Here are the four possible combinations:</source>
          <target state="translated">Такое поведение удобно, потому что мы обычно хотим игнорировать символы новой строки при подсчете и сопоставлении символов в строке. Однако иногда мы хотим отслеживать новые строки. Нам может даже понадобиться привязка &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;$&lt;/code&gt; к началу и концу строк внутри строки, а не только к началу и концу строки. Perl позволяет нам выбирать между игнорированием и обращением внимания на символы новой строки с помощью модификаторов &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//m&lt;/code&gt; . &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//m&lt;/code&gt; обозначают однострочную и многострочную строки, и они определяют, следует ли рассматривать строку как одну непрерывную строку или как набор строк. Два модификатора влияют на два аспекта интерпретации регулярного выражения: 1) как символ &lt;code&gt;'.'&lt;/code&gt; класс символов определен, и 2) где якоря &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;$&lt;/code&gt; могут совпадать. Вот четыре возможных комбинации:</target>
        </trans-unit>
        <trans-unit id="3d6ebadd3063ef053971debc9b4e78f1e936126e" translate="yes" xml:space="preserve">
          <source>This behavior is more &quot;Do what I mean&quot; than in earlier Perls for most applications. But it catches fewer issues for code that needs to be strictly Unicode compliant. Therefore there is an additional mode of operation available to accommodate such code. This mode is enabled if a regular expression pattern is compiled within the lexical scope where the &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; warning class has been made fatal, say by:</source>
          <target state="translated">Это поведение больше похоже на &amp;laquo;Делай то, что я имею в виду&amp;raquo;, чем в более ранних версиях Perls для большинства приложений. Но он выявляет меньше проблем для кода, который должен быть строго совместим с Unicode. Таким образом, существует дополнительный режим работы для размещения такого кода. Этот режим включен, если шаблон регулярного выражения компилируется в лексической области видимости, в которой &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; предупреждения &quot;non_unicode&quot; стал фатальным, например:</target>
        </trans-unit>
        <trans-unit id="092eaaecfde2fe8092e286b99e012b8ea81cec11" translate="yes" xml:space="preserve">
          <source>This behavior of &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; is to be compatible with POSIX behavior and not traditional VMS behavior.</source>
          <target state="translated">Такое поведение &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; должно быть совместимо с поведением POSIX, а не с традиционным поведением VMS.</target>
        </trans-unit>
        <trans-unit id="76845e7cfd2a36561cb45a7adf71017bb1774b07" translate="yes" xml:space="preserve">
          <source>This behavior of &lt;code&gt;unlink&lt;/code&gt; is to be compatible with POSIX behavior and not traditional VMS behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353b3ac3017572fed965aadb9e085377b2c9e20d" translate="yes" xml:space="preserve">
          <source>This behavior provides the semantic of lexical scoping, and is used in, for instance, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; pragma.</source>
          <target state="translated">Это поведение обеспечивает семантику лексической области видимости и используется, например, в прагме &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96dcd6333752f9f98479a9189f9fc8dc00af90ba" translate="yes" xml:space="preserve">
          <source>This behavior provides the semantic of lexical scoping, and is used in, for instance, the &lt;code&gt;use strict&lt;/code&gt; pragma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902d9db5da6a9d0d90bec88dd7435e3d3036822b" translate="yes" xml:space="preserve">
          <source>This behaviour is identical to that of the actual compiler.</source>
          <target state="translated">Такое поведение идентично поведению реального компилятора.</target>
        </trans-unit>
        <trans-unit id="6e8dc928034c49a32a9b32094d6524d49150a39e" translate="yes" xml:space="preserve">
          <source>This behviour is copied inspired by &lt;code&gt;IO::Socket::INET&lt;/code&gt;; for more fine grained control over connection timeouts, consider performing a nonblocking connect directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aea6026d60fc1fd0c7a4849c08ac16e1e32fc6e" translate="yes" xml:space="preserve">
          <source>This binds a &lt;a href=&quot;http://man.he.net/man3/dbm&quot;&gt;dbm(3)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man3/ndbm&quot;&gt;ndbm(3)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man3/sdbm&quot;&gt;sdbm(3)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man3/gdbm&quot;&gt;gdbm(3)&lt;/a&gt;, or Berkeley DB file to a hash. HASH is the name of the hash. (Unlike normal &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, the first argument is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9ffc9da0934423cf7a8b2a8167c734225e00ac" translate="yes" xml:space="preserve">
          <source>This binds a dbm(3), ndbm(3), sdbm(3), gdbm(3), or Berkeley DB file to a hash. HASH is the name of the hash. (Unlike normal &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, the first argument is</source>
          <target state="translated">Это связывает файл dbm (3), ndbm (3), sdbm (3), gdbm (3) или Berkeley DB с хешем. HASH - это имя хеша. (В отличие от обычного &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , первый аргумент</target>
        </trans-unit>
        <trans-unit id="2616a24dba48e4df35dec143fa3cabdfd81fd386" translate="yes" xml:space="preserve">
          <source>This binds a dbm(3), ndbm(3), sdbm(3), gdbm(3), or Berkeley DB file to a hash. HASH is the name of the hash. (Unlike normal &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, the first argument is</source>
          <target state="translated">Это связывает файл dbm (3), ndbm (3), sdbm (3), gdbm (3) или Berkeley DB с хешем. HASH - это имя хеша. (В отличие от обычного &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , первый аргумент</target>
        </trans-unit>
        <trans-unit id="a6324526e82c2b2028f79347525bf2bc78810ebd" translate="yes" xml:space="preserve">
          <source>This block modifies all the &lt;code&gt;.c&lt;/code&gt; files in the current directory, leaving a backup of the original data from each file in a new &lt;code&gt;.c.orig&lt;/code&gt; file.</source>
          <target state="translated">Этот блок изменяет все файлы &lt;code&gt;.c&lt;/code&gt; в текущем каталоге, оставляя резервную копию исходных данных из каждого файла в новом файле &lt;code&gt;.c.orig&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba453fd403a510bef4a413f0d9ec2dc3165244e0" translate="yes" xml:space="preserve">
          <source>This boilerplate uses the low-overhead &lt;code&gt;XSLoader&lt;/code&gt; if present; if used with an antique Perl which has no &lt;code&gt;XSLoader&lt;/code&gt; , it falls back to using &lt;code&gt;DynaLoader&lt;/code&gt; .</source>
          <target state="translated">Этот шаблон использует &lt;code&gt;XSLoader&lt;/code&gt; с минимальными издержками, если он присутствует; при использовании со старинным Perl, не &lt;code&gt;XSLoader&lt;/code&gt; , он возвращается к использованию &lt;code&gt;DynaLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed948443998fb2b43bd30eac485b18baa935c1f0" translate="yes" xml:space="preserve">
          <source>This boilerplate uses the low-overhead &lt;code&gt;XSLoader&lt;/code&gt; if present; if used with an antique Perl which has no &lt;code&gt;XSLoader&lt;/code&gt;, it falls back to using &lt;code&gt;DynaLoader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac1b6bd4290dbb1a12be2a600f9520d51970c2a" translate="yes" xml:space="preserve">
          <source>This breaks tests that do string comparison of TAP output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1469fe949bc40a4de2b7dea78ef9ae09eb5856f4" translate="yes" xml:space="preserve">
          <source>This brings up a very important lesson. Code has bugs. Tests are code. Ergo, tests have bugs. A failing test could mean a bug in the code, but don't discount the possibility that the test is wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090e5f02457ce14eed85483c0b931f07be2bd405" translate="yes" xml:space="preserve">
          <source>This bug only affects closures that are generated by the block but used afterwards. Lexical variables that are only used during the lifetime of the block's execution will take their individual values for each invocation, as normal.</source>
          <target state="translated">Эта ошибка влияет только на замыкания,которые генерируются блоком,но используются после.Лексические переменные,которые используются только во время времени исполнения блока,будут принимать свои индивидуальные значения для каждого вызова,как обычно.</target>
        </trans-unit>
        <trans-unit id="68e1e1f3b09649c408f4196cd0038c9420b69124" translate="yes" xml:space="preserve">
          <source>This bug was deprecated in Perl 5.004, has been rectified in Perl 5.28 by using method lookup only for methods' &lt;code&gt;AUTOLOAD&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb23a96de018295d436dfc71b478c2f496e60be" translate="yes" xml:space="preserve">
          <source>This bug was fixed in Perl 5.18, but may still trip you up if you are using older versions:</source>
          <target state="translated">Эта ошибка была исправлена в Perl 5.18,но все равно может сбить вас с толку,если вы используете более старые версии:</target>
        </trans-unit>
        <trans-unit id="ca44502c3ed83912a6b5db8a967d8fd6b852bc6b" translate="yes" xml:space="preserve">
          <source>This bug will be rectified in future by using method lookup only for methods' &lt;code&gt;AUTOLOAD&lt;/code&gt; s. However, there is a significant base of existing code that may be using the old behavior. So, as an interim step, Perl currently issues an optional warning when non-methods use inherited &lt;code&gt;AUTOLOAD&lt;/code&gt; s.</source>
          <target state="translated">В будущем эта ошибка будет исправлена ​​путем использования поиска только для методов &lt;code&gt;AUTOLOAD&lt;/code&gt; . Однако существует значительная база существующего кода, который может использовать старое поведение. Итак, в качестве промежуточного шага Perl в настоящее время выдает необязательное предупреждение, когда не-методы используют унаследованные &lt;code&gt;AUTOLOAD&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="3151c00be9f916508bc5bf705b67d1e4b35d8229" translate="yes" xml:space="preserve">
          <source>This call extracts the next single substring that is a valid Perl quotelike operator (and removes it from $text):</source>
          <target state="translated">Этот вызов извлекает следующую единственную подстроку,которая является действительным оператором Perl в квадратичной форме (и удаляет ее из текста $):</target>
        </trans-unit>
        <trans-unit id="ced21c2bd0a49aeaa42731431a2edf3632b44a97" translate="yes" xml:space="preserve">
          <source>This call will allow &lt;code&gt;--l&lt;/code&gt; and &lt;code&gt;--L&lt;/code&gt; for the length option, but requires a least &lt;code&gt;--hea&lt;/code&gt; and &lt;code&gt;--hei&lt;/code&gt; for the head and height options.</source>
          <target state="translated">Этот вызов разрешит &lt;code&gt;--l&lt;/code&gt; и &lt;code&gt;--L&lt;/code&gt; для параметра длины, но требует минимум &lt;code&gt;--hea&lt;/code&gt; и &lt;code&gt;--hei&lt;/code&gt; для параметров головы и высоты.</target>
        </trans-unit>
        <trans-unit id="cc74026b11403dd05d9d70bf8ec94212f671778f" translate="yes" xml:space="preserve">
          <source>This callback is where Perl untaints its own capture variables under taint mode (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;). See the &lt;code&gt;Perl_reg_numbered_buff_fetch&lt;/code&gt; function in</source>
          <target state="translated">В этом обратном вызове Perl восстанавливает свои собственные переменные захвата в режиме taint (см. &lt;a href=&quot;perlsec&quot;&gt;Perlsec&lt;/a&gt; ). См. &lt;code&gt;Perl_reg_numbered_buff_fetch&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="34608b82ee2af981743bfaea1702ca89b064619d" translate="yes" xml:space="preserve">
          <source>This callback will always be invoked and this will happen for each result after one of the above callbacks is invoked. For example, if &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; is loaded, you could use the following to color your test output:</source>
          <target state="translated">Этот обратный вызов будет вызываться всегда, и это будет происходить для каждого результата после вызова одного из вышеуказанных обратных вызовов. Например, если &lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; загружен, вы можете использовать следующее для раскрашивания тестового вывода:</target>
        </trans-unit>
        <trans-unit id="f9cffd244aaaaeed6cac7d9924c6db108cbddbfb" translate="yes" xml:space="preserve">
          <source>This callback will always be invoked and this will happen for each result after one of the above callbacks is invoked. For example, if &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; is loaded, you could use the following to color your test output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367b3e398988397a700bd743e801d4bc7d9d9445" translate="yes" xml:space="preserve">
          <source>This calls &lt;code&gt;sv_collxfrm_flags&lt;/code&gt; with the SV_GMAGIC flag. See &lt;code&gt;&lt;a href=&quot;#sv_collxfrm_flags&quot;&gt;&quot;sv_collxfrm_flags&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84240a7c3c6fb058597f6d953d7900c399c1c57" translate="yes" xml:space="preserve">
          <source>This calls &lt;code&gt;sv_collxfrm_flags&lt;/code&gt; with the SV_GMAGIC flag. See &lt;code&gt;sv_collxfrm_flags&lt;/code&gt; .</source>
          <target state="translated">Это вызывает &lt;code&gt;sv_collxfrm_flags&lt;/code&gt; с флагом SV_GMAGIC. См. &lt;code&gt;sv_collxfrm_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3061d1429b373972a7ca085f04de1fcdc079ed5" translate="yes" xml:space="preserve">
          <source>This calls the &lt;a href=&quot;http://man.he.net/man2/select&quot;&gt;select(2)&lt;/a&gt; syscall with the bit masks specified, which can be constructed using &lt;a href=&quot;#fileno-FILEHANDLE&quot;&gt;&lt;code&gt;fileno&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#vec-EXPR%2COFFSET%2CBITS&quot;&gt;&lt;code&gt;vec&lt;/code&gt;&lt;/a&gt;, along these lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5732bf6668134ab56787956038f1ef3e84c0d62a" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;bark&lt;/code&gt; method from class &lt;code&gt;Dog&lt;/code&gt; on an object of class &lt;code&gt;Tree&lt;/code&gt;, even if the two classes are completely unrelated. Use this with great care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86657828dc4b39c2a031e8feb96e30aa836f7063" translate="yes" xml:space="preserve">
          <source>This calls the select(2) syscall with the bit masks specified, which can be constructed using &lt;code&gt;&lt;a href=&quot;fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, along these lines:</source>
          <target state="translated">Это вызывает системный вызов select (2) с указанными битовыми масками, который можно создать с помощью &lt;code&gt;&lt;a href=&quot;fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; , в следующих строках:</target>
        </trans-unit>
        <trans-unit id="6030aab04889f87b188edddb787660db9b1b144a" translate="yes" xml:space="preserve">
          <source>This calls the select(2) syscall with the bit masks specified, which can be constructed using &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, along these lines:</source>
          <target state="translated">Это вызывает системный вызов select (2) с указанными битовыми масками, который можно создать с помощью &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; , в следующих строках:</target>
        </trans-unit>
        <trans-unit id="9bc12c1e6a592155ae29365e5d2b2a31283e6dd9" translate="yes" xml:space="preserve">
          <source>This can also be a problem with intermediate subprocesses in more complicated code, which will call waitpid() on all open filehandles during global destruction--in no predictable order.</source>
          <target state="translated">Это также может быть проблема с промежуточными подпроцессами в более сложном коде,которые будут вызывать waitpid()на всех открытых файловых дескрипторах при глобальном уничтожении-в непредсказуемом порядке.</target>
        </trans-unit>
        <trans-unit id="62869b1f9b57cb9d79e8730408b0c95ddf4b16ac" translate="yes" xml:space="preserve">
          <source>This can also be called with a null first argument to indicate that &lt;code&gt;oldstash&lt;/code&gt; has been deleted.</source>
          <target state="translated">Это также можно вызвать с нулевым первым аргументом, чтобы указать, что &lt;code&gt;oldstash&lt;/code&gt; был удален.</target>
        </trans-unit>
        <trans-unit id="d43bae30188acac82d7e357353fabe7bc6c40a81" translate="yes" xml:space="preserve">
          <source>This can be accomplished by adding a repeat specifier to the option specification. Repeat specifiers are very similar to the &lt;code&gt;{...}&lt;/code&gt; repeat specifiers that can be used with regular expression patterns. For example, the above command line would be handled as follows:</source>
          <target state="translated">Этого можно достичь, добавив спецификатор повтора в спецификацию опции. Спецификаторы повтора очень похожи на спецификаторы повтора &lt;code&gt;{...}&lt;/code&gt; , которые можно использовать с шаблонами регулярных выражений. Например, указанная выше командная строка будет обрабатываться следующим образом:</target>
        </trans-unit>
        <trans-unit id="372e8345a480f344b8fa12b55e0c07a688e7200f" translate="yes" xml:space="preserve">
          <source>This can be accomplished with a destination routine:</source>
          <target state="translated">Этого можно достичь с помощью рутины назначения:</target>
        </trans-unit>
        <trans-unit id="464c830ff985dea25fcd843d007b91d51ce2d2e9" translate="yes" xml:space="preserve">
          <source>This can be called as an object method with no arguments, in which case the &lt;code&gt;facet_data()&lt;/code&gt; method will be called to get the facet data to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e3779b19d94c38ed3503cfda1db4bf067d5a3d" translate="yes" xml:space="preserve">
          <source>This can be conveniently combined with precalculation of keys as given above.</source>
          <target state="translated">Это удобно сочетается с предварительным расчетом клавиш,как описано выше.</target>
        </trans-unit>
        <trans-unit id="9aa85730df925d52e0fdb1ee3b214c2aec4f3fb3" translate="yes" xml:space="preserve">
          <source>This can be especially useful when combined with the &lt;code&gt;sockhost_service&lt;/code&gt; or &lt;code&gt;peerhost_service&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf76472161d915f784b473af79b1bc9fd8e3268" translate="yes" xml:space="preserve">
          <source>This can be used by subclasses to generate a starting facet data hashref. This will populate the hashref with the trace, meta, amnesty, and about facets. These facets are nearly always produced the same way for all events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45e565a182719c4b0dabf0a12cdb967109b4b28" translate="yes" xml:space="preserve">
          <source>This can be used even on systems that do not support forking, but this possibly allows code intended to read files to unexpectedly execute programs. If one can be sure that a particular program is a Perl script expecting filenames in @ARGV using the two-argument form of open() or the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator, the clever programmer can write something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b4de28313d2cd5bd8f3c8a3bcc24922ad427d0" translate="yes" xml:space="preserve">
          <source>This can be used to add a callback that is called after all testing is done. This is too late to add additional results, the main use of this callback is to set the exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ad3a6dca3eb7d856d39662d5cd0dcb078d6c2d" translate="yes" xml:space="preserve">
          <source>This can be used to add amnesty to this event. Amnesty only effects failing assertions in most cases, but some formatters may display them for passing assertions, or even non-assertions as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee9c9bfb944617270087476daa04080c698fb3a" translate="yes" xml:space="preserve">
          <source>This can be used to change the</source>
          <target state="translated">Это может быть использовано для изменения</target>
        </trans-unit>
        <trans-unit id="748558e1f1395a2c9a926433d579682f2842ae42" translate="yes" xml:space="preserve">
          <source>This can be used to change the encoding from this event onward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06a37a2d3a4148b6ee21e32af3a875ef2d651aa" translate="yes" xml:space="preserve">
          <source>This can be used to determine which branch of a pattern was matched without using a separate capture group for each branch, which in turn can result in a performance improvement, as perl cannot optimize &lt;code&gt;/(?:(x)|(y)|(z))/&lt;/code&gt; as efficiently as something like &lt;code&gt;/(?:x(*MARK:x)|y(*MARK:y)|z(*MARK:z))/&lt;/code&gt; .</source>
          <target state="translated">Это можно использовать, чтобы определить, какая ветвь шаблона была сопоставлена ​​без использования отдельной группы захвата для каждой ветви, что, в свою очередь, может привести к повышению производительности, поскольку perl не может оптимизировать &lt;code&gt;/(?:(x)|(y)|(z))/&lt;/code&gt; так же эффективно, как что-то вроде &lt;code&gt;/(?:x(*MARK:x)|y(*MARK:y)|z(*MARK:z))/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0743ccbc8c558ff3b1e6409093d7b93b4731ff66" translate="yes" xml:space="preserve">
          <source>This can be used to determine which branch of a pattern was matched without using a separate capture group for each branch, which in turn can result in a performance improvement, as perl cannot optimize &lt;code&gt;/(?:(x)|(y)|(z))/&lt;/code&gt; as efficiently as something like &lt;code&gt;/(?:x(*MARK:x)|y(*MARK:y)|z(*MARK:z))/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346fd0e78230a9b57890db54a4f1c29bc084f4d0" translate="yes" xml:space="preserve">
          <source>This can be used to disable auto-ending behavior for a hub. The auto-ending behavior is triggered by an end block and is used to cull IPC events, and output the final plan if the plan was 'NO PLAN'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866129af074a2494eb93f1a1e7f5ceba61d1bdd7" translate="yes" xml:space="preserve">
          <source>This can be used to get/set the no_wait status. Waiting is turned on by default. Waiting will cause the parent process/thread to wait until all child processes and threads are finished before exiting. You will almost never want to turn this off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b6a0827f222037bfd74f5afc449218b3d32dc4" translate="yes" xml:space="preserve">
          <source>This can be used to provide overridable configuration defaults:</source>
          <target state="translated">Это может быть использовано для обеспечения переопределяемых конфигурационных настроек по умолчанию:</target>
        </trans-unit>
        <trans-unit id="4da1a803fb62b25b77cf251408452655ad68be2a" translate="yes" xml:space="preserve">
          <source>This can be used to reliably link multiple events created by the same tool. For instance a failing test like &lt;code&gt;ok(0, &quot;fail&quot;&lt;/code&gt; will generate 2 events, one being a &lt;a href=&quot;Test2::Event::Ok&quot;&gt;Test2::Event::Ok&lt;/a&gt;, the other being a &lt;a href=&quot;Test2::Event::Diag&quot;&gt;Test2::Event::Diag&lt;/a&gt;, both of these events are related having been created under the same context and by the same initial tool (though multiple tools may have been nested under the initial one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d94a2783d9c9eae4add9e504e9f74c8f2268eac" translate="yes" xml:space="preserve">
          <source>This can be used to remove a context acquire hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bcfb4fcf149daa8d598288ab8cfd7c250fe9bc" translate="yes" xml:space="preserve">
          <source>This can be used to remove a context init hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576301f79d31775925cb858d92533113a213c854" translate="yes" xml:space="preserve">
          <source>This can be used to remove a context release hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7302fe67fb868f202093521caa858978f0b6a28c" translate="yes" xml:space="preserve">
          <source>This can be used to see the effect of/bugs in the various layers e.g.</source>
          <target state="translated">Это может быть использовано для того,чтобы увидеть эффект/ошибки в различных слоях,например</target>
        </trans-unit>
        <trans-unit id="574eac6f70577b288bd89928d8641a1fc45055d3" translate="yes" xml:space="preserve">
          <source>This can be used to send an &lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2::Event::Plan&lt;/a&gt; event. This event usually takes either a number of tests you expect to run. Optionally you can set the expected count to 0 and give the 'SKIP' directive with a reason to cause all tests to be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfa5c255aef0fa01c834c7ba10a888fee1030c4" translate="yes" xml:space="preserve">
          <source>This can be used to set the template for the IPC temp dir. The template should follow template specifications from &lt;a href=&quot;File::Temp&quot;&gt;File::Temp&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e14da8dfc2bfdf2f71fc590d8fe2a63e1000ea" translate="yes" xml:space="preserve">
          <source>This can be used to store bytes in the string component of the SV. Here the representation of the data is irrelevant to perl and the bytes themselves are just stored in the SV. It is assumed that the C variable is a pointer (the bytes are copied from that memory location). If the pointer is pointing to something that is represented by 8 bytes then those 8 bytes are stored in the SV (and length() will report a value of 8). This entry is similar to T_OPAQUE.</source>
          <target state="translated">Это может быть использовано для хранения байтов в строковом компоненте SV.Здесь представление данных не имеет значения для perl,а сами байты просто хранятся в SV.Предполагается,что переменная C является указателем (байты копируются из этой памяти).Если указатель указывает на то,что представлено 8 байтами,то эти 8 байтов хранятся в SV (и функция length()сообщит значение 8).Эта запись аналогична T_OPAQUE.</target>
        </trans-unit>
        <trans-unit id="0410f2327d86bdf0fdae05f37687269ec62b9fe1" translate="yes" xml:space="preserve">
          <source>This can be used to store data from non-pointer types in the string part of an SV. It is similar to T_OPAQUEPTR except that the typemap retrieves the pointer directly rather than assuming it is being supplied. For example, if an integer is imported into Perl using T_OPAQUE rather than T_IV the underlying bytes representing the integer will be stored in the SV but the actual integer value will not be available. i.e. The data is opaque to perl.</source>
          <target state="translated">Это может быть использовано для хранения данных не указателей типов в строковой части SV.Это похоже на T_OPAQUEPTR за исключением того,что карта типов извлекает указатель напрямую,а не предполагает,что он поставляется.Например,если в Perl импортировано целое число с помощью T_OPAQUE,а не T_IV,то базовые байты,представляющие целое число,будут храниться в SV,но действительное целое значение будет недоступно,т.е.данные будут непрозрачны для perl.</target>
        </trans-unit>
        <trans-unit id="89bc9efe11bbc18be53fe6f2369d301f92011919" translate="yes" xml:space="preserve">
          <source>This can be useful when carrying out batch operations on multiple files that have both an input filename and output filename and the output file can be derived from the input filename. Examples of operations where this can be useful include, file renaming, file copying and file compression.</source>
          <target state="translated">Это может быть полезно при выполнении пакетных операций над несколькими файлами,которые имеют как имя входного,так и выходного файла,а выходной файл может быть получен из имени входного файла.Примеры операций,в которых это может быть полезно,включают переименование,копирование и сжатие файлов.</target>
        </trans-unit>
        <trans-unit id="7ee5530e46592bdd5b18c5d4e4adf9c1e149be67" translate="yes" xml:space="preserve">
          <source>This can easily be demonstrated by using a module, such as the Socket module, which uses eval &quot;...&quot; as part of an AUTOLOAD function. You can 'use' the module outside the compartment and share an (autoloaded) function with the compartment. If an autoload is triggered by code in the compartment, or by any code anywhere that is called by any means from the compartment, then the eval in the Socket module's AUTOLOAD function happens in the namespace of the compartment. Any variables created or used by the eval'd code are now under the control of the code in the compartment.</source>
          <target state="translated">Это можно легко продемонстрировать,используя модуль,например,Socket-модуль,который использует eval &quot;...&quot; как часть функции AUTOLOAD.Вы можете &quot;использовать&quot; модуль снаружи отсека и разделять (автозагружающуюся)функцию с отсеком.Если автозагрузка вызывается кодом в помещении или любым другим кодом,который вызывается любым способом из помещения,то eval в АВТОЛОАЙНОМ блоке Socket происходит в пространстве имён помещения.Любые переменные,созданные или использованные кодом eval'd,теперь находятся под контролем кода в помещении.</target>
        </trans-unit>
        <trans-unit id="aaf34cf4f37f54a5f64557a3e90c8cf5a33d7a99" translate="yes" xml:space="preserve">
          <source>This can fail to be unique if a process generates an id, calls exec, and does it again after the exec and it all happens in less than a second. It can also happen if the systems process id's cycle in less than a second allowing 2 different programs that use this generator to run with the same PID in less than a second. Both these cases are sufficiently unlikely. If you need universally unique ids, or ids that are unique in these conditions, look at &lt;a href=&quot;Data::UUID&quot;&gt;Data::UUID&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33eb1b5384e732b374fa6a2eb81b539c4ef372da" translate="yes" xml:space="preserve">
          <source>This can give a serious performance boost to your threaded program, since more than one thread will be executing at the same time. As a tradeoff, though, any of those nagging synchronization issues that might not have shown with basic kernel threads will appear with a vengeance.</source>
          <target state="translated">Это может дать серьезный прирост производительности вашей многопоточной программы,так как более одного потока будет выполняться одновременно.В качестве компромисса,однако,любая из этих ворчливых проблем синхронизации,которые,возможно,не проявились бы при работе с основными потоками ядра,появится с отомщением.</target>
        </trans-unit>
        <trans-unit id="56f625d37a903c20859d631591a0773b6d672cf7" translate="yes" xml:space="preserve">
          <source>This can lead to some ambiguities. When &lt;code&gt;\N&lt;/code&gt; is not followed immediately by a left brace, Perl assumes the &lt;code&gt;[^\n]&lt;/code&gt; meaning. Also, if the braces form a valid quantifier such as &lt;code&gt;\N{3}&lt;/code&gt; or &lt;code&gt;\N{5,}&lt;/code&gt; , Perl assumes that this means to match the given quantity of non-newlines (in these examples, 3; and 5 or more, respectively). In all other case, where there is a &lt;code&gt;\N{&lt;/code&gt; and a matching &lt;code&gt;}&lt;/code&gt;, Perl assumes that a character name is desired.</source>
          <target state="translated">Это может привести к некоторым двусмысленностям. Если за &lt;code&gt;\N&lt;/code&gt; сразу не следует левая скобка, Perl принимает значение &lt;code&gt;[^\n]&lt;/code&gt; . Кроме того, если фигурные скобки образуют допустимый квантификатор, такой как &lt;code&gt;\N{3}&lt;/code&gt; или &lt;code&gt;\N{5,}&lt;/code&gt; , Perl предполагает, что это означает соответствие заданному количеству не-новых строк (в этих примерах 3; и 5 или более, соответственно). Во всех остальных случаях, когда есть &lt;code&gt;\N{&lt;/code&gt; и совпадающий &lt;code&gt;}&lt;/code&gt; , Perl предполагает, что требуется имя символа.</target>
        </trans-unit>
        <trans-unit id="723464c11a99a5463e5bccf086f2c836d4ccab19" translate="yes" xml:space="preserve">
          <source>This can lead to some ambiguities. When &lt;code&gt;\N&lt;/code&gt; is not followed immediately by a left brace, Perl assumes the &lt;code&gt;[^\n]&lt;/code&gt; meaning. Also, if the braces form a valid quantifier such as &lt;code&gt;\N{3}&lt;/code&gt; or &lt;code&gt;\N{5,}&lt;/code&gt;, Perl assumes that this means to match the given quantity of non-newlines (in these examples, 3; and 5 or more, respectively). In all other case, where there is a &lt;code&gt;\N{&lt;/code&gt; and a matching &lt;code&gt;}&lt;/code&gt;, Perl assumes that a character name is desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959b6fc0ff47607dd43aa724268206e3f29dd78b" translate="yes" xml:space="preserve">
          <source>This can lead to unexpected results. For example, a string's semantics can suddenly change if a code point above 255 is appended to it, which changes the rules from ASCII to Unicode. As an example, consider the following program and its output:</source>
          <target state="translated">Это может привести к неожиданным результатам.Например,семантика строки может внезапно измениться,если к ней приложить точку кода выше 255,что изменит правила с ASCII на Unicode.В качестве примера рассмотрим следующую программу и ее вывод:</target>
        </trans-unit>
        <trans-unit id="85608589698ca117deecc9b9804cdf91bb5ea3e0" translate="yes" xml:space="preserve">
          <source>This can result from a bug in emx sprintf which was fixed in 0.9d fix 03.</source>
          <target state="translated">Это может быть вызвано ошибкой в emx sprintf,которая была исправлена в 0.9d fix 03.</target>
        </trans-unit>
        <trans-unit id="a0068e1ff0325fa89c18995ccdfd4bec0d4d0e1c" translate="yes" xml:space="preserve">
          <source>This can set either by hints files or by Configure. If using a (non-gcc) vendor cc, this variable may contain a version for the compiler.</source>
          <target state="translated">Это можно установить либо с помощью файлов подсказок,либо с помощью команды &quot;Настроить&quot;.При использовании cc (не gcc)производителя,эта переменная может содержать версию для компилятора.</target>
        </trans-unit>
        <trans-unit id="b497dc3b646a186b11a326e1c1c02e389336f453" translate="yes" xml:space="preserve">
          <source>This can set either by hints files or by Configure. If using gcc, this is gcc, and if not, usually equal to cc, unimpressive, no? Some platforms, however, make good use of this by storing the flavor of the C compiler being used here. For example if using the Sun WorkShop suite, ccname will be &lt;code&gt;workshop&lt;/code&gt; .</source>
          <target state="translated">Это можно установить либо с помощью файлов подсказок, либо с помощью Configure. При использовании gcc это gcc, а если нет, обычно равно cc, не впечатляет, нет? Некоторые платформы, однако, хорошо используют это, сохраняя особенности используемого здесь компилятора C. Например, при использовании пакета Sun WorkShop ccname будет &lt;code&gt;workshop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69cabf4ea065c9fd2da62cddd5444eb3ffe5f2f7" translate="yes" xml:space="preserve">
          <source>This can set either by hints files or by Configure. If using gcc, this is gcc, and if not, usually equal to cc, unimpressive, no? Some platforms, however, make good use of this by storing the flavor of the C compiler being used here. For example if using the Sun WorkShop suite, ccname will be &lt;code&gt;workshop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6e8fb26d6f44c6d09abe16fd5950ff26dfa1ef" translate="yes" xml:space="preserve">
          <source>This category includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268887449daa89d9e6e6591c09f61433e4f65428" translate="yes" xml:space="preserve">
          <source>This causes Attribute::Handlers to define the &lt;code&gt;Roo&lt;/code&gt; attribute in the package that imports the Tie::Me::Kangaroo:Down::Sport module.</source>
          <target state="translated">Это заставляет Attribute :: Handlers определить атрибут &lt;code&gt;Roo&lt;/code&gt; в пакете, который импортирует модуль Tie :: Me :: Kangaroo: Down :: Sport.</target>
        </trans-unit>
        <trans-unit id="102ace81a524208492f6e027d89b5645163151f6" translate="yes" xml:space="preserve">
          <source>This causes perl to load your module but does not import any symbols.</source>
          <target state="translated">Это приводит к тому,что perl загружает ваш модуль,но не импортирует никаких символов.</target>
        </trans-unit>
        <trans-unit id="c30feda4a3a3684c859a87888367dce95a5f76b5" translate="yes" xml:space="preserve">
          <source>This causes the redispatcher to only visit each distinct &lt;code&gt;method&lt;/code&gt; method once. That is, to skip any classes in the hierarchy that it has already visited during redispatch. So, for example, if the previous example were rewritten:</source>
          <target state="translated">Это приводит к тому, что средство повторной отправки обращается к каждому отдельному &lt;code&gt;method&lt;/code&gt; метода только один раз. То есть, чтобы пропустить любые классы в иерархии, которые он уже посещал во время повторной отправки. Так, например, если предыдущий пример был переписан:</target>
        </trans-unit>
        <trans-unit id="592a0947cedbbcf96e6c431161a1536bd9ea5fd0" translate="yes" xml:space="preserve">
          <source>This certainly works on Android 8.1 (Oreo) at least...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582cc40cbf8b3547920ee86c914be4717f134b16" translate="yes" xml:space="preserve">
          <source>This change was made because it was found that various commercial tools like editors, or for things like source code control, had been written so that they would not handle program files that used these code points, effectively precluding their use almost entirely! And that was never the intent. They've always been meant to be usable within an application, or cooperating set of applications, at will.</source>
          <target state="translated">Это изменение было сделано потому,что было обнаружено,что различные коммерческие инструменты,такие как редакторы,или для таких вещей,как контроль исходного текста,были написаны так,что они не обращались бы с программными файлами,которые пользовались этими точками кода,фактически исключая их применение почти полностью! И это никогда не было намерением.Они всегда предназначались для того,чтобы их можно было использовать в приложении или в сотрудничающем наборе приложений по желанию.</target>
        </trans-unit>
        <trans-unit id="70a94d66ba03d51816f1be0f440a820bbe8643da" translate="yes" xml:space="preserve">
          <source>This change was originally scheduled for 5.30, but was delayed until 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c679de889cc139bb514d15d08372653b38479f14" translate="yes" xml:space="preserve">
          <source>This changes the sentence to &quot;this is a SUcCess case.&quot;</source>
          <target state="translated">Это меняет предложение на &quot;это дело SUcCess&quot;.</target>
        </trans-unit>
        <trans-unit id="806d9541617fb633252bc021124ba56dfb002ae1" translate="yes" xml:space="preserve">
          <source>This changes the string that this token holds. You probably won't need to do this.</source>
          <target state="translated">Это меняет строку,которую держит этот токен.Вероятно,тебе не придется этого делать.</target>
        </trans-unit>
        <trans-unit id="1b4ce31991e674e8d238b692a9312c922759283b" translate="yes" xml:space="preserve">
          <source>This changes the tagname for this end-token object. You probably won't need to do this.</source>
          <target state="translated">Это меняет магнитное поле для этого конечного объекта.Скорее всего,вам не понадобится этого делать.</target>
        </trans-unit>
        <trans-unit id="05c1f4e6ea1fd867b5212d7916e4ce924dd15d97" translate="yes" xml:space="preserve">
          <source>This changes the tagname for this start-token object. You probably won't need to do this.</source>
          <target state="translated">Это меняет магнитное поле для этого стартового объекта.Вероятно,вам не понадобится этого делать.</target>
        </trans-unit>
        <trans-unit id="642eb07575d1344323a97b06a777777ad1321fc4" translate="yes" xml:space="preserve">
          <source>This chart is sorted from slowest to fastest, and shows the percent speed difference between each pair of tests.</source>
          <target state="translated">Этот график отсортирован от самого медленного к самому быстрому и показывает разницу в процентах скорости между каждой парой тестов.</target>
        </trans-unit>
        <trans-unit id="7da28c0924cf2fc297ae57e942274584c8adbeb4" translate="yes" xml:space="preserve">
          <source>This checks that every file listed in the .packlist actually exists. If an argument which evaluates to true is given, any missing files will be removed from the internal hash. The return value is a list of the missing files, which will be empty if they all exist.</source>
          <target state="translated">При этом проверяется,что все файлы,перечисленные в .packlist'е,на самом деле существуют.Если аргумент,который вычисляется как истинный,то все недостающие файлы будут удалены из внутреннего хэша.Возвращаемое значение представляет собой список отсутствующих файлов,который будет пустым,если все они существуют.</target>
        </trans-unit>
        <trans-unit id="f55eba663917d253b044988b2b6ee903ef6a93dc" translate="yes" xml:space="preserve">
          <source>This class (which is very small -- read the source) overrides Pod::Simple's _handle_element_start, _handle_text, and _handle_element_end methods so that parser events are turned into method calls. (Otherwise, this is a subclass of &lt;a href=&quot;../simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.)</source>
          <target state="translated">Этот класс (который очень мал - прочтите исходный код) переопределяет методы _handle_element_start, _handle_text и _handle_element_end Pod :: Simple, так что события синтаксического анализатора превращаются в вызовы методов. (В противном случае это подкласс &lt;a href=&quot;../simple&quot;&gt;Pod :: Simple&lt;/a&gt; и наследует все его методы.)</target>
        </trans-unit>
        <trans-unit id="b03d667c22f13241e3a139f207cffaeb024c8e82" translate="yes" xml:space="preserve">
          <source>This class (which is very small -- read the source) overrides Pod::Simple's _handle_element_start, _handle_text, and _handle_element_end methods so that parser events are turned into method calls. (Otherwise, this is a subclass of &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494e46870d49e2dc3a5f9a64f75952ec99423e9a" translate="yes" xml:space="preserve">
          <source>This class defines several methods for setting (and, occasionally, reading) the contents of an object. With two exceptions (discussed at the end of this section), these attributes are just for controlling the way searches are carried out.</source>
          <target state="translated">Данный класс определяет несколько методов для установки (и,иногда,чтения)содержимого объекта.За двумя исключениями (рассмотренными в конце данного раздела),эти атрибуты предназначены только для управления тем,как осуществляется поиск.</target>
        </trans-unit>
        <trans-unit id="10596a84cc3ac1cc04ef71cd92099faf5ee0b3a2" translate="yes" xml:space="preserve">
          <source>This class inherits from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2163bae8bf6b5d5c2d8787321d0be16cd6ab8a00" translate="yes" xml:space="preserve">
          <source>This class inherits from &lt;a href=&quot;Test2::Event::Ok&quot;&gt;Test2::Event::Ok&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d32aad8f8251ef1db7bcc4b8f3feb324d9d1213" translate="yes" xml:space="preserve">
          <source>This class is NOT a subclass of Pod::Simple::HTML (nor of bad old Pod::Html) -- although it uses Pod::Simple::HTML for doing the conversion of each document.</source>
          <target state="translated">Этот класс НЕ является подклассом Pod::Simple::HTML (ни плохого старого Pod::Html)--хотя он использует Pod::Simple::HTML для преобразования каждого документа.</target>
        </trans-unit>
        <trans-unit id="b711767b4a974da1a1509d38f153220b0d62949c" translate="yes" xml:space="preserve">
          <source>This class is a formatter that takes Pod and renders it as RTF, good for viewing/printing in MSWord, WordPad/write.exe, TextEdit, etc.</source>
          <target state="translated">Этот класс является формататором,который принимает Pod и делает его RTF,хорошим для просмотра/печати в MSWord,WordPad/write.exe,TextEdit и т.д.</target>
        </trans-unit>
        <trans-unit id="138981ec5228a60a4f53dbf829b51f5efd9f8a75" translate="yes" xml:space="preserve">
          <source>This class is a formatter that takes Pod and renders it as XHTML validating HTML.</source>
          <target state="translated">Этот класс является форматировщиком,который принимает Pod и делает его XHTML валидирующим HTML.</target>
        </trans-unit>
        <trans-unit id="3d4c24315ad07b2a992c0858db0b7be768d0cc0b" translate="yes" xml:space="preserve">
          <source>This class is a formatter that takes Pod and renders it as wrapped plaintext.</source>
          <target state="translated">Этот класс является форматировщиком,который берет Pod и делает его обернутым чистым текстом.</target>
        </trans-unit>
        <trans-unit id="abf165bcb49a87540f63e8d80594894213b097e7" translate="yes" xml:space="preserve">
          <source>This class is a stack of hooks to be called in the right order as scopes go away. The stack is only useful when inserted into &lt;code&gt;%^H&lt;/code&gt; and will pop hooks as their &quot;scope&quot; is popped. This is useful for uninstalling or reinstalling subs in a namespace as a pragma goes out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62abaee97c33098880e266351ef2fc532bf53875" translate="yes" xml:space="preserve">
          <source>This class is an internal interface only.</source>
          <target state="translated">Этот класс является только внутренним интерфейсом.</target>
        </trans-unit>
        <trans-unit id="a096fe03bdd3c99f0e3aefd253d422021e7447e7" translate="yes" xml:space="preserve">
          <source>This class is for checking the syntactic validity of Pod. It works by basically acting like a simple-minded version of &lt;a href=&quot;Pod::Simple::Text&quot;&gt;Pod::Simple::Text&lt;/a&gt; that formats only the &quot;Pod Errors&quot; section (if Pod::Simple even generates one for the given document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e43c4bd22a6b18d8bc78626e236eaa142e2b822" translate="yes" xml:space="preserve">
          <source>This class is for checking the syntactic validity of Pod. It works by basically acting like a simple-minded version of &lt;a href=&quot;text&quot;&gt;Pod::Simple::Text&lt;/a&gt; that formats only the &quot;Pod Errors&quot; section (if Pod::Simple even generates one for the given document).</source>
          <target state="translated">Этот класс предназначен для проверки синтаксической достоверности Pod. Он работает, в основном, как простая версия &lt;a href=&quot;text&quot;&gt;Pod :: Simple :: Text,&lt;/a&gt; которая форматирует только раздел &amp;laquo;Ошибки модуля&amp;raquo; (если Pod :: Simple даже создает его для данного документа).</target>
        </trans-unit>
        <trans-unit id="9b791e36572b7d483165e52086de0aff10cad7ba" translate="yes" xml:space="preserve">
          <source>This class is for dumping, as text, the events gotten from parsing a Pod document. This class is of interest to people writing Pod formatters based on Pod::Simple. It is useful for seeing exactly what events you get out of some Pod that you feed in.</source>
          <target state="translated">Данный класс предназначен для дампинга,в виде текста,событий,полученных при разборе документа Pod.Данный класс представляет интерес для людей,пишущих форматоры Pod на основе Pod::Simple.Он полезен для того,чтобы увидеть,какие именно события вы получаете из какого-нибудь подкаталога.</target>
        </trans-unit>
        <trans-unit id="a18cdad26fb8d235532c57fb43aa60327d80a50a" translate="yes" xml:space="preserve">
          <source>This class is for making an HTML rendering of a Pod document.</source>
          <target state="translated">Данный класс предназначен для создания HTML рендеринга документа Pod.</target>
        </trans-unit>
        <trans-unit id="fd75675624091c3742f49bbeb8bbfb0c06a37c0a" translate="yes" xml:space="preserve">
          <source>This class is for using Pod::Simple to build a Pod processor -- but one that uses an interface based on a stream of token objects, instead of based on events.</source>
          <target state="translated">Этот класс предназначен для использования Pod::Simple для сборки процессора Pod --но такого,который использует интерфейс,основанный на потоке маркерных объектов,а не на событиях.</target>
        </trans-unit>
        <trans-unit id="44761047bfaa4c6cc438e77b4bb92131ad714c01" translate="yes" xml:space="preserve">
          <source>This class is inspired by XML::Parser's &quot;Tree&quot; parsing-style, although it doesn't use exactly the same LoL format.</source>
          <target state="translated">Этот класс вдохновлен стилем разбора &quot;дерева&quot; XML::Parser,хотя и не использует точно такой же формат LoL.</target>
        </trans-unit>
        <trans-unit id="a9698adab813e0c4fae21452c7598015f3935b3d" translate="yes" xml:space="preserve">
          <source>This class is not of interest to general users.</source>
          <target state="translated">Этот класс не представляет интереса для обычных пользователей.</target>
        </trans-unit>
        <trans-unit id="2f2f6048d2f61aa8645bcc5ebd42e19fc8c8aea4" translate="yes" xml:space="preserve">
          <source>This class is of interest to people writing Pod formatters based on Pod::Simple.</source>
          <target state="translated">Этот класс представляет интерес для людей,пишущих форматоры Pod на основе Pod::Simple.</target>
        </trans-unit>
        <trans-unit id="f63f889f338653b4ee33eb44dc0ee1133ee852ae" translate="yes" xml:space="preserve">
          <source>This class is of interest to people writing a Pod processor/formatter.</source>
          <target state="translated">Этот класс представляет интерес для людей,пишущих на процессоре/форматере Pod.</target>
        </trans-unit>
        <trans-unit id="6dca4f8907e7dbb28751ea149d9af37422c91f32" translate="yes" xml:space="preserve">
          <source>This class is that parses Pod and dumps just the text content. It is mainly meant for use by the Pod::Simple test suite, but you may find some other use for it.</source>
          <target state="translated">Этот класс предназначен для разбора Pod и дамповки только текстового содержимого.В основном он предназначен для использования в Pod::Simple test suite,но вы можете найти для него другое применение.</target>
        </trans-unit>
        <trans-unit id="5a51d38f10e103a9903a5853a79eae683ff646eb" translate="yes" xml:space="preserve">
          <source>This class is the workhorse of the &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt; system. Most TAP lines will be test lines and if &lt;code&gt;$result-&amp;gt;is_test&lt;/code&gt; , then you have a bunch of methods at your disposal.</source>
          <target state="translated">Этот класс - рабочая лошадка системы &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Большинство строк TAP будут тестовыми, и если &lt;code&gt;$result-&amp;gt;is_test&lt;/code&gt; , то в вашем распоряжении будет множество методов.</target>
        </trans-unit>
        <trans-unit id="77ad00f96e4fc79112ecce425a98459f96769eb3" translate="yes" xml:space="preserve">
          <source>This class is the workhorse of the &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; system. Most TAP lines will be test lines and if &lt;code&gt;$result-&amp;gt;is_test&lt;/code&gt;, then you have a bunch of methods at your disposal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2f9188e79ee28d20f325b48fe2bf4717272a64" translate="yes" xml:space="preserve">
          <source>This class is used to bless perl subs so that they are invoked when they are destroyed. This is mostly useful for ensuring the code is invoked at end of scope. This module is not a part of autodie's public API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f581c5cd9d5c7598c0dcb3ca6436c9bd821c2c4" translate="yes" xml:space="preserve">
          <source>This class might turn out to be a temporary solution, but MM won't go away.</source>
          <target state="translated">Этот класс может оказаться временным решением,но ММ не уйдет.</target>
        </trans-unit>
        <trans-unit id="24195eb4cea8857a411b60273a35c873f422dbe0" translate="yes" xml:space="preserve">
          <source>This class provides the one constructor, called &lt;code&gt;new&lt;/code&gt; . It takes no parameters:</source>
          <target state="translated">Этот класс предоставляет один конструктор, называемый &lt;code&gt;new&lt;/code&gt; . Не требует параметров:</target>
        </trans-unit>
        <trans-unit id="3cdd607371055ba28bceb9607eba0f99a8092ae1" translate="yes" xml:space="preserve">
          <source>This class provides the one constructor, called &lt;code&gt;new&lt;/code&gt;. It takes no parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0678c7cdb712a22e1337039fd311842e231f0c" translate="yes" xml:space="preserve">
          <source>This class represents a subtest. This class is a subclass of &lt;a href=&quot;Test2::Event::Ok&quot;&gt;Test2::Event::Ok&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548ad953daf93abd12a978fa239d01a039bfc535" translate="yes" xml:space="preserve">
          <source>This class returns a copy of its input, translated into Perl's internal encoding (UTF-8), and with all the non-Pod lines removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460fe0f3a1a52c6921164fb6520b6ae745aaf17" translate="yes" xml:space="preserve">
          <source>This class strives to return the Pod lines of the input completely unchanged, except for any necessary translation into Perl's internal encoding, and it makes no effort to return trailing spaces on lines; these likely will be stripped. If the input pod is well-formed with no warnings nor errors generated, the extracted pod should generate the same documentation when formatted by a Pod formatter as the original file does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30e23715125a3d5360cef7bf3e4022849622110" translate="yes" xml:space="preserve">
          <source>This class takes Pod and parses it, returning a parse tree made just of arrayrefs, and hashrefs, and strings.</source>
          <target state="translated">Этот класс берет Pod и разбирает его,возвращая дерево разбора,состоящее только из массивов,хэшей и строк.</target>
        </trans-unit>
        <trans-unit id="9dbee182dfa76d92a94c69cd0858c1622ac2f770" translate="yes" xml:space="preserve">
          <source>This client is more complicated than the two we've done so far, but if you're on a system that supports the powerful &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; call, the solution isn't that rough. Once you've made the connection to whatever service you'd like to chat with, call &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; to clone your process. Each of these two identical process has a very simple job to do: the parent copies everything from the socket to standard output, while the child simultaneously copies everything from standard input to the socket. To accomplish the same thing using just one process would be</source>
          <target state="translated">Этот клиент более сложный, чем два, которые мы сделали до сих пор, но если вы работаете в системе, которая поддерживает мощный вызов &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , решение не так уж и сложно. После того, как вы установили соединение с любой службой, с которой хотите пообщаться, вызовите &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , чтобы клонировать ваш процесс. Каждый из этих двух идентичных процессов выполняет очень простую задачу: родительский объект копирует все из сокета в стандартный вывод, а дочерний процесс одновременно копирует все из стандартного ввода в сокет. Сделать то же самое, используя всего один процесс, было бы</target>
        </trans-unit>
        <trans-unit id="bb7d2aab86d534bfc6e56a8de0ba001be898cbe5" translate="yes" xml:space="preserve">
          <source>This client is more complicated than the two we've done so far, but if you're on a system that supports the powerful &lt;code&gt;fork&lt;/code&gt; call, the solution isn't that rough. Once you've made the connection to whatever service you'd like to chat with, call &lt;code&gt;fork&lt;/code&gt; to clone your process. Each of these two identical process has a very simple job to do: the parent copies everything from the socket to standard output, while the child simultaneously copies everything from standard input to the socket. To accomplish the same thing using just one process would be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceec53b2ebb7603eb9ee71d9bde01119b83707cb" translate="yes" xml:space="preserve">
          <source>This clones the repository and makes a local copy in the</source>
          <target state="translated">Это клонирует репозиторий и делает локальную копию в</target>
        </trans-unit>
        <trans-unit id="53ac61605ac32344cb2fde8cb4e762d87b323ee2" translate="yes" xml:space="preserve">
          <source>This code has to jump through a few hoops to achieve this because</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5330da17cfc7cfcf64aab224d5b574c934e7ac2c" translate="yes" xml:space="preserve">
          <source>This code heavily adapted from an early version of perl5db.pl attributable to Larry Wall and the Perl Porters.</source>
          <target state="translated">Этот код в значительной степени адаптирован из ранней версии perl5db.pl,относящейся к Larry Wall и Perl Porters.</target>
        </trans-unit>
        <trans-unit id="20e0786f01d076b98983216819824cb18ece543e" translate="yes" xml:space="preserve">
          <source>This code is derived from software contributed to Berkeley by Guido van Rossum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847d9232033c7120d3555ace79f29fd71ad7ef18" translate="yes" xml:space="preserve">
          <source>This code is in Github in the CPAN.pm repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c4fc183eca8652881b1cb5b12c6ea249b79ebe" translate="yes" xml:space="preserve">
          <source>This code is intended for development only, and may not be portable even to all Unix variants. Also, it is an 80% solution, in that it isn't able to make all ops read only. Specifically it does not apply to op slabs belonging to &lt;code&gt;BEGIN&lt;/code&gt; blocks.</source>
          <target state="translated">Этот код предназначен только для разработки и не может быть переносимым даже для всех вариантов Unix. Кроме того, это решение на 80%, поскольку оно не может сделать все операции только для чтения. В частности, это не относится к операционным плитам, принадлежащим блокам &lt;code&gt;BEGIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a8e4db5444d8620ae9620bb90f970a958584613" translate="yes" xml:space="preserve">
          <source>This code is unusual in that it should have no content. That is, a processor may complain if it sees &lt;code&gt;Z&amp;lt;potatoes&amp;gt;&lt;/code&gt;. Whether or not it complains, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443071b2d9d382ee44392d30a6c9cc6944390654" translate="yes" xml:space="preserve">
          <source>This code is unusual in that most formatters completely discard this code and its content. Other formatters will render it with invisible codes that can be used in building an index of the current document.</source>
          <target state="translated">Этот код необычен тем,что большинство форматировщиков полностью отбрасывают этот код и его содержимое.Другие формататоры отображают его с невидимыми кодами,которые могут быть использованы при построении индекса текущего документа.</target>
        </trans-unit>
        <trans-unit id="ed77ac1105bfebc895982f70abdb5f07d0f61471" translate="yes" xml:space="preserve">
          <source>This code is unusual is that it should have no content. That is, a processor may complain if it sees &lt;code&gt;Z&amp;lt;potatoes&amp;gt;&lt;/code&gt; . Whether or not it complains, the</source>
          <target state="translated">Этот код необычен тем, что в нем не должно быть содержимого. То есть процессор может пожаловаться, если увидит &lt;code&gt;Z&amp;lt;potatoes&amp;gt;&lt;/code&gt; . Жалуется он или нет, но</target>
        </trans-unit>
        <trans-unit id="9f748555f0c218e80f371f8622c90719bdf4c3e1" translate="yes" xml:space="preserve">
          <source>This code resides primarily in</source>
          <target state="translated">Этот код в основном состоит из</target>
        </trans-unit>
        <trans-unit id="b4ca79218fad07abe234bb2cecfbf2b9daaa8186" translate="yes" xml:space="preserve">
          <source>This code tries to return a new SV (which contains the value 42) if it should return a real value, or undef otherwise. Instead it has returned a NULL pointer which, somewhere down the line, will cause a segmentation violation, bus error, or just weird results. Change the zero to &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; in the first line and all will be well.</source>
          <target state="translated">Этот код пытается вернуть новый SV (который содержит значение 42), если он должен вернуть реальное значение, или undef в противном случае. Вместо этого он возвратил NULL-указатель, который где-то на линии вызовет нарушение сегментации, ошибку шины или просто странные результаты. Измените ноль на &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; в первой строке, и все будет хорошо.</target>
        </trans-unit>
        <trans-unit id="706270f16eed93ab30bcb6ac5dad9c206e0d53d4" translate="yes" xml:space="preserve">
          <source>This code will behave identically under both &lt;code&gt;IO::Socket::INET&lt;/code&gt; and &lt;code&gt;IO::Socket::IP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0496da28a3ec6a32260558d3028edcf275c0a4" translate="yes" xml:space="preserve">
          <source>This combination of options may also be specified thus</source>
          <target state="translated">Эта комбинация опций также может быть указана таким образом</target>
        </trans-unit>
        <trans-unit id="738a4e0887c40771b0a61f4f0df6d45e56b8d5cf" translate="yes" xml:space="preserve">
          <source>This combination performs the work of the legacy functions gethostbyname() and inet_ntoa().</source>
          <target state="translated">Эта комбинация выполняет работу унаследованных функций gethostbyname()и inet_ntoa().</target>
        </trans-unit>
        <trans-unit id="72e5e8c3a2d9fab681c4b573c92998cd66dd340c" translate="yes" xml:space="preserve">
          <source>This command indicates that an item in a list begins here. Formatting codes are processed. The semantics of the (optional) text in the remainder of this paragraph are explained in the &lt;a href=&quot;#About-%3Dover...%3Dback-Regions&quot;&gt;&quot;About =over...=back Regions&quot;&lt;/a&gt; section, further below. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d728ee6330c55e20ceb083fe7c0710810e2932ca" translate="yes" xml:space="preserve">
          <source>This command indicates that an item in a list begins here. Formatting codes are processed. The semantics of the (optional) text in the remainder of this paragraph are explained in the &lt;a href=&quot;#About-%3dover...%3dback-Regions&quot;&gt;About =over...=back Regions&lt;/a&gt; section, further below. Examples:</source>
          <target state="translated">Эта команда указывает, что здесь начинается элемент в списке. Коды форматирования обрабатываются. Семантика (необязательного) текста в оставшейся части этого абзаца объясняется в разделе &lt;a href=&quot;#About-%3dover...%3dback-Regions&quot;&gt;About = over ... = back Regions&lt;/a&gt; ниже. Примеры:</target>
        </trans-unit>
        <trans-unit id="4a355ff290cc8d5e2710e8069a06d654602bb061" translate="yes" xml:space="preserve">
          <source>This command indicates that the text in the remainder of the paragraph is a heading. That text may contain formatting codes. Examples:</source>
          <target state="translated">Эта команда указывает на то,что текст в оставшейся части пункта является заголовком.Этот текст может содержать коды форматирования.Примеры:</target>
        </trans-unit>
        <trans-unit id="c6da60e4854fba0e9da1ba094a38fc435654e60e" translate="yes" xml:space="preserve">
          <source>This command indicates that this is the end of the region begun by the most recent &quot;=over&quot; command. It permits no text after the &quot;=back&quot; command.</source>
          <target state="translated">Эта команда указывает на то,что это конец области,начатой последней командой &quot;=over&quot;.После команды &quot;=назад&quot; текст не разрешается.</target>
        </trans-unit>
        <trans-unit id="91bf180a009e30184b54f49645009694bbe3b151" translate="yes" xml:space="preserve">
          <source>This command indicates that this is the start of a list/indent region. If there is any text following the &quot;=over&quot;, it must consist of only a nonzero positive numeral. The semantics of this numeral is explained in the &lt;a href=&quot;#About-%3Dover...%3Dback-Regions&quot;&gt;&quot;About =over...=back Regions&quot;&lt;/a&gt; section, further below. Formatting codes are not expanded. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19be29c945bbd16c098b73b780bb343e863492ff" translate="yes" xml:space="preserve">
          <source>This command indicates that this is the start of a list/indent region. If there is any text following the &quot;=over&quot;, it must consist of only a nonzero positive numeral. The semantics of this numeral is explained in the &lt;a href=&quot;#About-%3dover...%3dback-Regions&quot;&gt;About =over...=back Regions&lt;/a&gt; section, further below. Formatting codes are not expanded. Examples:</source>
          <target state="translated">Эта команда указывает, что это начало области списка / отступа. Если после &quot;= over&quot; идет какой-либо текст, он должен состоять только из ненулевых положительных чисел. Семантика этого числительного объясняется в разделе &lt;a href=&quot;#About-%3dover...%3dback-Regions&quot;&gt;About = over ... = back Regions&lt;/a&gt; ниже. Коды форматирования не расширяются. Примеры:</target>
        </trans-unit>
        <trans-unit id="7ff4d3408bd7bdb5ab335d1f0aa8564e21d93c8d" translate="yes" xml:space="preserve">
          <source>This command indicates that this line is the end of this previously started Pod block. If there is any text after &quot;=cut&quot; on the line, it must be ignored. Examples:</source>
          <target state="translated">Эта команда указывает на то,что данная строка является концом ранее запущенного блока Pod.Если в строке есть текст после &quot;=cut&quot;,его необходимо проигнорировать.Примеры:</target>
        </trans-unit>
        <trans-unit id="3f41d49fdd2a10822f19964c9959582847611ffe" translate="yes" xml:space="preserve">
          <source>This command indicates that this paragraph begins a Pod block. (If we are already in the middle of a Pod block, this command has no effect at all.) If there is any text in this command paragraph after &quot;=pod&quot;, it must be ignored. Examples:</source>
          <target state="translated">Эта команда указывает на то,что данный параграф начинается с блока Капсулы.(Если мы уже находимся в середине блока Под,то эта команда не имеет никакого эффекта).Если в этом параграфе команды есть текст после &quot;=под&quot;,он должен быть проигнорирован.Примеры:</target>
        </trans-unit>
        <trans-unit id="8a99ea1513aed41e6edc9e12797ae7dfeaac42f6" translate="yes" xml:space="preserve">
          <source>This command is used for declaring the encoding of a document. Most users won't need this; but if your encoding isn't US-ASCII, then put a &lt;code&gt;=encoding &lt;i&gt;encodingname&lt;/i&gt;&lt;/code&gt; command very early in the document so that pod formatters will know how to decode the document. For</source>
          <target state="translated">Эта команда используется для объявления кодировки документа. Большинству пользователей это не понадобится; но если ваша кодировка не является US-ASCII, тогда поместите команду &lt;code&gt;=encoding &lt;i&gt;encodingname&lt;/i&gt;&lt;/code&gt; в самом начале документа, чтобы средства форматирования пода знали, как декодировать документ. Для</target>
        </trans-unit>
        <trans-unit id="57e6471f2b7a0cc0bc2732ccfe6cc2a1d67b9a5e" translate="yes" xml:space="preserve">
          <source>This command will fail only if you pass it an address in a domain the server directly delivers for, and that address does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65eb1b23b31e9c4fc56a4656f09eda25784a44" translate="yes" xml:space="preserve">
          <source>This command will produce as output a description of the current state of the repository, including modified files and unignored untracked files, and in addition it will show things like what files have been staged for the next commit, and usually some useful information about how to change things. For instance the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc900c104077e4a6a7ca5f06e5d70661d00910f9" translate="yes" xml:space="preserve">
          <source>This command, which should occur early in the document (at least before any non-US-ASCII data!), declares that this document is encoded in the encoding</source>
          <target state="translated">Эта команда,которая должна появиться на ранней стадии документа (по крайней мере,перед любыми данными,не относящимися к US-ASCII!),объявляет,что этот документ закодирован в кодировке</target>
        </trans-unit>
        <trans-unit id="a044d113549cfc62bab49938c5d884a6268cf948" translate="yes" xml:space="preserve">
          <source>This commands provides a statistical overview over recent download activities. The data for this is collected in the YAML file &lt;code&gt;FTPstats.yml&lt;/code&gt; in your &lt;code&gt;cpan_home&lt;/code&gt; directory. If no YAML module is configured or YAML not installed, no stats are provided.</source>
          <target state="translated">Эти команды обеспечивают статистический обзор последних загрузок. Данные для этого собираются в YAML-файле &lt;code&gt;FTPstats.yml&lt;/code&gt; в вашем &lt;code&gt;cpan_home&lt;/code&gt; . Если модуль YAML не настроен или YAML не установлен, статистика не предоставляется.</target>
        </trans-unit>
        <trans-unit id="8ea20acdc8121360e07a3ca6ca2abb72ed9a4374" translate="yes" xml:space="preserve">
          <source>This compiler backend prints the internal OPs of a Perl program's syntax tree in one of several space-efficient text formats suitable for debugging the inner workings of perl or other compiler backends. It can print OPs in the order they appear in the OP tree, in the order they will execute, or in a text approximation to their tree structure, and the format of the information displayed is customizable. Its function is similar to that of perl's &lt;b&gt;-Dx&lt;/b&gt; debugging flag or the &lt;b&gt;B::Terse&lt;/b&gt; module, but it is more sophisticated and flexible.</source>
          <target state="translated">Этот бэкэнд компилятора печатает внутренние OP синтаксического дерева Perl-программы в одном из нескольких компактных текстовых форматов, подходящих для отладки внутренней работы Perl или других бэкэндов компилятора. Он может печатать OP в том порядке, в котором они появляются в дереве OP, в том порядке, в котором они будут выполняться, или в текстовом приближении к их древовидной структуре, а формат отображаемой информации настраивается. Его функция аналогична &lt;b&gt;флагу&lt;/b&gt; отладки Perl &lt;b&gt;-Dx&lt;/b&gt; или модулю &lt;b&gt;B :: Terse&lt;/b&gt; , но он более сложный и гибкий.</target>
        </trans-unit>
        <trans-unit id="66cedc315e88b39d6383c0d5ddbb722e7566fdc1" translate="yes" xml:space="preserve">
          <source>This compiler is typically run by the makefiles created by &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; or by &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; or other Perl module build tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49048e5c36c04df148e3cdcc3f896c82e8922e40" translate="yes" xml:space="preserve">
          <source>This compiler is typically run by the makefiles created by &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; or by &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Build&quot;&gt;Module::Build&lt;/a&gt; or other Perl module build tools.</source>
          <target state="translated">Этот компилятор обычно запускается make-файлами, созданными &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Build&quot;&gt;Module :: Build&lt;/a&gt; или другими инструментами сборки модулей Perl.</target>
        </trans-unit>
        <trans-unit id="bcbcc146e176c69e94f98d46491b2b165f6959c5" translate="yes" xml:space="preserve">
          <source>This completely resets the incremental parser, that is, after this call, it will be as if the parser had never parsed anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811fc2387a18f3ccb2c99535bb74afa37f5a7e14" translate="yes" xml:space="preserve">
          <source>This condition is called a deadlock, and it occurs whenever two or more threads are trying to get locks on resources that the others own. Each thread will block, waiting for the other to release a lock on a resource. That never happens, though, since the thread with the resource is itself waiting for a lock to be released.</source>
          <target state="translated">Это условие называется тупик,и оно возникает всякий раз,когда два или более потока пытаются получить блокировки на ресурсах,которыми владеют остальные.Каждый поток будет блокироваться,ожидая,пока другой не разблокирует ресурс.Однако этого никогда не происходит,поскольку поток с ресурсом сам ждет освобождения блокировки.</target>
        </trans-unit>
        <trans-unit id="faa53aa7f128fff59cd7dcb34623ce5e613b1979" translate="yes" xml:space="preserve">
          <source>This conditionally defines &lt;code&gt;HAS_BUILTIN_CHOOSE_EXPR&lt;/code&gt; , which indicates that the compiler supports __builtin_choose_expr(x,y,z). This built-in function is analogous to the &lt;code&gt;x?y:z&lt;/code&gt; operator in C, except that the expression returned has its type unaltered by promotion rules. Also, the built-in function does not evaluate the expression that was not chosen.</source>
          <target state="translated">Это условно определяет &lt;code&gt;HAS_BUILTIN_CHOOSE_EXPR&lt;/code&gt; , который указывает, что компилятор поддерживает __builtin_choose_expr (x, y, z). Эта встроенная функция аналогична оператору &lt;code&gt;x?y:z&lt;/code&gt; в C, за исключением того, что тип возвращаемого выражения не изменяется правилами продвижения. Кроме того, встроенная функция не оценивает невыбранное выражение.</target>
        </trans-unit>
        <trans-unit id="32d20e57f63d06cdf92bb912dada7350665e3c8b" translate="yes" xml:space="preserve">
          <source>This conditionally defines &lt;code&gt;HAS_BUILTIN_CHOOSE_EXPR&lt;/code&gt;, which indicates that the compiler supports __builtin_choose_expr(x,y,z). This built-in function is analogous to the &lt;code&gt;x?y:z&lt;/code&gt; operator in C, except that the expression returned has its type unaltered by promotion rules. Also, the built-in function does not evaluate the expression that was not chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8177d32c94f6808dc1bba5e1e003e2e654d1454a" translate="yes" xml:space="preserve">
          <source>This conditionally defines &lt;code&gt;HAS_BUILTIN_EXPECT&lt;/code&gt; , which indicates that the compiler supports __builtin_expect(exp,c). You may use __builtin_expect to provide the compiler with branch prediction information.</source>
          <target state="translated">Это условно определяет &lt;code&gt;HAS_BUILTIN_EXPECT&lt;/code&gt; , который указывает, что компилятор поддерживает __builtin_expect (exp, c). Вы можете использовать __builtin_expect, чтобы предоставить компилятору информацию о предсказании ветвления.</target>
        </trans-unit>
        <trans-unit id="18781d872ee7a71c6a67e62943c1d602bc39dcb9" translate="yes" xml:space="preserve">
          <source>This conditionally defines &lt;code&gt;HAS_BUILTIN_EXPECT&lt;/code&gt;, which indicates that the compiler supports __builtin_expect(exp,c). You may use __builtin_expect to provide the compiler with branch prediction information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e85ff206a230f535cdc1e1b660d9e31b004675c" translate="yes" xml:space="preserve">
          <source>This construct cannot be used within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (or the &lt;code&gt;/l&lt;/code&gt; regex modifier).</source>
          <target state="translated">Эту конструкцию нельзя использовать в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (или модификатора регулярного выражения &lt;code&gt;/l&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7feaf5d14c2affa83679ada3f6337ec8bf394406" translate="yes" xml:space="preserve">
          <source>This construct is a Perl expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54050082dcc8b4fbf44ab08f61165f7a87bfb06" translate="yes" xml:space="preserve">
          <source>This construct is a complete Perl statement. (No semicolon should follow the closing brace.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f08b82a682504266e85cc2574b23244cf7a9af7" translate="yes" xml:space="preserve">
          <source>This construct is non-capturing. You can add parentheses to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fed69726a17c92a263e748b2d7fa3336a3e37f" translate="yes" xml:space="preserve">
          <source>This construct is useful when you want to capture one of a number of alternative matches.</source>
          <target state="translated">Эта конструкция полезна,когда вы хотите захватить одно из нескольких альтернативных совпадений.</target>
        </trans-unit>
        <trans-unit id="89cfaa9b31ac24d949cb1a2ef0db748a527694e4" translate="yes" xml:space="preserve">
          <source>This construction is</source>
          <target state="translated">Эта конструкция</target>
        </trans-unit>
        <trans-unit id="78c7683a763192abf9645014c7b058753006e735" translate="yes" xml:space="preserve">
          <source>This constructor lets its parent class do the actual object construction.</source>
          <target state="translated">Этот конструктор позволяет своему родительскому классу выполнять собственно построение объекта.</target>
        </trans-unit>
        <trans-unit id="221e3f3f658bcd2c65eb9bb5043326230edb5f59" translate="yes" xml:space="preserve">
          <source>This constructor returns a new HTTP::Tiny object. Valid attributes include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf27879428ff426e547cd9ab897b5c2de43f4ae" translate="yes" xml:space="preserve">
          <source>This constructs a language handle. You usually &lt;b&gt;don't&lt;/b&gt; call this directly, but instead let &lt;code&gt;get_handle&lt;/code&gt; find a language class to &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; and to then call -&amp;gt;new on.</source>
          <target state="translated">Это создает дескриптор языка. Обычно &lt;b&gt;вы не&lt;/b&gt; вызываете это напрямую, а вместо этого позволяете &lt;code&gt;get_handle&lt;/code&gt; найти языковой класс для &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; и затем вызвать -&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="7de3cef882fe04932a0a01ad2c579e42f49a5693" translate="yes" xml:space="preserve">
          <source>This constructs a language handle. You usually &lt;b&gt;don't&lt;/b&gt; call this directly, but instead let &lt;code&gt;get_handle&lt;/code&gt; find a language class to &lt;code&gt;use&lt;/code&gt; and to then call -&amp;gt;new on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753e5c4d4e4edeead3be592de94817a6410aff17" translate="yes" xml:space="preserve">
          <source>This contains a list of directories, separated by colons. The entire list is prepended to &lt;code&gt;@INC&lt;/code&gt; in one go. This:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b45e36338257a29107f2604a1399d771205b40" translate="yes" xml:space="preserve">
          <source>This contains a space separated list of switches. We only consider the effects of &lt;code&gt;-M&lt;/code&gt; and &lt;code&gt;-I&lt;/code&gt; in this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f30289e8821786015ec39ecff118638d73ac1e" translate="yes" xml:space="preserve">
          <source>This contains a textual description of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9999edc7b466975d9df29327a002bca6f3a58f" translate="yes" xml:space="preserve">
          <source>This contains information about the event itself such as the event package name. The &lt;code&gt;details&lt;/code&gt; field for this facet is an overall summary of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5ca9139234bfdd98010f7db0884779bff191ff" translate="yes" xml:space="preserve">
          <source>This contains the offset from the start of the file in hex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edc7f7dd753392a74ab3c329050e0ec08dcdba9" translate="yes" xml:space="preserve">
          <source>This controls how verbose to be during batch conversion, as far as notes to STDOUT (or whatever is &lt;code&gt;&lt;a href=&quot;../../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;'d) about how the conversion is going. If 0, no progress information is printed. If 1 (the default value), some progress information is printed. Higher values print more information.</source>
          <target state="translated">Это контролирует, насколько подробным будет во время пакетного преобразования, в том что касается примечаний к STDOUT (или тому, что &lt;code&gt;&lt;a href=&quot;../../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 'd) о том, как происходит преобразование. Если 0, информация о ходе выполнения не печатается. Если 1 (значение по умолчанию), печатается некоторая информация о ходе выполнения. Более высокие значения печатают больше информации.</target>
        </trans-unit>
        <trans-unit id="e9775b2b0eddb211aedfd45019b3edf6207e64a9" translate="yes" xml:space="preserve">
          <source>This controls how verbose to be during batch conversion, as far as notes to STDOUT (or whatever is &lt;code&gt;select&lt;/code&gt;'d) about how the conversion is going. If 0, no progress information is printed. If 1 (the default value), some progress information is printed. Higher values print more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7a4f63a01fbc1cdd9d161f843ad25c0052f17f" translate="yes" xml:space="preserve">
          <source>This controls whether &lt;code&gt;Module::Load::Conditional&lt;/code&gt; checks if a dual-life core module has been deprecated. If this is set to true &lt;code&gt;check_install&lt;/code&gt; will return false to &lt;code&gt;uptodate&lt;/code&gt; , if a dual-life module is found to be loaded from &lt;code&gt;$Config{privlibexp}&lt;/code&gt;</source>
          <target state="translated">Это контролирует, проверяет ли &lt;code&gt;Module::Load::Conditional&lt;/code&gt; устарел ли основной модуль с двойным жизненным циклом. Если установлено значение true, &lt;code&gt;check_install&lt;/code&gt; вернет false для &lt;code&gt;uptodate&lt;/code&gt; , если обнаружится, что модуль с двойной жизнью загружается из &lt;code&gt;$Config{privlibexp}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f473e55e3f05fdf8b7207839e3e128669c6830a4" translate="yes" xml:space="preserve">
          <source>This controls whether &lt;code&gt;Module::Load::Conditional&lt;/code&gt; checks if a dual-life core module has been deprecated. If this is set to true &lt;code&gt;check_install&lt;/code&gt; will return false to &lt;code&gt;uptodate&lt;/code&gt;, if a dual-life module is found to be loaded from &lt;code&gt;$Config{privlibexp}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4114328d4769af34ebf3741b18df472503df04" translate="yes" xml:space="preserve">
          <source>This controls whether &lt;code&gt;Module::Load::Conditional&lt;/code&gt; checks your &lt;code&gt;%INC&lt;/code&gt; hash to see if a module is available. By default, only &lt;code&gt;@INC&lt;/code&gt; is scanned to see if a module is physically on your filesystem, or available via an &lt;code&gt;@INC-hook&lt;/code&gt; . Setting this variable to &lt;code&gt;true&lt;/code&gt; will trust any entries in &lt;code&gt;%INC&lt;/code&gt; and return them for you.</source>
          <target state="translated">Это контролирует, проверяет ли &lt;code&gt;Module::Load::Conditional&lt;/code&gt; ваш хэш &lt;code&gt;%INC&lt;/code&gt; чтобы узнать, доступен ли модуль. По умолчанию сканируется только &lt;code&gt;@INC&lt;/code&gt; , чтобы узнать, находится ли модуль физически в вашей файловой системе или доступен через &lt;code&gt;@INC-hook&lt;/code&gt; . Установка для этой переменной значения &lt;code&gt;true&lt;/code&gt; будет доверять любым записям в &lt;code&gt;%INC&lt;/code&gt; и возвращать их вам.</target>
        </trans-unit>
        <trans-unit id="f4a2bb6249279fc9e40ac723ad2544e4cf6f2b93" translate="yes" xml:space="preserve">
          <source>This controls whether &lt;code&gt;Module::Load::Conditional&lt;/code&gt; checks your &lt;code&gt;%INC&lt;/code&gt; hash to see if a module is available. By default, only &lt;code&gt;@INC&lt;/code&gt; is scanned to see if a module is physically on your filesystem, or available via an &lt;code&gt;@INC-hook&lt;/code&gt;. Setting this variable to &lt;code&gt;true&lt;/code&gt; will trust any entries in &lt;code&gt;%INC&lt;/code&gt; and return them for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3ce0db041dad858d8e24ff2601618761d3793d" translate="yes" xml:space="preserve">
          <source>This controls whether &lt;code&gt;Module::Load::Conditional&lt;/code&gt; sanitises &lt;code&gt;@INC&lt;/code&gt; by removing &quot;&lt;code&gt;.&lt;/code&gt;&quot;. The current default setting is &lt;code&gt;0&lt;/code&gt;, but this may change in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4381fad7d89f422c37ccba3ee1b2f92eba8443" translate="yes" xml:space="preserve">
          <source>This controls whether IPC::Cmd will print any output from the commands to the screen or not. The default is 0.</source>
          <target state="translated">Это управляет тем,будет ли IPC::Cmd печатать любой вывод из команд на экран или нет.По умолчанию установлено значение 0.</target>
        </trans-unit>
        <trans-unit id="c156076360b54f8a8977c57dc77de47486be1ac3" translate="yes" xml:space="preserve">
          <source>This controls whether Module::Load::Conditional will issue warnings and explanations as to why certain things may have failed. If you set it to 0, Module::Load::Conditional will not output any warnings. The default is 0;</source>
          <target state="translated">Это контролирует,будет ли Module::Load::Conditional выдавать предупреждения и объяснения о том,почему определенные вещи могли выйти из строя.Если вы установите значение 0,Module::Load::Conditional не будет выдавать никаких предупреждений.По умолчанию установлено значение 0;</target>
        </trans-unit>
        <trans-unit id="b49fb12849ceb3c435af21ba21b9e8d24214fd70" translate="yes" xml:space="preserve">
          <source>This controls whether Module::Load::Conditional will try to parse (and eval) the version from the module you're trying to load.</source>
          <target state="translated">Это контролирует,будет ли Module::Load::Conditional пытаться разобрать (и оценить)версию из модуля,который вы пытаетесь загрузить.</target>
        </trans-unit>
        <trans-unit id="d9aae25fb78fe9990ffb44145098a21f55aa720e" translate="yes" xml:space="preserve">
          <source>This controls whether Params::Check will issue warnings and explanations as to why certain things may have failed. If you set it to 0, Params::Check will not output any warnings.</source>
          <target state="translated">Это контролирует,будет ли Params::Check выдавать предупреждения и объяснения о том,почему некоторые вещи,возможно,не удалось.Если вы установите значение 0,Params::Check не будет выдавать никаких предупреждений.</target>
        </trans-unit>
        <trans-unit id="a6e244d9b4c4b3e3b7164ac6b7f4cae7e7da9c75" translate="yes" xml:space="preserve">
          <source>This controls whether all output of a command should also be printed to STDOUT/STDERR or should only be trapped in buffers (NOTE: buffers require &lt;a href=&quot;IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; to be installed, or your system able to work with &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa3d4d74657a46a0b2bcece8a25683b9b4d5103" translate="yes" xml:space="preserve">
          <source>This controls whether all output of a command should also be printed to STDOUT/STDERR or should only be trapped in buffers (NOTE: buffers require &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; to be installed, or your system able to work with &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt;).</source>
          <target state="translated">Это контролирует, должен ли весь вывод команды также быть напечатан в STDOUT / STDERR или должен быть захвачен только в буферах (ПРИМЕЧАНИЕ: для буферов требуется установка &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; , или ваша система может работать с &lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="732d2e4b2658c0a2ec91db3c054e26236d0390f1" translate="yes" xml:space="preserve">
          <source>This controls whether imports the functions of a loaded modules to the caller package. The default is no importing any functions.</source>
          <target state="translated">Это позволяет контролировать импорт функций загруженных модулей в пакет вызывающего абонента.По умолчанию не импортируются никакие функции.</target>
        </trans-unit>
        <trans-unit id="eb78f49655da0a3543996010fb5198aba12c2274" translate="yes" xml:space="preserve">
          <source>This controls whether or not each HTML page is liable to have a little table of contents at the top (which we call an &quot;index&quot; for historical reasons). This is true by default.</source>
          <target state="translated">Это определяет,будет ли каждая HTML-страница иметь небольшое оглавление вверху (которое мы называем &quot;индексом&quot; по историческим причинам).По умолчанию это верно.</target>
        </trans-unit>
        <trans-unit id="d18f8fcaf7759aa328d11a1f1e92e835b3d9557f" translate="yes" xml:space="preserve">
          <source>This controls whether warnings should be printed if a module failed to load. The default is to use the value of $Module::Load::Conditional::VERBOSE.</source>
          <target state="translated">Это позволяет контролировать,следует ли распечатывать предупреждения,если модуль не смог загрузиться.По умолчанию используется значение $Module::Load::Conditional::VERBOSE.</target>
        </trans-unit>
        <trans-unit id="4ff7f0c70685518180af334112b2fe58a44a4fdd" translate="yes" xml:space="preserve">
          <source>This copyright does not prohibit distribution of any version of Perl containing this extension under the terms of the GNU or Artistic licenses.</source>
          <target state="translated">Это авторское право не запрещает распространение любой версии Perl,содержащей это расширение,на условиях лицензий GNU или художественных лицензий.</target>
        </trans-unit>
        <trans-unit id="e07ca9a36ef5f49f5e95795b2568b38574fd37e2" translate="yes" xml:space="preserve">
          <source>This corresponds to clearerr(), i.e., clears 'error' and (usually) 'eof' flags for the &quot;stream&quot;. Does not return a value.</source>
          <target state="translated">Это соответствует clearrr(),т.е.очищает флаги 'error' и (обычно)'eof' для &quot;потока&quot;.Не возвращает значение.</target>
        </trans-unit>
        <trans-unit id="a832f3c37512b00bc489449027088839617ff5af" translate="yes" xml:space="preserve">
          <source>This corresponds to feof(). Returns a true/false indication of whether the handle is at end of file. For terminal devices this may or may not be &quot;sticky&quot; depending on the implementation. The flag is cleared by PerlIO_seek(), or PerlIO_rewind().</source>
          <target state="translated">Это соответствует feof().Возвращает true/false указание на то,находится ли дескриптор в конце файла.Для терминальных устройств это может быть &quot;липким&quot; или нет в зависимости от реализации.Флаг сбрасывается функциями PerlIO_seek()или PerlIO_rewind().</target>
        </trans-unit>
        <trans-unit id="baeb66e5af4f3d77be2f1ed10348f03a4ed016a5" translate="yes" xml:space="preserve">
          <source>This corresponds to ferror(). Returns a true/false indication of whether there has been an IO error on the handle.</source>
          <target state="translated">Это соответствует функции ferror().Возвращает true/false указание на то,была ли ошибка IO на дескрипторе.</target>
        </trans-unit>
        <trans-unit id="bb12a0ca3665432e7ae210e2f30b098e3c60f423" translate="yes" xml:space="preserve">
          <source>This corresponds to fflush(). Sends any buffered write data to the underlying file. If called with &lt;code&gt;NULL&lt;/code&gt; this may flush all open streams (or core dump with some USE_STDIO implementations). Calling on a handle open for read only, or on which last operation was a read of some kind may lead to undefined behaviour on some USE_STDIO implementations. The USE_PERLIO (layers) implementation tries to behave better: it flushes all open streams when passed &lt;code&gt;NULL&lt;/code&gt; , and attempts to retain data on read streams either in the buffer or by seeking the handle to the current logical position.</source>
          <target state="translated">Это соответствует fflush (). Отправляет любые буферизованные данные записи в базовый файл. Если вызывается с &lt;code&gt;NULL&lt;/code&gt; , это может сбрасывать все открытые потоки (или дамп ядра с некоторыми реализациями USE_STDIO). Вызов дескриптора, открытого только для чтения, или того, какая последняя операция была прочитана, может привести к неопределенному поведению в некоторых реализациях USE_STDIO. Реализация USE_PERLIO (слои) пытается вести себя лучше: она сбрасывает все открытые потоки при передаче &lt;code&gt;NULL&lt;/code&gt; и пытается сохранить данные в потоках чтения либо в буфере, либо путем поиска дескриптора текущей логической позиции.</target>
        </trans-unit>
        <trans-unit id="4d9dcb6de62439562f514cb79a1863a8cc7b8b20" translate="yes" xml:space="preserve">
          <source>This corresponds to fflush(). Sends any buffered write data to the underlying file. If called with &lt;code&gt;NULL&lt;/code&gt; this may flush all open streams (or core dump with some USE_STDIO implementations). Calling on a handle open for read only, or on which last operation was a read of some kind may lead to undefined behaviour on some USE_STDIO implementations. The USE_PERLIO (layers) implementation tries to behave better: it flushes all open streams when passed &lt;code&gt;NULL&lt;/code&gt;, and attempts to retain data on read streams either in the buffer or by seeking the handle to the current logical position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e414890b7f22b1b4083f4007de6555d9d071db1" translate="yes" xml:space="preserve">
          <source>This corresponds to fileno(), note that on some platforms, the meaning of &quot;fileno&quot; may not match Unix. Returns -1 if the handle has no open descriptor associated with it.</source>
          <target state="translated">Это соответствует fileno(),обратите внимание,что на некоторых платформах значение слова fileno может не совпадать с Unix.Возвращает -1,если дескриптор хэндла не имеет открытого дескриптора,связанного с ним.</target>
        </trans-unit>
        <trans-unit id="5f4554adde4cea2591eaa99c7438bd7a745a0b3f" translate="yes" xml:space="preserve">
          <source>This corresponds to fseek(). Sends buffered write data to the underlying file, or discards any buffered read data, then positions the file descriptor as specified by &lt;b&gt;offset&lt;/b&gt; and &lt;b&gt;whence&lt;/b&gt; (sic). This is the correct thing to do when switching between read and write on the same handle (see issues with PerlIO_flush() above). Offset is of type &lt;code&gt;Off_t&lt;/code&gt; which is a perl Configure value which may not be same as stdio's &lt;code&gt;off_t&lt;/code&gt; .</source>
          <target state="translated">Это соответствует fseek (). Отправляет буферизованные данные записи в базовый файл или отбрасывает любые буферизованные данные чтения, а затем позиционирует дескриптор файла, как указано &lt;b&gt;смещением&lt;/b&gt; и &lt;b&gt;откуда&lt;/b&gt; (sic). Это правильный шаг при переключении между чтением и записью на одном дескрипторе (см. Проблемы с PerlIO_flush () выше). Offset имеет тип &lt;code&gt;Off_t&lt;/code&gt; , который является значением Perl Configure, которое может отличаться от &lt;code&gt;off_t&lt;/code&gt; в stdio .</target>
        </trans-unit>
        <trans-unit id="9bd7cfe67b5d59fef2229cadd453ea0901b8f7eb" translate="yes" xml:space="preserve">
          <source>This corresponds to fseek(). Sends buffered write data to the underlying file, or discards any buffered read data, then positions the file descriptor as specified by &lt;b&gt;offset&lt;/b&gt; and &lt;b&gt;whence&lt;/b&gt; (sic). This is the correct thing to do when switching between read and write on the same handle (see issues with PerlIO_flush() above). Offset is of type &lt;code&gt;Off_t&lt;/code&gt; which is a perl Configure value which may not be same as stdio's &lt;code&gt;off_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9bee6b04c387fd0085a9f7aa8ff48a5f034283" translate="yes" xml:space="preserve">
          <source>This corresponds to ftell(). Returns the current file position, or (Off_t) -1 on error. May just return value system &quot;knows&quot; without making a system call or checking the underlying file descriptor (so use on shared file descriptors is not safe without a PerlIO_seek()). Return value is of type &lt;code&gt;Off_t&lt;/code&gt; which is a perl Configure value which may not be same as stdio's &lt;code&gt;off_t&lt;/code&gt; .</source>
          <target state="translated">Это соответствует ftell (). Возвращает текущую позицию файла или (Off_t) -1 в случае ошибки. Может просто возвращать значение, которое система &amp;laquo;знает&amp;raquo; без выполнения системного вызова или проверки базового файлового дескриптора (поэтому использование общих файловых дескрипторов небезопасно без PerlIO_seek ()). Возвращаемое значение имеет тип &lt;code&gt;Off_t&lt;/code&gt; , который является значением Perl Configure, которое может не совпадать с &lt;code&gt;off_t&lt;/code&gt; в stdio .</target>
        </trans-unit>
        <trans-unit id="7e3cecdb4fa297b5ce6bf2a831e2cb59bd3601f2" translate="yes" xml:space="preserve">
          <source>This corresponds to ftell(). Returns the current file position, or (Off_t) -1 on error. May just return value system &quot;knows&quot; without making a system call or checking the underlying file descriptor (so use on shared file descriptors is not safe without a PerlIO_seek()). Return value is of type &lt;code&gt;Off_t&lt;/code&gt; which is a perl Configure value which may not be same as stdio's &lt;code&gt;off_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3583e8644f865d149cd4eb31d670f437a6e26eb" translate="yes" xml:space="preserve">
          <source>This corresponds to getc(). Despite the c in the name only byte range 0..0xFF is supported. Returns the character read or -1 (&lt;code&gt;EOF&lt;/code&gt; ) on error.</source>
          <target state="translated">Это соответствует getc (). Несмотря на букву c в имени, поддерживается только диапазон байтов 0..0xFF. Возвращает прочитанный символ или -1 ( &lt;code&gt;EOF&lt;/code&gt; ) в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="95c0f809b22c7c0dae9af22f03c13f59aaa59bfb" translate="yes" xml:space="preserve">
          <source>This corresponds to getc(). Despite the c in the name only byte range 0..0xFF is supported. Returns the character read or -1 (&lt;code&gt;EOF&lt;/code&gt;) on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cbd65b62177115f422eaf8fe4754328fbc6b9b" translate="yes" xml:space="preserve">
          <source>This corresponds to rewind(). It is usually defined as being</source>
          <target state="translated">Это соответствует rewind().Обычно она определяется как</target>
        </trans-unit>
        <trans-unit id="93c7ee35566034261e1234fcee65abc1e334abb8" translate="yes" xml:space="preserve">
          <source>This corresponds to setlinebuf(). Does not return a value. What constitutes a &quot;line&quot; is implementation dependent but usually means that writing &quot;\n&quot; flushes the buffer. What happens with things like &quot;this\nthat&quot; is uncertain. (Perl core uses it</source>
          <target state="translated">Это соответствует функции setlinebuf().Не возвращает значение.То,что представляет собой &quot;строка&quot; зависит от реализации,но обычно означает,что запись &quot;\n&quot; промывает буфер.Что происходит с такими вещами как &quot;this\nthat&quot; неопределённо.(Ядро Perl использует его</target>
        </trans-unit>
        <trans-unit id="c130282a86007cfef5f589b0d598e97fc7e10899" translate="yes" xml:space="preserve">
          <source>This corresponds to tmpfile(), i.e., returns an anonymous PerlIO or NULL on error. The system will attempt to automatically delete the file when closed. On Unix the file is usually &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;-ed just after it is created so it does not matter how it gets closed. On other systems the file may only be deleted if closed via PerlIO_close() and/or the program exits via &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt;. Depending on the implementation there may be &quot;race conditions&quot; which allow other processes access to the file, though in general it will be safer in this regard than ad. hoc. schemes.</source>
          <target state="translated">Это соответствует tmpfile (), т. Е. Возвращает анонимный PerlIO или NULL в случае ошибки. Система попытается автоматически удалить файл при закрытии. В Unix файл обычно &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; -ed только после того, как он будет создан , так что не важно , как она будет закрыта. В других системах файл может быть удален только в случае закрытия с помощью PerlIO_close () и / или выхода программы с помощью &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; . В зависимости от реализации могут существовать &amp;laquo;условия гонки&amp;raquo;, которые разрешают другим процессам доступ к файлу, хотя в целом это будет безопаснее в этом отношении, чем ad. hoc. схемы.</target>
        </trans-unit>
        <trans-unit id="0510a97fbd4cfa5a066aad9bda9c89da0469e9d9" translate="yes" xml:space="preserve">
          <source>This corresponds to tmpfile(), i.e., returns an anonymous PerlIO or NULL on error. The system will attempt to automatically delete the file when closed. On Unix the file is usually &lt;code&gt;unlink&lt;/code&gt;-ed just after it is created so it does not matter how it gets closed. On other systems the file may only be deleted if closed via PerlIO_close() and/or the program exits via &lt;code&gt;exit&lt;/code&gt;. Depending on the implementation there may be &quot;race conditions&quot; which allow other processes access to the file, though in general it will be safer in this regard than ad. hoc. schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327b626f972edcc8578bc2302697191125c0290f" translate="yes" xml:space="preserve">
          <source>This corresponds to ungetc(). Note that arguments have been revised to have &quot;file&quot; first. Arranges that next read operation will return the byte &lt;b&gt;c&lt;/b&gt;. Despite the implied &quot;character&quot; in the name only values in the range 0..0xFF are defined. Returns the byte &lt;b&gt;c&lt;/b&gt; on success or -1 (&lt;code&gt;EOF&lt;/code&gt; ) on error. The number of bytes that can be &quot;pushed back&quot; may vary, only 1 character is certain, and then only if it is the last character that was read from the handle.</source>
          <target state="translated">Это соответствует ungetc (). Обратите внимание, что аргументы были изменены, чтобы сначала было указано &amp;laquo;файл&amp;raquo;. Устанавливает, что следующая операция чтения вернет байт &lt;b&gt;c&lt;/b&gt; . Несмотря на подразумеваемый &amp;laquo;символ&amp;raquo; в имени, определены только значения в диапазоне 0..0xFF. Возвращает байт &lt;b&gt;c&lt;/b&gt; в случае успеха или -1 ( &lt;code&gt;EOF&lt;/code&gt; ) в случае ошибки. Количество байтов, которые могут быть &amp;laquo;отодвинуты&amp;raquo;, может варьироваться, только 1 символ определен, и то только в том случае, если это последний символ, который был прочитан из дескриптора.</target>
        </trans-unit>
        <trans-unit id="c9249d1b24ff827efbf0b09c581b3316583a595e" translate="yes" xml:space="preserve">
          <source>This corresponds to ungetc(). Note that arguments have been revised to have &quot;file&quot; first. Arranges that next read operation will return the byte &lt;b&gt;c&lt;/b&gt;. Despite the implied &quot;character&quot; in the name only values in the range 0..0xFF are defined. Returns the byte &lt;b&gt;c&lt;/b&gt; on success or -1 (&lt;code&gt;EOF&lt;/code&gt;) on error. The number of bytes that can be &quot;pushed back&quot; may vary, only 1 character is certain, and then only if it is the last character that was read from the handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f57342ffddc378f45e967d08a4b40a9028441d" translate="yes" xml:space="preserve">
          <source>This could, of course, be more legibly written with the &lt;code&gt;/x&lt;/code&gt; modifier, adding whitespace and comments. Here it is expanded, courtesy of Fred Curtis.</source>
          <target state="translated">Это, конечно, можно было бы написать более разборчиво с помощью модификатора &lt;code&gt;/x&lt;/code&gt; , добавив пробелов и комментариев. Здесь он расширен, любезно предоставлен Фредом Кертисом.</target>
        </trans-unit>
        <trans-unit id="ac65bf824b65194ff0a99fd92e3e036111f8e8a9" translate="yes" xml:space="preserve">
          <source>This counterintuitive behavior has been fixed in perl v5.8.1.</source>
          <target state="translated">Это антиинтуитивное поведение было исправлено в perl v5.8.1.</target>
        </trans-unit>
        <trans-unit id="ee88470233c1da8717b5bd9acaba39e40089d0b6" translate="yes" xml:space="preserve">
          <source>This creates a &lt;code&gt;VMS::DCLsym&lt;/code&gt; object which can be used as a handle for later method calls. The single optional argument specifies the symbol table used by default in future method calls, in the same way as the optional argument to &lt;code&gt;tie&lt;/code&gt; described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1645aaa3f3c32e20d8c02b43f04eac07a2fcc5a3" translate="yes" xml:space="preserve">
          <source>This creates a CPAN::Meta::Merge object. It takes one mandatory named argument, &lt;code&gt;version&lt;/code&gt;, declaring the version of the meta-spec that must be used for the merge. It can optionally take an &lt;code&gt;extra_mappings&lt;/code&gt; argument that allows one to add additional merging functions for specific elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d26884badcfad89a2f88ee752f4bee54862ec7a" translate="yes" xml:space="preserve">
          <source>This creates a handler for the attribute &lt;code&gt;:Loud&lt;/code&gt; in the class LoudDecl. Thereafter, any subroutine declared with a &lt;code&gt;:Loud&lt;/code&gt; attribute in the class LoudDecl:</source>
          <target state="translated">Это создает обработчик для атрибута &lt;code&gt;:Loud&lt;/code&gt; в классе LoudDecl. После этого любая подпрограмма, объявленная с атрибутом &lt;code&gt;:Loud&lt;/code&gt; в классе LoudDecl:</target>
        </trans-unit>
        <trans-unit id="8263a46fdb04b7977692de514f9404e4c18b81b5" translate="yes" xml:space="preserve">
          <source>This creates a local branch named &lt;code&gt;maint-5.005&lt;/code&gt;, which tracks the remote branch &lt;code&gt;origin/maint-5.005&lt;/code&gt;. Then you can pull, commit, merge and push as before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc82066bd7f21b4bcc5fd329fc91ce1111d9d09" translate="yes" xml:space="preserve">
          <source>This creates a new batch converter. The method doesn't take parameters. To change the converter's attributes, use the &quot;ACCESSOR METHODS&quot;&quot; in &quot; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fa03371108789e3d1ff265f81c30f8fb7e2b16" translate="yes" xml:space="preserve">
          <source>This creates a new thread (&lt;code&gt;$thr2&lt;/code&gt; ) that inherits the stack size from an existing thread (&lt;code&gt;$thr1&lt;/code&gt; ). This is shorthand for the following:</source>
          <target state="translated">Это создает новый поток ( &lt;code&gt;$thr2&lt;/code&gt; ), который наследует размер стека от существующего потока ( &lt;code&gt;$thr1&lt;/code&gt; ). Это сокращение для следующего:</target>
        </trans-unit>
        <trans-unit id="47788aa7839e22479a971854bcf1abe7b0acfb25" translate="yes" xml:space="preserve">
          <source>This creates a new thread (&lt;code&gt;$thr2&lt;/code&gt;) that inherits the stack size from an existing thread (&lt;code&gt;$thr1&lt;/code&gt;). This is shorthand for the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13be50d55b544b4c8283f535832e9b6392a885b" translate="yes" xml:space="preserve">
          <source>This creates a working sysroot that we can feed to Configure later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5e9ac144b79f7c4865c5f4daf815fdb24b2e3d" translate="yes" xml:space="preserve">
          <source>This currently means that all code points in the sequence have been assigned by Unicode to be characters that aren't private use nor surrogate code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee76e6a741e92139c43f1e221ed11b509991786" translate="yes" xml:space="preserve">
          <source>This database type allows arbitrary key/value pairs to be stored in data files. This is equivalent to the functionality provided by other hashing packages like DBM, NDBM, ODBM, GDBM, and SDBM. Remember though, the files created using DB_HASH are not compatible with any of the other packages mentioned.</source>
          <target state="translated">Данный тип базы данных позволяет хранить в файлах данных произвольные пары ключ/значение.Это эквивалентно функциональности,предоставляемой другими хэширующими пакетами,такими как DBM,NDBM,ODBM,GDBM и SDBM.Однако следует помнить,что файлы,созданные с помощью DB_HASH,не совместимы ни с одним из других упомянутых пакетов.</target>
        </trans-unit>
        <trans-unit id="3807b81d9c773a6c5335f9e71e920114a654bcff" translate="yes" xml:space="preserve">
          <source>This debugger prints a number which increments for each statement encountered and waits for you to hit a newline before continuing to the next statement.</source>
          <target state="translated">Этот отладчик печатает число,которое увеличивается для каждого встречного утверждения,и ждет,когда вы нажмете на новую строку,прежде чем перейти к следующему утверждению.</target>
        </trans-unit>
        <trans-unit id="67c09da3f20ea7878643178c10aa0a6e33cc924b" translate="yes" xml:space="preserve">
          <source>This declares a block of tests that might be skipped, $how_many tests there are, $why and under what $condition to skip them. An example is the easiest way to illustrate:</source>
          <target state="translated">Это объявляет блок тестов,которые можно пропустить,$how_many тесты есть,$why и при каком $условии их пропускать.Пример-самый простой способ проиллюстрировать:</target>
        </trans-unit>
        <trans-unit id="9e3fa8a7f8cc69e16dc88141cf1567bb93e3d7ad" translate="yes" xml:space="preserve">
          <source>This decomposition may be an intermediate one whose components are also decomposable. Use &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44521e30f7e690cd5dc65c30814c4cee699cd60e" translate="yes" xml:space="preserve">
          <source>This decomposition may be an intermediate one whose components are also decomposable. Use &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="translated">Это разложение может быть промежуточным, компоненты которого также разложимы. Используйте &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize,&lt;/a&gt; чтобы получить окончательное разложение за один шаг.</target>
        </trans-unit>
        <trans-unit id="97bd528541645ff3d464e572f5a4805e2ee9bc4c" translate="yes" xml:space="preserve">
          <source>This default can be overridden on a per-number basis by calling the &lt;code&gt;display_format&lt;/code&gt; method instead. As before, not supplying any argument returns the current display style for this number. Otherwise whatever you specify will be the new display style for</source>
          <target state="translated">Это значение по умолчанию можно переопределить для каждого номера, вместо этого вызывая метод &lt;code&gt;display_format&lt;/code&gt; . Как и раньше, отсутствие аргументов возвращает текущий стиль отображения для этого числа. В противном случае все, что вы укажете, будет новым стилем отображения для</target>
        </trans-unit>
        <trans-unit id="b13fed4037708b058149d6d54239c3578805f852" translate="yes" xml:space="preserve">
          <source>This demonstrates how &lt;code&gt;SUPER&lt;/code&gt; is resolved. Even though the object is blessed into the &lt;code&gt;C&lt;/code&gt; class, the &lt;code&gt;speak()&lt;/code&gt; method in the &lt;code&gt;B&lt;/code&gt; class can still call &lt;code&gt;SUPER::speak()&lt;/code&gt; and expect it to correctly look in the parent class of &lt;code&gt;B&lt;/code&gt; (i.e the class the method call is in), not in the parent class of &lt;code&gt;C&lt;/code&gt; (i.e. the class the object belongs to).</source>
          <target state="translated">Это демонстрирует, как решается &lt;code&gt;SUPER&lt;/code&gt; . Несмотря на то, что объект включен в класс &lt;code&gt;C&lt;/code&gt; , метод &lt;code&gt;speak()&lt;/code&gt; в классе &lt;code&gt;B&lt;/code&gt; по- прежнему может вызывать &lt;code&gt;SUPER::speak()&lt;/code&gt; и ожидать, что он будет правильно выглядеть в родительском классе &lt;code&gt;B&lt;/code&gt; (т.е. в классе, в котором находится вызов метода. ), а не в родительском классе &lt;code&gt;C&lt;/code&gt; (т.е. в классе, к которому принадлежит объект).</target>
        </trans-unit>
        <trans-unit id="5a18b47e8bc86d748a4aab67a43edef686b92a3f" translate="yes" xml:space="preserve">
          <source>This depends on the tied hash's implementation of EXISTS(). For example, there isn't the concept of undef with hashes that are tied to DBM* files. It also means that exists() and defined() do the same thing with a DBM* file, and what they end up doing is not what they do with ordinary hashes.</source>
          <target state="translated">Это зависит от реализации привязанного хэша EXISTS().Например,нет концепции undef с хэшами,которые привязаны к DBM*файлам.Это также означает,что exist()и defined()делают то же самое с DBM*файлом,и то,что они в конечном итоге делают с обычными хэшами,это не то,что они делают с обычными хэшами.</target>
        </trans-unit>
        <trans-unit id="9d4bc0de5af18f612ccd2a5cae826c99487fcbf8" translate="yes" xml:space="preserve">
          <source>This depends on which operating system your program is running on. In the case of Unix, the serial ports will be accessible through files in &lt;code&gt;/dev&lt;/code&gt; ; on other systems, device names will doubtless differ. Several problem areas common to all device interaction are the following:</source>
          <target state="translated">Это зависит от того, в какой операционной системе работает ваша программа. В случае Unix последовательные порты будут доступны через файлы в &lt;code&gt;/dev&lt;/code&gt; ; в других системах названия устройств, несомненно, будут отличаться. Вот несколько проблемных областей, общих для всех взаимодействий с устройствами:</target>
        </trans-unit>
        <trans-unit id="03ee5b714e2ad9827ab9f706d0156780edac87fe" translate="yes" xml:space="preserve">
          <source>This depends on which operating system your program is running on. In the case of Unix, the serial ports will be accessible through files in &lt;code&gt;/dev&lt;/code&gt;; on other systems, device names will doubtless differ. Several problem areas common to all device interaction are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5becff50f569cb27ece95ac48841bd7838bbbdf8" translate="yes" xml:space="preserve">
          <source>This describes all packages provided by this distribution. This information is used by distribution and automation mechanisms like PAUSE, CPAN, metacpan.org and search.cpan.org to build indexes saying in which distribution various packages can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20078d60a6a97424e04254a5fa4e6e526ad17dd" translate="yes" xml:space="preserve">
          <source>This describes the namespace layout for the Test2 ecosystem. Not all the namespaces listed here are part of the Test2 distribution, some are implemented in &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5829cc9fcaba21dee6f9d7f5a98f9ac945f1487" translate="yes" xml:space="preserve">
          <source>This description is not updated often (since 5.6.1?), see</source>
          <target state="translated">Это описание не часто обновляется (начиная с 5.6.1?),см.</target>
        </trans-unit>
        <trans-unit id="d6d22f28f156ae5e9b48e8de5b3d3fde4d59d03e" translate="yes" xml:space="preserve">
          <source>This differs slightly from the &lt;code&gt;accept&lt;/code&gt; function in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20322d80a32c4020d9ededc57d341d0284daf471" translate="yes" xml:space="preserve">
          <source>This directive is supported with ANSI-type function declarations only.</source>
          <target state="translated">Эта директива поддерживается только с объявлениями функций типа ANSI.</target>
        </trans-unit>
        <trans-unit id="0bdb96acaa7aac7424045042159548f85c9ab53b" translate="yes" xml:space="preserve">
          <source>This directly modifies the stored filehandles, it does not create new ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a04a1fb981c46cc90618271edcb18e99ed305" translate="yes" xml:space="preserve">
          <source>This directory contains dual-life modules where the CPAN module is canonical. Do not patch these modules directly! Changes to these modules should be submitted to the maintainer of the CPAN module. Once those changes are applied and released, the new version of the module will be incorporated into the core.</source>
          <target state="translated">Этот каталог содержит модули с двойной жизнью,в которых модуль CPAN является каноническим.Не исправляйте эти модули напрямую! Изменения в этих модулях должны быть представлены мейнтейнеру модуля CPAN.Как только эти изменения будут применены и выпущены,новая версия модуля будет включена в ядро.</target>
        </trans-unit>
        <trans-unit id="8f5f151207fd145f47cd0f164782d7d714aa8988" translate="yes" xml:space="preserve">
          <source>This directory contains pure-Perl modules which are only released as part of the core. This directory contains</source>
          <target state="translated">Этот каталог содержит чисто перловые модули,которые выпускаются только как часть ядра.Этот каталог содержит</target>
        </trans-unit>
        <trans-unit id="ff88cb5fa00bc50f7151a1d4596e477618c8bcec" translate="yes" xml:space="preserve">
          <source>This directory is for dual-life modules where the blead source is canonical. Note that some modules in this directory may not yet have been released separately on CPAN. Modules under</source>
          <target state="translated">Этот каталог предназначен для модулей с двойной жизнью,в которых канонический источник blead.Обратите внимание,что некоторые модули в этом каталоге,возможно,еще не были выпущены отдельно на CPAN.Модули в разделе</target>
        </trans-unit>
        <trans-unit id="62002fdbbc82dfdecab897397921252b1a422691" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;BOOKSHELF&lt;/code&gt; .</source>
          <target state="translated">Этот каталог лучше всего на &lt;code&gt;BOOKSHELF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53f8085abd01c50ea807b424c7fb70d06b9d9336" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;BOOKSHELF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333fd828a086a8d956340a5925aba972db5faa95" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;MANPATH&lt;/code&gt; . You need to have a working</source>
          <target state="translated">Этот каталог лучше всего находится на &lt;code&gt;MANPATH&lt;/code&gt; . Вам нужно иметь рабочий</target>
        </trans-unit>
        <trans-unit id="7a7d8abb15dd5ddcab335f051e15e631ee76c9a7" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;MANPATH&lt;/code&gt; . You need to have a working man to access these files.</source>
          <target state="translated">Этот каталог лучше всего находится на &lt;code&gt;MANPATH&lt;/code&gt; . Для доступа к этим файлам нужен рабочий человек.</target>
        </trans-unit>
        <trans-unit id="3bfbc8178767aed118a078c916238d08187f8c32" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;MANPATH&lt;/code&gt;. You need to have a working</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f768384fb45192f416d43b226b88f4f7ac434db" translate="yes" xml:space="preserve">
          <source>This directory should better be on &lt;code&gt;MANPATH&lt;/code&gt;. You need to have a working man to access these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd449ffe16a462d28e76469ef21ea9f7d571513" translate="yes" xml:space="preserve">
          <source>This disables &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;&quot;Magic Autogeneration&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170ad9fea04adcf28e5b84faabd5cf2954a187d9" translate="yes" xml:space="preserve">
          <source>This disables &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;Magic Autogeneration&lt;/a&gt;.</source>
          <target state="translated">Это отключает &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;автогенерацию Magic&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b3a0993d47177782fe70afdd82bfb741c3d7395" translate="yes" xml:space="preserve">
          <source>This disables the poetry optimization, generating a compile-time error if you try to use a bareword identifier that's not a subroutine, unless it is a simple identifier (no colons) and that it appears in curly braces or on the left hand side of the &lt;code&gt;=&amp;gt;&lt;/code&gt; symbol.</source>
          <target state="translated">Это отключает оптимизацию поэзии, генерируя ошибку времени компиляции, если вы пытаетесь использовать идентификатор голого слова, который не является подпрограммой, если только это не простой идентификатор (без двоеточий) и который отображается в фигурных скобках или в левой части &lt;code&gt;=&amp;gt;&lt;/code&gt; символ.</target>
        </trans-unit>
        <trans-unit id="bbfb3ce32af84903cf3730d9cf51595fc0554060" translate="yes" xml:space="preserve">
          <source>This distribution directly accesses the hash keys in the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; singleton. It also approaches the problem from the wrong angle, please consider using &lt;a href=&quot;Test2::Aggregate&quot;&gt;Test2::Aggregate&lt;/a&gt; for similar functionality and &lt;a href=&quot;Test2::Harness&quot;&gt;Test2::Harness&lt;/a&gt; which allows module preloading at the harness level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b7ba8215c0f4757732a3f14c729963fc274aea" translate="yes" xml:space="preserve">
          <source>This doc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ff219b627159fe6cfa93920427dc7e601e7134" translate="yes" xml:space="preserve">
          <source>This document aims to provide an overview of the vast perl community, which is far too large and diverse to provide a detailed listing. If any specific niche has been forgotten, it is not meant as an insult but an omission for the sake of brevity.</source>
          <target state="translated">Цель этого документа-дать обзор обширного сообщества perl,которое является слишком большим и разнообразным для того,чтобы предоставить подробный перечень.Если какая-либо конкретная ниша была забыта,это означает не оскорбление,а упущение ради краткости.</target>
        </trans-unit>
        <trans-unit id="1ba7340d966579fbb753302864000cf7b2972014" translate="yes" xml:space="preserve">
          <source>This document assumes that the executable named &quot;perl&quot; is Perl version 5. Some systems may have installed Perl version 5 as &quot;perl5&quot;.</source>
          <target state="translated">Этот документ предполагает,что исполняемый файл с именем &quot;perl&quot; является Perl версии 5.В некоторых системах Perl-версия 5 может быть установлена как &quot;perl5&quot;.</target>
        </trans-unit>
        <trans-unit id="3a2742d9b73b97368bfc5521e9515184f408ef85" translate="yes" xml:space="preserve">
          <source>This document assumes that you already understand the basics of Perl syntax, variable types, operators, and subroutine calls. If you don't understand these concepts yet, please read &lt;a href=&quot;perlintro&quot;&gt;perlintro&lt;/a&gt; first. You should also read the &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;, &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, and &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; documents.</source>
          <target state="translated">В этом документе предполагается, что вы уже знакомы с основами синтаксиса Perl, типов переменных, операторов и вызовов подпрограмм. Если вы еще не понимаете эти концепции, сначала прочтите &lt;a href=&quot;perlintro&quot;&gt;perlintro&lt;/a&gt; . Вам также следует прочитать документы &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; , &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; и &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f596bd16fedee538f262d0de64e96d996439fb3" translate="yes" xml:space="preserve">
          <source>This document attempts to describe how to use the Perl API, as well as to provide some info on the basic workings of the Perl core. It is far from complete and probably contains many errors. Please refer any questions or comments to the author below.</source>
          <target state="translated">В этом документе сделана попытка описать,как использовать Perl API,а также дать некоторую информацию об основных принципах работы ядра Perl.Он далеко не полный и,вероятно,содержит много ошибок.Пожалуйста,обращайтесь к автору с любыми вопросами или комментариями ниже.</target>
        </trans-unit>
        <trans-unit id="7e01fbc0bc773f9d24734cb30bab33bda7d5f6af" translate="yes" xml:space="preserve">
          <source>This document attempts to describe the Perl Community's &quot;best practice&quot; for writing Perl modules. It extends the recommendations found in &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt; , which should be considered required reading before reading this document.</source>
          <target state="translated">В этом документе делается попытка описать &amp;laquo;лучшие практики&amp;raquo; сообщества Perl для написания модулей Perl. Он расширяет рекомендации, содержащиеся в &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt; , которые следует считать обязательными к прочтению перед чтением этого документа.</target>
        </trans-unit>
        <trans-unit id="bab11f45369409b96d7bf2180484dc0f685d2683" translate="yes" xml:space="preserve">
          <source>This document briefly describes Perl under Mac OS X.</source>
          <target state="translated">В этом документе кратко описывается Perl под Mac OS X.</target>
        </trans-unit>
        <trans-unit id="083d82552ef9adb2b16dbbdc73ee6cb2d3adb7be" translate="yes" xml:space="preserve">
          <source>This document codifies the support and maintenance commitments that the Perl community should expect from Perl's developers:</source>
          <target state="translated">Этот документ кодифицирует обязательства по поддержке и обслуживанию,которые сообщество Perl должно ожидать от разработчиков Perl:</target>
        </trans-unit>
        <trans-unit id="ee4356257bf892096131087eff39fae084e3b0fb" translate="yes" xml:space="preserve">
          <source>This document covers features supported by &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; (also known as &lt;code&gt;xsubpp&lt;/code&gt; ) 3.13_01.</source>
          <target state="translated">В этом документе описаны функции, поддерживаемые &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; (также известным как &lt;code&gt;xsubpp&lt;/code&gt; ) 3.13_01.</target>
        </trans-unit>
        <trans-unit id="6622e622368097560175e65713355ba452a435bc" translate="yes" xml:space="preserve">
          <source>This document covers features supported by &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; (also known as &lt;code&gt;xsubpp&lt;/code&gt;) 3.13_01.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d19d436c676e82c5de62fa2d93b31ad146ee5c7" translate="yes" xml:space="preserve">
          <source>This document defines a standard generic interface to the dynamic linking mechanisms available on many platforms. Its primary purpose is to implement automatic dynamic loading of Perl modules.</source>
          <target state="translated">Этот документ определяет стандартный общий интерфейс к механизмам динамической связи,доступным на многих платформах.Его основной целью является реализация автоматической динамической загрузки модулей Perl.</target>
        </trans-unit>
        <trans-unit id="f9a30c0ae237ad22360e4681ed6256da44062757" translate="yes" xml:space="preserve">
          <source>This document describes Thread::Queue version 3.05</source>
          <target state="translated">Этот документ описывает Thread::Queue version 3.05.</target>
        </trans-unit>
        <trans-unit id="672f477a960d9d97a53477316665e103fc6bcb55" translate="yes" xml:space="preserve">
          <source>This document describes Thread::Queue version 3.14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32625e21916315b56d3d555dca5fa14529f5283" translate="yes" xml:space="preserve">
          <source>This document describes Thread::Semaphore version 2.12</source>
          <target state="translated">Данный документ описывает тему::Семафор версия 2.12.</target>
        </trans-unit>
        <trans-unit id="5e19eb2d41d244928aeeec5e1174bef98f47a6c8" translate="yes" xml:space="preserve">
          <source>This document describes Thread::Semaphore version 2.13</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a25c4c9828d0f58970f77b7ac6aa566b68c27f1" translate="yes" xml:space="preserve">
          <source>This document describes all backslash and escape sequences. After explaining the role of the backslash, it lists all the sequences that have a special meaning in Perl regular expressions (in alphabetical order), then describes each of them.</source>
          <target state="translated">Этот документ описывает все последовательности обратного слеша и эвакуации.После объяснения роли обратного слеша в нем перечислены все последовательности,имеющие особое значение в регулярных выражениях Perl (в алфавитном порядке),а затем описана каждая из них.</target>
        </trans-unit>
        <trans-unit id="76ff3a8588f27b8cdd8cc7d51db810e080d05732" translate="yes" xml:space="preserve">
          <source>This document describes all of Perl's object-oriented (OO) features from the ground up. If you're just looking to write some object-oriented code of your own, you are probably better served by using one of the object systems from CPAN described in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">Этот документ описывает все объектно-ориентированные (OO) функции Perl с нуля. Если вы просто хотите написать собственный объектно-ориентированный код, вам, вероятно, будет лучше использовать одну из объектных систем из CPAN, описанных в &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50f134817136be6999dd57e5d22bbefe3d37d2f5" translate="yes" xml:space="preserve">
          <source>This document describes how Perl internally handles numeric values.</source>
          <target state="translated">В этом документе описывается,как Perl внутренне обрабатывает числовые значения.</target>
        </trans-unit>
        <trans-unit id="013bbee9fd51be8302723130fd1f7000b8b03cb8" translate="yes" xml:space="preserve">
          <source>This document describes how to set up your host environment when attempting to build Perl for Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8453dae2d904ec94b51a4ae275d589cad1fe0302" translate="yes" xml:space="preserve">
          <source>This document describes the behavior and implementation of the PerlIO abstraction described in &lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt; when &lt;code&gt;USE_PERLIO&lt;/code&gt; is defined.</source>
          <target state="translated">Этот документ описывает поведение и реализацию абстракции PerlIO, описанной в &lt;a href=&quot;perlapio&quot;&gt;perlapio,&lt;/a&gt; когда определен &lt;code&gt;USE_PERLIO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a866d5af85544e7e4f21ddcd952a6d5892f7ea0f" translate="yes" xml:space="preserve">
          <source>This document describes the layout of the Perl source tree. If you're hacking on the Perl core, this will help you find what you're looking for.</source>
          <target state="translated">Данный документ описывает структуру дерева источников Perl.Если вы взламываете ядро Perl,это поможет вам найти то,что вы ищете.</target>
        </trans-unit>
        <trans-unit id="327aacce5b60fcb7f0492805932fe1dec841e5bb" translate="yes" xml:space="preserve">
          <source>This document describes threads version 2.01</source>
          <target state="translated">Данный документ описывает потоки версии 2.01</target>
        </trans-unit>
        <trans-unit id="fa650f02e8b505bbf05cadb48d318189989235e1" translate="yes" xml:space="preserve">
          <source>This document describes threads version 2.25</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469ac48c0f559cb018049645e8c6431b0895b43b" translate="yes" xml:space="preserve">
          <source>This document describes threads::shared version 1.48</source>
          <target state="translated">В этом документе описываются потоки::shared version 1.48.</target>
        </trans-unit>
        <trans-unit id="6bdb3bba8e288e79f3b2d24456bd5e0dd45bb944" translate="yes" xml:space="preserve">
          <source>This document describes threads::shared version 1.61</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645bafb8d9dd20a3e1fad46cb6f3fa997de6c937" translate="yes" xml:space="preserve">
          <source>This document describes various features of FreeBSD that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности FreeBSD,которые повлияют на то,как будет скомпилирован и/или запущен Perl версии 5 (в дальнейшем только Perl).</target>
        </trans-unit>
        <trans-unit id="321b1b1331ddd1b908bf07373d4048f86b3fa9c7" translate="yes" xml:space="preserve">
          <source>This document describes various features of HP's (formerly Compaq's, formerly Digital's) Unix operating system (Tru64) that will affect how Perl version 5 (hereafter just Perl) is configured, compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности операционной системы HP (ранее Compaq,ранее Digital)Unix (Tru64),которые повлияют на то,как настраивается,компилируется и/или запускается Perl версии 5 (далее просто Perl).</target>
        </trans-unit>
        <trans-unit id="d268ac5a2d19120ce76c77eb58b90ecc6824f4a2" translate="yes" xml:space="preserve">
          <source>This document describes various features of HP's Unix operating system (HP-UX) that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности операционной системы HP Unix (HP-UX),которые повлияют на то,как Perl версии 5 (далее просто Perl)компилируется и/или запускается.</target>
        </trans-unit>
        <trans-unit id="2eba298a6bc6800370faf3fd81957d6c988953ae" translate="yes" xml:space="preserve">
          <source>This document describes various features of IBM's OS/400 operating system that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные особенности операционной системы IBM OS/400,которые повлияют на то,как будет скомпилирован и/или запущен Perl версии 5 (далее только Perl).</target>
        </trans-unit>
        <trans-unit id="1043854dc3d305d1c7397cad00b2c0693b02060a" translate="yes" xml:space="preserve">
          <source>This document describes various features of IBM's UNIX operating system AIX that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности операционной системы IBM UNIX AIX,которые будут влиять на то,как Perl версии 5 (далее просто Perl)компилируется и/или запускается.</target>
        </trans-unit>
        <trans-unit id="0e732732feb0181fd46f9c9188d35cc9910b00cf" translate="yes" xml:space="preserve">
          <source>This document describes various features of Irix that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности Irix,которые повлияют на то,как Perl версии 5 (в дальнейшем только Perl)компилируется и/или запускается.</target>
        </trans-unit>
        <trans-unit id="180f34cce99d47d99da56406605f0fb9ba8ddd90" translate="yes" xml:space="preserve">
          <source>This document describes various features of Linux that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности Linux,которые повлияют на то,как Perl версии 5 (далее просто Perl)компилируется и/или запускается.</target>
        </trans-unit>
        <trans-unit id="cd165af2963c8b766b7c027487cbd05b923f2018" translate="yes" xml:space="preserve">
          <source>This document describes various features of OpenBSD that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности OpenBSD,которые повлияют на то,как будет скомпилирован и/или запущен Perl версии 5 (в дальнейшем только Perl).</target>
        </trans-unit>
        <trans-unit id="bc5bdb1f6483dddcfcf934a3487da7243a97f3cc" translate="yes" xml:space="preserve">
          <source>This document describes various features of Sun's Solaris operating system that will affect how Perl version 5 (hereafter just perl) is compiled and/or runs. Some issues relating to the older SunOS 4.x are also discussed, though they may be out of date.</source>
          <target state="translated">В этом документе описываются различные функции операционной системы Sun Solaris,которые повлияют на то,как будет скомпилирована и/или запущена Perl версия 5 (далее просто perl).Обсуждаются также некоторые вопросы,связанные со старой версией SunOS 4.x,хотя они могут быть и устаревшими.</target>
        </trans-unit>
        <trans-unit id="fedada57f7519909ad611f81430777abe7e58861" translate="yes" xml:space="preserve">
          <source>This document describes various features of Synology DSM operating system that will affect how Perl 5 (hereafter just Perl) is configured, compiled and/or runs. It has been compiled and verified by Johan Vromans for the Synology DS413 (QorIQ), with feedback from H.Merijn Brand (DS213, ARMv5tel and RS815, Intel Atom x64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757712086ab3b4685f19333593ba82a0d48290a1" translate="yes" xml:space="preserve">
          <source>This document describes various features of the Symbian operating system that will affect how Perl version 5 (hereafter just Perl) is compiled and/or runs.</source>
          <target state="translated">Этот документ описывает различные возможности операционной системы Symbian,которые будут влиять на то,как Perl версии 5 (в дальнейшем только Perl)компилируется и/или запускается.</target>
        </trans-unit>
        <trans-unit id="fc69a8a87860da299a32df2a5c45e5d6bec2f8df" translate="yes" xml:space="preserve">
          <source>This document describes version 0.13 of encoding::warnings, released June 20, 2016.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d121d0bfe8a3c1aa6015bd2c8760d53592dff9" translate="yes" xml:space="preserve">
          <source>This document describes version 0.18 of Locale::Maketext::Simple, released Septermber 8, 2006.</source>
          <target state="translated">Этот документ описывает версию 0.18 Locale::Maketext::Simple,выпущенную Septermber 8,2006.</target>
        </trans-unit>
        <trans-unit id="5e0659e04f3d9f2056b337b0739a67684597732b" translate="yes" xml:space="preserve">
          <source>This document describes version 0.97 of Attribute::Handlers.</source>
          <target state="translated">Этот документ описывает версию 0.97 атрибута::обработчики.</target>
        </trans-unit>
        <trans-unit id="1605f5eccb40dc73f78c393c35eb29bd098cfb8f" translate="yes" xml:space="preserve">
          <source>This document describes version 1.0 of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf780daf1c016bbf9b8bf7bcea84f2fe69f237a" translate="yes" xml:space="preserve">
          <source>This document describes version 1.01 of Attribute::Handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f171b9809b51bd5f94dba6d702fe833dee48017f" translate="yes" xml:space="preserve">
          <source>This document describes version 1.1 of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0cf5695cdecc42b0a56163e7c761e8f4e34ac" translate="yes" xml:space="preserve">
          <source>This document describes version 1.2 of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcccd87344b9b0105f05a1d3b78e62bdfe07a5e" translate="yes" xml:space="preserve">
          <source>This document describes version 1.3 of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ad1cd2f74484f836eb1d92be8f1677db4c49d0" translate="yes" xml:space="preserve">
          <source>This document describes version 1.4 of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70b159fef5698128cc2ba778d3b9f8c4402065a" translate="yes" xml:space="preserve">
          <source>This document describes version 2 of the CPAN distribution metadata specification, also known as the &quot;CPAN Meta Spec&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00291624b11a3514d125571e1eabaca275507a74" translate="yes" xml:space="preserve">
          <source>This document describes version 2.09 of File::Path, released 2013-01-17.</source>
          <target state="translated">Этот документ описывает версию 2.09 файла::Path,выпущенного в 2013-01-17.</target>
        </trans-unit>
        <trans-unit id="e958fa3bffae7851375960acacad749b89480be8" translate="yes" xml:space="preserve">
          <source>This document differs from &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt; in that it is a style guide rather than a tutorial on creating CPAN modules. It provides a checklist against which modules can be compared to determine whether they conform to best practice, without necessarily describing in detail how to achieve this.</source>
          <target state="translated">Этот документ отличается от &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt; тем, что он представляет собой руководство по стилю, а не руководство по созданию модулей CPAN. Он предоставляет контрольный список, с которым можно сравнивать модули, чтобы определить, соответствуют ли они передовой практике, без подробного описания того, как этого добиться.</target>
        </trans-unit>
        <trans-unit id="f6d0bfb69bb5025df2e411b7c26b2866134bc607" translate="yes" xml:space="preserve">
          <source>This document explains how Perl development works. It includes details about the Perl 5 Porters email list, the Perl repository, the Perl bug tracker, patch guidelines, and commentary on Perl development philosophy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c365d03a0d07def2d5f697a7dff266e86bfcaee" translate="yes" xml:space="preserve">
          <source>This document explains how Perl development works. It includes details about the Perl 5 Porters email list, the Perl repository, the Perlbug bug tracker, patch guidelines, and commentary on Perl development philosophy.</source>
          <target state="translated">Этот документ объясняет,как работает Perl.Он включает в себя подробную информацию о списке адресов электронной почты Perl 5 Porters,репозитории Perl,отслеживании ошибок Perlbug,рекомендациях по установке исправлений и комментариях к философии разработки Perl.</target>
        </trans-unit>
        <trans-unit id="1a4e728f85569353c5be0c8060d949669e83dbf4" translate="yes" xml:space="preserve">
          <source>This document gives a condensed list of the features available in the POSIX module. Consult your operating system's manpages for general information on most features. Consult &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for functions which are noted as being identical or almost identical to Perl's builtin functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448289ec7a46caaf1d68d5b7cd3ab508bea55402" translate="yes" xml:space="preserve">
          <source>This document gives a condensed list of the features available in the POSIX module. Consult your operating system's manpages for general information on most features. Consult &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for functions which are noted as being identical to Perl's builtin functions.</source>
          <target state="translated">В этом документе приводится сокращенный список функций, доступных в модуле POSIX. Для получения общей информации о большинстве функций обратитесь к руководству вашей операционной системы. Проконсультируйтесь с &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; по поводу функций, которые отмечены как идентичные встроенным функциям Perl.</target>
        </trans-unit>
        <trans-unit id="b3a9755b0632840622eb25f31414e4542c2feca7" translate="yes" xml:space="preserve">
          <source>This document gives a general idea of Unicode and how to use Unicode in Perl. See &lt;a href=&quot;#Further-Resources&quot;&gt;&quot;Further Resources&quot;&lt;/a&gt; for references to more in-depth treatments of Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fce74951001e7bfa538197dd8bb5ec9f0e07bc5" translate="yes" xml:space="preserve">
          <source>This document gives a general idea of Unicode and how to use Unicode in Perl. See &lt;a href=&quot;#Further-Resources&quot;&gt;Further Resources&lt;/a&gt; for references to more in-depth treatments of Unicode.</source>
          <target state="translated">Этот документ дает общее представление о Unicode и о том, как использовать Unicode в Perl. Ссылки на более подробные сведения о Unicode см. В разделе &amp;laquo; &lt;a href=&quot;#Further-Resources&quot;&gt;Дополнительные ресурсы&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a55afa937d8de565fbacea117f04c55c4f3d03c" translate="yes" xml:space="preserve">
          <source>This document gives instructions for building Perl for RISC OS. It is complicated by the need to cross compile. There is a binary version of perl available from &lt;a href=&quot;http://www.cp15.org/perl/&quot;&gt;http://www.cp15.org/perl/&lt;/a&gt; which you may wish to use instead of trying to compile it yourself.</source>
          <target state="translated">Этот документ дает инструкции по сборке Perl для RISC OS. Это осложняется необходимостью кросс-компиляции. Существует бинарная версия perl, доступная на &lt;a href=&quot;http://www.cp15.org/perl/&quot;&gt;http://www.cp15.org/perl/,&lt;/a&gt; которую вы можете использовать вместо того, чтобы пытаться скомпилировать ее самостоятельно.</target>
        </trans-unit>
        <trans-unit id="15f232a362787f4ceadbadf19dad93be195a4a8a" translate="yes" xml:space="preserve">
          <source>This document gives you some suggestions about how to go about writing Perl modules, preparing them for distribution, and making them available via CPAN.</source>
          <target state="translated">Этот документ дает некоторые предложения по написанию модулей на Perl,подготовке их к дистрибуции и обеспечению их доступности через CPAN.</target>
        </trans-unit>
        <trans-unit id="132f8081c1f83d30c54e1dd1f8a6c29026e0459f" translate="yes" xml:space="preserve">
          <source>This document has provided several way to go about identifying hot-spots, and checking whether any modifications have improved the runtime of the code.</source>
          <target state="translated">Этот документ предоставил несколько способов для определения горячих точек и проверки того,не улучшили ли какие-нибудь изменения время выполнения кода.</target>
        </trans-unit>
        <trans-unit id="1d1186d2059259c57e212c2e5f26480c6a04dbbf" translate="yes" xml:space="preserve">
          <source>This document is about using Pod::Simple to write a Pod processor, generally a Pod formatter. If you just want to know about using an existing Pod formatter, instead see its documentation and see also the docs in &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9e9ade072c3d9b2906bfd078f37006fde1b348" translate="yes" xml:space="preserve">
          <source>This document is an attempt to shine some light on the guts of the regex engine and how it works. The regex engine represents a significant chunk of the perl codebase, but is relatively poorly understood. This document is a meagre attempt at addressing this situation. It is derived from the author's experience, comments in the source code, other papers on the regex engine, feedback on the perl5-porters mail list, and no doubt other places as well.</source>
          <target state="translated">Этот документ является попыткой пролить свет на кишки регрессионного двигателя и на то,как он работает.Регекс-движок представляет собой значительную часть кодовой базы perl,но относительно плохо изучен.Настоящий документ представляет собой скудную попытку разрешить эту ситуацию.Он основан на опыте автора,комментариях в исходных текстах,других статьях о регекс-движке,обратной связи по списку рассылки perl5-портеров,а также,несомненно,в других местах.</target>
        </trans-unit>
        <trans-unit id="e2f799b102440b11497f30f8301310792802f29f" translate="yes" xml:space="preserve">
          <source>This document is authored and maintained by Gurusamy Sarathy &amp;lt;gsar@activestate.com&amp;gt;.</source>
          <target state="translated">Автором и поддержкой этого документа является Гурусами Сарати &amp;lt;gsar@activestate.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="deb0c7f47e4494d30a1aab35b9ec321b01a2ec44" translate="yes" xml:space="preserve">
          <source>This document is available under the same terms as Perl itself. Code examples in all the perlfaq documents are in the public domain. Use them as you see fit (and at your own risk with no warranty from anyone).</source>
          <target state="translated">Этот документ доступен на тех же условиях,что и сам Perl.Примеры кода во всех документах perlfaq являются общественным достоянием.Используйте их по своему усмотрению (и на свой страх и риск без каких-либо гарантий).</target>
        </trans-unit>
        <trans-unit id="3ad8de5a753a60df1918818ee7a3cda366409476" translate="yes" xml:space="preserve">
          <source>This document is broken into two sections; those methods that are most useful to the end-developer, and those methods for anyone wishing to subclass or get very familiar with &lt;code&gt;autodie::exception&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931cd9f92a3e4b725c73c5f241d6c52b01e63f35" translate="yes" xml:space="preserve">
          <source>This document is detailed notes on the Pod markup language. Most people will only have to read &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; to know how to write in Pod, but this document may answer some incidental questions to do with parsing and rendering Pod.</source>
          <target state="translated">Этот документ содержит подробные сведения о языке разметки Pod. Большинству людей достаточно будет прочитать &lt;a href=&quot;perlpod&quot;&gt;perlpod,&lt;/a&gt; чтобы научиться писать в Pod, но этот документ может ответить на некоторые случайные вопросы, связанные с синтаксическим анализом и рендерингом Pod.</target>
        </trans-unit>
        <trans-unit id="030bf2a8075ca167ab3cef3833507c2f42453664" translate="yes" xml:space="preserve">
          <source>This document is distributed with the libnet distribution, and is also available on the libnet web page at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5499e713f269332b5a031b1d5ec104878d26d5" translate="yes" xml:space="preserve">
          <source>This document is intended to give you a quick overview of the Perl programming language, along with pointers to further documentation. It is intended as a &quot;bootstrap&quot; guide for those who are new to the language, and provides just enough information for you to be able to read other peoples' Perl and understand roughly what it's doing, or write your own simple scripts.</source>
          <target state="translated">Этот документ предназначен для быстрого ознакомления с языком программирования Perl,а также для указания на дальнейшую документацию.Он предназначен в качестве &quot;bootstrap&quot; руководства для тех,кто является новичком в этом языке,и предоставляет достаточно информации для того,чтобы вы могли прочитать Perl других людей и примерно понять,что он делает,или написать свои собственные простые сценарии.</target>
        </trans-unit>
        <trans-unit id="04d450fbf5761325924f000d871533277846798f" translate="yes" xml:space="preserve">
          <source>This document is maintained by Jan Dubois.</source>
          <target state="translated">Этот документ ведется Яном Дюбуа.</target>
        </trans-unit>
        <trans-unit id="6ad1ca1a9c1e0e6df1be4b460cdb832dc533d65a" translate="yes" xml:space="preserve">
          <source>This document is meant to be a detailed but understandable treatment of the many different sorts of data structures you might want to develop. It should also serve as a cookbook of examples. That way, when you need to create one of these complex data structures, you can just pinch, pilfer, or purloin a drop-in example from here.</source>
          <target state="translated">Этот документ предназначен для подробного,но понятного изложения множества различных типов структур данных,которые вы,возможно,захотите разработать.Он также должен служить кулинарной книгой примеров.Таким образом,когда вам нужно создать одну из этих сложных структур данных,вы можете просто ущипнуть,ворсовать или пурлонировать пример отсюда.</target>
        </trans-unit>
        <trans-unit id="9bf997dd7f7e98ee160d1fffa9d041813ac9f4bb" translate="yes" xml:space="preserve">
          <source>This document is meant to help you to find out what constitutes portable Perl code. That way once you make a decision to write portably, you know where the lines are drawn, and you can stay within them.</source>
          <target state="translated">Этот документ предназначен для того,чтобы помочь вам выяснить,что представляет собой портативный Perl-код.Таким образом,как только вы принимаете решение о портативном написании,вы знаете,где нарисованы линии,и можете оставаться в них.</target>
        </trans-unit>
        <trans-unit id="9d9f3d95216c84aa89657f351bb6eefc71ea99a0" translate="yes" xml:space="preserve">
          <source>This document is provided in the hope that it will be useful, but without any warranty; without even the implied warranty of accuracy, authoritativeness, completeness, merchantability, or fitness for a particular purpose.</source>
          <target state="translated">Настоящий документ представлен в надежде,что он будет полезен,но без каких-либо гарантий;даже без подразумеваемой гарантии точности,авторитета,полноты,пригодности для продажи или пригодности для конкретной цели.</target>
        </trans-unit>
        <trans-unit id="c3a1d5c913f755b58160ddd4ac8b4f8158d38b0a" translate="yes" xml:space="preserve">
          <source>This document is the master document which records all written policies about how the Perl 5 Porters collectively develop and maintain the Perl core.</source>
          <target state="translated">Этот документ является основным документом,в котором зафиксированы все письменные политики о том,как Perl 5 Porters коллективно разрабатывают и поддерживают ядро Perl.</target>
        </trans-unit>
        <trans-unit id="6445b4e91fdc1237d3a1bc4a31d98919bdef331e" translate="yes" xml:space="preserve">
          <source>This document lists the current and past experimental features in the perl core. Although all of these are documented with their appropriate topics, this succinct listing gives you an overview and basic facts about their status.</source>
          <target state="translated">В настоящем документе перечисляются текущие и прошлые экспериментальные функции в ядре perl.Несмотря на то,что все они задокументированы с соответствующими темами,этот краткий список дает вам обзор и основные факты об их статусе.</target>
        </trans-unit>
        <trans-unit id="e04379014fdbc8385dc766fdec2dc2ab609657d0" translate="yes" xml:space="preserve">
          <source>This document may be distributed under the same terms as Perl itself.</source>
          <target state="translated">Этот документ может распространяться на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="68809e455146d4d0b2eb575625c0befbf01b3e91" translate="yes" xml:space="preserve">
          <source>This document may be incomplete in some respects.</source>
          <target state="translated">В некоторых отношениях этот документ может быть неполным.</target>
        </trans-unit>
        <trans-unit id="0888583782e9e5c64acf12be9464dec48a946068" translate="yes" xml:space="preserve">
          <source>This document merely lists all available properties and does not attempt to explain what each property really means. There is a brief description of each Perl extension; see &lt;a href=&quot;perlunicode#Other-Properties&quot;&gt;&quot;Other Properties&quot; in perlunicode&lt;/a&gt; for more information on these. There is some detail about Blocks, Scripts, General_Category, and Bidi_Class in &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;, but to find out about the intricacies of the official Unicode properties, refer to the Unicode standard. A good starting place is &lt;a href=&quot;http://www.unicode.org/reports/tr44/&quot;&gt;http://www.unicode.org/reports/tr44/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40e2bd179554762718d2c8f40e4558baafd8315" translate="yes" xml:space="preserve">
          <source>This document merely lists all available properties and does not attempt to explain what each property really means. There is a brief description of each Perl extension; see &lt;a href=&quot;perlunicode#Other-Properties&quot;&gt;Other Properties in perlunicode&lt;/a&gt; for more information on these. There is some detail about Blocks, Scripts, General_Category, and Bidi_Class in &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;, but to find out about the intricacies of the official Unicode properties, refer to the Unicode standard. A good starting place is &lt;a href=&quot;http://www.unicode.org/reports/tr44/&quot;&gt;http://www.unicode.org/reports/tr44/&lt;/a&gt;.</source>
          <target state="translated">Этот документ просто перечисляет все доступные свойства и не пытается объяснить, что на самом деле означает каждое свойство. Есть краткое описание каждого расширения Perl; см. &lt;a href=&quot;perlunicode#Other-Properties&quot;&gt;Другие свойства в perlunicode&lt;/a&gt; для получения дополнительной информации об этом. Есть некоторые подробности о блоках, скриптах, General_Category и Bidi_Class в &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; , но чтобы узнать о тонкостях официальных свойств Unicode, обратитесь к стандарту Unicode. Хорошее место для начала - &lt;a href=&quot;http://www.unicode.org/reports/tr44/&quot;&gt;http://www.unicode.org/reports/tr44/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69e6772a5d46653631303f536faddc78ecd15c3a" translate="yes" xml:space="preserve">
          <source>This document mostly explains the</source>
          <target state="translated">Этот документ в основном объясняет</target>
        </trans-unit>
        <trans-unit id="a7ddd5955e611e8402df676dc922c52fe96687d9" translate="yes" xml:space="preserve">
          <source>This document needs a rewrite that separates the tutorial content from the reference content.</source>
          <target state="translated">Этот документ нуждается в перезаписи,которая отделяет содержимое учебника от справочного содержимого.</target>
        </trans-unit>
        <trans-unit id="c5434f0b9e2b7cf484cc38556a1c3be222c03edd" translate="yes" xml:space="preserve">
          <source>This document provides a general overview of the capabilities and limitations of the fork() emulation. Note that the issues discussed here are not applicable to platforms where a real fork() is available and Perl has been configured to use it.</source>
          <target state="translated">В этом документе представлен общий обзор возможностей и ограничений эмуляции fork().Обратите внимание,что обсуждаемые здесь вопросы не применимы к платформам,где доступна настоящая fork()и Perl был настроен на ее использование.</target>
        </trans-unit>
        <trans-unit id="93c5711ad21bddf8f27384e848494d1a512f01be" translate="yes" xml:space="preserve">
          <source>This document provides a reference for Perl's object orientation features. If you're looking for an introduction to object-oriented programming in Perl, please see &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">Этот документ предоставляет справочник по функциям объектной ориентации Perl. Если вы ищете введение в объектно-ориентированное программирование на Perl, см. &lt;a href=&quot;perlootut&quot;&gt;Perlootut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46a94276417126d2ba57635546eac62791e072d3" translate="yes" xml:space="preserve">
          <source>This document provides an introduction to object-oriented programming in Perl. It begins with a brief overview of the concepts behind object oriented design. Then it introduces several different OO systems from &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org&quot;&gt;CPAN&lt;/a&gt; which build on top of what Perl provides.</source>
          <target state="translated">Этот документ представляет собой введение в объектно-ориентированное программирование на Perl. Он начинается с краткого обзора концепций объектно-ориентированного дизайна. Затем он представляет несколько различных систем объектно- &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org&quot;&gt;ориентированного программирования&lt;/a&gt; из CPAN, которые построены на основе того, что предоставляет Perl.</target>
        </trans-unit>
        <trans-unit id="32fbffb9ed2f7371e868fa4e9fc51a003e559b60" translate="yes" xml:space="preserve">
          <source>This document provides an introduction to object-oriented programming in Perl. It begins with a brief overview of the concepts behind object oriented design. Then it introduces several different OO systems from &lt;a href=&quot;https://www.cpan.org&quot;&gt;CPAN&lt;/a&gt; which build on top of what Perl provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6876a82e12e5ab947f419b2c224d987985e1ad19" translate="yes" xml:space="preserve">
          <source>This document provides an overview of how the Perl interpreter works at the level of C code, along with pointers to the relevant C source code files.</source>
          <target state="translated">В этом документе представлен обзор того,как работает Perl-интерпретатор на уровне C-кода,а также указатели на соответствующие файлы исходного кода на C.</target>
        </trans-unit>
        <trans-unit id="37c6cecf4b6aa297d30eab95a37418764fe60217" translate="yes" xml:space="preserve">
          <source>This document provides details on using git to develop Perl. If you are just interested in working on a quick patch, see &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; first. This document is intended for people who are regular contributors to Perl, including those with write access to the git repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7278c04f4b33c2701db9eb4b58232b8395cf3c28" translate="yes" xml:space="preserve">
          <source>This document provides information about the portion of the Unicode database that deals with character properties, that is the portion that is defined on single code points. (&lt;a href=&quot;#Other-information-in-the-Unicode-data-base&quot;&gt;&quot;Other information in the Unicode data base&quot;&lt;/a&gt; below briefly mentions other data that Unicode provides.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ef42b4ebd0391f6b1eb2c007891c9540cce7bb" translate="yes" xml:space="preserve">
          <source>This document provides information about the portion of the Unicode database that deals with character properties, that is the portion that is defined on single code points. (&lt;a href=&quot;#Other-information-in-the-Unicode-data-base&quot;&gt;Other information in the Unicode data base&lt;/a&gt; below briefly mentions other data that Unicode provides.)</source>
          <target state="translated">Этот документ предоставляет информацию о той части базы данных Unicode, которая имеет дело со свойствами символов, то есть той части, которая определена для отдельных кодовых точек. ( &lt;a href=&quot;#Other-information-in-the-Unicode-data-base&quot;&gt;Другая информация в базе данных Unicode&lt;/a&gt; ниже кратко упоминает другие данные, которые предоставляет Unicode.)</target>
        </trans-unit>
        <trans-unit id="e7cfd37a5d8539271a047f292c9b12d8fd7d71db" translate="yes" xml:space="preserve">
          <source>This document reconstructs the history of the CPAN Meta Spec based on change logs, repository commit messages and the published HTML files. In some cases, particularly prior to version 1.2, the exact version when certain fields were introduced or changed is inconsistent between sources. When in doubt, the published HTML files for versions 1.0 to 1.4 as they existed when version 2 was developed are used as the definitive source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a79746685de57fddf566ba23eb18f1694b69ba" translate="yes" xml:space="preserve">
          <source>This document serves as both a specification for anyone wishing to implement the DynaLoader for a new platform and as a guide for anyone wishing to use the DynaLoader directly in an application.</source>
          <target state="translated">Этот документ служит как спецификацией для всех,кто хочет реализовать DynaLoader для новой платформы,так и руководством для всех,кто хочет использовать DynaLoader непосредственно в приложении.</target>
        </trans-unit>
        <trans-unit id="4c2fd7fb88b1605d6c1c01cd882956329e66498d" translate="yes" xml:space="preserve">
          <source>This document takes you through a simple patch example.</source>
          <target state="translated">В этом документе мы рассмотрим простой пример патча.</target>
        </trans-unit>
        <trans-unit id="482b84044bf12cbb74ce5534dc67232a2bb4bcd3" translate="yes" xml:space="preserve">
          <source>This document varies from difficult to understand to completely and utterly opaque. The wandering prose riddled with jargon is hard to fathom in several places.</source>
          <target state="translated">Этот документ варьируется от трудного для понимания до полностью и совершенно непрозрачного.Блуждающую прозу,загадочную жаргоном,трудно понять в нескольких местах.</target>
        </trans-unit>
        <trans-unit id="e494f5a4ef902fd5cb4de9dfa1a90e73e0fc46e2" translate="yes" xml:space="preserve">
          <source>This document walks through the creation of a small patch to Perl's C code. If you're just getting started with Perl core hacking, this will help you understand how it works.</source>
          <target state="translated">Этот документ проходит через создание небольшого патча к коду Perl's C.Если вы только начинаете взламывать ядро Perl,это поможет вам понять,как это работает.</target>
        </trans-unit>
        <trans-unit id="6e368b4b82da174b5c34f4ad74472953966358bf" translate="yes" xml:space="preserve">
          <source>This document was created in February, 2011, and the last major revision was in February, 2013.</source>
          <target state="translated">Этот документ был создан в феврале 2011 года,а последний раз его основная редакция была проведена в феврале 2013 года.</target>
        </trans-unit>
        <trans-unit id="8a3b26fb452c67444e8240d5b8d2d39b95224d76" translate="yes" xml:space="preserve">
          <source>This document was last revised 8-DEC-2007, for Perl 5.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e05bb5aa5ec020b9cd05ba44bd1e5b7d8efd585" translate="yes" xml:space="preserve">
          <source>This document was last revised on 13-Oct-1998, for Perl 5.004, 5.005, and 5.6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89c4ac20e63934f15f4f06f3bdf35dc35e9054b" translate="yes" xml:space="preserve">
          <source>This document was originally written by David Fiander for the 5.005 release of Perl.</source>
          <target state="translated">Этот документ был изначально написан Дэвидом Файандером для 5.005 выпуска Perl.</target>
        </trans-unit>
        <trans-unit id="44116b950aea8406dc1d009e3e7e8df16d0f1901" translate="yes" xml:space="preserve">
          <source>This document was originally written by Nathan Torkington, and is maintained by the perl5-porters mailing list.</source>
          <target state="translated">Этот документ был изначально написан Натаном Торкингтоном и поддерживается списком рассылки perl5-портеров.</target>
        </trans-unit>
        <trans-unit id="cb57f1783ae5d9d11a07aa4ee9a4142c141dd869" translate="yes" xml:space="preserve">
          <source>This document was originally written by Thomas Dorner for the 5.005 release of Perl.</source>
          <target state="translated">Этот документ был первоначально написан Томасом Дорнером для 5.005 выпуска Perl.</target>
        </trans-unit>
        <trans-unit id="8245e0ace1fc709b9c52b2d684fbab4d872b4b6b" translate="yes" xml:space="preserve">
          <source>This document was podified for the 5.005_03 release of Perl 11 March 1999.</source>
          <target state="translated">Этот документ был подфицирован для версии 5.005_03 от 11 марта 1999 года в Perl.</target>
        </trans-unit>
        <trans-unit id="01c73c6cbc6ea7a7507692f73f286583700f23f4" translate="yes" xml:space="preserve">
          <source>This document was podified for the 5.6 release of perl 11 July 2000.</source>
          <target state="translated">Этот документ был подкреплен выпуском 5.6 perl 11 июля 2000 года.</target>
        </trans-unit>
        <trans-unit id="e3d3763f0de441b0bf953c53b8f14562b8c6d91b" translate="yes" xml:space="preserve">
          <source>This document was revised 09-October-1996 for Perl 5.003_7.</source>
          <target state="translated">Настоящий документ был пересмотрен 09 октября-1996 года на Perl 5.003_7.</target>
        </trans-unit>
        <trans-unit id="1ae9aedfb6e910ab590ab6a48004a6cd92829aac" translate="yes" xml:space="preserve">
          <source>This document will help you Configure, build, test and install Perl on BS2000 in the POSIX subsystem.</source>
          <target state="translated">Этот документ поможет вам настроить,собрать,протестировать и установить Perl на BS2000 в подсистеме POSIX.</target>
        </trans-unit>
        <trans-unit id="ecb2db0bdd80184dad93c70d1f7773c61d926757" translate="yes" xml:space="preserve">
          <source>This document will help you Configure, build, test and install Perl on OS/390 (aka z/OS) Unix System Services.</source>
          <target state="translated">Этот документ поможет вам настроить,собрать,протестировать и установить Perl на OS/390 (также известный как z/OS)Unix System Services.</target>
        </trans-unit>
        <trans-unit id="b14dd21b17eb4778756f16a28286f3080a5b52fc" translate="yes" xml:space="preserve">
          <source>This document will help you configure, make, test and install Perl on Cygwin. This document also describes features of Cygwin that will affect how Perl behaves at runtime.</source>
          <target state="translated">Этот документ поможет вам настроить,сделать,протестировать и установить Perl на Cygwin.Этот документ также описывает возможности Cygwin,которые будут влиять на поведение Perl во время выполнения программы.</target>
        </trans-unit>
        <trans-unit id="4b25a8a1d43deec5996faad1ce1066a1b7f65307" translate="yes" xml:space="preserve">
          <source>This document will help you learn the best way to go about hacking on the Perl core C code. It covers common problems, debugging, profiling, and more.</source>
          <target state="translated">Этот документ поможет вам узнать,как лучше всего взломать код ядра C на Perl.Он охватывает общие проблемы,отладку,профилирование и многое другое.</target>
        </trans-unit>
        <trans-unit id="bb8154762cb7fc1e9eea1d2d14aa355d5fb6add7" translate="yes" xml:space="preserve">
          <source>This document will try to discuss what alternatives for the deprecated features are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1ceac6a2e862b1ba010e29c7ba5c554256d9b3" translate="yes" xml:space="preserve">
          <source>This documentation describes version 0.08.</source>
          <target state="translated">Данная документация описывает версию 0.08.</target>
        </trans-unit>
        <trans-unit id="bb13bb5cc25da0a84b0ee6fe56550c8fa997e8a4" translate="yes" xml:space="preserve">
          <source>This documentation is for people who want to download CPAN modules and install them on their own computer.</source>
          <target state="translated">Эта документация предназначена для тех,кто хочет загрузить CPAN модули и установить их на свой компьютер.</target>
        </trans-unit>
        <trans-unit id="f9807e2f281735ce8b4db75a087a60d39d5eaabb" translate="yes" xml:space="preserve">
          <source>This documentation is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта документация является свободным программным обеспечением;вы можете распространять ее и/или изменять на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="4e1e03b9948de51dc9fc37899fb9224e953fca3a" translate="yes" xml:space="preserve">
          <source>This documentation is free; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта документация бесплатна;вы можете распространять ее и/или изменять на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="cceba8951b48c0df6a7d7a78ae98404b2be1a5f6" translate="yes" xml:space="preserve">
          <source>This documentation is maintained as part of the podlators distribution. The current version is always available from its web site at &amp;lt;&lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">Эта документация поддерживается как часть распространения подлаторов. Текущая версия всегда доступна на его веб-сайте &amp;lt; &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="14f1ce292bd49cd739fa4dcd484fe158f74b2d38" translate="yes" xml:space="preserve">
          <source>This documentation is maintained as part of the podlators distribution. The current version is always available from its web site at &lt;a href=&quot;https://www.eyrie.org/~eagle/software/podlators/&quot;&gt;https://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59b544a64dcf3a8c36474bf7a745c77abd72ed" translate="yes" xml:space="preserve">
          <source>This documentation provided by Tels &amp;lt;nospam-abuse@bloodgate.com&amp;gt; 2007.</source>
          <target state="translated">Эта документация предоставлена ​​Tels &amp;lt;nospam-abuse@bloodgate.com&amp;gt; 2007.</target>
        </trans-unit>
        <trans-unit id="d579dc02247e710bddf4fd80263160b958f95883" translate="yes" xml:space="preserve">
          <source>This does a &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref()&lt;/a&gt;&lt;/code&gt; check on the argument provided. The &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; of the argument must be the same as the &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; of the default value for this check to pass.</source>
          <target state="translated">Это выполняет проверку &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref()&lt;/a&gt;&lt;/code&gt; предоставленного аргумента. &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; аргумент должен быть таким же , как &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; значения по умолчанию для этой проверки , чтобы пройти.</target>
        </trans-unit>
        <trans-unit id="4b5cd3d183133e44d31dceabaeef24f14bc16309" translate="yes" xml:space="preserve">
          <source>This does a &lt;code&gt;ref()&lt;/code&gt; check on the argument provided. The &lt;code&gt;ref&lt;/code&gt; of the argument must be the same as the &lt;code&gt;ref&lt;/code&gt; of the default value for this check to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3d5cb2973c8eb59f68a70871cc8bd14d30329a" translate="yes" xml:space="preserve">
          <source>This does not check for subtypes or method overloading. Use &lt;code&gt;sv_isa_sv&lt;/code&gt; to verify an inheritance relationship in the same way as the &lt;code&gt;isa&lt;/code&gt; operator by respecting any &lt;code&gt;isa()&lt;/code&gt; method overloading; or &lt;code&gt;sv_derived_from_sv&lt;/code&gt; to test directly on the actual object type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9382125ff2c139dab5a2974252e8c96e13c1f7" translate="yes" xml:space="preserve">
          <source>This does not check if &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt; $brooklyn{tree}&lt;/code&gt; is true, it checks if it returns 1. Very different. Similar caveats exist for false and 0. In these cases, use &lt;code&gt;ok()&lt;/code&gt; .</source>
          <target state="translated">Это не проверяет, &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt; $brooklyn{tree}&lt;/code&gt; ли &lt;a href=&quot;../functions/exists&quot;&gt;существует&lt;/a&gt; $ brooklyn {tree} , оно проверяет, возвращает ли оно 1. Очень другое. Аналогичные предостережения существуют для false и 0. В этих случаях используйте &lt;code&gt;ok()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9ee01c5bea640b9da990c541197d0b2c4c126f" translate="yes" xml:space="preserve">
          <source>This does not check if &lt;code&gt;exists $brooklyn{tree}&lt;/code&gt; is true, it checks if it returns 1. Very different. Similar caveats exist for false and 0. In these cases, use &lt;code&gt;ok()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd20b2062f4585400f385fca7062f2de8bbcc3c0" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2 or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;File::Spec::VMS#file_name_is_absolute&quot;&gt;&quot;file_name_is_absolute&quot; in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a4bb476f64546166599da65496591b48105011" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2 or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;vms#file_name_is_absolute&quot;&gt;file_name_is_absolute in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="translated">Это не обращается к локальной файловой системе в Unix, Win32, OS / 2 или Mac OS (Classic). Он обращается к рабочей среде для VMS (см. &lt;a href=&quot;vms#file_name_is_absolute&quot;&gt;File_name_is_absolute в File :: Spec :: VMS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="05ba9e904da127ea409d891d030eef9da471aef5" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2, or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;File::Spec::VMS#file_name_is_absolute&quot;&gt;&quot;file_name_is_absolute&quot; in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5567db63aec81d4f2bb7d5785e7a6d2074129096" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2, or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;spec/vms#file_name_is_absolute&quot;&gt;file_name_is_absolute in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="translated">Это не обращается к локальной файловой системе в Unix, Win32, OS / 2 или Mac OS (Classic). Он обращается к рабочей среде для VMS (см. &lt;a href=&quot;spec/vms#file_name_is_absolute&quot;&gt;File_name_is_absolute в File :: Spec :: VMS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c944650291e0fb3160694a6ec50737cfb06a9680" translate="yes" xml:space="preserve">
          <source>This does not create any methods for you, it just adds the &lt;code&gt;FOO&lt;/code&gt; constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a35bcc864cbc531874ff7b69a1ed16eb2d6e952" translate="yes" xml:space="preserve">
          <source>This does not need an interpreter context, so the definition has no &lt;code&gt;pTHX&lt;/code&gt; , and it follows that callers don't use &lt;code&gt;aTHX&lt;/code&gt; . (See &lt;a href=&quot;#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT&lt;/a&gt;.)</source>
          <target state="translated">Для этого не нужен контекст интерпретатора, поэтому определение не имеет &lt;code&gt;pTHX&lt;/code&gt; , и, следовательно, вызывающие абоненты не используют &lt;code&gt;aTHX&lt;/code&gt; . (См. &lt;a href=&quot;#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Фон и PERL_IMPLICIT_CONTEXT&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="c9d579d4202051060b7b7bc5b1e8166efc37986d" translate="yes" xml:space="preserve">
          <source>This does not work with object methods, however; all object methods have to be in the symbol table of some package to be found. See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;&quot;Function Templates&quot; in perlref&lt;/a&gt; for something of a work-around to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5400494835955231d73bab6efd7d27c959f429" translate="yes" xml:space="preserve">
          <source>This does not work with object methods, however; all object methods have to be in the symbol table of some package to be found. See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for something of a work-around to this.</source>
          <target state="translated">Однако это не работает с объектными методами; все методы объекта должны быть в таблице символов какого-либо пакета. См. &amp;laquo; &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Шаблоны функций&amp;raquo; в perlref,&lt;/a&gt; чтобы узнать, как это исправить .</target>
        </trans-unit>
        <trans-unit id="0d2225ec395dc726d6f789db247181b8752831a9" translate="yes" xml:space="preserve">
          <source>This does require you to read the entire archive in to memory first, since otherwise we wouldn't know what data to fill the copy with. (This means that you cannot use the class methods, including &lt;code&gt;iter&lt;/code&gt; on archives that have incompatible filetypes and still expect things to work).</source>
          <target state="translated">Это действительно требует, чтобы вы сначала прочитали весь архив в память, поскольку в противном случае мы не знали бы, какими данными заполнять копию. (Это означает, что вы не можете использовать методы класса, включая &lt;code&gt;iter&lt;/code&gt; , в архивах, которые имеют несовместимые типы файлов и все же ожидают, что что-то будет работать).</target>
        </trans-unit>
        <trans-unit id="d695e6a31e5a4eec6a56e77d637d17eb575265f8" translate="yes" xml:space="preserve">
          <source>This does the same:</source>
          <target state="translated">Это делает то же самое:</target>
        </trans-unit>
        <trans-unit id="dc02dd18bd8bcc4ec6d08efce5d8f98b8592ad09" translate="yes" xml:space="preserve">
          <source>This doesn't copy the underlying array:</source>
          <target state="translated">Это не копирует основной массив:</target>
        </trans-unit>
        <trans-unit id="6a45cffcf59adcdd497d8553e6a4ac8aa27d7fd9" translate="yes" xml:space="preserve">
          <source>This doesn't do anything to your input, or to your output. It only influences the way your sources are read. You can use Unicode in string literals, in identifiers (but they still have to be &quot;word characters&quot; according to &lt;code&gt;\w&lt;/code&gt; ), and even in custom delimiters.</source>
          <target state="translated">Это ничего не делает ни с вашим вводом, ни с вашим выводом. Это влияет только на то, как читаются ваши источники. Вы можете использовать Unicode в строковых литералах, в идентификаторах (но они все равно должны быть &amp;laquo;словесными символами&amp;raquo; в соответствии с &lt;code&gt;\w&lt;/code&gt; ) и даже в настраиваемых разделителях.</target>
        </trans-unit>
        <trans-unit id="12b7a18a1b05ee982fef7d28da1abc2f543dc36e" translate="yes" xml:space="preserve">
          <source>This doesn't do anything to your input, or to your output. It only influences the way your sources are read. You can use Unicode in string literals, in identifiers (but they still have to be &quot;word characters&quot; according to &lt;code&gt;\w&lt;/code&gt;), and even in custom delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08d4d18717ad728adb161ebb6ace72d574c3c92" translate="yes" xml:space="preserve">
          <source>This doesn't mean that a &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variable declared in a statically enclosing lexical scope would be invisible. Only dynamic scopes are cut off. For example, the &lt;code&gt;bumpx()&lt;/code&gt; function below has access to the lexical $x variable because both the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; occurred at the same scope, presumably file scope.</source>
          <target state="translated">Это не означает, что переменная &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , объявленная в статически включающей лексической области видимости, будет невидимой. Отрезаются только динамические области видимости. Например, &lt;code&gt;bumpx()&lt;/code&gt; ниже имеет доступ к лексической переменной $ x, потому что и &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; находятся в одной области видимости, предположительно области файла.</target>
        </trans-unit>
        <trans-unit id="e3b62eb82fdb946fa7043b5f1daf9c10f822dc0f" translate="yes" xml:space="preserve">
          <source>This doesn't mean that a &lt;code&gt;my&lt;/code&gt; variable declared in a statically enclosing lexical scope would be invisible. Only dynamic scopes are cut off. For example, the &lt;code&gt;bumpx()&lt;/code&gt; function below has access to the lexical $x variable because both the &lt;code&gt;my&lt;/code&gt; and the &lt;code&gt;sub&lt;/code&gt; occurred at the same scope, presumably file scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f510646e09469823e3fdbdaaa6f4bdb12a95ec4e" translate="yes" xml:space="preserve">
          <source>This doesn't really improve the legibility of this example, but it's available in case you want it. Squashing the pattern down to the compact form, we have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40a26e5ea83812803ea5b81ef047b1db82eff02" translate="yes" xml:space="preserve">
          <source>This doesn't work if you explicitly specify a loop variable, as in &lt;code&gt;for $item (@array)&lt;/code&gt; . You have to use the default variable &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Это не сработает, если вы явно укажете переменную цикла, как в случае &lt;code&gt;for $item (@array)&lt;/code&gt; . Вы должны использовать переменную по умолчанию &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95e51f60aa318824f02d1eda227d14c25f989db1" translate="yes" xml:space="preserve">
          <source>This doesn't work if you explicitly specify a loop variable, as in &lt;code&gt;for $item (@array)&lt;/code&gt;. You have to use the default variable &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c583421317d67ae6f6464366487994f4149ea1" translate="yes" xml:space="preserve">
          <source>This doesn't work so cleanly for varargs functions, though, as macros imply that the number of arguments is known in advance. Instead we either need to spell them out fully, passing &lt;code&gt;aTHX_&lt;/code&gt; as the first argument (the Perl core tends to do this with functions like Perl_warner), or use a context-free version.</source>
          <target state="translated">Однако для функций varargs это не работает так четко, поскольку макросы подразумевают, что количество аргументов известно заранее. Вместо этого нам нужно либо &lt;code&gt;aTHX_&lt;/code&gt; их полностью, передав aTHX_ в качестве первого аргумента (ядро Perl обычно делает это с помощью таких функций, как Perl_warner), либо использовать версию без контекста.</target>
        </trans-unit>
        <trans-unit id="e02629217bd3e65d041e0afd10431e9bff745dcf" translate="yes" xml:space="preserve">
          <source>This dummy class exists to signal that the class inheriting it should be skipped when reporting exceptions from autodie. This is useful for utility classes like &lt;a href=&quot;Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; that wish to report the location of where they were called on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35b5e520e91c0129daf21db3448c07f88b99cf" translate="yes" xml:space="preserve">
          <source>This effect can be demonstrated by setting up a test script with both forms, including a &lt;code&gt;debug()&lt;/code&gt; subroutine to emulate typical &lt;code&gt;logger()&lt;/code&gt; functionality.</source>
          <target state="translated">Этот эффект можно продемонстрировать, настроив тестовый сценарий с обеими формами, включая подпрограмму &lt;code&gt;debug()&lt;/code&gt; для имитации типичных функций &lt;code&gt;logger()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe2310a8ff7d61c27678f186cd1f8d32e53b8ee" translate="yes" xml:space="preserve">
          <source>This effectively means that your source code behaves as if it were written in UTF-8 with &lt;code&gt;'use utf8&lt;/code&gt; ' in effect. So even if your editor only supports Shift_JIS, for example, you can still try examples in Chapter 15 of &lt;code&gt;Programming Perl, 3rd Ed.&lt;/code&gt;.</source>
          <target state="translated">Фактически это означает, что ваш исходный код ведет себя так, как если бы он был написан в UTF-8 с &lt;code&gt;'use utf8&lt;/code&gt; &amp;raquo;. Так что даже если ваш редактор поддерживает, например, только Shift_JIS, вы все равно можете попробовать примеры в главе 15 &lt;code&gt;Programming Perl, 3rd Ed.&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dec00720dbccd0f2c23e14f01bf267bdc96f79b" translate="yes" xml:space="preserve">
          <source>This effectively means that your source code behaves as if it were written in UTF-8 with &lt;code&gt;'use utf8&lt;/code&gt;' in effect. So even if your editor only supports Shift_JIS, for example, you can still try examples in Chapter 15 of &lt;code&gt;Programming Perl, 3rd Ed.&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd4da3883eaa1f4535d75812114c437bcce2b57" translate="yes" xml:space="preserve">
          <source>This empty set of prereqs is useful for accumulating new prereqs before finally dumping the whole set into a structure or string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf4c61bc03e7bbdfa7f772178436c7814ff1bf" translate="yes" xml:space="preserve">
          <source>This enables (or disables) all of the &lt;code&gt;indent&lt;/code&gt;, &lt;code&gt;space_before&lt;/code&gt; and &lt;code&gt;space_after&lt;/code&gt; (and in the future possibly more) flags in one call to generate the most readable (or most compact) form possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a80c354b71b0daaada6c4b42d328f1e3ab3798" translate="yes" xml:space="preserve">
          <source>This enables a trace mode and is primarily for debugging bigint or Math::BigInt.</source>
          <target state="translated">Это включает режим трассировки и предназначено в первую очередь для отладки bigint или Math::BigInt.</target>
        </trans-unit>
        <trans-unit id="9c02cc31d70507771fd57c515a75adc482efe06a" translate="yes" xml:space="preserve">
          <source>This enables a trace mode and is primarily for debugging bignum or Math::BigInt/Math::BigFloat.</source>
          <target state="translated">Это включает режим трассировки и предназначено в первую очередь для отладки bignum или Math::BigInt/Math::BigFloat.</target>
        </trans-unit>
        <trans-unit id="cec63c166c07d8ad2b6a0564923160e4e6afd3a9" translate="yes" xml:space="preserve">
          <source>This enables aliasing via assignment to references:</source>
          <target state="translated">Это позволяет накладывать псевдонимы через назначение ссылок:</target>
        </trans-unit>
        <trans-unit id="f0c59e41b4a3df893d1d884cf9253595b11ba6fc" translate="yes" xml:space="preserve">
          <source>This enables debugging output when calling commandline utilities to fetch files. This also enables &lt;code&gt;Carp::longmess&lt;/code&gt; errors, instead of the regular &lt;code&gt;carp&lt;/code&gt; errors.</source>
          <target state="translated">Это позволяет выводить данные отладки при вызове утилит командной строки для выборки файлов. Это также включает ошибки &lt;code&gt;Carp::longmess&lt;/code&gt; вместо обычных ошибок &lt;code&gt;carp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79613693422bd25bf48f5f8810aa0da8bd572cf9" translate="yes" xml:space="preserve">
          <source>This enables declaration of subroutines via &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; sub foo&lt;/code&gt; , &lt;code&gt;state sub foo&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; sub foo&lt;/code&gt; syntax. See &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Lexical Subroutines in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Это позволяет объявлять подпрограммы через &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; sub foo&lt;/code&gt; , &lt;code&gt;state sub foo&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; sub foo&lt;/code&gt; синтаксис sub foo . См. Подробности в разделе &amp;laquo; &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Лексические подпрограммы&amp;raquo; в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80e1dcd9c198904d910331965aa69cd1ca8bccf4" translate="yes" xml:space="preserve">
          <source>This enables the programmer to do operations that combine functionalities that are available in the shell.</source>
          <target state="translated">Это позволяет программисту выполнять операции,сочетающие в себе функции,доступные в оболочке.</target>
        </trans-unit>
        <trans-unit id="e90120b49b0763003fb5ddee58d3021476d96c8e" translate="yes" xml:space="preserve">
          <source>This enables unpacking of subroutine arguments into lexical variables by syntax such as</source>
          <target state="translated">Это позволяет распаковывать подпрограммные аргументы в лексические переменные по синтаксису,такие как</target>
        </trans-unit>
        <trans-unit id="b1b55e253e92ad7341b5b1784881c341c542cf5a" translate="yes" xml:space="preserve">
          <source>This entry can be used to store a C structure (the number of bytes to be copied is calculated using the C &lt;code&gt;sizeof&lt;/code&gt; function) and can be used as an alternative to T_PTRREF without having to worry about a memory leak (since Perl will clean up the SV).</source>
          <target state="translated">Эта запись может использоваться для хранения структуры C (количество копируемых байтов вычисляется с помощью функции C &lt;code&gt;sizeof&lt;/code&gt; ) и может использоваться как альтернатива T_PTRREF, не беспокоясь об утечке памяти (поскольку Perl очистит SV).</target>
        </trans-unit>
        <trans-unit id="a7bcaf8e2d3812b33c786936976ed8fae77f4ec3" translate="yes" xml:space="preserve">
          <source>This entry describes the bug tracking system for this distribution. It is a Map with the following valid keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61acce6a24046d03b3ed1b4333f40651db8171b" translate="yes" xml:space="preserve">
          <source>This entry describes the source control repository for this distribution. It is a Map with the following valid keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8661dce79cd9938b29ab6189f268d624e4b465ea" translate="yes" xml:space="preserve">
          <source>This entry is required and has the same structure as that of the &lt;code&gt;&lt;a href=&quot;#prereqs&quot;&gt;&quot;prereqs&quot;&lt;/a&gt;&lt;/code&gt; key. It provides a list of package requirements that must be satisfied for the feature to be supported or enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3300c27110c85898913011cf397618813e91ac" translate="yes" xml:space="preserve">
          <source>This environment variable allows the user to specify custom color aliases that will be understood by color(), colored(), and colorvalid(). None of the other functions will be affected, and no new color constants will be created. The custom colors are aliases for existing color names; no new escape sequences can be introduced. Only alphanumerics, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt; , and &lt;code&gt;-&lt;/code&gt; are allowed in alias names.</source>
          <target state="translated">Эта переменная среды позволяет пользователю указывать настраиваемые псевдонимы цветов, которые будут распознаваться функциями color (), color () и colorvalid (). Никакие другие функции не будут затронуты, и новые цветовые константы не будут созданы. Пользовательские цвета являются псевдонимами для существующих названий цветов; новые escape-последовательности вводить нельзя. Только буквенно - цифровые, &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;_&lt;/code&gt; и &lt;code&gt;-&lt;/code&gt; разрешены в псевдонимах.</target>
        </trans-unit>
        <trans-unit id="fe4e2bcc9ac8969fe47b9592f17295a43be470a9" translate="yes" xml:space="preserve">
          <source>This environment variable allows the user to specify custom color aliases that will be understood by color(), colored(), and colorvalid(). None of the other functions will be affected, and no new color constants will be created. The custom colors are aliases for existing color names; no new escape sequences can be introduced. Only alphanumerics, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, and &lt;code&gt;-&lt;/code&gt; are allowed in alias names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb4dcf1cb6c13fe396a4c4857e58d83a3e881a1" translate="yes" xml:space="preserve">
          <source>This environment variable is read and applied when the Term::ANSIColor module is loaded and is then subsequently ignored. Changes to ANSI_COLORS_ALIASES after the module is loaded will have no effect. See coloralias() for an equivalent facility that can be used at runtime.</source>
          <target state="translated">Эта переменная окружения считывается и применяется при загрузке модуля Term::ANSIColor,а затем игнорируется.Изменения переменной ANSI_COLORS_ALIASES после загрузки модуля не будут иметь никакого эффекта.См.coloralias()для эквивалентной подсистемы,которая может быть использована во время выполнения.</target>
        </trans-unit>
        <trans-unit id="a56aa6c0940d68ef241fe55a79ac7479a8552c55" translate="yes" xml:space="preserve">
          <source>This environment variable, available starting in Perl v5.20, if set (to any value), tells Perl to not use the rest of the environment variables to initialize with. Instead, Perl uses whatever the current locale settings are. This is particularly useful in embedded environments, see &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;&quot;Using embedded Perl with POSIX locales&quot; in perlembed&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e7401d917dc7c04b41058352f2e564e79feab2" translate="yes" xml:space="preserve">
          <source>This environment variable, available starting in Perl v5.20, if set (to any value), tells Perl to not use the rest of the environment variables to initialize with. Instead, Perl uses whatever the current locale settings are. This is particularly useful in embedded environments, see &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;Using embedded Perl with POSIX locales in perlembed&lt;/a&gt;.</source>
          <target state="translated">Эта переменная среды, доступная начиная с Perl v5.20, если установлена ​​(на любое значение), указывает Perl не использовать остальные переменные среды для инициализации. Вместо этого Perl использует любые текущие настройки локали. Это особенно полезно во встроенных средах, см. &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;Использование встроенного Perl с локали POSIX в perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d75c6a399680a576578e1b3ba02163c5eecb504" translate="yes" xml:space="preserve">
          <source>This error is generated when it is not possible to find the local definitions for error codes, due to the uncommon structure of the Synology file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ace5510a8ff1a4d0b9f61bb6ded0bf5e3670db9" translate="yes" xml:space="preserve">
          <source>This error was fixed in the Perl development git for version 5.19, commit 7a8f1212e5482613c8a5b0402528e3105b26ff24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f9c0ecaa03744be9ea320c0c4f588e6b9faad8" translate="yes" xml:space="preserve">
          <source>This evaluates STRING as perl code inside the compartment.</source>
          <target state="translated">При этом оценивается STRING согласно коду внутри отсека.</target>
        </trans-unit>
        <trans-unit id="8e88fee13fdd53ae93ae82bca131dd3e051006da" translate="yes" xml:space="preserve">
          <source>This evaluates the contents of file FILENAME inside the compartment. It uses the same rules as perl's built-in &lt;code&gt;do&lt;/code&gt; to locate the file, poossibly using &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85da3ed8e7eeed1d7664ca9b45804ed926dd64a7" translate="yes" xml:space="preserve">
          <source>This evaluates the contents of file FILENAME inside the compartment. See above documentation on the &lt;b&gt;reval&lt;/b&gt; method for further details.</source>
          <target state="translated">Это оценивает содержимое файла FILENAME внутри отсека. См. Дополнительную информацию в документации по методу &lt;b&gt;ревальвации&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="668473c118073b55874da4472c5e05758203ab13" translate="yes" xml:space="preserve">
          <source>This evaluates to true if and only if the string in the variable &lt;code&gt;$foo&lt;/code&gt; contains somewhere in it, the sequence of characters &quot;a&quot;, &quot;b&quot;, then &quot;c&quot;. (The &lt;code&gt;=~ m&lt;/code&gt;, or match operator, is described in &lt;a href=&quot;perlop#m%2FPATTERN%2Fmsixpodualngc&quot;&gt;&quot;m/PATTERN/msixpodualngc&quot; in perlop&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa45a050a297698330cfd197242d66b5bc5b90b" translate="yes" xml:space="preserve">
          <source>This event has no data of its own. This event is sent out by the IPC system when the main process/thread is ready to end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc04382ecbdf81e4f5caf52797a69b83c13dd83" translate="yes" xml:space="preserve">
          <source>This event is used if a TAP formatter wishes to set a version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d1039eeddc372ecb07a9ed65ed3a51b6d6ae64" translate="yes" xml:space="preserve">
          <source>This example added quite a few new concepts. We'll take them one at a time.</source>
          <target state="translated">В этом примере было добавлено довольно много новых концепций.Мы возьмем их по одной.</target>
        </trans-unit>
        <trans-unit id="b69f2ecf80918f850deb9506044c7c7d1e270ee4" translate="yes" xml:space="preserve">
          <source>This example does not include any retries and may consequently fail to contact a reachable host. The most prominent reason for this is congestion of the queues on the sending host if the number of hosts to contact is sufficiently large.</source>
          <target state="translated">Этот пример не включает повторных попыток и,следовательно,может не связаться с доступным хостом.Наиболее заметной причиной этого является перегруженность очередей на хосте-отправителе,если количество хостов,с которыми можно связаться,достаточно велико.</target>
        </trans-unit>
        <trans-unit id="45c8019ae57e341f2cf51b697b11f926ebc66d79" translate="yes" xml:space="preserve">
          <source>This example fails because &lt;code&gt;baz()&lt;/code&gt; refers to the package/global subroutine &lt;code&gt;baz&lt;/code&gt;, not the lexical subroutine currently being defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a572c629dcfb44919f712f7d6b779f25e5dfe2" translate="yes" xml:space="preserve">
          <source>This example is aborted at compile time as we use the attribute &quot;Test&quot; which isn't allowed. &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; returns a list that contains a single element ('Test').</source>
          <target state="translated">Этот пример прерывается во время компиляции, так как мы используем недопустимый атрибут &amp;laquo;Test&amp;raquo;. &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; возвращает список, содержащий единственный элемент (&amp;laquo;Тест&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="c0449bb1daa75d27783722f69c76968c08c60f04" translate="yes" xml:space="preserve">
          <source>This example is fairly trivial; for more complex cases and a deeper explanation, see the links in the &lt;a href=&quot;#SEE-ALSO&quot;&gt;&quot;SEE ALSO&quot;&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90369b8f8beb64315ed6181cebf6923dd367b56" translate="yes" xml:space="preserve">
          <source>This example is fairly trivial; for more complex cases and a deeper explanation, see the links in the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section.</source>
          <target state="translated">Этот пример довольно тривиален; для более сложных случаев и более подробного объяснения см. ссылки в разделе &lt;a href=&quot;#SEE-ALSO&quot;&gt;СМОТРИ ТАКЖЕ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1253f47712d1828f7f774117d0efa3abf09df500" translate="yes" xml:space="preserve">
          <source>This example is fully equivalent with:</source>
          <target state="translated">Этот пример полностью эквивалентен:</target>
        </trans-unit>
        <trans-unit id="4cd1eae4be0b88a312be5ff0a3c94c909b4f359b" translate="yes" xml:space="preserve">
          <source>This example is preferred over the previous one--even for Unix platforms--because now any &lt;code&gt;\015&lt;/code&gt; 's (&lt;code&gt;\cM&lt;/code&gt; 's) are stripped out (and there was much rejoicing).</source>
          <target state="translated">Этот пример предпочтительнее предыдущего - даже для платформ Unix - потому что теперь любые &lt;code&gt;\015&lt;/code&gt; ( &lt;code&gt;\cM&lt;/code&gt; ) удалены (и было много радости).</target>
        </trans-unit>
        <trans-unit id="d2e7d74c2002e413e58575bcfceff5a6cc8e62bb" translate="yes" xml:space="preserve">
          <source>This example is preferred over the previous one--even for Unix platforms--because now any &lt;code&gt;\015&lt;/code&gt;'s (&lt;code&gt;\cM&lt;/code&gt;'s) are stripped out (and there was much rejoicing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2155785b4684f8ca5810fa768aca5a675651e726" translate="yes" xml:space="preserve">
          <source>This example prints the mail domain name of the SMTP server known as mailhost:</source>
          <target state="translated">В этом примере печатается почтовое доменное имя SMTP-сервера,известное как mailhost:</target>
        </trans-unit>
        <trans-unit id="5df3c7e69cf9c030621b9397e847c01645ddee17" translate="yes" xml:space="preserve">
          <source>This example requires the following typemap entry. Consult &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for more information about adding new typemaps for an extension.</source>
          <target state="translated">В этом примере требуется следующая запись карты типов. Обратитесь к &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; для получения дополнительной информации о добавлении новых карт типов для расширения.</target>
        </trans-unit>
        <trans-unit id="41a9b74b00161dd5b470ab9ac8171979158c1d90" translate="yes" xml:space="preserve">
          <source>This example runs. At compile time &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; is called. In that subroutine, we check if any attribute is disallowed and we return a list of these &quot;bad attributes&quot;.</source>
          <target state="translated">Этот пример работает. Во время компиляции &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; . В этой подпрограмме мы проверяем, запрещены ли какие-либо атрибуты, и возвращаем список этих &amp;laquo;плохих атрибутов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f2a9ee1d0bad2acdbedd9aa3ec0be4c6a6a132f5" translate="yes" xml:space="preserve">
          <source>This example sends a single assertion, a note (comment for stdout in Test::Builder talk) and sets the plan to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff407d302a1d7afb3f758e29e8d54e23989741b" translate="yes" xml:space="preserve">
          <source>This example sends a small message to the postmaster at the SMTP server known as mailhost:</source>
          <target state="translated">Этот пример отправляет небольшое сообщение почтовому администратору на SMTP-сервере,известном как mailhost:</target>
        </trans-unit>
        <trans-unit id="78b434a9f3a15806251887966899fdd84de7d2e2" translate="yes" xml:space="preserve">
          <source>This example separates a text into fields which are quote delimited, curly bracketed, and anything else. The delimited and bracketed parts are also blessed to identify them (the &quot;anything else&quot; is unblessed):</source>
          <target state="translated">В этом примере текст разделен на поля,которые разделены кавычками,заключены в фигурные скобки,и все остальное.Разделенные и заключенные в скобки части также могут быть идентифицированы (&quot;все остальное&quot; не имеет смысла):</target>
        </trans-unit>
        <trans-unit id="9dff0d51281eb7bf5e0a018b6b24fe9e35070941" translate="yes" xml:space="preserve">
          <source>This example shows how to create a database, add key/value pairs to the database, delete keys/value pairs and finally how to enumerate the contents of the database.</source>
          <target state="translated">В этом примере показано,как создать БД,добавить пары ключ/значение в БД,удалить пары ключ/значение и,наконец,как перечислить содержимое БД.</target>
        </trans-unit>
        <trans-unit id="880ede3f528ae25983090ec0e0156cb403c63af8" translate="yes" xml:space="preserve">
          <source>This example shows rewriting weights. &lt;code&gt;rewrite&lt;/code&gt; is allowed to affect code points, weights, and the name.</source>
          <target state="translated">В этом примере показано изменение весов. &lt;code&gt;rewrite&lt;/code&gt; разрешена для изменения кодовых точек, веса и имени.</target>
        </trans-unit>
        <trans-unit id="780bd69540d0ebaeb9c9ed4a226f52e8bf4d6c92" translate="yes" xml:space="preserve">
          <source>This example shows two calls that should have the same effect:</source>
          <target state="translated">В этом примере показаны два вызова,которые должны иметь одинаковый эффект:</target>
        </trans-unit>
        <trans-unit id="84ff60fe8d031f55c9709b2299fa816e68248930" translate="yes" xml:space="preserve">
          <source>This example takes a regular expression from the argument list and prints the lines of input that match it:</source>
          <target state="translated">Этот пример берет регулярное выражение из списка аргументов и распечатывает соответствующие ему строки ввода:</target>
        </trans-unit>
        <trans-unit id="078e5feeaf68f01a2929c0090cee690d8ca945ea" translate="yes" xml:space="preserve">
          <source>This example treats the slightly modified contents of $directory as a hash. The modifications are that the keys</source>
          <target state="translated">В этом примере слегка измененное содержимое директории $ рассматривается как хэш.Изменения заключаются в том,что ключи</target>
        </trans-unit>
        <trans-unit id="98e05dd997bb9813bf387c2523a2ee3778ba728f" translate="yes" xml:space="preserve">
          <source>This example uses a code expression in a conditional to match a definite article, either 'the' in English or 'der|die|das' in German:</source>
          <target state="translated">В данном примере используется условное выражение кода для соответствия определенной статьи,либо 'the' по-английски,либо 'der|die|das' по-немецки:</target>
        </trans-unit>
        <trans-unit id="3182dc73190402ea11b0ccf6d157df088acea2cb" translate="yes" xml:space="preserve">
          <source>This example uses a code expression in a conditional to match a definite article, either &lt;code&gt;'the'&lt;/code&gt; in English or &lt;code&gt;'der|die|das'&lt;/code&gt; in German:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87cae12f1868f49317dcbc2ec2e9d5385ba1820" translate="yes" xml:space="preserve">
          <source>This example will be used with the following Perl statements.</source>
          <target state="translated">Этот пример будет использоваться со следующими утверждениями Perl.</target>
        </trans-unit>
        <trans-unit id="f8787b73d75916a7f7029d06b65a57928067677b" translate="yes" xml:space="preserve">
          <source>This example will fail to recognize that an error occurred inside the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; . Here's why: the call_Subtract code got executed while perl was cleaning up temporaries when exiting the outer braced block, and because call_Subtract is implemented with</source>
          <target state="translated">В этом примере не удастся распознать ошибку внутри &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; . Вот почему: код call_Subtract был выполнен, когда perl очищал временные объекты при выходе из внешнего блока в фигурных скобках, и поскольку call_Subtract реализован с помощью</target>
        </trans-unit>
        <trans-unit id="72a47805dd0a8f6fcbe1140876fe6c6fdf98a8e4" translate="yes" xml:space="preserve">
          <source>This example will fail to recognize that an error occurred inside the &lt;code&gt;eval {}&lt;/code&gt;. Here's why: the call_Subtract code got executed while perl was cleaning up temporaries when exiting the outer braced block, and because call_Subtract is implemented with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e706dc3b3a7c56333befa9c2c2082dd86f8994b" translate="yes" xml:space="preserve">
          <source>This example will set the time to midnight on the same date which &lt;code&gt;$t&lt;/code&gt; had previously. Allowed values for the &quot;to&quot; parameter are: &quot;year&quot;, &quot;quarter&quot;, &quot;month&quot;, &quot;day&quot;, &quot;hour&quot;, &quot;minute&quot; and &quot;second&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f78c3b59ae95350e4323c3cb4c7f0dc6fda1338" translate="yes" xml:space="preserve">
          <source>This example works on many platforms that have a shell compatible with Bourne shell:</source>
          <target state="translated">Этот пример работает на многих платформах,которые имеют оболочку,совместимую с оболочкой Борна:</target>
        </trans-unit>
        <trans-unit id="15d5f8da3c8eb09a121cb765eeca738ccef36a74" translate="yes" xml:space="preserve">
          <source>This experimental attribute, introduced in Perl 5.22, only applies to anonymous subroutines. It causes the subroutine to be called as soon as the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; expression is evaluated. The return value is captured and turned into a constant subroutine.</source>
          <target state="translated">Этот экспериментальный атрибут, представленный в Perl 5.22, применим только к анонимным подпрограммам. Это приводит к тому , подпрограмма будет называться как только &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; выражение. Возвращаемое значение фиксируется и превращается в постоянную подпрограмму.</target>
        </trans-unit>
        <trans-unit id="0326081879c6e23ef99277efab3cb0743f765db7" translate="yes" xml:space="preserve">
          <source>This experimental attribute, introduced in Perl 5.22, only applies to anonymous subroutines. It causes the subroutine to be called as soon as the &lt;code&gt;sub&lt;/code&gt; expression is evaluated. The return value is captured and turned into a constant subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23c339cf7e806a89bf6a85ce94fd3c5b9e88336" translate="yes" xml:space="preserve">
          <source>This experimental feature has been added to begin to implement &lt;a href=&quot;https://www.unicode.org/reports/tr18/#Wildcard_Properties&quot;&gt;https://www.unicode.org/reports/tr18/#Wildcard_Properties&lt;/a&gt;. Using it will raise a (default-on) warning in the &lt;code&gt;experimental::uniprop_wildcards&lt;/code&gt; category. We reserve the right to change its operation as we gain experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6660b28f752ff2775e494cee3716861f7ebee6fd" translate="yes" xml:space="preserve">
          <source>This exposes the VMS C library &lt;code&gt;realpath&lt;/code&gt; function where available. It will always return a Unix format specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c659fee685d6111f5eef41a4fc47f104c94d024f" translate="yes" xml:space="preserve">
          <source>This expression is actually equivalent to &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; , due to the higher precedence of &lt;code&gt;==&lt;/code&gt; . This is probably not what you want. (If you really meant to write this, disable the warning, or, better, put the parentheses explicitly and write &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; ).</source>
          <target state="translated">Это выражение фактически эквивалентно &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; из-за более высокого приоритета &lt;code&gt;==&lt;/code&gt; . Вероятно, это не то, что вам нужно. (Если вы действительно хотели это написать, отключите предупреждение или, лучше, явно заключите скобки и напишите &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d1c58a809013f74370c233986b702d73e647e16" translate="yes" xml:space="preserve">
          <source>This expression is actually equivalent to &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt;, due to the higher precedence of &lt;code&gt;==&lt;/code&gt;. This is probably not what you want. (If you really meant to write this, disable the warning, or, better, put the parentheses explicitly and write &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d95c2dd6bdf3facfce8eb7c29c42e8682159b3f" translate="yes" xml:space="preserve">
          <source>This extension is somewhat contrived. It is based on the code in the previous example. It calls the statfs function multiple times, accepting a reference to an array of filenames as input, and returning a reference to an array of hashes containing the data for each of the filesystems.</source>
          <target state="translated">Эта пристройка несколько наворочена.Оно основано на коде из предыдущего примера.Оно многократно вызывает функцию statfs,принимая на вход ссылку на массив имён файлов и возвращая ссылку на массив хэшей,содержащих данные для каждой из файловых систем.</target>
        </trans-unit>
        <trans-unit id="443c1ad31c99bd2962c1e14f9f6e565d7abce59c" translate="yes" xml:space="preserve">
          <source>This extension is very Unix-oriented (struct statfs and the statfs system call). If you are not running on a Unix system, you can substitute for statfs any other function that returns multiple values, you can hard-code values to be returned to the caller (although this will be a bit harder to test the error case), or you can simply not do this example. If you change the XSUB, be sure to fix the test cases to match the changes.</source>
          <target state="translated">Это расширение очень ориентировано на Unix (структурная статистика и системный вызов statfs).Если вы не работаете на Unix-системе,вы можете заменить statfs любой другой функцией,которая возвращает несколько значений,вы можете жестко закодировать значения,которые будут возвращены вызывающему абоненту (хотя это будет немного сложнее для проверки случая ошибки),или вы можете просто не делать этот пример.Если вы измените XSUB,обязательно исправьте тестовые случаи,чтобы они соответствовали изменениям.</target>
        </trans-unit>
        <trans-unit id="2a17a99eab781fe118715bddd6eafc465e544bac" translate="yes" xml:space="preserve">
          <source>This facet appears in a list instead of being a single item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adb2f888cd1ff1460814af89b1a8925569507cc" translate="yes" xml:space="preserve">
          <source>This facet can contain any random meta-data that has been attached to the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f39ea5539b92284678be2bccf399a87e784a440" translate="yes" xml:space="preserve">
          <source>This facet contains information related to when and where the event was generated. This is how the test file and line number of a failure is known. This facet can also help you to tell if tests are related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5933de4fce257c57230d3c2048dd56d25f8eec" translate="yes" xml:space="preserve">
          <source>This facet contains nested events and similar details for subtests. In this facet the &lt;code&gt;details&lt;/code&gt; field will typically be the name of the subtest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228901b4b4fd688562c63a9bfc644b29832273c3" translate="yes" xml:space="preserve">
          <source>This facet has information about the event, such as event package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261eefb058d9b8f210edf7e8b66786488a61cb53" translate="yes" xml:space="preserve">
          <source>This facet has the hash key &lt;code&gt;'errors'&lt;/code&gt;, and is a list of facets instead of a single item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6b311bf3037d57366a4f7b75cd51fe95ab4943" translate="yes" xml:space="preserve">
          <source>This facet is a list type, you can add as many items as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9038beb7c2b76255669cf565bb956421b6792189" translate="yes" xml:space="preserve">
          <source>This facet is used if an assertion was made. The &lt;code&gt;details&lt;/code&gt; field of this facet is the description of the assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3db551858fe84100e4783720b6439f9bd8929d" translate="yes" xml:space="preserve">
          <source>This facet is used to dictate how the event should be rendered by the standard test2 rendering tools. If this facet is present then ONLY what is specified by it will be rendered. It is assumed that anything important or note-worthy will be present here, no other facets will be considered for rendering/display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf535cec4856d555110dfbc5a3f81213306c039" translate="yes" xml:space="preserve">
          <source>This facet is used to tell the &lt;a href=&quot;Test2::Event::Hub&quot;&gt;Test2::Event::Hub&lt;/a&gt; about special actions the event causes. Things like halting all testing, terminating the current test, etc. In this facet the &lt;code&gt;details&lt;/code&gt; field explains why any special action was taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fddc25c4dbd645a45a85fc8433a6f59b647f1be" translate="yes" xml:space="preserve">
          <source>This facet is used when an event contains other events, such as a subtest.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
