<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="0eb6c125a87601bb415e7dd8ac4261d5f4ccd383" translate="yes" xml:space="preserve">
          <source>This is just a shorthand for a typeglob assignment at compile time:</source>
          <target state="translated">Это всего лишь сокращение для типографского задания во время компиляции:</target>
        </trans-unit>
        <trans-unit id="15b35232b5a8087ae488ff75565de5703f14864d" translate="yes" xml:space="preserve">
          <source>This is just a tutorial. For the full story on Perl regular expressions, see the &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; regular expressions reference page.</source>
          <target state="translated">Это просто учебник. Полную историю регулярных выражений Perl см. На &lt;a href=&quot;perlre&quot;&gt;странице справки по&lt;/a&gt; регулярным выражениям Perl .</target>
        </trans-unit>
        <trans-unit id="9456d5890fbed572d26379cc56324c8cfe828e36" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="translated">Это просто оболочка для обычной функции Perl &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; . Это предусмотрено для того, чтобы вы могли использовать &quot;sprintf&quot; в обозначении скобок:</target>
        </trans-unit>
        <trans-unit id="b4ff27b6bada60e402e6197635d038979041e1aa" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;sprintf&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77266324e65b81993bcee36043a748db86e77bf5" translate="yes" xml:space="preserve">
          <source>This is just an alias for $ctx-&amp;gt;new.</source>
          <target state="translated">Это просто псевдоним для $ ctx-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="4341fe03623ad4301c3243c214057adf6cd69228" translate="yes" xml:space="preserve">
          <source>This is just an alias for $md5-&amp;gt;new.</source>
          <target state="translated">Это просто псевдоним для $ md5-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="99b8f0dcbd7ef8ebc2a3383d96beb914e7c2ab77" translate="yes" xml:space="preserve">
          <source>This is just an alias for &lt;code&gt;to_bytes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb98ec9f418273dc2ca6cd9acdcab91a8675d3b" translate="yes" xml:space="preserve">
          <source>This is just like get_title, except that it returns just the modulename, if the title seems to be of the form &quot;SomeModuleName -- description&quot;.</source>
          <target state="translated">Это похоже на get_title,за исключением того,что возвращает только имя модуля,если заголовок выглядит как &quot;SomeModuleName --description&quot;.</target>
        </trans-unit>
        <trans-unit id="3efe951774b37c8f5ed5c70b61d80e43335a5d14" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="translated">Это похоже на &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, за исключением того, что он соответствует только один раз между вызовами оператора &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; . Это полезная оптимизация, когда, например, вы хотите видеть только первое вхождение чего-либо в каждом файле набора файлов. Только &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; шаблоны, локальные для текущего пакета, сбрасываются.</target>
        </trans-unit>
        <trans-unit id="d73aff15bc3ff484da433da10ce9913b15e17a51" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;reset()&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;m??&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380457e35227699cc7301b94acae78bea6e5c126" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=cut&quot; lines, not code lines. The same caveats apply. &quot;=cut&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0695e20ad7060a9368dde02cbfce95268dbd1b5b" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=pod&quot; lines, not code lines. The same caveats apply. &quot;=pod&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2022f30d9b2a5b27c04280f1ebd50a51bbc345d3" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for lines that are seemingly blank but have whitespace (&quot; &quot; and/or &quot;\t&quot;) on them, not code lines. The same caveats apply. These lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f273b15a0cb3300a978b7939f344dd1d08639d" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt; , but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="translated">Это похоже на &lt;code&gt;&quot;a&quot;&lt;/code&gt; , но некоторые элементы представляют собой пустую строку и не должны корректироваться. Единственное внутреннее свойство Perl, доступное через &lt;code&gt;prop_invmap&lt;/code&gt; , имеет следующий тип: &amp;laquo;Perl_Decimal_Digit&amp;raquo; возвращает карту инверсии, которая дает числовые значения, представленные десятичными символами Unicode. Символы, которые не представляют десятичные цифры, отображаются в пустую строку, например:</target>
        </trans-unit>
        <trans-unit id="0c85507fc9c8edf048dedc4d8b1c473489d69c9b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt;, but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1dd5dc0a1e329de530690bfade7652c51e667a" translate="yes" xml:space="preserve">
          <source>This is like accept_targets, except that it specifies also that the content of sections for this target should be treated as Pod text even if the target name in &quot;=for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed31723489424c54355ea43ef7bfdd64197f0ef8" translate="yes" xml:space="preserve">
          <source>This is like the &quot;over-bullet&quot; event structure; but note that the contents are &quot;item-number&quot; instead of &quot;item-bullet&quot;, and note that they will have a &quot;number&quot; attribute, which some formatters/processors may ignore (since, for example, there's no need for it in HTML when producing an &quot;&amp;lt;UL&amp;gt;&amp;lt;LI&amp;gt;...&amp;lt;/LI&amp;gt;...&amp;lt;/UL&amp;gt;&quot; structure), but which any processor may use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c127a4acabd567283fc3055323b13e8a32015" translate="yes" xml:space="preserve">
          <source>This is like the SMTP transport, but uses TLS security. You can authenticate with this module as well, using any mechanisms your server supports after STARTTLS.</source>
          <target state="translated">Это похоже на SMTP транспорт,но использует TLS безопасность.Вы можете аутентифицироваться и в этом модуле,используя любые механизмы,поддерживаемые вашим сервером после STARTTLS.</target>
        </trans-unit>
        <trans-unit id="5a91727b3a107b517a647724e9523d6e1a6aa45f" translate="yes" xml:space="preserve">
          <source>This is mainly used by legacy &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; tests which set the plan to &lt;code&gt;no plan&lt;/code&gt;, a construct that predates the much better &lt;code&gt;done_testing()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbc2d6ed341b1ef3ce37675e465b3be11154914" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee19061e56d9213c77400710440b7c20343ebe03" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Это в основном полезно для создания растровых изображений для операций &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; и низкоуровневых операций обработки tty POSIX. Если FILEHANDLE является выражением, значение принимается как косвенный дескриптор файла, обычно это его имя.</target>
        </trans-unit>
        <trans-unit id="4451800d0e0114802550054b61665e033a2b00a5" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Это в основном полезно для создания растровых изображений для операций &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; и низкоуровневых операций обработки tty POSIX. Если FILEHANDLE является выражением, значение принимается как косвенный дескриптор файла, обычно это его имя.</target>
        </trans-unit>
        <trans-unit id="37ce9a12e2723922e8bd944d2d5d67e411bc7f1f" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt; .</source>
          <target state="translated">Это просто синоним &lt;code&gt;as_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff1814bfd6950f7490c26d111f974fff43e1eff" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dab1c8c1fba88ee26cb0159afceae84eeab9c5c" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, but not as illustrative:</source>
          <target state="translated">Это более переносимо, чем необработанный &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , но не так наглядно:</target>
        </trans-unit>
        <trans-unit id="358b6febc6a20347552685e4650bab012743d763" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;ioctl&lt;/code&gt;, but not as illustrative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a905466f9a6fe7fba1c2ba03bc5e341bea7a9afa" translate="yes" xml:space="preserve">
          <source>This is most likely the same as &lt;code&gt;$Config{osname}&lt;/code&gt;, and was the name known when perl was built. It might be different if perl was cross-compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ef392975ecd504b3ac95743d2709331ec1fc38" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; does</source>
          <target state="translated">Это не образец простоты и не образец переносимости, но он иллюстрирует суть: мы можем проникнуть за кулисы и получить доступ к хорошо охраняемой памяти Perl! (Важное примечание: &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; Perl делает</target>
        </trans-unit>
        <trans-unit id="3f30d05de7dd225aaab947f0992ea2b7121ca260" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;syscall&lt;/code&gt; does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebf1cbe04784f38db52da63b8ec5a60455457d" translate="yes" xml:space="preserve">
          <source>This is normally all you need to know. However, many options are available:</source>
          <target state="translated">Обычно это все,что тебе нужно знать.Однако,существует множество вариантов:</target>
        </trans-unit>
        <trans-unit id="d00bfe25391751730fea233731dd8b0f5f6ab569" translate="yes" xml:space="preserve">
          <source>This is not &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, which tells you how to use the debugger. This manpage describes low-level details concerning the debugger's internals, which range from difficult to impossible to understand for anyone who isn't incredibly intimate with Perl's guts. Caveat lector.</source>
          <target state="translated">Это не &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; , в котором рассказывается, как использовать отладчик. Эта справочная страница описывает низкоуровневые детали, касающиеся внутреннего устройства отладчика, которые варьируются от трудных до невозможных для понимания для тех, кто не слишком близок к Perl. Будьте лектором.</target>
        </trans-unit>
        <trans-unit id="33bd7c44464b83d74ae2002b960a112388650681" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the &lt;code&gt;Encode&lt;/code&gt; extension for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f404a9e2e0db79bb4f43c8d7bbb05496d430ba62" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the Encode extension for that.</source>
          <target state="translated">Это не универсальный интерфейс Unicode to by byte encoding interface:используйте для этого расширение Encode.</target>
        </trans-unit>
        <trans-unit id="7457d8ee09385437d0b615e7e131b4e9c0b973a9" translate="yes" xml:space="preserve">
          <source>This is not a general purpose byte encoding to Unicode interface: use the Encode extension for that.</source>
          <target state="translated">Это не байтовая кодировка общего назначения для интерфейса Unicode:используйте для этого расширение Encode.</target>
        </trans-unit>
        <trans-unit id="4bba8250f7720ad535561da71f3cfe66f5ce3b19" translate="yes" xml:space="preserve">
          <source>This is not actually a Unicode-specified obsolescence, but applies to certain Perl extensions that are present for backwards compatibility, but are discouraged from being used. These are not obsolete, but their meanings are not stable. Future Unicode versions could force any of these extensions to be removed without warning, replaced by another property with the same name that means something different. An '&lt;b&gt;X&lt;/b&gt;' flags each such entry in the table. Use the equivalent shown instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d116bb6d0c3c84c2243b689bc93fe4a6155eb5cb" translate="yes" xml:space="preserve">
          <source>This is not as short as before, but it makes it more obvious that we intend to have little-endian byte-order for a whole group, not only for individual template codes. It can also be more readable and easier to maintain.</source>
          <target state="translated">Это не так коротко,как раньше,но это делает более очевидным,что мы намерены иметь малозадачный порядок байт для целой группы,а не только для отдельных кодов шаблонов.Он также может быть более читабельным и легким в обслуживании.</target>
        </trans-unit>
        <trans-unit id="21c82389f9ec1dc190c296dba01242b89223a846" translate="yes" xml:space="preserve">
          <source>This is not ideal, but it seems to be the best compromise. If it doesn't work for you, please let me know the details of how it broke.</source>
          <target state="translated">Это не идеально,но кажется,что это лучший компромисс.Если это не сработает,пожалуйста,дайте мне знать подробности того,как он сломался.</target>
        </trans-unit>
        <trans-unit id="a8f2331f9105fa67d4e126b8930145be58fae503" translate="yes" xml:space="preserve">
          <source>This is not ok:</source>
          <target state="translated">Это не нормально:</target>
        </trans-unit>
        <trans-unit id="909f3f0de148a4f0a784930ff89af77cea3c7576" translate="yes" xml:space="preserve">
          <source>This is not really a &quot;severe&quot; error, but it is supposed to be raised by default even if warnings are not enabled, and currently the only way to do that in Perl is to mark it as serious.</source>
          <target state="translated">На самом деле это не &quot;серьезная&quot; ошибка,но по умолчанию она должна быть поднята,даже если предупреждения не включены,и на данный момент единственный способ сделать это в Perl-пометить ее как серьезную.</target>
        </trans-unit>
        <trans-unit id="2b98cc8fd878d4e526c57ff147de3c4320ff2bb7" translate="yes" xml:space="preserve">
          <source>This is not required, but is recommended in case any code is called which may reset or alter &lt;code&gt;$@&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cb1cc350f7652ef06061348fb3eea6152592f9" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;&quot;lex_read_to&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197111743c19bce55304223ee2f18830ead89426" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;.</source>
          <target state="translated">Это не нормальный способ использования лексированного текста. Для этого используйте &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9e6c0b666a1af0815bd174af9f121c2162997f" translate="yes" xml:space="preserve">
          <source>This is not the right answer at all, but the sum looks correct. I wonder if it's anything to do with operator precedence? We'll try a couple of other possibilities with our sum:</source>
          <target state="translated">Это совсем не правильный ответ,но сумма выглядит правильной.Интересно,это как-то связано с приоритетом оператора? Мы попробуем еще пару вариантов с нашей суммой:</target>
        </trans-unit>
        <trans-unit id="8a04fbe62aa8087e67610ad69a72c7364e385eaa" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt; . That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="translated">Это не символ, который вы используете перед именем массива для получения последнего индекса, например &lt;code&gt;$#array&lt;/code&gt; . По-прежнему, как получить последний индекс массива в Perl. Эти двое не имеют ничего общего друг с другом.</target>
        </trans-unit>
        <trans-unit id="0152b6d921fb917b16faa5b33711753db7914ad7" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt;. That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71eefb6bc615d22ea75cd4d866e05c590f48f94" translate="yes" xml:space="preserve">
          <source>This is not to say that Perl threads are completely different from everything that's ever come before. They're not. Perl's threading model owes a lot to other thread models, especially POSIX. Just as Perl is not C, though, Perl threads are not POSIX threads. So if you find yourself looking for mutexes, or thread priorities, it's time to step back a bit and think about what you want to do and how Perl can do it.</source>
          <target state="translated">Это не значит,что нити Perl полностью отличаются от всего,что когда-либо приходило раньше.Это не так.Модель потоков Perl во многом обязана другим моделям потоков,особенно POSIX.Точно так же,как Perl-не C,но потоки Perl-не POSIX.Так что если вы ищете мьютексы или приоритеты потоков,пришло время немного отойти назад и подумать о том,что вы хотите сделать и как Perl может это сделать.</target>
        </trans-unit>
        <trans-unit id="1490fa72c1eafb91d46399cb68efda52398b105d" translate="yes" xml:space="preserve">
          <source>This is not very useful, and perl currently optimizes this away.</source>
          <target state="translated">Это не очень полезно,и perl в настоящее время оптимизирует это прочь.</target>
        </trans-unit>
        <trans-unit id="719ad110f9ecd2d06449f518fe559ae60b466e21" translate="yes" xml:space="preserve">
          <source>This is now the recommended interface to install().</source>
          <target state="translated">Теперь это рекомендуемый интерфейс для установки().</target>
        </trans-unit>
        <trans-unit id="8dd3c5aefc65986cd4924a120675ce7dc9b1881f" translate="yes" xml:space="preserve">
          <source>This is of paramount importance, since it's the documentation of what goes where in the Perl source. Read it over a couple of times and it might start to make sense - don't worry if it doesn't yet, because the best way to study it is to read it in conjunction with poking at Perl source, and we'll do that later on.</source>
          <target state="translated">Это имеет первостепенное значение,так как это документация о том,что идет куда в источнике Perl.Прочтите её пару раз и она может начать иметь смысл-не волнуйтесь,если её ещё нет,потому что лучший способ изучить её-это прочитать её вместе с прочтением исходников на Perl,и мы сделаем это позже.</target>
        </trans-unit>
        <trans-unit id="5903d2508c471509c3a8871c1121aaa61b5835b7" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadd54f30e37dbf502c0a6893df00ea6b04ab979" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Это часто бывает полезно, если вам нужно проверить текущую версию Perl перед &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; библиотечных модулей, которые не будут работать со старыми версиями Perl. (Мы стараемся не делать этого больше, чем нужно.)</target>
        </trans-unit>
        <trans-unit id="96345383ecfecda78d417eea671d77452c1d163e" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Это часто бывает полезно, если вам нужно проверить текущую версию Perl перед &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; библиотечных модулей, которые не будут работать со старыми версиями Perl. (Мы стараемся не делать этого больше, чем нужно.)</target>
        </trans-unit>
        <trans-unit id="b7065d0815c75fb916f5ccef644a97fc5f9a5ab5" translate="yes" xml:space="preserve">
          <source>This is one of the cases we mentioned earlier in which references could spring into existence when in an lvalue context. Before this statement, &lt;code&gt;$array[$x]&lt;/code&gt; may have been undefined. If so, it's automatically defined with a hash reference so that we can look up &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; in it. Likewise &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; will automatically get defined with an array reference so that we can look up &lt;code&gt;[0]&lt;/code&gt; in it. This process is called</source>
          <target state="translated">Это один из упомянутых ранее случаев, когда ссылки могут возникать в контексте lvalue. До этого оператора &lt;code&gt;$array[$x]&lt;/code&gt; могло быть неопределенным. Если это так, он автоматически определяется со ссылкой на хэш, чтобы мы могли найти в нем &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; . Точно так же &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; автоматически будет определен со ссылкой на массив, чтобы мы могли найти в нем &lt;code&gt;[0]&lt;/code&gt; . Этот процесс называется</target>
        </trans-unit>
        <trans-unit id="6a3344e74e174252dc0aef67360fb712feea83d3" translate="yes" xml:space="preserve">
          <source>This is one of the only places where giving a prototype to a closure makes much sense. If you wanted to impose scalar context on the arguments of these functions (probably not a wise idea for this particular example), you could have written it this way instead:</source>
          <target state="translated">Это одно из немногих мест,где подача прототипа на закрытие имеет большой смысл.Если бы вы хотели наложить скалярный контекст на аргументы этих функций (вероятно,не мудрая идея для данного конкретного примера),вы могли бы написать его таким образом:</target>
        </trans-unit>
        <trans-unit id="36e82904f13aaec8c8bc429b12fde4bbb0fe088f" translate="yes" xml:space="preserve">
          <source>This is only needed when converting a metadata fragment that does not include a &lt;code&gt;meta-spec&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815273ee560d0448d9c01c105592b19a9f70fd8" translate="yes" xml:space="preserve">
          <source>This is only present when &lt;code&gt;netorder&lt;/code&gt; is FALSE. It is the $Config{byteorder} string of the perl that created this image. It is a string like &quot;1234&quot; (32 bit little endian) or &quot;87654321&quot; (64 bit big endian). This must match the current perl for the image to be readable by Storable.</source>
          <target state="translated">Это присутствует, только когда &lt;code&gt;netorder&lt;/code&gt; имеет значение FALSE. Это строка $ Config {byteorder} perl, создавшего этот образ. Это строка типа &amp;laquo;1234&amp;raquo; (32-битный прямой порядок байтов) или &amp;laquo;87654321&amp;raquo; (64-битный прямой порядок байтов). Он должен совпадать с текущим perl, чтобы изображение было доступно для чтения Storable.</target>
        </trans-unit>
        <trans-unit id="84ff724c95d2598efdb8d7d443f2851d8e9c24b5" translate="yes" xml:space="preserve">
          <source>This is only required on some platforms which do not handle dependent libraries automatically. For example the Socket Perl extension library (</source>
          <target state="translated">Это требуется только на некоторых платформах,которые не обрабатывают зависимые библиотеки автоматически.Например,библиотека расширения Socket Perl (</target>
        </trans-unit>
        <trans-unit id="3167fd37c36e8874785bfe9f3f3013cce7f288bd" translate="yes" xml:space="preserve">
          <source>This is open source software. The code repository is available for public review and contribution under the terms of the license.</source>
          <target state="translated">Это программное обеспечение с открытым исходным кодом.Хранилище кода доступно для публичного просмотра и внесения в него изменений на условиях лицензии.</target>
        </trans-unit>
        <trans-unit id="bcfe5a91a20366b07a20b45c08c83d2cb3335747" translate="yes" xml:space="preserve">
          <source>This is our final regexp. To recap, we built a regexp by</source>
          <target state="translated">Это наш последний регэксперт.Подводя итог,мы построили регеxp по</target>
        </trans-unit>
        <trans-unit id="55cbe19c15cda5405c9b99032930566aa6e4cd4b" translate="yes" xml:space="preserve">
          <source>This is parsed as:</source>
          <target state="translated">Это анализируется как:</target>
        </trans-unit>
        <trans-unit id="4f7853da7a16df56ba94a3f89eeeb6c41db7cabc" translate="yes" xml:space="preserve">
          <source>This is partially implemented now.</source>
          <target state="translated">Сейчас это частично реализовано.</target>
        </trans-unit>
        <trans-unit id="2a6f22dd0203804895067e4cd94d48784411f916" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamic patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="translated">Это особенно полезно для динамических шаблонов, таких как те, которые считываются из файла конфигурации, взяты из аргумента или указываются где-нибудь в таблице. Рассмотрим случай, когда некоторые шаблоны хотят быть чувствительными к регистру, а некоторые нет: нечувствительные к регистру шаблоны просто должны включать &lt;code&gt;(?i)&lt;/code&gt; в начале шаблона. Например:</target>
        </trans-unit>
        <trans-unit id="a9a8ef21b0f21974a251d0cd49767a5e49f56bc4" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamically-generated patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa59114ea7716b61a1b0ecf212fbfdac38cd5ec" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you have More Than One Way (tm) to solve a problem in a program, and only wish to continue down a path if all modules could be loaded, and not load them if they couldn't.</source>
          <target state="translated">Это особенно полезно,если у вас есть более чем один способ (tm)решения проблемы в программе,и вы хотите продолжать идти по пути только в том случае,если все модули могут быть загружены,и не загружать их,если они не могут.</target>
        </trans-unit>
        <trans-unit id="7f5141125aa28c42d6dec636c32fcbaa85fe78c3" translate="yes" xml:space="preserve">
          <source>This is particularly useful when applied to code references returned from reval().</source>
          <target state="translated">Это особенно полезно при применении к кодовым ссылкам,возвращаемым из функции reval().</target>
        </trans-unit>
        <trans-unit id="3afdcef939cf6d1f8b0ef2be038cdb0c7d7984fa" translate="yes" xml:space="preserve">
          <source>This is powerful, and slightly dangerous, in that it's possible to intend (with the utmost sincerity) to use a hard reference, and accidentally use a symbolic reference instead. To protect against that, you can say</source>
          <target state="translated">Это мощно и слегка опасно тем,что можно намеренно (с предельной искренностью)использовать жесткую ссылку,и случайно использовать вместо нее символическую ссылку.Чтобы защититься от этого,можно сказать.</target>
        </trans-unit>
        <trans-unit id="1d61b3fe5532441244041a6185a4d7b90b80ec48" translate="yes" xml:space="preserve">
          <source>This is primarily meant for the use of modules such as FTP where passwords are sent, but we do not want to display them in the debugging information.</source>
          <target state="translated">Это в первую очередь предназначено для использования таких модулей,как FTP,куда отправляются пароли,но мы не хотим отображать их в отладочной информации.</target>
        </trans-unit>
        <trans-unit id="01c91853268ed50e9d0a33c6896652af44de4d99" translate="yes" xml:space="preserve">
          <source>This is primarily of use for people who repackage Perl modules.</source>
          <target state="translated">Это в первую очередь полезно для людей,которые переупаковывают модули Perl.</target>
        </trans-unit>
        <trans-unit id="831dab0bf255edc5ba7e605462344bdbe78142e8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="translated">Это в основном используется внутри &lt;code&gt;(?{...})&lt;/code&gt; блоков для проверки недавно сопоставленного текста. Например, чтобы эффективно записывать текст в переменную (в дополнение к &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; и т. Д.), Замените &lt;code&gt;(...)&lt;/code&gt; на</target>
        </trans-unit>
        <trans-unit id="785aba462ddf893b4d7d212c5fc066f6e4b29bd8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471731e21edc337b491a7b40340da72650201ff9" translate="yes" xml:space="preserve">
          <source>This is primarily used when you need to make several actions atomic (against some signals anyway).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43405231d7a3fc726c046090388674dddde66ec5" translate="yes" xml:space="preserve">
          <source>This is primarily useful for install scripts.</source>
          <target state="translated">Это в первую очередь полезно для установки скриптов.</target>
        </trans-unit>
        <trans-unit id="71555351eedbd86160cbba934f94d326494c3535" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; in perl sources.</source>
          <target state="translated">Это эквивалент printf (). printf определен # для этой функции, поэтому (в настоящее время) законно использовать &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; в источниках perl.</target>
        </trans-unit>
        <trans-unit id="5a921444f0499fb36eee87f18490349a0c0c08e2" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;printf(fmt,...)&lt;/code&gt; in perl sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea35349c6ed8d6a98b7de634d09f57721480861" translate="yes" xml:space="preserve">
          <source>This is private to the Perl core and subject to change. Should be left null.</source>
          <target state="translated">Это личное для ядра Perl и может быть изменено.Должно быть оставлено недействительным.</target>
        </trans-unit>
        <trans-unit id="a42a74dee5bfb28b5a2d265ff8a638902c0a2d41" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;&quot;sv_usepvn_flags&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;&quot;sv_setpvn&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;&quot;sv_setpvs&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa02440d9fac9b73c470e7ca881854b6795009" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt;.</source>
          <target state="translated">Вероятно, это не то, что вы хотите использовать, вы, вероятно, хотели &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; или &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; или &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="697287005f5cb5ed6d011d9e5061126f21f55b05" translate="yes" xml:space="preserve">
          <source>This is provided as a more readable version of &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">Это предоставляется как более читаемая версия &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cabb9b2376d3134de9c8bd807fc2548baba2fca" translate="yes" xml:space="preserve">
          <source>This is quite different, however, from not even trusting the writer of the code not to try to do something evil. That's the kind of trust needed when someone hands you a program you've never seen before and says, &quot;Here, run this.&quot; For that kind of safety, you might want to check out the Safe module, included standard in the Perl distribution. This module allows the programmer to set up special compartments in which all system operations are trapped and namespace access is carefully controlled. Safe should not be considered bullet-proof, though: it will not prevent the foreign code to set up infinite loops, allocate gigabytes of memory, or even abusing perl bugs to make the host interpreter crash or behave in unpredictable ways. In any case it's better avoided completely if you're really concerned about security.</source>
          <target state="translated">Однако это совсем другое дело-даже не доверять писателю кода,чтобы не попытаться сделать что-то злое.Такое доверие необходимо,когда кто-то передает вам программу,которую вы никогда раньше не видели,и говорит:&quot;Вот,запустите это&quot;.Для такой безопасности вам может понадобиться модуль Safe,включенный в стандартный дистрибутив Perl.Этот модуль позволяет программисту устанавливать специальные отсеки,в которых все системные операции оказываются в ловушке,а доступ к пространству имён тщательно контролируется.При этом Safe не следует считать пуленепробиваемым:он не помешает постороннему коду настраивать бесконечные циклы,выделять гигабайты памяти или даже злоупотреблять perl-багами,чтобы вызвать падение хост-интерпретатора или вести себя непредсказуемым образом.В любом случае,его лучше полностью избежать,если вы действительно беспокоитесь о безопасности.</target>
        </trans-unit>
        <trans-unit id="50d419167936516f6bf9a1f029bd288bcc5eb141" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;&quot;EXAMPLE 1&quot;&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;&quot;EXAMPLE 2&quot;&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;&quot;EXAMPLE 3&quot;&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc844a09760bd8a2dc9b577b36da09548b575605" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;EXAMPLE 1&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EXAMPLE 2&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;EXAMPLE 3&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="translated">Это довольно типично для файлов .xs: обычно файл .xs предоставляет интерфейс для существующей функции C. Затем эта функция C определяется где-то (либо во внешней библиотеке, либо в первой части файла .xs), а интерфейс Perl для этой функции (то есть &amp;laquo;клей Perl&amp;raquo;) описывается во второй части файла .xs. Ситуация в &lt;a href=&quot;#EXAMPLE-1&quot;&gt;ПРИМЕРЕ 1&lt;/a&gt; , &lt;a href=&quot;#EXAMPLE-2&quot;&gt;ПРИМЕРЕ 2&lt;/a&gt; и &lt;a href=&quot;#EXAMPLE-3&quot;&gt;ПРИМЕРЕ 3&lt;/a&gt; , когда вся работа выполняется внутри &amp;laquo;клея Perl&amp;raquo;, является скорее исключением, чем правилом.</target>
        </trans-unit>
        <trans-unit id="c3a982ed6685f74bf9f57db540f3caed5035dcd6" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt; , it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="translated">Это очень полезно, поскольку обычно улучшает читаемость. Хотя это отлично работает для &lt;code&gt;SV *&lt;/code&gt; , к сожалению, не так просто получить &lt;code&gt;AV *&lt;/code&gt; или &lt;code&gt;HV *&lt;/code&gt; в качестве возвращаемого значения. Вы</target>
        </trans-unit>
        <trans-unit id="02c1d462530bf64748def6c496de1d6240bfa91b" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt;, it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9aa2c2c409f58ba99139ca42f157f4afdf7a29" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="translated">Это редко используется. Это один из способов иногда использовать код E &amp;lt;...&amp;gt;. Например, вместо &amp;laquo; &lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt; &amp;raquo; (для &amp;laquo;N &amp;lt;3&amp;raquo;) вы можете написать &amp;laquo; &lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &amp;raquo; (&amp;laquo;Z &amp;lt;&amp;gt;&amp;raquo; разделяет &amp;laquo;N&amp;raquo; и &amp;laquo;&amp;lt;&amp;raquo;, поэтому они не может считаться частью (фиктивного) кода &amp;laquo;N &amp;lt;...&amp;gt;&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="3c3972509e727368d3c5e9a50516482551fe729d" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt;&quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c569493cb06e371332b5d2d180bdd4a7a876b1d" translate="yes" xml:space="preserve">
          <source>This is required by some servers. For example if you are connecting to an INN server and you have transfer permission your connection will be connected to the transfer daemon, not the NNTP daemon. Issuing this command will cause the transfer daemon to hand over control to the NNTP daemon.</source>
          <target state="translated">Этого требуют некоторые серверы.Например,если вы подключаетесь к серверу INN и у вас есть разрешение на передачу,ваше соединение будет подключено к даемону передачи,а не к даемону NNTP.Выполнение этой команды заставит передающего демона передать управление демону NNTP.</target>
        </trans-unit>
        <trans-unit id="cbdfb46249e842a142c962c6d9643c65a18e64d0" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems &lt;code&gt;/tmp&lt;/code&gt; is not owned by root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aba726220151e0bdd8e20f672a38f3cb853c543" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems C is not owned by root.</source>
          <target state="translated">Это необходимо,так как на многих unix-системах C не принадлежит корневой системе.</target>
        </trans-unit>
        <trans-unit id="53e759494f9bf8d7efd9149cfc161ebbf71db524" translate="yes" xml:space="preserve">
          <source>This is safer than and replaces the &quot;no_plan&quot; plan.</source>
          <target state="translated">Это безопаснее и заменяет собой план &quot;no_plan&quot;.</target>
        </trans-unit>
        <trans-unit id="ce8477bd1dd658eb92098ae32e26b04afeab44b4" translate="yes" xml:space="preserve">
          <source>This is same as &lt;code&gt;new()&lt;/code&gt;, except that &lt;code&gt;generated_by&lt;/code&gt; and &lt;code&gt;meta-spec&lt;/code&gt; fields will be generated if not provided. This means the metadata structure is assumed to otherwise follow the latest &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ebcb8463dd98d519e70a00c26fec5b1949c87c" translate="yes" xml:space="preserve">
          <source>This is seldom necessary, though, because this is done automatically, like when you access an array:</source>
          <target state="translated">Однако в этом редко возникает необходимость,так как это делается автоматически,например,когда вы получаете доступ к массиву:</target>
        </trans-unit>
        <trans-unit id="5b39df7c425593c524473bd917a5316f755e7f35" translate="yes" xml:space="preserve">
          <source>This is set to &lt;code&gt;true&lt;/code&gt; in</source>
          <target state="translated">Это установлено в &lt;code&gt;true&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="bda100b399c447a02432db64ae424bebb5a77bb3" translate="yes" xml:space="preserve">
          <source>This is set to a true value. It allows the tests to determine if they are being executed through the harness or by any other means.</source>
          <target state="translated">Это установлено в истинное значение.Это позволяет определить,выполняются ли тесты через жгут или любым другим способом.</target>
        </trans-unit>
        <trans-unit id="784e1d59cc78e03dfce5c4eb5ddb5046b2ae8797" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, &lt;a href=&quot;http://man.he.net/man1/grep&quot;&gt;grep(1)&lt;/a&gt; and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8825b383410611d9ab88c7c6da41a37ab67b7bd2" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, grep(1) and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="translated">Это похоже по духу на grep(1)и его родственников,но не то же самое.В частности,она не ограничивается использованием регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="031672016e4d502c018309428e47661800aac1a9" translate="yes" xml:space="preserve">
          <source>This is similar to</source>
          <target state="translated">Это похоже на</target>
        </trans-unit>
        <trans-unit id="3e6ba00cc4274369aaec7e06e964eb77cd40c12d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$&amp;amp;&lt;/code&gt; ( &lt;code&gt;$MATCH&lt;/code&gt; ), за исключением того, что это не приводит к снижению производительности, связанной с этой переменной.</target>
        </trans-unit>
        <trans-unit id="b7e216fa4594cbacfaf20854b0ab30d1c8d5c1e2" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e9006abb746eec00ddbe6c7b21cfe4ec62c97b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$'&lt;/code&gt; ( &lt;code&gt;$POSTMATCH&lt;/code&gt; ), за исключением того, что не влечет за собой снижение производительности, связанное с этой переменной.</target>
        </trans-unit>
        <trans-unit id="6fd5c8a1ee96062bbcb6f2a27266f07276bffe2f" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e38c00b725c5a13563494b1438770078513b03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$`&lt;/code&gt; ($PREMATCH) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$`&lt;/code&gt; ($ PREMATCH), за исключением того, что это не снижает производительность, связанную с этой переменной.</target>
        </trans-unit>
        <trans-unit id="b7b04635104076e8869c03a97df7510eda62d809" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="translated">Это похоже на &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; , но просто возвращает либо ссылку на код, либо &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , чтобы указать, что других методов с таким именем не существует.</target>
        </trans-unit>
        <trans-unit id="c76a101755f29c4620b6ee3b21e4e2a7b2d96005" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;next::method&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;undef&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73fed07cf9661cd5a76d43367f7870e1dfd1e63" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt; . The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="translated">Это похоже на &lt;code&gt;string_vianame&lt;/code&gt; . Основное отличие состоит в том, что в большинстве случаев &lt;code&gt;vianame&lt;/code&gt; возвращает порядковый номер кода, тогда как &lt;code&gt;string_vianame&lt;/code&gt; возвращает строку. Например,</target>
        </trans-unit>
        <trans-unit id="035b09da2ed8ab563a4781cdc8cd00f1a372a968" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt;. The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82735301d82a0dc4313bb1d53ad031d27f023c2f" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">Это похоже на встроенную функцию &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; Perl для возврата строки, аргументы которой отформатированы в соответствии с запросом, см. &lt;a href=&quot;functions/sprintf&quot;&gt;Sprintf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a0b7112ac62ec6b0732258b7ebbd4369edb185a" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;sprintf()&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9fc002d8f7d1fdb8d39dcb8cc96f69462055b3" translate="yes" xml:space="preserve">
          <source>This is similar to calling the &lt;code&gt;x&lt;/code&gt; command on each applicable var.</source>
          <target state="translated">Это похоже на вызов команды &lt;code&gt;x&lt;/code&gt; для каждой применимой переменной .</target>
        </trans-unit>
        <trans-unit id="c882c2e2c2f32205e6402773c4c5a8648cf274ab" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Perl 6. Like &lt;code&gt;(*PRUNE)&lt;/code&gt; , this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="translated">Это похоже на оператор &quot;вырезать группу&quot; &lt;code&gt;::&lt;/code&gt; из Perl 6. Как и &lt;code&gt;(*PRUNE)&lt;/code&gt; , этот глагол всегда соответствует, и при возврате в случае неудачи он заставляет механизм регулярных выражений пробовать следующее чередование в самой внутренней включающей группе ( захват или иное), имеющий чередования. Две ветви &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; не считаются чередованием, насколько это касается &lt;code&gt;(*THEN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="789212497ee1cf1f776a732c31bef719dc8f5cde" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Raku. Like &lt;code&gt;(*PRUNE)&lt;/code&gt;, this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-pattern&lt;/i&gt;|&lt;i&gt;no-pattern&lt;/i&gt;)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b23340a8a44f500f9fdd2f514353aafef1f1600" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt; , for duplicating a file descriptor.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;dup()&lt;/code&gt; для дублирования дескриптора файла.</target>
        </trans-unit>
        <trans-unit id="ae6596049dbd554c0142eb69dbcbdccd65d36765" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt;, for duplicating a file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc59e25f670eb40f71d53b45961566d88e8da8a1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt; , for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;dup2()&lt;/code&gt; для дублирования файлового дескриптора на другой известный файловый дескриптор.</target>
        </trans-unit>
        <trans-unit id="f1e6999776f77cce2c537978df0c9c5950783832" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt;, for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae23dd5fc0059c09ec24ea0c5ef5acb6d58fa1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;mkfifo()&lt;/code&gt; for creating FIFO special files.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;mkfifo()&lt;/code&gt; для создания специальных файлов FIFO.</target>
        </trans-unit>
        <trans-unit id="cb82e089ae466005cc0dc383a964501667069da5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt; , for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;nice()&lt;/code&gt; для изменения предпочтения планирования текущего процесса. Положительные аргументы означают более вежливый процесс, отрицательные значения - более трудный процесс. Обычные (не root) пользовательские процессы могут измениться только в сторону более вежливых.</target>
        </trans-unit>
        <trans-unit id="9a0808a5ff368707577d5e1f0e5bcb31b1f6ad15" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt;, for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458e14f71182f02f4a806b4f96c30f94a69e2f5d" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt; , which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">Это похоже на &lt;code&gt;pause()&lt;/code&gt; функции C , которая приостанавливает выполнение текущего процесса до получения сигнала.</target>
        </trans-unit>
        <trans-unit id="e41f365bbfbbe805fa9664e5da8fbc5e5e99f55a" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt;, which suspends the execution of the current process until a signal is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c0406fc055d4e959d81bed9920f88092d08404" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;setpgid()&lt;/code&gt; for setting the process group identifier of the current process.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;setpgid()&lt;/code&gt; для установки идентификатора группы процессов текущего процесса.</target>
        </trans-unit>
        <trans-unit id="b56c5c880f143b4a031f787b44269acb561de2d9" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcdrain()&lt;/code&gt; for draining the output queue of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcdrain()&lt;/code&gt; для очистки очереди вывода потока аргументов.</target>
        </trans-unit>
        <trans-unit id="fba332acc7267461256bd4bbecd53d5cd07ab313" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflow()&lt;/code&gt; for controlling the flow of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcflow()&lt;/code&gt; для управления потоком ее потока аргументов.</target>
        </trans-unit>
        <trans-unit id="2235c85d6f3847cd44159a3753a652d29703f3f5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflush()&lt;/code&gt; for flushing the I/O buffers of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcflush()&lt;/code&gt; для очистки буферов ввода-вывода своего потока аргументов.</target>
        </trans-unit>
        <trans-unit id="32c5db3dfe196b930ba8a6acd29334ab37d33b0e" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsendbreak()&lt;/code&gt; for sending a break on its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcsendbreak()&lt;/code&gt; для отправки прерывания в потоке аргументов.</target>
        </trans-unit>
        <trans-unit id="d51d66ac3fd31e0526e015560112bf7a83d1d7e3" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsetpgrp()&lt;/code&gt; for setting the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcsetpgrp()&lt;/code&gt; для установки идентификатора группы процессов для группы процессов переднего плана управляющего терминала.</target>
        </trans-unit>
        <trans-unit id="66ffda00414691432da9fbf5e0758036abbf4c87" translate="yes" xml:space="preserve">
          <source>This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">Это похоже на функцию C, за исключением того, что она может применяться к одиночному символу или ко всей строке, и в настоящее время работает так, как если бы языковой стандарт всегда был &amp;laquo;C&amp;raquo;. Рассмотрите возможность использования функции &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/uc&quot;&gt;Uc&lt;/a&gt; , или эквивалентного оператора &lt;code&gt;\U&lt;/code&gt; внутри строк с двойными кавычками.</target>
        </trans-unit>
        <trans-unit id="8eda6f0f736dfb783b722b66835ba379ce58a17f" translate="yes" xml:space="preserve">
          <source>This is similar to using T_OPAQUEPTR but can be used to process more than one element.</source>
          <target state="translated">Это похоже на использование T_OPAQUEPTR,но может быть использовано для обработки более чем одного элемента.</target>
        </trans-unit>
        <trans-unit id="a28122b9a555130e7576bc2e3eaca06e448a1d61" translate="yes" xml:space="preserve">
          <source>This is similar to what &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2544ef4a094110db1a1743d7560cf9401d79c3" translate="yes" xml:space="preserve">
          <source>This is slightly more performant than making four separate checks in four separate &lt;code&gt;mXPUSHi()&lt;/code&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a070e7d29b17578c9c82db6eb47bc8205a22821e" translate="yes" xml:space="preserve">
          <source>This is so that you can write loops like:</source>
          <target state="translated">Это для того,чтобы можно было писать такие циклы,как..:</target>
        </trans-unit>
        <trans-unit id="5bb4dbbe89d426f58f9d96c7270c7af2e03e5d56" translate="yes" xml:space="preserve">
          <source>This is something you, the programmer, has to keep track of; sorry. You could consider adopting a kind of &quot;Hungarian notation&quot; to help with this.</source>
          <target state="translated">Это то,за чем вы,программист,должны следить;извините.Вы могли бы подумать о принятии своего рода &quot;венгерской нотации&quot;,чтобы помочь в этом.</target>
        </trans-unit>
        <trans-unit id="f62086875f698e88f1673ff191123d1ebe166ce0" translate="yes" xml:space="preserve">
          <source>This is somewhat equivalent to the C-style switch statement's fallthrough functionality (not to be confused with</source>
          <target state="translated">Это в какой-то степени эквивалентно функции переключателя в стиле C (не путать с</target>
        </trans-unit>
        <trans-unit id="7039ef5c59f1a390b0357d66a81e16efc5deefb4" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt; , but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">Это чем-то похоже на &lt;code&gt;SUPER&lt;/code&gt; , но в нем используется порядок разрешения метода C3, чтобы добиться большей согласованности в ситуациях множественного наследования. Обратите внимание, что, хотя наследование в целом следует за тем, какой MRO действует для данного класса, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; использует только C3 MRO.</target>
        </trans-unit>
        <trans-unit id="95132fa5d3b646da8b789212be7047604909e342" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt;, but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;next::method&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e2c8909db8a95dab398add127a82ec5182c9bc" translate="yes" xml:space="preserve">
          <source>This is still a symbolic reference, and is still saddled with the problems enumerated above. It would be far better to write:</source>
          <target state="translated">Это все еще символическая ссылка,и все еще оседлана проблемами,перечисленными выше.Было бы гораздо лучше написать:</target>
        </trans-unit>
        <trans-unit id="dc230bd2bfa305e90c52714b5b02997ea62329f3" translate="yes" xml:space="preserve">
          <source>This is subroutine definition, not a real function</source>
          <target state="translated">Это подпрограммное определение,а не реальная функция.</target>
        </trans-unit>
        <trans-unit id="b1e77ff60ef4ac8debe40c75ba809e724ed8905b" translate="yes" xml:space="preserve">
          <source>This is substantially different than the behavior of &lt;code&gt;SUPER&lt;/code&gt; under complex multiple inheritance. (This becomes obvious when one realizes that the common superclasses in the C3 linearizations of a given class and one of its parents will not always be ordered the same for both.)</source>
          <target state="translated">Это существенно отличается от поведения &lt;code&gt;SUPER&lt;/code&gt; при сложном множественном наследовании. (Это становится очевидным, когда понимаешь, что общие суперклассы в линеаризациях C3 данного класса и одного из его родителей не всегда будут упорядочены одинаково для обоих.)</target>
        </trans-unit>
        <trans-unit id="23e17e01cd60708587cb31d9ff8b363ecd66c020" translate="yes" xml:space="preserve">
          <source>This is sufficient because non-XS modules install only &quot;.pm&quot; files and (sometimes) pod and/or man documentation. No re-linking of the perl binary is needed to build, install or use non-XS modules.</source>
          <target state="translated">Этого достаточно,потому что не XS модули устанавливают только &quot;.pm&quot; файлы и (иногда)документацию pod и/или man.Для сборки,установки и использования не XS-модулей не требуется перекомпоновка бинарного файла perl.</target>
        </trans-unit>
        <trans-unit id="0a11b4a723aa89f435867b4b7aabf89fab7f0ed5" translate="yes" xml:space="preserve">
          <source>This is suitable for many purposes, but the &lt;a href=&quot;Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt; module is available on CPAN that provides many more features, including customization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5a4fb32d8ac695ed2b298f81d0f20fcb10d969" translate="yes" xml:space="preserve">
          <source>This is supported on all versions of perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62efbec7287d71078acc23cdfe299bffb8e3dad9" translate="yes" xml:space="preserve">
          <source>This is supported since 6.76</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176d1979619b89ab80bba77f3ee47c56e59cc580" translate="yes" xml:space="preserve">
          <source>This is supported since 7.26</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c58a399144492e3d85b2b92893dc4441d4f1a4b" translate="yes" xml:space="preserve">
          <source>This is synonymous with:</source>
          <target state="translated">Это синоним:</target>
        </trans-unit>
        <trans-unit id="f36d5338bbc7b7f385e72503a212aefb9d4b21f2" translate="yes" xml:space="preserve">
          <source>This is the &quot;branch reset&quot; pattern, which has the special property that the capture groups are numbered from the same starting point in each alternation branch. It is available starting from perl 5.10.0.</source>
          <target state="translated">Это деталь &quot;сброса ветви&quot;,которая имеет особое свойство,заключающееся в том,что группы захвата пронумерованы от одной и той же начальной точки в каждой ветви перемены.Оно доступно,начиная с раздела 5.10.0.</target>
        </trans-unit>
        <trans-unit id="19421af57fe146a06eb56f9f30349ebe8341f96d" translate="yes" xml:space="preserve">
          <source>This is the &quot;make test&quot; result from the said combination:</source>
          <target state="translated">Это результат &quot;make test&quot; от указанной комбинации:</target>
        </trans-unit>
        <trans-unit id="62ca18cb3607997061d57b9fd320ab0f041516b6" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Всегда &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; это &amp;amp; PL_sv_undef .</target>
        </trans-unit>
        <trans-unit id="96cfbbe2d84ca5bfe80092e6f9ad37226fb61e75" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_yes&quot;&gt;&quot;PL_sv_yes&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4760f68814e5682fe3f5f10b06ed0b34903e395" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;PL_sv_yes&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;false&lt;/code&gt; SV. См. &lt;code&gt;PL_sv_yes&lt;/code&gt; . Всегда &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; это &amp;amp; PL_sv_no .</target>
        </trans-unit>
        <trans-unit id="e139735f50d334d273ed9e56bd61f363d8c88b31" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69477e80b4da6549c4778882346d8c2f1a054a61" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;PL_sv_no&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;true&lt;/code&gt; СВ. См. &lt;code&gt;PL_sv_no&lt;/code&gt; . Всегда &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; это &amp;amp; PL_sv_yes .</target>
        </trans-unit>
        <trans-unit id="81478e9ca7d8718a5ec449fbb46281e67cc22245" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;undef&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7194017d84a1b8d81ca4290d44c59af66198e5c2" translate="yes" xml:space="preserve">
          <source>This is the Perl 6 &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt; , except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">Это Perl 6 &quot;шаблон фиксации&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; или &lt;code&gt;:::&lt;/code&gt; . Это шаблон нулевой ширины, похожий на &lt;code&gt;(*SKIP)&lt;/code&gt; , за исключением того, что при возврате в случае сбоя он приводит к тому, что совпадение не выполняется. Никаких дальнейших попыток найти действительное совпадение путем перемещения указателя начала снова не будет. Например,</target>
        </trans-unit>
        <trans-unit id="6d8e4baf0d85adfeec247ab733be39725f479200" translate="yes" xml:space="preserve">
          <source>This is the Perl patch level, a numeric change identifier, as defined by whichever source code maintenance system is used to maintain the patches; currently Perforce. It does not correlate with the Perl version numbers or the maintenance versus development dichotomy except by also being increasing.</source>
          <target state="translated">Это уровень заплаток Perl,числовой идентификатор изменения,определяемый той или иной системой обслуживания исходного кода,используемой для обслуживания заплаток;в настоящее время это Perforce.Он не коррелирует с номерами версий Perl или дихотомией сопровождения против разработки,за исключением того,что он также увеличивается.</target>
        </trans-unit>
        <trans-unit id="c3d3b33b321b373988f93e8459b8ad217922301e" translate="yes" xml:space="preserve">
          <source>This is the Raku &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt;, except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eaf16c26ce67bf186071a739f6615eb11610fd4" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; etc.</source>
          <target state="translated">Это SV, с которым нужно сравнивать. Обратите внимание, что фактический массив символов, с которым нужно сопоставить, предоставляется аргументами, описанными ниже; SV просто используется для определения UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; и т. д.</target>
        </trans-unit>
        <trans-unit id="7c286f6393bbad06af797d961790dd4c263ab5cd" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;pos()&lt;/code&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d720b4f15a9201913736e953c720d9b63d81ea0" translate="yes" xml:space="preserve">
          <source>This is the Unicode-aware way of saying</source>
          <target state="translated">Это способ сказать в Юникоде...</target>
        </trans-unit>
        <trans-unit id="455ede6174f3d5161f6c2d4aa6425c94536894ca" translate="yes" xml:space="preserve">
          <source>This is the basic function to generate temporary files. The behaviour of the file can be changed using various options:</source>
          <target state="translated">Это основная функция для генерации временных файлов.Поведение файла может быть изменено с помощью различных опций:</target>
        </trans-unit>
        <trans-unit id="0cdb886cc4c11fb4c044bce1657934ab85d4f9c0" translate="yes" xml:space="preserve">
          <source>This is the central parsing function. It can both append new text and extract objects from the stream accumulated so far (both of these functions are optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05b57eee11f052b052017c3ff384fae39edc53f" translate="yes" xml:space="preserve">
          <source>This is the command to execute. It may be either a string or an array reference. This is a required argument.</source>
          <target state="translated">Это команда на выполнение.Это может быть как строка,так и ссылка на массив.Это необходимый аргумент.</target>
        </trans-unit>
        <trans-unit id="78880bb496bf709fa9881c622c08f3137e6dd8f7" translate="yes" xml:space="preserve">
          <source>This is the constructor for &lt;b&gt;Pod::Parser&lt;/b&gt; and its subclasses. You</source>
          <target state="translated">Это конструктор для &lt;b&gt;Pod :: Parser&lt;/b&gt; и его подклассов. Вы</target>
        </trans-unit>
        <trans-unit id="3d8bf5bd14f4dda830975aad7d7af3e9d034509f" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::FTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an FTP connection is required.</source>
          <target state="translated">Это конструктор нового объекта Net :: FTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется FTP-соединение.</target>
        </trans-unit>
        <trans-unit id="d79a978a5e7757a479b9fe30cd0cc290698241af" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt; , then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">Это конструктор нового объекта Net :: NNTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется соединение NNTP. Если не указан, то его можно передать как параметр &lt;code&gt;Host&lt;/code&gt; , описанный ниже. Если хост не передан, проверяются две переменные среды, сначала &lt;code&gt;NNTPSERVER&lt;/code&gt; , затем &lt;code&gt;NEWSHOST&lt;/code&gt; , затем проверяется &lt;code&gt;Net::Config&lt;/code&gt; , и если хост не найден , используются &lt;code&gt;news&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="269299c73d11a11158c0e7b9fe468441843c9e6e" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt;, then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1411000dcca44bd6224ab398773d981b55ca56" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::POP3 object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an POP3 connection is required.</source>
          <target state="translated">Это конструктор для нового объекта Net :: POP3. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется соединение POP3.</target>
        </trans-unit>
        <trans-unit id="b5e150d75dbb5f649a71e256e018f3d6ee5d68ad" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::SMTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an SMTP connection is required.</source>
          <target state="translated">Это конструктор нового объекта Net :: SMTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется SMTP-соединение.</target>
        </trans-unit>
        <trans-unit id="3dcdb98a1ad7340bd49db77b64b7ed1e7e6ac7fa" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference of some sort. The reference can be used to hold some internal information.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать некую благословенную ссылку.Ссылка может быть использована для хранения некоторой внутренней информации.</target>
        </trans-unit>
        <trans-unit id="7f8efcba15ad2c7fb65b185c0d87e50ef7c7af8b" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new array (probably an anonymous ARRAY ref) will be accessed.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку,через которую будет осуществляться доступ к новому массиву (возможно,анонимный рефлекс ARRAY).</target>
        </trans-unit>
        <trans-unit id="4ddd75a12229b0af35fd3f3217e95a18f27831c9" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new object (probably but not necessarily an anonymous hash) will be accessed.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку,через которую новый объект (вероятно,но не обязательно анонимный хэш)будет доступен.</target>
        </trans-unit>
        <trans-unit id="c3ca80029525d0505c9c19a25619277e596ad6ff" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference to a new scalar (probably anonymous) that it's creating. For example:</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку на новый скаляр (возможно анонимный),который он создает.Например:</target>
        </trans-unit>
        <trans-unit id="bb534959b62a2349bc366cafbf3bc4c8d2378f5a" translate="yes" xml:space="preserve">
          <source>This is the current line number being parsed. But you might find the &quot;line_number&quot; event attribute more accurate, when it is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c7d16dbe44cbd95a833f47b94f50f6214ea17d" translate="yes" xml:space="preserve">
          <source>This is the default code set.</source>
          <target state="translated">Это набор кодов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d1c927184ed34249d218ce93282cb8de28d7d8db" translate="yes" xml:space="preserve">
          <source>This is the default compression used when creating a zip file with &lt;code&gt;IO::Compress::Zip&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42f9d3bfdedb4c34f927c70a8b84d5ca486809d" translate="yes" xml:space="preserve">
          <source>This is the default value if none was provided by the user. This is also the type &lt;code&gt;strict_type&lt;/code&gt; will look at when checking type integrity (see below).</source>
          <target state="translated">Это значение по умолчанию, если оно не было предоставлено пользователем. Это также тип, на который &lt;code&gt;strict_type&lt;/code&gt; будет смотреть при проверке целостности типа (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="3593aaa1ac379bbedb44bf7f659e106e976b3e02" translate="yes" xml:space="preserve">
          <source>This is the default, and fallback concurrency model for &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. This sends events between processes and threads using serialized files in a temporary directory. This is not particularly fast, but it works everywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c4aeb1d9a588518e8c401cb7140416c2986e58" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the</source>
          <target state="translated">По умолчанию.Если вы можете использовать</target>
        </trans-unit>
        <trans-unit id="9aeaae15da033ddcaa17dde6127bab085a00db8b" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the &lt;a href=&quot;http://man.he.net/man1/mail&quot;&gt;mail(1)&lt;/a&gt; or &lt;a href=&quot;http://man.he.net/man1/mailx&quot;&gt;mailx(1)&lt;/a&gt; program to send mail from the machine where your code runs, you should be able to use this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b115e2483ec3abaacaac1f9ae2d4e5dce2387c0" translate="yes" xml:space="preserve">
          <source>This is the directory where the .pm and .pod files you wish to have installed go. They are laid out according to namespace. So Foo::Bar is</source>
          <target state="translated">Это каталог,куда идут файлы .pm и .pod,которые вы хотите установить.Они расположены в соответствии с пространством имён.Итак,Фу::Бар</target>
        </trans-unit>
        <trans-unit id="d930a14451f27529d05daafcbdbe065ab4700f11" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.33</source>
          <target state="translated">Это документация версии 0.33</target>
        </trans-unit>
        <trans-unit id="63455dfd4022438ee8d0c0ec5b67774074825e03" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.36</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412a728d73be865262b84817f05ddc7c35324cf4" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это самый простой способ реализации потоков и способ запуска большинства операционных систем. Большой недостаток состоит в том, что, поскольку ОС ничего не знает о потоках, если один поток блокирует, то все это делают. Типичные действия по блокировке включают большинство системных вызовов, большинство операций ввода-вывода и такие вещи, как &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9872ff32ffe02aae34e5fe172e65251487064e38" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;sleep()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6f35e7150b834f9f05080f6b4f16bfc1d90561" translate="yes" xml:space="preserve">
          <source>This is the email address that will be sent as your anonymous ftp password.</source>
          <target state="translated">Это адрес электронной почты,который будет выслан в качестве вашего анонимного ftp-пароля.</target>
        </trans-unit>
        <trans-unit id="bcbb73b7a51f271a9c7d0f81a71c9c4c6dc5c93f" translate="yes" xml:space="preserve">
          <source>This is the event type that should be used instead of &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt; or its legacy subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70dbb2dc131fafe5c25b23af1ec9a88c86f0b02" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;&quot;Backward Compatibility&quot;&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a8ad8de2657fbb598356bba52fec61dbe4557b" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Backward Compatibility&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">Это существующий флаг. Если прагма lexical warnings &lt;b&gt;не&lt;/b&gt; используется ни в одном из ваших кодов или в каких-либо модулях, которые вы используете, этот флаг будет включать предупреждения везде. См. &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Обратную совместимость&lt;/a&gt; для получения подробной информации о том, как этот флаг взаимодействует с лексическими предупреждениями.</target>
        </trans-unit>
        <trans-unit id="bb41b10f4355a8511d19503b44266dfd63767081" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">Это полное свойство Uppercase_Mapping (в отличие от Simple_Uppercase_Mapping, приведенного в примере для формата &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). Единственное различие между ними в показанных диапазонах заключается в том, что кодовая точка 0x0149 (СТРОЧНАЯ ЛАТИНСКАЯ БУКВА N, ПРЕДШЕСТВУЮЩАЯ АПОСТРОФУ) соответствует строке из двух символов: 0x02BC (МОДИФИКАЦИОННАЯ БУКВА АПОСТРОФ), за которой следует 0x004E (ЛАТИНСКАЯ ЗАГЛАВНАЯ БУКВА N).</target>
        </trans-unit>
        <trans-unit id="72f4b91716b4ac44d113d86456ec9101d5a53dbe" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt;). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871175ae8bd1e88a96090e3ee5d094a4a3c823c8" translate="yes" xml:space="preserve">
          <source>This is the function that does the real work. It should use the current values of @dl_require_symbols and @dl_resolve_using if required.</source>
          <target state="translated">Это функция,которая делает реальную работу.Она должна использовать текущие значения @dl_require_symbols и @dl_resolve_using,если необходимо.</target>
        </trans-unit>
        <trans-unit id="9eb27a9f1b9a740c73f748bcbff1be5834650914" translate="yes" xml:space="preserve">
          <source>This is the function used to implement the behaviour of the &lt;code&gt;isa&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9cd536958034f18b34b73afd163424db233b70" translate="yes" xml:space="preserve">
          <source>This is the global compile-time. That includes, basically, every &lt;code&gt;BEGIN&lt;/code&gt; block executed directly or indirectly from during the compile-time of the top-level program.</source>
          <target state="translated">Это глобальное время компиляции. Это включает, в основном, каждый блок &lt;code&gt;BEGIN&lt;/code&gt; , выполняемый прямо или косвенно во время компиляции программы верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="4c737aa4875c95dda5f4201220fe6bfd2cb9c598" translate="yes" xml:space="preserve">
          <source>This is the hardest part of testing, where do you start? People often get overwhelmed at the apparent enormity of the task of testing a whole module. The best place to start is at the beginning. &lt;a href=&quot;Date::ICal&quot;&gt;Date::ICal&lt;/a&gt; is an object-oriented module, and that means you start by making an object. Test &lt;code&gt;new()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aad6bdc01b0f3b662abb61313db16d1982e4c1" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (&lt;code&gt;root&lt;/code&gt;, &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;sys&lt;/code&gt; etc) rather than simply by root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394f7937653a5d479f930b2ee200056fdee9eaa3" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (C</source>
          <target state="translated">Это самый высокий UID на текущей системе,который относится к корневому UID.Он используется для того,чтобы удостовериться,что временная директория принадлежит системному UID (C</target>
        </trans-unit>
        <trans-unit id="6328f4bdaf24cfea2076758e63c586a6679bf323" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Это внутренняя функция, реализующая оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e79f6ef07ad6031f8e6ffa40b941fdd24230ba02" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a5b446b2d0ba2a35085618db8046fb9068c0dc" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Это внутренняя функция, реализующая оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c755425aff2265b37f84fd527f7d77c0d4f14125" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; layer. It turns off the flag on the layer below so that data read from it is considered to be &quot;octets&quot; i.e. characters in the range 0..255 only. Likewise on output perl will warn if a &quot;wide&quot; character is written to a such a stream.</source>
          <target state="translated">Это инверсия слоя &lt;code&gt;:utf8&lt;/code&gt; . Он отключает флаг на нижнем уровне, чтобы считанные с него данные считались &amp;laquo;октетами&amp;raquo;, то есть символами только в диапазоне 0..255. Точно так же при выводе perl предупредит, если в такой поток записывается &amp;laquo;широкий&amp;raquo; символ.</target>
        </trans-unit>
        <trans-unit id="c2ddc75f62fd0b93b03c10b2f264c7ad34b8bf3a" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; pseudo-layer. It turns off the flag on the layer below so that data read from it is considered to be Perl's internal downgraded encoding, thus interpreted as the native single-byte encoding of Latin-1 or EBCDIC. Likewise on output Perl will warn if a &quot;wide&quot; character (a codepoint not in the range 0..255) is written to a such a stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a7690a54b93d5cbfbc43460dc86928e9ff4860" translate="yes" xml:space="preserve">
          <source>This is the least computationally expensive strategy. It may require some user education.</source>
          <target state="translated">Это наименее затратная с вычислительной точки зрения стратегия.Она может потребовать некоторого обучения пользователей.</target>
        </trans-unit>
        <trans-unit id="6fe99eed7290a54a82a6a3a3aa2c3b4a2bb07743" translate="yes" xml:space="preserve">
          <source>This is the level of HTML &quot;Hn&quot; element to which a Pod &quot;head1&quot; corresponds. For example, if &lt;code&gt;html_h_level&lt;/code&gt; is set to 2, a head1 will produce an H2, a head2 will produce an H3, and so on.</source>
          <target state="translated">Это уровень HTML-элемента &amp;laquo;Hn&amp;raquo;, которому соответствует Pod &amp;laquo;head1&amp;raquo;. Например, если для &lt;code&gt;html_h_level&lt;/code&gt; установлено значение 2, head1 будет создавать H2, head2 будет создавать H3 и так далее.</target>
        </trans-unit>
        <trans-unit id="9f1717cb968bcd00575b28e1fe7b7ef5bc2ad1dd" translate="yes" xml:space="preserve">
          <source>This is the list of default @INC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5030379c7068e58facfd795f2fae683110290cb" translate="yes" xml:space="preserve">
          <source>This is the list of exports that are most commonly needed. If you are simply writing a tool, then this is probably all you need. If you need something and you cannot find it here, then you can also look at &lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;&quot;OTHER API EXPORTS&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230fd1ee1eb1259a3e88a90d402aac49ef4cecd5" translate="yes" xml:space="preserve">
          <source>This is the list of scenarios that break with the new internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf2d95bd6e71bbc931d90912ac4916f4a329b66" translate="yes" xml:space="preserve">
          <source>This is the lower layer of the Perl parser, managing characters and tokens.</source>
          <target state="translated">Это нижний слой парсера Perl,управляющий символами и маркерами.</target>
        </trans-unit>
        <trans-unit id="fb63a92bb5be14bd99b74b3769f58dfdcd714a80" translate="yes" xml:space="preserve">
          <source>This is the mechanism that applies the lexical effects of the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma, and the main program scope effects of the &lt;code&gt;io&lt;/code&gt; or &lt;code&gt;D&lt;/code&gt; options for the &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;-C command-line switch&lt;/a&gt; and &lt;a href=&quot;perlrun#PERL_UNICODE&quot;&gt;PERL_UNICODE environment variable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12044b247d0e34184da8c4d82be7f35e7cce2add" translate="yes" xml:space="preserve">
          <source>This is the module that is used as a frontend to the Perl Compiler.</source>
          <target state="translated">Это модуль,который используется как фронтенд к компилятору Perl.</target>
        </trans-unit>
        <trans-unit id="d48b3bc5add16b69ab6764e7aa4a54509b451c2e" translate="yes" xml:space="preserve">
          <source>This is the most compact form, but it is not well suited for printing or embedding in places that can't handle arbitrary data.</source>
          <target state="translated">Это самая компактная форма,но она не очень хорошо подходит для печати или встраивания в места,которые не могут обрабатывать произвольные данные.</target>
        </trans-unit>
        <trans-unit id="6f4b6501db089524291430841e3e59e649fd1a7f" translate="yes" xml:space="preserve">
          <source>This is the most important method in Locale::Maketext:</source>
          <target state="translated">Это самый важный метод в Локале::Мактекст:</target>
        </trans-unit>
        <trans-unit id="d28b3b2c303cf9fffc3f2cf8865a24397d2fa229" translate="yes" xml:space="preserve">
          <source>This is the most serious problem in Perl 5.20 and earlier. Fixing this required internal changes in Perl 5.22.</source>
          <target state="translated">Это самая серьезная проблема на Perl 5.20 и более ранних версиях.Исправление этого требует внутренних изменений в Perl 5.22.</target>
        </trans-unit>
        <trans-unit id="cb5f568d5745a8f721d4963249e63f161fe9a2ef" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , if you'd rather use that.</source>
          <target state="translated">Это имя или Интернет-адрес удаленного хоста, на котором работает сервер. Мы могли бы указать более длинное имя, например &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , или адрес, например &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . В демонстрационных целях мы использовали специальное имя хоста &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , которое всегда должно означать текущую машину, на которой вы работаете. Соответствующий Интернет-адрес для localhost - &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , если вы предпочитаете его.</target>
        </trans-unit>
        <trans-unit id="42e5cc1bbed69994d8e44a1b803efbbc64d1c0d4" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt;, or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt;. For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt;, which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt;, if you'd rather use that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d714b1786acd33fab070cc7bfc211af580c75d5" translate="yes" xml:space="preserve">
          <source>This is the namespace for formatters. This is an empty package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d786852f1a6c1dea1d6a765cf9070b49db2732" translate="yes" xml:space="preserve">
          <source>This is the normal entry point for automatic dynamic loading in Perl.</source>
          <target state="translated">Это обычная точка входа для автоматической динамической загрузки в Perl.</target>
        </trans-unit>
        <trans-unit id="26340ea40f200c2c1e1dfe6e82669d9feb0fd306" translate="yes" xml:space="preserve">
          <source>This is the normal operation. It translates various literals encountered in the Perl source file from the encoding</source>
          <target state="translated">Это нормальная работа.Она переводит различные литералы,встречающиеся в исходном файле Perl,из кодировки</target>
        </trans-unit>
        <trans-unit id="c846e2c1af2936192fe995d1b6beec9ea4c839cb" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt;, which has no flags parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a889101131356644debee9dab9979e5406fc98f2" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">Это старая форма &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt; , у которой нет параметра flags.</target>
        </trans-unit>
        <trans-unit id="230f7f138d64e36f52758c07316eb9c1eee4e053" translate="yes" xml:space="preserve">
          <source>This is the only executable with does not require OS/2.</source>
          <target state="translated">Это единственный исполняемый файл,для которого не требуется OS/2.</target>
        </trans-unit>
        <trans-unit id="46297865ee1d382d368720a50d5f077d38b59862" translate="yes" xml:space="preserve">
          <source>This is the only form of quoting in perl where there is no need to worry about escaping content, something that code generators can and do make good use of.</source>
          <target state="translated">Это единственная форма цитирования на perl,где нет необходимости беспокоиться об утечке контента,что-то,что генераторы кода могут и делают с пользой для себя.</target>
        </trans-unit>
        <trans-unit id="346faabc7115374b4309ef76fa20a9a155ac4597" translate="yes" xml:space="preserve">
          <source>This is the only implementation for which &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; does anything &quot;interesting&quot;.</source>
          <target state="translated">Это единственная реализация, для которой &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; делает что-нибудь &amp;laquo;интересное&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="60f1241a31b62b7745507b52788f2eba7d4fd0c6" translate="yes" xml:space="preserve">
          <source>This is the only way you can create a custom named sequence of code points.</source>
          <target state="translated">Только так можно создать пользовательскую именованную последовательность кодовых точек.</target>
        </trans-unit>
        <trans-unit id="78dcaca387707f29d8cc3a2585a362d39b2766bf" translate="yes" xml:space="preserve">
          <source>This is the output when it is executed:</source>
          <target state="translated">Это выходной сигнал,когда он выполняется:</target>
        </trans-unit>
        <trans-unit id="e716423e3a6c7217437c06867a38499b8c6c05ea" translate="yes" xml:space="preserve">
          <source>This is the preferred method of passing input to the constructor.</source>
          <target state="translated">Это предпочтительный метод передачи входных данных в конструктор.</target>
        </trans-unit>
        <trans-unit id="3f3e131dd809784965b27d16458f5818d1df8c11" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">Это предпочтительный способ получить объект &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . Вам следует</target>
        </trans-unit>
        <trans-unit id="fcb65586c0c2ac8b0ca9da340eb039802998534b" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4eba93f23876936daa22cc2fcf49ea7ecb8e5d" translate="yes" xml:space="preserve">
          <source>This is the primary function for copying scalars, and most other copy-ish functions and macros use this underneath.</source>
          <target state="translated">Это основная функция для копирования скаляров,и большинство других функций копирования и макросов используют ее внизу.</target>
        </trans-unit>
        <trans-unit id="d8fe859ac5bcdefed33ae4b1e5fa108b5fef0c8f" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with &lt;code&gt;File::Temp&lt;/code&gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d281635f40f0f24e55d7183cb71173555b3719a4" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with C&amp;lt;:temp&amp;gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">Это основной интерфейс для взаимодействия с C &amp;lt;: temp&amp;gt;. Используя объектно-ориентированный интерфейс, временный файл может быть создан при создании объекта, и файл может быть удален, когда объект больше не нужен.</target>
        </trans-unit>
        <trans-unit id="e7186c8d7e458e49979629ada95eb0a97fa3037b" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f779241fea71e4ea7e971c687ff2b2673775df" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the metadata. In the context of this document it usually refers to a collection of modules, scripts, and/or documents that are distributed together for other developers to use. Examples of distributions are &lt;code&gt;Class-Container&lt;/code&gt;, &lt;code&gt;libwww-perl&lt;/code&gt;, or &lt;code&gt;DBI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f4f2b81da1e7eb80147e0a0e24d6cb8a7b101e" translate="yes" xml:space="preserve">
          <source>This is the purpose of</source>
          <target state="translated">В этом заключается цель</target>
        </trans-unit>
        <trans-unit id="c0f05eba3f3af5d5e22733e34a51cbbb4cab705c" translate="yes" xml:space="preserve">
          <source>This is the recommended interface for creation of temporary directories. By default the directory will not be removed on exit (that is, it won't be temporary; this behaviour can not be changed because of issues with backwards compatibility). To enable removal either use the CLEANUP option which will trigger removal on program exit, or consider using the &quot;newdir&quot; method in the object interface which will allow the directory to be cleaned up when the object goes out of scope.</source>
          <target state="translated">Это рекомендуемый интерфейс для создания временных каталогов.По умолчанию каталог не будет удален при выходе (т.е.он не будет временным;такое поведение не может быть изменено из-за проблем с обратной совместимостью).Чтобы включить удаление,либо используйте опцию CLEANUP,которая спровоцирует удаление при выходе программы,либо подумайте об использовании метода &quot;newdir&quot; в объектном интерфейсе,который позволит очистить каталог,когда объект выйдет за пределы области видимости.</target>
        </trans-unit>
        <trans-unit id="bd97525cca1b83f38306d58e91365a2fad99fcd5" translate="yes" xml:space="preserve">
          <source>This is the root directory into which the code will be installed. It</source>
          <target state="translated">Это корневая директория,в которую будет установлен код.Это .</target>
        </trans-unit>
        <trans-unit id="ccd5a95520dab502fdf532a36ef8bc1afc084031" translate="yes" xml:space="preserve">
          <source>This is the safest way to write a test tool. The only two downsides to this are a slight performance decrease, and some extra indentation in your source. If the indentation is a problem for you then you can take a peek at the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a624fea38bb2c4a19922a757fc87c2cbf4093ef7" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;Test::Simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc652aaf1adcdf8a4d8dd86919935233000111ae" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">Это то же самое, что и процедура &lt;code&gt;ok()&lt;/code&gt; &lt;a href=&quot;simple&quot;&gt;Test :: Simple&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5cebaac92f671384da0099c3e4a676330931c2e" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;$ipc-&amp;gt;abort($msg)&lt;/code&gt; except that it uses &lt;code&gt;Carp::longmess&lt;/code&gt; to add a stack trace to the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c649411547df265abe7a680926ab24280bdd17cc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;FB_QUIET&lt;/code&gt; above, except that instead of being silent on errors, it issues a warning. This is handy for when you are debugging.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;FB_QUIET&lt;/code&gt; выше, за исключением того, что вместо молчания об ошибках выдается предупреждение. Это удобно при отладке.</target>
        </trans-unit>
        <trans-unit id="0ae700aa87900b468f3878348b89397f03c7e04f" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt; : a character that changes the spacing horizontally.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\h&lt;/code&gt; и &lt;code&gt;\p{Blank}&lt;/code&gt; : символ, изменяющий интервал по горизонтали.</target>
        </trans-unit>
        <trans-unit id="eddb21086b3856150972d7a2ffd7db90bf137955" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt;: a character that changes the spacing horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc09138370cb171c094bfc6c30b8f2a18097f95" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : A character that changes the spacing horizontally.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\h&lt;/code&gt; и &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : символ, изменяющий интервал по горизонтали.</target>
        </trans-unit>
        <trans-unit id="ebe5b4b519c44b8c20dae3a8295da82dc1226742" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt;: A character that changes the spacing horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5f883b8c3b129477e8adf6ce3d17842b4509c9" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, including beyond ASCII.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\s&lt;/code&gt; , в том числе за пределами ASCII.</target>
        </trans-unit>
        <trans-unit id="7e9dbff8b446293a154a68b17c80ce2409d2cfe1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; and starting in Perl v5.18, a vertical tab.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\s&lt;/code&gt; , только в ASCII, а именно &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; и начиная с Perl v5.18, с вертикальной вкладки.</target>
        </trans-unit>
        <trans-unit id="6256409cd33d9cdf7337e20319de658ce6caee15" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt; : A character that changes the spacing vertically.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\v&lt;/code&gt; : символ, изменяющий интервал по вертикали.</target>
        </trans-unit>
        <trans-unit id="e93db47fe41852a54b4800440e60bc3e5fb69deb" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt;: A character that changes the spacing vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da601bf04f15ab42ea7eb6f0e3d60619c539d79" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , including over 100_000 characters beyond ASCII.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\w&lt;/code&gt; , включая более 100_000 символов за пределами ASCII.</target>
        </trans-unit>
        <trans-unit id="f93b7dea9a5c9d0ac4b1d3dcf4d8d34138603086" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\w&lt;/code&gt; , только в ASCII, а именно &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aecc4c35f5da4819cdbf90f7c987cd623295b80" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, including over 100_000 characters beyond ASCII.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b373b07d064d05bea416853d852c54e573ab565" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2326d742b2e928e15382460bcb0b3e0deff06c68" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_ev2()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bb59b2ee7dd2d7cbdc8604ab007944c5dcedc3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_event()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8213b0c400904773c8fb4aa6534b5c57f7c89c7f" translate="yes" xml:space="preserve">
          <source>This is the same as machine name except that default matches any name. There can be only one default token, and it must be after all machine tokens. This is normally used as:</source>
          <target state="translated">Это то же самое,что и имя машины,за исключением того,что по умолчанию совпадает с любым именем.По умолчанию может быть только один маркер,и он должен быть после всех маркеров машины.Обычно он используется как:</target>
        </trans-unit>
        <trans-unit id="afe36ef7b28dddedb40e25b8fa31da2bc2facf52" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mblen()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrlen(3)&quot;&gt;&lt;code&gt;mbrlen&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mblen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885914858dff1476d770f30f3747b5d73ce30f3c" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mbtowc()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrtowc(3)&quot;&gt;&lt;code&gt;mbrtowc&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mbtowc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e368c63bdf4c570ae1b4c310ff27b1113dd7b3e3" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;wctomb()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;wcrtomb(3)&quot;&gt;&lt;code&gt;wcrtomb&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;wctomb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941bd502236d1dea3c975471a03ebbb873d56ae1" translate="yes" xml:space="preserve">
          <source>This is the same as the bin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная bin,но это имя файла,расширенное во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="c486c8726e0003d1e95bb96e015320afb3b6dfa4" translate="yes" xml:space="preserve">
          <source>This is the same as the sitebin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная sitebin,но имя файла расширяется во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="cdc9f1e5725bf6d120b1c425b6dcc03a53feac1e" translate="yes" xml:space="preserve">
          <source>This is the same as the sitescript variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная sitecript,но это имя файла,расширенное во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="43bee717903e4bfa25fa311f06b4356fc3deab92" translate="yes" xml:space="preserve">
          <source>This is the same executable as</source>
          <target state="translated">Это тот же самый исполняемый файл,что и</target>
        </trans-unit>
        <trans-unit id="3ed82b3d4aecee7f6fc3e2f9453c4cdce17f44ec" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b93eb63da42a6ae191e4cb65dbdf73df302acbd" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">Это тот же объект , используемый переменное окружение ANSI_COLORS_ALIASES (см &lt;a href=&quot;#ENVIRONMENT&quot;&gt;СРЕДЫ&lt;/a&gt; ниже) , но может быть использован во время выполнения, а не только тогда , когда модуль загружен.</target>
        </trans-unit>
        <trans-unit id="08be885869480e470d72f31729368e83f4f891ce" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;P operation&quot; (the name derives from the Dutch word &quot;pak&quot;, which means &quot;capture&quot; -- the semaphore operations were named by the late Dijkstra, who was Dutch).</source>
          <target state="translated">Это семафорная &quot;операция Р&quot; (название происходит от голландского слова &quot;pak&quot;,что означает &quot;захват&quot;-семафорные операции были названы покойным Дийкстрой,который был голландцем).</target>
        </trans-unit>
        <trans-unit id="2f98c90508409620ac27064f1b688373cf5874e7" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;V operation&quot; (the name derives from the Dutch word &quot;vrij&quot;, which means &quot;release&quot;).</source>
          <target state="translated">Это семафор &quot;V операция&quot; (название происходит от голландского слова &quot;vrij&quot;,что означает &quot;освобождение&quot;).</target>
        </trans-unit>
        <trans-unit id="a276cc3b822e5fb68d4f30cd1b14facc89497c26" translate="yes" xml:space="preserve">
          <source>This is the service name or port number we'd like to connect to. We could have gotten away with using just &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; on systems with a well-configured system services file,[FOOTNOTE: The system services file is found in</source>
          <target state="translated">Это имя службы или номер порта, к которому мы хотим подключиться. Мы могли бы обойтись без использования &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; в системах с хорошо настроенным файлом системных служб [СНОСКА: файл системных служб находится в</target>
        </trans-unit>
        <trans-unit id="55fdeec4b425af4c4fa8e9a6591ac8f8843fb073" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 3166-1, such as 064 for Bhutan. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">Это набор трехзначных цифровых кодов из стандарта ISO 3166-1,таких как 064 для Бутана.Эти коды фактически определяются и поддерживаются Отделом статистики ООН.</target>
        </trans-unit>
        <trans-unit id="233002d6fef285c425f811c11a49106685a1ea36" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 4217.</source>
          <target state="translated">Это набор трехзначных цифровых кодов из ISO 4217.</target>
        </trans-unit>
        <trans-unit id="bfc22c533358da5232ffaf0870e72df120463375" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) bibliographic codes from ISO 639-2 and 639-5, such as 'heb' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Это набор трехбуквенных (строчных)библиографических кодов из ИСО 639-2 и 639-5,таких как &quot;heb&quot; для иврита.Он также включает в себя дополнения к этому набору,включенному в языковой реестр IANA.</target>
        </trans-unit>
        <trans-unit id="b92c48de1f053f976481719f4f81fdeafd62c023" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) codes from ISO 3166-1, such as 'brb' for Barbados. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">Это набор трехбуквенных (строчных)кодов из стандарта ISO 3166-1,таких как 'brb' для Барбадоса.Эти коды фактически определяются и поддерживаются Статистическим отделом ООН.</target>
        </trans-unit>
        <trans-unit id="fc3ae49739721f6f95ec3491951800d9f83ab84d" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) terminologic codes from ISO 639.</source>
          <target state="translated">Это набор трехбуквенных (строчных)терминологических кодов из ISO 639.</target>
        </trans-unit>
        <trans-unit id="e6807d4fe48e31222818be49432ee24ba40f6e11" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 3166-1, such as 'tv' for Tuvalu.</source>
          <target state="translated">Это набор двубуквенных (строчных)кодов из ИСО 3166-1,таких как 'tv' для Тувалу.</target>
        </trans-unit>
        <trans-unit id="acd74dadb16fbf234cd8906af18d327510923daf" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 639-1, such as 'he' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Это набор двубуквенных (строчных)кодов из ISO 639-1,таких как 'he' для иврита.Он также включает в себя дополнения к этому набору,включенному в языковой реестр IANA.</target>
        </trans-unit>
        <trans-unit id="94c349798d0090117d6582dfd31da6381fa814e6" translate="yes" xml:space="preserve">
          <source>This is the standard unix library builder. We use wlib. With Watcom 10.6, when wlib is linked as &quot;ar&quot;, it behaves like ar and all is fine. Under 9.5, a cover is required. One is included in ../qnx</source>
          <target state="translated">Это стандартный конструктор unix-библиотек.Мы используем wlib.В Watcom 10.6,когда wlib связана как &quot;ar&quot;,она ведет себя как ar и все в порядке.Под 9.5 требуется обложка.Одна из них включена в ../qnx.</target>
        </trans-unit>
        <trans-unit id="4298b5ac2d6233992a08de03f4d3419e5f21e00f" translate="yes" xml:space="preserve">
          <source>This is the time string for which the perl binary was compiled. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63d2ff5b62f973d0b02ad27fd22b2f4f908d588" translate="yes" xml:space="preserve">
          <source>This is the true/false value of the test after TODO and similar modifiers are taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58e7a91164b2c61f4741d28ff686a23ffe5c5eb" translate="yes" xml:space="preserve">
          <source>This is the useragent as &lt;code&gt;LWP&lt;/code&gt; will report it.</source>
          <target state="translated">Это агент пользователя, о котором сообщит &lt;code&gt;LWP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15261bed556ba490ce02abc9f071087b0df0d036" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt; .</source>
          <target state="translated">Это версия &lt;code&gt;Test::Harness&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdc8920fd29fd268d61dc44aa12aa06fb0110f8c" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22ff202852862487c229ecb92eca4a84e51119" translate="yes" xml:space="preserve">
          <source>This is to prevent the problem of one module changing the array base out from under another module inadvertently. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;.</source>
          <target state="translated">Это сделано для предотвращения проблемы, связанной с непреднамеренным изменением базы массива одним модулем из-под другого модуля. Смотрите &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$ [в perlvar&lt;/a&gt; и &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd68c145924ef1010d3fbbd465d445886b4ed770" translate="yes" xml:space="preserve">
          <source>This is tremendously more efficient than reading the entire file into memory as an array of lines and then processing it one element at a time, which is often--if not almost always--the wrong approach. Whenever you see someone do this:</source>
          <target state="translated">Это намного эффективнее,чем считывать весь файл в память как массив строк,а затем обрабатывать его по одному элементу за раз,что часто-если не почти всегда-неправильный подход.Всякий раз,когда вы видите,как кто-то делает это:</target>
        </trans-unit>
        <trans-unit id="a35e6506a9b88f457b9f4a865f1ac711f7750ab3" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">Это верно для всех числовых кодов шаблонов. Но не ждите чудес: если упакованное значение превышает выделенную байтовую емкость, старшие биты незаметно отбрасываются, и unpack точно не сможет вытащить их из какой-то волшебной шляпы. И, когда вы упаковываете с использованием подписанного кода шаблона, такого как &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , избыточное значение может привести к установке бита знака, и распаковка этого значения вернет отрицательное значение.</target>
        </trans-unit>
        <trans-unit id="09f7b7fd23faf4943e83ad191dd610755470b274" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;s&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7272df8729202c7ff033cb7fabd9d5f450b6676" translate="yes" xml:space="preserve">
          <source>This is true on Unix, where &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; yields &quot;/a/b&quot; and &lt;code&gt;rootdir()&lt;/code&gt; is &quot;/&quot;. Note that &lt;code&gt;rootdir()&lt;/code&gt; on Mac OS is the startup volume, which is the closest in concept to Unix' &quot;/&quot;. This should help to run existing scripts originally written for Unix.</source>
          <target state="translated">Это верно в Unix, где &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; дает &quot;/ a / b&quot;, а &lt;code&gt;rootdir()&lt;/code&gt; - &quot;/&quot;. Обратите внимание, что &lt;code&gt;rootdir()&lt;/code&gt; в Mac OS - это загрузочный том, который по концепции наиболее близок к Unix &amp;laquo;/&amp;raquo;. Это должно помочь запустить существующие сценарии, изначально написанные для Unix.</target>
        </trans-unit>
        <trans-unit id="397412f4d7a6d97f2f133b4c7f78e290d9cd2f84" translate="yes" xml:space="preserve">
          <source>This is typically used when testing cannot continue such as a critical module failing to compile or a necessary external utility not being available such as a database connection failing.</source>
          <target state="translated">Обычно это используется,когда тестирование не может быть продолжено,например,при сбое компиляции критически важного модуля или отсутствии необходимой внешней утилиты,например,при сбое подключения к базе данных.</target>
        </trans-unit>
        <trans-unit id="bb1c3b06955402418f9a1645b31426cf2675075b" translate="yes" xml:space="preserve">
          <source>This is ugly. As of Perl 5.9.2, there's a much nicer way to express your desire for a certain byte-order: the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers. &lt;code&gt;&amp;gt;&lt;/code&gt; is the big-endian modifier, while &lt;code&gt;&amp;lt;&lt;/code&gt; is the little-endian modifier. Using them, we could rewrite the above code as:</source>
          <target state="translated">Это уродливо. Начиная с Perl 5.9.2, есть гораздо более удобный способ выразить свое желание определенного порядка байтов: модификаторы &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;code&gt;&amp;gt;&lt;/code&gt; - модификатор прямого порядка байтов, а &lt;code&gt;&amp;lt;&lt;/code&gt; - модификатор прямого порядка байтов. Используя их, мы могли бы переписать приведенный выше код как:</target>
        </trans-unit>
        <trans-unit id="f64a4511ee072e665d5896089985a46b9305c064" translate="yes" xml:space="preserve">
          <source>This is used (optionally) by configure to list the contents of libraries. I will generate a cover function on the fly in the UU directory.</source>
          <target state="translated">Это используется (опционально)путем настройки для перечисления содержимого библиотек.Я сгенерирую функцию обложки на лету в каталоге UU.</target>
        </trans-unit>
        <trans-unit id="84060e3f0779377a177060ca53204b2049c61bfc" translate="yes" xml:space="preserve">
          <source>This is used by &lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2::Event::Plan&lt;/a&gt; to exit 0 when the plan is 'skip_all'. This is also used by &lt;a href=&quot;Test2::Event:Bail&quot;&gt;Test2::Event:Bail&lt;/a&gt; to force the test to exit with a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13da45b8fdb5dfbf619cb00d77540e51b9f0de1" translate="yes" xml:space="preserve">
          <source>This is used by Perl itself only for accessing operating system error messages via &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt;.</source>
          <target state="translated">Это используется самим Perl только для доступа к сообщениям об ошибках операционной системы через &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$! &lt;/a&gt;и &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ E&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f57cc2e0a5e98dad21fe0583032325ceef3e8bcf" translate="yes" xml:space="preserve">
          <source>This is used by XS code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function &lt;a href=&quot;http://man.he.net/man3/setlocale&quot;&gt;setlocale(3)&lt;/a&gt; behind its back; calling &lt;a href=&quot;#sync_locale&quot;&gt;&quot;sync_locale&quot;&lt;/a&gt; before calling this macro will update perl's records.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685a67efb688fb26fb65af406110717f25e2b745" translate="yes" xml:space="preserve">
          <source>This is used by XS code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function</source>
          <target state="translated">Это используется кодом XS, который &lt;code&gt;LC_NUMERIC&lt;/code&gt; языковой стандарт LC_NUMERIC, чтобы заставить языковой стандарт для категории &lt;code&gt;LC_NUMERIC&lt;/code&gt; быть тем, что perl считает текущим базовым языковым стандартом. (Интерпретатор perl может ошибаться в том, что на самом деле представляет собой базовый языковой стандарт, если какой-либо код C или XS вызвал функцию библиотеки C.</target>
        </trans-unit>
        <trans-unit id="6e065e9419827f7c0624c9591e7e2d9d64727710" translate="yes" xml:space="preserve">
          <source>This is used by perl to run external commands which explicitly require shell, like the commands using</source>
          <target state="translated">Это используется perl для выполнения внешних команд,которые явно требуют оболочки,например,команд,использующих</target>
        </trans-unit>
        <trans-unit id="64698930b8cfe161fa438c57b55293be0ad5eced" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">Это используется программой &lt;code&gt;perldoc&lt;/code&gt; (см. &lt;a href=&quot;perldoc&quot;&gt;Perldoc&lt;/a&gt; ) и может использоваться для создания HTML-документации, используемой WWW-браузерами, и документации в миллионах других форматов: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; и так далее. [Используйте такие программы, как</target>
        </trans-unit>
        <trans-unit id="8b79fef1f877d1a8e263ce2050957470f7956ed4" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt;, &lt;code&gt;Acrobat&lt;/code&gt;, &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f691385e53ced861147f8d8eef50471ec380ca35" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938e99644f7869851b92cffce88c437cad0e1198" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">Это используется, например, &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89a92812a074e6032ec40db97f0e02dae0db9d29" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;FILE *&lt;/code&gt; structures.</source>
          <target state="translated">Это используется для передачи файловых дескрипторов Perl в C и обратно с использованием структур &lt;code&gt;FILE *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e990faa3bfbeb576a41b956da185db53775fca9a" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;PerlIO *&lt;/code&gt; structures. The file handle can used for reading and writing. This corresponds to the &lt;code&gt;+&amp;lt;&lt;/code&gt; mode, see also T_IN and T_OUT.</source>
          <target state="translated">Это используется для передачи дескрипторов файлов Perl в C и &lt;code&gt;PerlIO *&lt;/code&gt; с использованием структур PerlIO * . Дескриптор файла может использоваться для чтения и записи. Это соответствует режиму &lt;code&gt;+&amp;lt;&lt;/code&gt; , см. Также T_IN и T_OUT.</target>
        </trans-unit>
        <trans-unit id="45afb2cb863a986ba92ff0947755735a5e6d66a7" translate="yes" xml:space="preserve">
          <source>This is used for tests that under some conditions can be skipped. It's basically equivalent to:</source>
          <target state="translated">Это используется для тестов,которые при некоторых условиях можно пропустить.Это в основном эквивалентно:</target>
        </trans-unit>
        <trans-unit id="9e0a9f53f8706ee02f00b4b66258c8d781bdebc5" translate="yes" xml:space="preserve">
          <source>This is used heavily by Configure and then by perl itself. QNX4's version is fine, but Configure will choke on the 16-bit version, so if you are running QNX 4.22, link /bin/sh to /bin32/ksh</source>
          <target state="translated">Это в значительной степени используется конфигурацией,а затем самим perl.Версия QNX4 в порядке,но Configure подавится 16-битной версией,так что если вы используете QNX 4.22,свяжите /bin/sh с /bin32/ksh.</target>
        </trans-unit>
        <trans-unit id="b07dd7d6e8aff5833887dd70ddcb6745a582ec73" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;&quot;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&lt;/a&gt; to properly restore the &lt;code&gt;LC_NUMERIC&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88552389c076b1697dd901849fcd278da90bf901" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</source>
          <target state="translated">Это используется вместе с одним из макросов &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; и &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a76c37bf4c1019b528db2eb84815660835ecca3f" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as &lt;code&gt;sv_setsv&lt;/code&gt;, &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_pvn_force&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b114b6070b2dbbb4c5faa25f40aadc4f1bf209" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as sv_setsv, sv_setiv and sv_pvn_force.</source>
          <target state="translated">Это используется внутри различных sv-модифицирующих функций,таких как sv_setsv,sv_setiv и sv_pvn_force.</target>
        </trans-unit>
        <trans-unit id="493fa4c255c75476c5de3398d669dcb7143cfa2b" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a hub is no longer accepting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it (This is the drivers responsibility to enforce).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfc92a05bf403630dcc4ad4521b54e6866a1941" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a new hub is expecting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2674017b922020ed58a1ae38d38243bb158c698b" translate="yes" xml:space="preserve">
          <source>This is used to convert the perl argument list to a C array and for pushing the contents of a C array onto the perl argument stack.</source>
          <target state="translated">Это используется для преобразования списка аргументов perl в массив C и для переноса содержимого массива C в стек аргументов perl.</target>
        </trans-unit>
        <trans-unit id="d0f5557ac77d434ebd595a2a1706e59ef7b222ff" translate="yes" xml:space="preserve">
          <source>This is used to efficiently decide if the next few bytes in &lt;code&gt;s&lt;/code&gt; is legal Unicode-acceptable UTF-8 for a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7b5e8f4a478685a6595ee53579e42a7ad93748" translate="yes" xml:space="preserve">
          <source>This is used to encapsulate diag messages created inside TODO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b83bcfe3741aa8ea6cddc6c13968e1de17cd570" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to a locale where the decimal radix character is a dot, and the separator between groups of digits is empty. This is because most XS code that reads floating point numbers is expecting them to have this syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfca62a32b70d4bff67e06bed578f950673ab61" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to the C locale by Perl for backwards compatibility, and because most XS code that reads floating point values can cope only with the decimal radix character being a dot.</source>
          <target state="translated">Это используется, чтобы помочь обернуть код XS или C, который зависит от локали &lt;code&gt;LC_NUMERIC&lt;/code&gt; . Эта категория локали обычно устанавливается Perl на локаль C для обратной совместимости, и потому что большая часть кода XS, который считывает значения с плавающей запятой, может справиться только с десятичным символом основания, являющимся точкой.</target>
        </trans-unit>
        <trans-unit id="27a198e65c924e429ea7fa75dae5924d31fa6b88" translate="yes" xml:space="preserve">
          <source>This is used to prevent the use of &lt;code&gt;caller()&lt;/code&gt; in END blocks which can cause segfaults. This is only necessary in some persistent environments that may have multiple END phases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ffe3ce8492ad29999613fc31942e00c100ad7a" translate="yes" xml:space="preserve">
          <source>This is used to set the build type to debug or release. Change the build type only after executing SetNWBld.bat</source>
          <target state="translated">Это используется для установки типа сборки на отладку или выпуск.Изменять тип сборки можно только после выполнения SetNWBld.bat.</target>
        </trans-unit>
        <trans-unit id="d4db27a76c75ff7fc1ed3957a4bdf992bfb4169e" translate="yes" xml:space="preserve">
          <source>This is used to toggle Test2's belief that the END phase has already started. With no arguments this will set it to true. With arguments it will set it to the first argument's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33295dd981a7660fbc204da5e0a0ad1772d342a0" translate="yes" xml:space="preserve">
          <source>This is used to track which tests unexpectedly succeeded.</source>
          <target state="translated">Это используется для отслеживания того,какие тесты неожиданно увенчались успехом.</target>
        </trans-unit>
        <trans-unit id="717574ff9403ecd69bea9a30328bf1a90f831842" translate="yes" xml:space="preserve">
          <source>This is used to write code for styles of operating system. See os_flavor_is() for use.</source>
          <target state="translated">Используется для написания кода для стилей операционной системы.Смотрите функцию os_flavor_is()для использования.</target>
        </trans-unit>
        <trans-unit id="92dd601445cafa868ebbffa5406795a7efb88b1a" translate="yes" xml:space="preserve">
          <source>This is useful for applying names to anonymous CODE references so that stack traces and similar situations, to give a useful name rather than having the default of &lt;code&gt;__ANON__&lt;/code&gt;. Note that this name is only used for this situation; the &lt;code&gt;set_subname&lt;/code&gt; will not install it into the symbol table; you will have to do that yourself if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64fac67cd72a00814ab828e9c9bd92a6463973e" translate="yes" xml:space="preserve">
          <source>This is useful for code like:</source>
          <target state="translated">Это полезно для кода типа:</target>
        </trans-unit>
        <trans-unit id="0a2bc63942e3a80b89ce25e1ac1f8a32f3bda215" translate="yes" xml:space="preserve">
          <source>This is useful for keeping copies of references, but you don't want to prevent the object being DESTROY-ed at its usual time.</source>
          <target state="translated">Это полезно для хранения копий ссылок,но вы не хотите препятствовать тому,чтобы объект был УНИЧТОЖЕН в обычное время.</target>
        </trans-unit>
        <trans-unit id="68748f1b2fdfc815e31f2005d15151ad297531bd" translate="yes" xml:space="preserve">
          <source>This is useful if you don't know which one of a set of alternative patterns matched. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24abff8fd9f42596b61820bc8c96b9b877025034" translate="yes" xml:space="preserve">
          <source>This is useful if you want to repeatedly parse JSON objects and want to ignore any trailing data, which means you have to reset the parser after each successful decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a4e9a54829e179cb44fc85ba544f789e1c2e15" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt; 'ing when the verbose flag is on.</source>
          <target state="translated">Это полезно, если вы хотите сообщить об этом другим способом, кроме как &lt;code&gt;carp&lt;/code&gt; , когда установлен флаг подробного сообщения.</target>
        </trans-unit>
        <trans-unit id="153de877b9bc07e9c5b4ac46607a14b4d6c4da2c" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt;'ing when the verbose flag is on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9238f80fbc3497eb44d341942c244b6a1f8c7d1" translate="yes" xml:space="preserve">
          <source>This is useful if your JSON texts are not delimited by an outer protocol and you need to know where the JSON text ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3180e175adf2fd8ff88aab37691cd4b1c546dfea" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt; ).</source>
          <target state="translated">Это полезно, чтобы избежать блока CODE: для функции C, которая принимает параметр по ссылке. Как правило, параметр не должен быть указателем ( &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;long&lt;/code&gt; , но не &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;long*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f32da9d6ece9275a31f6ad58e26339b4aa05f9a0" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;int*&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242135d43e5e5fb3cfd2e2eb4dedd974f1546560" translate="yes" xml:space="preserve">
          <source>This is useful when a fixed-length buffer is being tested for being well-formed UTF-8, but the final few bytes in it don't comprise a full character; that is, it is split somewhere in the middle of the final code point's UTF-8 representation. (Presumably when the buffer is refreshed with the next chunk of data, the new first bytes will complete the partial code point.) This function is used to verify that the final bytes in the current buffer are in fact the legal beginning of some code point, so that if they aren't, the failure can be signalled without having to wait for the next read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e13765136cecd81d6e3522084679384fb85c0ae" translate="yes" xml:space="preserve">
          <source>This is useful when calculating checksum for files:</source>
          <target state="translated">Это полезно при расчете контрольной суммы для файлов:</target>
        </trans-unit>
        <trans-unit id="7a8a2f33ee6a615c27a87f750d3b6d2a6919cb19" translate="yes" xml:space="preserve">
          <source>This is useful when you want to do the encoding yourself (e.g. when you want to have UTF-16 encoded JSON texts) or when some other layer does the encoding for you (for example, when printing to a terminal using a filehandle that transparently encodes to UTF-8 you certainly do NOT want to UTF-8 encode your data first and have Perl encode it another time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13be01e22159590b48bf995ac0b3bcde5d745a9" translate="yes" xml:space="preserve">
          <source>This is useful when you want to pass a decoded data structure directly to other serialisers like YAML, Data::MessagePack and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acefb224b2e9e2708aa6e9ceef7c0496a9b29d9e" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of &lt;code&gt;close&lt;/code&gt; because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dbd2c8b8aff05e41e7c5996e136b2e52680ad0" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of close because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">Это полезно при использовании разъемов,когда вы хотите сказать другой стороне,что вы закончили писать,но не закончили читать,или наоборот.Это также более настойчивая форма закрытия,потому что она также отключает дескриптор файла в любых вилочных копиях в других процессах.</target>
        </trans-unit>
        <trans-unit id="f513c390b6f7958ee20cf98d8560715b5f8df7bb" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_fcntl that &amp;lt;fcntl.h&amp;gt; should be included.</source>
          <target state="translated">Эта переменная устанавливается в разных местах, чтобы сообщить i_fcntl, что должен быть включен &amp;lt;fcntl.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a219720ed763ff153bf9c4206e6fc4962fcc28fa" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_sys_file that &amp;lt;sys/file.h&amp;gt; should be included.</source>
          <target state="translated">Эта переменная устанавливается в разных местах, чтобы указать i_sys_file, что &amp;lt;sys / file.h&amp;gt; должен быть включен.</target>
        </trans-unit>
        <trans-unit id="ec63ffae64519c04a43508d9591237b500c83426" translate="yes" xml:space="preserve">
          <source>This is very dangerous to push on a handle using an &lt;code&gt;:encoding&lt;/code&gt; layer, as such a layer assumes to be working with Perl's internal upgraded encoding, so you will likely get a mangled result. Instead use &lt;code&gt;:raw&lt;/code&gt; or &lt;code&gt;:pop&lt;/code&gt; to remove encoding layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0989b9613ab7f11b2f2270357953fc855e8dd8" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt; will read a line at a time and output a line at a time. Programs like &lt;a href=&quot;http://man.he.net/man1/sort&quot;&gt;sort(1)&lt;/a&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c48e550cd9137be036063a2bb992fbdc655583" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;b&gt;bc&lt;/b&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;b&gt;bc&lt;/b&gt; will read a line at a time and output a line at a time. Programs like &lt;b&gt;sort&lt;/b&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">Это очень опасно, так как вы можете заблокировать навсегда. Предполагается, что он будет разговаривать с чем-то вроде &lt;b&gt;bc&lt;/b&gt; , как писать, так и читать из него. Это предположительно безопасно, потому что вы &amp;laquo;знаете&amp;raquo;, что такие команды, как &lt;b&gt;bc,&lt;/b&gt; будут читать строку за раз и выводить строку за раз. Однако такие программы, как &lt;b&gt;sort,&lt;/b&gt; которые сначала читают весь свой входной поток, весьма склонны вызывать тупик.</target>
        </trans-unit>
        <trans-unit id="4d27e7008a46081de6bf70cf35ea9983d5762e5e" translate="yes" xml:space="preserve">
          <source>This is very similar to &quot;How do I process an entire hash?&quot;, also in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;, but a bit simpler in the common cases.</source>
          <target state="translated">Это очень похоже на &amp;laquo;Как мне обработать весь хеш?&amp;raquo;, Также в &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; , но немного проще в общих случаях.</target>
        </trans-unit>
        <trans-unit id="e597cd56d56a437656a2f431e5a405bb225ea80c" translate="yes" xml:space="preserve">
          <source>This is very useful if you insist on taking an array reference as argument for example.</source>
          <target state="translated">Это очень полезно,если вы настаиваете на использовании ссылки на массив,например,в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="9ecc6a74af1d686f96a51556930a084f0975a2d7" translate="yes" xml:space="preserve">
          <source>This is what APPNOTE.TXT has to say on what should be stored in the zip filename header field.</source>
          <target state="translated">Вот что должен сказать APPNOTE.TXT о том,что должно храниться в zip поле заголовка файла.</target>
        </trans-unit>
        <trans-unit id="ccdaae868b02e396a128e9209508dfb651981fc3" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;), and</source>
          <target state="translated">Это то, что system () (см. &lt;a href=&quot;functions/system&quot;&gt;System&lt;/a&gt; ), &lt;code&gt;``&lt;/code&gt; (см. &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Операторы ввода-вывода в perlop&lt;/a&gt; ) и</target>
        </trans-unit>
        <trans-unit id="2e2119fd8993283ac1f0a47f57b06a54bbb3f262" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;perlfunc#system&quot;&gt;&quot;system&quot; in perlfunc&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;), and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eda7d1f80cf3c434dc7a7060222b6c89d945e1" translate="yes" xml:space="preserve">
          <source>This is what takes events and turns them into TAP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e5ac17ec3c4ac0ba4b990c6d906bee2bbc734b" translate="yes" xml:space="preserve">
          <source>This is what you really need to know as an XS programmer, of course. When an XSUB returns a pointer to a C structure that pointer is stored in an SV and a reference to that SV is placed on the XSUB stack. So the output from an XSUB which uses something like the T_PTROBJ map might look something like this:</source>
          <target state="translated">Это то,что вам действительно нужно знать как программисту XS,конечно.Когда XSUB возвращает указатель на структуру C,этот указатель хранится в SV,и ссылка на этот SV помещается на стек XSUB.Поэтому вывод из XSUB,который использует что-то вроде карты T_PTROBJ,может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="4310f6ad3f6095c3049af8ec37cf9d1c7e8bca42" translate="yes" xml:space="preserve">
          <source>This is when the firewall implemented in the kernel (via NAT, or networking address translation), it allows you to hide a complete network behind one IP address. With this firewall no special compiling is needed as you can access hosts directly.</source>
          <target state="translated">В этом случае брандмауэр,реализованный в ядре (через NAT или трансляцию сетевых адресов),позволяет скрыть всю сеть за одним IP-адресом.При использовании этого брандмауэра специальная компиляция не требуется,так как вы можете получить прямой доступ к узлам.</target>
        </trans-unit>
        <trans-unit id="fb3eba7f97ab07f3173100c09ae1ea0eedcc95ab" translate="yes" xml:space="preserve">
          <source>This is when the firewall machine runs a web server, and to access the outside world, you must do so via that web server. If you set environment variables like http_proxy or ftp_proxy to values beginning with http://, or in your web browser you've proxy information set, then you know you are running behind an http firewall.</source>
          <target state="translated">Это когда на машине брандмауэра работает веб-сервер,и чтобы получить доступ к внешнему миру,вы должны сделать это через этот веб-сервер.Если вы устанавливаете переменные окружения,такие как http_proxy или ftp_proxy,на значения,начинающиеся с http://,или в вашем веб-браузере вы установили информацию о прокси,то вы знаете,что работаете за http-брандмауэром.</target>
        </trans-unit>
        <trans-unit id="75c3d5cffa21770fa5fe6937e649710847afafb8" translate="yes" xml:space="preserve">
          <source>This is when you see something like:</source>
          <target state="translated">Это когда ты видишь что-то вроде:</target>
        </trans-unit>
        <trans-unit id="7241b1fe1bce66db853a8d9b85416133eff0f6db" translate="yes" xml:space="preserve">
          <source>This is where all events enter the hub for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837053e5aa9e97ca4eca0f75fa58885b37dbdc1f" translate="yes" xml:space="preserve">
          <source>This is where gotchas and breakages related to the Test2 upgrade are documented. The upgrade causes Test::Builder to defer to Test2 under the hood. This transition is mostly transparent, but there are a few cases that can trip you up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad104027af291dcad88bf06901ecbc700b85cc1" translate="yes" xml:space="preserve">
          <source>This is where roles come in. It makes a lot of sense to create a &lt;code&gt;HasOnOffSwitch&lt;/code&gt; role and apply it to both classes. This role would define a known API like providing &lt;code&gt;turn_on()&lt;/code&gt; and &lt;code&gt;turn_off()&lt;/code&gt; methods.</source>
          <target state="translated">Здесь на &lt;code&gt;HasOnOffSwitch&lt;/code&gt; приходят роли. Имеет большой смысл создать роль HasOnOffSwitch и применить ее к обоим классам. Эта роль будет определять известный API, например, предоставление &lt;code&gt;turn_on()&lt;/code&gt; и &lt;code&gt;turn_off()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4320c9ea9a75ef79b1c739e5fcf494dc9cfb50f4" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. In this case, the socket handle returned will be connected to a TCP socket, because we want a stream-oriented connection, that is, one that acts pretty much like a plain old file. Not all sockets are this of this type. For example, the UDP protocol can be used to make a datagram socket, used for message-passing.</source>
          <target state="translated">Вот какой протокол использовать.В этом случае возвращаемый хэндл сокета будет подключен к TCP сокету,потому что нам нужно поточно-ориентированное соединение,т.е.такое,которое будет действовать практически как обычный старый файл.Не все сокеты такого типа.Например,UDP-протокол может использоваться для создания сокета-датаграммы,используемого для передачи сообщений.</target>
        </trans-unit>
        <trans-unit id="30ceb66515d4a53e1d2f25ce989ec733d96ff6db" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. Like our clients, we'll still specify &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; here.</source>
          <target state="translated">Вот какой протокол использовать. Как и наши клиенты, мы по-прежнему указываем здесь &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04d23d996b25b2c2795e313433104ffdca7710c6" translate="yes" xml:space="preserve">
          <source>This is, I hope, a natural term given the implementation, and should avoid connotations that are inherent in earlier uses of &quot;discipline&quot; for things which are rather different.</source>
          <target state="translated">Это,я надеюсь,естественный термин,учитывая его применение,и он должен избегать коннотаций,которые присущи более раннему использованию &quot;дисциплины&quot; для вещей,которые довольно отличаются друг от друга.</target>
        </trans-unit>
        <trans-unit id="921e3efa52591567d6779d551efd563ccc94a973" translate="yes" xml:space="preserve">
          <source>This isn't as simple a question as it sounds. There are two parts:</source>
          <target state="translated">Это не такой простой вопрос,как кажется.Есть две части:</target>
        </trans-unit>
        <trans-unit id="c2dda0261888bf6471240acf321fd52c01dc23ec" translate="yes" xml:space="preserve">
          <source>This issues a warning at the frame (filename and line number where errors should be reported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033f6ccbcb480bbc0ac7d9079cba07009a6cd094" translate="yes" xml:space="preserve">
          <source>This item specifies the name by which the linker knows the extension, which may be different from the name of the extension itself (for instance, some linkers add an '_' to the name of the extension). If it is not specified, it is derived from the NAME attribute. It is presently used only by OS2 and Win32.</source>
          <target state="translated">Этот элемент определяет имя,по которому компоновщик знает расширение,которое может отличаться от имени самого расширения (например,некоторые компоновщики добавляют '_' к имени расширения).Если оно не указано,то происходит от атрибута NAME.В настоящее время оно используется только в OS2 и Win32.</target>
        </trans-unit>
        <trans-unit id="d17e4bc352cfe7c72913c884191bd7c2a2036595" translate="yes" xml:space="preserve">
          <source>This key allows for variable weighting of variable collation elements, which are marked with an ASTERISK in the table (NOTE: Many punctuation marks and symbols are variable in</source>
          <target state="translated">Этот ключ позволяет изменять вес переменных элементов сравнения,которые в таблице отмечены знаком ASTERISK (ПРИМЕЧАНИЕ:Многие знаки препинания и символы переменные в</target>
        </trans-unit>
        <trans-unit id="cb089e180f4d1e1151abdbf8ed66a17ba5f2e56e" translate="yes" xml:space="preserve">
          <source>This key can be used to specify the name of the linker option file (minus the OS-specific extension), if for some reason you do not want to use the default value, which is the last word of the NAME attribute (</source>
          <target state="translated">Этот ключ может быть использован для указания имени файла опций компоновщика (за вычетом расширения,специфичного для ОС),если по какой-то причине вы не хотите использовать значение по умолчанию,которое является последним словом атрибута NAME (</target>
        </trans-unit>
        <trans-unit id="6dc6a49c5fb309cc8a7f7ab658d2498baeeb643a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt; , and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt; . The setter macro is given cv, and the function pointer.</source>
          <target state="translated">Это ключевое слово позволяет определить ИНТЕРФЕЙС, используя другой способ извлечения указателя на функцию из XSUB. Текст, следующий за этим ключевым словом, должен давать имя макроса, который будет извлекать / устанавливать указатель функции. &lt;code&gt;XSANY.any_dptr&lt;/code&gt; экстрактора присваивается возвращаемый тип &lt;code&gt;CV*&lt;/code&gt; и XSANY.any_dptr для этого &lt;code&gt;CV*&lt;/code&gt; . Макросу установки присваивается cv и указатель функции.</target>
        </trans-unit>
        <trans-unit id="7f48406b453547a477c2699e1f259b5c4ed7e06a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt;, and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt;. The setter macro is given cv, and the function pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb4e29be94617115ad887f08c53a3d0726b0bcf" translate="yes" xml:space="preserve">
          <source>This keyword can be used to pull other files into the XS module. The other files may have XS code. INCLUDE: can also be used to run a command to generate the XS code to be pulled into the module.</source>
          <target state="translated">Это ключевое слово может быть использовано для переноса других файлов в модуль XS.Другие файлы могут иметь код XS.INCLUDE:может также использоваться для выполнения команды для генерации XS-кода,который будет втянут в модуль.</target>
        </trans-unit>
        <trans-unit id="7ed11759f14ddd60bb197c65bf243efdd708cc88" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special cleanup procedures before it terminates. When the CLEANUP: keyword is used it must follow any CODE:, or OUTPUT: blocks which are present in the XSUB. The code specified for the cleanup block will be added as the last statements in the XSUB.</source>
          <target state="translated">Это ключевое слово может быть использовано,когда XSUB требует специальных процедур очистки перед его окончанием.При использовании ключевого слова CLEANUP:оно должно следовать любому блоку CODE:или OUTPUT:,которые присутствуют в XSUB.Код,указанный для блока очистки,будет добавлен в качестве последнего утверждения в XSUB.</target>
        </trans-unit>
        <trans-unit id="7ea24ab5d7dbe276068f1e0046e6f8d0e31be74b" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special procedures executed after the C subroutine call is performed. When the POSTCALL: keyword is used it must precede OUTPUT: and CLEANUP: blocks which are present in the XSUB.</source>
          <target state="translated">Это ключевое слово может быть использовано,когда XSUB требует выполнения специальных процедур после вызова подпрограммы С.При использовании ключевого слова POSTCALL:оно должно предшествовать блокам OUTPUT:и CLEANUP:,которые присутствуют в XSUB.</target>
        </trans-unit>
        <trans-unit id="ae2e5d68051ec8479ea84ba54d17bcf4606d62cb" translate="yes" xml:space="preserve">
          <source>This keyword declares the current XSUB as a keeper of the given calling signature. If some text follows this keyword, it is considered as a list of functions which have this signature, and should be attached to the current XSUB.</source>
          <target state="translated">Это ключевое слово объявляет текущий XSUB в качестве хранителя данной вызывающей подписи.Если некоторый текст следует за этим ключевым словом,то он рассматривается как список функций,которые имеют эту сигнатуру,и должен быть прикреплен к текущему XSUB.</target>
        </trans-unit>
        <trans-unit id="58666c3be919a203268b54d032b3c1bf1338cbb5" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только при включенной функции &lt;code&gt;&quot;fc&quot;&lt;/code&gt; или при наличии префикса &lt;code&gt;CORE::&lt;/code&gt; ; См. &lt;a href=&quot;../feature&quot;&gt;Особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; в текущую область &lt;a href=&quot;use&quot;&gt;использование&lt;/a&gt; версии 5.16 или более поздней.</target>
        </trans-unit>
        <trans-unit id="42d2aecd2684fd64241ade61155e375dd422775d" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только при включенной функции &lt;code&gt;&quot;fc&quot;&lt;/code&gt; или при наличии префикса &lt;code&gt;CORE::&lt;/code&gt; ; См. &lt;a href=&quot;feature&quot;&gt;Особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; в текущую область &lt;a href=&quot;functions/use&quot;&gt;использование&lt;/a&gt; версии 5.16 или более поздней.</target>
        </trans-unit>
        <trans-unit id="f176175c36b805a68ac4fb3277c81ce3879ff21b" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только в том случае, если включена функция &lt;code&gt;&quot;say&quot;&lt;/code&gt; или с префиксом &lt;code&gt;CORE::&lt;/code&gt; ; см. &lt;a href=&quot;../feature&quot;&gt;особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; в текущую область &lt;a href=&quot;use&quot;&gt;использование&lt;/a&gt; версии 5.10 или более поздней.</target>
        </trans-unit>
        <trans-unit id="7248453615df5e8da2ccdbead940326c86edd409" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только в том случае, если включена функция &lt;code&gt;&quot;say&quot;&lt;/code&gt; или с префиксом &lt;code&gt;CORE::&lt;/code&gt; ; см. &lt;a href=&quot;feature&quot;&gt;особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; в текущую область &lt;a href=&quot;functions/use&quot;&gt;использование&lt;/a&gt; версии 5.10 или более поздней.</target>
        </trans-unit>
        <trans-unit id="4ef9d8d4891aa770100745063fafba75dd87bbdc" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово задокументировано &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;в разделе Автозагрузка в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="229a0bb1d79c36394d404c5fc720a5812d12707b" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017edb25f20d66cd7958f76d9e8eba1497b2b334" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово задокументировано &lt;a href=&quot;perlsub#Autoloading&quot;&gt;в разделе Автозагрузка в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b17b66d48631c7667c9941d17b69ddf9ef0b49" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово включено функцией &lt;code&gt;&quot;switch&quot;&lt;/code&gt; ; см. &lt;a href=&quot;../feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации о &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . Вы также можете получить к нему доступ, добавив к нему префикс &lt;code&gt;CORE::&lt;/code&gt; . В качестве альтернативы можно включить в текущую область &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; или новее.</target>
        </trans-unit>
        <trans-unit id="bcf1ac4839e0d0322a8d99444375f29015dd872d" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово включено функцией &lt;code&gt;&quot;switch&quot;&lt;/code&gt; ; см. &lt;a href=&quot;feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации о &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . Вы также можете получить к нему доступ, добавив к нему префикс &lt;code&gt;CORE::&lt;/code&gt; . В качестве альтернативы можно включить в текущую область &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; или новее.</target>
        </trans-unit>
        <trans-unit id="fd72e5a6d62fb1267e4d76dc2f0ed5b89e4e353f" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;&quot;Prototypes&quot; in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29762772c48cba2696e2ebbb42e9c2d4888e7318" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">Это ключевое слово похоже на ключевое слово PROTOTYPES: выше, но может использоваться, чтобы заставить &lt;b&gt;xsubpp&lt;/b&gt; использовать определенный прототип для XSUB. Это ключевое слово отменяет все другие параметры и ключевые слова прототипа, но влияет только на текущий XSUB. Проконсультируйтесь с &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes в perlsub&lt;/a&gt; для получения информации о прототипах Perl.</target>
        </trans-unit>
        <trans-unit id="85b8915eb7407eed5e4863e8fa3af3a2f3aafc0d" translate="yes" xml:space="preserve">
          <source>This keyword is used in more complicated XSUBs which require special handling for the C function. The RETVAL variable is still declared, but it will not be returned unless it is specified in the OUTPUT: section.</source>
          <target state="translated">Это ключевое слово используется в более сложных XSUB,которые требуют специальной обработки для функции C.Переменная RETVAL все еще объявлена,но она не будет возвращена,если не будет указана в разделе OUTPUT:.</target>
        </trans-unit>
        <trans-unit id="aa7963343b84df8b23c604395808970c0e2420a5" translate="yes" xml:space="preserve">
          <source>This keyword makes sense only if &lt;code&gt;RETVAL&lt;/code&gt; is going to be accessed by the user-supplied code. It is especially useful to make a function interface more Perl-like, especially when the C return value is just an error condition indicator. For example,</source>
          <target state="translated">Это ключевое слово имеет смысл только в том случае, если к &lt;code&gt;RETVAL&lt;/code&gt; будет обращаться пользовательский код. Особенно полезно сделать интерфейс функций более похожим на Perl, особенно когда возвращаемое значение C является просто индикатором состояния ошибки. Например,</target>
        </trans-unit>
        <trans-unit id="b1b52e23340e03d5e2d9ec935c2b222b8a59f7e3" translate="yes" xml:space="preserve">
          <source>This keyword may be used any time after the first MODULE keyword and should appear on a line by itself. The first blank line after the keyword will terminate the code block.</source>
          <target state="translated">Это ключевое слово может быть использовано в любое время после первого МОДУЛЯ и должно появляться в строке само по себе.Первая пустая строка после ключевого слова будет завершать блок кода.</target>
        </trans-unit>
        <trans-unit id="8c3c885b0fa12332744123cf10bb6f10b80fe29e" translate="yes" xml:space="preserve">
          <source>This keyword should follow the PACKAGE keyword when used. If PACKAGE is not used then PREFIX should follow the MODULE keyword.</source>
          <target state="translated">Это ключевое слово должно следовать за ключевым словом PACKAGE при его использовании.Если ПАКЕТ не используется,то PREFIX должен следовать ключевому слову МОДУЛЬ.</target>
        </trans-unit>
        <trans-unit id="febcd526951ded918c85fd19d9088e687e73cc02" translate="yes" xml:space="preserve">
          <source>This keyword will normally be used to complement the CODE: keyword. The RETVAL variable is not recognized as an output variable when the CODE: keyword is present. The OUTPUT: keyword is used in this situation to tell the compiler that RETVAL really is an output variable.</source>
          <target state="translated">Это ключевое слово обычно используется для дополнения CODE:.Переменная RETVAL не распознается как выходная переменная при наличии ключевого слова CODE:.Ключевое слово OUTPUT:используется в этой ситуации,чтобы сказать компилятору,что RETVAL действительно является выходной переменной.</target>
        </trans-unit>
        <trans-unit id="cb6c35b047be04a4c7f82192e6412bfe49f97ba3" translate="yes" xml:space="preserve">
          <source>This last example is purely for purposes of completeness. You should not be trying to mess with the attributes of something in a package that's not your own.</source>
          <target state="translated">Этот последний пример приведен исключительно в целях полноты.Вы не должны пытаться испортить атрибуты чего-то в пакете,который вам не принадлежит.</target>
        </trans-unit>
        <trans-unit id="912ca0c2e267a94ac06e924425736641ec8ba084" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it. This is allowed because &lt;code&gt;/xx&lt;/code&gt; is automatically turned on within this construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862d993f36bd27f44699b4c5102357c5ca816339" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it; &lt;code&gt;/x&lt;/code&gt; is turned on even within bracketed character classes, except you can't have comments inside them. Hence,</source>
          <target state="translated">В этом последнем примере показано использование этой конструкции для указания обычного класса символов в квадратных скобках без дополнительных операций над множествами. Обратите внимание на белое пространство внутри него; &lt;code&gt;/x&lt;/code&gt; включен даже в классах символов в квадратных скобках, за исключением того, что внутри них не может быть комментариев. Следовательно,</target>
        </trans-unit>
        <trans-unit id="9220dfc1805deb030c183292c9d16a65be2d81b4" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , and &lt;code&gt;$Etc&lt;/code&gt; . The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">Этот последний пример расщепляется &lt;code&gt;$foo&lt;/code&gt; в первых двух слов , а остальную часть линии, и присваивает эти три поля &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , и &lt;code&gt;$Etc&lt;/code&gt; . Условие истинно, если были присвоены какие-либо переменные; то есть, если образец совпал.</target>
        </trans-unit>
        <trans-unit id="28beb0fd6f81e4104dcda83e789966269c55d353" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt;, &lt;code&gt;$F2&lt;/code&gt;, and &lt;code&gt;$Etc&lt;/code&gt;. The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e7606501a4d8dcdc827582f8772dc7d2f7c727" translate="yes" xml:space="preserve">
          <source>This last one is present only in perl 5.22.0 and higher.</source>
          <target state="translated">Последняя присутствует только в perl 5.22.0 и выше.</target>
        </trans-unit>
        <trans-unit id="71d99570ae143a5a3edf0f9d507ad7328c03cf89" translate="yes" xml:space="preserve">
          <source>This latter is improper because when the &quot;=end outer&quot; command is seen, the currently open region has the formatname &quot;inner&quot;, not &quot;outer&quot;. (It just happens that &quot;outer&quot; is the format name of a higher-up region.) This is an error. Processors must by default report this as an error, and may halt processing the document containing that error. A corollary of this is that regions cannot &quot;overlap&quot;. That is, the latter block above does not represent a region called &quot;outer&quot; which contains X and Y, overlapping a region called &quot;inner&quot; which contains Y and Z. But because it is invalid (as all apparently overlapping regions would be), it doesn't represent that, or anything at all.</source>
          <target state="translated">Последнее неправильно,потому что при выполнении команды &quot;=end outer&quot; открытая область имеет имя формата &quot;внутренний&quot;,а не &quot;внешний&quot;.(Просто бывает,что &quot;outer&quot;-это имя формата вышестоящей области.)Это ошибка.Процессоры должны по умолчанию сообщить об этом как об ошибке и могут прекратить обработку документа,содержащего эту ошибку.Следствием этого является то,что регионы не могут &quot;накладываться друг на друга&quot;.То есть последний блок выше не представляет регион,называемый &quot;внешним&quot;,который содержит X и Y,перекрывающий регион,называемый &quot;внутренним&quot;,который содержит Y и Z.Но поскольку он недействителен (как и все,видимо,перекрывающиеся области),то он не представляет этого,или чего-либо еще.</target>
        </trans-unit>
        <trans-unit id="329baa8ca56fa0cbccaada8dac24e7d11eab4ae6" translate="yes" xml:space="preserve">
          <source>This layer (which actually sets a flag on the preceding layer, and is implicitly set by any &lt;code&gt;:encoding&lt;/code&gt; layer) does not translate or validate byte sequences. It instead indicates that the byte stream will have been arranged by other layers to be provided in Perl's internal upgraded encoding, which Perl code (and correctly written XS code) will interpret as decoded Unicode characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d7417365f82f63b9e8e59a7e5f2cdf78946771" translate="yes" xml:space="preserve">
          <source>This layer does &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; operations by mmap()ing the file if possible, but falls back to the default behavior if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8db66183eb60025ea9a2964bbf14f04f11348c" translate="yes" xml:space="preserve">
          <source>This layer provides a PerlIO interface by wrapping system's ANSI C &quot;stdio&quot; library calls. The layer provides both buffering and IO. Note that the &lt;code&gt;:stdio&lt;/code&gt; layer does</source>
          <target state="translated">Этот уровень предоставляет интерфейс PerlIO, обертывая системные вызовы библиотеки ANSI C &quot;stdio&quot;. Уровень обеспечивает как буферизацию, так и ввод-вывод. Обратите внимание, что слой &lt;code&gt;:stdio&lt;/code&gt; делает</target>
        </trans-unit>
        <trans-unit id="b630c4528c6aff17852e4e3ca55c2d5a2c70831c" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma,</source>
          <target state="translated">Это приводит к двум другим отличиям. Поскольку возвращается одна кодовая точка, функция не может обрабатывать именованные последовательности символов, поскольку они состоят из нескольких символов ( для них она возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . И кодовой точкой может быть любой символ, даже те, которые не допустимо при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; прагмы байтов ,</target>
        </trans-unit>
        <trans-unit id="4878f92b6bf138d4cb047d57550f50b02dd06d3b" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;undef&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;use bytes&lt;/code&gt; pragma,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5aa1dc9dac018985cded1aa3e48ced88d449905" translate="yes" xml:space="preserve">
          <source>This lets you build and send a V2 event directly from facets. The event is returned after it is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bfaca7128553729771ae3288647f98ec9ca08e" translate="yes" xml:space="preserve">
          <source>This lets you build and send an event of any type. The &lt;code&gt;$Type&lt;/code&gt; argument should be the event package name with &lt;code&gt;Test2::Event::&lt;/code&gt; left off, or a fully qualified package name prefixed with a '+'. The event is returned after it is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60f65e26f1f4e74963a10d1932144990bf5f1a5" translate="yes" xml:space="preserve">
          <source>This lets you override an existing type with your own custom type, or register a completely new type, eg:</source>
          <target state="translated">Это позволяет переопределить существующий тип с вашим собственным пользовательским типом,или зарегистрировать совершенно новый тип,например:</target>
        </trans-unit>
        <trans-unit id="79e5d41dc2a646a1022f4533cf9e2ddc99e2b27f" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called &lt;b&gt;ONLY&lt;/b&gt; if your call to &lt;code&gt;context()&lt;/code&gt; generated a new context. The callback &lt;b&gt;WILL NOT&lt;/b&gt; be called if &lt;code&gt;context()&lt;/code&gt; is returning an existing context. The only argument passed into the callback will be the context object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fc392b63db228eb7f664add00b8a9c2d85ff42" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called when the context instance is released. This callback will be added to the returned context even if an existing context is returned. If multiple calls to context add callbacks, then all will be called in reverse order when the context is finally released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbcd61ebbafca13e92af49c5fcc25ec65159f85" translate="yes" xml:space="preserve">
          <source>This lets you see the order in which the events were sent, unlike &lt;code&gt;intercept { ... }&lt;/code&gt; which only lets you see events as the main hub sees them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563b80ae5c4cc2c80ac1a748d6ab409b86b5a4b5" translate="yes" xml:space="preserve">
          <source>This lets you send an &lt;a href=&quot;Test2::Event::Fail&quot;&gt;Test2::Event::Fail&lt;/a&gt; event. You may optionally provide a &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;@diagnostics&lt;/code&gt; messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afaf78f703df78ea1b2a3a94074c1f6af7d070b" translate="yes" xml:space="preserve">
          <source>This level of sophistication puts filtering out of the reach of many programmers.</source>
          <target state="translated">Такой уровень сложности делает фильтрацию недоступной для многих программистов.</target>
        </trans-unit>
        <trans-unit id="96b38d379d8ea7799ed19600bd96b2cf3c932e45" translate="yes" xml:space="preserve">
          <source>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">Эта библиотека распространяется в надежде,что она будет полезной,но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ;даже без подразумеваемой гарантии ТОВАРНОЙ ПРИГОДНОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНЫХ ЦЕЛЕЙ.Более подробная информация приведена в Стандартной Общественной Лицензии GNU.</target>
        </trans-unit>
        <trans-unit id="5235941a62b852074a7c3e9fc51537a52e5be7a3" translate="yes" xml:space="preserve">
          <source>This library is free software. You can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением.Вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="e845c8ea27e93059361918a289ad292cdfcb8508" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.10.0 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f877037944f8c1888cbf64249275515c89dec317" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.7 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl,либо Perl версии 5.8.7,либо,по вашему выбору,любую более позднюю версию Perl 5,которая может быть вам доступна.</target>
        </trans-unit>
        <trans-unit id="59869bc853c079c70b9f3b6879026f6cde3bb8df" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="95bf2cec5fb49eb84ad57753eb4accbc37f2ba0f" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять и/или изменять ее на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="5912c0244d5e6338722acbdad50efbccb8883b11" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="40333c6cc505a0d3e27434bb83dfca9627c9c8f9" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool (distributed as part of the App-find2perl CPAN distribution), which when fed,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f410cd597bbeaeb5f199c6d8d09628b5554744f" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool, which when fed,</source>
          <target state="translated">Эта библиотека полезна для инструмента &lt;code&gt;find2perl&lt;/code&gt; , который при загрузке</target>
        </trans-unit>
        <trans-unit id="c0bf3b785ab345744e2dfb1b0071fc64c2b599fe" translate="yes" xml:space="preserve">
          <source>This library provides functions for common tasks involving language tags as they are needed in a variety of protocols and applications.</source>
          <target state="translated">Эта библиотека предоставляет функции для общих задач,связанных с языковыми тегами,так как они необходимы в различных протоколах и приложениях.</target>
        </trans-unit>
        <trans-unit id="f1885a10472534bbc801de451233880b8db2b1d7" translate="yes" xml:space="preserve">
          <source>This library provides stubs for the functions marked as [CORE] in &lt;a href=&quot;win32&quot;&gt;Win32&lt;/a&gt;. See that document for usage information. When any of these functions are called, the full Win32 module is loaded automatically. It is preferred that callers of these functions explicitly &lt;code&gt;use Win32;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8a7928010093d74c8591010b017561f0beda8e" translate="yes" xml:space="preserve">
          <source>This library provides support for big integer calculations. It is not intended to be used by other modules. Other modules which support the same API (see below) can also be used to support Math::BigInt, like Math::BigInt::GMP and Math::BigInt::Pari.</source>
          <target state="translated">Эта библиотека обеспечивает поддержку вычислений с большими целыми числами.Она не предназначена для использования другими модулями.Другие модули,поддерживающие тот же API (см.ниже),также могут использоваться для поддержки Math::BigInt,например Math::BigInt::GMP и Math::BigInt::Pari.</target>
        </trans-unit>
        <trans-unit id="a3eb497d536b5c644bfd0b5d3e8c9055b4a9a57d" translate="yes" xml:space="preserve">
          <source>This limitation arises from fundamental technical difficulties in cloning and restarting the stacks used by the Perl parser in the middle of a parse.</source>
          <target state="translated">Это ограничение связано с фундаментальными техническими трудностями при клонировании и перезапуске штабелей,используемых парсером Perl в середине разбора.</target>
        </trans-unit>
        <trans-unit id="5fe79b21d14490122d11b41cbba492989dbd2358" translate="yes" xml:space="preserve">
          <source>This limitation might be removed in a future version of perl.</source>
          <target state="translated">Это ограничение может быть снято в будущей версии perl.</target>
        </trans-unit>
        <trans-unit id="68a6939633ab7f637a699e2abcb07f19152f1003" translate="yes" xml:space="preserve">
          <source>This line is taken from &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; 3.04, and marks it as deprecated beyond Perl 5.16. If you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; in Perl 5.18, for example, and you have used &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;, then you'll get a warning message (the deprecate module looks to see whether the calling module was &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;'d from a core library directory, and if so, generates a warning), unless you've installed a more recent version of &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; from CPAN.</source>
          <target state="translated">Эта строка взята из &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; 3.04 и помечает ее как устаревшую после Perl 5.16. Если вы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; в Perl 5.18, например, и вы использовали &lt;a href=&quot;warnings&quot;&gt;предупреждение&lt;/a&gt; , то вы получите предупреждающее сообщение (то принизить модуль смотрит , был ли вызывающий модуль &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; &amp;laquo;d из каталога основной библиотеки, и если да, генерирует предупреждение), если вы не установили более свежую версию &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; из CPAN.</target>
        </trans-unit>
        <trans-unit id="8aa26d9d42b4368a2ea1e0d808d08013501b95e4" translate="yes" xml:space="preserve">
          <source>This list can be extended by either blacklisting additional &quot;known bad&quot; methods, or whitelisting only &quot;known good&quot; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4d9656ee66f6221eea8c2856144cdf8d5022fd" translate="yes" xml:space="preserve">
          <source>This list includes architecture-dependent directories back to version $api_versionstring (e.g. 5.5.640) and architecture-independent directories all the way back to 5.005.</source>
          <target state="translated">Этот список включает в себя архитектурно-независимые каталоги,вернувшиеся к версии $api_versionstring (например,5.5.640),и архитектурно-независимые каталоги,вернувшиеся к версии 5.005.</target>
        </trans-unit>
        <trans-unit id="2a2fc6936d401079e1014279fe24282359b2ced4" translate="yes" xml:space="preserve">
          <source>This list is in alphabetical order by English name of the language.</source>
          <target state="translated">Этот список составлен в алфавитном порядке по английскому названию языка.</target>
        </trans-unit>
        <trans-unit id="0eb2c698e22fab613c0295cd186a49d231f78c73" translate="yes" xml:space="preserve">
          <source>This list is not as definitive as it may appear (or be claimed to be in other documentation). For example, &lt;code&gt;&quot;#&quot;&lt;/code&gt; is a metacharacter only when the &lt;code&gt;/x&lt;/code&gt; pattern modifier (described below) is used, and both &lt;code&gt;&quot;}&quot;&lt;/code&gt; and &lt;code&gt;&quot;]&quot;&lt;/code&gt; are metacharacters only when paired with opening &lt;code&gt;&quot;{&quot;&lt;/code&gt; or &lt;code&gt;&quot;[&quot;&lt;/code&gt; respectively; other gotchas apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9439512245a21874bebe9bdb6ca9f21d2c823dcb" translate="yes" xml:space="preserve">
          <source>This list is subject to change, but is quite unlikely to. Each ASCII sequence can be any combination of upper- and lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc78c3347e34ef8b4193dfb718a45521c4ab8d4" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;Perl Functions by Category in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">Этот список категорий используется для создания того же порядка, что и &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;функции Perl по категориям в&lt;/a&gt; разделе perlfunc .</target>
        </trans-unit>
        <trans-unit id="08880758fdfe951040b4a3fc486563eceb7ef61e" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;perlfunc#Perl-Functions-by-Category&quot;&gt;&quot;Perl Functions by Category&quot; in perlfunc&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d8392d22aa3f9f1cc5418d2f71d3d9b55240c2" translate="yes" xml:space="preserve">
          <source>This list used to contain :base_io prior to Opcode 1.07.</source>
          <target state="translated">Этот список содержал :base_io до Opcode 1.07.</target>
        </trans-unit>
        <trans-unit id="f6d74c66919ae745b2d3650dc11a98193dcd5f79" translate="yes" xml:space="preserve">
          <source>This load time hit can be a problem when startup speed is important, such as with a command-line script or a &quot;plain vanilla&quot; CGI script that must be loaded each time it is executed.</source>
          <target state="translated">Этот удар по времени загрузки может быть проблемой,когда скорость загрузки важна,например,с помощью CGI-скрипта командной строки или &quot;просто ванильного&quot; CGI-скрипта,который должен загружаться каждый раз,когда он выполняется.</target>
        </trans-unit>
        <trans-unit id="f016e1379d18764668778064a6a84ece9741d1da" translate="yes" xml:space="preserve">
          <source>This logical name must be defined before Perl is started.</source>
          <target state="translated">Это логическое имя должно быть определено перед запуском Perl.</target>
        </trans-unit>
        <trans-unit id="2da9ead2fb770925df3e972a0efa2a82cbbd6ec6" translate="yes" xml:space="preserve">
          <source>This looks in the %Lexicon of the language handle $lh and all its superclasses, looking for an entry whose key is the string</source>
          <target state="translated">Это выглядит в %Lexicon языкового дескриптора $lh и всех его суперклассов,ищущего запись,ключом которой является строка</target>
        </trans-unit>
        <trans-unit id="6b4001bd2a1ae040dc8e95119817ede264954c05" translate="yes" xml:space="preserve">
          <source>This loses precision, to avoid this use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; instead.</source>
          <target state="translated">Это теряет точность, чтобы избежать использования &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int ()&lt;/a&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="2cb2a7c80cbcd1bcc850e8fe88a609a4116cf1c4" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">Эта машина родной сверка (что вы получите , если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; не появилась ранее в том же блоке) должна быть использована для сортировки сырых двоичных данных, в то время как Локальнозависимая сверка первого примера полезна для естественного текста.</target>
        </trans-unit>
        <trans-unit id="ed86d270c34efc62d89708174f71255637599c7d" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;use locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9b1418e4cf2456d34c78acbb912d03460323b0" translate="yes" xml:space="preserve">
          <source>This macro automatically adjusts the stack for you, if needed. Thus, you do not need to call &lt;code&gt;EXTEND&lt;/code&gt; to extend the stack.</source>
          <target state="translated">Этот макрос автоматически настраивает стек за вас, если необходимо. Таким образом, вам не нужно вызывать &lt;code&gt;EXTEND&lt;/code&gt; для расширения стека.</target>
        </trans-unit>
        <trans-unit id="03eb53576978d347f479b9ace06d68ed559f1850" translate="yes" xml:space="preserve">
          <source>This macro evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are from this UTF-8 extension; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87701b9dd5d8a0667150a21e302c3f738b0c69c4" translate="yes" xml:space="preserve">
          <source>This macro invokes the supplied statement or block within the context of a &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; .. &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; pair if required, so eg:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0683190e9b9e040d58492b89f4c05059f16d5d" translate="yes" xml:space="preserve">
          <source>This macro is intended to be used by XS modules where the inputs could be malformed, and it isn't feasible to restructure to use the safer &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot;&lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt;&quot;&lt;/a&gt;, for example when interfacing with a C library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6c6c2883f7df6e6775b00306eebea28bdde0f9" translate="yes" xml:space="preserve">
          <source>This macro is only used by &lt;code&gt;sv_true()&lt;/code&gt; or its macro equivalent, and only if the latter's argument is neither &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; nor &lt;code&gt;SvNOK&lt;/code&gt;. It calls &lt;code&gt;sv_2bool_flags&lt;/code&gt; with the &lt;code&gt;SV_GMAGIC&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28984ae179e05c5bf9916303fc08d37c02058ac5" translate="yes" xml:space="preserve">
          <source>This macro is only used by sv_true() or its macro equivalent, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. It calls sv_2bool_flags with the SV_GMAGIC flag.</source>
          <target state="translated">Этот макрос используется только функцией sv_true()или ее макроэквивалентом,и только в том случае,если аргумент последнего не является ни SvPOK,ни SvIOK,ни SvNOK.Он вызывает флаги sv_2bool_flags с флагом SV_GMAGIC.</target>
        </trans-unit>
        <trans-unit id="e69c1ad5fe8e7c0cb76164a9a63b43161810252f" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10545c4894740426ee72f48ac1e29d7b762c0e6" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">Этот макрос является началом обертывания кода C или XS; окончание обертывания выполняется путем вызова макроса &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; после операции. В противном случае состояние может быть изменено, что отрицательно повлияет на другой код XS.</target>
        </trans-unit>
        <trans-unit id="108576184697c52b594b5fe191807eddc07365bd" translate="yes" xml:space="preserve">
          <source>This macro is used to define a unique key to refer to the static data for an XS module. The suggested naming scheme, as used by h2xs, is to use a string that consists of the module name, the string &quot;::_guts&quot; and the module version number.</source>
          <target state="translated">Данный макрос используется для определения уникального ключа для обращения к статическим данным модуля XS.Предлагаемая схема именования,используемая h2xs,заключается в использовании строки,состоящей из имени модуля,строки &quot;::_guts&quot; и номера версии модуля.</target>
        </trans-unit>
        <trans-unit id="c6d4c1493bd7a58de9fad441658972687cd16b89" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">Этот макрос гарантирует, что текущее состояние &lt;code&gt;LC_NUMERIC&lt;/code&gt; установлено правильно, чтобы знать языковой стандарт, если вызов кода XS или C из программы Perl находится в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; или игнорировать языковой стандарт, если вызов идет извне.</target>
        </trans-unit>
        <trans-unit id="789676223757b6e3c9adb39d17261f88564cb4ea" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;use locale&lt;/code&gt;; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92648c32efc9502af17e5ceb0078f95c4ee774c" translate="yes" xml:space="preserve">
          <source>This macro should be used as a statement. It declares a private variable (whose name begins with an underscore) that is needed by the other macros in this section. Failing to include this correctly should lead to a syntax error. For compatibility with C89 C compilers it should be placed in a block before any executable statements.</source>
          <target state="translated">Этот макрос следует использовать как утверждение.Он объявляет приватную переменную (имя которой начинается со знака подчеркивания),которая необходима другим макросам в этом разделе.Неправильное его включение должно привести к синтаксической ошибке.Для совместимости с компиляторами C89 C его следует поместить в блок перед любыми исполняемыми операторами.</target>
        </trans-unit>
        <trans-unit id="b90726f024761758381d53bc05e127149501c3cd" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">Это делает &lt;code&gt;$?&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; возвращает собственный статус выхода VMS вместо эмуляции статуса выхода POSIX.</target>
        </trans-unit>
        <trans-unit id="628b3f0c435efc68cdba395167206609d25c5fc1" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;system&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2c6d4ff2fd838d04decac262a17dd105743f47" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">Это заставляет &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; производить успешный выход (со статусом SS $ _NORMAL) вместо эмуляции UNIX exit (), который считает, что &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; указывает на ошибку. Как и в случае с функцией exit () CRTL, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; также отображается в статус выхода SS $ _NORMAL, а любой другой аргумент exit () используется непосредственно как статус выхода Perl.</target>
        </trans-unit>
        <trans-unit id="f530eabe223e1fc114547fb2222672ed10b84b29" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;exit 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;exit 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;exit 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2d12c23e7f9dc586004c73bb11c5e4d66c884b" translate="yes" xml:space="preserve">
          <source>This makes a second reference to the &lt;b&gt;same&lt;/b&gt; object and stores it in $y. Thus anything that modifies $x (except overloaded operators) also modifies $y, and vice versa. Or in other words, &lt;code&gt;=&lt;/code&gt; is only safe if you modify your Math::BigInt objects only via overloaded math. As soon as you use a method call it breaks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf5212d7d68fd2597a5ccb3dac44a0ec0acbc33" translate="yes" xml:space="preserve">
          <source>This makes all times relative to the local time zone, instead of the default of Universal Time (a.k.a Greenwich Mean Time, or GMT).</source>
          <target state="translated">Это делает все времена относительно местного часового пояса,а не по умолчанию Универсального времени (так же известного как среднее время по Гринвичу,или GMT).</target>
        </trans-unit>
        <trans-unit id="9babc5bd4d4d8fad4e1a1114788e7c9d9589298f" translate="yes" xml:space="preserve">
          <source>This makes it easy for people to use your module with Perl. Note that this licensing example is neither an endorsement or a requirement, you are of course free to choose any licensing.</source>
          <target state="translated">Это позволяет людям легко использовать ваш модуль с Perl.Обратите внимание,что этот пример лицензирования не является ни подтверждением,ни требованием,вы,конечно же,вольны выбирать любую лицензию.</target>
        </trans-unit>
        <trans-unit id="f6b677bb7d54149dada8aa52108296cc95f7e885" translate="yes" xml:space="preserve">
          <source>This makes it easy to turn memoizing on and off.</source>
          <target state="translated">Это позволяет легко включать и выключать запоминания.</target>
        </trans-unit>
        <trans-unit id="84c2faa4aab99c70a3db865e9bc75342b3b56a52" translate="yes" xml:space="preserve">
          <source>This makes it easy to write loops that terminate when a null list is returned:</source>
          <target state="translated">Это облегчает запись циклов,которые завершаются,когда возвращается нулевой список:</target>
        </trans-unit>
        <trans-unit id="ef9cd0d8fba7947707aa196a6028ecbb8adf2cd7" translate="yes" xml:space="preserve">
          <source>This makes it possible for you to have a single point of configuring what subclasses should be used, which means that in many cases you'll find you only need to sub-class one of the parser's components.</source>
          <target state="translated">Это позволяет вам иметь единую точку настройки того,какие подклассы должны использоваться,а это значит,что во многих случаях вам нужно будет использовать только один из подклассов парсера.</target>
        </trans-unit>
        <trans-unit id="80334a3bb6611cb20a20615249beb172fdbc5b91" translate="yes" xml:space="preserve">
          <source>This makes it possible to mix arguments of different classes (as in 2.5 + 2) as well es preserve accuracy (as in sqrt(3)).</source>
          <target state="translated">Это позволяет смешивать аргументы различных классов (как в 2.5+2),а также сохранять точность (как в sqrt(3)).</target>
        </trans-unit>
        <trans-unit id="304f656ae607b7cf896345e4cfc56ab064cd5820" translate="yes" xml:space="preserve">
          <source>This makes it possible to write a constructor like this:</source>
          <target state="translated">Это позволяет написать такой конструктор:</target>
        </trans-unit>
        <trans-unit id="fc06c6059d7797b5cf29ed701247a147f4e8dbe0" translate="yes" xml:space="preserve">
          <source>This makes it so that HashBase sees that you have your own &lt;code&gt;new()&lt;/code&gt; method. Alternatively you can define the method before loading HashBase instead of just declaring it, but that scatters your use statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c53718a75ad3b112dec7a9bbaa9b39968746d5" translate="yes" xml:space="preserve">
          <source>This makes sure that &lt;code&gt;foo bar&lt;/code&gt; is treated as a string, rather than two separate arguments to the &lt;code&gt;echo&lt;/code&gt; function.</source>
          <target state="translated">Это гарантирует, что &lt;code&gt;foo bar&lt;/code&gt; обрабатывается как строка, а не как два отдельных аргумента функции &lt;code&gt;echo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d11f54f9813ffdcb8a603cf0a760fa85bee8c0f3" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</source>
          <target state="translated">Это заставляет четыре стандартных побитовых оператора ( &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) последовательно обрабатывать свои операнды как числа и вводит четыре новых оператора с точками ( &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ), Которые последовательно обрабатывают свои операнды как строки. То же самое относится к вариантам присваивания ( &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="453a24b82235c09045ebce781ba5151542428ce9" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt;) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt;) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168408e4eda2afd55c396c633b53aaec0eb729d4" translate="yes" xml:space="preserve">
          <source>This makes this XSUB look similar to an ANSI C declaration. An optional semicolon is allowed after the argument list, as in</source>
          <target state="translated">Это делает этот XSUB похожим на декларацию ANSI C.Необязательная точка с запятой разрешена после списка аргументов,как в случае с</target>
        </trans-unit>
        <trans-unit id="2eced7035bcf730659e224115fc20b5232c60142" translate="yes" xml:space="preserve">
          <source>This man page is for the version for modern perls and so that's probably what you've got.</source>
          <target state="translated">Эта man-страница для версии для современных перлов,так что,вероятно,это то,что у вас есть.</target>
        </trans-unit>
        <trans-unit id="b1f55a347ef2e9626ef51c086b431d8a172c3d1b" translate="yes" xml:space="preserve">
          <source>This manpage contains short recipes demonstrating how to handle common Unicode operations in Perl, plus one complete program at the end. Any undeclared variables in individual recipes are assumed to have a previous appropriate value in them.</source>
          <target state="translated">Эта страница содержит короткие рецепты,демонстрирующие,как работать с обычными операциями Юникода на Perl,плюс одна полная программа в конце.Предполагается,что любые незаявленные переменные в отдельных рецептах имеют в них ранее соответствующее значение.</target>
        </trans-unit>
        <trans-unit id="aa682f1e123b444504fdfffff8f8767942781c1e" translate="yes" xml:space="preserve">
          <source>This manual page discusses the syntax and use of character classes in Perl regular expressions.</source>
          <target state="translated">На этой странице руководства обсуждается синтаксис и использование символьных классов в регулярных выражениях Perl.</target>
        </trans-unit>
        <trans-unit id="3369a77e4e9693acaaa9351801ed7f0c5ee8faea" translate="yes" xml:space="preserve">
          <source>This maps from US-ASCII codes (like 32) to the corresponding character (like space, for 32). Only characters 32 to 126 are defined. This is meant for use by &lt;code&gt;e2char($x)&lt;/code&gt; when it senses that it's running on a non-ASCII platform (where chr(32) doesn't get you a space -- but $Code2USASCII{32} will). It's documented here just in case you might find it useful.</source>
          <target state="translated">Это сопоставляет коды US-ASCII (например, 32) с соответствующими символами (например, пробел, для 32). Определены только символы с 32 по 126. Это предназначено для использования &lt;code&gt;e2char($x)&lt;/code&gt; когда он определяет, что он работает на платформе, отличной от ASCII (где chr (32) не дает вам места, но $ Code2USASCII {32} будет). Это задокументировано здесь на всякий случай, если вы сочтете это полезным.</target>
        </trans-unit>
        <trans-unit id="3b8a1823436e8a6226985b3f21cad0fcc22240a7" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;About Data Paragraphs and &quot;=begin/=end&quot; Regions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4d3919cb732684c195097b0bb170a903bf1284" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">Это отмечает конец области, открытой соответствующей областью &quot;= begin formatname&quot;. Если &amp;laquo;имя формата&amp;raquo; не является именем формата самой последней открытой области &amp;laquo;= начало имя формата&amp;raquo;, то это ошибка и должно генерироваться сообщение об ошибке. Это подробно обсуждается в разделе &amp;laquo; &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;Об абзацах данных и = begin / = end Regions&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f3eb630ccbc8c1b4b4ea62b60c2f17bbd2e13b1" translate="yes" xml:space="preserve">
          <source>This marks the following paragraphs (until the matching &quot;=end formatname&quot;) as being for some special kind of processing. Unless &quot;formatname&quot; begins with a colon, the contained non-command paragraphs are data paragraphs. But if &quot;formatname&quot;</source>
          <target state="translated">Это помечает следующие параграфы (до совпадения &quot;=имя формата конца&quot;)как предназначенные для какого-то специального вида обработки.Если &quot;имя формата&quot; не начинается с двоеточия,то содержащиеся не обязывающие параграфы являются параграфами данных.Но если &quot;имя формата&quot;</target>
        </trans-unit>
        <trans-unit id="199ca4d2282805128a713cd4c31b353ecaf62285" translate="yes" xml:space="preserve">
          <source>This matches a Unicode</source>
          <target state="translated">Это соответствует Юникоду</target>
        </trans-unit>
        <trans-unit id="35187fd79ec1edcbf75ff3589e7d7a4fd9384c68" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5CX&quot;&gt;&quot;&lt;code&gt;\X&lt;/code&gt;&quot;&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt;. Use whichever is most convenient for your situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2285705bf65a5f3a4137269fb669e26419a225" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5cX&quot;&gt;\X&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Use whichever is most convenient for your situation.</source>
          <target state="translated">Это соответствует Unicode &amp;laquo;Граница кластера графемы&amp;raquo;. (На самом деле Perl всегда использует улучшенный &quot;расширенный&quot; кластер графем &quot;.) Они объясняются ниже в разделе &lt;a href=&quot;#%5cX&quot;&gt;\ X.&lt;/a&gt; Фактически, &lt;code&gt;\X&lt;/code&gt; - это еще один способ получить ту же функциональность. Он эквивалентен &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Используйте то, что наиболее удобно в вашей ситуации.</target>
        </trans-unit>
        <trans-unit id="43a174e3acf9fe3da094fe1e29ca009a0ac07471" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5cR&quot;&gt;\R&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sententces. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">Это соответствует &amp;laquo;границе предложения&amp;raquo; Unicode. Это помощь в синтаксическом анализе предложений на естественном языке. Это дает хорошие, но несовершенные результаты. Например, он считает, что &amp;laquo;мистер Смит&amp;raquo; - это два предложения. Более подробная информация на &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt; . Также обратите внимание, что он считает, что все, что соответствует &lt;a href=&quot;#%5cR&quot;&gt;\ R&lt;/a&gt; (кроме подачи формы и вертикальной табуляции), является границей предложения. &lt;code&gt;\b{sb}&lt;/code&gt; работает с текстом, разработанным для текстовых процессоров, которые автоматически переносят строки для отображения, но жестко запрограммированные границы строк считаются, по сути, концами текстовых блоков (на самом деле абзацев) и, следовательно, концами предложений. &lt;code&gt;\b{sb}&lt;/code&gt; плохо работает с текстом, содержащим встроенные символы новой строки, например, с исходным текстом документа, который вы читаете. Такой текст необходимо предварительно обработать, чтобы избавиться от разделителей строк перед поиском границ предложения. Некоторые люди считают это ошибкой в ​​стандарте Unicode, и это поведение может измениться в будущих версиях Perl.</target>
        </trans-unit>
        <trans-unit id="1cb6230dc355ad698d71f70d4c4922dccb9931e0" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5CR&quot;&gt;&quot;\R&quot;&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sentences. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2811398b5c9cc7a492470e9d11bff95eac375ba9" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;, but tailored to Perl expectations. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862d390cde50da1c3067a4f5bf13a23004164fc2" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">Это соответствует &quot;границе слова&quot; Unicode. Это дает лучшие (хотя и не идеальные) результаты для обработки естественного языка, чем простой &lt;code&gt;\b&lt;/code&gt; (без фигурных скобок). Например, он понимает, что апострофы могут быть в середине слов, а скобки - нет (см. Примеры ниже). Более подробная информация на &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef47eed99ac1d083b3beb492e4f8913342391453" translate="yes" xml:space="preserve">
          <source>This matches according to the default Unicode Line Breaking Algorithm (&lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt;), as customized in that document (&lt;a href=&quot;https://www.unicode.org/reports/tr14/tr14-35.html#Example7&quot;&gt;Example 7 of revision 35&lt;/a&gt;) for better handling of numeric expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6302d3bb19b988247051f1fbfe94d51caf4369" translate="yes" xml:space="preserve">
          <source>This matches all code points whose numeric value is one of 0, 1, 2, 3, 4, or 5. This particular example could instead have been written as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f9c4b6a0133a2ba4a4536268bb4388e6462d37" translate="yes" xml:space="preserve">
          <source>This matches any &lt;code&gt;\p{Alphabetic}&lt;/code&gt; or &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; character.</source>
          <target state="translated">Это соответствует любому &lt;code&gt;\p{Alphabetic}&lt;/code&gt; или &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; символов.</target>
        </trans-unit>
        <trans-unit id="1368a197a87ba6ed14500f8908565c9ada6f62ff" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt; ).</source>
          <target state="translated">Это соответствует любой назначенной кодовой точке; то есть любая кодовая точка, &lt;a href=&quot;#General_Category&quot;&gt;общая категория&lt;/a&gt; которой не является &lt;code&gt;Unassigned&lt;/code&gt; (или, что эквивалентно, не &lt;code&gt;Cn&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="100bdeeeb5e6097e5b9781532670a8d8611e6b85" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2970fcf592bf526b7624da46ffe2c2926bcdb66" translate="yes" xml:space="preserve">
          <source>This matches any character that is graphical or blank, except controls.</source>
          <target state="translated">Это соответствует любому графическому или пустому символу,за исключением элементов управления.</target>
        </trans-unit>
        <trans-unit id="9dcbf046b8bea0226e813051a826c67a230a6bfb" translate="yes" xml:space="preserve">
          <source>This matches any of the 128 characters in the US-ASCII character set, which is a subset of Unicode.</source>
          <target state="translated">Это соответствует любому из 128 символов в наборе символов US-ASCII,который является подмножеством Юникода.</target>
        </trans-unit>
        <trans-unit id="6f971eb914dae58555e5f55db125c34d663d6429" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt; .</source>
          <target state="translated">Это соответствует любой из кодовых точек 1_114_112 Unicode. &lt;code&gt;\p{Any}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7e09f2891fc7e1926bcdf025e41ca7e5796fc4" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e5a95f3a6d3f1afad03782326f2e0e7b9c9ed7" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt; .</source>
          <target state="translated">Это соответствует любой из кодовых точек 1_114_112 Unicode. Это синоним &lt;code&gt;\p{Unicode}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29cf195e8abc4c2fda5508cb856c0619ed1c39b8" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddbc160eb4c94b6ef293222be013d55a26c3ebd" translate="yes" xml:space="preserve">
          <source>This matches digits that are in either the Thai or Laotian scripts.</source>
          <target state="translated">Это совпадает с цифрами,которые есть либо в тайском или лаосском сценарии.</target>
        </trans-unit>
        <trans-unit id="bed0a3d92b78eec58ff8b7c04af52fb9a269486e" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; below).</source>
          <target state="translated">Это соответствует каждой возможной кодовой точке. Это эквивалентно &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt; . В отличие от всех других совпадений свойств &lt;code&gt;\p{}&lt;/code&gt; , не определенных пользователем, предупреждение никогда не генерируется, если это свойство сопоставляется с кодовой точкой, отличной от Unicode (см. Ниже кодовые точки &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="54223479a01eff97835bc0fc4d5646f6d53ac4e4" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;qr/./s&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;Beyond Unicode code points&quot;&lt;/a&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f19d0a2349916b7981752a7104f9d5ef925fc8" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5af876b8e44759fbc1c5f4ebb39fe615bb29e7e" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character. All the other escapes accepted by normal bracketed character classes are accepted here as well; but unrecognized escapes that generate warnings in normal classes are fatal errors here.</source>
          <target state="translated">Это соответствует английским гласным плюс символу SPACE.Здесь также принимаются все остальные экранирования,принятые обычными классами символов в квадратных скобках;но непризнанные экранирования,которые выдают предупреждения в обычных классах,являются здесь фатальными ошибками.</target>
        </trans-unit>
        <trans-unit id="55be8f6854e7ce1e29dee30dacbad8368e941533" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;&quot;I cannot run external programs&quot;&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe0bd3d52f9526a3bdbdf0fb7b2272dd4226b2a" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;I cannot run external programs&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">Это может быть вариант того, что &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;я не могу запускать внешние программы&lt;/a&gt; , или более серьезная проблема. В основном: ты</target>
        </trans-unit>
        <trans-unit id="3c2e6cadd45bf9050033dd0f02dee64c1cb36e02" translate="yes" xml:space="preserve">
          <source>This may also be a good time to ensure that your /etc/protocol file and either your /etc/resolv.conf or /etc/hosts files are in place. The IBM document that described such USS system setup issues was SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;, in particular Chapter 6 on customizing the OE shell.</source>
          <target state="translated">Это также может быть подходящим моментом,чтобы убедиться,что ваш файл /etc/protocol и файлы /etc/resolv.conf или /etc/hosts находятся на месте.Документ IBM,описывающий такие проблемы настройки системы USS,был SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;,в частности Глава 6 о настройке оболочки OE.</target>
        </trans-unit>
        <trans-unit id="1206b674e03199df25ca78fd2210a65fd2a21ff2" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">Также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются (но шрифт все равно изменяется для вывода troff).</target>
        </trans-unit>
        <trans-unit id="345f8ac7fec5019dbde30571fee3e63e792fb3cf" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">Также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются.</target>
        </trans-unit>
        <trans-unit id="14fa777a070fca8732a6c3aaf496e4c4e9175f3e" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61345d4379070080abacfba137fca759d14d397c" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b045aef9d01569a459e4507e2bf0dbcc4d078d" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">Это может быть менее очевидным в других ситуациях, таких как &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; , например, при поиске списка ослабленных ссылок на объекты, которые, возможно, уже были уничтожены:</target>
        </trans-unit>
        <trans-unit id="aadddde396ec6250eb650b31094a85752ac5de5f" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;grep()&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6b611a35aea5e6cbfaa34dfad89779e54d15a6" translate="yes" xml:space="preserve">
          <source>This may be useful if other modules expect this module to be</source>
          <target state="translated">Это может быть полезно,если другие модули ожидают,что этот модуль будет</target>
        </trans-unit>
        <trans-unit id="bb1bd20d64f2ccdce3f2cc8fcef954e7c80b5a33" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt; -equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; . Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt; ed types as opaque types.</source>
          <target state="translated">Это может быть полезно, поскольку, скажем, типы, которые &lt;code&gt;typedef&lt;/code&gt; -эквивалентны целым числам, могут представлять дескрипторы, связанные с ОС, и можно захотеть работать с этими дескрипторами в объектно- &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; стиле, как в $ handle-&amp;gt; do_something () . Используйте &lt;code&gt;-o .&lt;/code&gt; если вы хотите обрабатывать все &lt;code&gt;typedef&lt;/code&gt; типы как непрозрачные типы.</target>
        </trans-unit>
        <trans-unit id="bb030fdbfde4cf4510e91d4dc3720be63df3b4c9" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt;-equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt;. Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt;ed types as opaque types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219180c7e012f10d4f7a83d42d7e8f2690484f40" translate="yes" xml:space="preserve">
          <source>This may break in two ways:</source>
          <target state="translated">Это может разбиться на две части:</target>
        </trans-unit>
        <trans-unit id="c894611388eb78ec067fed71d079c9e5816ca7b5" translate="yes" xml:space="preserve">
          <source>This may cause problems:</source>
          <target state="translated">Это может вызвать проблемы:</target>
        </trans-unit>
        <trans-unit id="5b07568535355dc79492449b01ec4948cfdc2343" translate="yes" xml:space="preserve">
          <source>This may expect the C</source>
          <target state="translated">Это может означать,что C</target>
        </trans-unit>
        <trans-unit id="03f2543e21cbd92a7ee1ca79827f8f9611eefa56" translate="yes" xml:space="preserve">
          <source>This may later be extended to include other information, so be careful with pattern-matching on the results.</source>
          <target state="translated">Позднее эта информация может быть расширена,чтобы включить в нее другую информацию,поэтому будьте внимательны при сравнении результатов с образцами.</target>
        </trans-unit>
        <trans-unit id="e21dadcda575196402392ef6ce13a8923c3356bf" translate="yes" xml:space="preserve">
          <source>This may lead to problems later in case the socket is accessed via the &quot;usual&quot; file-system calls using the &quot;initial&quot; name.</source>
          <target state="translated">Это может привести к проблемам в дальнейшем,если доступ к сокету осуществляется через &quot;обычные&quot; вызовы файловой системы с &quot;начальным&quot; именем.</target>
        </trans-unit>
        <trans-unit id="6110636ef5b993e8ba32881ebb3b6bb734669e0b" translate="yes" xml:space="preserve">
          <source>This may take a couple of hours on 1GHz processor (when run the first time). And this should not be necessarily a smooth procedure. Some modules may not specify required dependencies, so one may need to repeat this procedure several times until the results stabilize.</source>
          <target state="translated">Это может занять пару часов на 1 ГГц процессоре (при первом запуске).И это не обязательно должна быть гладкая процедура.Некоторые модули могут не указывать требуемые зависимости,поэтому может потребоваться повторить эту процедуру несколько раз,пока результаты не стабилизируются.</target>
        </trans-unit>
        <trans-unit id="21e8b83f4a4668675b959f09a3dddc3f913b92a2" translate="yes" xml:space="preserve">
          <source>This means integer values like 1.01E2 or even 1000E-2 are also accepted. Non-integer values result in NaN.</source>
          <target state="translated">Это означает,что также принимаются целые значения типа 1.01E2 или даже 1000E-2.Непрописанные значения приводят к NaN.</target>
        </trans-unit>
        <trans-unit id="0df399dd4c0ebd437b2b092068503ec57072d7a4" translate="yes" xml:space="preserve">
          <source>This means somewhere a routine got a BigFloat/Lite but expected a BigInt (or vice versa) and the upgrade/downgrad path was missing. This is a bug, please report it so that we can fix it.</source>
          <target state="translated">Это означает,что где-то рутина получила BigFloat/Lite,но ожидала BigInt (или наоборот)и путь апгрейда/даунграда был пропущен.Это ошибка,пожалуйста,сообщите об этом,чтобы мы могли ее исправить.</target>
        </trans-unit>
        <trans-unit id="14a58ee32b8ae7bdc388a529d03ef7e5871a7f4e" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;catdir()&lt;/code&gt; is called only when there are two or more arguments, as one might expect.</source>
          <target state="translated">Это означает, что &lt;code&gt;catdir()&lt;/code&gt; вызывается только при наличии двух или более аргументов, как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="578c842326a0346c93813339f663f40295cced47" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;prop_invmap&lt;/code&gt; returns a 4 element list. For example,</source>
          <target state="translated">Это означает, что &lt;code&gt;prop_invmap&lt;/code&gt; возвращает список из 4 элементов. Например,</target>
        </trans-unit>
        <trans-unit id="38b6532eaf6e68ec76d8a337e1c024ccfeab03a8" translate="yes" xml:space="preserve">
          <source>This means that arithmetic involving only string values or string literals will be performed using Perl's built-in operators.</source>
          <target state="translated">Это означает,что арифметика со строковыми значениями или строковыми литералами будет выполняться с помощью встроенных операторов Perl.</target>
        </trans-unit>
        <trans-unit id="01006b71ced49944419d9cf9ecdab2df41a8f161" translate="yes" xml:space="preserve">
          <source>This means that if a developer only needs a module for the BAR standard, they should not be forced to install libraries for FOO as well.</source>
          <target state="translated">Это означает,что если разработчику нужен только модуль для стандарта BAR,его не следует заставлять устанавливать библиотеки и для FOO.</target>
        </trans-unit>
        <trans-unit id="a939b578ee66e30d68a1cb74f87d0079e5aa7b9c" translate="yes" xml:space="preserve">
          <source>This means that it short-circuits: the right expression is evaluated only if the left expression is false. Due to its precedence, you must be careful to avoid using it as replacement for the &lt;code&gt;||&lt;/code&gt; operator. It usually works out better for flow control than in assignments:</source>
          <target state="translated">Это означает, что он замыкается: правое выражение оценивается, только если левое выражение ложно. Из-за его приоритета вы должны быть осторожны, чтобы не использовать его в качестве замены &lt;code&gt;||&lt;/code&gt; оператор. Обычно это работает лучше для управления потоком, чем для заданий:</target>
        </trans-unit>
        <trans-unit id="6b325861f3ab382f335c9341221acf9229196786" translate="yes" xml:space="preserve">
          <source>This means that once RawInflate is finished &lt;code&gt;$fh&lt;/code&gt; will be left at the byte directly after the compressed data stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9154072eb271aa42c51fcc713d07f839133a3a" translate="yes" xml:space="preserve">
          <source>This means that the code points from 0 to 0x2F do not represent decimal digits; the code point 0x30 (DIGIT ZERO) represents 0; code point 0x31, (DIGIT ONE), represents 0+1-0 = 1; ... code point 0x39, (DIGIT NINE), represents 0+9-0 = 9; ... code points 0x3A through 0x65F do not represent decimal digits; 0x660 (ARABIC-INDIC DIGIT ZERO), represents 0; ... 0x07C1 (NKO DIGIT ONE), represents 0+1-0 = 1 ...</source>
          <target state="translated">Это означает,что кодовые точки от 0 до 0x2F не представляют десятичных цифр;кодовые точки 0x30 (DIGIT ZERO)представляют 0;кодовые точки 0x31 (DIGIT ONE),представляют 0+1-0=1;...кодовые точки 0x39 (DIGIT NINE),представляют 0+9-0=9;...кодовые точки от 0x3A до 0x65F не представляют десятичных цифр;0x660 (ARABIC-INDIC DIGIT ZERO),представляют 0;...0x07C1 (NKO DIGIT ONE),представляет 0+1-0=1 ...</target>
        </trans-unit>
        <trans-unit id="53a7571a93760445ebdaebf443e990e621523e20" translate="yes" xml:space="preserve">
          <source>This means that the example in the synopsis could be rewritten more simply as:</source>
          <target state="translated">Это означает,что пример в синопсисе можно переписать проще:</target>
        </trans-unit>
        <trans-unit id="a1f3ea2c657f7b7f7d19db3a4421f880ee25efe3" translate="yes" xml:space="preserve">
          <source>This means that the space in the middle of the visible link text must not be broken across lines. In other words, it's the same as this:</source>
          <target state="translated">Это означает,что пространство в середине видимого текста ссылки не должно быть разбито поперек линий.Другими словами,это то же самое:</target>
        </trans-unit>
        <trans-unit id="64c7de2c5fffc581047d71755a716f6efa16c586" translate="yes" xml:space="preserve">
          <source>This means that the words in</source>
          <target state="translated">Это означает,что слова в</target>
        </trans-unit>
        <trans-unit id="f1569c4431f8fc6543e767edacb7a758da5a6960" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">Это означает, что когда &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars' , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; позволяет вам использовать переменную пакета без уточнения ее с именем пакета, но только в пределах лексической области &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявления. Это применяется немедленно - даже в рамках одного и того же утверждения.</target>
        </trans-unit>
        <trans-unit id="f586cceadb03a1ba8357cc824f5f5d4e8015da6f" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">Это означает, что когда &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars' , &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; позволяет вам использовать переменную пакета без уточнения ее с именем пакета, но только в пределах лексической области &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявления. Это применяется немедленно - даже в рамках одного и того же утверждения.</target>
        </trans-unit>
        <trans-unit id="284eb118660ae660f27c03fcc27710a4366c9a03" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;use strict 'vars'&lt;/code&gt; is in effect, &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81785772e2cebea14c023690b3e80231bc941d4" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">Это означает, что вы можете встроить код Perl в свой код typemap (C), используя такие конструкции, как &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . Распространенным вариантом использования является создание сообщений об ошибках, которые ссылаются на истинное имя функции, даже при использовании функции ALIAS XS:</target>
        </trans-unit>
        <trans-unit id="6159f11ee36a959a1c616223b9451cb1accb09f1" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to scalar reference here }&lt;/code&gt;. A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae397e13ee74537dfbe00fc3647b75575531d38" translate="yes" xml:space="preserve">
          <source>This means that you can pass back or save away references to lexical variables, whereas to return a pointer to a C auto is a grave error. It also gives us a way to simulate C's function statics. Here's a mechanism for giving a function private variables with both lexical scoping and a static lifetime. If you do want to create something like C's static variables, just enclose the whole function in an extra block, and put the static variable outside the function but in the block.</source>
          <target state="translated">Это означает,что вы можете передавать или сохранять ссылки на лексические переменные,в то время как возврат указателя на C auto является серьезной ошибкой.Это также дает нам возможность симулировать статику функций в Си.Вот механизм,дающий функции приватные переменные как с лексическим охватом,так и со статическим временем жизни.Если вы действительно хотите создать что-то вроде статических переменных Си,просто заключите всю функцию в дополнительный блок и поместите статическую переменную вне функции,но в блок.</target>
        </trans-unit>
        <trans-unit id="ba95400be83f3e213b12cd9a0fd5821a87880672" translate="yes" xml:space="preserve">
          <source>This means that your locale settings had &lt;code&gt;LC_ALL&lt;/code&gt; set to &quot;En_US&quot; and LANG exists but has no value. Perl tried to believe you but could not. Instead, Perl gave up and fell back to the &quot;C&quot; locale, the default locale that is supposed to work no matter what. (On Windows, it first tries falling back to the system default locale.) This usually means your locale settings were wrong, they mention locales your system has never heard of, or the locale installation in your system has problems (for example, some system files are broken or missing). There are quick and temporary fixes to these problems, as well as more thorough and lasting fixes.</source>
          <target state="translated">Это означает, что в ваших настройках локали для &lt;code&gt;LC_ALL&lt;/code&gt; установлено значение &amp;laquo;En_US&amp;raquo;, а LANG существует, но не имеет значения. Перл пытался вам поверить, но не мог. Вместо этого Perl сдался и вернулся к языку &quot;C&quot;, языку по умолчанию, который должен работать несмотря ни на что. (В Windows он сначала пытается вернуться к системному языку по умолчанию.) Это обычно означает, что ваши настройки локали были неправильными, в них упоминаются локали, о которых ваша система никогда не слышала, или при установке локали в вашей системе есть проблемы (например, некоторая система файлы повреждены или отсутствуют). Существуют быстрые и временные решения этих проблем, а также более тщательные и долгосрочные исправления.</target>
        </trans-unit>
        <trans-unit id="935bdf240cb07ad1d6c61c4ce332cb8c8c8bea3f" translate="yes" xml:space="preserve">
          <source>This means the hook can be inherited like any other method, and that</source>
          <target state="translated">Это означает,что крюк может быть унаследован,как и любой другой метод,и что...</target>
        </trans-unit>
        <trans-unit id="2829080b86855df25144fdad5ccaac91d3e22b76" translate="yes" xml:space="preserve">
          <source>This means the same thing as the above &quot;=begin html&quot; ... &quot;=end html&quot; region.</source>
          <target state="translated">Это означает то же самое,что и вышеприведенное &quot;=begin html&quot; ...&quot;=завершить html&quot;.</target>
        </trans-unit>
        <trans-unit id="44c698371a2bc8c8f85a78f7834202f417a26f2b" translate="yes" xml:space="preserve">
          <source>This means you would have to be very careful of the load order:</source>
          <target state="translated">Это означает,что вы должны быть очень осторожны с заказом на погрузку:</target>
        </trans-unit>
        <trans-unit id="3337abd3921fdbd49cbcb7fb32155c6404621f35" translate="yes" xml:space="preserve">
          <source>This means your tests won't fail on MacOS. This means fewer emails from MacPerl users telling you about failing tests that you know will never work. You've got to be careful with skip tests. These are for tests which don't work and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff2ec52af1291aa43e3a1c0cb12356c3eeef13f" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , which expands to &lt;code&gt;void
(*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">Этот член относится к типу &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , который расширяется до &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . Если он установлен, эта функция будет вызываться из &lt;code&gt;Perl_rpeep&lt;/code&gt; , когда оптимизатор глазка обнаружит операции этого типа.</target>
        </trans-unit>
        <trans-unit id="db36691e48e2c67d2ea0f23d3b7c02ae12b88783" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt;, which expands to &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt;. If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a717feb83162a52d0b22449b1b2a628cde73cab" translate="yes" xml:space="preserve">
          <source>This merge strategy will try to pick the appropriate predefined strategy based on what element type. Array refs will try to use the &lt;code&gt;set_addition&lt;/code&gt; strategy, Hash refs will try to use the &lt;code&gt;uniq_map&lt;/code&gt; strategy, and everything else will try the &lt;code&gt;identical&lt;/code&gt; strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f15c1dce331d08d1c4dfe4e281cc0a0a4b34f0a" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt; . It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">Это сообщение довольно часто можно увидеть с DB_File в системах с &amp;laquo;жестким&amp;raquo; динамическим связыванием, таких как &lt;code&gt;AIX&lt;/code&gt; и &lt;code&gt;OS/2&lt;/code&gt; . Это ошибка &lt;code&gt;Berkeley DB&lt;/code&gt; , которая остается незамеченной, если &lt;code&gt;DB&lt;/code&gt; использует</target>
        </trans-unit>
        <trans-unit id="dd9cc0488fe9dc37730174b23cf738f2f87b5cde" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt;. It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2510b2403247fa109d55b63b7f2961e33ab09a" translate="yes" xml:space="preserve">
          <source>This message indicates a bug either in the Perl core or in XS code. Such code was trying to find out if a character, allegedly stored internally encoded as UTF-8, was of a given type, such as being punctuation or a digit. But the character was not encoded in legal UTF-8. The &lt;code&gt;%s&lt;/code&gt; is replaced by a string that can be used by knowledgeable people to determine what the type being checked against was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eb60fb126cb22151d73766a234b7a419df8dc7" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , or on the first possibly-affected operation if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">Это сообщение выводится один раз каждый раз , когда плохой языковой стандарт переключается в пределах объема &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , или на первом , возможно, пораженной операции , если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; наследует плохой. Он не вызывается ни для каких операций из модуля &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53334537f396c17eb5e0a1eb97007585d5a6b393" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;use locale&lt;/code&gt;, or on the first possibly-affected operation if the &lt;code&gt;use locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1e56024310d1748ef48e25b309befac60c3c39" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">Это сообщение подавляется (если оно не стало фатальным), если оно не имеет значения для результатов поиска, является ли кодовая точка Unicode или нет. Например, свойство &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; может соответствовать только 22 символам &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , поэтому, очевидно, все другие кодовые точки, Unicode или нет, не будут соответствовать ему. (И &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; будет соответствовать каждой кодовой точке, кроме этих 22.)</target>
        </trans-unit>
        <trans-unit id="21e762ad2efe9f1fd68a6114f57d56c551081580" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt;, so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb0745c94a8675163fb7cf1b6b4c0dfe9dfc2a4" translate="yes" xml:space="preserve">
          <source>This method (by having it return the name of a language-tag that has an existing language class) can be used for making sure that &lt;code&gt;get_handle&lt;/code&gt; will always manage to construct a language handle (assuming your language classes are in an appropriate @INC directory). Or you can use the next method:</source>
          <target state="translated">Этот метод (возвращая имя языкового тега, имеющего существующий языковой класс) можно использовать для проверки того, что &lt;code&gt;get_handle&lt;/code&gt; всегда сможет создать дескриптор языка (при условии, что ваши языковые классы находятся в соответствующем каталоге @INC) . Или вы можете использовать следующий метод:</target>
        </trans-unit>
        <trans-unit id="43b19e8a9632f033ee0217cf824970a6266507f4" translate="yes" xml:space="preserve">
          <source>This method &lt;b&gt;only&lt;/b&gt; recurses into hashes that are referenced by another hash. Thus a Hash of Hashes (HoH) will all be restricted, but a Hash of Arrays of Hashes (HoAoH) will only have the top hash restricted.</source>
          <target state="translated">Этот метод рекурсивно преобразуется &lt;b&gt;только&lt;/b&gt; в хеши, на которые ссылается другой хеш. Таким образом, все хэши хешей (HoH) будут ограничены, а хеши массивов хешей (HoAoH) будут ограничены только верхним хешем.</target>
        </trans-unit>
        <trans-unit id="2a10494b333351ed900869ddfdd97f2e586a9270" translate="yes" xml:space="preserve">
          <source>This method adds all the requirements in the given CPAN::Meta::Requirements object to the requirements object on which it was called. If there are any conflicts, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9adaf0f299fbd1e9f3a618dc3103eaac097e023" translate="yes" xml:space="preserve">
          <source>This method allows you declare all subsequent tests as TODO tests, up until the &lt;code&gt;todo_end&lt;/code&gt; method has been called.</source>
          <target state="translated">Этот метод позволяет вам объявить все последующие тесты как тесты TODO до тех пор, пока не будет &lt;code&gt;todo_end&lt;/code&gt; метод todo_end .</target>
        </trans-unit>
        <trans-unit id="730814a3d72347a8011b0b6b58b63dc1cbc1cb75" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when compressing.</source>
          <target state="translated">Этот метод всегда возвращает &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; при сжатии.</target>
        </trans-unit>
        <trans-unit id="335f17051fdb64efb794e2ddfe5ed9008c1e1a8a" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;undef&lt;/code&gt; when compressing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afef23ef81e88b5f94163ca10a11464e31ea48f" translate="yes" xml:space="preserve">
          <source>This method appends the given text or parse-tree to the current parse-tree. If the last item on the parse-tree is text and the argument is also text, then the text is appended to the last item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">Этот метод добавляет заданный текст или дерево разбора к текущему дереву разбора.Если последним элементом в дереве разбора является текст,а аргументом-также текст,то текст добавляется к последнему элементу (не добавляется как отдельная строка).В противном случае аргумент добавляется как новая строка или дерево разбора</target>
        </trans-unit>
        <trans-unit id="ea9b54b0560b3ed55c0cd396158f6152d9f5e42b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt; , but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">Этот метод ведет себя так &lt;code&gt;accept_targets_as_text&lt;/code&gt; , как accept_targets_as_text , но также отмечает область как область, содержимое которой должно передаваться буквально, без экранирования HTML-сущности или переноса в элемент &lt;code&gt;div&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71bb1e0efdfc6beccfb10261573a5eab7a2b454b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt;, but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366bdf6f4cd4331574bef09ad73e8fc1d9c85442" translate="yes" xml:space="preserve">
          <source>This method can also be called as a</source>
          <target state="translated">Этот метод также можно назвать</target>
        </trans-unit>
        <trans-unit id="715fe7c265d92fe58819e384722c797c228ac231" translate="yes" xml:space="preserve">
          <source>This method can be used to (re)parse a (new) hyperlink, i.e. the contents of a &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; sequence. The result is stored in the current object. Warnings are stored in the &lt;b&gt;warnings&lt;/b&gt; property. E.g. sections like &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; are deprecated, as they do not point to Perl documents. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; is wrong as well, the manpage section can simply be dropped.</source>
          <target state="translated">Этот метод можно использовать для (повторного) синтаксического анализа (новой) гиперссылки, то есть содержимого последовательности &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; . Результат сохраняется в текущем объекте. Предупреждения хранятся в свойстве &lt;b&gt;warnings&lt;/b&gt; . Например, такие разделы, как &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; , устарели, поскольку они не указывают на документы Perl. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; тоже неверно, раздел man-страницы можно просто удалить.</target>
        </trans-unit>
        <trans-unit id="f1f35fb67080240d23f2eac011ae3670c8591965" translate="yes" xml:space="preserve">
          <source>This method can be used to attempt to recover good data from a compressed data stream that is partially corrupt. It scans &lt;code&gt;$input&lt;/code&gt; until it reaches either a</source>
          <target state="translated">Этот метод можно использовать, чтобы попытаться восстановить хорошие данные из сжатого потока данных, который частично поврежден. Он сканирует &lt;code&gt;$input&lt;/code&gt; пока не достигнет</target>
        </trans-unit>
        <trans-unit id="90ddd0ac6657449db229f14a03b758f7e485db52" translate="yes" xml:space="preserve">
          <source>This method can be used to wait for a transfer to complete between a passive server and a non-passive server. The method should be called on the passive server with the &lt;code&gt;Net::FTP&lt;/code&gt; object for the non-passive server passed as an argument.</source>
          <target state="translated">Этот метод можно использовать для ожидания завершения передачи между пассивным и непассивным сервером. Метод должен быть вызван на пассивном сервере, &lt;code&gt;Net::FTP&lt;/code&gt; объект Net :: FTP для непассивного сервера в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="ef82cc525f992d173e6595484cbecf34f240de62" translate="yes" xml:space="preserve">
          <source>This method checks for the existence of a specific key/value pair. If the pair exists, the cursor is left pointing to the pair and the method returns 0. Otherwise the method returns a non-zero value.</source>
          <target state="translated">Этот метод проверяет наличие определенной пары ключ/значение.Если пара существует,курсор остается на пару и метод возвращает 0.В противном случае метод возвращает ненулевое значение.</target>
        </trans-unit>
        <trans-unit id="96b247f2b62f33779c178ee950a71199ee05a065" translate="yes" xml:space="preserve">
          <source>This method checks that the socket domain is &lt;code&gt;PF_INET&lt;/code&gt; and will throw an exception if it isn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fce6b5cdefe17191f11f3d49b65755477991b9" translate="yes" xml:space="preserve">
          <source>This method converts the key/value pairs from a data hash or array reference into a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string. The keys and values from the data reference will be UTF-8 encoded and escaped per RFC 3986. If a value is an array reference, the key will be repeated with each of the values of the array reference. If data is provided as a hash reference, the key/value pairs in the resulting string will be sorted by key and value for consistent ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082e97019fd385ec77aeb826bdad258d6d406921" translate="yes" xml:space="preserve">
          <source>This method deletes a specific key/value pair. It returns 0 if they exist and have been deleted successfully. Otherwise the method returns a non-zero value.</source>
          <target state="translated">Этот метод удаляет определенную пару ключ/значение.Он возвращает 0,если они существуют и были успешно удалены.В противном случае метод возвращает ненулевое значение.</target>
        </trans-unit>
        <trans-unit id="8613b5263cdbc40f7a909322a6d93c9325aff610" translate="yes" xml:space="preserve">
          <source>This method deletes the symbol whose name is given as the first argument. The optional second argument specifies the symbol table, as described above under &lt;code&gt;setsym&lt;/code&gt;. It returns TRUE if the symbol was successfully deleted, and FALSE if it was not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f513febb40f0a4c26460c04fb3a509ae4b426b01" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt; .</source>
          <target state="translated">Этот метод десериализует заданную строку JSON и результат. Если источник был в кодировке UTF-8, строка должна быть декодирована перед вызовом &lt;code&gt;load_json_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5a69f9661072b68742ae779de82b9a6939ce07d" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96e67c98ce1447f296a5e844322e09f6dd910a8" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt; .</source>
          <target state="translated">Этот метод десериализует заданную строку YAML и возвращает в ней первый документ. (Файлы метаданных CPAN всегда должны содержать только один документ.) Если исходный код был закодирован в UTF-8, перед вызовом &lt;code&gt;load_yaml_string&lt;/code&gt; строку необходимо декодировать .</target>
        </trans-unit>
        <trans-unit id="81765ac41247c95703028ea8dc4ea721f8d8a884" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a514b4f19b9ac86f842d6404bf8e89dd74c0e2" translate="yes" xml:space="preserve">
          <source>This method does</source>
          <target state="translated">Этот метод делает</target>
        </trans-unit>
        <trans-unit id="54d18cd2ca68c9792cf6431fafe4da3a6cbdd8dc" translate="yes" xml:space="preserve">
          <source>This method does not implement a complete YAML dumper, being limited to dump a hash with values which are strings, undef's or nested hashes and arrays of strings. No quoting/escaping is done.</source>
          <target state="translated">Этот метод не реализует полный YAML дампер,ограничиваясь дампом хэша со значениями,которые являются строками,undef's или вложенными хэшами и массивами строк.Никаких кавычек/выбросов не производится.</target>
        </trans-unit>
        <trans-unit id="574dd9dda7a4db9253b5e2f725c2efb60e57dfca" translate="yes" xml:space="preserve">
          <source>This method executes a &lt;code&gt;POST&lt;/code&gt; request and sends the key/value pairs from a form data hash or array reference to the given URL with a &lt;code&gt;content-type&lt;/code&gt; of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. If data is provided as an array reference, the order is preserved; if provided as a hash reference, the terms are sorted on key and value for consistency. See documentation for the &lt;code&gt;www_form_urlencode&lt;/code&gt; method for details on the encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b86793c28703b24d0cd86f4cd0ebea05c47fa" translate="yes" xml:space="preserve">
          <source>This method fully supports the use of the variable &lt;code&gt;$/&lt;/code&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) to determine what constitutes an end of line. Paragraph mode, record mode and file slurp mode are all supported.</source>
          <target state="translated">Этот метод полностью поддерживает использование переменной &lt;code&gt;$/&lt;/code&gt; (или &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; или &lt;code&gt;$RS&lt;/code&gt; когда используется &lt;code&gt;English&lt;/code&gt; язык) для определения того, что составляет конец строки. Поддерживаются режим абзаца, режим записи и режим пролистывания файлов.</target>
        </trans-unit>
        <trans-unit id="7abd31a42f5dc198423e7bfa2a6a7d4410aa53a3" translate="yes" xml:space="preserve">
          <source>This method gets faster the more sparse the bit vector is. (Courtesy of Tim Bunce and Winfried Koenig.)</source>
          <target state="translated">Этот метод становится быстрее,чем разрежен битовый вектор.(Спасибо Тиму Бансу и Уинфриду Кёнигу.)</target>
        </trans-unit>
        <trans-unit id="5106fbdd40086fe1994d026f8235d7c19445b51f" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys() or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're carrying about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">Этот метод срабатывает во время выполнения функции keys()или каждой итерации.У него есть второй аргумент,который является последним ключом,к которому был получен доступ.Это полезно,если вы осуществляете заказ или вызов итератора из нескольких последовательностей,или на самом деле нигде не храните вещи в хэше.</target>
        </trans-unit>
        <trans-unit id="c3ff1820eacb04c426d39d93923ba67e3009b83a" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys(), values(), or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're caring about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b32b03e834069c38c85e8165c3d6300a8ef2db8" translate="yes" xml:space="preserve">
          <source>This method gets/sets the children of the top node in the parse-tree. If no arguments are given, it returns the list (array) of children (each of which should be either a string or a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt;. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">Этот метод получает / устанавливает дочерние элементы верхнего узла в дереве синтаксического анализа. Если аргументы не указаны, он возвращает список (массив) дочерних элементов (каждый из которых должен быть либо строкой, либо &lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; . В противном случае, если аргументы заданы, они рассматриваются как новый список дочерних элементов для верхнего узел.</target>
        </trans-unit>
        <trans-unit id="b46a6ad296dd61f630d70737a71545994d0ce79d" translate="yes" xml:space="preserve">
          <source>This method gets/sets the top node of the parse-tree. If no arguments are given, it returns the topmost node in the tree (the root), which is also a &lt;b&gt;Pod::ParseTree&lt;/b&gt;. If it is given a single argument that is a reference, then the reference is assumed to a parse-tree and becomes the new top node. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">Этот метод получает / устанавливает верхний узел дерева синтаксического анализа. Если аргументы не указаны, он возвращает самый верхний узел в дереве (корень), который также является &lt;b&gt;Pod :: ParseTree&lt;/b&gt; . Если ему дается единственный аргумент, который является ссылкой, тогда ссылка предполагается на дерево синтаксического анализа и становится новым верхним узлом. В противном случае, если указаны аргументы, они рассматриваются как новый список дочерних элементов для верхнего узла.</target>
        </trans-unit>
        <trans-unit id="59076bbdbb5b4ddcc87d5e0b9c9e7bca5153b33d" translate="yes" xml:space="preserve">
          <source>This method handles the body of text that is marked up to be code. You might for instance override this to plug in a syntax highlighter. The base implementation just escapes the text.</source>
          <target state="translated">Этот метод обрабатывает тело текста,который размечается как код.Вы можете,например,переопределить это,чтобы подключить синтаксический маркер.Базовая реализация просто ускользает от текста.</target>
        </trans-unit>
        <trans-unit id="7f7d4c41920dd2575a0ef9de52d6dfd4b083b3af" translate="yes" xml:space="preserve">
          <source>This method handles the body of text within any element: it's the body of a paragraph, or everything between a &quot;=begin&quot; tag and the corresponding &quot;=end&quot; tag, or the text within an L entity, etc. You would want to override this if you are adding a custom element type that does more than just display formatted text. Perhaps adding a way to generate HTML tables from an extended version of POD.</source>
          <target state="translated">Этот метод обрабатывает тело текста внутри любого элемента:это тело абзаца,или все между тегом &quot;=begin&quot; и соответствующим тегом &quot;=end&quot;,или текст внутри сущности L,и т.д.Вы захотите переопределить это,если добавляете пользовательский тип элемента,который делает больше,чем просто вывод форматированного текста.Возможно,добавление способа генерации HTML таблиц из расширенной версии POD.</target>
        </trans-unit>
        <trans-unit id="0712996dc1b8ffb7aa50e7d069711d277d763268" translate="yes" xml:space="preserve">
          <source>This method has exactly the same effect as</source>
          <target state="translated">Этот метод имеет точно такой же эффект,как и</target>
        </trans-unit>
        <trans-unit id="03288e53528cfed00d63abe3d07013f706a98859" translate="yes" xml:space="preserve">
          <source>This method implements Knuth's up-arrow notation, where $n is a non-negative integer representing the number of up-arrows. $n = 0 gives multiplication, $n = 1 gives exponentiation, $n = 2 gives tetration, $n = 3 gives hexation etc. The following illustrates the relation between the first values of $n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95de431069522c19f38db980946a01f82a5e48b0" translate="yes" xml:space="preserve">
          <source>This method implements the Ackermann function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7edf847e8421397b7662e4de22753376978e152" translate="yes" xml:space="preserve">
          <source>This method is a stopgap until we can incorporate code into this extension to traverse the process' symbol table directly, so it may disappear in a future version of this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065b0a15e17527d35032fe1e6828915d084d4b0d" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt; .</source>
          <target state="translated">Этот метод является синонимом &lt;code&gt;actual_passed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95d568c5372d8395dc875c9dc86c1185a887187b" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bd4d79c24738b6fd010c8a56304f2578c0ca9b" translate="yes" xml:space="preserve">
          <source>This method is available to all &lt;code&gt;IO::Socket&lt;/code&gt; implementations but may or may not be used by the individual domain subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a66a71f2968f9c82df6782744ec138e9c54cf9" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used as a string.</source>
          <target state="translated">Этот метод вызывается автоматически при использовании объекта в качестве строки.</target>
        </trans-unit>
        <trans-unit id="a819fa8543b1fdd50426768934ef9b1f1b767855" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used in string context.</source>
          <target state="translated">Этот метод вызывается автоматически при использовании объекта в контексте строки.</target>
        </trans-unit>
        <trans-unit id="ac138a74ffc74278892e510893352f2e36c5d5e7" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;response&lt;/code&gt; as a method with one argument. It should return an array of 2 values, the 3-digit status code and a flag which is true when this is part of a multi-line response and this line is not the last.</source>
          <target state="translated">Этот метод вызывается &lt;code&gt;response&lt;/code&gt; как метод с одним аргументом. Он должен возвращать массив из 2 значений, 3-значного кода состояния и флага, который является истинным, когда это часть многострочного ответа, а эта строка не последняя.</target>
        </trans-unit>
        <trans-unit id="caa6afaab7cedc695e3c6f58f69b2ab8274688f3" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt; , or a subclass thereof.</source>
          <target state="translated">Этот метод вызывается во время построения &lt;code&gt;IO::Pipe::new&lt;/code&gt; для вновь созданного объекта &lt;code&gt;IO::Pipe&lt;/code&gt; . Он возвращает массив из двух объектов, включенных в &lt;code&gt;IO::Pipe::End&lt;/code&gt; или его подкласс.</target>
        </trans-unit>
        <trans-unit id="802fcb0eb2882b26bc56d5bf7fddba3f3126ee6f" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt;, or a subclass thereof.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5287b2e5ba98e503e67859e5f2d01d79cbfa6c5e" translate="yes" xml:space="preserve">
          <source>This method is called to print debugging information. TEXT is the text being sent. The method should return the text to be printed.</source>
          <target state="translated">Этот метод вызывается для печати отладочной информации.TEXT-это текст,который отправляется.Метод должен возвращать текст для печати.</target>
        </trans-unit>
        <trans-unit id="2804b4df08740bd5a57eb70c9cfa0a8dcbe84738" translate="yes" xml:space="preserve">
          <source>This method is called when Math::BigFloat encounters an object it doesn't know how to handle. For instance, assume $x is a Math::BigFloat, or subclass thereof, and $y is defined, but not a Math::BigFloat, or subclass thereof. If you do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167b29ab442c8210c9356c7997b2fd2247776b0" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</source>
          <target state="translated">Этот метод вызывается, когда дескриптор считывается через &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8681e541d8a457af5b2a8ca5d7fb05501b6037" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;readline HANDLE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6629dc17ac853da211380c0f404bf1fca26aed1" translate="yes" xml:space="preserve">
          <source>This method is called with two arguments: the relevant package name, and a reference to a variable or subroutine for which package-defined attributes are desired. The expected return value is a list of associated attributes. This list may be empty.</source>
          <target state="translated">Этот метод вызывается с двумя аргументами:соответствующее имя пакета и ссылка на переменную или подпрограмму,для которой нужны атрибуты пакета.Ожидаемое возвращаемое значение-это список соответствующих атрибутов.Этот список может быть пустым.</target>
        </trans-unit>
        <trans-unit id="45320fc2f3e3a4eca2479ec9f217dfab3504ebe5" translate="yes" xml:space="preserve">
          <source>This method is called with two fixed arguments, followed by the list of attributes from the relevant declaration. The two fixed arguments are the relevant package name and a reference to the declared subroutine or variable. The expected return value is a list of attributes which were not recognized by this handler. Note that this allows for a derived class to delegate a call to its base class, and then only examine the attributes which the base class didn't already handle for it.</source>
          <target state="translated">Этот метод вызывается с двумя фиксированными аргументами,за которыми следует список атрибутов из соответствующей декларации.Два фиксированных аргумента-это имя соответствующего пакета и ссылка на объявленную подпрограмму или переменную.Ожидаемое возвращаемое значение-это список атрибутов,которые не были распознаны данным обработчиком.Обратите внимание,что это позволяет производному классу делегировать вызов своему базовому классу,а затем рассматривать только те атрибуты,с которыми базовый класс еще не работал.</target>
        </trans-unit>
        <trans-unit id="6abefc963006076df05b84dfc6d2811ce9f6040b" translate="yes" xml:space="preserve">
          <source>This method is deprecated if running under Perl 5.8, and is no longer present if running under Perl 5.9</source>
          <target state="translated">Этот метод является устаревшим,если он работает на Perl 5.8,и больше не применяется,если он работает на Perl 5.9.</target>
        </trans-unit>
        <trans-unit id="5c663722b6a1ec14ffe0820b635acf25e140b2e8" translate="yes" xml:space="preserve">
          <source>This method is invoked after gathering up all the lines in a paragraph and after determining the cutting state of the paragraph, but before trying to further parse or interpret them. After &lt;b&gt;preprocess_paragraph()&lt;/b&gt; returns, the current cutting state (which is returned by &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ) is examined. If it evaluates to true then input text (including the given &lt;code&gt;$text&lt;/code&gt; ) is cut (not processed) until the next POD directive is encountered.</source>
          <target state="translated">Этот метод вызывается после сбора всех строк в абзаце и после определения состояния обрезки абзаца, но перед попыткой их дальнейшего анализа или интерпретации. После возврата &lt;b&gt;preprocess_paragraph ()&lt;/b&gt; проверяется текущее состояние резки (которое возвращается &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ). Если оно истинно, то входной текст (включая данный &lt;code&gt;$text&lt;/code&gt; ) вырезается (не обрабатывается) до тех пор, пока не встретится следующая директива POD.</target>
        </trans-unit>
        <trans-unit id="10379a9139313cde9e23b44b9d3191ab35fe83cb" translate="yes" xml:space="preserve">
          <source>This method is invoked at the beginning of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document initialization.</source>
          <target state="translated">Этот метод вызывается в начале обработки для каждого документа POD,который встречается на входе.Подклассы должны переопределять этот метод для выполнения инициализации каждого документа.</target>
        </trans-unit>
        <trans-unit id="413604196761a8f6291ef93425b6ff6c449d0805" translate="yes" xml:space="preserve">
          <source>This method is invoked at the end of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document finalization.</source>
          <target state="translated">Этот метод вызывается в конце обработки для каждого документа POD,который встречается на входе.Подклассы должны переопределять этот метод для выполнения любой доработки каждого документа.</target>
        </trans-unit>
        <trans-unit id="c39c6b3f4be6d469d8afebc0b47e837d73cf3993" translate="yes" xml:space="preserve">
          <source>This method is invoked by &lt;b&gt;parse_from_filehandle()&lt;/b&gt; immediately</source>
          <target state="translated">Этот метод немедленно вызывается &lt;b&gt;функцией parse_from_filehandle ()&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6747dae8cbf5615de1cf353ad79e0a07cee8a900" translate="yes" xml:space="preserve">
          <source>This method is less often useful. It assumes that the string stored in the struct is null-terminated, and disregards the length information.</source>
          <target state="translated">Этот метод менее полезен.Он предполагает,что строка,хранящаяся в структуре,является ноль-терминированной,и не учитывает информацию о ее длине.</target>
        </trans-unit>
        <trans-unit id="2f27eac3492ebadd4d8f82dcb6d874e3db599873" translate="yes" xml:space="preserve">
          <source>This method is no longer used and can be omitted. Methods that are not implemented by a subclass will be inherited from this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79ad557d9b0fbcd0831200e697c308d8d3ffa30" translate="yes" xml:space="preserve">
          <source>This method is non-blocking, and will return only as many items as are available to fulfill the request:</source>
          <target state="translated">Этот метод является неблокирующим и возвращает только то количество элементов,которое доступно для выполнения запроса:</target>
        </trans-unit>
        <trans-unit id="6fb78fde591144d3983cff09b4ae34dcd5c3fb9d" translate="yes" xml:space="preserve">
          <source>This method is not present if running under Perl 5.9, as the PMROOT information is no longer stored directly in the hash.</source>
          <target state="translated">Этот метод не применяется,если он работает по стандарту Perl 5.9,так как информация PMROOT больше не хранится непосредственно в хэше.</target>
        </trans-unit>
        <trans-unit id="f1244eb4316f69131f6963e6774a849bda60f19c" translate="yes" xml:space="preserve">
          <source>This method is of no use for general Perl threads programming. Its intent is to provide other (XS-based) thread modules with the capability to access, and possibly manipulate, the underlying thread structure associated with a Perl thread.</source>
          <target state="translated">Этот метод бесполезен для общего программирования Perl-потоков.Его целью является предоставление другим (основанным на XS)потоковым модулям возможности доступа и,возможно,манипулирования базовой структурой потока,связанной с потоком Perl.</target>
        </trans-unit>
        <trans-unit id="21dc78ea221a1896dd75e4ea5a218dfbc7c4df02" translate="yes" xml:space="preserve">
          <source>This method is protected and not intended to be called outside of MakeMaker.</source>
          <target state="translated">Этот метод защищен и не предназначен для вызова за пределами MakeMaker.</target>
        </trans-unit>
        <trans-unit id="e5a20cfe7a533839e6244ee0ceb882a48e01de5e" translate="yes" xml:space="preserve">
          <source>This method is similar to share() but allows you to explicitly name the package that symbols should be shared from. The symbol names (including type characters) are supplied as an array reference.</source>
          <target state="translated">Этот метод похож на share(),но позволяет явно указать имя пакета,из которого должны делиться символы.Имена символов (включая символы типа)поставляются в качестве ссылки на массив.</target>
        </trans-unit>
        <trans-unit id="f5a57d1e0f15bd04707c86271032904c47bf2e9b" translate="yes" xml:space="preserve">
          <source>This method is the one you usually want. It constructs a string using the length and offset information in the struct: for ordinary scalars it will return the string that you'd see from Perl, even if it contains null characters.</source>
          <target state="translated">Этот метод-тот,который вы обычно хотите.Он создает строку,используя информацию о длине и смещении в структуре:для обычных скаляров он вернет строку,которую вы увидите из Perl,даже если она содержит нулевые символы.</target>
        </trans-unit>
        <trans-unit id="01115bf69ddf4deb1227d201ea74e47486095d25" translate="yes" xml:space="preserve">
          <source>This method is triggered when a tied hash is about to go out of scope. You don't really need it unless you're trying to add debugging or have auxiliary state to clean up. Here's a very simple function:</source>
          <target state="translated">Этот метод срабатывает,когда связанный хэш вот-вот выйдет из-под контроля.На самом деле он вам не нужен,если только вы не пытаетесь добавить отладку или иметь вспомогательное состояние для очистки.Вот очень простая функция:</target>
        </trans-unit>
        <trans-unit id="2987f28dec8ef9effc2010b2cf05de3e78ff66c2" translate="yes" xml:space="preserve">
          <source>This method is triggered when the user uses the exists() function on a particular hash. In our example, we'll look at the &lt;code&gt;{LIST}&lt;/code&gt; hash element for this:</source>
          <target state="translated">Этот метод запускается, когда пользователь использует функцию exists () для определенного хэша. В нашем примере для этого мы рассмотрим хэш-элемент &lt;code&gt;{LIST}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="642b5a68b22f43aa4631e9ecbebcec5f49cf6aa8" translate="yes" xml:space="preserve">
          <source>This method is triggered when the whole hash is to be cleared, usually by assigning the empty list to it.</source>
          <target state="translated">Этот метод срабатывает,когда нужно очистить весь хэш,обычно присваивая ему пустой список.</target>
        </trans-unit>
        <trans-unit id="b7c5e76fa8c5d820b269407c2691745bfe513299" translate="yes" xml:space="preserve">
          <source>This method is triggered when we remove an element from the hash, typically by using the delete() function. Again, we'll be careful to check whether they really want to clobber files.</source>
          <target state="translated">Этот метод срабатывает,когда мы удаляем элемент из хэша,обычно с помощью функции delete().Опять же,мы будем внимательны,чтобы проверить,действительно ли они хотят засорять файлы.</target>
        </trans-unit>
        <trans-unit id="d44b267a60e501cab8cef2efaa122beb61916cef" translate="yes" xml:space="preserve">
          <source>This method is used to add to the currently selected sections and subsections of POD documentation that are to be printed and/or processed. See &amp;lt;select()&amp;gt; for replacing the currently selected sections.</source>
          <target state="translated">Этот метод используется для добавления к текущим выбранным разделам и подразделам документации POD, которые должны быть распечатаны и / или обработаны. См. &amp;lt;Select ()&amp;gt; для замены текущих выбранных разделов.</target>
        </trans-unit>
        <trans-unit id="79298df7a94b5d243fe4caa12d96cacff3087b81" translate="yes" xml:space="preserve">
          <source>This method is used to determine if the block of text given in &lt;code&gt;$paragraph&lt;/code&gt; falls within the currently selected set of POD sections and subsections to be printed or processed. This method is also responsible for keeping track of the current input section and subsections. It is assumed that &lt;code&gt;$paragraph&lt;/code&gt; is the most recently read (but not yet processed) input paragraph.</source>
          <target state="translated">Этот метод используется для определения того, попадает ли блок текста, указанный в &lt;code&gt;$paragraph&lt;/code&gt; в текущий выбранный набор разделов и подразделов POD для печати или обработки. Этот метод также отвечает за отслеживание текущего раздела и подразделов ввода. Предполагается, что &lt;code&gt;$paragraph&lt;/code&gt; - это последний прочитанный (но еще не обработанный) входной абзац.</target>
        </trans-unit>
        <trans-unit id="cb88ba93625bb2592aeeb6754a8b29bf08054638" translate="yes" xml:space="preserve">
          <source>This method is used to load a facet by name (or key). It will attempt to load the facet class, if it succeeds it will return the class it loaded. If it fails it will return &lt;code&gt;undef&lt;/code&gt;. This caches the result at the class level so that future calls will be faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbe3e628f204e314a28a9c25f8f03f14e0f6464" translate="yes" xml:space="preserve">
          <source>This method is used to select the particular sections and subsections of POD documentation that are to be printed and/or processed. The existing set of selected sections is</source>
          <target state="translated">Этот метод используется для выбора отдельных разделов и подразделов документации POD,которые должны быть распечатаны и/или обработаны.Существующий набор выбранных разделов</target>
        </trans-unit>
        <trans-unit id="bef747284ac03954e21b22973b38b9cf4e4e7f3d" translate="yes" xml:space="preserve">
          <source>This method is useful if you need to perform your own interpolation of interior sequences and can't rely upon &lt;b&gt;interpolate&lt;/b&gt; to expand them in simple bottom-up order.</source>
          <target state="translated">Этот метод полезен, если вам нужно выполнить собственную интерполяцию внутренних последовательностей и вы не можете полагаться на &lt;b&gt;интерполяцию,&lt;/b&gt; чтобы развернуть их в простом порядке снизу вверх.</target>
        </trans-unit>
        <trans-unit id="49a58cbb089494a695c730a567717e544a3c0dd9" translate="yes" xml:space="preserve">
          <source>This method isn't terribly useful since modules which share the same Test::Builder object might get exported to different packages and only the last one will be honored.</source>
          <target state="translated">Этот метод не очень полезен,так как модули,которые используют один и тот же объект Test::Builder,могут быть экспортированы в разные пакеты,и только последний из них будет удостоен чести.</target>
        </trans-unit>
        <trans-unit id="5c881172eff7368918f5da216c5dcea0fcc3039d" translate="yes" xml:space="preserve">
          <source>This method joins together all requirements across a number of phases and types into a new &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object. If arguments are omitted, it defaults to &quot;runtime&quot;, &quot;build&quot; and &quot;test&quot; for phases and &quot;requires&quot; and &quot;recommends&quot; for types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6554ac6945a5df20c377de63d8de44dbce743773" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;../perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово метода задокументировано &lt;a href=&quot;../perlobj#Destructors&quot;&gt;в разделе Деструкторы в perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="661a4e6337bec9fa5b81482e46ab4bf4c5f238c8" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;&quot;Destructors&quot; in perlobj&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e359554a4d991920df0d798d38cb8b6bf47ec29" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово метода задокументировано &lt;a href=&quot;perlobj#Destructors&quot;&gt;в разделе Деструкторы в perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c21da25dd954f9e366c6cef85d1af33e75fddf8f" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually failed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов на самом деле были неудачными,независимо от того,была ли найдена директива TODO или нет.</target>
        </trans-unit>
        <trans-unit id="a2b6c5d7eeef2dcb58cd2d68cdfe40caf21f8820" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed but were declared as &quot;TODO&quot; tests.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов на самом деле прошли,но были объявлены как &quot;TODO&quot; тесты.</target>
        </trans-unit>
        <trans-unit id="08a5db262046c866f7d810a5b71d8ec989df7d80" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов фактически прошли,независимо от того,была ли найдена директива TODO или нет.</target>
        </trans-unit>
        <trans-unit id="7562f7ac693aec459c0c9b344acb705680f1f7f7" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests failed. If a test passed but had a TODO directive, it will &lt;b&gt;NOT&lt;/b&gt; be counted as a failed test.</source>
          <target state="translated">Этот метод позволяет узнать, какие (или сколько) тестов не прошли. Если тест прошел, но имел директиву TODO, он &lt;b&gt;НЕ&lt;/b&gt; будет считаться неудачным.</target>
        </trans-unit>
        <trans-unit id="b1956c9e443594eef5939e2522e06e528138f73a" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had SKIP directives.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов имели SKIP директивы.</target>
        </trans-unit>
        <trans-unit id="d552dee0411d16f26c2347ec73027455bcd691a0" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had TODO directives.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов имели TODO директивы.</target>
        </trans-unit>
        <trans-unit id="62d19246ed330e746e1fe150131f18c164bb14d2" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests passed. If a test failed but had a TODO directive, it will be counted as a passed test.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов вы прошли.Если тест не удался,но имел директиву TODO,то он будет засчитан как пройденный тест.</target>
        </trans-unit>
        <trans-unit id="5cdb3f6929d50bb5330f8f315f2338f1cd8897fc" translate="yes" xml:space="preserve">
          <source>This method marks the requirements finalized. Subsequent attempts to change the requirements will be fatal,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc582265ee4f696fc9e8e3fad6147cf5023780c3" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a block of verbatim text is encountered. It is passed the following parameters:</source>
          <target state="translated">Этот метод может быть переопределен подклассами для принятия соответствующих мер при обнаружении блока дословного текста.Ему передаются следующие параметры:</target>
        </trans-unit>
        <trans-unit id="2ef97fe79f3074bd51a79fd7f9a20c0d8326e891" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a normal block of POD text is encountered (although the base class method will usually do what you want). It is passed the following parameters:</source>
          <target state="translated">Этот метод может быть переопределен подклассами,чтобы предпринять соответствующее действие,когда встречается обычный блок POD текста (хотя метод базового класса обычно делает то,что вы хотите).Ему передаются следующие параметры:</target>
        </trans-unit>
        <trans-unit id="f193021bd1e2803e8135ddd336589fd3fdb1031b" translate="yes" xml:space="preserve">
          <source>This method merely runs the parser and parses all of the TAP.</source>
          <target state="translated">Этот метод просто запускает синтаксический анализатор и анализирует все TAP.</target>
        </trans-unit>
        <trans-unit id="d5b810a222612f34da5ba09951a3a157e593734d" translate="yes" xml:space="preserve">
          <source>This method only works on Perl v5.9.4 or later.</source>
          <target state="translated">Этот метод работает только на Perl v5.9.4 или более поздней версии.</target>
        </trans-unit>
        <trans-unit id="711e3f6546ee99d694d8611421083f48f729a0be" translate="yes" xml:space="preserve">
          <source>This method parses the passed in string and adds the appropriate requirement for the given module. A version can be a Perl &quot;v-string&quot;. It understands version ranges as described in the &lt;a href=&quot;CPAN::Meta::Spec#Version-Ranges&quot;&gt;&quot;Version Ranges&quot; in CPAN::Meta::Spec&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb04a70399efe3a3bc64926ce7a5f07e9940d0a" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the interior-sequence. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">Этот метод выполняет любую необходимую очистку для внутренней последовательности. Если вы переопределите этот метод, &lt;b&gt;обязательно&lt;/b&gt; вызовите родительский метод из вашего собственного метода, в противном случае</target>
        </trans-unit>
        <trans-unit id="714dcc55d92cf752f4b4184074298408c801245b" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the parse-tree. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">Этот метод выполняет любую необходимую очистку дерева синтаксического анализа. Если вы переопределите этот метод, &lt;b&gt;обязательно&lt;/b&gt; вызовите родительский метод из вашего собственного метода, в противном случае</target>
        </trans-unit>
        <trans-unit id="094b13118759d86cdc1f33cdf2b7a72869820716" translate="yes" xml:space="preserve">
          <source>This method performs any necessary object initialization. It takes no arguments (other than the object instance of course, which is typically copied to a local variable named &lt;code&gt;$self&lt;/code&gt; ). If subclasses override this method then they</source>
          <target state="translated">Этот метод выполняет любую необходимую инициализацию объекта. Он не принимает никаких аргументов (кроме экземпляра объекта, который обычно копируется в локальную переменную с именем &lt;code&gt;$self&lt;/code&gt; ). Если подклассы переопределяют этот метод, они</target>
        </trans-unit>
        <trans-unit id="1b4637e9cdcc1db5f14b9635de49858c878c102c" translate="yes" xml:space="preserve">
          <source>This method prepends the given text or parse-tree to the current parse-tree. If the first item on the parse-tree is text and the argument is also text, then the text is prepended to the first item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">Этот метод преобразует заданный текст или дерево разбора к текущему дереву разбора.Если первым элементом в дереве разбора является текст,а аргументом также является текст,то текст префиксовывается к первому элементу (не добавляется как отдельная строка).В противном случае аргумент добавляется как новая строка или дерево разбора</target>
        </trans-unit>
        <trans-unit id="843c78718fa264afa1695d6f64c3d712c49fd84a" translate="yes" xml:space="preserve">
          <source>This method prints the test as a string. It will probably be similar, but not necessarily identical, to the original test line. Directives are capitalized, some whitespace may be trimmed and a test number will be added if it was not present in the original line. If you need the original text of the test line, use the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">Этот метод печатает тест в виде строки. Вероятно, она будет похожа, но не обязательно идентична исходной тестовой строке. Директивы пишутся с заглавной буквы, некоторые пробелы могут быть обрезаны, и будет добавлен тестовый номер, если его не было в исходной строке. Если вам нужен исходный текст тестовой строки, используйте &lt;code&gt;raw&lt;/code&gt; метод.</target>
        </trans-unit>
        <trans-unit id="c461db5fa5d2d546751540785c1da918e27ef9ee" translate="yes" xml:space="preserve">
          <source>This method processes an XS file and sends output to a C file. The method may be called as a function (this is the legacy interface) and will then use a singleton as invocant.</source>
          <target state="translated">Этот метод обрабатывает XS-файл и отправляет вывод в C-файл.Метод может быть вызван как функция (это наследственный интерфейс)и затем будет использовать одиночную кнопку в качестве инвоканта.</target>
        </trans-unit>
        <trans-unit id="443a8a4abd0996a8f53eec3622235de842b5198f" translate="yes" xml:space="preserve">
          <source>This method reconstructs the encoding object if necessary. If you need to store the state during encoding, this is where you clone your object.</source>
          <target state="translated">Этот метод при необходимости восстанавливает объект кодирования.Если вам нужно сохранить состояние во время кодирования,то именно здесь вы клонируете свой объект.</target>
        </trans-unit>
        <trans-unit id="4be2e04731b97866ee5b4ac0d1bde14c1df759bd" translate="yes" xml:space="preserve">
          <source>This method returns 0 if the object can be modified with the given operation, or 1 if not.</source>
          <target state="translated">Этот метод возвращает 0,если объект можно модифицировать данной операцией,или 1,если нет.</target>
        </trans-unit>
        <trans-unit id="3441f0af9f59d5dc45617aeb66969ab6a0963d73" translate="yes" xml:space="preserve">
          <source>This method returns TRUE if the GP field of the GV is NULL.</source>
          <target state="translated">Этот метод возвращает TRUE,если поле GP в GV равно NULL.</target>
        </trans-unit>
        <trans-unit id="ecc3b6039f5ff097f5929abca6feaac0bb1a1360" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; object for the optional feature with the given identifier. If no feature with that identifier exists, an exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c15f83b33ebe9626be021d25c41e755d48695b2" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object describing all the prereqs for the distribution. If an arrayref of feature identifiers is given, the prereqs for the identified features are merged together with the distribution's core prereqs before the CPAN::Meta::Prereqs object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbe2a6326a123f59ab56735cf3ce21971d48ace" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object for the given phase/type combination. If no prerequisites are registered for that combination, a new CPAN::Meta::Requirements object will be returned, and it may be added to as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb173e29985a69e4c742ab91cf231ef598525ea6" translate="yes" xml:space="preserve">
          <source>This method returns a Prereqs object that is identical to the original object, but can be altered without affecting the original object. Finalization does not survive cloning, meaning that you may clone a finalized set of prereqs and then modify the clone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc7e3cb1081d01b93496efbbf89c0031ab07cf1" translate="yes" xml:space="preserve">
          <source>This method returns a clone of the invocant. The clone and the original object can then be changed independent of one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a660976840e65d0897ee15b1bb3e1d439893ed69" translate="yes" xml:space="preserve">
          <source>This method returns a deep copy of the object's metadata as an unblessed hash reference. It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0124bb5624eddaaba9be0a0792e6b70917f5e9" translate="yes" xml:space="preserve">
          <source>This method returns a hashref containing structures suitable for dumping into a distmeta data structure. It is made up of hashes and strings, only; there will be no Prereqs, CPAN::Meta::Requirements, or &lt;code&gt;version&lt;/code&gt; objects inside it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eae8a85642b918b7b127321e5eaeb3c1f6a5f9d" translate="yes" xml:space="preserve">
          <source>This method returns a list of &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; objects, one for each optional feature described by the distribution's metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac97a18eb985efa8a4676cc3a8b597409e671815" translate="yes" xml:space="preserve">
          <source>This method returns a list of all the modules for which requirements have been specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b58df6d5a2c18121bb505720d0e804af99a7dd" translate="yes" xml:space="preserve">
          <source>This method returns a list of the currently active section headings and subheadings in the document being parsed. The list of headings returned corresponds to the most recently parsed paragraph of the input.</source>
          <target state="translated">Этот метод возвращает список текущих активных заголовков и подзаголовков разделов в анализируемом документе.Возвращаемый список заголовков соответствует последнему проанализированному параграфу входного текста.</target>
        </trans-unit>
        <trans-unit id="1845f64f5dff026e99802fb2b0ed9543ebdf51a7" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the first document in the given YAML string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3273d3871ffcb26a5d4043675d561afe60f650f3" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the structure represented by the given JSON string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02520ccc95c7235e07b3d427ec797731c99b95a2" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta::Prereqs objects in which all the other prerequisites given are merged into the current set. This is primarily provided for combining a distribution's core prereqs with the prereqs of one of its optional features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26456adf48b8270a780502b4eaebd6bec5340107" translate="yes" xml:space="preserve">
          <source>This method returns a new set of Prereqs. The input should look like the contents of the &lt;code&gt;prereqs&lt;/code&gt; field described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;, meaning something more or less like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809605a8e893e3bde6161ec466a7256b077b2f58" translate="yes" xml:space="preserve">
          <source>This method returns a serialized copy of the object's metadata as a character string. (The strings are &lt;b&gt;not&lt;/b&gt; UTF-8 encoded.) It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd6da7f680f7708aaaafbe88d4fbd81537fbb12" translate="yes" xml:space="preserve">
          <source>This method returns either a hash reference (in scalar context) or a list or hash references (in array context) that contains information about each of the header fields in the compressed data stream(s).</source>
          <target state="translated">Этот метод возвращает либо хэш-ссылку (в скалярном контексте),либо список или хэш-ссылку (в контексте массива),которая содержит информацию о каждом из полей заголовка в сжатом потоке данных.</target>
        </trans-unit>
        <trans-unit id="5613e8d87481a66c6331ffba3f17e879703b23af" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">Этот метод возвращает объект &lt;a href=&quot;../builder&quot;&gt;Test :: Builder,&lt;/a&gt; связанный с Your :: Class. Это не конструктор, поэтому вы можете вызывать его сколько угодно раз.</target>
        </trans-unit>
        <trans-unit id="df2acf1db6d765e8b7af473cf018815f141ba1b9" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ed5af13a1529fb7b65c36511f205e560c0e629" translate="yes" xml:space="preserve">
          <source>This method returns the AV specific flags. In Perl 5.9 these are now stored in with the main SV flags, so this method is no longer present.</source>
          <target state="translated">Этот метод возвращает флаги,специфичные для AV.В Perl 5.9 они теперь хранятся с основными флагами SV,поэтому этот метод больше не используется.</target>
        </trans-unit>
        <trans-unit id="230f2b0705cb9c1bd36492ae8437541d92944923" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt; th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">Этот метод возвращает байтовое смещение начала &lt;code&gt;$n&lt;/code&gt; й записи в файле. Если такой записи нет, возвращается неопределенное значение.</target>
        </trans-unit>
        <trans-unit id="738895c1b07cd50df5407037de05d0561fa1ae9c" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt;th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819846ea31de4c85ae8c84e9f4950b6d488925d" translate="yes" xml:space="preserve">
          <source>This method returns the currently stored JSON fragment as an lvalue, that is, you can manipulate it. This</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1febcdc386a8d7c1d008e8e3e3986be768008da7" translate="yes" xml:space="preserve">
          <source>This method returns the feature's identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ed7705e9d007aeb18dc15b134a8edd67224258" translate="yes" xml:space="preserve">
          <source>This method returns the feature's long description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5202bb9ec86dc5db010454c975e82230a5006be" translate="yes" xml:space="preserve">
          <source>This method returns the feature's prerequisites as a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda1e7a80b8c4ff8a50d7193bfa7f2353fb0bb3a" translate="yes" xml:space="preserve">
          <source>This method returns the internal length field, which consists of the number of internal bytes, not necessarily the number of logical characters.</source>
          <target state="translated">Этот метод возвращает поле внутренней длины,состоящее из количества внутренних байтов,не обязательно из количества логических символов.</target>
        </trans-unit>
        <trans-unit id="73630249386a32e1daa88a34d4ed3d64dadd0557" translate="yes" xml:space="preserve">
          <source>This method returns the list of all phases currently populated in the prereqs object, suitable for iterating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69b31bb0a594a163fa02bab7ede41d8139fbcc3" translate="yes" xml:space="preserve">
          <source>This method returns the list of all types currently populated in the prereqs object for the provided phase, suitable for iterating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3195470feffd08399489b4ea58a94cbd49fb15f2" translate="yes" xml:space="preserve">
          <source>This method returns the name of the glob, but if the first character of the name is a control character, then it converts it to ^X first, so that *^G would return &quot;^G&quot; rather than &quot;\cG&quot;.</source>
          <target state="translated">Этот метод возвращает имя глобуса,но если первый символ имени является управляющим,то сначала он преобразует его в ^X,так что *^G возвращает &quot;^G&quot;,а не &quot;\cG&quot;.</target>
        </trans-unit>
        <trans-unit id="d436f65e4ac4dfd0f8045b3c54271c25339bbf38" translate="yes" xml:space="preserve">
          <source>This method returns the name of the package that is the root of the compartment's namespace.</source>
          <target state="translated">Этот метод возвращает имя пакета,которое является корнем пространства имён отсека.</target>
        </trans-unit>
        <trans-unit id="b1039ff3465ca6dc27db9b5d11bc6e35d5848fc0" translate="yes" xml:space="preserve">
          <source>This method returns the number of [a certain kind of] errors encountered during processing of the XS file.</source>
          <target state="translated">Этот метод возвращает количество [определенного вида]ошибок,возникших при обработке файла XS.</target>
        </trans-unit>
        <trans-unit id="0d20c8d8462990e4c532228bf94cacc069885810" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes allocated (via malloc) for storing the string. This is 0 if the scalar does not &quot;own&quot; the string.</source>
          <target state="translated">Этот метод возвращает количество байт,выделенных (через malloc)для хранения строки.Это значение равно 0,если скаляр не &quot;владеет&quot; строкой.</target>
        </trans-unit>
        <trans-unit id="01d67962853aa369d48416e10b895f4851d158db" translate="yes" xml:space="preserve">
          <source>This method returns the requirements object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc49b5d5eff536554a52d021b3411834001a3a6e" translate="yes" xml:space="preserve">
          <source>This method returns the results of the parsing, one result at a time. Note that it is destructive. You can't rewind and examine previous results.</source>
          <target state="translated">Этот метод возвращает результаты анализа,по одному результату за раз.Обратите внимание,что он разрушителен.Нельзя перематывать и просматривать предыдущие результаты.</target>
        </trans-unit>
        <trans-unit id="0ab9ad920897cda27f5f563bb7197ba468b33916" translate="yes" xml:space="preserve">
          <source>This method returns the textual representation of the hyperlink as above, but without markers (read only). Depending on the link type this is one of the following alternatives (the + and * denote the portions of the text that are marked up):</source>
          <target state="translated">Этот метод возвращает текстовое представление гиперссылки,как указано выше,но без маркеров (только для чтения).В зависимости от типа ссылки это одна из следующих альтернатив (+и*обозначают части текста,которые помечены):</target>
        </trans-unit>
        <trans-unit id="59c2ab7b96065dfd63ce37b4f21c2d16dce7d68c" translate="yes" xml:space="preserve">
          <source>This method returns the value of the IV as an integer. It differs from &lt;code&gt;IV&lt;/code&gt; in that it returns the correct value regardless of whether it's stored signed or unsigned.</source>
          <target state="translated">Этот метод возвращает значение IV в виде целого числа. Он отличается от &lt;code&gt;IV&lt;/code&gt; тем, что возвращает правильное значение независимо от того, хранится оно со знаком или без знака.</target>
        </trans-unit>
        <trans-unit id="cd2332acd3062dbe524d95a2c5676842caa361ce" translate="yes" xml:space="preserve">
          <source>This method returns the version part of the &lt;code&gt;meta_spec&lt;/code&gt; entry in the distmeta structure. It is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097409eeb19e4610fc16463aab58579acca93a37" translate="yes" xml:space="preserve">
          <source>This method returns true if and only if all requirements are inclusive minimums -- that is, if their string expression is just the version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9d9f9dc3232d40e9c79f888b628345d7669615" translate="yes" xml:space="preserve">
          <source>This method returns true if the given file should be indexed. It decides this by checking the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;directory&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ff6d5b8ce053e96c242fd66e092358e70ec413" translate="yes" xml:space="preserve">
          <source>This method returns true if the given package should be indexed. It decides this by checking the &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740035cd86ced51cb784444de5c3729bee91714e" translate="yes" xml:space="preserve">
          <source>This method returns true if the requirements have been finalized by having the &lt;code&gt;finalize&lt;/code&gt; method called on them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91378c22b7ed1b00b6fef0cff4776f78b85e7e4b" translate="yes" xml:space="preserve">
          <source>This method returns true if the set of prereqs has been marked &quot;finalized,&quot; and cannot be altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1569bccb9cee6a2175f9b489178e6d0824ba382b" translate="yes" xml:space="preserve">
          <source>This method sets or returns the POD page this link points to.</source>
          <target state="translated">Этот метод устанавливает или возвращает страницу POD,на которую указывает эта ссылка.</target>
        </trans-unit>
        <trans-unit id="5626475bc6df98d403b9b1a4c6d8bd8eead196ba" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 15 for 7.5-point) that the header on each page will appear in. The header is usually just &quot;</source>
          <target state="translated">Этот метод задает размер (в полуточках,например,15 для 7,5 точки),в котором будет отображаться заголовок на каждой странице.Заголовок обычно просто &quot;</target>
        </trans-unit>
        <trans-unit id="49562bbb9cccfd05b2f9dd5f5c25626dc9296a99" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 21 for 10.5-point) that codeblocks (&quot;verbatim sections&quot;) will appear as.</source>
          <target state="translated">Этот метод задает размер (в полуточках,как 21 для 10.5 точки),которым будут отображаться кодовые блоки (&quot;дословные сечения&quot;).</target>
        </trans-unit>
        <trans-unit id="b751a506f13c7e1535b7f83c798a478f8a346484" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 26 for 13-point) that normal paragraphic text will appear in.</source>
          <target state="translated">Этот метод задает размер (в полуточках,как 26 для 13 точек),в котором будет отображаться обычный параграфный текст.</target>
        </trans-unit>
        <trans-unit id="4a47dc314786b539ecdca5143ef23b8e1941b547" translate="yes" xml:space="preserve">
          <source>This method should</source>
          <target state="translated">Этот метод должен</target>
        </trans-unit>
        <trans-unit id="a1c0bdcb0359edd01294194cece7860e3da71acb" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each</source>
          <target state="translated">Этот метод должен быть переопределен подклассами,которые желают выполнять препроцессирование любого вида для каждого из них</target>
        </trans-unit>
        <trans-unit id="4045b5b845e6b96a3e7f9e9b3149fb374504376e" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each block (paragraph) of POD documentation that appears in the input stream. The parameter &lt;code&gt;$text&lt;/code&gt; is the POD paragraph from the input file; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number for the beginning of the corresponding paragraph.</source>
          <target state="translated">Этот метод следует переопределить подклассами, которые хотят выполнять любую предварительную обработку для каждого блока (параграфа) документации POD, который появляется во входном потоке. Параметр &lt;code&gt;$text&lt;/code&gt; - это абзац POD из входного файла; а параметр &lt;code&gt;$line_num&lt;/code&gt; - это номер строки для начала соответствующего абзаца.</target>
        </trans-unit>
        <trans-unit id="517b86d5501e13cc5ca0478526d9e56418238e3c" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when a POD command paragraph (denoted by a line beginning with &quot;=&quot;) is encountered. When such a POD directive is seen in the input, this method is called and is passed:</source>
          <target state="translated">Этот метод должен быть переопределен подклассами для принятия соответствующего действия при встрече параграфа команды POD (обозначенного строкой,начинающейся со слова &quot;=&quot;).Когда на входе появляется такая директива POD,этот метод вызывается и передается:</target>
        </trans-unit>
        <trans-unit id="4057fa0aee2966d0f3fb518e4370c12ff228c00a" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when an interior sequence is encountered. An interior sequence is an embedded command within a block of text which appears as a command name (usually a single uppercase character) followed immediately by a string of text which is enclosed in angle brackets. This method is passed the sequence command &lt;code&gt;$seq_cmd&lt;/code&gt; and the corresponding text &lt;code&gt;$seq_arg&lt;/code&gt; . It is invoked by the &lt;b&gt;interpolate()&lt;/b&gt; method for each interior sequence that occurs in the string that it is passed. It should return the desired text string to be used in place of the interior sequence. The &lt;code&gt;$pod_seq&lt;/code&gt; argument is a reference to a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object which contains further information about the interior sequence. Please see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details if you need to access this additional information.</source>
          <target state="translated">Этот метод следует переопределить подклассами, чтобы предпринять соответствующие действия при обнаружении внутренней последовательности. Внутренняя последовательность - это встроенная команда в блоке текста, которая отображается как имя команды (обычно это один символ верхнего регистра), за которым сразу следует строка текста, заключенная в угловые скобки. В этот метод передается последовательность команды &lt;code&gt;$seq_cmd&lt;/code&gt; и соответствующий текст &lt;code&gt;$seq_arg&lt;/code&gt; . Он вызывается методом &lt;b&gt;interpolate ()&lt;/b&gt; для каждой внутренней последовательности, которая встречается в переданной строке. Он должен вернуть желаемую текстовую строку, которая будет использоваться вместо внутренней последовательности. &lt;code&gt;$pod_seq&lt;/code&gt; аргумент является ссылкой на &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; объект, который содержит дополнительную информацию о внутренней последовательности. Пожалуйста, смотрите &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; для получения подробной информации, если вам нужна эта дополнительная информация.</target>
        </trans-unit>
        <trans-unit id="429d3f42da5b40589bd5bfe3cdeaeea4b58f3cb7" translate="yes" xml:space="preserve">
          <source>This method takes a filename and does the following:</source>
          <target state="translated">Этот метод берет имя файла и делает следующее:</target>
        </trans-unit>
        <trans-unit id="7d455696794a1091f3f69965ce8778b043cee526" translate="yes" xml:space="preserve">
          <source>This method takes an input filehandle (which is assumed to already be opened for reading) and reads the entire input stream looking for blocks (paragraphs) of POD documentation to be processed. If no first argument is given the default input filehandle &lt;code&gt;STDIN&lt;/code&gt; is used.</source>
          <target state="translated">Этот метод принимает дескриптор входного файла (который, как предполагается, уже открыт для чтения) и считывает весь входной поток в поисках блоков (абзацев) документации POD для обработки. Если не указан первый аргумент, используется дескриптор входного файла по умолчанию &lt;code&gt;STDIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d21cbfa9655bea409751abece40beb185c2a106" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt; , that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt; . Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt; . It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">Этот метод принимает необязательный параметр &lt;code&gt;$flush_type&lt;/code&gt; , который управляет тем, как будет выполняться промывка. По умолчанию используется &lt;code&gt;$flush_type&lt;/code&gt; - &lt;code&gt;Z_FINISH&lt;/code&gt; . Другие допустимые значения для &lt;code&gt;$flush_type&lt;/code&gt; : &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; и &lt;code&gt;Z_BLOCK&lt;/code&gt; . Настоятельно рекомендуется устанавливать параметр &lt;code&gt;flush_type&lt;/code&gt; только в том случае, если вы полностью понимаете последствия того, что он делает - чрезмерное использование &lt;code&gt;flush&lt;/code&gt; может серьезно ухудшить достигнутый уровень сжатия. Подробности смотрите в документации по &lt;code&gt;zlib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb30c692d9b64ebdba6036a9ab8caf9a45ad7a4f" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt;, that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt;. Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt;, &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt;, &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt;. It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a36ff48f2f3559090075d4ecd3d184fea06bced" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, it has the exact same effect as invoking &amp;lt;select()&amp;gt; with no arguments.</source>
          <target state="translated">Этот метод не принимает аргументов, он имеет тот же эффект, что и вызов &amp;lt;select ()&amp;gt; без аргументов.</target>
        </trans-unit>
        <trans-unit id="21a6dff8df6ddbca7896a9686976cc84571da4fe" translate="yes" xml:space="preserve">
          <source>This method translates all text (including any embedded interior sequences) in the given text string &lt;code&gt;$text&lt;/code&gt; and returns the interpolated result. The parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number corresponding to the beginning of &lt;code&gt;$text&lt;/code&gt; .</source>
          <target state="translated">Этот метод переводит весь текст (включая любые встроенные внутренние последовательности) в заданную текстовую строку &lt;code&gt;$text&lt;/code&gt; и возвращает интерполированный результат. Параметр &lt;code&gt;$line_num&lt;/code&gt; - это номер строки, соответствующий началу &lt;code&gt;$text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d98885f1731321cbbe841c4174d52925fb86ae4c" translate="yes" xml:space="preserve">
          <source>This method turns an arbitrary string into a valid XHTML ID attribute value. The rules enforced, following &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt;, are:</source>
          <target state="translated">Этот метод превращает произвольную строку в допустимое значение атрибута XHTML ID. Следующие &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt; следующие правила :</target>
        </trans-unit>
        <trans-unit id="5d3c6a2354f8ed5d57f49370abc6615f8bbe3512" translate="yes" xml:space="preserve">
          <source>This method used to be useful back when Test::Builder worked on Perls before 5.6 which didn't have qr//. Now its pretty useless.</source>
          <target state="translated">Этот метод был полезен еще когда Test::Builder работал на Perls до 5.6,в которых не было qr//.Теперь он довольно бесполезен.</target>
        </trans-unit>
        <trans-unit id="5ce2bae285dbd09666d07f99e460e4eebea8c753" translate="yes" xml:space="preserve">
          <source>This method uses &lt;code&gt;commands_quote&lt;/code&gt; to determine the correct quote. If &lt;code&gt;commands_quote&lt;/code&gt; is a space, no quoting will take place.</source>
          <target state="translated">Этот метод использует &lt;code&gt;commands_quote&lt;/code&gt; для определения правильной цитаты. Если &lt;code&gt;commands_quote&lt;/code&gt; - это пробел, цитирование не выполняется.</target>
        </trans-unit>
        <trans-unit id="475ff388d47d9ff8c537b04d4cf8fd2786ec177c" translate="yes" xml:space="preserve">
          <source>This method was added in v0.20 of Math::BigRat (May 2007).</source>
          <target state="translated">Этот метод был добавлен в v0.20 из Math::BigRat (май 2007).</target>
        </trans-unit>
        <trans-unit id="a9fdbef062f1e260e975ac993cde1b7e7c35b43d" translate="yes" xml:space="preserve">
          <source>This method was added in v0.22 of Math::BigRat (April 2008).</source>
          <target state="translated">Этот метод был добавлен в v0.22 Math::BigRat (апрель 2008).</target>
        </trans-unit>
        <trans-unit id="4f274a73d8190736635c257c7c7cb3e3c0fe18c0" translate="yes" xml:space="preserve">
          <source>This method was added in v1.82 of Math::BigInt (April 2007).</source>
          <target state="translated">Этот метод был добавлен в v1.82 из книги Math::BigInt (апрель 2007).</target>
        </trans-unit>
        <trans-unit id="892100fd26e628f38d9cdb9d5d762a8a6ee16072" translate="yes" xml:space="preserve">
          <source>This method was added in v1.84 of Math::BigInt (April 2007).</source>
          <target state="translated">Этот метод был добавлен в v1.84 из Math::BigInt (апрель 2007).</target>
        </trans-unit>
        <trans-unit id="def53de6390772e9ab517671e2de82585ed2894d" translate="yes" xml:space="preserve">
          <source>This method was added in v1.87 of Math::BigInt (June 2007).</source>
          <target state="translated">Этот метод был добавлен в v1.87 Math::BigInt (июнь 2007).</target>
        </trans-unit>
        <trans-unit id="e5821a661d4054cf93a3f0baee35e1a4e8ee9c19" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">Этот метод будет вызываться при &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; функции eof .</target>
        </trans-unit>
        <trans-unit id="33be8d090d52cdf9ebec70873885856aba821ff5" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">Этот метод будет вызываться при &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; функции getc .</target>
        </trans-unit>
        <trans-unit id="d3cb58ce3651b90ff56e3c1a01aa5df7e96bc1d2" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;eof&lt;/code&gt; function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e47fe88d4c0ab44cf85620365ca3f9e7b2c4ea" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;getc&lt;/code&gt; function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07abfda6230642bdc24b2988efac200062ab0904" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Этот метод будет вызываться при закрытии дескриптора с помощью функции &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f4f5034957d7d4e9aa3a8edbd33a9e855059ad" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;close&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c952116674febc1216a1fb0e4796db40ca65ad8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">Этот метод будет вызываться при чтении дескриптора с помощью функций &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2c8df89bf1dd475294a80263c1998064bad01a4" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;sysread&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bcf4b7992a6d18135efe380f6cf616566ace5a" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Этот метод будет вызываться при записи дескриптора через функцию &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="808d3e7324564412ae6c4c95a1b83f642b5294f8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;syswrite&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7eb1cf0cb3798f7407e75f4a0686ab61a556fd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied array is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something and the value we're trying to put there.</source>
          <target state="translated">Этот метод будет вызываться каждый раз при установке (записи)элемента в связанном массиве.Он берет два аргумента за пределами своей собственной ссылки:индекс,в котором мы пытаемся что-то записать,и значение,которое мы пытаемся туда поместить.</target>
        </trans-unit>
        <trans-unit id="fef1865fb35cee1965cbfbe2864d43cfb61253d3" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is accessed (read). It takes one argument beyond its self reference: the key whose value we're trying to fetch.</source>
          <target state="translated">Этот метод будет срабатывать каждый раз при обращении к элементу в связанном хэше (чтении).Он берет один аргумент за пределами его самоназвания:ключ,значение которого мы пытаемся получить.</target>
        </trans-unit>
        <trans-unit id="6ff0eaa0013ee12dae761b1f3a38cc41d40d71c7" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something, and the value we're trying to put there.</source>
          <target state="translated">Этот метод будет срабатывать каждый раз,когда элемент в связанном хэше будет установлен (записан).Он берет два аргумента за пределами его самоназвания:индекс,в котором мы пытаемся что-то хранить,и значение,которое мы пытаемся туда поместить.</target>
        </trans-unit>
        <trans-unit id="f154ed5d9dede0079ff14f755f8d64da0b6d8569" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an individual element the tied array is accessed (read). It takes one argument beyond its self reference: the index whose value we're trying to fetch.</source>
          <target state="translated">Этот метод будет срабатывать каждый раз,когда к отдельному элементу обращается (читает)связанный массив.Он берет один аргумент за пределами его самоназвания:индекс,значение которого мы пытаемся получить.</target>
        </trans-unit>
        <trans-unit id="ce4bdb5814566177219471512f35e981a551516b" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="translated">Этот метод будет запускаться каждый раз, когда привязанный дескриптор печатается с помощью функций &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; . Помимо ссылки на себя, он также ожидает список, который был передан функции печати.</target>
        </trans-unit>
        <trans-unit id="46e361c76a8fe326ef26947ed7b27ef6314ab7da" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="translated">Этот метод будет запускаться каждый раз, когда привязанный дескриптор печатается с помощью &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; . Помимо ссылки на себя, он также ожидает формат и список, которые были переданы функции printf.</target>
        </trans-unit>
        <trans-unit id="6af30ad096d6acfeecb452b74adb4a3282b5cd33" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;print()&lt;/code&gt; or &lt;code&gt;say()&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743722ad4d09e8c7a81e0e8d919d08195ccf21c8" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;printf()&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2309a54c3a525e60bc8a57c49ad44a6f62e89e" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is accessed (read). It takes no arguments beyond its self reference, which is the object representing the scalar we're dealing with. Because in this case we're using just a SCALAR ref for the tied scalar object, a simple $$self allows the method to get at the real value stored there. In our example below, that real value is the process ID to which we've tied our variable.</source>
          <target state="translated">Этот метод будет вызываться каждый раз при обращении к связанной переменной (чтение).Он не принимает аргументов,кроме своей собственной ссылки,которая является объектом,представляющим скаляр,с которым мы имеем дело.Поскольку в данном случае мы используем только SCALAR-ссылку для связанного объекта скаляра,простой $$ сам по себе позволяет методу получить реальное значение,которое там хранится.В нашем примере ниже это вещественное значение является идентификатором процесса,к которому мы привязали нашу переменную.</target>
        </trans-unit>
        <trans-unit id="074aba193a7d4ab7fc2d92f3649243f7a2526fbd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is set (assigned). Beyond its self reference, it also expects one (and only one) argument: the new value the user is trying to assign. Don't worry about returning a value from STORE; the semantic of assignment returning the assigned value is implemented with FETCH.</source>
          <target state="translated">Этот метод будет срабатывать каждый раз при установке (присвоении)связанной переменной.Кроме самоназвания,он также ожидает один (и только один)аргумент:новое значение,которое пытается присвоить пользователь.Не беспокойтесь о возвращении значения из STORE;семантика назначения,возвращающая присвоенное значение,реализована с помощью FETCH.</target>
        </trans-unit>
        <trans-unit id="a70c828d5225a812501600b7ba6a4a618714e8ab" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below for more details.</source>
          <target state="translated">Этот метод будет срабатывать при &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; . Это может быть полезно, если классу нужно знать, когда дальнейшие вызовы производиться не будут. (За исключением DESTROY, конечно.) Подробнее см. Раздел &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&amp;laquo;Развязка Gotcha&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="2320a83af1339239a394fc9bed901eb3791c7ba6" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;untie&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dadf6ee9215d45834b1ebd72a2a25ea540b456" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with other object classes, such a method is seldom necessary, because Perl deallocates its moribund object's memory for you automatically--this isn't C++, you know. We'll use a DESTROY method here for debugging purposes only.</source>
          <target state="translated">Этот метод будет запущен при необходимости уничтожения связанной переменной.Как и в случае с другими объектными классами,в таком методе редко возникает необходимость,так как Perl автоматически распределяет память своего объекта moribund для вас-это не C++.Здесь мы будем использовать метод DESTROY только в целях отладки.</target>
        </trans-unit>
        <trans-unit id="aba37b5cce6ea3c8466dd8e8d0896cfdf208ff19" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with the scalar tie class, this is almost never needed in a language that does its own garbage collection, so this time we'll just leave it out.</source>
          <target state="translated">Этот метод будет запущен при необходимости уничтожения связанной переменной.Как и в случае со скалярным классом tie,он практически никогда не нужен в языке,который делает свою собственную сборку мусора,поэтому на этот раз мы просто пропустим его.</target>
        </trans-unit>
        <trans-unit id="1a30c4c1dc9863704c12fdf1f1b5872e08e0156b" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys() or each() call.</source>
          <target state="translated">Этот метод будет вызываться при выполнении пользователем итерации через хэш,например,с помощью key()или каждого вызова функции().</target>
        </trans-unit>
        <trans-unit id="40a2e00fab75d6d886ea418ffd88f8aa1dbe8119" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys(), values(), or each() call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241be65c4fe89a7db745cd5e6028ee4cea0a4bd5" translate="yes" xml:space="preserve">
          <source>This method will do a file transfer between two remote ftp servers. If &lt;code&gt;DEST_FILE&lt;/code&gt; is omitted then the leaf name of &lt;code&gt;SRC_FILE&lt;/code&gt; will be used.</source>
          <target state="translated">Этот метод выполняет передачу файлов между двумя удаленными серверами ftp. Если &lt;code&gt;DEST_FILE&lt;/code&gt; опущен, будет использоваться &lt;code&gt;SRC_FILE&lt;/code&gt; имя SRC_FILE .</target>
        </trans-unit>
        <trans-unit id="714241362af6626714a493d5da28a5f3831d1838" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the interior sequence's text.</source>
          <target state="translated">Этот метод получит/установит соответствующее дерево разбора текста внутренней последовательности.</target>
        </trans-unit>
        <trans-unit id="81f73213adc2e84a3c6f2373dbd483c50f803f34" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the paragraph's text.</source>
          <target state="translated">Этот метод получит/установит соответствующее дерево разбора текста абзаца.</target>
        </trans-unit>
        <trans-unit id="e9978ed2996dd9bcc230654360a798a867715edb" translate="yes" xml:space="preserve">
          <source>This method will read the named file and deserialize it to a data structure, determining whether it should be JSON or YAML based on the filename. The file will be read using the &quot;:utf8&quot; IO layer.</source>
          <target state="translated">Этот метод прочитает именованный файл и десериализует его в структуру данных,определяя,должен ли он быть JSON или YAML на основе имени файла.Файл будет прочитан с помощью IO-уровня &quot;:utf8&quot;.</target>
        </trans-unit>
        <trans-unit id="b67738b0ceee5f0e621228df6d40624bf3ba896e" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt; . It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">Этот метод сбросит объект дефляции &lt;code&gt;$d&lt;/code&gt; . Его можно использовать, когда вы сжимаете несколько потоков данных и хотите использовать один и тот же объект для сжатия каждого из них. Его следует использовать только после того, как предыдущий поток данных был успешно &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; , то есть вызов $ d-&amp;gt; flush (Z_FINISH) вернул &lt;code&gt;Z_OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="712ee53e5b0c4e0aae2bb7946407fb40095db000" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt;. It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c896817c407b0236207a4f8181caaf53efac5199" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt; . It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="translated">Этот метод сбросит объект инфляции &lt;code&gt;$i&lt;/code&gt; . Его можно использовать, когда вы распаковываете несколько потоков данных и хотите использовать один и тот же объект для распаковки каждого из них.</target>
        </trans-unit>
        <trans-unit id="97c63a4cc6642689474dcac8d841e924f47f9df6" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt;. It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105ad0604f1ec5de22899d40a47afc4c0ebd09fb" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c910df5717be7f7845368e614ada212ccc95c585" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="translated">Этот метод вернет объект &lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result,&lt;/a&gt; представляющий текущую строку TAP.</target>
        </trans-unit>
        <trans-unit id="94dd0495b55dbb9479c740e8c7707434102ef2b3" translate="yes" xml:space="preserve">
          <source>This method will return the</source>
          <target state="translated">Этот метод вернет</target>
        </trans-unit>
        <trans-unit id="64b72f6b7b9c90292fdf0c07acf00371c342b31f" translate="yes" xml:space="preserve">
          <source>This method will return the corresponding text of the paragraph.</source>
          <target state="translated">Этот метод вернет соответствующий текст пункта.</target>
        </trans-unit>
        <trans-unit id="ab1780bb79394a56eb62561ff6bce59239ad7057" translate="yes" xml:space="preserve">
          <source>This method will validate facet data and return a list of errors. If no errors are found this will return an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb400e4423b1637ce4c15ebb34457f31a6dff2be" translate="yes" xml:space="preserve">
          <source>This method, also added in 5.22, returns the ID of the outer padlist.</source>
          <target state="translated">Этот метод,также добавленный в 5.22,возвращает идентификатор внешнего вилочного списка.</target>
        </trans-unit>
        <trans-unit id="4592c3f20e832c80ee7755d708e2fc413aad3a8b" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns an ID shared by clones of the same padlist.</source>
          <target state="translated">Этот метод,введенный в 5.22,возвращает идентификатор,разделяемый клонами одного и того же списка.</target>
        </trans-unit>
        <trans-unit id="9809e060290c8d05a80c630d780720e4ef068203" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns the B::PADNAMELIST. It is equivalent to &lt;code&gt;ARRAYelt&lt;/code&gt; with a 0 argument.</source>
          <target state="translated">Этот метод, представленный в 5.22, возвращает B :: PADNAMELIST. Это эквивалентно &lt;code&gt;ARRAYelt&lt;/code&gt; с аргументом 0.</target>
        </trans-unit>
        <trans-unit id="6e85228faab0626451baa8274321e8bb4a24e677" translate="yes" xml:space="preserve">
          <source>This method, which just calls &lt;code&gt;B::Concise::b_terse&lt;/code&gt;, has been deprecated, and disappeared in Perl 5.28. Please use &lt;code&gt;B::Concise&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b87abd8043418845a4e29d3099fa81c542084b" translate="yes" xml:space="preserve">
          <source>This model is also handy for a form of recursive programming where, rather than having a subroutine call itself, it instead creates another thread. Prime and Fibonacci generators both map well to this form of the pipeline model. (A version of a prime number generator is presented later on.)</source>
          <target state="translated">Эта модель также удобна для формы рекурсивного программирования,при которой вместо того,чтобы называть себя подпрограммой,она создает другой поток.Генераторы Prime и Fibonacci хорошо согласуются с этой формой модели трубопровода.(Версия генератора простых чисел будет представлена позже).</target>
        </trans-unit>
        <trans-unit id="30009f920550802cc665953dfad42c7d9264746f" translate="yes" xml:space="preserve">
          <source>This model is common in GUI and server programs, where a main thread waits for some event and then passes that event to the appropriate worker threads for processing. Once the event has been passed on, the boss thread goes back to waiting for another event.</source>
          <target state="translated">Эта модель распространена в графическом интерфейсе GUI и серверных программах,где главный поток ждет некоторого события,а затем передает это событие соответствующим рабочим потокам для обработки.Как только событие передается,боссовский поток возвращается к ожиданию другого события.</target>
        </trans-unit>
        <trans-unit id="b15bc8cde549f860c8eb7d12b3582c3e0ea39cf3" translate="yes" xml:space="preserve">
          <source>This model is particularly useful if the system running the program will distribute multiple threads across different processors. It can also be useful in ray tracing or rendering engines, where the individual threads can pass on interim results to give the user visual feedback.</source>
          <target state="translated">Эта модель особенно полезна,если система,выполняющая программу,будет распределять несколько потоков по разным процессорам.Она также может быть полезна в системах трассировки лучей или рендеринга,где отдельные потоки могут передавать промежуточные результаты,чтобы дать пользователю визуальную обратную связь.</target>
        </trans-unit>
        <trans-unit id="a46d487d5e105c40547660dc27acaa14d80672b3" translate="yes" xml:space="preserve">
          <source>This model makes the most sense if you have multiple processors so two or more threads will be executing in parallel, though it can often make sense in other contexts as well. It tends to keep the individual tasks small and simple, as well as allowing some parts of the pipeline to block (on I/O or system calls, for example) while other parts keep going. If you're running different parts of the pipeline on different processors you may also take advantage of the caches on each processor.</source>
          <target state="translated">Эта модель имеет наибольший смысл,если у вас несколько процессоров,так что два или более потока будут выполняться параллельно,хотя часто она может иметь смысл и в других контекстах.Она имеет тенденцию держать отдельные задачи маленькими и простыми,а также позволяет некоторым частям конвейера блокировать (например,при вводе/выводе или системных вызовах),в то время как другие части продолжают выполняться.Если вы используете разные части конвейера на разных процессорах,вы также можете воспользоваться кэшами на каждом процессоре.</target>
        </trans-unit>
        <trans-unit id="ca5c3fc9e826014a4bf6c25dd9dfaa294e403640" translate="yes" xml:space="preserve">
          <source>This modifier is automatically selected by default when none of the others are, so yet another name for it is &quot;Default&quot;.</source>
          <target state="translated">Этот модификатор автоматически выбирается по умолчанию,когда ни один из других не выбран,поэтому еще одно имя для него-&quot;Default&quot;.</target>
        </trans-unit>
        <trans-unit id="c04617ccf79d65516875370f2175f88d3d4536a0" translate="yes" xml:space="preserve">
          <source>This modifier is not portable, so its use should be restricted to &lt;code&gt;PerlIO_printf()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d496a068117111419859bc00c9612b716988f03" translate="yes" xml:space="preserve">
          <source>This modifier is useful for people who only incidentally use Unicode, and who do not wish to be burdened with its complexities and security concerns.</source>
          <target state="translated">Этот модификатор полезен для людей,которые только случайно используют Юникод,и которые не хотят быть обремененными его сложностями и проблемами безопасности.</target>
        </trans-unit>
        <trans-unit id="0e5335d13a0034ff0e79330d63821913e0ac8c3f" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'unicode_strings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">Этот модификатор можно указать по умолчанию с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (или более поздней версии ), но см. &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e12be54768ee3b0c57bff3f17db521cb0aa4207" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">Этот модификатор можно указать по умолчанию с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , но см. &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7947231e9d8ba8a56b871805ba4f83e34edd5a3b" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; . If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; , along with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; ). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">Этот модификатор может быть определен , чтобы быть по умолчанию, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; . Если вы это сделаете, у вас может быть случай явно использовать модификатор &lt;code&gt;/u&lt;/code&gt; , если есть несколько регулярных выражений, в которых вы действительно хотите использовать полные правила Unicode (но даже здесь, лучше всего, если бы все было в рамках функции &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; вместе с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; ). Также см. &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует?&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a33069e1e40dd1d406cb06f4820e8365f86b6a18" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use feature 'unicode_strings&lt;/code&gt;, &lt;code&gt;use locale ':not_characters'&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e323f49369cfd817dd3ab5eb35782378466587d" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use locale&lt;/code&gt;, but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e892a0b349e1ef5808e5c9bed02cfeaaecfdda" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use re '/a'&lt;/code&gt; or &lt;code&gt;use re '/aa'&lt;/code&gt;. If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt;, along with the &lt;code&gt;use re '/aa'&lt;/code&gt;). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612208176f5e5f15f70f9fe87ffb9885ed3fb4f8" translate="yes" xml:space="preserve">
          <source>This modifier means to use the &quot;Default&quot; native rules of the platform except when there is cause to use Unicode rules instead, as follows:</source>
          <target state="translated">Этот модификатор означает использование нативных правил платформы &quot;Default&quot;,за исключением случаев,когда есть причина использовать вместо них правила Unicode,следующим образом:</target>
        </trans-unit>
        <trans-unit id="c88a880096800aee300b8b7d7d4d916283e4a60a" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier may be doubled-up to increase its effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749227e1bbfa4aaec7c32f6b70520da88bebf428" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier, unlike the others, may be doubled-up to increase its effect.</source>
          <target state="translated">Этот модификатор обозначает ASCII-ограничитель (или ASCII-безопасный).Этот модификатор,в отличие от других,может быть увеличен вдвое для увеличения своего эффекта.</target>
        </trans-unit>
        <trans-unit id="d4333bd9c8e1ecf2d74d135cfc1c019d27ec9a46" translate="yes" xml:space="preserve">
          <source>This modifies the Test::Builder internals in many ways. A better was to accomplish the goal of this module is to write your own subtest function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6de4fa0b87cce4f41c3c3e6b2f399a24f53e8f" translate="yes" xml:space="preserve">
          <source>This module abstracts and provides all of the hooks into Perl internal debugging functionality, so that various implementations of Perl debuggers (or packages that want to simply get at the &quot;privileged&quot; debugging data) can all benefit from the development of this common code. Currently used by Swat, the perl/Tk GUI debugger.</source>
          <target state="translated">Данный модуль абстрагирует и предоставляет все &quot;хукы&quot; к внутренней отладочной функциональности Perl,так что различные реализации отладчиков Perl (или пакетов,которые хотят просто получить &quot;привилегированные&quot; отладочные данные)могут извлечь выгоду из разработки этого общего кода.В настоящее время используется Swat,отладчик с графическим интерфейсом perl/Tk.</target>
        </trans-unit>
        <trans-unit id="6875f545409eef33a68dd7123f3a8648204e39c4" translate="yes" xml:space="preserve">
          <source>This module allows one to set this attribute on a subroutine that is already defined. For Perl subroutines (XSUBs are fine), it may or may not do what you want, depending on the code inside the subroutine, with details subject to change in future Perl versions. You may run into problems with lvalue context not being propagated properly into the subroutine, or maybe even assertion failures. For this reason, a warning is emitted if warnings are enabled. In other words, you should only do this if you really know what you are doing. You have been warned.</source>
          <target state="translated">Этот модуль позволяет установить этот атрибут в уже определенную подпрограмму.Для подпрограмм Perl (XSUB в порядке),он может делать или не делать то,что вы хотите,в зависимости от кода внутри подпрограмм,с деталями,которые могут быть изменены в будущих версиях Perl.Вы можете столкнуться с проблемами,связанными с некорректным распространением контекста значения в подпрограмме,или даже с ошибками утверждения.По этой причине,если предупреждения включены,выдается предупреждение.Другими словами,это следует делать только в том случае,если вы действительно знаете,что делаете.Вы были предупреждены.</target>
        </trans-unit>
        <trans-unit id="a965ba5c24e8c32086e33820dca8017e296c7bac" translate="yes" xml:space="preserve">
          <source>This module also adds a stack trace to the error message when perl dies. This is useful for pinpointing what caused the death. The &lt;b&gt;-traceonly&lt;/b&gt; (or just &lt;b&gt;-t&lt;/b&gt;) flag turns off the explanations of warning messages leaving just the stack traces. So if your script is dieing, run it again with</source>
          <target state="translated">Этот модуль также добавляет трассировку стека в сообщение об ошибке, когда perl умирает. Это полезно для точного определения причины смерти. В &lt;b&gt;-traceonly&lt;/b&gt; (или просто &lt;b&gt;-t&lt;/b&gt; ) флаг выключает объяснения предупреждающих сообщений , исходящие только трассировку стеки. Итак, если ваш скрипт умирает, запустите его снова с помощью</target>
        </trans-unit>
        <trans-unit id="8f7fb6f3dfdd280d1b2872ffca7de6a38c89ca71" translate="yes" xml:space="preserve">
          <source>This module also provides a function &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; that returns true iff the language tag is syntactically valid and is for general use (like &quot;fr&quot; or &quot;fr-ca&quot;, below). That is, it returns false for tags that are syntactically invalid and for tags, like &quot;aus&quot;, that are listed in brackets below. This function is not exported.</source>
          <target state="translated">Этот модуль также предоставляет функцию &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; которая возвращает истину, если языковой тег синтаксически действителен и предназначен для общего использования (например, &amp;laquo;fr&amp;raquo; или &amp;laquo;fr-ca&amp;raquo; ниже). То есть он возвращает false для тегов, которые синтаксически недопустимы, и для тегов, таких как &quot;aus&quot;, которые перечислены в скобках ниже. Эта функция не экспортируется.</target>
        </trans-unit>
        <trans-unit id="35c9fcef6d8c497b285988252e5e12636887688f" translate="yes" xml:space="preserve">
          <source>This module and its competitor, the CPANPLUS module, are both much cooler than the other. CPAN.pm is older. CPANPLUS was designed to be more modular, but it was never intended to be compatible with CPAN.pm.</source>
          <target state="translated">Этот модуль и его конкурент,модуль CPANPLUS,оба намного круче других.CPAN.pm старше.Модуль CPANPLUS был разработан как более модульный,но никогда не был предназначен для совместимости с CPAN.pm.</target>
        </trans-unit>
        <trans-unit id="784f2f639e9afabf2dc275e208777379339cfa1d" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="translated">Этот модуль пытается быть безупречно чистым по отношению к &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; и когда включены предупреждения.</target>
        </trans-unit>
        <trans-unit id="99015cf6cbe9c998b9b79c332cc6306a7b24d6fc" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;use strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004ba23e4c1d9e020129a075fb1542d515c8beb8" translate="yes" xml:space="preserve">
          <source>This module by Jos Boumans &amp;lt;kane@cpan.org&amp;gt;.</source>
          <target state="translated">Этот модуль написан Йосом Бумансом &amp;lt;kane@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="97238c429acb2a106f71561828a9705c17f2cd68" translate="yes" xml:space="preserve">
          <source>This module can be used to check that the perl C API is behaving correctly. This module provides test functions and an associated test script that verifies the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3512e67f1197d03fbeb001853d009060532cfa22" translate="yes" xml:space="preserve">
          <source>This module can build the C portions of Perl modules by invoking the appropriate compilers and linkers in a cross-platform manner. It was motivated by the &lt;code&gt;Module::Build&lt;/code&gt; project, but may be useful for other purposes as well. However, it is</source>
          <target state="translated">Этот модуль может создавать C-части модулей Perl, вызывая соответствующие компиляторы и компоновщики кроссплатформенным способом. Это было мотивировано проектом &lt;code&gt;Module::Build&lt;/code&gt; , но может быть полезно и для других целей. Однако это</target>
        </trans-unit>
        <trans-unit id="26eefbe0903fb2ede95e48daeed0c357506e5da6" translate="yes" xml:space="preserve">
          <source>This module can provoke sizeable inefficiencies for regular expressions, due to unfortunate implementation details. If performance matters in your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH, try doing</source>
          <target state="translated">Этот модуль может спровоцировать значительную неэффективность для регулярных выражений из-за неудачных деталей реализации.Если производительность имеет значение в вашем приложении и вам не нужны $PREMATCH,$MATCH или $POSTMATCH,попробуйте сделать следующее</target>
        </trans-unit>
        <trans-unit id="8cf5ae089cfd3bb924112f109262d970297de9cc" translate="yes" xml:space="preserve">
          <source>This module can read, modify, create and write Perl XS typemap files. If you don't know what a typemap is, please confer the &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; manuals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e29d99feceeb44433f425fbac43b49ef593d502" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">Этот модуль бывает двух видов: один для современных Perl (5.10 и выше) и один для устаревших устаревших Perl. Версия для современных perls поддерживает Unicode. Версия для старых перлов нет. Вы можете сказать , какая версия установлена, глядя на &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : это &lt;code&gt;old&lt;/code&gt; устаревшие Перлз и &lt;code&gt;modern&lt;/code&gt; для нынешних Перлз.</target>
        </trans-unit>
        <trans-unit id="3f246357be0ea9a19a9c26640bdecebe65636361" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febd1d0bc1aeb9c9dc580b98ecebabe324968f11" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">Этот модуль бывает двух видов: один для современных Perl (5.10 и выше) и один для устаревших устаревших Perl. Версия для современных perls поддерживает Unicode. Версия для старых перлов нет. Вы можете сказать , какая версия установлена, глядя на &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : это &lt;code&gt;old&lt;/code&gt; устаревшие Перлз и &lt;code&gt;modern&lt;/code&gt; для нынешних Перлз.</target>
        </trans-unit>
        <trans-unit id="09b0dd2743438f4a098031d43325e1efa58a9e72" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14a28688b621d987b1f8fc9e23815cd4abf0ed8" translate="yes" xml:space="preserve">
          <source>This module contains a good example of how to use tie to implement a cache and an example of how to make a tied variable readonly to those outside of it.</source>
          <target state="translated">Этот модуль содержит хороший пример того,как использовать tie для реализации кэша и пример того,как сделать привязанную переменную только для чтения к тем,которые находятся за его пределами.</target>
        </trans-unit>
        <trans-unit id="d311a4e7a3db9109ca676b3552f311797aef79ac" translate="yes" xml:space="preserve">
          <source>This module contains methods to test the reachability of remote hosts on a network. A ping object is first created with optional parameters, a variable number of hosts may be pinged multiple times and then the connection is closed.</source>
          <target state="translated">Данный модуль содержит методы проверки доступности удаленных хостов в сети.Сначала создается объект ping с необязательными параметрами,переменное количество хостов может быть проинтервьюировано несколько раз,после чего соединение закрывается.</target>
        </trans-unit>
        <trans-unit id="e7ab97b3c83db0e719a01ba25468a109c4526c8d" translate="yes" xml:space="preserve">
          <source>This module contains utility subroutines for abstracting away the underlying magic of autodie and (ab)uses of &lt;code&gt;%^H&lt;/code&gt; to call subs at the end of a (compile-time) scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d790b22a57580f55f37ab95818cba0bc38ecd0b0" translate="yes" xml:space="preserve">
          <source>This module converts CPAN Meta structures from one form to another. The primary use is to convert older structures to the most modern version of the specification, but other transformations may be implemented in the future as needed. (E.g. stripping all custom fields or stripping all optional fields.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0177cabfcfd905cc13252e41134159a6c784e5" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt; s in the code.</source>
          <target state="translated">Этот модуль имеет дело с множеством системных зависимостей и имеет довольно много специфичных для архитектуры &lt;code&gt;if&lt;/code&gt; в коде.</target>
        </trans-unit>
        <trans-unit id="d165975e418f48b0068ea6e4916ced218ae66175" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt;s in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048af0729c3efd4457ee6a9d255333490a26b61d" translate="yes" xml:space="preserve">
          <source>This module defines a standard</source>
          <target state="translated">Этот модуль определяет стандарт</target>
        </trans-unit>
        <trans-unit id="ccc077b805dfb6d70b724e9bdd6fb4fe5347a6c3" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; . This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="translated">Этот модуль определяет одну общедоступную функцию, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; . Эта функция не экспортируется (и даже не экспортируется) и не принимает никаких параметров.</target>
        </trans-unit>
        <trans-unit id="86eec5c4aa5efea45745f52bda7e4b24c847a408" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt;. This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f93c560d9ab4f740a2b97f280df75095aa9c1e" translate="yes" xml:space="preserve">
          <source>This module defines some basic input objects used by &lt;b&gt;Pod::Parser&lt;/b&gt; when reading and parsing POD text from an input source. The following objects are defined:</source>
          <target state="translated">Этот модуль определяет некоторые основные объекты ввода, используемые &lt;b&gt;Pod :: Parser&lt;/b&gt; при чтении и анализе текста POD из источника ввода. Определены следующие объекты:</target>
        </trans-unit>
        <trans-unit id="5588b6a383faab0057a18646001f16348459eef2" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; , and &lt;code&gt;skip(...)&lt;/code&gt; . By default, all three are exported by the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; statement.</source>
          <target state="translated">Этот модуль определяет три общедоступные функции: &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; и &lt;code&gt;skip(...)&lt;/code&gt; . По умолчанию все три экспортируются с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; заявление.</target>
        </trans-unit>
        <trans-unit id="753823d787f9b4eb6fa8a5cbc51058ee11d7dd83" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt;, &lt;code&gt;ok(...)&lt;/code&gt;, and &lt;code&gt;skip(...)&lt;/code&gt;. By default, all three are exported by the &lt;code&gt;use Test;&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd200c0735cc5781411adf38498d8ea6b289e130" translate="yes" xml:space="preserve">
          <source>This module directly uses hash keys in the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; singleton. This module is also obsolete thanks to the benefits of &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. Use &lt;code&gt;intercept()&lt;/code&gt; from &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; to achieve a similar result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d26bb4e43183e0559ebca4dee112bd3a0d0b364" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;../cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="translated">Этот модуль инкапсулирует чтение &lt;a href=&quot;../cpan&quot;&gt;Distroprefs&lt;/a&gt; и сопоставление их с дистрибутивами CPAN.</target>
        </trans-unit>
        <trans-unit id="9be6ae2c9023c3906f7ade946637f011010709ad" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9dfd5842361144dbb1663f5f104740841b03d0" translate="yes" xml:space="preserve">
          <source>This module ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">Этот модуль гарантирует,что все данные,записанные в DBM-файл,будут аннулированы.Это полезно,когда у вас есть скрипт на perl,который должен взаимодействовать с DBM-файлом,который также используется программой на C.Довольно распространенная проблема заключается в том,что C-приложение должно включать завершающий ноль в строку,когда оно записывает в DBM-файл.Этот фильтр гарантирует,что все данные,записанные в файл DBM,могут быть прочитаны C-приложением.</target>
        </trans-unit>
        <trans-unit id="0972ca2731097996c9289706d9b5ff6a965c399a" translate="yes" xml:space="preserve">
          <source>This module exists only to provide overload resolution for Storable and similar modules. See &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; for more info about this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7e8d1d3170c6e8daec0f86fc59011732a6349b" translate="yes" xml:space="preserve">
          <source>This module exports convenience functions for all of the class methods provided by File::Spec.</source>
          <target state="translated">Данный модуль экспортирует функции удобства для всех методов класса,предусмотренных в файле::Spec.</target>
        </trans-unit>
        <trans-unit id="225bff521140d6082b4081701a5c9f07eb77dbdc" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt; . The rest of the functions in this package are None of Your Business.</source>
          <target state="translated">Этот модуль экспортирует ровно одну функцию - &lt;code&gt;memoize&lt;/code&gt; . Остальные функции в этом пакете - не ваше дело.</target>
        </trans-unit>
        <trans-unit id="c756efb0d722016c58146ce901d559a7e357a513" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt;. The rest of the functions in this package are None of Your Business.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a437808a72f5186bb9fb8b3d0a47bad3b6c57c9" translate="yes" xml:space="preserve">
          <source>This module exports several subroutines from the older event API (see &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;). These subroutines can be used as methods on any object that provides a custom &lt;code&gt;facet_data()&lt;/code&gt; method. These subroutines can also be used as functions that take a facet data hashref as arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53f8e98717e2df0ba097b4ab532a6f74e551ea4" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt; .</source>
          <target state="translated">Этот модуль по умолчанию экспортирует две функции: &lt;code&gt;timelocal()&lt;/code&gt; и &lt;code&gt;timegm()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f39641613ab5773d894c474a71a45df157f1238" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62e7ee6ec8e2b5b39029ab7ee6ccd36cf4dfeb9" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; ), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="translated">Этот модуль расширяет краткую диагностику, обычно генерируемую как компилятором perl, так и интерпретатором perl (от запуска perl с ключом -w или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; ), дополняя их более понятными и привлекательными описаниями, найденными в &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; . Как и другие прагматы, он влияет на фазу компиляции вашей программы, а не просто на фазу выполнения.</target>
        </trans-unit>
        <trans-unit id="d517678ea3b2b09bdfcb6b56d92700cd53a59e04" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;use warnings&lt;/code&gt;), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01dd0d6475dbad2f311d0d4cb1dacdbdfac4d66" translate="yes" xml:space="preserve">
          <source>This module has a test that appears to work around a Test::Builder bug. The bug appears to have been fixed by Test2, which means the workaround causes a failure. This can be easily updated, but nobody has done so yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594092911e1167036ea965c7893b43a507a34b66" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot;&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec683936a1587c1835f23fd06a510bf338b7e80" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPTION&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;.</source>
          <target state="translated">Этот модуль устарел, начиная с версии perl v5.18. См. &lt;a href=&quot;#DESCRIPTION&quot;&gt;ОПИСАНИЕ&lt;/a&gt; и &lt;a href=&quot;#BUGS&quot;&gt;ОШИБКИ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd94517622a9ab314f7601e60ecd6670f3bc957d" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2117e00acdbd9807a78cbd1ea4a675762026720f" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;).</source>
          <target state="translated">Этот модуль имеет два интерфейса: один через color () и цветной (), а другой через константы. Он также предлагает служебные функции uncolor (), colorstrip (), colorvalid () и coloralias (), которые для использования должны быть явно импортированы (см. &lt;a href=&quot;#SYNOPSIS&quot;&gt;ОБЗОР&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ff8b16c231dc1d713254a7cb8a480c66e2ae1bd1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; MIME encoding for an unstructured field body of the email header. It can also be used for &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; 'text' token. However, it cannot be used directly for the whole header with the field name or for the structured header fields like From, To, Cc, Message-Id, etc... There are 3 encoding names supported by this module: &lt;code&gt;MIME-Header&lt;/code&gt;, &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b510432f8750d5bbad1de7af5fced7b88ef44df" translate="yes" xml:space="preserve">
          <source>This module implements China-based Chinese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">В этом модуле реализованы кодировки китайских кодировок кодировок кодировок китайских кодировок.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="18f94573bd55ebab6dfdf33a299319140ec5bdab" translate="yes" xml:space="preserve">
          <source>This module implements Japanese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">В этом модуле реализованы кодировки японских кодировок кодовых таблиц.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="85a823a7495a5d305f8dfc87daf3a9452bf40405" translate="yes" xml:space="preserve">
          <source>This module implements Korean charset encodings. Encodings supported are as follows.</source>
          <target state="translated">В этом модуле реализована корейская кодировка кодовых страниц.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="1ac6b792bfff4da11b88119131c465048e55ab98" translate="yes" xml:space="preserve">
          <source>This module implements RFC 2047 Mime Header Encoding. There are 3 variant encoding names; &lt;code&gt;MIME-Header&lt;/code&gt; , &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt; . The difference is described below</source>
          <target state="translated">Этот модуль реализует RFC 2047 Mime Header Encoding. Есть 3 варианта названия кодировки; &lt;code&gt;MIME-Header&lt;/code&gt; &lt;code&gt;MIME-B&lt;/code&gt; , MIME-B и &lt;code&gt;MIME-Q&lt;/code&gt; . Разница описана ниже</target>
        </trans-unit>
        <trans-unit id="fd2c9a90ea8e309e706421846f519bfe977d609d" translate="yes" xml:space="preserve">
          <source>This module implements UTF-7 encoding documented in RFC 2152. UTF-7, as its name suggests, is a 7-bit re-encoded version of UTF-16BE. It is designed to be MTA-safe and expected to be a standard way to exchange Unicoded mails via mails. But with the advent of UTF-8 and 8-bit compliant MTAs, UTF-7 is hardly ever used.</source>
          <target state="translated">Данный модуль реализует кодировку UTF-7,документированную в RFC 2152.UTF-7,как следует из названия,является 7-битной перекодированной версией UTF-16BE.Он разработан для MTA-безопасности и ожидается,что это будет стандартный способ обмена Unicoded почтой по почте.Но с появлением UTF-8 и 8-битных MTA-совместимых,UTF-7 практически не используется.</target>
        </trans-unit>
        <trans-unit id="6a778bf541b175d3967361a621a9111e411a3873" translate="yes" xml:space="preserve">
          <source>This module implements a PerlIO layer that works on files encoded in the quoted-printable format. It will decode from quoted-printable while reading from a handle, and it will encode as quoted-printable while writing to a handle.</source>
          <target state="translated">Этот модуль реализует слой PerlIO,который работает с файлами,закодированными в формате кавычек.Он расшифровывает файлы в формате,пригодном для печати в кавычках,и кодирует их в формате,пригодном для печати в кавычках,во время чтения из дескриптора.</target>
        </trans-unit>
        <trans-unit id="ed550b03d65e4b729769320dd5e86c30fc421672" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939.</source>
          <target state="translated">Данный модуль реализует клиентский интерфейс к протоколу POP3,позволяя приложению perl5 взаимодействовать с серверами POP3.Данная документация предполагает,что вы знакомы с протоколом POP3,описанным в RFC1939.</target>
        </trans-unit>
        <trans-unit id="ed6c1f3c1c0cdf48fd7b4bf4c3f2799a1d9ccec9" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. POP3S or POP3+STARTTLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8852ef106e152ea9b50dda8dd1b7e4ef5a1d79" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC2821. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. SMTPS or SMTP+STARTTLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3343630b02b7f19c2e9f15e0bc9d4d62bafd5e3" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC821.</source>
          <target state="translated">Данный модуль реализует клиентский интерфейс к протоколам SMTP и ESMTP,позволяя приложению perl5 взаимодействовать с SMTP-серверами.Эта документация предполагает,что вы знакомы с концепциями протокола SMTP,описанного в RFC821.</target>
        </trans-unit>
        <trans-unit id="a98fb3b26850ae6b1ffeeed7c797dcc990c08524" translate="yes" xml:space="preserve">
          <source>This module implements a subset of the YAML specification for use in reading and writing CPAN metadata files like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208a0fbb6b2b9365a0b457c6e7c2a20c4ee8bdbb" translate="yes" xml:space="preserve">
          <source>This module implements all Character Encoding Schemes of Unicode that are officially documented by Unicode Consortium (except, of course, for UTF-8, which is a native format in perl).</source>
          <target state="translated">Этот модуль реализует все схемы кодирования символов Юникода,которые официально документированы Консорциумом Юникод (за исключением,конечно,UTF-8,который является родным форматом в perl).</target>
        </trans-unit>
        <trans-unit id="4a5fc149cac5c063339467ffcf19fbcbdd274ebc" translate="yes" xml:space="preserve">
          <source>This module implements symbol and dingbats encodings. Encodings supported are as follows.</source>
          <target state="translated">Этот модуль реализует кодировку символов и дингбатов.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="91d2629cfba9471ae750b605c30149641a050967" translate="yes" xml:space="preserve">
          <source>This module implements the Windows-specific parts of ExtUtils::CBuilder. Most of the Windows-specific stuff has to do with compiling and linking C code. Currently we support the 3 compilers perl itself supports: MSVC, BCC, and GCC.</source>
          <target state="translated">Этот модуль реализует Windows-специфические части ExtUtils::CBuilder.Большинство Windows-специфичных вещей связано с компиляцией и компоновкой C-кода.В настоящее время мы поддерживаем 3 компилятора,поддерживающих perl:MSVC,BCC и GCC.</target>
        </trans-unit>
        <trans-unit id="b2e6ff1b1b109fdc596717b451bfa277cebdbf15" translate="yes" xml:space="preserve">
          <source>This module implements the environmental variables that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; uses with TAP::Harness, and instantiates the appropriate class with the appropriate arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fa4e0ad3f8d3bc6d28f8c2e962b8d03cb9cfa8" translate="yes" xml:space="preserve">
          <source>This module implements tradition Chinese charset encodings as used in Taiwan and Hong Kong. Encodings supported are as follows.</source>
          <target state="translated">В этом модуле реализованы традиционные китайские кодировки кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок кодировок,которые используются на Тайване и в Гонконге.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="6d3abe1f6aae133c8268ef4a9c7e2b3f247e4b85" translate="yes" xml:space="preserve">
          <source>This module implements various EBCDIC-Based encodings. Encodings supported are as follows.</source>
          <target state="translated">В этом модуле реализованы различные кодировки на основе EBCDIC.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="71223016b72a87a85df3e296ab0f30c149dbcfa6" translate="yes" xml:space="preserve">
          <source>This module implements various single byte encodings. For most cases it uses \x80-\xff (upper half) to map non-ASCII characters. Encodings supported are as follows.</source>
          <target state="translated">Данный модуль реализует различные однобайтовые кодировки.В большинстве случаев он использует \x80-\xff (верхняя половина)для отображения не-ASCII символов.Поддерживаются следующие кодировки.</target>
        </trans-unit>
        <trans-unit id="cc2e021c9aa08753ca094f4f9555269ba3008c18" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; , so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="translated">Этот модуль наследуется от &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; , поэтому любые функции, не реализованные здесь, будут реализованы там. Интерфейсы определены в документации &lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils :: CBuilder&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbd924370062e7829b2938e0ae1c44db508d0978" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt;, so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19da1ff10a7249eedb446c4c19eb17fbb02bae8e" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function and supported by &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот модуль внутренне использует систему секунд эпохи, которая предоставляется через функцию perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; и поддерживается &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61f8df0862f677bbaf5b909f320f35cfb703f533" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;time()&lt;/code&gt; function and supported by &lt;code&gt;gmtime()&lt;/code&gt; and &lt;code&gt;localtime()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458e3aac1c45af194716db0ddfa546c2e44d1b98" translate="yes" xml:space="preserve">
          <source>This module is a &quot;pure virtual base class&quot;--it has nothing of its own. It's just there to inherit from one of the various DBM packages. It prefers ndbm for compatibility reasons with Perl 4, then Berkeley DB (See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;), GDBM, SDBM (which is always there--it comes with Perl), and finally ODBM. This way old programs that used to use NDBM via dbmopen() can still do so, but new ones can reorder @ISA:</source>
          <target state="translated">Этот модуль представляет собой &amp;laquo;чистый виртуальный базовый класс&amp;raquo; - у него нет ничего собственного. Он просто наследуется от одного из различных пакетов DBM. Он предпочитает ndbm из соображений совместимости с Perl 4, затем Berkeley DB (см. &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; ), GDBM, SDBM (который всегда есть - он поставляется с Perl) и, наконец, ODBM. Таким образом, старые программы, которые использовали NDBM через dbmopen (), все еще могут это делать, но новые могут переупорядочивать @ISA:</target>
        </trans-unit>
        <trans-unit id="845ef6f7f0c9f9a1cc4bdfcd24a8c21377a02413" translate="yes" xml:space="preserve">
          <source>This module is a back-end plugin for &lt;code&gt;Sys::Syslog&lt;/code&gt;, for supporting the Win32 event log. It is not expected to be directly used by any module other than &lt;code&gt;Sys::Syslog&lt;/code&gt; therefore it's API may change at any time and no warranty is made with regards to backward compatibility. You Have Been Warned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c04eeff8ead05e06a53857583cc861707b5c717" translate="yes" xml:space="preserve">
          <source>This module is a simple wrapper around &lt;b&gt;Locale::Maketext::Lexicon&lt;/b&gt;, designed to alleviate the need of creating</source>
          <target state="translated">Этот модуль представляет собой простую оболочку вокруг &lt;b&gt;Locale :: Maketext :: Lexicon&lt;/b&gt; , предназначенную для облегчения необходимости создания</target>
        </trans-unit>
        <trans-unit id="e16f5e2a01129069277c30d3b7f3daee0fb1dd1b" translate="yes" xml:space="preserve">
          <source>This module is an implementation of Unicode Technical Standard #10 (a.k.a. UTS #10) - Unicode Collation Algorithm (a.k.a. UCA).</source>
          <target state="translated">Данный модуль является реализацией Технического Стандарта Юникода #10 (так же известного как UTS #10)-Алгоритм кодирования Юникода (так же известный как UCA).</target>
        </trans-unit>
        <trans-unit id="c1b7492744c579fc1d9bfb8835d90982b09e7c1d" translate="yes" xml:space="preserve">
          <source>This module is an outgrowth of the &lt;code&gt;Module::Build&lt;/code&gt; project, to which there have been many contributors. Notably, Randy W. Sims submitted lots of code to support 3 compilers on Windows and helped with various other platform-specific issues. Ilya Zakharevich has contributed fixes for OS/2; John E. Malmberg and Peter Prymmer have done likewise for VMS.</source>
          <target state="translated">Этот модуль является продолжением проекта &lt;code&gt;Module::Build&lt;/code&gt; , в котором было много участников. Примечательно, что Рэнди В. Симс представил много кода для поддержки трех компиляторов в Windows и помог с другими проблемами, связанными с платформой. Илья Захаревич внес исправления для OS / 2; Джон Э. Малмберг и Питер Приммер сделали то же самое для VMS.</target>
        </trans-unit>
        <trans-unit id="1f5ba4ee559ca9f1454b4c1a05d7f38b94f36610" translate="yes" xml:space="preserve">
          <source>This module is based on a Perl 4 library, timelocal.pl, that was included with Perl 4.036, and was most likely written by Tom Christiansen.</source>
          <target state="translated">Этот модуль основан на библиотеке Perl 4,timelocal.pl,которая была включена в Perl 4.036 и,скорее всего,была написана Томом Кристиансеном.</target>
        </trans-unit>
        <trans-unit id="21726a2ed2ceba4bf9becf7c5cf61182d2b88157" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbc64a6620dfb67500a67bd41b8098f113352da" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">Этот модуль ни в коем случае не пытается быть полноценной системой тестирования. Это просто для начала. После того, как вы оторветесь от земли, рекомендуется посмотреть &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2753244f46b0ce153d304706dfb95e861d35abaf" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce and David Landgren 1995-2013. All rights reserved.</source>
          <target state="translated">Этот модуль защищен авторским правом (C)Чарльза Бейли,Тима Банса и Дэвида Лэндгрена 1995-2013 гг.Все права защищены.</target>
        </trans-unit>
        <trans-unit id="e65fc814fbe25d163ecbf16ad77b4df5d27417a3" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce, David Landgren, James Keenan and Richard Elberger 1995-2018. All rights reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dc79528e0a53341f5f1a2385863e6d0f321326" translate="yes" xml:space="preserve">
          <source>This module is copyright (c) 2002 - 2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. All rights reserved.</source>
          <target state="translated">Авторское право на этот модуль (c) 2002 - 2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. Все права защищены.</target>
        </trans-unit>
        <trans-unit id="109646d03bdd7214b2601deb023ff86ae17771e5" translate="yes" xml:space="preserve">
          <source>This module is copyright 2005 Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;, some parts are based on other people's work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6eac676c9809b9e5cbb0d9d7b173e56f481065" translate="yes" xml:space="preserve">
          <source>This module is currently derived from &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML::Tiny&lt;/a&gt; by Adam Kennedy. If there are bugs in how it parses a particular META.yml file, please file a bug report in the YAML::Tiny bugtracker: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&quot;&gt;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e106aa2d7581dc33a3d1c862720a197c581da1e6" translate="yes" xml:space="preserve">
          <source>This module is designed to support operations commonly performed on file specifications (usually called &quot;file names&quot;, but not to be confused with the contents of a file, or Perl's file handles), such as concatenating several directory and file names into a single path, or determining whether a path is rooted. It is based on code directly taken from MakeMaker 5.17, code written by Andreas K&amp;ouml;nig, Andy Dougherty, Charles Bailey, Ilya Zakharevich, Paul Schinder, and others.</source>
          <target state="translated">Этот модуль разработан для поддержки операций, обычно выполняемых со спецификациями файлов (обычно называемых &amp;laquo;именами файлов&amp;raquo;, но не путать с содержимым файла или дескрипторами файлов Perl), таких как объединение нескольких имен каталогов и файлов в один путь. или определение того, является ли путь корневым. Он основан на коде, непосредственно взятом из MakeMaker 5.17, коде написанном Андреасом Кенигом, Энди Догерти, Чарльзом Бейли, Ильей Захаревичем, Полом Шиндером и другими.</target>
        </trans-unit>
        <trans-unit id="654671a6553728793de0b0c754d598a0cc86c710" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88b2f05f3eb8f5317475c544c0d41c821542019" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="translated">Этот модуль предназначен для работы с &lt;a href=&quot;encoding&quot;&gt;Encode :: Encoding&lt;/a&gt; . Чтобы приведенный выше пример транскодера Base64 действительно работал, вы можете написать такой модуль:</target>
        </trans-unit>
        <trans-unit id="7317d71579025bf106df223a30767b582e4758a6" translate="yes" xml:space="preserve">
          <source>This module is directly inspired by chocolateboy's excellent Scope::Guard module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaa300076a46b36258692823afcaf30f3da1dac" translate="yes" xml:space="preserve">
          <source>This module is experimental, and may contain bugs. Please report bugs to the address below.</source>
          <target state="translated">Этот модуль является экспериментальным и может содержать ошибки.Пожалуйста,сообщайте об ошибках по указанному ниже адресу.</target>
        </trans-unit>
        <trans-unit id="c60c17d643b09d45d994b9ae1fda9eedaf2d1fcf" translate="yes" xml:space="preserve">
          <source>This module is for testing only and should not normally be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5a318ad47ed1cb98fcceb8a257ad12588cd0fd" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением,вы можете распространять его на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="0fdd885419be85bc33964005f90fc4cadf3fdd76" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением,вы можете распространять его на тех же условиях,что и Perl.</target>
        </trans-unit>
        <trans-unit id="922385d4cd422695e010d41aeec2d5c5dffbe730" translate="yes" xml:space="preserve">
          <source>This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением.Он может использоваться,распространяться и/или модифицироваться на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="8713cb7bfbc646a13e38df90a39fe040d945517a" translate="yes" xml:space="preserve">
          <source>This module is free software. You may distribute it under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением.Вы можете распространять его на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="0a56766ff465fe3b64568012924af5a4fbf7de95" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself, i.e. under the terms of either the GNU General Public License or the Artistic License, as specified in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870a9546afdd84e9a3a4ff38074b2ee21c55579d" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением;вы можете распространять его и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="c0830e7b6d0dd0580741b7e45292c09ed7c6c8d7" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">Этот модуль является бесплатным программным обеспечением; вы можете распространять и / или изменять его на тех же условиях, что и сам Perl. Смотрите &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;перлартистический&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e9a38691db3cd4123a0732405c5584fd7d1ade2" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3300a405455959dd665a3badfe243e6fa30c2626" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it or modify it under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль является свободным программным обеспечением;вы можете распространять его или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="428130d7bad8c548e3890e11a89bef5821bc3665" translate="yes" xml:space="preserve">
          <source>This module is just a translation of the C</source>
          <target state="translated">Этот модуль является всего лишь переводом C</target>
        </trans-unit>
        <trans-unit id="53d4261ed48fcbc4558e06b2e6b719f698501a77" translate="yes" xml:space="preserve">
          <source>This module is just for testing expiration semantics. It's not a very good example of how to write an expiration module.</source>
          <target state="translated">Этот модуль предназначен только для тестирования семантики истечения срока действия.Это не очень хороший пример того,как написать модуль экспирации.</target>
        </trans-unit>
        <trans-unit id="0dc5b94f76b37ecce8785d42b0ffd5ab2b777674" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/perl-pod/pod-simple/&quot;&gt;https://github.com/perl-pod/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/perl-pod/pod-simple.git&quot;&gt;git://github.com/perl-pod/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f745572f29549c61507fb4f34a61c7a87abbc5ec" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;git://github.com/theory/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="translated">Этот модуль управляется в открытом репозитории GitHub, &lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/&lt;/a&gt; . Не стесняйтесь &lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;форкнуть&lt;/a&gt; и внести свой вклад или клонировать git: //github.com/theory/pod-simple.git и отправлять патчи!</target>
        </trans-unit>
        <trans-unit id="7d0ab6711ea5063095e0e85b171ef73740045783" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt; .</source>
          <target state="translated">Этот модуль несовместим с Unix &lt;code&gt;compress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13cc04317c942b05ce4555eb44ccdae6bba6d28a" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c6a1686a9e6172b47ee3f5d419b358b2cc40a5" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Compress modules.</source>
          <target state="translated">Данный модуль не предназначен для непосредственного использования в коде приложения.Его единственное предназначение-быть подразделенным на модули IO::Compress.</target>
        </trans-unit>
        <trans-unit id="0f3671c101f1cebdeab0ce875c68fe36c60360d8" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Uncompress modules.</source>
          <target state="translated">Данный модуль не предназначен для непосредственного использования в коде приложения.Его единственное предназначение-быть подразделенным на модули IO::Uncompress.</target>
        </trans-unit>
        <trans-unit id="a4123b1c619055b343db1dd9134cd19fd6bddf30" translate="yes" xml:space="preserve">
          <source>This module is not meant to be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7164bd2152d2e3839e89dbfa3b86eaa11bce3dbe" translate="yes" xml:space="preserve">
          <source>This module is part of the Time::Piece distribution. It allows the user to find out the number of minutes, hours, days, weeks or years in a given number of seconds. It is returned by Time::Piece when you delta two Time::Piece objects.</source>
          <target state="translated">Этот модуль является частью распределения Time::Piece.Он позволяет пользователю узнать количество минут,часов,дней,недель или лет за заданное количество секунд.Он возвращается с помощью Time::Piece,когда вы дельта два Time::Piece объектов.</target>
        </trans-unit>
        <trans-unit id="22df619b80747d338bb7c64e8fdc1d4aef53ad12" translate="yes" xml:space="preserve">
          <source>This module is part of the core Perl distribution and is also maintained for CPAN by Jonathan Stowe &amp;lt;jns@gellyfish.co.uk&amp;gt;.</source>
          <target state="translated">Этот модуль является частью основного дистрибутива Perl, а также поддерживается для CPAN Джонатаном Стоу &amp;lt;jns@gellyfish.co.uk&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="194bd926549ad2d7bd7a1e89514e8690d0700ec1" translate="yes" xml:space="preserve">
          <source>This module is released under the same terms as Perl itself.</source>
          <target state="translated">Этот модуль выпускается на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="9e7d44a3d58cea8a100de62304c29f63b460d560" translate="yes" xml:space="preserve">
          <source>This module is still in beta. Cygwin-knowledgeable folks are invited to offer patches and suggestions.</source>
          <target state="translated">Этот модуль все еще в бета-версии.Люди,знакомые с Cygwin,приглашаются предложить исправления и предложения.</target>
        </trans-unit>
        <trans-unit id="1ba87a51378e67bc34037dd0cee84645dd48c97c" translate="yes" xml:space="preserve">
          <source>This module is the result of archaeology undertaken during QA Hackathon in Lancaster, April 2013.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a7ded1d62af46df9b70aea1e61bb63a4d5e250" translate="yes" xml:space="preserve">
          <source>This module is used by &lt;code&gt;h2xs&lt;/code&gt; to write the file</source>
          <target state="translated">Этот модуль используется &lt;code&gt;h2xs&lt;/code&gt; для записи файла</target>
        </trans-unit>
        <trans-unit id="a7926bd29bba2324b3fe7c588f46c743752e1304" translate="yes" xml:space="preserve">
          <source>This module is used for running batch-conversions of a lot of HTML documents</source>
          <target state="translated">Этот модуль используется для выполнения пакетного конвертирования большого количества HTML-документов</target>
        </trans-unit>
        <trans-unit id="839a2e768fddb8f7898e0f04347e52df5765427a" translate="yes" xml:space="preserve">
          <source>This module is used internally as a base class by Time::localtime And Time::gmtime functions. It creates a Time::tm struct object which is addressable just like's C's tm structure from</source>
          <target state="translated">Этот модуль используется внутренне в качестве базового класса функциями Time::localtime и Time::gmtime.Он создает объект структуры Time::tm,который адресуется так же,как и структура tm на C из</target>
        </trans-unit>
        <trans-unit id="07f553b400d2280f304688df200f5b35ef787f6a" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt; , but it can be used to tie other variables as you choose.</source>
          <target state="translated">Этот модуль используется для реализации специальных хешей &lt;code&gt;%+&lt;/code&gt; и &lt;code&gt;%-&lt;/code&gt; , но его можно использовать для связывания других переменных по вашему выбору.</target>
        </trans-unit>
        <trans-unit id="019b8504cd55dd2221ad4da8c02fa2cb855f46b3" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt;, but it can be used to tie other variables as you choose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400485993cd01628da068b6aef093ffdc1938d7e" translate="yes" xml:space="preserve">
          <source>This module is used to represent and manage a stack of &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; objects. Hubs are usually in a stack so that you can push a new hub into place that can intercept and handle events differently than the primary hub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6698e75a7d3422775d333b4412918e440bfbef" translate="yes" xml:space="preserve">
          <source>This module is used to test that the XS typemaps distributed with perl are working as advertised. A function is available for each typemap definition (eventually). In general each function takes a variable, processes it through the OUTPUT typemap and then returns it using the INPUT typemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1910d98cb0d7696e9377a9fe44d03beb3d7a9af8" translate="yes" xml:space="preserve">
          <source>This module is used when interoperating with a C/C++ application that uses a C int as either the key and/or value in the DBM file.</source>
          <target state="translated">Этот модуль используется при взаимодействии с С/С++приложением,которое использует С int в качестве ключа и/или значения в DBM файле.</target>
        </trans-unit>
        <trans-unit id="d8aa8f33e315204f28ac3fdb706ab3fb362c4d36" translate="yes" xml:space="preserve">
          <source>This module is useful for people who are writing their own back end, or who are learning about the Perl internals. It's not useful to the average programmer.</source>
          <target state="translated">Этот модуль полезен для людей,которые пишут свой собственный бэк-энд,или которые изучают внутреннюю часть Perl.Он не полезен среднестатистическому программисту.</target>
        </trans-unit>
        <trans-unit id="e9e0d93149553207adf6e63dfb540679634ba91d" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;&quot;&lt;code&gt;nomethod&lt;/code&gt;&quot;&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt;, &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422eedc66ca57180bd78963179219d9ec2d2c3fd" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 +
symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</source>
          <target state="translated">Этот модуль очень необычен с точки зрения перегруженных модулей: он не предоставляет никаких обычных перегруженных операторов, вместо этого он предоставляет реализацию для &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt; . В этом примере подпрограмма &lt;code&gt;nomethod&lt;/code&gt; возвращает объект, который инкапсулирует операции, выполняемые над объектами: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90d7abe099cfab7f646294358451750b8f9df26b" translate="yes" xml:space="preserve">
          <source>This module looks at several environment variables: REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c8914133b0b2bfc077d6c38150d307c0367148" translate="yes" xml:space="preserve">
          <source>This module looks for several environment variables, including REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="translated">Данный модуль ищет несколько переменных окружения,в том числе REQUEST_METHOD,HTTP_ACCEPT_LANGUAGE,LANGUAGE,LC_ALL,LC_MESSAGES и LANG.</target>
        </trans-unit>
        <trans-unit id="0ac738d7d9941c37feb5165dcbb5c6ab9416052c" translate="yes" xml:space="preserve">
          <source>This module may change to use a different pod-to-nroff formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">Этот модуль может измениться,чтобы в будущем использовать другой класс форматирования pod-to-nroff,и это может изменить то,какие опции поддерживаются.</target>
        </trans-unit>
        <trans-unit id="76f27fbed99d6c60d342c39616884795be44e886" translate="yes" xml:space="preserve">
          <source>This module may change to use a different text formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">Этот модуль может измениться,чтобы в будущем использовать другой класс текстового форматирования,и это может изменить то,какие опции поддерживаются.</target>
        </trans-unit>
        <trans-unit id="94ae7d6ead04954a6412192772bd33bb7b8d4073" translate="yes" xml:space="preserve">
          <source>This module mediates between some version that perl sees in a package and the version that is published by the CPAN indexer.</source>
          <target state="translated">Этот модуль является посредником между некоторой версией,которую perl видит в пакете,и версией,которая публикуется CPAN индексатором.</target>
        </trans-unit>
        <trans-unit id="c80cea19736436ea3f987c3515d4cecb255844b4" translate="yes" xml:space="preserve">
          <source>This module needs Compress::Zlib.</source>
          <target state="translated">Этому модулю нужен Compress::Zlib.</target>
        </trans-unit>
        <trans-unit id="a8a13e816f80341d5aa494b1b85b44f3bab37b43" translate="yes" xml:space="preserve">
          <source>This module needs Perl5.005 or better.</source>
          <target state="translated">Этому модулю нужен Perl5.005 или лучше.</target>
        </trans-unit>
        <trans-unit id="2b02becbf011b5e3018f1c6556299552bd0354bc" translate="yes" xml:space="preserve">
          <source>This module needs the Encode module.</source>
          <target state="translated">Этому модулю нужен модуль &quot;Код&quot;.</target>
        </trans-unit>
        <trans-unit id="9ccf2db8e0457ff61f46dc8eef8b595c0400ca84" translate="yes" xml:space="preserve">
          <source>This module needs to have been built with zlib 1.2.1 or better to work. A fatal error will be thrown if &lt;code&gt;Merge&lt;/code&gt; is used with an older version of zlib.</source>
          <target state="translated">Этот модуль должен быть собран с zlib 1.2.1 или лучше для работы. Если &lt;code&gt;Merge&lt;/code&gt; используется со старой версией zlib, будет выдана фатальная ошибка .</target>
        </trans-unit>
        <trans-unit id="7cdcfb5298a84fa590094f08e92147e6cb58d161" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt; .</source>
          <target state="translated">Этот модуль предлагает единственную служебную функцию &lt;code&gt;findsym()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90cadc0e8c5645533036401c53c00aa9ed6d065f" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd94e0e36732e7bf036abc385f751fb424ec5ec9" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; , or &lt;code&gt;man&lt;/code&gt; , indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="translated">Этот модуль предоставляет только одну функцию, parselink (), которая берет текст кода форматирования L &amp;lt;&amp;gt; и анализирует его. Он возвращает текст привязки для ссылки (если таковой был задан), текст привязки, возможно, выведенный из имени и раздела, имени или URL-адреса, раздела, если таковой имеется, и типа ссылки. Типом будет &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; или &lt;code&gt;man&lt;/code&gt; , указывающий URL-адрес, ссылку на страницу POD или ссылку на страницу руководства Unix.</target>
        </trans-unit>
        <trans-unit id="2d0a92cd5ce624849b5c0f1ceba2a38bdb80915f" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;pod&lt;/code&gt;, or &lt;code&gt;man&lt;/code&gt;, indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4bf504a913c2345fd7fde3fd0264ab90a67f31" translate="yes" xml:space="preserve">
          <source>This module overloads two operators, stringify (&quot;&quot;) and numify (0+).</source>
          <target state="translated">Этот модуль перегружает два оператора,строками (&quot;&quot;)и нумерацией (0+).</target>
        </trans-unit>
        <trans-unit id="2da35e4a0c12f0c93369385d5a64812790c47338" translate="yes" xml:space="preserve">
          <source>This module overrides &lt;code&gt;Test::Builder::subtest()&lt;/code&gt; and &lt;code&gt;Test::Builder::done_testing()&lt;/code&gt;. It also directly accesses hash elements of the singleton. It has not yet been fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52e08497f6544c9fedb6034ea4aa6706f4c4317" translate="yes" xml:space="preserve">
          <source>This module predefines the methods below:</source>
          <target state="translated">Этот модуль предопределяет методы,описанные ниже:</target>
        </trans-unit>
        <trans-unit id="af4cffa0841bdd7591fb2ce3aa6ee9b4fc1581e2" translate="yes" xml:space="preserve">
          <source>This module presumes that all packages on CPAN</source>
          <target state="translated">Данный модуль предполагает,что все пакеты на CPAN</target>
        </trans-unit>
        <trans-unit id="50019593ee938407217545d40776fee521fc69e2" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as &lt;a href=&quot;debug&quot;&gt;B::Debug&lt;/a&gt;. For comparison, &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="translated">Этот модуль печатает содержимое дерева синтаксического анализа, но без такой информации, как &lt;a href=&quot;debug&quot;&gt;B :: Debug&lt;/a&gt; . Для сравнения &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; произвел 96 строк вывода из B :: Debug, но только 6 из B :: Terse.</target>
        </trans-unit>
        <trans-unit id="138c64d225e0e78c4b8614f89899ef78a31a82d8" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as CPAN module B::Debug. For comparison, &lt;code&gt;print &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478ba76e6bcddb62163ef813460ff3c7881b3c2c" translate="yes" xml:space="preserve">
          <source>This module provide 3 convenience functions to calculate the digest of files. The following functions are provided:</source>
          <target state="translated">Данный модуль предоставляет 3 удобных функции для расчета дайджеста файлов.Предусмотрены следующие функции:</target>
        </trans-unit>
        <trans-unit id="b0083752d49808e75aaa209a550d644242bd0980" translate="yes" xml:space="preserve">
          <source>This module provide a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="translated">Данный модуль предоставляет удобный способ создания каталогов произвольной глубины и удаления всего поддерева каталогов из файловой системы.</target>
        </trans-unit>
        <trans-unit id="b6054fa3fccb1f634d2e293413bd446f27771c13" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of bzip2 files/buffers.</source>
          <target state="translated">Данный модуль предоставляет Perl интерфейс,позволяющий читать файлы/буферы bzip2.</target>
        </trans-unit>
        <trans-unit id="729eaec16403ec99e135cb527b2c362360b4f51e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1950.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,который позволяет читать файлы/буферы,соответствующие RFC 1950.</target>
        </trans-unit>
        <trans-unit id="003753405c286c7fe622e166edd07fb3084e88a1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1951.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,который позволяет читать файлы/буферы,соответствующие RFC 1951.</target>
        </trans-unit>
        <trans-unit id="450a22809e6b641290e567e29533943a53385d76" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1952.</source>
          <target state="translated">Этот модуль предоставляет Perl-интерфейс,позволяющий читать файлы/буферы,соответствующие RFC 1952.</target>
        </trans-unit>
        <trans-unit id="84795f8eb8a320fda32e6f1d9e107bd19023949a" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed in a number of formats that use the zlib compression library.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,позволяющий читать файлы/буферы,которые были сжаты в ряде форматов,использующих библиотеку сжатия zlib.</target>
        </trans-unit>
        <trans-unit id="8e71e73c8ba4d3b122b4773810a5bebea41be94e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed with a variety of compression libraries.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,позволяющий читать файлы/буферы,которые были сжаты с помощью различных библиотек сжатия.</target>
        </trans-unit>
        <trans-unit id="2c4e9ced7b139b449826926366ef08ab126e2617" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of zlib files/buffers.</source>
          <target state="translated">Этот модуль предоставляет Perl-интерфейс,позволяющий читать zlib-файлы/буферы.</target>
        </trans-unit>
        <trans-unit id="bb765e95103323750609fe94be953d11119327d1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing bzip2 compressed data to files or buffer.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,позволяющий записывать сжатые bzip2 данные в файлы или буфер.</target>
        </trans-unit>
        <trans-unit id="f21907b6980e5b1e79e7f9b10f3d5f2a64818f33" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1950.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,который позволяет записывать сжатые данные в файлы или буфер,как определено в RFC 1950.</target>
        </trans-unit>
        <trans-unit id="da5ecc8ed3afbcb78fee4753b59d94b3fd278392" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1951.</source>
          <target state="translated">Этот модуль предоставляет интерфейс Perl,который позволяет записывать сжатые данные в файлы или буфер,как определено в RFC 1951.</target>
        </trans-unit>
        <trans-unit id="4dad75c362e8d8f7864bd95ffad74f285ca796dd" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1952.</source>
          <target state="translated">Этот модуль предоставляет Perl-интерфейс,позволяющий записывать сжатые данные в файлы или буфер,как определено в RFC 1952.</target>
        </trans-unit>
        <trans-unit id="776878df4a774de7ed832c7c095295fe08ea92ae" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing zip compressed data to files or buffer.</source>
          <target state="translated">Этот модуль предоставляет Perl-интерфейс,позволяющий записывать сжатые zip-данные в файлы или буфер.</target>
        </trans-unit>
        <trans-unit id="2a114c29c27a96079e38fb7ba2d9cd2004ce7668" translate="yes" xml:space="preserve">
          <source>This module provides a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122a388521f8308fb94e1159722c14bed6d323e8" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;../langtags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="translated">Этот модуль обеспечивает функцию &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; , который принимает тег языка (см &lt;a href=&quot;../langtags&quot;&gt;I18N :: LangTags&lt;/a&gt; ) и возвращает лучшую попытку английского названия для него, или неопределенного значения , если он не может сделать смысл тега.</target>
        </trans-unit>
        <trans-unit id="e735e86bbb0a3bf0f9c8dca8d648ba33ac645037" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;I18N::LangTags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a229b32fb9a19828b51ceae6b05d370d58006916" translate="yes" xml:space="preserve">
          <source>This module provides a mapping between an operating system name as given by &lt;code&gt;$^O&lt;/code&gt; and a more generic type. The initial version is based on the OS type mappings provided in &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; and &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt;. (Thus, Microsoft operating systems are given the type 'Windows' rather than 'Win32'.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aa681296d1fc9a7c2f005908eaaf8f3c4564bc" translate="yes" xml:space="preserve">
          <source>This module provides a protocol-independent way to use IPv4 and IPv6 sockets, intended as a replacement for &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt;. Most constructor arguments and methods are provided in a backward-compatible way. For a list of known differences, see the &lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab89d1d5e04832a54cc7d916a65558cc98a23de" translate="yes" xml:space="preserve">
          <source>This module provides a standard way to gather metadata about a .pm file through (mostly) static analysis and (some) code execution. When determining the version of a module, the &lt;code&gt;$VERSION&lt;/code&gt; assignment is &lt;code&gt;eval&lt;/code&gt;ed, as is traditional in the CPAN toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96823924a180df110252f785d7a14a45c7a178c6" translate="yes" xml:space="preserve">
          <source>This module provides a variety of constants, structure manipulators and other functions related to socket-based networking. The values and functions provided are useful when used in conjunction with Perl core functions such as socket(), setsockopt() and bind(). It also provides several other support functions, mostly for dealing with conversions of network addresses between human-readable and native binary forms, and for hostname resolver operations.</source>
          <target state="translated">Этот модуль предоставляет различные константы,манипуляторы структурой и другие функции,связанные с сетью на основе сокетов.Предоставляемые значения и функции полезны при использовании в сочетании с такими базовыми Perl-функциями,как socket(),setsockopt()и bind().Он также предоставляет несколько других функций поддержки,в основном для работы с преобразованием сетевых адресов между читаемыми человеком и родными бинарными формами,а также для операций по распознаванию имен хостов.</target>
        </trans-unit>
        <trans-unit id="c14c6338e762c52ff6d582916956b99716820151" translate="yes" xml:space="preserve">
          <source>This module provides aliases for the built-in variables whose names no one seems to like to read. Variables with side-effects which get triggered just by accessing them (like $0) will still be affected.</source>
          <target state="translated">Этот модуль предоставляет псевдонимы для встроенных переменных,имена которых,кажется,никто не любит читать.Переменные с побочными эффектами,которые срабатывают только при обращении к ним (например,$0),все равно будут затронуты.</target>
        </trans-unit>
        <trans-unit id="db82fd21a4c838f2cb867e238f620528a9b4e06a" translate="yes" xml:space="preserve">
          <source>This module provides an interface that allows filters to be applied to tied Hashes associated with DBM files. It builds on the DBM Filter hooks that are present in all the *DB*_File modules included with the standard Perl source distribution from version 5.6.1 onwards. In addition to the *DB*_File modules distributed with Perl, the BerkeleyDB module, available on CPAN, supports the DBM Filter hooks. See &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; for more details on the DBM Filter hooks.</source>
          <target state="translated">Этот модуль предоставляет интерфейс, который позволяет применять фильтры к связанным хэшам, связанным с файлами DBM. Он основан на перехватчиках фильтров DBM, которые присутствуют во всех модулях * DB * _File, включенных в стандартный дистрибутив исходного кода Perl начиная с версии 5.6.1 и далее. В дополнение к модулям * DB * _File, распространяемым с Perl, модуль BerkeleyDB, доступный на CPAN, поддерживает перехватчики фильтров DBM. См. &lt;a href=&quot;perldbmfilter&quot;&gt;Perldbmfilter&lt;/a&gt; для получения дополнительных сведений о перехватчиках фильтров DBM.</target>
        </trans-unit>
        <trans-unit id="2b24b2421d4d30b4ae85eba6a79f975fb3c67219" translate="yes" xml:space="preserve">
          <source>This module provides four global hashes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d483b4b377e197aedecfe9fa15f04f3c6c2c95" translate="yes" xml:space="preserve">
          <source>This module provides functions for determining the pathname of the current working directory. It is recommended that getcwd (or another *cwd() function) be used in</source>
          <target state="translated">Данный модуль предоставляет функции для определения патнама текущей рабочей директории.Рекомендуется использовать getcwd (или другую *cwd()функцию)в</target>
        </trans-unit>
        <trans-unit id="37033effa06ce25f227ce23dc6a9e45e7efa61d9" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="translated">Этот модуль предоставляет функции, которые являются обратными встроенным функциям perl &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; . Они принимают дату как массив из шести элементов и возвращают соответствующее значение &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; в секундах с системной эпохи (например, полночь, 1 января 1970 г. по Гринвичу в Unix). Это значение может быть положительным или отрицательным, хотя POSIX требует поддержки только положительных значений, поэтому даты, предшествующие эпохе системы, могут не работать во всех операционных системах.</target>
        </trans-unit>
        <trans-unit id="392d323e4c70390d247af9b47465d1285979f82d" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;localtime()&lt;/code&gt; and &lt;code&gt;gmtime()&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;time(2)&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ece64b49e28f99121f72eab284aec43cb55951" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the base64 encoding specified in RFC 2045 -</source>
          <target state="translated">Данный модуль предоставляет функции для кодирования и декодирования строк в и из базовой64 кодировки,указанной в RFC 2045 -</target>
        </trans-unit>
        <trans-unit id="990d143d4bc42dc7eed0bcd6394bda54ff57474f" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the quoted-printable encoding specified in RFC 2045 -</source>
          <target state="translated">Данный модуль предоставляет функции по кодированию и декодированию строк в и из кодировок,указанных в RFC 2045 -</target>
        </trans-unit>
        <trans-unit id="88e1b2c2210a010cd2575fe18207624d8324387f" translate="yes" xml:space="preserve">
          <source>This module provides linguistic tailoring for it taking advantage of &lt;code&gt;Unicode::Collate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe4c30f310ea99cbe1696d0845fc7519b7463f7" translate="yes" xml:space="preserve">
          <source>This module provides lists of modules that are broken, or have been broken in the past, when upgrading &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; to use &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4de2f96f0939e0587055f3524c8f314354960c" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt; , and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</source>
          <target state="translated">Этот модуль предоставляет методы для классов связывания массивов. См. В &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; список функций, необходимых для привязки массива к пакету. Базовый пакет &lt;b&gt;Tie :: Array&lt;/b&gt; предоставляет методы- заглушки &lt;code&gt;DESTROY&lt;/code&gt; и &lt;code&gt;EXTEND&lt;/code&gt; , которые ничего не делают, методы-заглушки &lt;code&gt;DELETE&lt;/code&gt; и &lt;code&gt;EXISTS&lt;/code&gt; , которые croak (), если встроенные функции delete () или exists () когда-либо вызываются для связанного массива, а также реализации &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; и &lt;code&gt;CLEAR&lt;/code&gt; с точки зрения базового &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f29d11225e822d19d127266ee941b28ea4361eb8" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt;, and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt;, &lt;code&gt;POP&lt;/code&gt;, &lt;code&gt;SHIFT&lt;/code&gt;, &lt;code&gt;UNSHIFT&lt;/code&gt;, &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt;, &lt;code&gt;STORE&lt;/code&gt;, &lt;code&gt;FETCHSIZE&lt;/code&gt;, &lt;code&gt;STORESIZE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02a6b6db2368ef791da2effa9e60fac9461270d" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt; .</source>
          <target state="translated">Этот модуль предоставляет некоторые скелетные методы для классов привязки ручек. См. В &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; список функций, необходимых для привязки дескриптора к пакету. Основной &lt;b&gt;Tie :: Handle&lt;/b&gt; пакет обеспечивает &lt;code&gt;new&lt;/code&gt; метод, а также методы &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; и &lt;code&gt;GETC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fee8f6e5404f98fd11ba8fe2fe719d028b8507eb" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;PRINT&lt;/code&gt;, &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1739e1ebdefff1631d8440f9ca833c6b68c52a" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; . The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt; ). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="translated">Этот модуль предоставляет некоторые скелетные методы для классов привязки к хешу. См. В &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; список функций, необходимых для привязки хэша к пакету. Базовый пакет &lt;b&gt;Tie :: Hash&lt;/b&gt; предоставляет &lt;code&gt;new&lt;/code&gt; метод, а также методы &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; и &lt;code&gt;CLEAR&lt;/code&gt; . В &lt;b&gt;Tie :: StdHash&lt;/b&gt; и &lt;b&gt;Tie :: ExtraHash&lt;/b&gt; пакеты обеспечивают большинство методов , описанных в хэшей &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; (исключение составляют &lt;code&gt;UNTIE&lt;/code&gt; и &lt;code&gt;DESTROY&lt;/code&gt; ). Они заставляют связанные хэши вести себя точно так же, как стандартные хэши, и позволяют выборочную перезапись методов. &lt;b&gt;Галстук :: Хаши&lt;/b&gt; деды &lt;code&gt;new&lt;/code&gt; метод: он используется, если &lt;code&gt;TIEHASH&lt;/code&gt; не определен в случае, если класс забывает включить метод &lt;code&gt;TIEHASH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e86347afc73eee0d0269a2eb0166a0d2b4987d04" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt;, &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt;. The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4010b9458f00ef557ee377f021a5154f08e74c91" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt; . The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="translated">Этот модуль предоставляет некоторые скелетные методы для классов скалярного связывания. См. В &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; список функций, необходимых для привязки скаляра к пакету. Базовый пакет &lt;b&gt;Tie :: Scalar&lt;/b&gt; предоставляет &lt;code&gt;new&lt;/code&gt; метод, а также методы &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; и &lt;code&gt;STORE&lt;/code&gt; . Пакет &lt;b&gt;Tie :: StdScalar&lt;/b&gt; предоставляет все методы, указанные в &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; . Он наследуется от &lt;b&gt;Tie :: Scalar&lt;/b&gt; и заставляет привязанные к нему скаляры вести себя точно так же, как встроенные скаляры, что позволяет избирательно перегрузить методы. &lt;code&gt;new&lt;/code&gt; способ, как средство покровительства, для классов , которые забывают предоставить свои собственные &lt;code&gt;TIESCALAR&lt;/code&gt; метод.</target>
        </trans-unit>
        <trans-unit id="1d35ccb6479014e9b69b5c1117e63a8ac16cdc51" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt;. The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974d73b0ae9a5c62aa55b2cce046ca17c11ca806" translate="yes" xml:space="preserve">
          <source>This module provides support for big integer calculations. It is not intended to be used directly, but rather as a parent class for backend libraries used by Math::BigInt, Math::BigFloat, Math::BigRat, and related modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a6ced9686dd2822231048fa2c17a6218884f07" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="translated">Этот модуль предоставляет возможность использовать ссылки в качестве хеш-ключей, если вы сначала &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; хеш-переменную к этому модулю. Обычно в качестве ссылок сохраняются только ключи самого связанного хэша; чтобы использовать ссылки в качестве ключей в хэше-хешах, используйте Tie :: RefHash :: Nestable, включенный как часть Tie :: RefHash.</target>
        </trans-unit>
        <trans-unit id="b93d510d992a2ad95750d227093b68f7a2f27bd8" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;tie&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebae6f4a623ce67e5227c5968ced52d6ec8a379b" translate="yes" xml:space="preserve">
          <source>This module provides things that are useful in decoding Pod E&amp;lt;...&amp;gt; sequences. Presumably, it should be used only by Pod parsers and/or formatters.</source>
          <target state="translated">Этот модуль предоставляет вещи, которые полезны при декодировании последовательностей Pod E &amp;lt;...&amp;gt;. Предположительно, его должны использовать только парсеры и / или форматеры Pod.</target>
        </trans-unit>
        <trans-unit id="0b9bdfe8079862de56a9be28719c20253e80c566" translate="yes" xml:space="preserve">
          <source>This module provides thread-safe FIFO queues that can be accessed safely by any number of threads.</source>
          <target state="translated">Этот модуль обеспечивает потоковую безопасность FIFO-очереди,к которым может безопасно обращаться любое количество потоков.</target>
        </trans-unit>
        <trans-unit id="c893e4865fad5c4ebef15f59be14ed58305bf748" translate="yes" xml:space="preserve">
          <source>This module provides you with objects that will collate according to your national character set, provided that the POSIX setlocale() function is supported on your system.</source>
          <target state="translated">Этот модуль предоставляет вам объекты,которые будут сопоставляться в соответствии с вашим национальным набором символов,при условии,что функция POSIX setlocale()поддерживается в вашей системе.</target>
        </trans-unit>
        <trans-unit id="3c80ba9c5ba8104333b035c434045b2d217f883f" translate="yes" xml:space="preserve">
          <source>This module provides you with the framework to write</source>
          <target state="translated">Этот модуль предоставляет вам фреймворк для написания</target>
        </trans-unit>
        <trans-unit id="a42cca3ae2e3ec2aed33868679dacb4f08255f28" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="translated">Этот модуль заменяет стандартные функции &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; реализациями, возвращающими объекты. Он делает это обратно совместимым образом, поэтому использование localtime / gmtime способом, описанным в perlfunc, по-прежнему возвращает то, что вы ожидаете.</target>
        </trans-unit>
        <trans-unit id="ebad2bd284dfda2fca32fe79ad6c3153c79782e2" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;localtime&lt;/code&gt; and &lt;code&gt;gmtime&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bdc953dcd00c8d1fe5956d84a4a3e6df9745fe" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt; . These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="translated">Этот модуль должен реализовать метод с именем &lt;code&gt;new&lt;/code&gt; , который возвращает объект с двумя методами: &lt;code&gt;IN&lt;/code&gt; и &lt;code&gt;OUT&lt;/code&gt; . Они должны возвращать дескрипторы файлов для использования при отладке ввода и вывода соответственно. &lt;code&gt;new&lt;/code&gt; метод должен проверить аргумент , содержащий значение &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; при запуске, или &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; в противном случае. Правильное владение этим файлом не проверяется, поэтому теоретически возможны угрозы безопасности.</target>
        </trans-unit>
        <trans-unit id="6ae943e96b2618df870eb0a33680626556843298" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt;. These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad58f419e7f4aec9440c0245d2f7f3c13689acc" translate="yes" xml:space="preserve">
          <source>This module simplifies the process of diagnosing such problems. Just put this line on top of your main program:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af86b3d96524d0d85ce2a4bfec17fb68c6415ad" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a41ba09a40a54e49a9ee3baae88659ee7ff44a3" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="translated">Этот модуль упрощает задачу написания тестовых файлов для модулей Perl, так что их вывод будет в формате, который &lt;a href=&quot;test/harness&quot;&gt;Test :: Harness&lt;/a&gt; ожидает увидеть.</target>
        </trans-unit>
        <trans-unit id="11c0f42159d2cd738d87f4668e591361666ef5d1" translate="yes" xml:space="preserve">
          <source>This module supplies line breaking conformant with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;UAX#14 Unicode Line Breaking Algorithm&lt;/a&gt;.</source>
          <target state="translated">Этот модуль обеспечивает прерывание строки в соответствии с &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;алгоритмом прерывания строки Unicode UAX # 14&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7362dd1991fb64d8e60d1766b453419474c1d7a8" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="translated">Этот модуль поддерживает двузначные переменные, созданные с помощью &lt;code&gt;dualvar()&lt;/code&gt; из &lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; . Однако пока &lt;code&gt;$!&lt;/code&gt; действует как двойная переменная, она реализована как связанный SV. Чтобы распространить его значение, при необходимости используйте следующую конструкцию:</target>
        </trans-unit>
        <trans-unit id="fd505ee058fc17bfb1d30b711a408033af247e5c" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9a2cc7b64dab0e46b52256bb4b3682e797fe2a" translate="yes" xml:space="preserve">
          <source>This module supports the sharing of the following data types only: scalars and scalar refs, arrays and array refs, and hashes and hash refs.</source>
          <target state="translated">Данный модуль поддерживает совместное использование только следующих типов данных:скаляры и скалярные ссылки,массивы и массивы ссылок,а также хэши и хэш-ссылки.</target>
        </trans-unit>
        <trans-unit id="a0c98feb7e76c5e1cd4d46ac2f59afc0263d11ba" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt; .</source>
          <target state="translated">Этот модуль берет существующий модуль &lt;code&gt;File::Glob&lt;/code&gt; в качестве отправной точки и расширяет его, позволяя получать новые имена файлов из файлов, сопоставленных &lt;code&gt;File::Glob&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cfd10e3f1ec19589cfc4011f0c16d6ed897f4ea" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052bc1b3338f70ab6cb4be4a053d4fd7e5528e2e" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a954cd9e0b1a91ff11e964474367fdd384bdca9c" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">Этот модуль сообщает своим пользователям, что функции в пакете FOOBAR должны автоматически &lt;code&gt;__DATA__&lt;/code&gt; после токена __DATA__ . См. Также &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Автозагрузка в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4932847f497c060c74592b6ad7e18f95a164be8" translate="yes" xml:space="preserve">
          <source>This module tests the perl C API. Also exposes various bit of the perl internals for the use of core test scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9a81649e360d7b3e7438be28feaaf818a5ce22" translate="yes" xml:space="preserve">
          <source>This module uses &lt;a href=&quot;Term::Cap&quot;&gt;Term::Cap&lt;/a&gt; to find the correct terminal settings. See the documentation of that module for how it finds terminal database information and how to override that behavior if necessary. If unable to find control strings for bold and underscore formatting, that formatting is skipped, resulting in the same output as Pod::Text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939a336b2bb3143f369fbb6ba3a4974db4ff7afa" translate="yes" xml:space="preserve">
          <source>This module uses POSIX::setlocale(). The basic collation conversion is done by strxfrm() which terminates at NUL characters being a decent C routine. collate_xfrm() handles embedded NUL characters gracefully.</source>
          <target state="translated">Этот модуль использует POSIX::setlocale().Основное преобразование коллизии осуществляется функцией strxfrm(),которая заканчивается на NUL символах,являясь приличной рутиной на C.collate_xfrm()изящно обрабатывает встроенные NUL символы.</target>
        </trans-unit>
        <trans-unit id="3d7e780fb3434a21970906d8c1e16da4e1e4c306" translate="yes" xml:space="preserve">
          <source>This module uses Term::Cap to retrieve the formatting escape sequences for the current terminal, and falls back on the ECMA-48 (the same in this regard as ANSI X3.64 and ISO 6429, the escape codes also used by DEC VT100 terminals) if the bold, underline, and reset codes aren't set in the termcap information.</source>
          <target state="translated">Данный модуль использует Term::Cap для извлечения экранирующих последовательностей форматирования для текущего терминала,и возвращается к ECMA-48 (то же самое в этом отношении,что и ANSI X3.64 и ISO 6429,экранирующие коды,также используемые терминалами DEC VT100),если коды,выделенные жирным шрифтом,подчеркиванием и сбросом,не заданы в информации о термальной маркере.</target>
        </trans-unit>
        <trans-unit id="058e434497d0f41de20212a7e71136f58de19c26" translate="yes" xml:space="preserve">
          <source>This module uses the Encode module.</source>
          <target state="translated">В этом модуле используется модуль Encode.</target>
        </trans-unit>
        <trans-unit id="ecd2d794e766a834737cd883e299b1adbe33f061" translate="yes" xml:space="preserve">
          <source>This module validates a CPAN Meta structure against the version of the the specification claimed in the &lt;code&gt;meta-spec&lt;/code&gt; field of the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b71953fa4633537c604ac518e043ed458e0579" translate="yes" xml:space="preserve">
          <source>This module was conceived while talking with Tony Bowden in his kitchen one night about the problems I was having writing some really complicated feature into the new Testing module. He observed that the main problem is not dealing with these edge cases but that people hate to write tests &lt;b&gt;at all&lt;/b&gt;. What was needed was a dead simple module that took all the hard work out of testing and was really, really easy to learn. Paul Johnson simultaneously had this idea (unfortunately, he wasn't in Tony's kitchen). This is it.</source>
          <target state="translated">Этот модуль был придуман во время разговора с Тони Боуденом на его кухне однажды ночью о проблемах, с которыми я столкнулся при написании действительно сложной функции в новом модуле тестирования. Он заметил, что основная проблема не в этих крайних случаях, а в том, что люди &lt;b&gt;вообще&lt;/b&gt; ненавидят писать тесты . Что было необходимо, так это очень простой модуль, который снимал бы всю тяжелую работу по тестированию и был действительно очень легким в освоении. Одновременно с этим у Пола Джонсона возникла эта идея (к сожалению, его не было на кухне Тони). Это оно.</target>
        </trans-unit>
        <trans-unit id="44e053a287d50cc7ccc07846fa0cd204c00c77bf" translate="yes" xml:space="preserve">
          <source>This module was forked from &lt;a href=&quot;base&quot;&gt;base&lt;/a&gt; to remove the cruft that had accumulated in it.</source>
          <target state="translated">Этот модуль был раздвоен из &lt;a href=&quot;base&quot;&gt;базы,&lt;/a&gt; чтобы удалить скопившийся в нем мусор.</target>
        </trans-unit>
        <trans-unit id="415f859ceb0027d691de683de60a6caa41bf897e" translate="yes" xml:space="preserve">
          <source>This module was introduced with Perl 5.004_04.</source>
          <target state="translated">Этот модуль был представлен с Perl 5.004_04.</target>
        </trans-unit>
        <trans-unit id="d78d05cb96bc7dd60c1272000024e5786c3b344f" translate="yes" xml:space="preserve">
          <source>This module was originally maintained in Perl core by the Perl 5 Porters.</source>
          <target state="translated">Изначально этот модуль поддерживался в ядре Perl с помощью порталов Perl 5.</target>
        </trans-unit>
        <trans-unit id="d496390246382aaea7191d7bd504a81ceae75b9b" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess,</source>
          <target state="translated">Этот модуль был написан Полем Маркессом,</target>
        </trans-unit>
        <trans-unit id="bc6d88c0756ae538fe8de07d7958dc0a1b51e622" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess, &lt;code&gt;pmqs@cpan.org&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447cd8889bedc96882c7e73b779d78b4d5490566" translate="yes" xml:space="preserve">
          <source>This module was written to be able to return the configuration for the currently used perl as deeply as needed for the CPANTESTERS framework. Up until now they used the output of myconfig as a single text blob, and so it was missing the vital binary characteristics of the running perl and the optional applied patches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6bc597ca48fae1b90746fab4916cd0188777f9" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">Этот модуль организует следующие методы будут доступны через объект возвращается из &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; вызова.</target>
        </trans-unit>
        <trans-unit id="0daa24844007b58d785b5b27ec35609e2bc267e2" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;tie&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2764651445501a5ce090459b163069724d513467" translate="yes" xml:space="preserve">
          <source>This module will ensure that all data written to the DBM will be encoded in UTF-8.</source>
          <target state="translated">Этот модуль обеспечит кодирование всех данных,записываемых в БДМ,в UTF-8.</target>
        </trans-unit>
        <trans-unit id="d4e571c7af10e51826ae47ab8231a6af4b7edd1a" translate="yes" xml:space="preserve">
          <source>This module will have no effect unless Term::ANSIColor is installed.</source>
          <target state="translated">Этот модуль не будет иметь никакого эффекта,если не установлен модуль Term::ANSIColor.</target>
        </trans-unit>
        <trans-unit id="753074c360c010972baa819f6207bebbcf1369a9" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgrgid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc002eb3536b764cc0a1a4a051dbfbb6d0617a7a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgruid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет ядро функций getgrent(),getgruid()и getgrnam(),заменяя их версиями,возвращающими объекты &quot;User::grent&quot;.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры C passwd от</target>
        </trans-unit>
        <trans-unit id="1581c51cdf9361d52e5059029b51bf081eb34a2a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gethostbyname() and gethostbyaddr() functions, replacing them with versions that return &quot;Net::hostent&quot; objects. This object has methods that return the similarly named structure field name from the C's hostent structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет функции gethostbyname()и gethostbyaddr(),заменяя их версиями,которые возвращают объекты &quot;Net::Hostent&quot;.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры C hostent от</target>
        </trans-unit>
        <trans-unit id="1cf48308305a0353920dde6f36f9628e64db01d0" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getnetbyname() and getnetbyaddr() functions, replacing them with versions that return &quot;Net::netent&quot; objects. This object has methods that return the similarly named structure field name from the C's netent structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет функции getnetbyname()и getnetbyaddr(),заменяя их версиями,возвращающими объекты &quot;Net::netent&quot;.Этот объект имеет методы,которые возвращают одноименное имя поля структуры из netent-структуры С от</target>
        </trans-unit>
        <trans-unit id="63eeed3630a3c131f9be311caba9fa2bc27d9b47" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getprotoent(), getprotobyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::protoent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's protoent structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет ядро функций getprotoent(),getprotobyname()и getnetbyport(),заменяя их версиями,возвращающими объекты &quot;Net::protoent&quot;.Они принимают второй аргумент &quot;tcp&quot; по умолчанию.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры протоента С из функции</target>
        </trans-unit>
        <trans-unit id="4107e545f5b1cf8c8a8164c3254d8e830266adf1" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getpwent(), getpwuid(), and getpwnam() functions, replacing them with versions that return &lt;code&gt;User::pwent&lt;/code&gt; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">Экспортные данные этого модуля по умолчанию переопределяют основные функции getpwent (), getpwuid () и getpwnam (), заменяя их версиями, возвращающими объекты &lt;code&gt;User::pwent&lt;/code&gt; . Этот объект имеет методы, которые возвращают одноименное имя поля структуры из структуры passwd языка C из</target>
        </trans-unit>
        <trans-unit id="10fb02d2375c44b6670d64106c1e02dfe50c1c6b" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getservent(), getservbyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::servent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's servent structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет функции ядра getervent(),getervbyname()и getnetbyport(),заменяя их версиями,возвращающими объекты &quot;Net::servent&quot;.Они принимают второй аргумент &quot;tcp&quot; по умолчанию.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры сервера C из функции</target>
        </trans-unit>
        <trans-unit id="7599d7934dafe0542e5b1a0c799f665df33f32e3" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gmtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет функцию ядра gmtime(),заменяя ее версией,которая возвращает объекты &quot;Time::tm&quot;.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры С tm от</target>
        </trans-unit>
        <trans-unit id="1c7368710f29f58e692e516e823ad1d056f89a07" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core localtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет ядро функции localtime(),заменяя его версией,которая возвращает объекты &quot;Time::tm&quot;.У этого объекта есть методы,которые возвращают одноименное имя поля структуры из структуры C tm от</target>
        </trans-unit>
        <trans-unit id="d73f3c14e45154d8cf626f7be1ef9892237475eb" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core stat() and lstat() functions, replacing them with versions that return &quot;File::stat&quot; objects. This object has methods that return the similarly named structure field name from the stat(2) function; namely, dev, ino, mode, nlink, uid, gid, rdev, size, atime, mtime, ctime, blksize, and blocks.</source>
          <target state="translated">Экспорт этого модуля по умолчанию переопределяет функции ядра stat()и lstat(),заменяя их версиями,которые возвращают объекты &quot;File::stat&quot;.Этот объект имеет методы,которые возвращают одноименное имя поля структуры из функции stat(2),а именно:dev,ino,mode,nlink,uid,gid,rdev,size,atime,mtime,ctime,blksize и blocks.</target>
        </trans-unit>
        <trans-unit id="cd05da270956b31cc43582962e51390407dca252" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="translated">Этот модуль, когда он наследуется пакетом, позволяет классу этого пакета определять подпрограммы обработчика атрибутов для определенных атрибутов. Переменным и подпрограммам, впоследствии определенным в этом пакете или в пакетах, производных от этого пакета, могут быть присвоены атрибуты с теми же именами, что и у подпрограмм обработчика атрибутов, которые затем будут вызываться на одной из фаз компиляции (т. &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , или блок &lt;code&gt;END&lt;/code&gt; ). ( Блоки &lt;code&gt;UNITCHECK&lt;/code&gt; не соответствуют фазе глобальной компиляции, поэтому их нельзя здесь указать.)</target>
        </trans-unit>
        <trans-unit id="99dcf55d867c5d7dcda0db6120bea9765e3ea428" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;CHECK&lt;/code&gt;, &lt;code&gt;INIT&lt;/code&gt;, or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b82d477760eacd25bf3c70a5e788527be511b5" translate="yes" xml:space="preserve">
          <source>This modules handles the BOM as follows.</source>
          <target state="translated">Эти модули обрабатывают запоминающее устройство следующим образом.</target>
        </trans-unit>
        <trans-unit id="f10c5ffd35143aacf9d4aee6ffb8d09db8a38f8d" translate="yes" xml:space="preserve">
          <source>This name actually evaluates to a sequence of two Katakana characters, not just a single one, and it is illegal to try to take the complement of a sequence. (Mathematically it would mean any sequence of characters from 0 to infinity in length that weren't these two in a row, and that is likely not of any real use.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3973d4b3df1b4f6e4e1a4578c3854df16aa9cfcc" translate="yes" xml:space="preserve">
          <source>This name should be as descriptive, accurate, and complete as possible. Avoid any risk of ambiguity. Always try to use two or more whole words. Generally the name should reflect what is special about what the module does rather than how it does it. Please use nested module names to group informally or categorize a module. There should be a very good reason for a module not to have a nested name. Module names should begin with a capital letter.</source>
          <target state="translated">Это имя должно быть как можно более описательным,точным и полным.Избегайте любого риска двусмысленности.Всегда старайтесь использовать два или более целых слова.Обычно название должно отражать то,что является особенным в том,что делает модуль,а не то,как он это делает.Пожалуйста,используйте вложенные названия модулей для неофициальной группировки или группировки модулей по категориям.Должна быть очень веская причина,по которой у модуля не должно быть вложенного имени.Имена модулей должны начинаться с заглавной буквы.</target>
        </trans-unit>
        <trans-unit id="179dbc2dff329a2eb588f358318a7847c0e2dc93" translate="yes" xml:space="preserve">
          <source>This namespace is for bundles of tools and plugins. Loading one of these may load multiple tools and plugins. Modules in this namespace should not implement tools directly. In general modules in this namespace should load tools and plugins, then re-export things into the consumers namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25625211c4cda5e1d4faa1db8d7e10f093eef9f2" translate="yes" xml:space="preserve">
          <source>This namespace is for general utilities used by testing tools. Please be considerate when adding new modules to this namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90daa65eb98c6c93bba627fab2d39064d5b2e4dd" translate="yes" xml:space="preserve">
          <source>This namespace is for modules that cause a test to be skipped when conditions do not allow it to run. Examples would be modules that skip the test on older perls, or when non-essential modules have not been installed.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
