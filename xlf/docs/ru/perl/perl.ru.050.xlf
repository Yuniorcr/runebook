<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="55a77b36211d3d02a45104bff8d76788cd986acc" translate="yes" xml:space="preserve">
          <source>You can get commercial support of Perl if you wish, although for most users the informal support will more than suffice. See the answer to &quot;Where can I buy a commercial version of Perl?&quot; for more information.</source>
          <target state="translated">При желании вы можете получить коммерческую поддержку Perl,хотя для большинства пользователей неофициальной поддержки будет более чем достаточно.См.ответ на вопрос &quot;Где я могу купить коммерческую версию Perl?&quot; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="83877e131c38375e988c7edf4defa59ad28286ba" translate="yes" xml:space="preserve">
          <source>You can get gzip from &lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;</source>
          <target state="translated">Вы можете получить gzip с &lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cc7caff36ea8191fb948cb25382a0802d8b70e3" translate="yes" xml:space="preserve">
          <source>You can get gzip from &lt;a href=&quot;http://www.s390.ibm.com/products/oe/bpxqp1.html&quot;&gt;http://www.s390.ibm.com/products/oe/bpxqp1.html&lt;/a&gt;</source>
          <target state="translated">Вы можете получить gzip по &lt;a href=&quot;http://www.s390.ibm.com/products/oe/bpxqp1.html&quot;&gt;адресу http://www.s390.ibm.com/products/oe/bpxqp1.html.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ceb45063df183ed03ff063ebe2021495fbb9baff" translate="yes" xml:space="preserve">
          <source>You can get into trouble if you use constants in a context which automatically quotes barewords (as is true for any subroutine call). For example, you can't say &lt;code&gt;$hash{CONSTANT}&lt;/code&gt; because &lt;code&gt;CONSTANT&lt;/code&gt; will be interpreted as a string. Use &lt;code&gt;$hash{CONSTANT()}&lt;/code&gt; or &lt;code&gt;$hash{+CONSTANT}&lt;/code&gt; to prevent the bareword quoting mechanism from kicking in. Similarly, since the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator quotes a bareword immediately to its left, you have to say &lt;code&gt;CONSTANT() =&amp;gt; 'value'&lt;/code&gt; (or simply use a comma in place of the big arrow) instead of &lt;code&gt;CONSTANT =&amp;gt; 'value'&lt;/code&gt; .</source>
          <target state="translated">У вас могут возникнуть проблемы, если вы используете константы в контексте, который автоматически цитирует голые слова (как это верно для любого вызова подпрограммы). Например, вы не можете сказать &lt;code&gt;$hash{CONSTANT}&lt;/code&gt; потому что &lt;code&gt;CONSTANT&lt;/code&gt; будет интерпретироваться как строка. Используйте &lt;code&gt;$hash{CONSTANT()}&lt;/code&gt; или &lt;code&gt;$hash{+CONSTANT}&lt;/code&gt; чтобы предотвратить срабатывание механизма цитирования голого слова. Точно так же, поскольку оператор &lt;code&gt;=&amp;gt;&lt;/code&gt; цитирует голое слово сразу слева от него, вы должны сказать &lt;code&gt;CONSTANT() =&amp;gt; 'value'&lt;/code&gt; (или просто используйте запятую вместо большой стрелки) вместо &lt;code&gt;CONSTANT =&amp;gt; 'value'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6872803f70582536909b7aa8df4da94cd4d37a4" translate="yes" xml:space="preserve">
          <source>You can have an environment variable PERL_INSTALL_ROOT set which will be prepended as a directory to each installed file (and directory).</source>
          <target state="translated">Вы можете иметь переменную окружения PERL_INSTALL_ROOT,которая будет префиксована в качестве каталога к каждому установленному файлу (и каталогу).</target>
        </trans-unit>
        <trans-unit id="fa58ede728fa900b2be53c5925b3b4ff8069c044" translate="yes" xml:space="preserve">
          <source>You can ignore [pad]THXx when browsing the Perl headers/sources. Those are strictly for use within the core. Extensions and embedders need only be aware of [pad]THX.</source>
          <target state="translated">Вы можете игнорировать [pad]THXx при просмотре заголовков/источников Perl.Они предназначены только для использования внутри ядра.Расширения и встраиваемые файлы должны знать только [pad]THX.</target>
        </trans-unit>
        <trans-unit id="f0a479cb9681a1cb4f6cbb2bcf71ac6471f5092e" translate="yes" xml:space="preserve">
          <source>You can imagine how bad things would be if, for example, the SYS$MANAGER or SYS$SYSTEM logical names were deleted.</source>
          <target state="translated">Вы можете себе представить,насколько все было бы плохо,если бы,например,логические имена SYS$MANAGER или SYS$SYSTEM были удалены.</target>
        </trans-unit>
        <trans-unit id="2157dc8c06b7685edcc449748ab0e77243e5a157" translate="yes" xml:space="preserve">
          <source>You can immediately see a slightly different focus to the subroutine profiling modules, and we start to see exactly which line of code is taking the most time. That regex line is looking a bit suspicious, for example. Remember that these tools are supposed to be used together, there is no single best way to profile your code, you need to use the best tools for the job.</source>
          <target state="translated">Вы сразу видите немного другую направленность модулей профилирования подпрограмм,и мы начинаем видеть,какая именно строка кода занимает больше всего времени.Например,эта строка регекса выглядит немного подозрительно.Помните,что эти инструменты должны использоваться вместе,нет единого лучшего способа профилирования вашего кода,вам нужно использовать лучшие инструменты для работы.</target>
        </trans-unit>
        <trans-unit id="01ccbef4b59df5e513c51a0c19924a7a01e4981e" translate="yes" xml:space="preserve">
          <source>You can import &lt;code&gt;:pushpop&lt;/code&gt; and maintain a stack of colors using PUSHCOLOR, POPCOLOR, and LOCALCOLOR. PUSHCOLOR takes the attribute string that starts its argument and pushes it onto a stack of attributes. POPCOLOR removes the top of the stack and restores the previous attributes set by the argument of a prior PUSHCOLOR. LOCALCOLOR surrounds its argument in a PUSHCOLOR and POPCOLOR so that the color resets afterward.</source>
          <target state="translated">Вы можете импортировать &lt;code&gt;:pushpop&lt;/code&gt; и поддерживать набор цветов с помощью PUSHCOLOR, POPCOLOR и LOCALCOLOR. PUSHCOLOR берет строку атрибута, с которой начинается его аргумент, и помещает его в стек атрибутов. POPCOLOR удаляет верхнюю часть стека и восстанавливает предыдущие атрибуты, установленные аргументом предыдущего PUSHCOLOR. LOCALCOLOR окружает свой аргумент PUSHCOLOR и POPCOLOR, чтобы цвет впоследствии сбрасывался.</target>
        </trans-unit>
        <trans-unit id="7225c37bbdccefc8a70c019da87c9b8dea7a6b29" translate="yes" xml:space="preserve">
          <source>You can import all the great circle formulas by</source>
          <target state="translated">Вы можете импортировать все формулы большого круга по следующим критериям</target>
        </trans-unit>
        <trans-unit id="6ccdd2eb8d7e6ad6ca52482a2893e8ad5920726c" translate="yes" xml:space="preserve">
          <source>You can import radial coordinate conversion functions by using the &lt;code&gt;:radial&lt;/code&gt; tag:</source>
          <target state="translated">Вы можете импортировать функции преобразования радиальных координат с помощью тега: &lt;code&gt;:radial&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a747eb56defc25ea65ac8c773f590bb69f4cf6d4" translate="yes" xml:space="preserve">
          <source>You can import symbolic mode constants (&lt;code&gt;S_IF*&lt;/code&gt; ) and functions (&lt;code&gt;S_IS*&lt;/code&gt; ) from the Fcntl module:</source>
          <target state="translated">Вы можете импортировать константы символьного режима ( &lt;code&gt;S_IF*&lt;/code&gt; ) и функции ( &lt;code&gt;S_IS*&lt;/code&gt; ) из модуля Fcntl:</target>
        </trans-unit>
        <trans-unit id="c7c8f6c731717afeb2f914b548c9389d16df04b0" translate="yes" xml:space="preserve">
          <source>You can include one underscore between any two digits.</source>
          <target state="translated">Вы можете включить одно подчеркивание между любыми двумя цифрами.</target>
        </trans-unit>
        <trans-unit id="06780cff3747acdd27c6cb36674311a1b2286d47" translate="yes" xml:space="preserve">
          <source>You can instead write</source>
          <target state="translated">Вместо этого вы можете написать</target>
        </trans-unit>
        <trans-unit id="c4bd7d42db9b74a8aac6c0368becb036004d4652" translate="yes" xml:space="preserve">
          <source>You can intermix &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; matches with &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\G.../g&lt;/a&gt;&lt;/code&gt;, where &lt;code&gt;\G&lt;/code&gt; is a zero-width assertion that matches the exact position where the previous &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt;, if any, left off. Without the &lt;code&gt;/g&lt;/code&gt; modifier, the &lt;code&gt;\G&lt;/code&gt; assertion still anchors at &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; as it was at the start of the operation (see &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;), but the match is of course only attempted once. Using &lt;code&gt;\G&lt;/code&gt; without &lt;code&gt;/g&lt;/code&gt; on a target string that has not previously had a &lt;code&gt;/g&lt;/code&gt; match applied to it is the same as using the &lt;code&gt;\A&lt;/code&gt; assertion to match the beginning of the string. Note also that, currently, &lt;code&gt;\G&lt;/code&gt; is only properly supported when anchored at the very beginning of the pattern.</source>
          <target state="translated">Вы можете смешивать совпадения &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\G.../g&lt;/a&gt;&lt;/code&gt; , где &lt;code&gt;\G&lt;/code&gt; - это утверждение нулевой ширины, которое соответствует точной позиции, где предыдущее &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; , если оно есть, закончилось. Без модификатора &lt;code&gt;/g&lt;/code&gt; утверждение &lt;code&gt;\G&lt;/code&gt; прежнему привязывается к &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; как это было в начале операции (см. &lt;a href=&quot;functions/pos&quot;&gt;Pos&lt;/a&gt; ), но совпадение, конечно, выполняется только один раз. Использование &lt;code&gt;\G&lt;/code&gt; без &lt;code&gt;/g&lt;/code&gt; в целевой строке, к которой ранее не применялось сопоставление &lt;code&gt;/g&lt;/code&gt; , аналогично использованию утверждения &lt;code&gt;\A&lt;/code&gt; для сопоставления с началом строки. Отметим также, что в настоящее время &lt;code&gt;\G&lt;/code&gt; правильно поддерживается только при закреплении в самом начале паттерна.</target>
        </trans-unit>
        <trans-unit id="83b86b2d839c827310b20f3c55919cf18f3acb03" translate="yes" xml:space="preserve">
          <source>You can inversely compute the destination if you know the starting point, direction, and distance:</source>
          <target state="translated">Вы можете вычислить конечный пункт,если знаете начальную точку,направление и расстояние:</target>
        </trans-unit>
        <trans-unit id="0dfc74f0d7463fa46580b22cd874ca59538b399a" translate="yes" xml:space="preserve">
          <source>You can list opcodes by names, or use a tag name; see &lt;a href=&quot;opcode#Predefined-Opcode-Tags&quot;&gt;Predefined Opcode Tags in Opcode&lt;/a&gt;.</source>
          <target state="translated">Вы можете перечислить коды операций по именам или использовать имя тега; см. &lt;a href=&quot;opcode#Predefined-Opcode-Tags&quot;&gt;Предопределенные теги кода операции в коде операции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="001468774175cba071073df8732faf49990cd65b" translate="yes" xml:space="preserve">
          <source>You can load a custom &lt;a href=&quot;http://search.cpan.org/perldoc/TAP::Parser::Formatter&quot;&gt;TAP::Parser::Formatter&lt;/a&gt;:</source>
          <target state="translated">Вы можете загрузить собственный &lt;a href=&quot;http://search.cpan.org/perldoc/TAP::Parser::Formatter&quot;&gt;TAP :: Parser :: Formatter&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="97cc72d3ba21acacd11a8df6beb891397824853a" translate="yes" xml:space="preserve">
          <source>You can load custom &lt;a href=&quot;tap/parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s, to change the way the parser interprets particular</source>
          <target state="translated">Вы можете загрузить собственные &lt;a href=&quot;tap/parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; , чтобы изменить способ интерпретации парсером определенных</target>
        </trans-unit>
        <trans-unit id="864c8cc598c8e4c08f636d6accb98e4216dd8dc6" translate="yes" xml:space="preserve">
          <source>You can log in to the bug tracking system and comment on existing bug reports. If you have additional information regarding an existing bug, please add it. This will help the porters fix the bug.</source>
          <target state="translated">Вы можете войти в систему отслеживания ошибок и прокомментировать существующие сообщения об ошибках.Если у вас есть дополнительная информация о существующей ошибке,пожалуйста,добавьте её.Это поможет портерам исправить ошибку.</target>
        </trans-unit>
        <trans-unit id="70b967da2737530b2ccb33fdb14ce4b355858a95" translate="yes" xml:space="preserve">
          <source>You can look into using the &lt;code&gt;DB_File&lt;/code&gt; module and &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;$DB_BTREE&lt;/code&gt; hash bindings as documented in &lt;a href=&quot;db_file#In-Memory-Databases&quot;&gt;In Memory Databases in DB_File&lt;/a&gt;. The &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie::IxHash&lt;/a&gt; module from CPAN might also be instructive. Although this does keep your hash sorted, you might not like the slowdown you suffer from the tie interface. Are you sure you need to do this? :)</source>
          <target state="translated">Вы можете изучить использование модуля &lt;code&gt;DB_File&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; используя &lt;code&gt;$DB_BTREE&lt;/code&gt; хэша $ DB_BTREE, как &lt;a href=&quot;db_file#In-Memory-Databases&quot;&gt;описано в Базах данных памяти в DB_File&lt;/a&gt; . Модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie :: IxHash&lt;/a&gt; из CPAN также может быть поучительным. Хотя при этом ваш хэш отсортирован, вам может не понравиться замедление работы интерфейса галстука. Вы уверены, что вам это нужно? :)</target>
        </trans-unit>
        <trans-unit id="d03c6c46e2fd91fc95b867e10fbdca9429550351" translate="yes" xml:space="preserve">
          <source>You can make references to anything, including scalars, functions, and other references.</source>
          <target state="translated">Вы можете делать ссылки на что угодно,включая скаляры,функции и другие ссылки.</target>
        </trans-unit>
        <trans-unit id="f238aab29e64ee5c9b032d4d04c0ab30c79c6501" translate="yes" xml:space="preserve">
          <source>You can make the while loop a lot shorter with this suggestion from Benjamin Goldberg:</source>
          <target state="translated">Вы можете сделать петлю в то время намного короче с этим предложением от Бенджамина Голдберга:</target>
        </trans-unit>
        <trans-unit id="0ec5f2b2db5f7957e7b186e607473a4a56ae2fd0" translate="yes" xml:space="preserve">
          <source>You can make your configuration changes permanent by calling the command &lt;code&gt;o conf commit&lt;/code&gt; . Alternatively set the &lt;code&gt;auto_commit&lt;/code&gt; variable to true by running &lt;code&gt;o conf init auto_commit&lt;/code&gt; and answering the following question with yes.</source>
          <target state="translated">Вы можете сделать изменения конфигурации постоянными, вызвав команду &lt;code&gt;o conf commit&lt;/code&gt; . В качестве альтернативы установите для переменной &lt;code&gt;auto_commit&lt;/code&gt; значение true, запустив &lt;code&gt;o conf init auto_commit&lt;/code&gt; и ответив на следующий вопрос с помощью yes.</target>
        </trans-unit>
        <trans-unit id="2011dcb658fe55c431da3ed5067e6f4bf4528970" translate="yes" xml:space="preserve">
          <source>You can mimic class subtraction using lookahead. For example, what UTS#18 might write as</source>
          <target state="translated">Вы можете имитировать вычитание классов,используя lookahead.Например,что UTS#18 может написать как</target>
        </trans-unit>
        <trans-unit id="3461cd371c3715543776c435145f8478a0ac6ec8" translate="yes" xml:space="preserve">
          <source>You can mock TTY input to debugger by adding arbitrary commands to @DB::typeahead. For example, your</source>
          <target state="translated">Вы можете насмехаться над вводом TTY в отладчик,добавляя произвольные команды в @DB::typeahead.Например,ваш</target>
        </trans-unit>
        <trans-unit id="cf9cef6663d4cd69a19179eacb290a6dcc1e8352" translate="yes" xml:space="preserve">
          <source>You can modify &lt;code&gt;@ARGV&lt;/code&gt; before the first &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; as long as the array ends up containing the list of filenames you really want. Line numbers (&lt;code&gt;$.&lt;/code&gt; ) continue as though the input were one big happy file. See the example in &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; for how to reset line numbers on each file.</source>
          <target state="translated">Вы можете изменить &lt;code&gt;@ARGV&lt;/code&gt; перед первым &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; , если в конечном итоге массив будет содержать список имен файлов, которые вам действительно нужны. Номера строк ( &lt;code&gt;$.&lt;/code&gt; ) Продолжаются, как если бы входные данные были одним большим счастливым файлом. См. Пример в &lt;a href=&quot;functions/eof&quot;&gt;eof,&lt;/a&gt; чтобы узнать, как сбросить номера строк в каждом файле.</target>
        </trans-unit>
        <trans-unit id="4c8a419c4027fffc2a00680692cdd50042e9d07e" translate="yes" xml:space="preserve">
          <source>You can modify the 'commands' for example to hardwire an absolute path by e.g.</source>
          <target state="translated">Вы можете модифицировать &quot;команды&quot;,например,для жесткой привязки абсолютного пути,например,путем</target>
        </trans-unit>
        <trans-unit id="3de41be22b6a5efcacf396fbce08b0572f97fd60" translate="yes" xml:space="preserve">
          <source>You can only declare autoties for types &lt;code&gt;&quot;SCALAR&quot;&lt;/code&gt; , &lt;code&gt;&quot;ARRAY&quot;&lt;/code&gt; , and &lt;code&gt;&quot;HASH&quot;&lt;/code&gt; . They're the only things (apart from typeglobs -- which are not declarable) that Perl can tie.</source>
          <target state="translated">Вы можете объявлять автобиографию только для типов &lt;code&gt;&quot;SCALAR&quot;&lt;/code&gt; , &lt;code&gt;&quot;ARRAY&quot;&lt;/code&gt; и &lt;code&gt;&quot;HASH&quot;&lt;/code&gt; . Это единственное (кроме typeglobs, которые нельзя декларировать), которые Perl может связать.</target>
        </trans-unit>
        <trans-unit id="48d6492d8d5c8ebf50c4b6f0278c97639e62301c" translate="yes" xml:space="preserve">
          <source>You can only obtain this using an alias, and Getopt::Long of at least version 2.13.</source>
          <target state="translated">Вы можете получить это,используя только псевдоним,и Getopt::Long как минимум версии 2.13.</target>
        </trans-unit>
        <trans-unit id="0ce5924582aac2aa9ee7cd1ad99c9e8ff1e6ecea" translate="yes" xml:space="preserve">
          <source>You can only use the elliptical statement to stand in for a complete statement. These examples of how the ellipsis works:</source>
          <target state="translated">Вы можете использовать эллиптическое заявление только для того,чтобы встать на полный текст.Эти примеры того,как работает эллипсис:</target>
        </trans-unit>
        <trans-unit id="9cae8654bfe063f888826b48470927a2c30f96cd" translate="yes" xml:space="preserve">
          <source>You can open a file for input or output using the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; function. It's documented in extravagant detail in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;, but in short:</source>
          <target state="translated">Вы можете открыть файл для ввода или вывода с помощью функции &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; . Это подробно описано в &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; и &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; , но вкратце:</target>
        </trans-unit>
        <trans-unit id="ce96504bc4965bb9a6b5d98ed74131b7aef0ff79" translate="yes" xml:space="preserve">
          <source>You can override predefined aliases by simply applying define_alias(). The new alias is always evaluated first, and when necessary, define_alias() flushes the internal cache to make the new definition available.</source>
          <target state="translated">Вы можете переопределить предопределенные псевдонимы,просто применив функцию define_alias().Новый псевдоним всегда вычисляется первым,и когда необходимо,функция define_alias()промывает внутренний кэш,чтобы сделать новое определение доступным.</target>
        </trans-unit>
        <trans-unit id="ef785435f6086fb9fd6b00d9def6f92017001719" translate="yes" xml:space="preserve">
          <source>You can override the default and build a shared libperl if you wish (Configure ... -Duseshrplib).</source>
          <target state="translated">При желании вы можете переопределить значение по умолчанию и построить разделяемую libperl (Configure ...-Duseshrplib).</target>
        </trans-unit>
        <trans-unit id="97ed2e27db33bd8f090672fcd70380db3caec730" translate="yes" xml:space="preserve">
          <source>You can override this by giving extra arguments; see below.</source>
          <target state="translated">Вы можете отменить это,приведя дополнительные аргументы;см.ниже.</target>
        </trans-unit>
        <trans-unit id="73f74d7cb907a2b7504c7060b4ad0ec87a6506fe" translate="yes" xml:space="preserve">
          <source>You can override this by passing the desired rounding mode as parameter to &lt;code&gt;as_number()&lt;/code&gt; :</source>
          <target state="translated">Вы можете отменить это, передав желаемый режим округления в качестве параметра &lt;code&gt;as_number()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92b4dbfc185a430ad159257351a9ef1b4f3e946a" translate="yes" xml:space="preserve">
          <source>You can pass an argument to your plugin by appending an &lt;code&gt;=&lt;/code&gt; after the plugin name, eg &lt;code&gt;-PMyPlugin=foo&lt;/code&gt; . You can pass multiple arguments using commas:</source>
          <target state="translated">Вы можете передать аргумент вашему плагину, добавив &lt;code&gt;=&lt;/code&gt; после имени плагина, например &lt;code&gt;-PMyPlugin=foo&lt;/code&gt; . Вы можете передать несколько аргументов через запятую:</target>
        </trans-unit>
        <trans-unit id="577ba47f8467272240629f611eeec9e04fdaf1e6" translate="yes" xml:space="preserve">
          <source>You can pass arguments to your plugin by appending &lt;code&gt;=arg1,arg2,etc&lt;/code&gt; to the plugin name:</source>
          <target state="translated">Вы можете передать аргументы вашему плагину, добавив &lt;code&gt;=arg1,arg2,etc&lt;/code&gt; К имени плагина:</target>
        </trans-unit>
        <trans-unit id="d9b26d7e57483cd1ed4bf2659755481a3ca93653" translate="yes" xml:space="preserve">
          <source>You can pick up prebuilt binaries for Solaris from &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt;, &lt;a href=&quot;http://www.blastwave.org&quot;&gt;http://www.blastwave.org&lt;/a&gt;, ActiveState &lt;a href=&quot;http://www.activestate.com/&quot;&gt;http://www.activestate.com/&lt;/a&gt;, and &lt;a href=&quot;http://www.perl.com/&quot;&gt;http://www.perl.com/&lt;/a&gt; under the Binaries list at the top of the page. There are probably other sources as well. Please note that these sites are under the control of their respective owners, not the perl developers.</source>
          <target state="translated">Вы можете получить готовые двоичные файлы для Solaris на &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; , &lt;a href=&quot;http://www.blastwave.org&quot;&gt;http://www.blastwave.org&lt;/a&gt; , ActiveState &lt;a href=&quot;http://www.activestate.com/&quot;&gt;http://www.activestate.com/&lt;/a&gt; и &lt;a href=&quot;http://www.perl.com/&quot;&gt;http: //www.perl .com /&lt;/a&gt; под списком двоичных файлов вверху страницы. Возможно, есть и другие источники. Обратите внимание, что эти сайты находятся под контролем их владельцев, а не разработчиков perl.</target>
        </trans-unit>
        <trans-unit id="afad181efc494d271a3d1339fc4bea9100125dd3" translate="yes" xml:space="preserve">
          <source>You can preallocate space for a hash by assigning to the keys() function. This rounds up the allocated buckets to the next power of two:</source>
          <target state="translated">Вы можете предварительно выделить место для хэша,назначив функцию key().Это округляет выделенные ведра до следующей силы двух:</target>
        </trans-unit>
        <trans-unit id="6ece78405c91977c16dd3a742419b856c5fd5394" translate="yes" xml:space="preserve">
          <source>You can probably expect your users to be able to guess that they can request less CPU or memory or just &quot;less&quot; overall.</source>
          <target state="translated">Вы,вероятно,можете ожидать,что ваши пользователи смогут догадаться,что они могут запросить меньшее количество CPU или памяти или просто &quot;меньше&quot; в целом.</target>
        </trans-unit>
        <trans-unit id="2bb56a3e59af78b8d5da4daff16effef12d060e2" translate="yes" xml:space="preserve">
          <source>You can provide this layer when &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;ing the file:</source>
          <target state="translated">Вы можете указать этот слой при &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; файла:</target>
        </trans-unit>
        <trans-unit id="87d0d59bd2621cca1e6ec0d854420947ec5a4ec5" translate="yes" xml:space="preserve">
          <source>You can put a &lt;code&gt;+&lt;/code&gt; in front of the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; to indicate that you want both read and write access to the file; thus &lt;code&gt;+&amp;lt;&lt;/code&gt; is almost always preferred for read/write updates--the &lt;code&gt;+&amp;gt;&lt;/code&gt; mode would clobber the file first. You can't usually use either read-write mode for updating textfiles, since they have variable-length records. See the &lt;b&gt;-i&lt;/b&gt; switch in &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; for a better approach. The file is created with permissions of &lt;code&gt;0666&lt;/code&gt; modified by the process's &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Вы можете поставить &lt;code&gt;+&lt;/code&gt; перед &lt;code&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&lt;/code&gt; , чтобы указать, что вам нужен доступ как для чтения, так и для записи к файлу; таким образом, &lt;code&gt;+&amp;lt;&lt;/code&gt; почти всегда предпочтительнее для обновлений чтения / записи - режим &lt;code&gt;+&amp;gt;&lt;/code&gt; сначала уничтожит файл. Обычно вы не можете использовать режим чтения и записи для обновления текстовых файлов, поскольку они имеют записи переменной длины. См. &lt;b&gt;Ключ -i&lt;/b&gt; в &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; для лучшего подхода. Файл создается с разрешениями &lt;code&gt;0666&lt;/code&gt; , измененными значением &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; процесса .</target>
        </trans-unit>
        <trans-unit id="a5c78cfaaebb70f40ad0f93e0301fba4283c243b" translate="yes" xml:space="preserve">
          <source>You can put a &lt;code&gt;+&lt;/code&gt; in front of the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; to indicate that you want both read and write access to the file; thus &lt;code&gt;+&amp;lt;&lt;/code&gt; is almost always preferred for read/write updates--the &lt;code&gt;+&amp;gt;&lt;/code&gt; mode would clobber the file first. You can't usually use either read-write mode for updating textfiles, since they have variable-length records. See the &lt;b&gt;-i&lt;/b&gt; switch in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for a better approach. The file is created with permissions of &lt;code&gt;0666&lt;/code&gt; modified by the process's &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Вы можете поставить &lt;code&gt;+&lt;/code&gt; перед &lt;code&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&lt;/code&gt; , чтобы указать, что вам нужен доступ как для чтения, так и для записи к файлу; таким образом, &lt;code&gt;+&amp;lt;&lt;/code&gt; почти всегда предпочтительнее для обновлений чтения / записи - режим &lt;code&gt;+&amp;gt;&lt;/code&gt; сначала уничтожит файл. Обычно вы не можете использовать режим чтения и записи для обновления текстовых файлов, поскольку они имеют записи переменной длины. См. &lt;b&gt;Ключ -i&lt;/b&gt; в &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; для лучшего подхода. Файл создается с разрешениями &lt;code&gt;0666&lt;/code&gt; , измененными значением &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; процесса .</target>
        </trans-unit>
        <trans-unit id="7c8c4f9eec7c5f71cbfe88cf0f5ec847885d12d2" translate="yes" xml:space="preserve">
          <source>You can put any backslash sequence character class (with the exception of &lt;code&gt;\N&lt;/code&gt; and &lt;code&gt;\R&lt;/code&gt; ) inside a bracketed character class, and it will act just as if you had put all characters matched by the backslash sequence inside the character class. For instance, &lt;code&gt;[a-f\d]&lt;/code&gt; matches any decimal digit, or any of the lowercase letters between 'a' and 'f' inclusive.</source>
          <target state="translated">Вы можете поместить любой класс символов последовательности обратной косой черты (за исключением &lt;code&gt;\N&lt;/code&gt; и &lt;code&gt;\R&lt;/code&gt; ) внутри класса символов в квадратных скобках, и он будет действовать так же, как если бы вы поместили все символы, соответствующие последовательности обратной косой черты, внутри класса символов. Например, &lt;code&gt;[a-f\d]&lt;/code&gt; соответствует любой десятичной цифре или любой из строчных букв между 'a' и 'f' включительно.</target>
        </trans-unit>
        <trans-unit id="a88a6953f485e8c5fc3aeb601fd219de754900f0" translate="yes" xml:space="preserve">
          <source>You can read from an open filehandle using the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. In scalar context it reads a single line from the filehandle, and in list context it reads the whole file in, assigning each line to an element of the list:</source>
          <target state="translated">Вы можете читать из открытого дескриптора файла с помощью оператора &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; . В скалярном контексте он считывает одну строку из дескриптора файла, а в контексте списка он считывает весь файл, назначая каждую строку элементу списка:</target>
        </trans-unit>
        <trans-unit id="91ab2ef6e453973e41443b71f9d3e34175e99630" translate="yes" xml:space="preserve">
          <source>You can read more about profiling in</source>
          <target state="translated">Вы можете прочитать больше о профилировании в</target>
        </trans-unit>
        <trans-unit id="00f2324bbf3536a80f241b597db331417bcbe8c1" translate="yes" xml:space="preserve">
          <source>You can redistribute and/or modify this document under the same terms as Perl itself.</source>
          <target state="translated">Вы можете распространять и/или изменять этот документ на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="d7dc0e1fc9ad5b87e77bf63d3f4081648cdf49ca" translate="yes" xml:space="preserve">
          <source>You can request that the flock() constants (LOCK_SH, LOCK_EX, LOCK_NB and LOCK_UN) be provided by using the tag &lt;code&gt;:&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . See &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;.</source>
          <target state="translated">Вы можете запросить предоставление констант flock () (LOCK_SH, LOCK_EX, LOCK_NB и LOCK_UN) с помощью тега &lt;code&gt;:&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . См. &lt;a href=&quot;exporter&quot;&gt;Экспортер&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9f4701466ab8780e7a2b0e9f2a17e8d0b7017d5" translate="yes" xml:space="preserve">
          <source>You can request that the old constants (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) be provided for compatibility reasons by using the tag &lt;code&gt;:Fcompat&lt;/code&gt; . For new applications the newer versions of these constants are suggested (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC).</source>
          <target state="translated">Вы можете запросить предоставление старых констант (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) по соображениям совместимости, используя тег &lt;code&gt;:Fcompat&lt;/code&gt; . Для новых приложений предлагаются новые версии этих констант (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC).</target>
        </trans-unit>
        <trans-unit id="caaaaed5194349d7e53889bf69ba7c88d167c7d9" translate="yes" xml:space="preserve">
          <source>You can reset this cache by assigning an empty hashref to it, or individually remove keys.</source>
          <target state="translated">Вы можете сбросить этот кэш,назначив ему пустой хэш-файл,или индивидуально удалить клавиши.</target>
        </trans-unit>
        <trans-unit id="c4fc671bd928d082df8dcbc4d77c81ac14538200" translate="yes" xml:space="preserve">
          <source>You can retrieve the result via -&amp;gt;data but usually you don't have to because the stringify operator (&quot;&quot;) is overridden to do exactly that.</source>
          <target state="translated">Вы можете получить результат с помощью -&amp;gt; data, но обычно в этом нет необходимости, потому что оператор строкового преобразования (&quot;&quot;) переопределен для выполнения именно этого.</target>
        </trans-unit>
        <trans-unit id="1bc6861c31e761832a97f33e3f90e04d306eb3ee" translate="yes" xml:space="preserve">
          <source>You can return the</source>
          <target state="translated">Вы можете вернуть</target>
        </trans-unit>
        <trans-unit id="c5203f3ceab8b6b9bc7b6ca2deddcda6d494d3e9" translate="yes" xml:space="preserve">
          <source>You can run a command in the background with:</source>
          <target state="translated">Вы можете запустить команду в фоновом режиме:</target>
        </trans-unit>
        <trans-unit id="c92356e98ca4379f9b92a2bcc41db6e953218853" translate="yes" xml:space="preserve">
          <source>You can run all the tests with the following commands:</source>
          <target state="translated">Все тесты можно запустить следующими командами:</target>
        </trans-unit>
        <trans-unit id="dab3a450deb8a8c4cd405b2e23f88d23efbbf2ec" translate="yes" xml:space="preserve">
          <source>You can run an individual test by a command similar to</source>
          <target state="translated">Вы можете запустить индивидуальный тест по команде,подобной</target>
        </trans-unit>
        <trans-unit id="7019e534322025bbdc3a56a0ada6decc0fac6688" translate="yes" xml:space="preserve">
          <source>You can run into similar problems when you store &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; or &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; into AVs or HVs. Trying to modify such elements will give you the following error:</source>
          <target state="translated">Вы можете столкнуться с аналогичными проблемами при сохранении &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; или &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; в AV или HV. Попытка изменить такие элементы приведет к следующей ошибке:</target>
        </trans-unit>
        <trans-unit id="48a3f2e45a171b8580b9277e027aa9cbf304aecf" translate="yes" xml:space="preserve">
          <source>You can run part of the test suite by hand by using one of the following commands from the</source>
          <target state="translated">Вы можете запустить часть тестового набора вручную,используя одну из следующих команд из</target>
        </trans-unit>
        <trans-unit id="9677002a55994cfb79edd644465223dc6f275627" translate="yes" xml:space="preserve">
          <source>You can safely ignore the line about &quot;prototyping behavior&quot; - it is explained in &lt;a href=&quot;perlxs#The-PROTOTYPES%3a-Keyword&quot;&gt;The PROTOTYPES: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">Вы можете смело игнорировать строчку о &amp;laquo;прототипировании поведения&amp;raquo; - это объясняется в &lt;a href=&quot;perlxs#The-PROTOTYPES%3a-Keyword&quot;&gt;ПРОТОТИПАХ: Ключевое слово в perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00bbb0e9f9b7d267fed175221358a00b2882f0e8" translate="yes" xml:space="preserve">
          <source>You can safely replace &lt;code&gt;isa&lt;/code&gt; with &lt;code&gt;DOES&lt;/code&gt; (although the converse is not true).</source>
          <target state="translated">Вы можете смело заменить &lt;code&gt;isa&lt;/code&gt; на &lt;code&gt;DOES&lt;/code&gt; (хотя обратное неверно).</target>
        </trans-unit>
        <trans-unit id="f3c22b7008ae62adff98ca02982c07c25fd7ebcc" translate="yes" xml:space="preserve">
          <source>You can say &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; and &lt;code&gt;*foo{NAME}&lt;/code&gt; to find out what name and package the *foo symbol table entry comes from. This may be useful in a subroutine that gets passed typeglobs as arguments:</source>
          <target state="translated">Вы можете произнести &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; и &lt;code&gt;*foo{NAME}&lt;/code&gt; чтобы узнать, из какого имени и какого пакета была получена запись таблицы символов * foo. Это может быть полезно в подпрограмме, которая получает переданные в качестве аргументов typeglobs:</target>
        </trans-unit>
        <trans-unit id="1966e0b952d6a25db96c9f73b3f341a3e54cf712" translate="yes" xml:space="preserve">
          <source>You can say &lt;code&gt;BEGIN { $Exporter::Verbose=1 }&lt;/code&gt; to see how the specifications are being processed and what is actually being imported into modules.</source>
          <target state="translated">Вы можете сказать &lt;code&gt;BEGIN { $Exporter::Verbose=1 }&lt;/code&gt; чтобы увидеть, как обрабатываются спецификации и что фактически импортируется в модули.</target>
        </trans-unit>
        <trans-unit id="0ffa8d04bb2be838b7be17e141561b51ef27dbcb" translate="yes" xml:space="preserve">
          <source>You can search CPAN on &lt;a href=&quot;http://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt;.</source>
          <target state="translated">Вы можете выполнить поиск по CPAN на &lt;a href=&quot;http://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt; или &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="decda746759f350cc820cd1383e913824bf2e767" translate="yes" xml:space="preserve">
          <source>You can search for &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; related bug reports at &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt;. If needed submit any new bugs, problems, patches, etc. to: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&lt;/a&gt;</source>
          <target state="translated">Вы можете искать &lt;a href=&quot;threads&quot;&gt;нити&lt;/a&gt; связанные с сообщениями об ошибках в &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt; . При необходимости отправляйте любые новые ошибки, проблемы, исправления и т. Д. По &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&quot;&gt;адресу&lt;/a&gt; : http://rt.cpan.org/Public/Dist/Display.html?Name=threads</target>
        </trans-unit>
        <trans-unit id="802f6c1f9273b694e1c0cdbd6edb66de5f11d6b4" translate="yes" xml:space="preserve">
          <source>You can see from the above that the effect of &lt;code&gt;unicode_strings&lt;/code&gt; increased over several Perl releases. (And Perl's support for Unicode continues to improve; it's best to use the latest available release in order to get the most complete and accurate results possible.) Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically chosen if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher.</source>
          <target state="translated">Из вышеизложенного видно, что эффект &lt;code&gt;unicode_strings&lt;/code&gt; увеличился за несколько выпусков Perl. (А поддержка Unicode в Perl продолжает улучшаться; лучше использовать последнюю доступную версию, чтобы получить наиболее полные и точные результаты.) Обратите внимание, что &lt;code&gt;unicode_strings&lt;/code&gt; выбирается автоматически, если вы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; или выше.</target>
        </trans-unit>
        <trans-unit id="169f5a8ded36f882f89340ed4481186781ecd0dd" translate="yes" xml:space="preserve">
          <source>You can see this with the following:</source>
          <target state="translated">Вы можете увидеть это следующим образом:</target>
        </trans-unit>
        <trans-unit id="a30453af312489e18bd58825504c04b5c3c816c5" translate="yes" xml:space="preserve">
          <source>You can see whether your Perl was built with PerlIO by running &lt;code&gt;perl -V&lt;/code&gt; and looking for the &lt;code&gt;useperlio=&lt;/code&gt; line. If &lt;code&gt;useperlio&lt;/code&gt; is &lt;code&gt;define&lt;/code&gt; , you have PerlIO; otherwise you don't.</source>
          <target state="translated">Вы можете увидеть, был ли ваш Perl собран с PerlIO, запустив &lt;code&gt;perl -V&lt;/code&gt; и &lt;code&gt;useperlio=&lt;/code&gt; строки useperlio = . Если &lt;code&gt;useperlio&lt;/code&gt; это &lt;code&gt;define&lt;/code&gt; , у вас есть PerlIO; в противном случае вы этого не сделаете.</target>
        </trans-unit>
        <trans-unit id="1d64238a1676682fd78cc68f5aa21599974d313a" translate="yes" xml:space="preserve">
          <source>You can see which (or neither) threading flavour you have by running &lt;code&gt;perl -V&lt;/code&gt; and looking at the &lt;code&gt;Platform&lt;/code&gt; section. If you have &lt;code&gt;useithreads=define&lt;/code&gt; you have ithreads, if you have &lt;code&gt;use5005threads=define&lt;/code&gt; you have 5.005 threads. If you have neither, you don't have any thread support built in. If you have both, you are in trouble.</source>
          <target state="translated">Вы можете увидеть, какой (или ни один) вариант потоковой обработки у вас есть, запустив &lt;code&gt;perl -V&lt;/code&gt; и просмотрев раздел &amp;laquo; &lt;code&gt;Platform&lt;/code&gt; &amp;raquo;. Если у вас есть &lt;code&gt;useithreads=define&lt;/code&gt; ,у вас есть ithreads, если у вас &lt;code&gt;use5005threads=define&lt;/code&gt; ,у вас 5.005 потоков. Если у вас нет ни того, ни другого, у вас нет встроенной поддержки потоков. Если у вас есть оба, у вас проблемы.</target>
        </trans-unit>
        <trans-unit id="8dc1d6869249a32d7f829c0b3a5e051d9383488b" translate="yes" xml:space="preserve">
          <source>You can see why the arrows are important. Without them, we would have had to write &lt;code&gt;${$a[1]}[2]&lt;/code&gt; instead of &lt;code&gt;$a[1][2]&lt;/code&gt; . For three-dimensional arrays, they let us write &lt;code&gt;$x[2][3][5]&lt;/code&gt; instead of the unreadable &lt;code&gt;${${$x[2]}[3]}[5]&lt;/code&gt; .</source>
          <target state="translated">Вы можете понять, почему стрелки важны. Без них нам пришлось бы писать &lt;code&gt;${$a[1]}[2]&lt;/code&gt; вместо &lt;code&gt;$a[1][2]&lt;/code&gt; . Для трехмерных массивов они позволяют писать &lt;code&gt;$x[2][3][5]&lt;/code&gt; вместо нечитаемого &lt;code&gt;${${$x[2]}[3]}[5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b46ad3852d414e337d72bbed36bfa27c57b29adc" translate="yes" xml:space="preserve">
          <source>You can set and query each of these options interactively in the cpan shell with the &lt;code&gt;o conf&lt;/code&gt; or the &lt;code&gt;o conf init&lt;/code&gt; command as specified below.</source>
          <target state="translated">Вы можете установить и запросить каждый из этих параметров в интерактивном режиме в оболочке cpan с помощью команды &lt;code&gt;o conf&lt;/code&gt; или &lt;code&gt;o conf init&lt;/code&gt; , как указано ниже.</target>
        </trans-unit>
        <trans-unit id="16508b3f102bc9307eda4b040c0235215ac4aad7" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; elements to set the POSIX realtime signal handlers, use &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; on the elements, and use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; to find out how many POSIX realtime signals there are available &lt;code&gt;(SIGRTMAX - SIGRTMIN + 1&lt;/code&gt; , the &lt;code&gt;SIGRTMAX&lt;/code&gt; is a valid POSIX realtime signal).</source>
          <target state="translated">Вы можете установить элементы &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; чтобы установить обработчики сигналов реального времени POSIX, использовать &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; для элементов и использовать &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; чтобы узнать, сколько сигналов реального времени POSIX доступно &lt;code&gt;(SIGRTMAX - SIGRTMIN + 1&lt;/code&gt; , &lt;code&gt;SIGRTMAX&lt;/code&gt; является действительным сигналом реального времени POSIX).</target>
        </trans-unit>
        <trans-unit id="3f6da332e187deef2beadbe770ab6beeaee593c3" translate="yes" xml:space="preserve">
          <source>You can set the values of the &lt;code&gt;%SIG&lt;/code&gt; hash to be the functions you want to handle the signal. After perl catches the signal, it looks in &lt;code&gt;%SIG&lt;/code&gt; for a key with the same name as the signal, then calls the subroutine value for that key.</source>
          <target state="translated">Вы можете установить значения хэша &lt;code&gt;%SIG&lt;/code&gt; как функции, которые вы хотите обрабатывать сигнал. После того, как perl улавливает сигнал, он ищет в &lt;code&gt;%SIG&lt;/code&gt; ключ с тем же именем, что и сигнал, а затем вызывает значение подпрограммы для этого ключа.</target>
        </trans-unit>
        <trans-unit id="bee1469992dc1b9c8f0b603349904e7ab865deb8" translate="yes" xml:space="preserve">
          <source>You can set the variable &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; to 1, if you want to force File::Find to always stat directories. This was used for file systems that do not have an &lt;code&gt;nlink&lt;/code&gt; count matching the number of sub-directories. Examples are ISO-9660 (CD-ROM), AFS, HPFS (OS/2 file system), FAT (DOS file system) and a couple of others.</source>
          <target state="translated">Вы можете установить для переменной &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; значение 1, если вы хотите, чтобы File :: Find всегда отображал каталоги. Это использовалось для файловых систем, у которых нет числа &lt;code&gt;nlink&lt;/code&gt; , соответствующего количеству подкаталогов. Примеры: ISO-9660 (CD-ROM), AFS, HPFS (файловая система OS / 2), FAT (файловая система DOS) и несколько других.</target>
        </trans-unit>
        <trans-unit id="5472b025e4a5169aacbf87f4ca700aef907769b9" translate="yes" xml:space="preserve">
          <source>You can set these attributes on the parser object before you call &lt;code&gt;parse_file&lt;/code&gt; (or a similar method) on it:</source>
          <target state="translated">Вы можете установить эти атрибуты в объекте парсера до того, как &lt;code&gt;parse_file&lt;/code&gt; (или аналогичный метод):</target>
        </trans-unit>
        <trans-unit id="d11091c76638b6f543204cac0351812864021173" translate="yes" xml:space="preserve">
          <source>You can set these with cereg.exe, a (remote) registry editor or via the PerlIDE.</source>
          <target state="translated">Вы можете установить их с помощью cereg.exe,(удаленного)редактора реестра или через PerlIDE.</target>
        </trans-unit>
        <trans-unit id="a45d7d92f838159f25ad37c4eba92cfbf985fe7f" translate="yes" xml:space="preserve">
          <source>You can set this in your &lt;code&gt;CPAN.pm&lt;/code&gt; configuration so modules automatically install in your private library directory when you use the CPAN.pm shell:</source>
          <target state="translated">Вы можете установить это в конфигурации &lt;code&gt;CPAN.pm&lt;/code&gt; , чтобы модули автоматически устанавливались в каталог вашей частной библиотеки при использовании оболочки CPAN.pm:</target>
        </trans-unit>
        <trans-unit id="30390221c1f07dd9de6ff3b92b3e83f72d1fc24c" translate="yes" xml:space="preserve">
          <source>You can sometimes</source>
          <target state="translated">Иногда можно</target>
        </trans-unit>
        <trans-unit id="7db7fa33c434550059625aa8e8d2392ae86f8c71" translate="yes" xml:space="preserve">
          <source>You can specify a character class, by enclosing a list of characters in &lt;code&gt;[]&lt;/code&gt; , which will match any character from the list. If the first character after the &quot;[&quot; is &quot;^&quot;, the class matches any character not in the list. Within a list, the &quot;-&quot; character specifies a range, so that &lt;code&gt;a-z&lt;/code&gt; represents all characters between &quot;a&quot; and &quot;z&quot;, inclusive. If you want either &quot;-&quot; or &quot;]&quot; itself to be a member of a class, put it at the start of the list (possibly after a &quot;^&quot;), or escape it with a backslash. &quot;-&quot; is also taken literally when it is at the end of the list, just before the closing &quot;]&quot;. (The following all specify the same class of three characters: &lt;code&gt;[-az]&lt;/code&gt; , &lt;code&gt;[az-]&lt;/code&gt; , and &lt;code&gt;[a\-z]&lt;/code&gt; . All are different from &lt;code&gt;[a-z]&lt;/code&gt; , which specifies a class containing twenty-six characters, even on EBCDIC-based character sets.) Also, if you try to use the character classes &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; , or &lt;code&gt;\D&lt;/code&gt; as endpoints of a range, the &quot;-&quot; is understood literally.</source>
          <target state="translated">Вы можете указать класс символов, заключив список символов в &lt;code&gt;[]&lt;/code&gt; , который будет соответствовать любому символу из списка. Если первый символ после &amp;laquo;[&amp;raquo; - &amp;laquo;^&amp;raquo;, класс соответствует любому символу, отсутствующему в списке. В списке символ &amp;laquo;-&amp;raquo; указывает диапазон, так что &lt;code&gt;a-z&lt;/code&gt; представляет все символы от &amp;laquo;a&amp;raquo; до &amp;laquo;z&amp;raquo; включительно. Если вы хотите, чтобы сам &amp;laquo;-&amp;raquo; или &amp;laquo;]&amp;raquo; был членом класса, поместите его в начало списка (возможно, после &amp;laquo;^&amp;raquo;) или закройте его обратной косой чертой. &amp;laquo;-&amp;raquo; также понимается буквально, когда он находится в конце списка, непосредственно перед закрытием &amp;laquo;]&amp;raquo;. (Все следующие символы указывают один и тот же класс из трех символов: &lt;code&gt;[-az]&lt;/code&gt; , &lt;code&gt;[az-]&lt;/code&gt; ,и &lt;code&gt;[a\-z]&lt;/code&gt; . Все отличаются от &lt;code&gt;[a-z]&lt;/code&gt; , который определяет класс, содержащий двадцать шесть символов, даже для наборов символов на основе EBCDIC.) Кроме того, если вы попытаетесь использовать классы символов &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; или &lt;code&gt;\D&lt;/code&gt; качестве конечных точек диапазона, &quot;-&quot; понимается буквально.</target>
        </trans-unit>
        <trans-unit id="26fab1522afd0e2727fdb333919185675d766a45" translate="yes" xml:space="preserve">
          <source>You can specify a precision (for numeric conversions) or a maximum width (for string conversions) by specifying a &lt;code&gt;.&lt;/code&gt; followed by a number. For floating-point formats except &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt; , this specifies how many places right of the decimal point to show (the default being 6). For example:</source>
          <target state="translated">Вы можете указать точность (для числовых преобразований) или максимальную ширину (для преобразований строк), указав &lt;code&gt;.&lt;/code&gt; за которым следует номер. Для форматов с плавающей запятой, кроме &lt;code&gt;g&lt;/code&gt; и &lt;code&gt;G&lt;/code&gt; , это указывает, сколько разрядов справа от десятичной запятой отображать (по умолчанию 6). Например:</target>
        </trans-unit>
        <trans-unit id="d7117f36d5a9b63e0e2af83d4187313124e5bec9" translate="yes" xml:space="preserve">
          <source>You can specify a series of alternatives for a pattern using &quot;|&quot; to separate them, so that &lt;code&gt;fee|fie|foe&lt;/code&gt; will match any of &quot;fee&quot;, &quot;fie&quot;, or &quot;foe&quot; in the target string (as would &lt;code&gt;f(e|i|o)e&lt;/code&gt;). The first alternative includes everything from the last pattern delimiter (&quot;(&quot;, &quot;(?:&quot;, etc. or the beginning of the pattern) up to the first &quot;|&quot;, and the last alternative contains everything from the last &quot;|&quot; to the next closing pattern delimiter. That's why it's common practice to include alternatives in parentheses: to minimize confusion about where they start and end.</source>
          <target state="translated">Вы можете указать серию альтернатив для шаблона, используя &quot;|&quot; чтобы разделить их, так что &lt;code&gt;fee|fie|foe&lt;/code&gt; будет соответствовать любому из &quot;fee&quot;, &quot;fie&quot; или &quot;foe&quot; в целевой строке (как и &lt;code&gt;f(e|i|o)e&lt;/code&gt; ). Первая альтернатива включает все, начиная с последнего разделителя шаблона (&quot;(&quot;, &quot;(?:&quot; И т. Д. Или начало шаблона) до первого &quot;|&quot;), а последняя альтернатива содержит все, начиная с последнего &quot;|&quot; к следующему разделителю закрывающего шаблона.По этой причине в круглые скобки обычно включаются альтернативные варианты: чтобы не было путаницы в том, где они начинаются и заканчиваются.</target>
        </trans-unit>
        <trans-unit id="2c0acf2a3cfcada005163c068fb15aa1f1ca963b" translate="yes" xml:space="preserve">
          <source>You can specify several classes to try by joining them with commas or semicolons, as in &lt;code&gt;-MTk::SuperPod;Tk::Pod&lt;/code&gt; .</source>
          <target state="translated">Вы можете указать несколько классов, которые нужно попробовать, объединив их запятыми или точками с запятой, как в &lt;code&gt;-MTk::SuperPod;Tk::Pod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1590cfec6710042ae4b201c340cadca79997b8f8" translate="yes" xml:space="preserve">
          <source>You can stop using AutoLoader by simply</source>
          <target state="translated">Вы можете остановить использование автозагрузчика,просто</target>
        </trans-unit>
        <trans-unit id="1eb2363990bc861a2294e72254c60f889449d2d6" translate="yes" xml:space="preserve">
          <source>You can switch encodings on an already opened stream by using &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt;; see &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;.</source>
          <target state="translated">Вы можете переключать кодировки в уже открытом потоке с помощью &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; ; см. &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad4a77a592ef4f50bebb75551ecc777ec47349e4" translate="yes" xml:space="preserve">
          <source>You can switch locales as often as you wish at run time with the &lt;code&gt;POSIX::setlocale()&lt;/code&gt; function:</source>
          <target state="translated">Вы можете переключать языковые стандарты сколь угодно часто во время выполнения с помощью функции &lt;code&gt;POSIX::setlocale()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d35fb0ec3f2c6e87bec34d10cff3e1fa0aa39f99" translate="yes" xml:space="preserve">
          <source>You can test for these with Perl's &lt;b&gt;-S&lt;/b&gt; file test:</source>
          <target state="translated">Вы можете проверить это с помощью Perl &lt;b&gt;-S&lt;/b&gt; file test:</target>
        </trans-unit>
        <trans-unit id="33cabbc3e6b78a04641195c801755295c5b1770a" translate="yes" xml:space="preserve">
          <source>You can test out changing these variables temporarily, and if the new settings seem to help, put those settings into your shell startup files. Consult your local documentation for the exact details. For Bourne-like shells (&lt;b&gt;sh&lt;/b&gt;, &lt;b&gt;ksh&lt;/b&gt;, &lt;b&gt;bash&lt;/b&gt;, &lt;b&gt;zsh&lt;/b&gt;):</source>
          <target state="translated">Вы можете протестировать временное изменение этих переменных, и, если новые настройки покажутся вам полезными, поместите их в файлы запуска оболочки. Для получения более подробной информации обратитесь к местной документации. Для борновских оболочек ( &lt;b&gt;sh&lt;/b&gt; , &lt;b&gt;ksh&lt;/b&gt; , &lt;b&gt;bash&lt;/b&gt; , &lt;b&gt;zsh&lt;/b&gt; ):</target>
        </trans-unit>
        <trans-unit id="9aef87ade0298c8e39a512c631e34755f8d99a1d" translate="yes" xml:space="preserve">
          <source>You can test whether an SV is using copy-on-write with &lt;code&gt;SvIsCOW(sv)&lt;/code&gt; .</source>
          <target state="translated">Вы можете проверить, использует ли SV копирование при записи с помощью &lt;code&gt;SvIsCOW(sv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb7b765496cd5db87bb4e9bf905826761c1ac026" translate="yes" xml:space="preserve">
          <source>You can therefore save time by reusing this object as follows;</source>
          <target state="translated">Таким образом,вы можете сэкономить время,повторно используя этот объект следующим образом;</target>
        </trans-unit>
        <trans-unit id="9025bea13f42c28d6d27d405ef555cfdfb67e0c5" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;typeof&lt;/code&gt; operator.</source>
          <target state="translated">Вы можете думать о &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; как о &lt;code&gt;typeof&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="cf104869dd9c15f6376b764dcf7d585d45ca8039" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;typeof&lt;/code&gt; operator.</source>
          <target state="translated">Вы можете думать о &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; как о &lt;code&gt;typeof&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="728882433c08d9f5799a415b920db42fb16d9b1c" translate="yes" xml:space="preserve">
          <source>You can think of a module as the fundamental unit of reusable Perl code; see &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details. Whenever anyone creates a chunk of Perl code that they think will be useful to the world, they register as a Perl developer at &lt;a href=&quot;http://www.cpan.org/modules/04pause.html&quot;&gt;http://www.cpan.org/modules/04pause.html&lt;/a&gt; so that they can then upload their code to the CPAN. The CPAN is the Comprehensive Perl Archive Network and can be accessed at &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt; , and searched at &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</source>
          <target state="translated">Вы можете думать о модуле как о фундаментальной единице многоразового кода Perl; подробности смотрите в &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; . Всякий раз, когда кто-то создает кусок кода Perl, который, по их мнению, будет полезен миру, он регистрируется как разработчик Perl на &lt;a href=&quot;http://www.cpan.org/modules/04pause.html&quot;&gt;http://www.cpan.org/modules/04pause.html,&lt;/a&gt; чтобы затем загрузить свой код в CPAN. CPAN - это комплексная сеть архивов Perl, доступ к которой можно получить по адресу &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt; , а также выполнить поиск по адресу &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="969f96d8ec4df0c71d177e6b1625408e665ae979" translate="yes" xml:space="preserve">
          <source>You can tie the cache tables to any sort of tied hash that you want to, as long as it supports &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , and &lt;code&gt;EXISTS&lt;/code&gt; . For example,</source>
          <target state="translated">Вы можете привязать кеш-таблицы к любому связанному хешу, если хотите, если он поддерживает &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; и &lt;code&gt;EXISTS&lt;/code&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="5dff5882ff33a85a3a95fb0e709084606bfc8485" translate="yes" xml:space="preserve">
          <source>You can try using encryption via source filters (Filter::* from CPAN, or Filter::Util::Call and Filter::Simple since Perl 5.8). But crackers might be able to decrypt it. You can try using the byte code compiler and interpreter described below, but crackers might be able to de-compile it. You can try using the native-code compiler described below, but crackers might be able to disassemble it. These pose varying degrees of difficulty to people wanting to get at your code, but none can definitively conceal it (this is true of every language, not just Perl).</source>
          <target state="translated">Вы можете попробовать использовать шифрование через исходные фильтры (Фильтр::*из CPAN,или Фильтр::Util::Call and Filter::Simple since Perl 5.8).Но взломщики смогут расшифровать его.Вы можете попробовать использовать компилятор и интерпретатор байтового кода,описанные ниже,но взломщики смогут его декомпилировать.Можно попробовать использовать компилятор исходного кода,описанный ниже,но кракеры могут разобрать его.Людям,желающим разобраться в вашем коде,это доставляет разную сложность,но никто не может окончательно его скрыть (это справедливо для каждого языка,а не только для Perl).</target>
        </trans-unit>
        <trans-unit id="bd149095683892a2c8050e33a089a96e4ba58ba3" translate="yes" xml:space="preserve">
          <source>You can try using encryption via source filters (Starting from Perl 5.8 the Filter::Simple and Filter::Util::Call modules are included in the standard distribution), but any decent programmer will be able to decrypt it. You can try using the byte code compiler and interpreter described later in &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;, but the curious might still be able to de-compile it. You can try using the native-code compiler described later, but crackers might be able to disassemble it. These pose varying degrees of difficulty to people wanting to get at your code, but none can definitively conceal it (true of every language, not just Perl).</source>
          <target state="translated">Вы можете попробовать использовать шифрование через исходные фильтры (начиная с Perl 5.8 модули Filter :: Simple и Filter :: Util :: Call включены в стандартный дистрибутив), но любой порядочный программист сможет его расшифровать. Вы можете попробовать использовать компилятор и интерпретатор байтового кода, описанные далее в &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt; , но любопытные могут все же декомпилировать его. Вы можете попробовать использовать компилятор собственного кода, описанный ниже, но взломщики могут его разобрать. Они создают разную степень сложности для людей, желающих разобраться в вашем коде, но никто не может окончательно скрыть это (верно для любого языка, не только Perl).</target>
        </trans-unit>
        <trans-unit id="2b09b812e89e288611a3620bc913b5b1b0fe4650" translate="yes" xml:space="preserve">
          <source>You can turn off that eagerness-to-help by declaring an attribute handler with the keyword &lt;code&gt;RAWDATA&lt;/code&gt; . For example:</source>
          <target state="translated">Вы можете отключить это желание помочь, объявив обработчик атрибута с ключевым словом &lt;code&gt;RAWDATA&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="b5701868a13c5d43cf7a782ca599e3f4284f18bb" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#(%3f%23text)&quot;&gt;(?#text)&lt;/a&gt; to create a comment that ends earlier than the end of the current line, but &lt;code&gt;text&lt;/code&gt; also can't contain the closing delimiter unless escaped with a backslash.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#(%3f%23text)&quot;&gt;(? #Text)&lt;/a&gt; для создания комментария, который заканчивается раньше, чем конец текущей строки, но &lt;code&gt;text&lt;/code&gt; также не может содержать закрывающий разделитель, если он не экранирован обратной косой чертой.</target>
        </trans-unit>
        <trans-unit id="6d944fb3215d0dd16d4105b924d26c8f26a00944" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#prop_values()&quot;&gt;prop_values()&lt;/a&gt; to find out if a given property is one which has a restricted set of values, and if so, what those values are. But usually each value actually has several synonyms. For example, in Unicode binary properties,</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#prop_values()&quot;&gt;prop_values ​​(),&lt;/a&gt; чтобы узнать, является ли данное свойство тем, которое имеет ограниченный набор значений, и если да, то каковы эти значения. Но обычно каждое значение имеет несколько синонимов. Например, в двоичных свойствах Unicode</target>
        </trans-unit>
        <trans-unit id="b53d0563bc5da053955b9d3b7d437fbd188f8795" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number::Format&lt;/a&gt; to separate places in a number. It handles locale information for those of you who want to insert full stops instead (or anything else that they want to use, really).</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number :: Format&lt;/a&gt; для разделения позиций в числах. Он обрабатывает информацию о локали для тех из вас, кто хочет вместо этого вставить точки (или что-то еще, что они действительно хотят использовать).</target>
        </trans-unit>
        <trans-unit id="49f5dd665c5e9d2b71ecb4caa05c28940c8fc3d9" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://search.cpan.org/perldoc/URI::Find&quot;&gt;URI::Find&lt;/a&gt; to extract URLs from an arbitrary text document.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;http://search.cpan.org/perldoc/URI::Find&quot;&gt;URI :: Find&lt;/a&gt; для извлечения URL-адресов из произвольного текстового документа.</target>
        </trans-unit>
        <trans-unit id="7fe2956ea1b7c9e1e517ba013b7204dc28c702c8" translate="yes" xml:space="preserve">
          <source>You can use &lt;b&gt;-C0&lt;/b&gt; (or &lt;code&gt;&quot;0&quot;&lt;/code&gt; for &lt;code&gt;PERL_UNICODE&lt;/code&gt; ) to explicitly disable all the above Unicode features.</source>
          <target state="translated">Вы можете использовать &lt;b&gt;-C0&lt;/b&gt; (или &lt;code&gt;&quot;0&quot;&lt;/code&gt; для &lt;code&gt;PERL_UNICODE&lt;/code&gt; ), чтобы явно отключить все вышеперечисленные функции Unicode.</target>
        </trans-unit>
        <trans-unit id="8820cb36e9b0a2ef9812096c3ae47e4337e70f22" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;-w optionname&lt;/code&gt; (without a value) as shorthand for &lt;code&gt;-w optionname:&lt;i&gt;TRUE&lt;/i&gt;&lt;/code&gt;. This is presumably useful in cases of on/off features like: &lt;code&gt;-w page_numbering&lt;/code&gt; .</source>
          <target state="translated">Вы можете использовать &lt;code&gt;-w optionname&lt;/code&gt; (без значения) как сокращение для &lt;code&gt;-w optionname:&lt;i&gt;TRUE&lt;/i&gt;&lt;/code&gt; . Это предположительно полезно в случаях включения / выключения таких функций, как: &lt;code&gt;-w page_numbering&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34722383d4a6c958172dfe61f02074274ede7a9" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without parentheses to locate the end of each input file, in case you want to append to each file, or reset line numbering (see example in &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;).</source>
          <target state="translated">Вы можете использовать &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; без круглых скобок, чтобы найти конец каждого входного файла, если вы хотите добавить к каждому файлу, или сбросить нумерацию строк (см. Пример в &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7509178f0cc142ffa6970d993aa78a311665535a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; if the columns are separated by whitespace or some other delimiter, as long as whitespace or the delimiter cannot appear as part of the data.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; если столбцы разделены пробелом или каким-либо другим разделителем, если пробел или разделитель не могут отображаться как часть данных.</target>
        </trans-unit>
        <trans-unit id="207bd81996c41f563d70786505a61f566bf7c9d1" translate="yes" xml:space="preserve">
          <source>You can use Andreas Koenig's CPAN module ( &lt;a href=&quot;http://www.cpan.org/modules/by-module/CPAN&quot;&gt;http://www.cpan.org/modules/by-module/CPAN&lt;/a&gt; ) to automate the following steps, from DECOMPRESS through INSTALL.</source>
          <target state="translated">Вы можете использовать модуль CPAN Андреаса Кенига ( &lt;a href=&quot;http://www.cpan.org/modules/by-module/CPAN&quot;&gt;http://www.cpan.org/modules/by-module/CPAN&lt;/a&gt; ) для автоматизации следующих шагов, от DECOMPRESS до INSTALL.</target>
        </trans-unit>
        <trans-unit id="1a4fa2e9a279c718478efb15dbd58f3963c395b2" translate="yes" xml:space="preserve">
          <source>You can use Perl's somewhat exotic &lt;code&gt;..&lt;/code&gt; operator (documented in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;):</source>
          <target state="translated">Вы можете использовать несколько экзотический оператор Perl &lt;code&gt;..&lt;/code&gt; (задокументированный в &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="0352c7c82515615be31fde318d8a078c0a2c1a97" translate="yes" xml:space="preserve">
          <source>You can use a leading underscore to indicate that a variable or function should not be used outside the package that defined it.</source>
          <target state="translated">Вы можете использовать ведущее подчёркивание,чтобы указать,что переменная или функция не должна использоваться вне пакета,который её определил.</target>
        </trans-unit>
        <trans-unit id="388231cbd33477282c1e5dc7ff7aa725ad26b114" translate="yes" xml:space="preserve">
          <source>You can use a string as if it were a reference. If you use the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt; as an array reference, it's taken to be a reference to the array &lt;code&gt;@foo&lt;/code&gt; . This is called a</source>
          <target state="translated">Вы можете использовать строку как ссылку. Если вы используете строку &lt;code&gt;&quot;foo&quot;&lt;/code&gt; как ссылку на массив, она будет считаться ссылкой на массив &lt;code&gt;@foo&lt;/code&gt; . Это называется</target>
        </trans-unit>
        <trans-unit id="adc3bc3485dafe6de0835e8cb890731728d4f233" translate="yes" xml:space="preserve">
          <source>You can use an &quot;=&quot; instead of the &quot;:&quot;, as in: &lt;code&gt;-w textsize=15&lt;/code&gt; . This might be more (or less) convenient, depending on what shell you use.</source>
          <target state="translated">Вы можете использовать &amp;laquo;=&amp;raquo; вместо &amp;laquo;:&amp;raquo;, например: &lt;code&gt;-w textsize=15&lt;/code&gt; . Это может быть более (или менее) удобно, в зависимости от того, какую оболочку вы используете.</target>
        </trans-unit>
        <trans-unit id="659b448e1309e418ec405468f01e562189ac5581" translate="yes" xml:space="preserve">
          <source>You can use an alternative library to drive Math::BigInt. See the section &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;MATH LIBRARY&lt;/a&gt; for more information.</source>
          <target state="translated">Вы можете использовать альтернативную библиотеку для управления Math :: BigInt. См. Раздел &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;МАТЕМАТИЧЕСКАЯ БИБЛИОТЕКА&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f7c7a81f2a96d58e5477ffb42832551e4a65a1ae" translate="yes" xml:space="preserve">
          <source>You can use and redistribute this document under the same terms as Perl itself.</source>
          <target state="translated">Вы можете использовать и распространять этот документ на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="02346143e059d2c6966f5b1da988acae6f664ce7" translate="yes" xml:space="preserve">
          <source>You can use another collation element table if desired.</source>
          <target state="translated">При желании можно использовать другую таблицу элементов сверки.</target>
        </trans-unit>
        <trans-unit id="80ffd7e86ab2f265c3b1b5af5301c88022dfacbd" translate="yes" xml:space="preserve">
          <source>You can use any combination of the methods from none to all four.</source>
          <target state="translated">Вы можете использовать любую комбинацию методов от нуля до всех четырех.</target>
        </trans-unit>
        <trans-unit id="727cc3b9105721ca57e170521deb86b9cfbaaa16" translate="yes" xml:space="preserve">
          <source>You can use any combination of the methods, from none, to all four.</source>
          <target state="translated">Вы можете использовать любую комбинацию методов,от ни одного до всех четырех.</target>
        </trans-unit>
        <trans-unit id="6cf084acc213926a976c0b6e7b2d7ff58c8a1c98" translate="yes" xml:space="preserve">
          <source>You can use formatting codes in ordinary paragraphs, for &lt;b&gt;bold&lt;/b&gt;,</source>
          <target state="translated">Вы можете использовать коды форматирования в обычных абзацах, &lt;b&gt;жирным шрифтом&lt;/b&gt; ,</target>
        </trans-unit>
        <trans-unit id="7b0f4d35c03dc40ee00f05e56f139894c4c251ca" translate="yes" xml:space="preserve">
          <source>You can use it as follows:</source>
          <target state="translated">Вы можете использовать его следующим образом:</target>
        </trans-unit>
        <trans-unit id="cfbc7862683635b53050e53b7defa0eddc13b749" translate="yes" xml:space="preserve">
          <source>You can use more than one source filter on a single file. Similarly, you can reuse the same filter in as many files as you like.</source>
          <target state="translated">Вы можете использовать более одного фильтра источника в одном файле.Аналогичным образом,вы можете повторно использовать один и тот же фильтр в любом количестве файлов.</target>
        </trans-unit>
        <trans-unit id="cb2c65d2dbc0740833a918a76d1bf6977975706a" translate="yes" xml:space="preserve">
          <source>You can use parentheses for functions' arguments or omit them according to your personal taste. They are only required occasionally to clarify issues of precedence.</source>
          <target state="translated">Вы можете использовать круглые скобки для аргументов функций или опускать их в соответствии с вашими личными предпочтениями.Они требуются лишь изредка,чтобы прояснить вопросы первостепенной важности.</target>
        </trans-unit>
        <trans-unit id="78045ec633e87e0c82678bcb8abea9b50b38e139" translate="yes" xml:space="preserve">
          <source>You can use that same structure to count the entries any way that you like. If you want the count of the keys with vowels in them, you just test for that instead:</source>
          <target state="translated">Вы можете использовать ту же самую структуру для подсчета записей любым удобным для вас способом.Если вы хотите посчитать ключи с гласными в них,вы просто проверяете на это:</target>
        </trans-unit>
        <trans-unit id="264d904732b18badb8f8af0ee614fe938cb62fd3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/File::Random&quot;&gt;File::Random&lt;/a&gt; module which provides a function for that algorithm:</source>
          <target state="translated">Вы можете использовать модуль &lt;a href=&quot;http://search.cpan.org/perldoc/File::Random&quot;&gt;File :: Random,&lt;/a&gt; который предоставляет функцию для этого алгоритма:</target>
        </trans-unit>
        <trans-unit id="12dc43addaceb3325735b42235a5db7b043fe8e8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ANSIScreen&quot;&gt;Term::ANSIScreen&lt;/a&gt; module to get the special sequence. Import the &lt;code&gt;cls&lt;/code&gt; function (or the &lt;code&gt;:screen&lt;/code&gt; tag):</source>
          <target state="translated">Вы можете использовать модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ANSIScreen&quot;&gt;Term :: ANSIScreen&lt;/a&gt; для получения специальной последовательности. Импортируйте функцию &lt;code&gt;cls&lt;/code&gt; (или тег &lt;code&gt;:screen&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="5e45dc25f4fd438a13c8ce07a9424e43bd367039" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/Time::JulianDay&quot;&gt;Time::JulianDay&lt;/a&gt; module available on CPAN. Ensure that you really want to find a Julian day, though, as many people have different ideas about Julian days (see &lt;a href=&quot;http://www.hermetic.ch/cal_stud/jdn.htm&quot;&gt;http://www.hermetic.ch/cal_stud/jdn.htm&lt;/a&gt; for instance):</source>
          <target state="translated">Вы можете использовать модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Time::JulianDay&quot;&gt;Time :: JulianDay,&lt;/a&gt; доступный на CPAN. Убедитесь, что вы действительно хотите найти юлианский день, поскольку многие люди имеют разные представления о юлианских днях (например, см. &lt;a href=&quot;http://www.hermetic.ch/cal_stud/jdn.htm&quot;&gt;Http://www.hermetic.ch/cal_stud/jdn.htm&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="ba1788ef1bedfa0514aebf9080742800f7823493" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;time/piece&quot;&gt;Time::Piece&lt;/a&gt; module, part of the Standard Library, which can convert a date/time to a Julian Day:</source>
          <target state="translated">Вы можете использовать модуль &lt;a href=&quot;time/piece&quot;&gt;Time :: Piece&lt;/a&gt; , входящий в стандартную библиотеку, который может преобразовывать дату / время в юлианский день:</target>
        </trans-unit>
        <trans-unit id="19bff3f43fe0160ae5712a54b49b7225e08cf437" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; variable to detect if you are currently in the global destruction phase:</source>
          <target state="translated">Вы можете использовать переменную &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; чтобы определить, находитесь ли вы в настоящее время в фазе глобального уничтожения:</target>
        </trans-unit>
        <trans-unit id="c3b01f73c25a67d7de0988508e3d6a08d549191f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; keyword to fall through from one case to the next:</source>
          <target state="translated">Вы можете использовать ключевое слово &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; , чтобы переходить от одного случая к другому:</target>
        </trans-unit>
        <trans-unit id="0512ec103381f142d5cd53ad55c41fe8a57f36b8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $array[$idx]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $hash{key}&lt;/code&gt; constructs to delete a composite type entry for the current block and restore it when it ends. They return the array/hash value before the localization, which means that they are respectively equivalent to</source>
          <target state="translated">Вы можете использовать конструкции &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $array[$idx]&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $hash{key}&lt;/code&gt; чтобы удалить запись составного типа для текущего блока и восстановить ее, когда она закончится. Они возвращают значение массива / хэша до локализации, что означает, что они соответственно эквивалентны</target>
        </trans-unit>
        <trans-unit id="e75c67446fa3d94c780e921da6acd4affb168a6f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; built-in function in scalar context to find out have many entries you have in a hash:</source>
          <target state="translated">Вы можете использовать встроенную функцию &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; в скалярном контексте, чтобы узнать, есть ли у вас много записей в хэше:</target>
        </trans-unit>
        <trans-unit id="32a43fdc7d4ed02e813e0075b65927b5536f01d4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; functions to reset &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;. To simply reset the iterator used by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; without doing anything else, use one of them in void context:</source>
          <target state="translated">Вы можете использовать функции &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; для сброса &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; . Чтобы просто сбросить итератор, используемый &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; не делая ничего другого, используйте один из них в пустом контексте:</target>
        </trans-unit>
        <trans-unit id="91d95a3ba11b677c44eabfc4c39139686174c03a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;END&lt;/code&gt; block to simulate &lt;code&gt;atexit()&lt;/code&gt; . Each package's &lt;code&gt;END&lt;/code&gt; block is called when the program or thread ends. See the &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; manpage for more details about &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Вы можете использовать блок &lt;code&gt;END&lt;/code&gt; для имитации &lt;code&gt;atexit()&lt;/code&gt; . Блок &lt;code&gt;END&lt;/code&gt; каждого пакета вызывается при завершении программы или потока. См. &lt;a href=&quot;perlmod&quot;&gt;Man-страницу perlmod&lt;/a&gt; для получения более подробной информации о блоках &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23320d34367d7c8e19c4f3b2648a39107aaceafc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Text::Soundex&lt;/code&gt; module. If you want to do fuzzy or close matching, you might also try the &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String::Approx&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Metaphone&quot;&gt;Text::Metaphone&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Text::DoubleMetaphone&quot;&gt;Text::DoubleMetaphone&lt;/a&gt; modules.</source>
          <target state="translated">Вы можете использовать модуль &lt;code&gt;Text::Soundex&lt;/code&gt; . Если вы хотите выполнить нечеткое или близкое сопоставление, вы также можете попробовать модули &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String :: Approx&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Metaphone&quot;&gt;Text :: Metaphone&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/Text::DoubleMetaphone&quot;&gt;Text :: DoubleMetaphone&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="488d88c32abab4c7103bc8a9f7d995aca32467c4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;UNIVERSAL&lt;/code&gt; class (see &lt;a href=&quot;universal&quot;&gt;UNIVERSAL&lt;/a&gt;). However, please be very careful to consider the consequences of doing this: adding methods to every object is very likely to have unintended consequences. If possible, it would be better to have all your object inherit from some common base class, or to use an object system like Moose that supports roles.</source>
          <target state="translated">Вы можете использовать класс &lt;code&gt;UNIVERSAL&lt;/code&gt; (см. &lt;a href=&quot;universal&quot;&gt;UNIVERSAL&lt;/a&gt; ). Однако будьте очень осторожны, чтобы учитывать последствия этого: добавление методов к каждому объекту, скорее всего, приведет к непредвиденным последствиям. Если возможно, было бы лучше, если бы весь ваш объект унаследовал от некоторого общего базового класса или использовать систему объектов, такую ​​как Moose, которая поддерживает роли.</target>
        </trans-unit>
        <trans-unit id="9e82c1f5d6a6827f8e16779cc47df9c04d7d8adc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;\[]&lt;/code&gt; backslash group notation to specify more than one allowed argument type. For example:</source>
          <target state="translated">Вы можете использовать обозначение группы обратной косой черты &lt;code&gt;\[]&lt;/code&gt; чтобы указать более одного разрешенного типа аргумента. Например:</target>
        </trans-unit>
        <trans-unit id="29a5b3337e458ba95bc1ff4b8a89d182c9528c72" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;break&lt;/code&gt; keyword to break out of the enclosing &lt;code&gt;given&lt;/code&gt; block. Every &lt;code&gt;when&lt;/code&gt; block is implicitly ended with a &lt;code&gt;break&lt;/code&gt; .</source>
          <target state="translated">Вы можете использовать &lt;code&gt;break&lt;/code&gt; ключевое слово , чтобы вырваться из вмещающего &lt;code&gt;given&lt;/code&gt; блока. Каждый раз, &lt;code&gt;when&lt;/code&gt; блок неявно заканчивается &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4e6268ce8a22314d30cc236ac406a7320d8f9ec" translate="yes" xml:space="preserve">
          <source>You can use the Configure script in non-interactive mode too. When I built my</source>
          <target state="translated">Скрипт Configure можно использовать и в неинтерактивном режиме.Когда я создавал свой</target>
        </trans-unit>
        <trans-unit id="a88ac92f15e86bfef2bc330f6e37cbdfaa5d2949" translate="yes" xml:space="preserve">
          <source>You can use the POSIX character class syntax &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; documented in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать синтаксис класса символов POSIX &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; , задокументированный в &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e278d58c9ab507fbb7f9453e431896c65ad5fd6f" translate="yes" xml:space="preserve">
          <source>You can use the SDK by exporting some additions to Perl's 'ccflags' and '..flags' config variables:</source>
          <target state="translated">Вы можете использовать SDK,экспортируя некоторые дополнения в переменные конфигурации Perl 'ccflags' и '...flags':</target>
        </trans-unit>
        <trans-unit id="dcba1d434e18427e8484e54d9e14e5566e79c6d1" translate="yes" xml:space="preserve">
          <source>You can use the builtin &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; function for most filehandles, but it won't (easily) work on a terminal device. For STDIN, either use the Term::ReadKey module from CPAN or use the sample code in &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать встроенную функцию &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; для большинства дескрипторов файлов, но она не будет работать (легко) на терминальном устройстве. Для STDIN используйте либо модуль Term :: ReadKey из CPAN, либо пример кода в &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad23301638fa59a074f7b5a830adc451b7882aec" translate="yes" xml:space="preserve">
          <source>You can use the debugger's &lt;code&gt;x&lt;/code&gt; command to dump out complex data structures. For example, given the assignment to $AoA above, here's the debugger output:</source>
          <target state="translated">Вы можете использовать команду &lt;code&gt;x&lt;/code&gt; отладчика для вывода сложных структур данных. Например, учитывая назначение $ AoA выше, вот вывод отладчика:</target>
        </trans-unit>
        <trans-unit id="c95e7176a4cdb8eb19d859ce523240b91e0d516f" translate="yes" xml:space="preserve">
          <source>You can use the following types of values for allow:</source>
          <target state="translated">Для разрешения можно использовать следующие типы значений:</target>
        </trans-unit>
        <trans-unit id="3ce0a691bebd0b371247224bb7f78a55fdff48f0" translate="yes" xml:space="preserve">
          <source>You can use the four-argument form of sysread to continually add to a buffer. After you add to the buffer, you check if you have a complete line (using your regular expression).</source>
          <target state="translated">Вы можете использовать четырехпараметрическую форму sysread для постоянного добавления в буфер.После добавления в буфер,вы проверяете,есть ли у вас полная строка (используя ваше регулярное выражение).</target>
        </trans-unit>
        <trans-unit id="da343e9c661b7d9b54a6aef1473ed8a755544823" translate="yes" xml:space="preserve">
          <source>You can use the shareware Winzip ( &lt;a href=&quot;http://www.winzip.com&quot;&gt;http://www.winzip.com&lt;/a&gt; ) to decompress and unpack modules.</source>
          <target state="translated">Вы можете использовать условно-бесплатную программу Winzip ( &lt;a href=&quot;http://www.winzip.com&quot;&gt;http://www.winzip.com&lt;/a&gt; ) для распаковки и распаковки модулей.</target>
        </trans-unit>
        <trans-unit id="29131242da6a21b6f2efd67a20aaa973ec754794" translate="yes" xml:space="preserve">
          <source>You can use the substitution operator to find pairs of characters (or runs of characters) and replace them with a single instance. In this substitution, we find a character in &lt;code&gt;(.)&lt;/code&gt;. The memory parentheses store the matched character in the back-reference &lt;code&gt;\g1&lt;/code&gt; and we use that to require that the same thing immediately follow it. We replace that part of the string with the character in &lt;code&gt;$1&lt;/code&gt; .</source>
          <target state="translated">Вы можете использовать оператор подстановки, чтобы найти пары символов (или серии символов) и заменить их одним экземпляром. В этой замене мы находим символ в &lt;code&gt;(.)&lt;/code&gt; . Скобки памяти хранят совпавший символ в обратной ссылке &lt;code&gt;\g1&lt;/code&gt; и мы используем это, чтобы требовать, чтобы за ним сразу следовало то же самое. Мы заменяем эту часть строки символом из &lt;code&gt;$1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b56ec6ea26f22e6bec1d13c6dc597e46c1853d2d" translate="yes" xml:space="preserve">
          <source>You can use the substr() function as an lvalue, in which case EXPR must itself be an lvalue. If you assign something shorter than LENGTH, the string will shrink, and if you assign something longer than LENGTH, the string will grow to accommodate it. To keep the string the same length, you may need to pad or chop your value using &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать функцию substr () как lvalue, и в этом случае EXPR сам должен быть lvalue. Если вы назначите что-то короче, чем LENGTH, строка будет сокращаться, а если вы назначите что-то длиннее, чем LENGTH, строка будет расти, чтобы вместить это. Чтобы строка оставалась одинаковой длины, вам может потребоваться дополнить или нарезать ваше значение с помощью &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5696279d1bd6b651a532c13cf176bc61670cde27" translate="yes" xml:space="preserve">
          <source>You can use the substr() function as an lvalue, in which case EXPR must itself be an lvalue. If you assign something shorter than LENGTH, the string will shrink, and if you assign something longer than LENGTH, the string will grow to accommodate it. To keep the string the same length, you may need to pad or chop your value using &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать функцию substr () как lvalue, и в этом случае EXPR сам должен быть lvalue. Если вы назначите что-то короче, чем LENGTH, строка будет сокращаться, а если вы назначите что-то длиннее, чем LENGTH, строка будет расти, чтобы вместить это. Чтобы строка оставалась одинаковой длины, вам может потребоваться дополнить или нарезать ваше значение с помощью &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfeed36c7e84bfafbf0ea57f25867379b77f770c" translate="yes" xml:space="preserve">
          <source>You can use the tainted() function of the Scalar::Util module, available from CPAN (or included with Perl since release 5.8.0). See also &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Laundering and Detecting Tainted Data in perlsec&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать функцию tainted () модуля Scalar :: Util, доступную из CPAN (или включенную в Perl начиная с версии 5.8.0). См. Также &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Отмывание и обнаружение испорченных данных в perlsec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09d2af0acba58841da7d114d861e093a90573f8a" translate="yes" xml:space="preserve">
          <source>You can use these macros if you call code that may croak, but you need to do some cleanup before giving control back to Perl. For example:</source>
          <target state="translated">Вы можете использовать эти макросы,если вы вызываете код,который может перекрыть,но вам нужно сделать некоторую очистку,прежде чем возвращать контроль обратно Perl.Например:</target>
        </trans-unit>
        <trans-unit id="8d60246dfc629fa2c767c2383b114af7d8fad4bc" translate="yes" xml:space="preserve">
          <source>You can use this as a shortcut to determine whether &lt;code&gt;Archive::Tar&lt;/code&gt; will do what you think before passing compressed archives to its &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Вы можете использовать это как ярлык, чтобы определить, будет ли &lt;code&gt;Archive::Tar&lt;/code&gt; делать то, что вы думаете, перед передачей сжатых архивов его методу &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2583bc76f12f41a833e44f457c707f446ecc90f" translate="yes" xml:space="preserve">
          <source>You can use this class as the base class for a Pod formatter/processor.</source>
          <target state="translated">Вы можете использовать этот класс в качестве базового для формата Pod/процессора.</target>
        </trans-unit>
        <trans-unit id="ddc269b809151a32259fd4bfb2f0eaf592a60142" translate="yes" xml:space="preserve">
          <source>You can use this subroutine to get and set the traversal mask for a specific hash. Setting the mask ensures that a given hash will produce the same key order. &lt;b&gt;Note&lt;/b&gt; that this does &lt;b&gt;not&lt;/b&gt; guarantee that &lt;b&gt;two&lt;/b&gt; hashes will produce the same key order for the same hash seed and traversal mask, items that collide into one bucket may have different orders regardless of this setting.</source>
          <target state="translated">Вы можете использовать эту подпрограмму, чтобы получить и установить маску обхода для определенного хэша. Установка маски гарантирует, что данный хеш будет производить тот же порядок ключей. &lt;b&gt;Обратите внимание,&lt;/b&gt; что это &lt;b&gt;не&lt;/b&gt; гарантирует, что &lt;b&gt;два&lt;/b&gt; хэша создадут один и тот же порядок ключей для одного и того же начального числа хэша и маски обхода, элементы, которые входят в одну корзину, могут иметь разные порядки независимо от этого параметра.</target>
        </trans-unit>
        <trans-unit id="4e57a6a3e1ac0e576a34f1deb9cbe35e8438d88f" translate="yes" xml:space="preserve">
          <source>You can use this to find out whether two handles refer to the same underlying descriptor:</source>
          <target state="translated">Вы можете использовать это,чтобы узнать,относятся ли два дескриптора к одному и тому же базовому дескриптору:</target>
        </trans-unit>
        <trans-unit id="e2f6df83e5ac1b378170dbde8b31e8b10cee41f6" translate="yes" xml:space="preserve">
          <source>You can use this to print out all the variables in a package, for instance. The standard but antiquated</source>
          <target state="translated">Вы можете использовать это,например,для распечатки всех переменных в пакете.Стандартный,но устаревший</target>
        </trans-unit>
        <trans-unit id="b6fe2602c37d36cd939b3f2966e9882c1457b54a" translate="yes" xml:space="preserve">
          <source>You can use whitespace and the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator to lay them out more nicely:</source>
          <target state="translated">Вы можете использовать пробелы и оператор &lt;code&gt;=&amp;gt;&lt;/code&gt; , чтобы расположить их более красиво:</target>
        </trans-unit>
        <trans-unit id="2a2d95bc6981ab5724b117c21adf2c42ff1324ac" translate="yes" xml:space="preserve">
          <source>You can watch Perl's regular expression engine at work to verify for yourself if Perl is recompiling a regular expression. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re
'debug'&lt;/code&gt; pragma (comes with Perl 5.005 and later) shows the details. With Perls before 5.6, you should see &lt;code&gt;re&lt;/code&gt; reporting that its compiling the regular expression on each iteration. With Perl 5.6 or later, you should only see &lt;code&gt;re&lt;/code&gt; report that for the first iteration.</source>
          <target state="translated">Вы можете понаблюдать за работой механизма регулярных выражений Perl, чтобы убедиться, что Perl перекомпилирует регулярное выражение. Прагма &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; (поставляется с Perl 5.005 и более поздними версиями) показывает подробности. В Perls до 5.6 вы должны увидеть &lt;code&gt;re&lt;/code&gt; сообщение о компиляции регулярного выражения на каждой итерации. В Perl 5.6 или новее вы должны видеть &lt;code&gt;re&lt;/code&gt; отчет только для первой итерации.</target>
        </trans-unit>
        <trans-unit id="b95a7534126966a35fdb290a82cc3eb90110d990" translate="yes" xml:space="preserve">
          <source>You can work around the first case by using the fully qualified name (&lt;code&gt;$Package::FOO&lt;/code&gt; ) where you need a local value, or by overriding it by saying &lt;code&gt;*FOO = *Package::FOO&lt;/code&gt; in your script.</source>
          <target state="translated">Вы можете обойти первый случай, используя полное имя ( &lt;code&gt;$Package::FOO&lt;/code&gt; ), где вам нужно локальное значение, или переопределив его, сказав &lt;code&gt;*FOO = *Package::FOO&lt;/code&gt; в вашем скрипте.</target>
        </trans-unit>
        <trans-unit id="74896a00006c71879750ed85d659cbff45ee1a05" translate="yes" xml:space="preserve">
          <source>You can write this by hand or generate it with 'make manifest'.</source>
          <target state="translated">Вы можете написать это вручную или сгенерировать с помощью 'make manifest'.</target>
        </trans-unit>
        <trans-unit id="b1c2fce28dbd805f8d7a870a949b6c5834632bf2" translate="yes" xml:space="preserve">
          <source>You can write this more briefly using a grep, which does the same thing.</source>
          <target state="translated">Вы можете написать это более кратко,используя grep,который делает то же самое.</target>
        </trans-unit>
        <trans-unit id="abb98a8eca7d1aa69e5a0eb195e9e9713bd18c72" translate="yes" xml:space="preserve">
          <source>You can write your regular expressions just like someone on an ASCII platform would do. But keep in mind that using octal or hex notation to specify a particular code point will give you the character that the EBCDIC code page natively maps to it. (This is also true of all double-quoted strings.) If you want to write portably, just use the &lt;code&gt;\N{U+...}&lt;/code&gt; notation everywhere where you would have used &lt;code&gt;\x{...}&lt;/code&gt; , and don't use octal notation at all.</source>
          <target state="translated">Вы можете писать свои регулярные выражения так же, как это сделал бы кто-нибудь на платформе ASCII. Но имейте в виду, что использование восьмеричной или шестнадцатеричной нотации для указания конкретной кодовой точки даст вам символ, который кодовая страница EBCDIC изначально сопоставляет ему. (Это также верно для всех строк в двойных кавычках.) Если вы хотите писать переносимо, просто используйте нотацию &lt;code&gt;\N{U+...}&lt;/code&gt; везде, где вы бы использовали &lt;code&gt;\x{...}&lt;/code&gt; , и не вообще использовать восьмеричную нотацию.</target>
        </trans-unit>
        <trans-unit id="62834a834066a3093a80c93ec315493101e7f82e" translate="yes" xml:space="preserve">
          <source>You can't disambiguate that by saying &lt;code&gt;\{1}000&lt;/code&gt; , whereas you can fix it with &lt;code&gt;${1}000&lt;/code&gt;. The operation of interpolation should not be confused with the operation of matching a backreference. Certainly they mean two different things on the</source>
          <target state="translated">Вы не можете устранить неоднозначность, сказав &lt;code&gt;\{1}000&lt;/code&gt; , тогда как вы можете исправить это с помощью &lt;code&gt;${1}000&lt;/code&gt; . Не следует путать операцию интерполяции с операцией сопоставления обратной ссылки. Конечно, они означают две разные вещи на</target>
        </trans-unit>
        <trans-unit id="b18683b4b76072abbee71a6881cdb8bc575df90f" translate="yes" xml:space="preserve">
          <source>You can't have a hash whose values are arrays; hash values can only be scalars. We're stuck with that. But a single reference can refer to an entire array, and references are scalars, so you can have a hash of references to arrays, and it'll act a lot like a hash of arrays, and it'll be just as useful as a hash of arrays.</source>
          <target state="translated">Нельзя иметь хэш,значения которого являются массивами;значения хэша могут быть только скалярами.Мы застряли с этим.Но одна ссылка может ссылаться на целый массив,а ссылки-это скаляры,так что вы можете иметь хэш ссылок на массивы,и он будет очень похож на хэш массивов,и он будет так же полезен,как и хэш массивов.</target>
        </trans-unit>
        <trans-unit id="d10d9e535268b6be7a5edad8c961bf0a3eba1a2f" translate="yes" xml:space="preserve">
          <source>You can't prevent people from sending your script bad data. Even if you add some client-side checks, people may disable them or bypass them completely. For instance, someone might use a module such as &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; to submit to your web site. If you want to prevent data that try to use SQL injection or other sorts of attacks (and you should want to), you have to not trust any data that enter your program.</source>
          <target state="translated">Вы не можете помешать людям присылать вашему скрипту неверные данные. Даже если вы добавите некоторые проверки на стороне клиента, люди могут отключить их или полностью их обойти. Например, кто-то может использовать такой модуль, как &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP,&lt;/a&gt; для отправки на ваш веб-сайт. Если вы хотите предотвратить данные, которые пытаются использовать SQL-инъекцию или другие виды атак (а вы должны захотеть), вы не должны доверять никаким данным, которые входят в вашу программу.</target>
        </trans-unit>
        <trans-unit id="8673b45bcf51a92e5bbd4f8ac4117b4afa807acf" translate="yes" xml:space="preserve">
          <source>You can't produce a tied constant by giving a tied scalar as the value. References to tied variables, however, can be used as constants without any problems.</source>
          <target state="translated">Вы не можете получить завязанную константу,дав завязанный скаляр в качестве значения.Ссылки на связанные переменные,однако,могут быть использованы как константы без проблем.</target>
        </trans-unit>
        <trans-unit id="37d171546c154312737dfd62e998eea96bcef04d" translate="yes" xml:space="preserve">
          <source>You can't store GLOB, FORMLINE, REGEXP, etc.... If you can define semantics for those operations, feel free to enhance Storable so that it can deal with them.</source>
          <target state="translated">Нельзя хранить GLOB,FORMLINE,REGEXP и т.д......Если вы можете определить семантику для этих операций,не стесняйтесь улучшить Storable,чтобы она могла с ними справиться.</target>
        </trans-unit>
        <trans-unit id="e0c681bde3f10285d1065419cbcfdfe8d15a0638" translate="yes" xml:space="preserve">
          <source>You can't take the address of anything, although a similar operator in Perl is the backslash, which creates a reference.</source>
          <target state="translated">Вы не можете взять адрес чего-либо,хотя аналогичным оператором в Perl является обратная косая черта,которая создает ссылку.</target>
        </trans-unit>
        <trans-unit id="3d03f47a54efdf6a567386eabfcea4dcbcebbcab" translate="yes" xml:space="preserve">
          <source>You can't use a reference to an array or hash in quite the same way that you would a real array or hash. For C or C++ programmers unused to distinguishing between arrays and pointers to the same, this can be confusing. If so, just think of it as the difference between a structure and a pointer to a structure.</source>
          <target state="translated">Нельзя использовать ссылку на массив или хэш точно так же,как и на настоящий массив или хэш.Для программистов на Си или Си++,не привыкших различать массивы и указатели на одно и то же,это может сбить с толку.Если так,то подумайте об этом,как о различии между структурой и указателем на структуру.</target>
        </trans-unit>
        <trans-unit id="f88b12efd9288b17ac8ba038151b3170bc987f73" translate="yes" xml:space="preserve">
          <source>You can't. Some use the UTF8 flag for this, but that's misuse, and makes well behaved modules like Data::Dumper look bad. The flag is useless for this purpose, because it's off when an 8 bit encoding (by default ISO-8859-1) is used to store the string.</source>
          <target state="translated">Ты не можешь.Некоторые используют для этого флаг UTF8,но это неправильное использование и делает хорошо себя зарекомендовавшие модули вроде Data::Dumper плохо выглядят.Флаг для этого бесполезен,так как он отключается,когда для хранения строки используется 8-битная кодировка (по умолчанию ISO-8859-1).</target>
        </trans-unit>
        <trans-unit id="2fd8f1486a5edc4ee6dd1a50f986e5205ada1304" translate="yes" xml:space="preserve">
          <source>You can't. This is because UTF-8 data is stored in bytes just like non-UTF-8 data. The Unicode character 200, (&lt;code&gt;0xC8&lt;/code&gt; for you hex types) capital E with a grave accent, is represented by the two bytes &lt;code&gt;v196.172&lt;/code&gt; . Unfortunately, the non-Unicode string &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(196).chr(172)&lt;/a&gt;&lt;/code&gt; has that byte sequence as well. So you can't tell just by looking -- this is what makes Unicode input an interesting problem.</source>
          <target state="translated">Вы не можете. Это связано с тем, что данные UTF-8 хранятся в байтах так же, как данные, не относящиеся к UTF-8. Символ Юникода 200 ( &lt;code&gt;0xC8&lt;/code&gt; для шестнадцатеричных типов), заглавная E с серьезным ударением, представлен двумя байтами &lt;code&gt;v196.172&lt;/code&gt; . К сожалению, строка &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(196).chr(172)&lt;/a&gt;&lt;/code&gt; имеет эту последовательность байтов. Таким образом, вы не можете сказать, просто взглянув - это то, что делает ввод Unicode интересной проблемой.</target>
        </trans-unit>
        <trans-unit id="e5a4ed4ed782a30731e5ac82f99a95d222b188b0" translate="yes" xml:space="preserve">
          <source>You can't. You need to imitate the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call (see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for sample code) and then have a signal handler for the INT signal that passes the signal on to the subprocess. Or you can check for it:</source>
          <target state="translated">Вы не можете. Вам нужно имитировать вызов &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; (см. &lt;a href=&quot;perlipc&quot;&gt;Perlipc&lt;/a&gt; для примера кода), а затем иметь обработчик сигнала для сигнала INT, который передает сигнал в подпроцесс. Или вы можете проверить это:</target>
        </trans-unit>
        <trans-unit id="969f4cfd26924af3983dcc03e66552409285562e" translate="yes" xml:space="preserve">
          <source>You can, of course, declare separate handlers for these types as well (but you'll need to specify &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; warnings 'redefine'&lt;/code&gt; to do it quietly):</source>
          <target state="translated">Вы, конечно, можете объявить отдельные обработчики и для этих типов (но вам нужно указать, &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; warnings 'redefine'&lt;/code&gt; чтобы делать это незаметно):</target>
        </trans-unit>
        <trans-unit id="74374dec5e50007a2bb85f4a7c8771f4686fdade" translate="yes" xml:space="preserve">
          <source>You cannot Configure Perl to use long doubles unless you have at least Tru64 V5.0, the long double support simply wasn't functional enough before that. Perl's Configure will override attempts to use the long doubles (you can notice this by Configure finding out that the modfl() function does not work as it should).</source>
          <target state="translated">Вы не можете настроить Perl на использование длинных удвоений,если у вас нет как минимум Tru64 V5.0,поддержка длинных удвоений просто не была достаточно функциональна до этого.Perl's Configure перекроет попытки использования длинных удвоений (вы можете заметить это,узнав,что функция modfl()не работает так,как должна).</target>
        </trans-unit>
        <trans-unit id="d8bdeec288ef204b43d051952afe1296036c485c" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_formfeed()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Вы не можете вызвать &lt;code&gt;format_formfeed()&lt;/code&gt; для дескриптора, только как статический метод. См. &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="206c72a8b7cef7a32a6db021ff310a9ca6c22c22" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_line_break_characters()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Вы не можете вызвать &lt;code&gt;format_line_break_characters()&lt;/code&gt; для дескриптора, только как статический метод. См. &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be794aed40b9701358348d087034d06f390762c7" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;input_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Вы не можете вызвать &lt;code&gt;input_record_separator()&lt;/code&gt; для дескриптора, только как статический метод. См. &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e9632f1b73e717ca255777fe1c2f39799e45e4a" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_field_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Вы не можете вызвать &lt;code&gt;output_field_separator()&lt;/code&gt; для дескриптора, только как статический метод. См. &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f3ec65172d98e67d60dc40971034bddc7747e9" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">Вы не можете вызвать &lt;code&gt;output_record_separator()&lt;/code&gt; для дескриптора, только как статический метод. См. &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9134fa5f451fb01a8e6eeae9f39b7f5a89fc7ce" translate="yes" xml:space="preserve">
          <source>You cannot change the ordering once the database has been created. Thus you must use the same compare function every time you access the database.</source>
          <target state="translated">Вы не можете изменить заказ после создания базы данных.Поэтому при каждом обращении к БД необходимо использовать одну и ту же функцию сравнения.</target>
        </trans-unit>
        <trans-unit id="9e33a69a0160e97c284c6f83bf69b3911fb50910" translate="yes" xml:space="preserve">
          <source>You cannot currently get the precision from a specified number, but it is intended that this will be possible in the future, for example using &lt;code&gt;.*2$&lt;/code&gt;:</source>
          <target state="translated">В настоящее время вы не можете получить точность от указанного числа, но предполагается, что это будет возможно в будущем, например, используя &lt;code&gt;.*2$&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a19723c24ab74fcf1cad038cc364f2eed15903b" translate="yes" xml:space="preserve">
          <source>You cannot discern from mere inspection which builtins are unary operators (like chop() and chdir()) and which are list operators (like print() and unlink()). (Unless prototyped, user-defined subroutines can &lt;b&gt;only&lt;/b&gt; be list operators, never unary ones.) See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; and &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Вы не можете отличить от простой проверки, какие встроенные команды являются унарными операторами (например, chop () и chdir ()), а какие - операторами списка (например, print () и unlink ()). (За исключением прототипов, пользовательские подпрограммы могут быть &lt;b&gt;только&lt;/b&gt; операторами списков, а не унарными.) См. &lt;a href=&quot;perlop&quot;&gt;Perlop&lt;/a&gt; и &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab137c3fb7d6e07844b33eb499911ea797677bd5" translate="yes" xml:space="preserve">
          <source>You cannot easily tie a multilevel data structure (such as a hash of hashes) to a dbm file. The first problem is that all but GDBM and Berkeley DB have size limitations, but beyond that, you also have problems with how references are to be represented on disk. One experimental module that does partially attempt to address this need is the MLDBM module. Check your nearest CPAN site as described in &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for source code to MLDBM.</source>
          <target state="translated">Вы не можете легко привязать многоуровневую структуру данных (например, хеш хешей) к файлу dbm. Первая проблема заключается в том, что все, кроме GDBM и Berkeley DB, имеют ограничения по размеру, но помимо этого у вас также есть проблемы с тем, как ссылки должны быть представлены на диске. Один экспериментальный модуль, который частично пытается удовлетворить эту потребность, - это модуль MLDBM. Проверьте ближайший к вам сайт CPAN, как описано в &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib,&lt;/a&gt; чтобы найти исходный код MLDBM.</target>
        </trans-unit>
        <trans-unit id="38213a95a75072574eb5ab9364f983653ee56ffc" translate="yes" xml:space="preserve">
          <source>You cannot easily tie a multilevel data structure (such as a hash of hashes) to a dbm file. The first problem is that all but GDBM and Berkeley DB have size limitations, but beyond that, you also have problems with how references are to be represented on disk. One module that does attempt to address this need is DBM::Deep. Check your nearest CPAN site as described in &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for source code. Note that despite its name, DBM::Deep does not use dbm. Another earlier attempt at solving the problem is MLDBM, which is also available on the CPAN, but which has some fairly serious limitations.</source>
          <target state="translated">Вы не можете легко привязать многоуровневую структуру данных (например, хеш хешей) к файлу dbm. Первая проблема заключается в том, что все, кроме GDBM и Berkeley DB, имеют ограничения по размеру, но помимо этого у вас также есть проблемы с тем, как ссылки должны быть представлены на диске. Один из модулей, который пытается удовлетворить эту потребность, - это DBM :: Deep. Проверьте ближайший к вам сайт CPAN, как описано в &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; для получения исходного кода. Обратите внимание, что, несмотря на название, DBM :: Deep не использует dbm. Еще одна более ранняя попытка решения проблемы - это MLDBM, который также доступен на CPAN, но имеет некоторые довольно серьезные ограничения.</target>
        </trans-unit>
        <trans-unit id="54808a204fe862b1dfa25e752a892b2a04ab63bf" translate="yes" xml:space="preserve">
          <source>You cannot get stack frame information or in any fashion debug functions that were not compiled by Perl, such as those from C or C++ extensions.</source>
          <target state="translated">Вы не можете получить информацию о стековых кадрах или о каких-либо отладочных функциях,которые не были скомпилированы Perl,например,из расширений C или C++.</target>
        </trans-unit>
        <trans-unit id="b370a3f9299c4f8abb35adc5b9b2b86568a00bc8" translate="yes" xml:space="preserve">
          <source>You cannot lock the individual elements of a container variable:</source>
          <target state="translated">Невозможно заблокировать отдельные элементы переменной контейнера:</target>
        </trans-unit>
        <trans-unit id="f2b8b7a26c050e538a292ea22f61da0581625210" translate="yes" xml:space="preserve">
          <source>You cannot portably &quot;stack&quot; cpp directives. For example in the above you need two separate BURGLE() #defines, one for each #ifdef branch.</source>
          <target state="translated">Вы не можете переносить &quot;стопку&quot; директив cpp.Например,в приведенном выше примере вам понадобятся две отдельные #defines BURGLE(),по одной для каждой ветви #ifdef.</target>
        </trans-unit>
        <trans-unit id="b918f134e01ab04a493d865bacd0ad2555d6eed0" translate="yes" xml:space="preserve">
          <source>You cannot set $RS to a pattern, only a string.</source>
          <target state="translated">Нельзя установить $RS в качестве шаблона,только строку.</target>
        </trans-unit>
        <trans-unit id="891970fccef081510b98291902ea82121168e7ae" translate="yes" xml:space="preserve">
          <source>You cannot tie this routine directly to an option, e.g.:</source>
          <target state="translated">Вы не можете связать эту рутину напрямую с вариантом,например:</target>
        </trans-unit>
        <trans-unit id="2d9b5eae243979aa930fce2644c85c94e98e03e5" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;b&gt;-i&lt;/b&gt; to create directories or to strip extensions from files.</source>
          <target state="translated">Вы не можете использовать &lt;b&gt;-i&lt;/b&gt; для создания каталогов или удаления расширений из файлов.</target>
        </trans-unit>
        <trans-unit id="3d40633e0023663f60f6c6868c36efce9e85c50a" translate="yes" xml:space="preserve">
          <source>You compare the sort keys using a binary comparison and get the result of the comparison of the strings using UCA.</source>
          <target state="translated">Вы сравниваете ключи сортировки с помощью бинарного сравнения и получаете результат сравнения строк с помощью UCA.</target>
        </trans-unit>
        <trans-unit id="794fe9a7963db4b15645c3e75175ca30a42e7c02" translate="yes" xml:space="preserve">
          <source>You could also exclude &lt;code&gt;LC_NUMERIC&lt;/code&gt; , if you don't need it, by</source>
          <target state="translated">Вы также можете исключить &lt;code&gt;LC_NUMERIC&lt;/code&gt; , если он вам не нужен,</target>
        </trans-unit>
        <trans-unit id="63946de92748533808fd29d4342bd54a0ec7a953" translate="yes" xml:space="preserve">
          <source>You could also have used the existing block property names:</source>
          <target state="translated">Вы также могли бы использовать существующие имена свойств блоков:</target>
        </trans-unit>
        <trans-unit id="eaa54d59d0ed5e55dbc530f16d131415959a1711" translate="yes" xml:space="preserve">
          <source>You could also investigate the can() method in the UNIVERSAL class (part of the standard perl distribution).</source>
          <target state="translated">Также можно исследовать метод can()в классе UNIVERSAL (часть стандартного распределения perl).</target>
        </trans-unit>
        <trans-unit id="802dff37470d190b2a864a13c708bc5907b98d91" translate="yes" xml:space="preserve">
          <source>You could also just know all the perl errors, and although there are some people who may know all of them, you probably don't. However, they all should be in the &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; manpage. If you don't find the error in there, it probably isn't a perl error.</source>
          <target state="translated">Вы также можете просто знать все ошибки Perl, и хотя есть люди, которые могут знать все из них, вы, вероятно, не знаете. Однако все они должны быть на &lt;a href=&quot;perldiag&quot;&gt;странице&lt;/a&gt; руководства perldiag . Если вы не нашли там ошибки, вероятно, это не ошибка Perl.</target>
        </trans-unit>
        <trans-unit id="80d2dd3ba7c4c2069cf58261b6aaeb6dcd467d24" translate="yes" xml:space="preserve">
          <source>You could also write a single get/set method using an optional argument:</source>
          <target state="translated">Вы также можете написать один метод get/set,используя необязательный аргумент:</target>
        </trans-unit>
        <trans-unit id="8444b9fc7a3ed8d2fa7659ffde996510ee7f1f46" translate="yes" xml:space="preserve">
          <source>You could build a web site using &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; and your own code, but for anything other than a very basic web site, using a web framework (that uses &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt;) is a better option.</source>
          <target state="translated">Вы можете создать веб-сайт, используя &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; и свой собственный код, но для чего-либо, кроме очень простого веб-сайта, использование веб-фреймворка (использующего &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; ) - лучший вариант.</target>
        </trans-unit>
        <trans-unit id="2158ae7a8b9ea3f34a07fb0e90c3b98892665dc8" translate="yes" xml:space="preserve">
          <source>You could conceivably do both.</source>
          <target state="translated">Ты мог бы сделать и то,и другое.</target>
        </trans-unit>
        <trans-unit id="49073618f97078f446e251732bebc1a46a9b86b9" translate="yes" xml:space="preserve">
          <source>You could do the memoization yourself, by rewriting the function, like this:</source>
          <target state="translated">Ты можешь сделать запоминание самостоятельно,переписав функцию,вот так:</target>
        </trans-unit>
        <trans-unit id="a8bc28868b949ea5a73ffcd10a5a6d7af5c6ab02" translate="yes" xml:space="preserve">
          <source>You could do this:</source>
          <target state="translated">Ты можешь это сделать:</target>
        </trans-unit>
        <trans-unit id="9e128ecfca5b0e265baad327ad431d782e5e7ffc" translate="yes" xml:space="preserve">
          <source>You could edit that header yourself to remove that last '/', or you might note that Language Environment (LE) APAR PQ39997 describes the problem and PTF's UQ46272 and UQ46271 are the (R8 at least) fixes and apply them. If left unattended that syntax error will turn up as an inability for Perl to build its &quot;Socket&quot; extension.</source>
          <target state="translated">Вы можете отредактировать этот заголовок самостоятельно,чтобы удалить последний '/',или вы можете заметить,что Language Environment (LE)APAR PQ39997 описывает проблему,а UQ46272 и UQ46271 в PTF являются (по крайней мере,R8)исправлениями и применяют их.Если оставить эту синтаксическую ошибку без внимания,то это будет выглядеть как неспособность Perl собрать свое расширение &quot;Socket&quot;.</target>
        </trans-unit>
        <trans-unit id="3e7ad6be7d9fb2b01433fa3be5444bc3be8a1d7d" translate="yes" xml:space="preserve">
          <source>You could instead do lookups on $wanted with:</source>
          <target state="translated">Вместо этого ты можешь искать на $ разыскиваемых:</target>
        </trans-unit>
        <trans-unit id="457f8e624ad1da28bfb9cf34b1f79dc6623d16da" translate="yes" xml:space="preserve">
          <source>You could just store all your dates as a number and then subtract. Life isn't always that simple though.</source>
          <target state="translated">Ты можешь просто сохранить все свои даты как число,а затем вычесть.Жизнь не всегда так проста.</target>
        </trans-unit>
        <trans-unit id="c19f6ab6291cf9eaf2e211ed563b35ea9ac437b5" translate="yes" xml:space="preserve">
          <source>You could open the document in a web browser, and change the character set or character encoding until you can visually confirm that all characters look the way they should.</source>
          <target state="translated">Вы можете открыть документ в веб-браузере и изменить набор символов или кодировку до тех пор,пока не сможете визуально подтвердить,что все символы выглядят так,как они должны выглядеть.</target>
        </trans-unit>
        <trans-unit id="2a20c232c667e613d02f2b4874878f40bc6c28f2" translate="yes" xml:space="preserve">
          <source>You could write the last two using the &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; operators. Commonly available &lt;code&gt;S_IF*&lt;/code&gt; constants are:</source>
          <target state="translated">Вы можете написать последние два, используя операторы &lt;code&gt;-u&lt;/code&gt; и &lt;code&gt;-d&lt;/code&gt; . Обычно доступные константы &lt;code&gt;S_IF*&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2516f9cbf3f3333565923611bf8e4c6225451c64" translate="yes" xml:space="preserve">
          <source>You create the queue with &lt;code&gt;Thread::Queue-&amp;gt;new()&lt;/code&gt; . Then you can add lists of scalars onto the end with &lt;code&gt;enqueue()&lt;/code&gt; , and pop scalars off the front of it with &lt;code&gt;dequeue()&lt;/code&gt; . A queue has no fixed size, and can grow as needed to hold everything pushed on to it.</source>
          <target state="translated">Вы создаете очередь с помощью &lt;code&gt;Thread::Queue-&amp;gt;new()&lt;/code&gt; . Затем вы можете добавить списки скаляров в конец с помощью &lt;code&gt;enqueue()&lt;/code&gt; и удалить скаляры с его &lt;code&gt;dequeue()&lt;/code&gt; с помощью dequeue () . Очередь не имеет фиксированного размера и может увеличиваться по мере необходимости, чтобы удерживать все, что в нее помещено.</target>
        </trans-unit>
        <trans-unit id="dede4110b8ccb447bd7101130015f76cda530da1" translate="yes" xml:space="preserve">
          <source>You currently don't need to instantiate a factory in order to use it.</source>
          <target state="translated">В настоящее время вам не нужно инстанцировать фабрику,чтобы использовать ее.</target>
        </trans-unit>
        <trans-unit id="94aa24e74566493da77121fdf1cf79a43455f271" translate="yes" xml:space="preserve">
          <source>You did not run &lt;code&gt;omflibs&lt;/code&gt; . See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">Вы не запускали &lt;code&gt;omflibs&lt;/code&gt; . См. &lt;a href=&quot;#Prerequisites&quot;&gt;Предварительные условия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="351e72fc696e530c4b98b81dced35a153aee9b73" translate="yes" xml:space="preserve">
          <source>You did try the &lt;b&gt;-w&lt;/b&gt; switch, didn't you?</source>
          <target state="translated">Вы ведь пробовали ключ &lt;b&gt;-w&lt;/b&gt; , не так ли?</target>
        </trans-unit>
        <trans-unit id="88ae653a2469feaccaacebc0c4775e33fd1da464" translate="yes" xml:space="preserve">
          <source>You do need to be careful with the logical names representing process-permanent files, such as &lt;code&gt;SYS$INPUT&lt;/code&gt; and &lt;code&gt;SYS$OUTPUT&lt;/code&gt; . The translations for these logical names are prepended with a two-byte binary value (0x1B 0x00) that needs to be stripped off if you want to use it. (In previous versions of Perl it wasn't possible to get the values of these logical names, as the null byte acted as an end-of-string marker)</source>
          <target state="translated">Вам действительно нужно быть осторожным с логическими именами, представляющими постоянные файлы процесса, такими как &lt;code&gt;SYS$INPUT&lt;/code&gt; и &lt;code&gt;SYS$OUTPUT&lt;/code&gt; . К трансляциям этих логических имен добавляется двухбайтовое двоичное значение (0x1B 0x00), которое необходимо удалить, если вы хотите его использовать. (В предыдущих версиях Perl было невозможно получить значения этих логических имен, поскольку нулевой байт действовал как маркер конца строки)</target>
        </trans-unit>
        <trans-unit id="058b0924bf8d4ec16b563bbf0577363645a7bf62" translate="yes" xml:space="preserve">
          <source>You do not call &lt;code&gt;setlogsock&lt;/code&gt; .</source>
          <target state="translated">Вы не вызываете &lt;code&gt;setlogsock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0688f744612cb917b09a1848a221dbc87e7927a1" translate="yes" xml:space="preserve">
          <source>You do not have MT-safe</source>
          <target state="translated">У вас нет МТ-безопасности</target>
        </trans-unit>
        <trans-unit id="2e1ca2f68a9ba2ef298384c1d65396bc3e584c1e" translate="yes" xml:space="preserve">
          <source>You do not have to override methods shown below unless you have to.</source>
          <target state="translated">Вам не нужно переопределять методы,показанные ниже,если только вы не обязаны это делать.</target>
        </trans-unit>
        <trans-unit id="d463f5c40ea27790902d715d5582fd331f2a8862" translate="yes" xml:space="preserve">
          <source>You do this by using &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and replacing your &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;s with &lt;code&gt;carp&lt;/code&gt; s. If you need to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, say &lt;code&gt;croak&lt;/code&gt; instead. However, keep &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; in place for your sanity checks - where it really is your module at fault.</source>
          <target state="translated">Вы делаете это, используя &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; и заменяя ваши &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;carp&lt;/code&gt; . Если вам нужно &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , скажите вместо этого &lt;code&gt;croak&lt;/code&gt; . Тем не менее, будьте &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; на месте для проверки работоспособности - где действительно виноват ваш модуль.</target>
        </trans-unit>
        <trans-unit id="005e9bdc4a22cadca7bbf603665f85ba87cfef2b" translate="yes" xml:space="preserve">
          <source>You don't actually</source>
          <target state="translated">Вообще-то,ты не</target>
        </trans-unit>
        <trans-unit id="27b09323fd0303316a1e04f47208b954d9880846" translate="yes" xml:space="preserve">
          <source>You don't actually &quot;trap&quot; a control character. Instead, that character generates a signal which is sent to your terminal's currently foregrounded process group, which you then trap in your process. Signals are documented in &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; and the section on &quot;Signals&quot; in the Camel.</source>
          <target state="translated">На самом деле вы не &amp;laquo;ловите&amp;raquo; управляющего персонажа. Вместо этого этот символ генерирует сигнал, который отправляется в текущую группу процессов вашего терминала, которую вы затем перехватываете в своем процессе. Сигналы задокументированы в &amp;laquo; &lt;a href=&quot;perlipc#Signals&quot;&gt;Сигналы&amp;raquo; в perlipc&lt;/a&gt; и в разделе &amp;laquo;Сигналы&amp;raquo; в Camel.</target>
        </trans-unit>
        <trans-unit id="9b1e2e036145d009e379c1e58f4e8404e4bb7c5f" translate="yes" xml:space="preserve">
          <source>You don't have to check for &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on the return from &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;. Like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, it maps a &lt;code&gt;0&lt;/code&gt; return from the system call into &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in Perl. This string is true in boolean context and &lt;code&gt;0&lt;/code&gt; in numeric context. It is also exempt from the normal &lt;b&gt;-w&lt;/b&gt; warnings on improper numeric conversions.</source>
          <target state="translated">Вам не нужно проверять, что &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; при возврате из &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Как и &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , он отображает &lt;code&gt;0&lt;/code&gt; , возвращаемый системным вызовом, в &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; в Perl. Эта строка верна в логическом контексте и &lt;code&gt;0&lt;/code&gt; в числовом контексте. На него также не распространяются обычные предупреждения &lt;b&gt;-w&lt;/b&gt; о неправильных числовых преобразованиях.</target>
        </trans-unit>
        <trans-unit id="91e28b8dde4eef2778828dc13bbb504ddd8429b3" translate="yes" xml:space="preserve">
          <source>You don't have to check for &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on the return from &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;. Like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, it maps a &lt;code&gt;0&lt;/code&gt; return from the system call into &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in Perl. This string is true in boolean context and &lt;code&gt;0&lt;/code&gt; in numeric context. It is also exempt from the normal &lt;b&gt;-w&lt;/b&gt; warnings on improper numeric conversions.</source>
          <target state="translated">Вам не нужно проверять, что &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; при возврате из &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Как и &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , он отображает &lt;code&gt;0&lt;/code&gt; , возвращаемый системным вызовом, в &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; в Perl. Эта строка верна в логическом контексте и &lt;code&gt;0&lt;/code&gt; в числовом контексте. На него также не распространяются обычные предупреждения &lt;b&gt;-w&lt;/b&gt; о неправильных числовых преобразованиях.</target>
        </trans-unit>
        <trans-unit id="3317a455934bcb4f5310b2ce1e13684a7b6884c6" translate="yes" xml:space="preserve">
          <source>You don't have to close FILEHANDLE if you are immediately going to do another &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; on it, because &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; closes it for you. (See &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt;.) However, an explicit &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on an input file resets the line counter (&lt;code&gt;$.&lt;/code&gt; ), while the implicit close done by &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; does not.</source>
          <target state="translated">Вам не нужно закрывать FILEHANDLE, если вы собираетесь немедленно &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; его еще раз, потому что &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; закрывает его за вас. (См. &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;Open&lt;/a&gt; .) Однако явное &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; входного файла сбрасывает счетчик строк ( &lt;code&gt;$.&lt;/code&gt; ), В то время как неявное закрытие, сделанное &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , этого не делает.</target>
        </trans-unit>
        <trans-unit id="d144697260e1beed6903444902a55fc7aceb423c" translate="yes" xml:space="preserve">
          <source>You don't have to close FILEHANDLE if you are immediately going to do another &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; on it, because &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; closes it for you. (See &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt;.) However, an explicit &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on an input file resets the line counter (&lt;code&gt;$.&lt;/code&gt; ), while the implicit close done by &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; does not.</source>
          <target state="translated">Вам не нужно закрывать FILEHANDLE, если вы собираетесь немедленно &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; его еще раз, потому что &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; закрывает его за вас. (См. &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;Open&lt;/a&gt; .) Однако явное &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; входного файла сбрасывает счетчик строк ( &lt;code&gt;$.&lt;/code&gt; ), В то время как неявное закрытие, сделанное &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , этого не делает.</target>
        </trans-unit>
        <trans-unit id="ada37b6245f195e4fcd7aa6724d9b314782b9989" translate="yes" xml:space="preserve">
          <source>You don't have to do anything new in your extension to get this; since the Perl library provides Perl_get_context(), it will all just work.</source>
          <target state="translated">Чтобы получить это,вам не нужно делать ничего нового в вашем расширении;так как библиотека Perl предоставляет Perl_get_context(),все это будет просто работать.</target>
        </trans-unit>
        <trans-unit id="0afa6281a85d9c8f0451db68d3408cd7d6bba6a9" translate="yes" xml:space="preserve">
          <source>You don't have to do this all on the command line, though, there are a few GUI options out there. The nice thing about these is you can wave a mouse over a variable and a dump of its data will appear in an appropriate window, or in a popup balloon, no more tiresome typing of 'x $varname' :-)</source>
          <target state="translated">Вам не обязательно делать все это в командной строке,хотя там есть несколько вариантов GUI.Самое приятное в них то,что вы можете навести курсор мыши на переменную и в соответствующем окне появится дамп с ее данными,или в виде всплывающего шарика,больше не надоедая набирать 'x $varname' :-)</target>
        </trans-unit>
        <trans-unit id="bc3f5455b30ee7863f96aa530c94393c0cafca20" translate="yes" xml:space="preserve">
          <source>You don't have to enclose POSIX class names inside double brackets, hence both of the following work:</source>
          <target state="translated">Вам не нужно заключать имена POSIX-классов в двойные скобки,отсюда и следующая работа:</target>
        </trans-unit>
        <trans-unit id="229ae092ed53a2ce77c4892afb43389969fbd9bc" translate="yes" xml:space="preserve">
          <source>You don't have to use \b to match words though. You can look for non-word characters surrounded by word characters. These strings match the pattern /\b'\b/.</source>
          <target state="translated">Хотя тебе не обязательно использовать \b для сопоставления слов.Вы можете искать несловесные символы в окружении словесных знаков.Эти строки соответствуют шаблону /\b'\b/.</target>
        </trans-unit>
        <trans-unit id="21cad750fa1f143b35b4124baa7518d27d8319c9" translate="yes" xml:space="preserve">
          <source>You don't have to worry about finding or paying for Perl; it's freely available and several popular operating systems come with Perl. Community support in places such as Perlmonks ( &lt;a href=&quot;http://www.perlmonks.com&quot;&gt;http://www.perlmonks.com&lt;/a&gt; ) and the various Perl mailing lists ( &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; ) means that you can usually get quick answers to your problems.</source>
          <target state="translated">Вам не нужно беспокоиться о поиске или оплате Perl; он находится в свободном доступе, и несколько популярных операционных систем поставляются с Perl. Поддержка сообщества в таких местах, как Perlmonks ( &lt;a href=&quot;http://www.perlmonks.com&quot;&gt;http://www.perlmonks.com&lt;/a&gt; ) и различные списки рассылки Perl ( &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; ), означает, что вы обычно можете быстро получить ответы на свои проблемы.</target>
        </trans-unit>
        <trans-unit id="8365eeff3d04c895cb1076cf6e1217da1d00d04f" translate="yes" xml:space="preserve">
          <source>You don't just have to match on fixed strings. In fact, you can match on just about anything you could dream of by using more complex regular expressions. These are documented at great length in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, but for the meantime, here's a quick cheat sheet:</source>
          <target state="translated">Вам не нужно просто сопоставлять фиксированные строки. Фактически, вы можете сопоставить практически все, о чем только могли мечтать, используя более сложные регулярные выражения. Они подробно &lt;a href=&quot;perlre&quot;&gt;описаны&lt;/a&gt; в perlre , а пока вот небольшая шпаргалка:</target>
        </trans-unit>
        <trans-unit id="6fa3f4f65b9497a1fe4774a26aaf551f58ec3c5f" translate="yes" xml:space="preserve">
          <source>You don't need to have /usr/ucb/ in your PATH to build perl. If you want /usr/ucb/ in your PATH anyway, make sure that /usr/ucb/ is NOT in your PATH before the directory containing the right C compiler.</source>
          <target state="translated">Вам не нужно иметь /usr/ucb/в вашем PATH,чтобы построить perl.Если вам все равно нужен /usr/ucb/в вашем PATH,убедитесь,что /usr/ucb/НЕ находится в вашем PATH перед каталогом,содержащим нужный компилятор Си.</target>
        </trans-unit>
        <trans-unit id="e40dd09143f7def3dc81d2ff9344d2600d1d1ae7" translate="yes" xml:space="preserve">
          <source>You don't really have to count them yourself, though, since Perl already does that with the &lt;code&gt;$.&lt;/code&gt; variable, which is the current line number from the last filehandle read:</source>
          <target state="translated">Однако вам не обязательно считать их самостоятельно, поскольку Perl уже делает это с помощью &lt;code&gt;$.&lt;/code&gt; переменная, которая является текущим номером строки из последнего чтения дескриптора файла:</target>
        </trans-unit>
        <trans-unit id="b24e0508e2da733e0f794e663fee88bb39a1e25a" translate="yes" xml:space="preserve">
          <source>You don't skip tests which are failing because there's a bug in your program, or for which you don't yet have code written. For that you use TODO. Read on.</source>
          <target state="translated">Вы не пропускаете тесты,которые терпят неудачу из-за ошибки в вашей программе,или для которых у вас еще нет написанного кода.Для этого вы используете TODO.Читайте дальше.</target>
        </trans-unit>
        <trans-unit id="710a0707d7d6991623d26d4226d9c4d860f3f7d5" translate="yes" xml:space="preserve">
          <source>You forgot to check &lt;code&gt;$?&lt;/code&gt; to see whether the program even ran correctly. Even if you wrote</source>
          <target state="translated">Вы забыли проверить &lt;code&gt;$?&lt;/code&gt; чтобы увидеть, правильно ли работает программа. Даже если ты написал</target>
        </trans-unit>
        <trans-unit id="fc90d9f18467dae7f984c44b04f6fed62e49d3b4" translate="yes" xml:space="preserve">
          <source>You get two references to the same array. If you modify &lt;code&gt;$aref1-&amp;gt;[23]&lt;/code&gt; and then look at &lt;code&gt;$aref2-&amp;gt;[23]&lt;/code&gt; you'll see the change.</source>
          <target state="translated">Вы получаете две ссылки на один и тот же массив. Если вы измените &lt;code&gt;$aref1-&amp;gt;[23]&lt;/code&gt; а затем посмотрите на &lt;code&gt;$aref2-&amp;gt;[23]&lt;/code&gt; вы увидите изменение.</target>
        </trans-unit>
        <trans-unit id="d8e5e5638bed24bad2d4ab312bfe1360cb8707ce" translate="yes" xml:space="preserve">
          <source>You have a data file that expresses greetings in different languages. Its format is &quot;[language tag]=[how to say 'Hello']&quot;, like:</source>
          <target state="translated">У вас есть файл данных,который выражает приветствия на разных языках.Его формат &quot;[language tag]=[how to say 'hello']&quot;,например:</target>
        </trans-unit>
        <trans-unit id="afbb6b8d64f8b4b3f378ab57026bdb8753122fdc" translate="yes" xml:space="preserve">
          <source>You have a piece of data on which many different operations are applied.</source>
          <target state="translated">У вас есть часть данных,к которой применяется множество различных операций.</target>
        </trans-unit>
        <trans-unit id="f8eed8b91591afe605349a4edd81010c1b4133d5" translate="yes" xml:space="preserve">
          <source>You have a very old pdksh. See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">У вас очень старый файл pdksh. См. &lt;a href=&quot;#Prerequisites&quot;&gt;Предварительные условия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0763fc81d3cd7a4189100a79a22596558a167896" translate="yes" xml:space="preserve">
          <source>You have an older version of</source>
          <target state="translated">У вас есть старая версия</target>
        </trans-unit>
        <trans-unit id="72b9024251b30a14c45724d6bbd90abab3f232a3" translate="yes" xml:space="preserve">
          <source>You have been warned already in &lt;a href=&quot;#Selecting-What-to-Export&quot;&gt;Selecting What to Export&lt;/a&gt; to not export:</source>
          <target state="translated">Вы уже были предупреждены при &lt;a href=&quot;#Selecting-What-to-Export&quot;&gt;выборе того, что экспортировать,&lt;/a&gt; чтобы не экспортировать:</target>
        </trans-unit>
        <trans-unit id="43dfe62727996603d47468da8d91c958abc24b74" translate="yes" xml:space="preserve">
          <source>You have created an XSUB interface to an application's C API.</source>
          <target state="translated">Вы создали XSUB-интерфейс к C API приложения.</target>
        </trans-unit>
        <trans-unit id="c236e9b8bd9523c45d8e12fd36ee9331405ecbff" translate="yes" xml:space="preserve">
          <source>You have defined an END handler for an attribute that is being applied to a lexical variable. Since the variable may not be available during END this won't happen.</source>
          <target state="translated">Вы определили обработчик END для атрибута,который применяется к лексической переменной.Так как переменная может быть недоступна во время END,этого не произойдет.</target>
        </trans-unit>
        <trans-unit id="717f15e5bfd4a04630296d7e18d1dc4a8563c670" translate="yes" xml:space="preserve">
          <source>You have set the &lt;code&gt;WindowBits&lt;/code&gt; parameter to &lt;code&gt;-MAX_WBITS&lt;/code&gt; in the constructor for this object, i.e. you are uncompressing a raw deflated data stream (RFC 1951).</source>
          <target state="translated">Вы установили для параметра &lt;code&gt;WindowBits&lt;/code&gt; значение &lt;code&gt;-MAX_WBITS&lt;/code&gt; в конструкторе этого объекта, т. Е. Вы распаковываете необработанный поток дефлированных данных (RFC 1951).</target>
        </trans-unit>
        <trans-unit id="522d08a79de6280adc20232939d047a4cc891b57" translate="yes" xml:space="preserve">
          <source>You have the choice to set the config variable &lt;code&gt;scan_cache&lt;/code&gt; to &lt;code&gt;never&lt;/code&gt; . Then you must clean it up yourself. The other possible values, &lt;code&gt;atstart&lt;/code&gt; and &lt;code&gt;atexit&lt;/code&gt; clean up the build directory when you start (or more precisely, after the first extraction into the build directory) or exit the CPAN shell, respectively. If you never start up the CPAN shell, you probably also have to clean up the build directory yourself.</source>
          <target state="translated">Вы можете установить для переменной конфигурации &lt;code&gt;scan_cache&lt;/code&gt; значение &lt;code&gt;never&lt;/code&gt; . Тогда вы должны очистить это самостоятельно. Другие возможные значения, &lt;code&gt;atstart&lt;/code&gt; и &lt;code&gt;atexit&lt;/code&gt; , очищают каталог сборки при запуске (или, точнее, после первого извлечения в каталог сборки) или выходе из оболочки CPAN, соответственно. Если вы никогда не запускаете оболочку CPAN, вам, вероятно, также придется самостоятельно очистить каталог сборки.</target>
        </trans-unit>
        <trans-unit id="b2deb6a8cd98a82f2aaaef2ec6bec5741ef832ea" translate="yes" xml:space="preserve">
          <source>You have the same problem with &lt;a href=&quot;time/local&quot;&gt;Time::Local&lt;/a&gt;, which will give the wrong answer for those same special cases:</source>
          <target state="translated">У вас такая же проблема с &lt;a href=&quot;time/local&quot;&gt;Time :: Local&lt;/a&gt; , который даст неправильный ответ для тех же особых случаев:</target>
        </trans-unit>
        <trans-unit id="d93e439cde6acc82e52bf85fad48553b810a706b" translate="yes" xml:space="preserve">
          <source>You have to be prepared to &quot;reap&quot; the child process when it finishes.</source>
          <target state="translated">Вы должны быть готовы &quot;пожинать&quot; процесс ребенка,когда он закончит.</target>
        </trans-unit>
        <trans-unit id="7bc9963f1adfa43aa2eba732c53b836ac12c4562" translate="yes" xml:space="preserve">
          <source>You have to decide whether you want to use string or numeric comparisons.</source>
          <target state="translated">Вы должны решить,хотите ли вы использовать строковые или числовые сравнения.</target>
        </trans-unit>
        <trans-unit id="4cf51b08c425e59c5631231a092f6037897d07c7" translate="yes" xml:space="preserve">
          <source>You have to decide whether your array has numeric or string indices.</source>
          <target state="translated">Вы должны решить,есть ли в вашем массиве числовые или строковые индексы.</target>
        </trans-unit>
        <trans-unit id="a73461591d1d0c0412d08a5e1e1cc7e69b28c7fe" translate="yes" xml:space="preserve">
          <source>You have to have Pod::Simple::RTF installed (from the Pod::Simple dist), or this module won't work.</source>
          <target state="translated">Вы должны установить Pod::Simple::RTF (из Pod::Simple dist),иначе этот модуль не будет работать.</target>
        </trans-unit>
        <trans-unit id="58b51a173ef28ef95718c75aa4bacf0fb0ef7258" translate="yes" xml:space="preserve">
          <source>You have to have installed Pod::Simple::XMLOutStream (from the Pod::Simple dist), or this class won't work.</source>
          <target state="translated">Вы должны установить Pod::Simple::XMLOutStream (из Pod::Simple dist),иначе этот класс не будет работать.</target>
        </trans-unit>
        <trans-unit id="f9f9dbede53dcc87c8a6c2c35d9ae17a92119e03" translate="yes" xml:space="preserve">
          <source>You have to have installed Tk::Pod first, or this class won't load.</source>
          <target state="translated">Сначала нужно установить Tk::Pod,иначе этот класс не загрузится.</target>
        </trans-unit>
        <trans-unit id="95bfc19d25cce1034c6f167e8df494025bec3f1c" translate="yes" xml:space="preserve">
          <source>You have to have two hex digits after a braceless &lt;code&gt;\x&lt;/code&gt; (use a leading zero to make two). These restrictions are to lower the incidence of typos causing the class to not match what you thought it would.</source>
          <target state="translated">У вас должны быть две шестнадцатеричные цифры после &lt;code&gt;\x&lt;/code&gt; скобок (используйте начальный ноль, чтобы получить два). Эти ограничения призваны снизить количество опечаток, из-за которых класс не соответствует тому, что вы думали.</target>
        </trans-unit>
        <trans-unit id="c268b51167b66309dd9d49ba2a2c249b1b287fa0" translate="yes" xml:space="preserve">
          <source>You have to keep track of N yourself. For example, let's say you want to change the fifth occurrence of &lt;code&gt;&quot;whoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomever&quot;&lt;/code&gt; into &lt;code&gt;&quot;whosoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomsoever&quot;&lt;/code&gt; , case insensitively. These all assume that $_ contains the string to be altered.</source>
          <target state="translated">Вы должны сами следить за N. Например, предположим, что вы хотите изменить пятое вхождение &lt;code&gt;&quot;whoever&quot;&lt;/code&gt; или &lt;code&gt;&quot;whomever&quot;&lt;/code&gt; на &lt;code&gt;&quot;whosoever&quot;&lt;/code&gt; или &lt;code&gt;&quot;whomsoever&quot;&lt;/code&gt; регистра. Все они предполагают, что $ _ содержит строку, которую нужно изменить.</target>
        </trans-unit>
        <trans-unit id="ac02203046e578344330c6d8542449742080d451" translate="yes" xml:space="preserve">
          <source>You have to run this program by hand; it's not run as part of the Perl installation.</source>
          <target state="translated">Вы должны запустить эту программу вручную;она не запускается в рамках установки Perl.</target>
        </trans-unit>
        <trans-unit id="64c3798560849a7dba79bf1106dd1dedfd652114" translate="yes" xml:space="preserve">
          <source>You have tried to use one of the &lt;code&gt;-rwxRWX&lt;/code&gt; filetests with &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;
filetest 'access'&lt;/code&gt; in effect. &lt;code&gt;File::stat&lt;/code&gt; will ignore the pragma, and just use the information in the &lt;code&gt;mode&lt;/code&gt; member as usual.</source>
          <target state="translated">Вы пробовали использовать один из &lt;code&gt;-rwxRWX&lt;/code&gt; filetests, фактически &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; . &lt;code&gt;File::stat&lt;/code&gt; будет игнорировать прагму и просто использовать информацию в члене &lt;code&gt;mode&lt;/code&gt; как обычно.</target>
        </trans-unit>
        <trans-unit id="f298d6edd85361a4fe69a118c738c5c6d1ac6519" translate="yes" xml:space="preserve">
          <source>You just can't, okay? Instead, put all the specifications together with commas between them in a single &lt;code&gt;ATTR(&lt;i&gt;specification&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">Вы просто не можете, хорошо? Вместо этого поместите все спецификации вместе с запятыми между ними в один &lt;code&gt;ATTR(&lt;i&gt;specification&lt;/i&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afbf451f9422303960f49b456d9bb760406138be" translate="yes" xml:space="preserve">
          <source>You likely need to figure out how this multi-byte character got mixed up with your single-byte locale (or perhaps you thought you had a UTF-8 locale, but Perl disagrees).</source>
          <target state="translated">Скорее всего,вам нужно выяснить,как этот многобайтовый символ перепутался с вашей однобайтовой локалью (или,возможно,вы думали,что у вас есть UTF-8 локаль,но Perl с этим не согласен).</target>
        </trans-unit>
        <trans-unit id="b36efc02e455a878d40bce54d0800047ed5ce051" translate="yes" xml:space="preserve">
          <source>You may (and usually should) use the three-argument form of open to specify I/O layers (sometimes referred to as &quot;disciplines&quot;) to apply to the handle that affect how the input and output are processed (see &lt;a href=&quot;../open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;../perlio&quot;&gt;PerlIO&lt;/a&gt; for more details). For example:</source>
          <target state="translated">Вы можете (и обычно должны) использовать форму open с тремя аргументами, чтобы указать уровни ввода-вывода (иногда называемые &amp;laquo;дисциплинами&amp;raquo;) для применения к дескриптору, который влияет на то, как обрабатываются ввод и вывод (см. &lt;a href=&quot;../open&quot;&gt;Open&lt;/a&gt; и &lt;a href=&quot;../perlio&quot;&gt;PerlIO&lt;/a&gt; для подробнее). Например:</target>
        </trans-unit>
        <trans-unit id="f4242caecdd2a41134c434e48293066c09a61129" translate="yes" xml:space="preserve">
          <source>You may (and usually should) use the three-argument form of open to specify I/O layers (sometimes referred to as &quot;disciplines&quot;) to apply to the handle that affect how the input and output are processed (see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for more details). For example:</source>
          <target state="translated">Вы можете (и обычно должны) использовать форму open с тремя аргументами, чтобы указать уровни ввода-вывода (иногда называемые &amp;laquo;дисциплинами&amp;raquo;) для применения к дескриптору, который влияет на то, как обрабатываются ввод и вывод (см. &lt;a href=&quot;open&quot;&gt;Open&lt;/a&gt; и &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; для подробнее). Например:</target>
        </trans-unit>
        <trans-unit id="9e56389d96587e792278e4c558eb5807976007cf" translate="yes" xml:space="preserve">
          <source>You may access the repository over the web. This allows you to browse the tree, see recent commits, subscribe to RSS feeds for the changes, search for particular commits and more. You may access it at &lt;a href=&quot;http://perl5.git.perl.org/perl.git&quot;&gt;http://perl5.git.perl.org/perl.git&lt;/a&gt;. A mirror of the repository is found at &lt;a href=&quot;https://github.com/Perl/perl5&quot;&gt;https://github.com/Perl/perl5&lt;/a&gt;.</source>
          <target state="translated">Вы можете получить доступ к репозиторию через Интернет. Это позволяет вам просматривать дерево, видеть последние коммиты, подписываться на RSS-каналы для получения изменений, искать определенные коммиты и многое другое. Вы можете получить к нему доступ по адресу &lt;a href=&quot;http://perl5.git.perl.org/perl.git&quot;&gt;http://perl5.git.perl.org/perl.git&lt;/a&gt; . Зеркало репозитория находится по адресу &lt;a href=&quot;https://github.com/Perl/perl5&quot;&gt;https://github.com/Perl/perl5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d839e720ae2e7bff2fab5b0520b346cd44ca6b4d" translate="yes" xml:space="preserve">
          <source>You may add other methods to the UNIVERSAL class via Perl or XS code. You do not need to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; UNIVERSAL&lt;/code&gt; to make these methods available to your program (and you should not do so).</source>
          <target state="translated">Вы можете добавить другие методы в класс UNIVERSAL с помощью кода Perl или XS. Вам не нужно &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; UNIVERSAL&lt;/code&gt; чтобы сделать эти методы доступными для вашей программы (и вы не должны этого делать).</target>
        </trans-unit>
        <trans-unit id="100a6f059c39fc4530e46957891e388f20cf1052" translate="yes" xml:space="preserve">
          <source>You may also choose to assign the strings &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; or &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; as the handler, in which case Perl will try to discard the signal or do the default thing.</source>
          <target state="translated">Вы также можете назначить в качестве обработчика строки &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; или &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; , и в этом случае Perl попытается отбросить сигнал или выполнить действие по умолчанию.</target>
        </trans-unit>
        <trans-unit id="daa282ce292ff54483ba2ce846a92dc96f9168dc" translate="yes" xml:space="preserve">
          <source>You may also examine the &quot;safe&quot; flag on the output action object which is filled in when given as the third parameter to &lt;code&gt;POSIX::sigaction()&lt;/code&gt; :</source>
          <target state="translated">Вы также можете проверить &amp;laquo;безопасный&amp;raquo; флаг на объекте действия вывода, который заполняется, когда он указан в качестве третьего параметра для &lt;code&gt;POSIX::sigaction()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="01c5b9373dd2d19d42f55fdae95d97ea20dd07a1" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;gr_&lt;/code&gt; . Thus, &lt;code&gt;$group_obj-&amp;gt;gid()&lt;/code&gt; corresponds to $gr_gid if you import the fields. Array references are available as regular array variables, so &lt;code&gt;@{ $group_obj-&amp;gt;members() }&lt;/code&gt; would be simply @gr_members.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши основные функции.) Доступ к этим полям как к переменным, названным с предшествующим &lt;code&gt;gr_&lt;/code&gt; . Таким образом, &lt;code&gt;$group_obj-&amp;gt;gid()&lt;/code&gt; соответствует $ gr_gid, если вы импортируете поля. Ссылки на массивы доступны как обычные переменные массива, поэтому &lt;code&gt;@{ $group_obj-&amp;gt;members() }&lt;/code&gt; будет просто @gr_members.</target>
        </trans-unit>
        <trans-unit id="fa4935199f235ba2f0cd0a1d49e3ac1a3bbd011f" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;h_&lt;/code&gt; . Thus, &lt;code&gt;$host_obj-&amp;gt;name()&lt;/code&gt; corresponds to $h_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $host_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @h_aliases.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это все еще отменяет ваши основные функции.) Доступ к этим полям как к переменным, названным с предшествующим &lt;code&gt;h_&lt;/code&gt; . Таким образом, &lt;code&gt;$host_obj-&amp;gt;name()&lt;/code&gt; соответствует $ h_name, если вы импортируете поля. Ссылки на массивы доступны как обычные переменные массива, поэтому, например, &lt;code&gt;@{ $host_obj-&amp;gt;aliases() }&lt;/code&gt; будет просто @h_aliases.</target>
        </trans-unit>
        <trans-unit id="60ec160f76fcfc38cc73d96c90a7ce874d6384c9" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;n_&lt;/code&gt; . Thus, &lt;code&gt;$net_obj-&amp;gt;name()&lt;/code&gt; corresponds to $n_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $net_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @n_aliases.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши основные функции.) Доступ к этим полям как к переменным, названным с предшествующим &lt;code&gt;n_&lt;/code&gt; . Таким образом, &lt;code&gt;$net_obj-&amp;gt;name()&lt;/code&gt; соответствует $ n_name, если вы импортируете поля. Ссылки на массивы доступны как обычные переменные массива, поэтому, например, &lt;code&gt;@{ $net_obj-&amp;gt;aliases() }&lt;/code&gt; будет просто @n_aliases.</target>
        </trans-unit>
        <trans-unit id="cd8189e5c613aac0e23d3c0670ed3ce2f5ae13db" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;p_&lt;/code&gt; . Thus, &lt;code&gt;$proto_obj-&amp;gt;name()&lt;/code&gt; corresponds to $p_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $proto_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @p_aliases.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши основные функции.) Доступ к этим полям как к переменным, названным с предшествующим &lt;code&gt;p_&lt;/code&gt; . Таким образом, &lt;code&gt;$proto_obj-&amp;gt;name()&lt;/code&gt; соответствует $ p_name, если вы импортируете поля. Ссылки на массивы доступны как обычные переменные массива, поэтому, например, &lt;code&gt;@{ $proto_obj-&amp;gt;aliases() }&lt;/code&gt; будет просто @p_aliases.</target>
        </trans-unit>
        <trans-unit id="25ca76eb17a2cf86a0c57fdc15c696e88b6cf4c9" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;pw_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$passwd_obj-&amp;gt;shell&lt;/code&gt; corresponds to $pw_shell if you import the fields.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши основные функции.) Доступ к этим полям как к переменным, именованным с предшествующим &lt;code&gt;pw_&lt;/code&gt; перед именами методов. Таким образом, &lt;code&gt;$passwd_obj-&amp;gt;shell&lt;/code&gt; соответствует $ pw_shell, если вы импортируете поля.</target>
        </trans-unit>
        <trans-unit id="274d859e81c068db4c48efa8f50c77493ca5cdbd" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;s_&lt;/code&gt; . Thus, &lt;code&gt;$serv_obj-&amp;gt;name()&lt;/code&gt; corresponds to $s_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $serv_obj-&amp;gt;aliases()}&lt;/code&gt; would be simply @s_aliases.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему переопределяет ваши основные функции.) Доступ к этим полям как к переменным, названным с предшествующим &lt;code&gt;s_&lt;/code&gt; . Таким образом, &lt;code&gt;$serv_obj-&amp;gt;name()&lt;/code&gt; соответствует $ s_name, если вы импортируете поля. Ссылки на массивы доступны как обычные переменные массива, поэтому, например, &lt;code&gt;@{ $serv_obj-&amp;gt;aliases()}&lt;/code&gt; будет просто @s_aliases.</target>
        </trans-unit>
        <trans-unit id="447198c5b98b7b54155b70c415358589d509c62e" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;tm_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$tm_obj-&amp;gt;mday()&lt;/code&gt; corresponds to $tm_mday if you import the fields.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши основные функции.) Доступ к этим полям как к переменным, именованным с предшествующим &lt;code&gt;tm_&lt;/code&gt; перед именами методов. Таким образом, &lt;code&gt;$tm_obj-&amp;gt;mday()&lt;/code&gt; соответствует $ tm_mday, если вы импортируете поля.</target>
        </trans-unit>
        <trans-unit id="5c856054dbb9356054cca7ccfef163a998ceb55f" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your stat() and lstat() functions.) Access these fields as variables named with a preceding &lt;code&gt;st_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$stat_obj-&amp;gt;dev()&lt;/code&gt; corresponds to $st_dev if you import the fields.</source>
          <target state="translated">Вы также можете импортировать все поля структуры непосредственно в свое пространство имен как обычные переменные, используя тег импорта: FIELDS. (Обратите внимание, что это по-прежнему отменяет ваши функции stat () и lstat ().) Доступ к этим полям как к переменным, именованным с предшествующим &lt;code&gt;st_&lt;/code&gt; перед именами методов. Таким образом, &lt;code&gt;$stat_obj-&amp;gt;dev()&lt;/code&gt; соответствует $ st_dev, если вы импортируете поля.</target>
        </trans-unit>
        <trans-unit id="a6b6b26fcc9879eca82e69c4a67570540fca4ae9" translate="yes" xml:space="preserve">
          <source>You may also need to apply the patches supplied with the binary distribution of perl. It also makes sense to look on the perl5-porters mailing list for the latest OS/2-related patches (see &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&lt;/a&gt;). Such patches usually contain strings &lt;code&gt;/os2/&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; , so it makes sense looking for these strings.</source>
          <target state="translated">Вам также может потребоваться применить патчи, поставляемые с двоичным дистрибутивом perl. Также имеет смысл поискать в списке рассылки perl5-porters последние исправления, связанные с OS / 2 (см. &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&quot;&gt;Http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&lt;/a&gt; ). Такие патчи обычно содержат строки &lt;code&gt;/os2/&lt;/code&gt; и &lt;code&gt;patch&lt;/code&gt; , поэтому имеет смысл искать эти строки.</target>
        </trans-unit>
        <trans-unit id="6aa8495c9efa1eb6aea78e6cd751529d33d7b29e" translate="yes" xml:space="preserve">
          <source>You may also need to comment out the &lt;code&gt;DELAYLOAD = ...&lt;/code&gt; line in the Makefile if you're using VC++ 6.0 without the latest service pack and the linker reports an internal error.</source>
          <target state="translated">Вам также может потребоваться закомментировать &lt;code&gt;DELAYLOAD = ...&lt;/code&gt; в Makefile, если вы используете VC ++ 6.0 без последнего пакета обновления, а компоновщик сообщает о внутренней ошибке.</target>
        </trans-unit>
        <trans-unit id="2c64c3fbfbcaace5918da128791239c43cdf19d2" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; to check whether subroutine &lt;code&gt;&amp;amp;func&lt;/code&gt; has ever been defined. The return value is unaffected by any forward declarations of &lt;code&gt;&amp;amp;func&lt;/code&gt; . A subroutine that is not defined may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; чтобы проверить, были ли когда-либо определены подпрограмма &lt;code&gt;&amp;amp;func&lt;/code&gt; . На возвращаемое значение не влияют какие-либо предварительные объявления &lt;code&gt;&amp;amp;func&lt;/code&gt; . Подпрограмма, которая не определена, по-прежнему может быть вызываемой: ее пакет может иметь метод &lt;code&gt;AUTOLOAD&lt;/code&gt; , который запускает ее существование при первом вызове; см. &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="172f346295165efa4fd86444269a98fd3b778c01" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; to check whether subroutine &lt;code&gt;&amp;amp;func&lt;/code&gt; has ever been defined. The return value is unaffected by any forward declarations of &lt;code&gt;&amp;amp;func&lt;/code&gt; . A subroutine that is not defined may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; чтобы проверить, были ли когда-либо определены подпрограмма &lt;code&gt;&amp;amp;func&lt;/code&gt; . На возвращаемое значение не влияют какие-либо предварительные объявления &lt;code&gt;&amp;amp;func&lt;/code&gt; . Подпрограмма, которая не определена, по-прежнему может быть вызываемой: ее пакет может иметь метод &lt;code&gt;AUTOLOAD&lt;/code&gt; , который запускает ее существование при первом вызове; см. &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b5f7479dd4b17df91be39e0264b553fbc922288" translate="yes" xml:space="preserve">
          <source>You may also use backticks to invoke a DCL subprocess, whose output is used as the return value of the expression. The string between the backticks is handled as if it were the argument to the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; operator (see below). In this case, Perl will wait for the subprocess to complete before continuing.</source>
          <target state="translated">Вы также можете использовать обратные кавычки для вызова подпроцесса DCL, выходные данные которого используются как возвращаемое значение выражения. Строка между обратными кавычками обрабатывается так, как если бы она была аргументом &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; оператора (см. Ниже). В этом случае Perl будет ждать завершения подпроцесса, прежде чем продолжить.</target>
        </trans-unit>
        <trans-unit id="5448f65c98891197c6cecbe08ead986b82724f17" translate="yes" xml:space="preserve">
          <source>You may also use dmake. See &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; above on how to get it.</source>
          <target state="translated">Вы также можете использовать dmake. См. Раздел &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; выше, чтобы узнать, как его получить.</target>
        </trans-unit>
        <trans-unit id="3196fa8d2ff4d6ac1033b15a7916441466060e42" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt; module (part of the standard perl distribution), but be warned that it has a different order of arguments from &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt; (see &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;).</source>
          <target state="translated">Вы также можете использовать модуль &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; (часть стандартного дистрибутива perl), но имейте в виду, что он имеет другой порядок аргументов, чем &lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; (см. &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b7ef88e606ea55cb21f76eea0e0de1fb7b9db2f" translate="yes" xml:space="preserve">
          <source>You may also want to look at one other option for building a perl that will work on Windows: the README.cygwin file, which give a different set of rules to build a perl for Windows. This method will probably enable you to build a more Unix-compatible perl, but you will also need to download and use various other build-time and run-time support software described in that file.</source>
          <target state="translated">Вы также можете посмотреть еще один вариант создания perl,который будет работать под Windows:файл README.cygwin,который дает другой набор правил для создания perl для Windows.Этот метод,вероятно,позволит вам собрать более Unix-совместимый perl,но вам также нужно будет загрузить и использовать различные другие программы для поддержки сборки и выполнения,описанные в этом файле.</target>
        </trans-unit>
        <trans-unit id="47d8e5afa5f51ce60391c15623a30d357b47dac4" translate="yes" xml:space="preserve">
          <source>You may also want to override the &lt;b&gt;begin_input()&lt;/b&gt; and &lt;b&gt;end_input()&lt;/b&gt; methods for your subclass (to perform any needed per-file and/or per-document initialization or cleanup).</source>
          <target state="translated">Вы также можете захотеть переопределить &lt;b&gt;методы begin_input ()&lt;/b&gt; и &lt;b&gt;end_input ()&lt;/b&gt; для вашего подкласса (чтобы выполнить любую необходимую инициализацию или очистку для каждого файла и / или документа).</target>
        </trans-unit>
        <trans-unit id="fad70035f3a1b89b3667a331878011a9d50cf74f" translate="yes" xml:space="preserve">
          <source>You may also want to read over the source for &lt;code&gt;File::Findgrep&lt;/code&gt; and its constituent modules -- they are a complete (if small) example application that uses Maketext.</source>
          <target state="translated">Вы также можете прочитать исходный код &lt;code&gt;File::Findgrep&lt;/code&gt; и составляющих его модулей - они представляют собой законченный (если небольшой) пример приложения, использующего Maketext.</target>
        </trans-unit>
        <trans-unit id="32c591edfbc105cf26f618c0c72cc57761fceff2" translate="yes" xml:space="preserve">
          <source>You may also wish to discuss with the translators the question of how to relate different subforms of the same language tag, considering how this reacts with &lt;code&gt;get_handle&lt;/code&gt; 's treatment of these. For example, if a user accepts interfaces in &quot;en, fr&quot;, and you have interfaces available in &quot;en-US&quot; and &quot;fr&quot;, what should they get? You may wish to resolve this by establishing that &quot;en&quot; and &quot;en-US&quot; are effectively synonymous, by having one class zero-derive from the other.</source>
          <target state="translated">Вы также можете обсудить с переводчиками вопрос о том, как связать различные подчиненные формы одного и того же языкового тега, учитывая, как это реагирует на &lt;code&gt;get_handle&lt;/code&gt; обработку get_handle . Например, если пользователь принимает интерфейсы в &amp;laquo;en, fr&amp;raquo;, а у вас есть интерфейсы в &amp;laquo;en-US&amp;raquo; и &amp;laquo;fr&amp;raquo;, что они должны получить? Вы можете решить эту проблему, установив, что &amp;laquo;en&amp;raquo; и &amp;laquo;en-US&amp;raquo; фактически синонимичны, имея один класс, производный от другого.</target>
        </trans-unit>
        <trans-unit id="05003e2911012bca46d826b18714273b702cbb78" translate="yes" xml:space="preserve">
          <source>You may also, in the Bourne shell tradition, specify an EXPR beginning with &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;, in which case the rest of the string is interpreted as the name of a filehandle (or file descriptor, if numeric) to be duped (as &lt;code&gt;dup(2)&lt;/code&gt; ) and opened. You may use &lt;code&gt;&amp;amp;&lt;/code&gt; after &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&lt;/code&gt;, &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; , and &lt;code&gt;+&amp;lt;&lt;/code&gt; . The mode you specify should match the mode of the original filehandle. (Duping a filehandle does not take into account any existing contents of IO buffers.) If you use the three-argument form, then you can pass either a number, the name of a filehandle, or the normal &quot;reference to a glob&quot;.</source>
          <target state="translated">Вы также можете, в традиции оболочки Bourne, указать EXPR, начинающийся с &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt; , и в этом случае остальная часть строки интерпретируется как имя дескриптора файла (или дескриптора файла, если числовой), который нужно дублировать (как &lt;code&gt;dup(2)&lt;/code&gt; ) и открыл. Вы можете использовать &lt;code&gt;&amp;amp;&lt;/code&gt; после &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;+&amp;lt;&lt;/code&gt; . Указанный вами режим должен соответствовать режиму исходного дескриптора файла. (При дублировании дескриптора файла не учитывается существующее содержимое буферов ввода-вывода.) Если вы используете форму с тремя аргументами, вы можете передать либо число, либо имя дескриптора файла, либо обычную &amp;laquo;ссылку на глобус&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="1c5fc563eb0d1fd26ae839cfa02427332324573f" translate="yes" xml:space="preserve">
          <source>You may ask whether one of these was implemented on the system Perl was built on by asking the importable &lt;code&gt;pw_has&lt;/code&gt; function about them. This function returns true if all parameters are supported fields on the build platform, false if one or more were not, and raises an exception if you asked about a field that Perl never knows how to provide. Parameters may be in a space-separated string, or as separate arguments. If you pass no parameters, the function returns the list of &lt;code&gt;struct pwd&lt;/code&gt; fields supported by your build platform's C library, as a list in list context, or a space-separated string in scalar context. Note that just because your C library had a field doesn't necessarily mean that it's fully implemented on that system.</source>
          <target state="translated">Вы можете спросить, был ли один из них реализован в системе, на которой был построен Perl, спросив о них &lt;code&gt;pw_has&lt;/code&gt; функцию pw_has . Эта функция возвращает истину, если все параметры являются поддерживаемыми полями на платформе сборки, ложь, если одно или несколько не поддерживаются, и вызывает исключение, если вы спрашиваете о поле, которое Perl никогда не знает, как предоставить. Параметры могут быть в виде строки, разделенной пробелами, или в виде отдельных аргументов. Если вы не передаете параметры, функция возвращает список полей &lt;code&gt;struct pwd&lt;/code&gt; , поддерживаемых библиотекой C вашей платформы сборки, в виде списка в контексте списка или строки, разделенной пробелами в скалярном контексте. Обратите внимание, что наличие поля в вашей библиотеке C не обязательно означает, что оно полностью реализовано в этой системе.</target>
        </trans-unit>
        <trans-unit id="56003b76083072e5d28f4c38591744948d360c03" translate="yes" xml:space="preserve">
          <source>You may at this point want to consider whether your base class (Projname::L10N), from which all lexicons inherit from (Projname::L10N::en, Projname::L10N::es, etc.), should be an _AUTO lexicon. It may be true that in theory, all needed messages will be in each language class; but in the presumably unlikely or &quot;impossible&quot; case of lookup failure, you should consider whether your program should throw an exception, emit text in English (or whatever your project's first language is), or some more complex solution as described in the section &quot;Controlling Lookup Failure&quot;, above.</source>
          <target state="translated">В данный момент вы можете рассмотреть,должен ли ваш базовый класс (Projname::L10N),от которого наследуются все лексиконы (Projname::L10N::en,Projname::L10N::es,и т.д.),быть _AUTO лексиконом.Может быть,теоретически все нужные сообщения будут в каждом классе языка;но в предположительно маловероятном или &quot;невозможном&quot; случае неудачи поиска,вам следует подумать,должна ли ваша программа бросить исключение,выдать текст на английском языке (или на любом другом языке вашего проекта),или какое-нибудь более сложное решение,как описано выше в разделе &quot;Управление неудачей при поиске&quot;.</target>
        </trans-unit>
        <trans-unit id="00dd50349ec2812a0e8ba87a508b17b844d30458" translate="yes" xml:space="preserve">
          <source>You may be able to figure out what's going wrong using the Perl debugger. For information about how to use the debugger &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;.</source>
          <target state="translated">Вы можете выяснить, что происходит не так, используя отладчик Perl. Для получения информации о том, как использовать отладчик &lt;b&gt;perldoc &lt;/b&gt;&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="538c1768e7dd08c154327dd9d81d8469210ac3b8" translate="yes" xml:space="preserve">
          <source>You may be mixing the Tru64 cc/ar/ld with the GNU gcc/ar/ld. That may work, but sometimes it doesn't (your gcc or GNU utils may have been compiled for an incompatible OS release).</source>
          <target state="translated">Возможно,вы смешиваете Tru64 cc/ar/ld с GNU gcc/ar/ld.Это может работать,но иногда нет (ваш gcc или GNU utils могли быть скомпилированы для несовместимого выпуска операционной системы).</target>
        </trans-unit>
        <trans-unit id="569474da0977b8a6d57c606d4bf816045d439deb" translate="yes" xml:space="preserve">
          <source>You may be more comfortable with the Perl version of that:</source>
          <target state="translated">Возможно,вам больше понравится Perl-версия:</target>
        </trans-unit>
        <trans-unit id="a2c2934cf1eab265e83a97c11bed16b38a8b5801" translate="yes" xml:space="preserve">
          <source>You may be presented with strings in any of these equivalent forms. There is currently nothing in Perl 5 that ignores the differences. So you'll have to specially hanlde it. The usual advice is to convert your inputs to &lt;code&gt;NFD&lt;/code&gt; before processing further.</source>
          <target state="translated">Вам могут быть представлены строки в любой из этих эквивалентных форм. В настоящее время в Perl 5 нет ничего, что игнорировало бы различия. Так что вам придется специально его обработать. Обычный совет - преобразовать ваши входные данные в &lt;code&gt;NFD&lt;/code&gt; перед дальнейшей обработкой.</target>
        </trans-unit>
        <trans-unit id="58f64d73709bb7f46995ccc9ddf584cf761fc186" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;can&lt;/code&gt; as a class (static) method or an object method.</source>
          <target state="translated">Вы можете вызывать &lt;code&gt;can&lt;/code&gt; как метод класса (статический) или как объектный метод.</target>
        </trans-unit>
        <trans-unit id="8cf034da6832021586a2104fbbd0c08a1605f5bc" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;hv_delete&lt;/code&gt; or &lt;code&gt;hv_delete_ent&lt;/code&gt; on the hash entry that the iterator currently points to, without losing your place or invalidating your iterator. Note that in this case the current entry is deleted from the hash with your iterator holding the last reference to it. Your iterator is flagged to free the entry on the next call to &lt;code&gt;hv_iternext&lt;/code&gt; , so you must not discard your iterator immediately else the entry will leak - call &lt;code&gt;hv_iternext&lt;/code&gt; to trigger the resource deallocation.</source>
          <target state="translated">Вы можете вызвать &lt;code&gt;hv_delete&lt;/code&gt; или &lt;code&gt;hv_delete_ent&lt;/code&gt; для записи хэша, на которую в настоящее время указывает итератор, не теряя своего места или не делая свой итератор недействительным. Обратите внимание, что в этом случае текущая запись удаляется из хэша, а ваш итератор содержит последнюю ссылку на нее. Ваш итератор помечен как освобождающий запись при следующем вызове &lt;code&gt;hv_iternext&lt;/code&gt; , поэтому вы не должны сразу отбрасывать свой итератор, иначе запись будет протекать - вызовите &lt;code&gt;hv_iternext&lt;/code&gt; , чтобы вызвать освобождение ресурса.</target>
        </trans-unit>
        <trans-unit id="9be40ceb1a7306a76b520e9584d2eca0a12452f8" translate="yes" xml:space="preserve">
          <source>You may change the pager which is used via &lt;code&gt;o pager=...&lt;/code&gt; command.</source>
          <target state="translated">Вы можете изменить пейджер , который используется с помощью &lt;code&gt;o pager=...&lt;/code&gt; команде.</target>
        </trans-unit>
        <trans-unit id="8d0d219cb50b9b95de99bdba2a6790e3027b1988" translate="yes" xml:space="preserve">
          <source>You may choose one of six different protocols to use for the ping. The &quot;tcp&quot; protocol is the default. Note that a live remote host may still fail to be pingable by one or more of these protocols. For example, www.microsoft.com is generally alive but not &quot;icmp&quot; pingable.</source>
          <target state="translated">Вы можете выбрать один из шести различных протоколов для пинга.По умолчанию используется протокол &quot;tcp&quot;.Обратите внимание,что живой удаленный хост все еще может не быть доступен для пингования по одному или нескольким из этих протоколов.Например,www.microsoft.com обычно живой,но не &quot;icmp&quot; pingable.</target>
        </trans-unit>
        <trans-unit id="5b9386b09cdd1212e7410c2ab62737e2149c7f2b" translate="yes" xml:space="preserve">
          <source>You may create a shared library that refers to another library, which may be either an archive library or a shared library. If this second library is a shared library, this is called a &quot;dependent library&quot;. The dependent library's name is recorded in the main shared library, but it is not linked into the shared library. Instead, it is loaded when the main shared library is loaded. This can cause problems if you build an extension on one system and move it to another system where the libraries may not be located in the same place as on the first system.</source>
          <target state="translated">Вы можете создать разделяемую библиотеку,которая относится к другой библиотеке,которая может быть как архивной,так и разделяемой.Если эта вторая библиотека является разделяемой,то она называется &quot;зависимой библиотекой&quot;.Имя зависимой библиотеки записывается в главной разделяемой библиотеке,но не связывается с разделяемой библиотекой.Вместо этого оно загружается при загрузке основной разделяемой библиотеки.Это может вызвать проблемы,если вы собираете расширение на одной системе и переносите его в другую систему,где библиотеки могут быть расположены не в том же месте,что и на первой системе.</target>
        </trans-unit>
        <trans-unit id="9c69978ae72909c6a0d4c9ce7bda602f4029ade9" translate="yes" xml:space="preserve">
          <source>You may declare &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables at the outermost scope of a file to hide any such identifiers from the world outside that file. This is similar in spirit to C's static variables when they are used at the file level. To do this with a subroutine requires the use of a closure (an anonymous function that accesses enclosing lexicals). If you want to create a private subroutine that cannot be called from outside that block, it can declare a lexical variable containing an anonymous sub reference:</source>
          <target state="translated">Вы можете объявить &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; переменные во внешней области файла, чтобы скрыть любые такие идентификаторы от мира за пределами этого файла. По духу это похоже на статические переменные C, когда они используются на уровне файла. Чтобы сделать это с помощью подпрограммы, необходимо использовать замыкание (анонимная функция, которая обращается к включающим лексическим элементам). Если вы хотите создать частную подпрограмму, которую нельзя вызывать извне этого блока, она может объявить лексическую переменную, содержащую анонимную под-ссылку:</target>
        </trans-unit>
        <trans-unit id="4c485e566982c516f185802a5bb8005684c87aaf" translate="yes" xml:space="preserve">
          <source>You may do &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads qw(yield)&lt;/code&gt; , and then just use &lt;code&gt;yield()&lt;/code&gt; in your code.</source>
          <target state="translated">Вы можете &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads qw(yield)&lt;/code&gt; , а затем просто использовать &lt;code&gt;yield()&lt;/code&gt; в своем коде.</target>
        </trans-unit>
        <trans-unit id="ad59ee540ee6c5334c4114152f24df062a49e4a1" translate="yes" xml:space="preserve">
          <source>You may encounter the following warning message at Perl startup:</source>
          <target state="translated">При вводе в эксплуатацию Perl Вы можете столкнуться со следующим предупредительным сообщением:</target>
        </trans-unit>
        <trans-unit id="294037a277c0cf3bb9e6ace3733986ce5d32b057" translate="yes" xml:space="preserve">
          <source>You may find it helpful to have a &quot;macro dictionary&quot;, which you can produce by saying &lt;code&gt;cpp -dM perl.c | &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; . Even then,</source>
          <target state="translated">Возможно, вам будет полезно иметь &amp;laquo;словарь макросов&amp;raquo;, который вы можете создать, сказав &lt;code&gt;cpp -dM perl.c | &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; . Даже тогда,</target>
        </trans-unit>
        <trans-unit id="972b606b3734fb1680ed24e777ce569b72a6f320" translate="yes" xml:space="preserve">
          <source>You may find it helpful to use letter case to indicate the scope or nature of a variable. For example:</source>
          <target state="translated">Возможно,вам будет полезно использовать регистр букв для обозначения области применения или характера переменной.Например:</target>
        </trans-unit>
        <trans-unit id="c25f48a1ca763d34150d8bac8dc30aeefcd980b5" translate="yes" xml:space="preserve">
          <source>You may get a bus error core dump from the op/pwent or op/grent tests. If compiled with -g you will see a stack trace much like the following:</source>
          <target state="translated">Вы можете получить дамп ядра ошибки шины из op/pwent или op/grent тестов.При компиляции с помощью -g вы увидите трассу стека,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="108b6e50ab8abc6a709ca1e727e6115ff077c1f8" translate="yes" xml:space="preserve">
          <source>You may get a warning when doing a threaded build:</source>
          <target state="translated">Вы можете получить предупреждение,когда делаете потоковую сборку:</target>
        </trans-unit>
        <trans-unit id="22f1e826336ce72e185bd16ea03c1b6430323fa0" translate="yes" xml:space="preserve">
          <source>You may have an optional comma before the closing parenthesis of a list literal, so that you can say:</source>
          <target state="translated">У вас может быть необязательная запятая перед закрывающей скобкой буквенного списка,так что вы можете сказать:</target>
        </trans-unit>
        <trans-unit id="94ced856f582ad7ad5a45cb74870b4f4ae27ed8b" translate="yes" xml:space="preserve">
          <source>You may have to add extra libraries as well. Which ones? Perhaps those printed by</source>
          <target state="translated">Возможно,вам придется добавить дополнительные библиотеки.Какие из них? Возможно,те,которые напечатаны</target>
        </trans-unit>
        <trans-unit id="adc5eceb43ab39f0721310d8a087b92c4cf96e19" translate="yes" xml:space="preserve">
          <source>You may have to re-read this entire section a few times...</source>
          <target state="translated">Возможно,вам придется перечитать весь этот раздел несколько раз...</target>
        </trans-unit>
        <trans-unit id="9e568be51255384d52fb1c41217e7d274f15f0ca" translate="yes" xml:space="preserve">
          <source>You may ignore the error message for the first element of the archive (this doesn't look like a tar archive / skipping to next file...), it's only the directory which will be created automatically anyway.</source>
          <target state="translated">Вы можете проигнорировать сообщение об ошибке для первого элемента архива (это не выглядит как tar-архив/переход к следующему файлу...),это только каталог,который будет создан автоматически в любом случае.</target>
        </trans-unit>
        <trans-unit id="927c6b1abd9425ad341215fb99d87b72f734b089" translate="yes" xml:space="preserve">
          <source>You may intersperse documentation and Perl code within the .pm file. In fact, if you want to use method autoloading, you must do this, as the comment inside the .pm file explains.</source>
          <target state="translated">Вы можете интерферировать документацию и Perl-код в файле .pm.Фактически,если вы хотите использовать автозагрузку метода,вы должны сделать это,как объясняет комментарий внутри файла .pm.</target>
        </trans-unit>
        <trans-unit id="b911c24edf96323dfee0b5a16ac2655f93ba03e8" translate="yes" xml:space="preserve">
          <source>You may lock arrays and hashes as well as scalars. Locking an array, though, will not block subsequent locks on array elements, just lock attempts on the array itself.</source>
          <target state="translated">Вы можете блокировать массивы и хэши,а также скаляры.Блокировка массива,однако,не будет блокировать последующие блокировки на элементах массива,а только попытки блокировки на самом массиве.</target>
        </trans-unit>
        <trans-unit id="00344360ec287bdb5274fbd2e88953a8065f329a" translate="yes" xml:space="preserve">
          <source>You may look into the file</source>
          <target state="translated">Вы можете заглянуть в файл</target>
        </trans-unit>
        <trans-unit id="9516dc740ae77942efcf6e8fd80e5504a8b1fd26" translate="yes" xml:space="preserve">
          <source>You may mail your bug reports (be sure to include full configuration information as output by the myconfig program in the perl source tree, or by &lt;code&gt;perl -V&lt;/code&gt; ) to perlbug@perl.org . If you've succeeded in compiling perl, the &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; script in the</source>
          <target state="translated">Вы можете отправить свои отчеты об ошибках (обязательно включите полную информацию о конфигурации, выводимую программой myconfig в дереве исходных текстов perl, или &lt;code&gt;perl -V&lt;/code&gt; ) на perlbug@perl.org. Если вам удалось скомпилировать perl, сценарий &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; в</target>
        </trans-unit>
        <trans-unit id="9b598b6ebd49a9a2c8435acfea60cd639dc39cf9" translate="yes" xml:space="preserve">
          <source>You may need the following GNU programs in order to install perl:</source>
          <target state="translated">Для установки perl вам могут понадобиться следующие программы GNU:</target>
        </trans-unit>
        <trans-unit id="65000230f7491853635f8932fbc750e90e8f3c2d" translate="yes" xml:space="preserve">
          <source>You may need to be</source>
          <target state="translated">Возможно,вам понадобится</target>
        </trans-unit>
        <trans-unit id="64a7e3cbbe6d605d5c662e6d4594cef6c6e25ffe" translate="yes" xml:space="preserve">
          <source>You may need to carry out some system configuration tasks before running the Configure script for Perl.</source>
          <target state="translated">Вам может понадобиться выполнить некоторые задачи по настройке системы перед запуском скрипта Configure для Perl.</target>
        </trans-unit>
        <trans-unit id="d10056deec90cd668c3f12e0f304b01dde73621d" translate="yes" xml:space="preserve">
          <source>You may need to make this change to scripts written for a Unix system which expect that after a call to &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, no files with the names passed to &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will exist. (Note: This can be changed at compile time; if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; and &lt;code&gt;$Config{'d_unlink_all_versions'}&lt;/code&gt; is &lt;code&gt;define&lt;/code&gt; , then &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete all versions of a file on the first call.)</source>
          <target state="translated">Возможно, вам потребуется внести это изменение в сценарии, написанные для системы Unix, которые ожидают, что после вызова &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; файлы с именами, переданными на &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ,не будут существовать. (Примечание: Это может быть изменено во время компиляции, если вы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; и &lt;code&gt;$Config{'d_unlink_all_versions'}&lt;/code&gt; будет &lt;code&gt;define&lt;/code&gt; , то &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; удалят все версии файла на первый вызов.)</target>
        </trans-unit>
        <trans-unit id="3ec14405f03df7cdb78bb123848d4a14d07a8d45" translate="yes" xml:space="preserve">
          <source>You may not (usefully) use a reference as the key to a hash. It will be converted into a string:</source>
          <target state="translated">Вы можете не использовать (с пользой)ссылку в качестве ключа к хэшу.Она будет преобразована в строку:</target>
        </trans-unit>
        <trans-unit id="d8a434e0ce88a99bf8a5488e4b0fad4981c52cd7" translate="yes" xml:space="preserve">
          <source>You may not even need to write the module. Check whether it's already been done in Perl, and avoid re-inventing the wheel unless you have a good reason.</source>
          <target state="translated">Возможно,вам даже не понадобится записывать модуль.Убедитесь,что это уже сделано на Perl,и избегайте повторного изобретения колеса,если у вас нет веских причин.</target>
        </trans-unit>
        <trans-unit id="936986b9e470ced1f7fdf65dd9ad838a32d13386" translate="yes" xml:space="preserve">
          <source>You may not use data derived from outside your program to affect something else outside your program--at least, not by accident. All command line arguments, environment variables, locale information (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), results of certain system calls (&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink()&lt;/a&gt;&lt;/code&gt;, the variable of &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread()&lt;/a&gt;&lt;/code&gt;, the messages returned by &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv()&lt;/a&gt;&lt;/code&gt;, the password, gcos and shell fields returned by the &lt;code&gt;getpwxxx()&lt;/code&gt; calls), and all file input are marked as &quot;tainted&quot;. Tainted data may not be used directly or indirectly in any command that invokes a sub-shell, nor in any command that modifies files, directories, or processes, &lt;b&gt;with the following exceptions&lt;/b&gt;:</source>
          <target state="translated">Вы не можете использовать данные, полученные вне вашей программы, чтобы повлиять на что-то еще вне вашей программы - по крайней мере, не случайно. Все аргументы командной строки, переменные среды, информация о локали (см. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; ), результаты определенных системных вызовов ( &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink()&lt;/a&gt;&lt;/code&gt; , переменная &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread()&lt;/a&gt;&lt;/code&gt; , сообщения, возвращаемые &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv()&lt;/a&gt;&lt;/code&gt; , пароль, gcos и оболочка поля, возвращаемые &lt;code&gt;getpwxxx()&lt;/code&gt; ), и весь ввод файла помечается как &quot;испорченный&quot;. Испорченные данные нельзя использовать прямо или косвенно ни в одной команде, которая вызывает суб-оболочку, ни в какой команде, изменяющей файлы, каталоги или процессы, &lt;b&gt;за следующими исключениями&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="656cab64db0943d80c2c347bdd21c8a07c645dc2" translate="yes" xml:space="preserve">
          <source>You may once in a while try a &quot;make microperl&quot; to see whether we can still compile Perl with just the bare minimum of interfaces. (See README.micro.)</source>
          <target state="translated">Время от времени можно попробовать &quot;make microperl&quot;,чтобы посмотреть,сможем ли мы скомпилировать Perl с минимальным количеством интерфейсов.(См.README.micro.)</target>
        </trans-unit>
        <trans-unit id="67acb9777380059ff280be22d8c3f8940dae8cc7" translate="yes" xml:space="preserve">
          <source>You may or may not choose to follow this usage. But never write &quot;PERL&quot;, because perl is not an acronym.</source>
          <target state="translated">Вы можете следовать или не следовать этому использованию.Но никогда не пишите &quot;PERL&quot;,потому что perl не является аббревиатурой.</target>
        </trans-unit>
        <trans-unit id="613fbbe8af8f9b1517992c7dc5a2a0283f5a8c13" translate="yes" xml:space="preserve">
          <source>You may override this as you like; Maketext doesn't use it for anything.</source>
          <target state="translated">Можешь отменять это,как хочешь,Мактекст ни для чего не использует.</target>
        </trans-unit>
        <trans-unit id="471b54cb9da3fd2429477493f77011df7439603d" translate="yes" xml:space="preserve">
          <source>You may run into memory limits, in which case you should use the -Xmx option:</source>
          <target state="translated">Вы можете столкнуться с ограничениями по памяти,в этом случае следует использовать опцию -Xmx:</target>
        </trans-unit>
        <trans-unit id="2b87668ec2b109de55eff18c1a93548bfc928cdb" translate="yes" xml:space="preserve">
          <source>You may see a message about errors while extracting</source>
          <target state="translated">Вы можете увидеть сообщение об ошибках при извлечении</target>
        </trans-unit>
        <trans-unit id="567b2cee3d4edcc53c5dd10d0ae801a480e80721" translate="yes" xml:space="preserve">
          <source>You may see some messages during Configure that seem suspicious.</source>
          <target state="translated">Во время настройки вы можете увидеть некоторые сообщения,которые кажутся подозрительными.</target>
        </trans-unit>
        <trans-unit id="3d40b88fd93e71db6719630cc623bcd6de5e08cd" translate="yes" xml:space="preserve">
          <source>You may see the term &quot;invariant&quot; character or code point. This simply means that the character has the same numeric value and representation when encoded in UTF-8 (or UTF-EBCDIC) as when not. (Note that this is a very different concept from &lt;a href=&quot;#The-13-variant-characters&quot;&gt;The 13 variant characters&lt;/a&gt; mentioned above. Careful prose will use the term &quot;UTF-8 invariant&quot; instead of just &quot;invariant&quot;, but most often you'll see just &quot;invariant&quot;.) For example, the ordinal value of &quot;A&quot; is 193 in most EBCDIC code pages, and also is 193 when encoded in UTF-EBCDIC. All UTF-8 (or UTF-EBCDIC) variant code points occupy at least two bytes when encoded in UTF-8 (or UTF-EBCDIC); by definition, the UTF-8 (or UTF-EBCDIC) invariant code points are exactly one byte whether encoded in UTF-8 (or UTF-EBCDIC), or not. (By now you see why people typically just say &quot;UTF-8&quot; when they also mean &quot;UTF-EBCDIC&quot;. For the rest of this document, we'll mostly be casual about it too.) In ASCII UTF-8, the code points corresponding to the lowest 128 ordinal numbers (0 - 127: the ASCII characters) are invariant. In UTF-EBCDIC, there are 160 invariant characters. (If you care, the EBCDIC invariants are those characters which have ASCII equivalents, plus those that correspond to the C1 controls (128 - 159 on ASCII platforms).)</source>
          <target state="translated">Вы можете увидеть термин &amp;laquo;инвариантный&amp;raquo; символ или кодовая точка. Это просто означает, что символ имеет то же числовое значение и представление в кодировке UTF-8 (или UTF-EBCDIC), что и в противном случае. (Обратите внимание, что это очень отличается от концепции &lt;a href=&quot;#The-13-variant-characters&quot;&gt;13 вариантов символов&lt;/a&gt;упомянутое выше. Тщательная проза будет использовать термин &amp;laquo;инвариант UTF-8&amp;raquo; вместо просто &amp;laquo;инвариант&amp;raquo;, но чаще всего вы увидите просто &amp;laquo;инвариант&amp;raquo;.) Например, порядковое значение &amp;laquo;A&amp;raquo; составляет 193 в большинстве кодовых страниц EBCDIC, а также 193 при кодировании в UTF-EBCDIC. Все кодовые точки вариантов UTF-8 (или UTF-EBCDIC) занимают не менее двух байтов при кодировании в UTF-8 (или UTF-EBCDIC); по определению, инвариантные кодовые точки UTF-8 (или UTF-EBCDIC) представляют собой ровно один байт, независимо от того, закодированы они в UTF-8 (или UTF-EBCDIC) или нет. (Теперь вы понимаете, почему люди обычно просто говорят &amp;laquo;UTF-8&amp;raquo;, когда они также имеют в виду &amp;laquo;UTF-EBCDIC&amp;raquo;. В остальной части этого документа мы также будем в основном небрежно относиться к этому.) В ASCII UTF-8 символ кодовые точки, соответствующие 128 наименьшим порядковым номерам (0&amp;ndash;127: символы ASCII), являются неизменными.В UTF-EBCDIC есть 160 неизменяемых символов. (Если вам интересно, инварианты EBCDIC - это те символы, которые имеют эквиваленты ASCII, плюс те, которые соответствуют элементам управления C1 (128 - 159 на платформах ASCII).)</target>
        </trans-unit>
        <trans-unit id="fa093d809cde8bd253ba564171319f316c1ecb65" translate="yes" xml:space="preserve">
          <source>You may set the &lt;code&gt;dw_size&lt;/code&gt; option to limit the amount of data that can be saved in the deferred write buffer. This limit may not exceed the total memory limit. For example, if you set &lt;code&gt;dw_size&lt;/code&gt; to 1000 and &lt;code&gt;memory&lt;/code&gt; to 2500, that means that no more than 1000 bytes of deferred writes will be saved up. The space available for the read cache will vary, but it will always be at least 1500 bytes (if the deferred write buffer is full) and it could grow as large as 2500 bytes (if the deferred write buffer is empty.)</source>
          <target state="translated">Вы можете установить опцию &lt;code&gt;dw_size&lt;/code&gt; , чтобы ограничить объем данных, которые могут быть сохранены в буфере отложенной записи. Этот предел не может превышать общий предел памяти. Например, если вы установите &lt;code&gt;dw_size&lt;/code&gt; на 1000, а &lt;code&gt;memory&lt;/code&gt; на 2500, это означает, что будет сохранено не более 1000 байтов отложенной записи. Пространство, доступное для кэша чтения, может быть разным, но оно всегда будет составлять не менее 1500 байт (если буфер отложенной записи заполнен) и может увеличиться до 2500 байт (если буфер отложенной записи пуст).</target>
        </trans-unit>
        <trans-unit id="fbe802847d2e9437afa3772a7f3ed12ac0cb75f5" translate="yes" xml:space="preserve">
          <source>You may use any combination of these three values 'SUCCESS','FAILURE','DELAY' in the anonymous array reference as defined by RFC3461 (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3461.txt&quot;&gt;http://www.ietf.org/rfc/rfc3461.txt&lt;/a&gt; for more information. Note: quotations in this topic from same.).</source>
          <target state="translated">Вы можете использовать любую комбинацию этих трех значений &amp;laquo;УСПЕХ&amp;raquo;, &amp;laquo;ОТКАЗ&amp;raquo;, &amp;laquo;ЗАДЕРЖКА&amp;raquo; в ссылке на анонимный массив, как определено в RFC3461 (см. &lt;a href=&quot;http://www.ietf.org/rfc/rfc3461.txt&quot;&gt;Http://www.ietf.org/rfc/rfc3461.txt&lt;/a&gt; для получения дополнительной информации. Примечание: цитаты в этой теме из того же.).</target>
        </trans-unit>
        <trans-unit id="3726ab64bc777be024735266d80e288f34e7bd83" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;mv&lt;/code&gt; alias for this function in the same way that you may use the &lt;code&gt;cp&lt;/code&gt; alias for &lt;code&gt;copy&lt;/code&gt; .</source>
          <target state="translated">Вы можете использовать псевдоним &lt;code&gt;mv&lt;/code&gt; для этой функции так же, как псевдоним &lt;code&gt;cp&lt;/code&gt; для &lt;code&gt;copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9368b724095114d596f9a9bbd047855f785492a1" translate="yes" xml:space="preserve">
          <source>You may use the syntax &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; File::Copy &quot;cp&quot;&lt;/code&gt; to get at the &lt;code&gt;cp&lt;/code&gt; alias for this function. The syntax is</source>
          <target state="translated">Вы можете использовать синтаксис &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; File::Copy &quot;cp&quot;&lt;/code&gt; чтобы получить псевдоним &lt;code&gt;cp&lt;/code&gt; для этой функции. Синтаксис</target>
        </trans-unit>
        <trans-unit id="2ef4fe61a399da32f9cc97283defa049459439a2" translate="yes" xml:space="preserve">
          <source>You may want to configure something like</source>
          <target state="translated">Возможно,вы захотите настроить что-то вроде</target>
        </trans-unit>
        <trans-unit id="274166c866cd17a4a70da3e9dd16359e3df50e0e" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Digits&quot;&gt;/\d/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Вместо этого вы можете использовать конструкцию &lt;code&gt;&lt;a href=&quot;perlrecharclass#Digits&quot;&gt;/\d/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d3a0b34238678a39ac71745f1262bf0f4700e24" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Whitespace&quot;&gt;/\s/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Вместо этого вы можете использовать конструкцию &lt;code&gt;&lt;a href=&quot;perlrecharclass#Whitespace&quot;&gt;/\s/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30ce0fc76dee65d768e8b8edbb86d17b3ec69cef" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Word-characters&quot;&gt;/\w/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Вместо этого вы можете использовать конструкцию &lt;code&gt;&lt;a href=&quot;perlrecharclass#Word-characters&quot;&gt;/\w/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="599db7e90374e2462ae43e1deb74b5ede6e00ac9" translate="yes" xml:space="preserve">
          <source>You may wish to put your version of perl in the PATH of all users by changing the link</source>
          <target state="translated">Вы можете поместить свою версию perl в PATH всех пользователей,изменив ссылку</target>
        </trans-unit>
        <trans-unit id="a667970ef9d2de2018d0cc9d89b6040168c92e68" translate="yes" xml:space="preserve">
          <source>You might also be interested in using the &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; to measure and compare code snippets.</source>
          <target state="translated">Вам также может быть интересно использовать &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; для измерения и сравнения фрагментов кода.</target>
        </trans-unit>
        <trans-unit id="f2fb8d4423459616a83c78e11c0c6368281abff5" translate="yes" xml:space="preserve">
          <source>You might also find it more fun to use the standard &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; module, or the &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; module's &lt;code&gt;$DB_RECNO&lt;/code&gt; bindings, which allow you to tie an array to a file so that accessing an element of the array actually accesses the corresponding line in the file.</source>
          <target state="translated">Вам также может быть интереснее использовать стандартный модуль &lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt; или &lt;a href=&quot;db_file&quot;&gt;привязки &lt;/a&gt; &lt;code&gt;$DB_RECNO&lt;/code&gt; DB_RECNO модуля DB_File , которые позволяют привязать массив к файлу, чтобы при доступе к элементу массива фактически была получена соответствующая строка в файл.</target>
        </trans-unit>
        <trans-unit id="e08469744ffe89846f236eef2581143171c3fbcd" translate="yes" xml:space="preserve">
          <source>You might also have loaded that from a function:</source>
          <target state="translated">Возможно,вы также загрузили это из функции:</target>
        </trans-unit>
        <trans-unit id="95a16ffa9a148d97aba69dab68818a05442a9c0f" translate="yes" xml:space="preserve">
          <source>You might also see the terms &lt;b&gt;getter&lt;/b&gt; and &lt;b&gt;setter&lt;/b&gt;. These are two types of accessors. A getter gets the attribute's value, while a setter sets it. Another term for a setter is &lt;b&gt;mutator&lt;/b&gt;</source>
          <target state="translated">Вы также можете увидеть термины &amp;laquo; &lt;b&gt;геттер&amp;raquo;&lt;/b&gt; и &amp;laquo; &lt;b&gt;сеттер&amp;raquo;&lt;/b&gt; . Это два типа аксессуаров. Получатель получает значение атрибута, а метод установки устанавливает его. Другой термин для сеттера - &lt;b&gt;мутатор.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a6f4008d05ac5a7684642f452fcea99bbe63649d" translate="yes" xml:space="preserve">
          <source>You might also think of closure as a way to write a subroutine template without using eval(). Here's a small example of how closures work:</source>
          <target state="translated">Вы также можете подумать о закрытии,как о способе написания шаблона подпрограммы без использования функции eval().Вот небольшой пример того,как работает закрытие:</target>
        </trans-unit>
        <trans-unit id="b07a183cbfa7c2c5ada23e1358bb836c0036ff82" translate="yes" xml:space="preserve">
          <source>You might also want to check out &lt;a href=&quot;perlfaq8#How-do-I-keep-my-own-module%2flibrary-directory%3f&quot;&gt;How do I keep my own module/library directory? in perlfaq8&lt;/a&gt;.</source>
          <target state="translated">Вы также можете проверить &lt;a href=&quot;perlfaq8#How-do-I-keep-my-own-module%2flibrary-directory%3f&quot;&gt;Как мне сохранить свой собственный каталог модулей / библиотек? в perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d50c5088a6a6db1dd16f71b5a0b7ad311259d2" translate="yes" xml:space="preserve">
          <source>You might also want to employ anonymous functions for simple signal handlers:</source>
          <target state="translated">Возможно,вы также захотите использовать анонимные функции для простых обработчиков сигналов:</target>
        </trans-unit>
        <trans-unit id="c4f0a4c3456aabab2b8397ba18c3d239195efdd9" translate="yes" xml:space="preserve">
          <source>You might also want to have GNU groff for OS/390 installed before running the &quot;make install&quot; step for Perl.</source>
          <target state="translated">Возможно,вам также захочется установить GNU groff для OS/390 перед выполнением шага &quot;make install&quot; для Perl.</target>
        </trans-unit>
        <trans-unit id="2fa0f7304d269ada4e265c5dcd91a35489923597" translate="yes" xml:space="preserve">
          <source>You might also want to trap any errors by wrapping an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; block around the whole thing.</source>
          <target state="translated">Вы также можете отловить любые ошибки, обернув все это блоком &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae14caefeb104abfd32e1ac4b08ddaa6c43442c2" translate="yes" xml:space="preserve">
          <source>You might be tempted to think that deferred writing is like transactions, with &lt;code&gt;flush&lt;/code&gt; as &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;discard&lt;/code&gt; as &lt;code&gt;rollback&lt;/code&gt; , but it isn't, so don't.</source>
          <target state="translated">Вы могли бы подумать , что отложило написание как сделки, с &lt;code&gt;flush&lt;/code&gt; , как &lt;code&gt;commit&lt;/code&gt; и &lt;code&gt;discard&lt;/code&gt; как &lt;code&gt;rollback&lt;/code&gt; , но это не так , так что нет.</target>
        </trans-unit>
        <trans-unit id="eadb7f27713b1af6126dec14d8fa3f25be31b545" translate="yes" xml:space="preserve">
          <source>You might be tempted to use &lt;code&gt;$#array + 1&lt;/code&gt; to tell you how many items there are in an array. Don't bother. As it happens, using &lt;code&gt;@array&lt;/code&gt; where Perl expects to find a scalar value (&quot;in scalar context&quot;) will give you the number of elements in the array:</source>
          <target state="translated">У вас может возникнуть соблазн использовать &lt;code&gt;$#array + 1&lt;/code&gt; чтобы узнать, сколько элементов находится в массиве. Не беспокойся. Как это бывает, использование &lt;code&gt;@array&lt;/code&gt; там, где Perl ожидает найти скалярное значение (&amp;laquo;в скалярном контексте&amp;raquo;), даст вам количество элементов в массиве:</target>
        </trans-unit>
        <trans-unit id="cdd5e43c44200a95eaa3aa45d374b3ef4d1b96c7" translate="yes" xml:space="preserve">
          <source>You might consider using just Math::BigInt or Math::BigFloat, since they allow you finer control over what get's done in which module/space. For instance, simple loop counters will be Math::BigInts under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bignum;&lt;/code&gt; and this is slower than keeping them as Perl scalars:</source>
          <target state="translated">Вы можете подумать об использовании только Math :: BigInt или Math :: BigFloat, поскольку они позволяют вам более точно контролировать, что делать в каком модуле / пространстве. Например, счетчики простых циклов будут Math :: BigInts при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bignum;&lt;/code&gt; и это медленнее, чем хранить их как скаляры Perl:</target>
        </trans-unit>
        <trans-unit id="602086881bebd3c9c81540dfd1686b9dc1e9a7c1" translate="yes" xml:space="preserve">
          <source>You might expect this to output &quot;12&quot;. In fact, it prints &quot;&amp;lt;&quot;: the ASCII result of treating &quot;|&quot; as a bitwise string operator - that is, the result of treating the operands as the strings &quot;4&quot; and &quot;8&quot; rather than numbers. The fact that numify (&lt;code&gt;0+&lt;/code&gt; ) is implemented but stringify (&lt;code&gt;&quot;&quot;&lt;/code&gt; ) isn't makes no difference since the latter is simply autogenerated from the former.</source>
          <target state="translated">Вы можете ожидать, что это выведет &amp;laquo;12&amp;raquo;. Фактически, он выводит &amp;laquo;&amp;lt;&amp;raquo;: результат обработки &amp;laquo;|&amp;raquo; в формате ASCII. как побитовый строковый оператор - то есть результат обработки операндов как строк &amp;laquo;4&amp;raquo; и &amp;laquo;8&amp;raquo;, а не чисел. Тот факт, что numify ( &lt;code&gt;0+&lt;/code&gt; ) реализован, но stringify ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) не имеет значения, поскольку последнее просто автоматически генерируется из первого.</target>
        </trans-unit>
        <trans-unit id="ec2b6e72cccd9ea401a92e1c584d3ce729f0ed23" translate="yes" xml:space="preserve">
          <source>You might find these links useful:</source>
          <target state="translated">Эти ссылки могут оказаться полезными:</target>
        </trans-unit>
        <trans-unit id="7041884103fb3be2206f9857bdd3e655cde0bf34" translate="yes" xml:space="preserve">
          <source>You might have expected test 3 to fail because it seems to a more general purpose version of test 1. The important difference between them is that test 3 contains a quantifier (&lt;code&gt;\D*&lt;/code&gt; ) and so can use backtracking, whereas test 1 will not. What's happening is that you've asked &quot;Is it true that at the start of $x, following 0 or more non-digits, you have something that's not 123?&quot; If the pattern matcher had let &lt;code&gt;\D*&lt;/code&gt; expand to &quot;ABC&quot;, this would have caused the whole pattern to fail.</source>
          <target state="translated">Вы могли ожидать, что тест 3 завершится неудачно, потому что он кажется более универсальной версией теста 1. Важное различие между ними состоит в том, что тест 3 содержит квантификатор ( &lt;code&gt;\D*&lt;/code&gt; ) и поэтому может использовать отслеживание с возвратом, тогда как тест 1 - нет. Что происходит, так это то, что вы спросили: &amp;laquo;Верно ли, что в начале $ x после 0 или более нецифровых цифр у вас есть что-то, что не 123?&amp;raquo; Если бы сопоставитель шаблонов позволил &lt;code&gt;\D*&lt;/code&gt; расшириться до &quot;ABC&quot;, это привело бы к сбою всего шаблона.</target>
        </trans-unit>
        <trans-unit id="f5bd0f9bdd3b3f8f6c3d7920cb7c553cce6d6284" translate="yes" xml:space="preserve">
          <source>You might like to read Mark Jason Dominus's &quot;Suffering From Buffering&quot; at &lt;a href=&quot;http://perl.plover.com/FAQs/Buffering.html&quot;&gt;http://perl.plover.com/FAQs/Buffering.html&lt;/a&gt; .</source>
          <target state="translated">Вы можете прочитать книгу Марка Джейсона Доминуса &amp;laquo;Страдание от буферизации&amp;raquo; по адресу &lt;a href=&quot;http://perl.plover.com/FAQs/Buffering.html&quot;&gt;http://perl.plover.com/FAQs/Buffering.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5e0af742e5a24576127c7192de3da3f64667af3" translate="yes" xml:space="preserve">
          <source>You might like to use &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; to read in a program configuration file. Manual error checking can be done this way:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; для чтения файла конфигурации программы. Ручную проверку ошибок можно выполнить следующим образом:</target>
        </trans-unit>
        <trans-unit id="ea3e43e35b42104c2dfdbbb81763643be691010c" translate="yes" xml:space="preserve">
          <source>You might like to use &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; to read in a program configuration file. Manual error checking can be done this way:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; для чтения файла конфигурации программы. Ручную проверку ошибок можно выполнить следующим образом:</target>
        </trans-unit>
        <trans-unit id="052100b20ac103ab19054e70ed9a9d17e374ebf5" translate="yes" xml:space="preserve">
          <source>You might love it. You might feel that everyone else needs it. But there might not actually be any real demand for it out there. If you're unsure about the demand your module will have, consider sending out feelers on the &lt;code&gt;comp.lang.perl.modules&lt;/code&gt; newsgroup, or as a last resort, ask the modules list at &lt;code&gt;modules@perl.org&lt;/code&gt; . Remember that this is a closed list with a very long turn-around time - be prepared to wait a good while for a response from them.</source>
          <target state="translated">Тебе это может понравиться. Вы можете почувствовать, что это нужно всем остальным. Но на самом деле там может не быть реального спроса. Если вы не уверены в том , насколько востребован ваш модуль, рассмотрите возможность отправки &lt;code&gt;comp.lang.perl.modules&lt;/code&gt; группу новостей comp.lang.perl.modules или, в крайнем случае, спросите список модулей по адресу &lt;code&gt;modules@perl.org&lt;/code&gt; . Помните, что это закрытый список с очень долгим периодом рассмотрения - будьте готовы долго ждать ответа от них.</target>
        </trans-unit>
        <trans-unit id="169bde04d58834aed9e29a6302664c4d13ccbcd6" translate="yes" xml:space="preserve">
          <source>You might not need all the power of XS. The Inline::C module lets you put C code directly in your Perl source. It handles all the magic to make it work. You still have to learn at least some of the perl API but you won't have to deal with the complexity of the XS support files.</source>
          <target state="translated">Тебе может не понадобиться вся сила XS.Модуль Inline::C позволяет помещать C-код прямо в ваш Perl источник.Он обрабатывает всю магию,чтобы заставить его работать.Вам все равно придется выучить хотя бы часть Perl API,но вам не придется иметь дело со сложностью файлов поддержки XS.</target>
        </trans-unit>
        <trans-unit id="3b031c43f33840adc70b02de47a8fd1daefabaa6" translate="yes" xml:space="preserve">
          <source>You might notice several familiar Perl concepts in this collection of ACM columns from Jon Bentley. The similarity to the title of the major Perl book (which came later) is not completely accidental:</source>
          <target state="translated">Вы можете заметить несколько знакомых концепций Perl в этой коллекции ACM колонок от Джона Бентли.Сходство с названием мажорной книги на Perl (которое появилось позже)не совсем случайно:</target>
        </trans-unit>
        <trans-unit id="66fdf1bb9d02362c3ab6fa3feaa38bdbfcec77f8" translate="yes" xml:space="preserve">
          <source>You might notice that you could use backticks for much the same effect as opening a pipe for reading:</source>
          <target state="translated">Вы можете заметить,что вы можете использовать черные метки для того же эффекта,что и открытие трубки для чтения:</target>
        </trans-unit>
        <trans-unit id="42704287df9412e9063781246ba069342cd72b32" translate="yes" xml:space="preserve">
          <source>You might notice this when each of the elements of &lt;code&gt;@array&lt;/code&gt; end with a newline. You expect to print one element per line, but notice that every line after the first is indented:</source>
          <target state="translated">Вы можете заметить это, когда каждый из элементов &lt;code&gt;@array&lt;/code&gt; заканчивается новой строкой. Вы ожидаете печатать один элемент в строке, но обратите внимание, что каждая строка после первой имеет отступ:</target>
        </trans-unit>
        <trans-unit id="e3ccde21cef99ed04d4c1fb15da658aad8223bd5" translate="yes" xml:space="preserve">
          <source>You might prefer to go on to &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; instead of &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;; it discusses lists of lists and multidimensional arrays in detail. After that, you should move on to &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;; it's a Data Structure Cookbook that shows recipes for using and printing out arrays of hashes, hashes of arrays, and other kinds of data.</source>
          <target state="translated">Вы можете предпочесть &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; вместо &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; ; в нем подробно обсуждаются списки списков и многомерные массивы. После этого вам следует перейти к &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; ; это Поваренная книга структуры данных, в которой показаны рецепты использования и печати массивов хэшей, хэшей массивов и других типов данных.</target>
        </trans-unit>
        <trans-unit id="a6310ecb45c68b753610be852acb876a80aa3c10" translate="yes" xml:space="preserve">
          <source>You might relate this to a fictional 'Translate' module:</source>
          <target state="translated">Вы можете связать это с вымышленным модулем 'Перевести':</target>
        </trans-unit>
        <trans-unit id="13ab2e65d93fb0059f6f55ed6a75f22913178d96" translate="yes" xml:space="preserve">
          <source>You might remember &lt;code&gt;ok() or diag()&lt;/code&gt; with the mnemonic &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;() or
&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;()&lt;/code&gt; .</source>
          <target state="translated">Вы можете вспомнить &lt;code&gt;ok() or diag()&lt;/code&gt; с мнемоникой &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;() or &lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37d4864369383102be2440cd5c5cb4b7987e528b" translate="yes" xml:space="preserve">
          <source>You might sometimes see reference to Rule 1 and Rule 2. Larry's power as Supreme Court is expressed in The Rules:</source>
          <target state="translated">Иногда можно увидеть ссылку на правило 1 и правило 2.Полномочия Ларри как Верховного Суда выражены в Правилах:</target>
        </trans-unit>
        <trans-unit id="f5b7d1197bc89948add2ed3f352d319d84d2e28b" translate="yes" xml:space="preserve">
          <source>You might try &lt;a href=&quot;encode/guess&quot;&gt;Encode::Guess&lt;/a&gt;, but it has a number of limitations.</source>
          <target state="translated">Вы можете попробовать &lt;a href=&quot;encode/guess&quot;&gt;Encode :: Guess&lt;/a&gt; , но у него есть ряд ограничений.</target>
        </trans-unit>
        <trans-unit id="193b85d5b4fe0e90a0d9c66d7d0b78036e923063" translate="yes" xml:space="preserve">
          <source>You might want to do the same thing for expressing key bindings or the like (since hardwiring &quot;q&quot; as the binding for the function that quits a screen/menu/program is useful only if your language happens to associate &quot;q&quot; with &quot;quit&quot;!)</source>
          <target state="translated">Вы можете захотеть сделать то же самое для выражения привязки клавиш и тому подобного (так как жесткая привязка &quot;q&quot; в качестве привязки для функции,которая выходит из экрана/меню/программы,полезна только в том случае,если в Вашем языке &quot;q&quot; ассоциируется с &quot;quit&quot;!)</target>
        </trans-unit>
        <trans-unit id="b5d495d915ce638287be04e211dc9e03d5ac46bf" translate="yes" xml:space="preserve">
          <source>You might want to keep these desktop references close by your keyboard:</source>
          <target state="translated">Возможно,вы захотите держать эти ссылки на рабочий стол рядом с клавиатурой:</target>
        </trans-unit>
        <trans-unit id="0d1eb54f95a4e04b463b84dfe6de9e8067695824" translate="yes" xml:space="preserve">
          <source>You might wonder why &lt;code&gt;'.'&lt;/code&gt; matches everything but &lt;code&gt;&quot;\n&quot;&lt;/code&gt; - why not every character? The reason is that often one is matching against lines and would like to ignore the newline characters. For instance, while the string &lt;code&gt;&quot;\n&quot;&lt;/code&gt; represents one line, we would like to think of it as empty. Then</source>
          <target state="translated">Вы можете спросить, почему &lt;code&gt;'.'&lt;/code&gt; соответствует всему, кроме &lt;code&gt;&quot;\n&quot;&lt;/code&gt; - почему не каждому символу? Причина в том, что часто сравниваются строки и игнорируются символы новой строки. Например, хотя строка &lt;code&gt;&quot;\n&quot;&lt;/code&gt; представляет одну строку, мы хотели бы думать о ней как о пустой. затем</target>
        </trans-unit>
        <trans-unit id="e851d081cca3db1538b95133dfa4e2591e66b038" translate="yes" xml:space="preserve">
          <source>You must Configure perl with</source>
          <target state="translated">Вы должны настроить перл с</target>
        </trans-unit>
        <trans-unit id="c18657846c86f19718177ea80036f400e403ff68" translate="yes" xml:space="preserve">
          <source>You must be triply conscious of cross-platform concerns. This usually boils down to using &lt;a href=&quot;file/spec&quot;&gt;File::Spec&lt;/a&gt;, avoiding things like &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; unless absolutely necessary, and not assuming that a given character has a particular ordinal value (code point) or that its UTF-8 representation is composed of particular bytes.</source>
          <target state="translated">Вы должны трижды осознавать кроссплатформенность. Обычно это сводится к использованию &lt;a href=&quot;file/spec&quot;&gt;File :: Spec&lt;/a&gt; , избегая таких вещей, как &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; кроме случаев крайней необходимости, и не предполагая, что данный символ имеет определенное порядковое значение (кодовую точку) или что его представление UTF-8 составлено определенных байтов.</target>
        </trans-unit>
        <trans-unit id="8daf2a31e4062052794994fb1a77c6bf915b4376" translate="yes" xml:space="preserve">
          <source>You must call &lt;code&gt;plan(...)&lt;/code&gt; once and only once. You should call it in a &lt;code&gt;BEGIN {...}&lt;/code&gt; block, like so:</source>
          <target state="translated">Вы должны позвонить в &lt;code&gt;plan(...)&lt;/code&gt; один раз и только один раз. Вы должны вызвать его в блоке &lt;code&gt;BEGIN {...}&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="0d9b102a51e636379025c1716da72ec7158d144f" translate="yes" xml:space="preserve">
          <source>You must have a plan.</source>
          <target state="translated">У тебя должен быть план.</target>
        </trans-unit>
        <trans-unit id="f323bd128da70502b49397ad0f7c4f483197be9e" translate="yes" xml:space="preserve">
          <source>You must have a project base class, which you load, and which you then use as the first argument in the call to YourProjClass-&amp;gt;get_handle(...). It should derive (whether directly or indirectly) from Locale::Maketext. It &lt;b&gt;doesn't matter&lt;/b&gt; how you name this class, although assuming this is the localization component of your Super Mega Program, good names for your project class might be SuperMegaProgram::Localization, SuperMegaProgram::L10N, SuperMegaProgram::I18N, SuperMegaProgram::International, or even SuperMegaProgram::Languages or SuperMegaProgram::Messages.</source>
          <target state="translated">У вас должен быть базовый класс проекта, который вы загружаете и который затем используете в качестве первого аргумента при вызове YourProjClass-&amp;gt; get_handle (...). Он должен быть производным (прямо или косвенно) от Locale :: Maketext. Это &lt;b&gt;не имеет значения&lt;/b&gt; , как вы называете этот класс, хотя предполагаю , что это является локализация компонентов вашей Mega программы Супер, хорошие имена для вашего класса проекта может быть SuperMegaProgram :: Локализация, SuperMegaProgram :: L10N, SuperMegaProgram :: I18N, SuperMegaProgram :: Международный или даже SuperMegaProgram :: Languages ​​или SuperMegaProgram :: Messages.</target>
        </trans-unit>
        <trans-unit id="739cc975a787be41633b91aa5de71e36b127ddec" translate="yes" xml:space="preserve">
          <source>You must install the &lt;code&gt;Expect&lt;/code&gt; module to use &lt;code&gt;eexpect&lt;/code&gt; . CPAN.pm does not install it for you.</source>
          <target state="translated">Вы должны установить &lt;code&gt;Expect&lt;/code&gt; модуль для использования &lt;code&gt;eexpect&lt;/code&gt; . CPAN.pm не устанавливает его за вас.</target>
        </trans-unit>
        <trans-unit id="72fde4fbc93c4a749f9096aea6d3bd9a70e80b1d" translate="yes" xml:space="preserve">
          <source>You must install the &lt;code&gt;Expect&lt;/code&gt; module to use &lt;code&gt;expect&lt;/code&gt; . CPAN.pm does not install it for you.</source>
          <target state="translated">Вы должны установить модуль &lt;code&gt;Expect&lt;/code&gt; , чтобы использовать &lt;code&gt;expect&lt;/code&gt; . CPAN.pm не устанавливает его за вас.</target>
        </trans-unit>
        <trans-unit id="4490a879ca5d596cdf1f67e2681afb5d54f17c52" translate="yes" xml:space="preserve">
          <source>You must make sure that any paths and path components are properly surrounded with double-quotes if they contain spaces. For example, &lt;code&gt;$potential_libs&lt;/code&gt; could be (literally):</source>
          <target state="translated">Вы должны убедиться, что все пути и компоненты пути правильно заключены в двойные кавычки, если они содержат пробелы. Например, &lt;code&gt;$potential_libs&lt;/code&gt; может быть (буквально):</target>
        </trans-unit>
        <trans-unit id="30c4fd5a99a25cad991844e3c5c4f7509fd399a0" translate="yes" xml:space="preserve">
          <source>You must open your files before you print to them.</source>
          <target state="translated">Вы должны открыть свои файлы,прежде чем печатать на них.</target>
        </trans-unit>
        <trans-unit id="45897939488bd63d927112e2ca64e2fec16238a0" translate="yes" xml:space="preserve">
          <source>You must override the abstract methods as noted above.</source>
          <target state="translated">Вы должны отменить абстрактные методы,как указано выше.</target>
        </trans-unit>
        <trans-unit id="2aa81922480ed45c435c4cf0c99c4c4aba3634fc" translate="yes" xml:space="preserve">
          <source>You must use &lt;code&gt;elsif&lt;/code&gt; rather than &lt;code&gt;else if&lt;/code&gt; .</source>
          <target state="translated">Вы должны использовать &lt;code&gt;elsif&lt;/code&gt; , а не &lt;code&gt;else if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39c7a78d87a43f543e7180d2370d441ee16c546b" translate="yes" xml:space="preserve">
          <source>You must use an ANSI C compiler to build perl. Perl can be compiled with either Sun's add-on C compiler or with gcc. The C compiler that shipped with SunOS4 will not do.</source>
          <target state="translated">Для сборки perl необходимо использовать компилятор ANSI C.Perl может быть скомпилирован либо дополнительным компилятором С от Sun,либо gcc.Компилятор С,поставляемый с SunOS4,не будет делать этого.</target>
        </trans-unit>
        <trans-unit id="c168b8ed4e8b351eba14fd33d598861cf2969e22" translate="yes" xml:space="preserve">
          <source>You must yourself do any alignment or padding by inserting, for example, enough &lt;code&gt;&quot;x&quot;&lt;/code&gt; es while packing. There is no way for pack() and unpack() to know where characters are going to or coming from, so they handle their output and input as flat sequences of characters.</source>
          <target state="translated">Вы должны сами выполнить выравнивание или заполнение, вставив, например, достаточное количество &lt;code&gt;&quot;x&quot;&lt;/code&gt; при упаковке. У pack () и unpack () нет способа узнать, куда идут символы или откуда они, поэтому они обрабатывают свой вывод и ввод как плоские последовательности символов.</target>
        </trans-unit>
        <trans-unit id="495ba80801ecf71f6944f8f06ac3f6b0ec33f568" translate="yes" xml:space="preserve">
          <source>You need a &quot;make&quot; program to build the sources. If you are using Visual C++ or the Windows SDK tools, nmake will work. Builds using the gcc need dmake.</source>
          <target state="translated">Для сборки исходников нужна программа &quot;make&quot;.Если вы используете Visual C++или Windows SDK,nmake будет работать.Сборки с помощью gcc нуждаются в dmake.</target>
        </trans-unit>
        <trans-unit id="384c0cf5619a59f9ce19e0cd720b3f9bfb700b5a" translate="yes" xml:space="preserve">
          <source>You need a separate perl executable</source>
          <target state="translated">Вам нужен отдельный исполняемый файл на perl</target>
        </trans-unit>
        <trans-unit id="aa34c474feea2ebcd51fe52bc61e21c7aa534d7c" translate="yes" xml:space="preserve">
          <source>You need an installed and working gccsdk cross compiler &lt;a href=&quot;http://gccsdk.riscos.info/&quot;&gt;http://gccsdk.riscos.info/&lt;/a&gt; and REXEN &lt;a href=&quot;http://www.cp15.org/programming/&quot;&gt;http://www.cp15.org/programming/&lt;/a&gt;</source>
          <target state="translated">Вам понадобится установленный и работающий кросс-компилятор gccsdk &lt;a href=&quot;http://gccsdk.riscos.info/&quot;&gt;http://gccsdk.riscos.info/&lt;/a&gt; и REXEN &lt;a href=&quot;http://www.cp15.org/programming/&quot;&gt;http://www.cp15.org/programming/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4caefc1d4e2631b1200ec354d43fce32735ee7c7" translate="yes" xml:space="preserve">
          <source>You need at the very least AmigaOS version 2.0. Recommended is version 3.1.</source>
          <target state="translated">Вам нужна как минимум AmigaOS версии 2.0.Рекомендуется версия 3.1.</target>
        </trans-unit>
        <trans-unit id="5333f88ac5bf8fd24e224f0d8051b5fec4dfc6b5" translate="yes" xml:space="preserve">
          <source>You need the Unix emulation for AmigaOS, whose most important part is &lt;b&gt;ixemul.library&lt;/b&gt;. For a minimum setup, get the latest versions of the following packages from the Aminet archives ( &lt;a href=&quot;http://www.aminet.net/~aminet/&quot;&gt;http://www.aminet.net/~aminet/&lt;/a&gt; ):</source>
          <target state="translated">Вам нужна эмуляция Unix для AmigaOS, наиболее важной частью которой является &lt;b&gt;ixemul.library&lt;/b&gt; . Для минимальной настройки загрузите последние версии следующих пакетов из архивов Aminet ( &lt;a href=&quot;http://www.aminet.net/~aminet/&quot;&gt;http://www.aminet.net/~aminet/&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="46e89c73cbc6b5dd39fd756e0f6110a1446e5be5" translate="yes" xml:space="preserve">
          <source>You need the following files to build perl (or add new modules):</source>
          <target state="translated">Для сборки perl (или добавления новых модулей)вам понадобятся следующие файлы:</target>
        </trans-unit>
        <trans-unit id="9f9c012bcf4380f633cf4f7379c24b96c60ecb4b" translate="yes" xml:space="preserve">
          <source>You need to add either braces or blanks to disambiguate.</source>
          <target state="translated">Вам нужно добавить либо скобки,либо пробелы,чтобы разобрать.</target>
        </trans-unit>
        <trans-unit id="cd33ddce78ff1c7340f83b621a3b3b7072ee0d07" translate="yes" xml:space="preserve">
          <source>You need to apply the patches in</source>
          <target state="translated">Вам нужно применить заплаты</target>
        </trans-unit>
        <trans-unit id="1e3349f1cb25ac13b86ae16e145a0b5decd29f3c" translate="yes" xml:space="preserve">
          <source>You need to correct all the entries which look like file paths (they currently start with &lt;code&gt;f:/&lt;/code&gt;).</source>
          <target state="translated">Вам необходимо исправить все записи, которые выглядят как пути к файлам (в настоящее время они начинаются с &lt;code&gt;f:/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac623d9d2638d8e7b4db69f0dfe7d1ff10e6b5e8" translate="yes" xml:space="preserve">
          <source>You need to create a local file or directory handle or a local function.</source>
          <target state="translated">Вам необходимо создать локальный файл или дескриптор каталога или локальную функцию.</target>
        </trans-unit>
        <trans-unit id="f1f5eb114f0c20a6807ea82566cc5f87d3a50a5b" translate="yes" xml:space="preserve">
          <source>You need to fetch the latest perl source (including developers releases). With some probability it is located in</source>
          <target state="translated">Вам необходимо получить самый свежий perl исходный код (включая релизы разработчиков).С некоторой долей вероятности он находится в</target>
        </trans-unit>
        <trans-unit id="965f03aeeab996c747b3c012ec9e65e74625b61a" translate="yes" xml:space="preserve">
          <source>You need to give a global variable a temporary value, especially $_.</source>
          <target state="translated">Необходимо дать глобальной переменной временное значение,особенно $_.</target>
        </trans-unit>
        <trans-unit id="4566431899ec1f0737bac24e93a9db0aa49d528e" translate="yes" xml:space="preserve">
          <source>You need to have the latest &lt;b&gt;ixemul&lt;/b&gt; (Unix emulation for Amiga) from Aminet.</source>
          <target state="translated">У вас должна быть последняя &lt;b&gt;версия ixemul&lt;/b&gt; (эмуляция Unix для Amiga) от Aminet.</target>
        </trans-unit>
        <trans-unit id="a7ac6e008f84ae7c7059b678b8182fe611763a32" translate="yes" xml:space="preserve">
          <source>You need to have the latest EMX development environment, the full GNU tool suite (gawk renamed to awk, and GNU</source>
          <target state="translated">Вам нужна новейшая среда разработки EMX,полный набор инструментов GNU (gawk переименован в awk,и GNU</target>
        </trans-unit>
        <trans-unit id="f0226c50fdff6c76ac2211b429b8387e73ade57a" translate="yes" xml:space="preserve">
          <source>You need to have zlib 1.2.1 or better if you want to use the &lt;code&gt;-Merge&lt;/code&gt; option with &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; , &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; and &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; .</source>
          <target state="translated">Вам понадобится zlib 1.2.1 или лучше, если вы хотите использовать параметр &lt;code&gt;-Merge&lt;/code&gt; с &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; , &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; и &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7d2bb828dde58ca4350b2c6d38a82848f926212" translate="yes" xml:space="preserve">
          <source>You need to make sure your script is executable, is accessible by the user CGI is running the script under (which is probably not the user account you tested it under), does not rely on any environment variables (like PATH) from the user it isn't running under, and isn't in a location where the CGI server can't find it, basically, more or less. Please see the following for more information:</source>
          <target state="translated">Вам нужно убедиться,что ваш скрипт исполняем,доступен для пользователя CGI,под которым выполняется скрипт (что,вероятно,не является учетной записью пользователя,под которой вы его тестировали),не полагается ни на какие переменные окружения (например,PATH)от пользователя,под которым он не выполняется,и не находится в таком месте,где CGI сервер не может его найти,в основном,более или менее.Пожалуйста,ознакомьтесь со следующей информацией:</target>
        </trans-unit>
        <trans-unit id="28dffbeaeb79cbefc3a6182c3945facf9e0c58d9" translate="yes" xml:space="preserve">
          <source>You need to pass references to these objects. See &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;Pass by Reference in perlsub&lt;/a&gt; for this particular question, and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for information on references.</source>
          <target state="translated">Вам нужно передать ссылки на эти объекты. См. &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;&amp;laquo;Передача по ссылке&amp;raquo; в perlsub&lt;/a&gt; для этого конкретного вопроса и &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; для получения информации о ссылках.</target>
        </trans-unit>
        <trans-unit id="f3725b76142cf0ba93578fc0f4b37b143a50c105" translate="yes" xml:space="preserve">
          <source>You need to perform the same general operations on related types of data, but with slight variations depending on the specific type of data the operations are applied to.</source>
          <target state="translated">Нужно выполнять те же общие операции над смежными типами данных,но с небольшими отклонениями в зависимости от конкретного типа данных,к которым применяются операции.</target>
        </trans-unit>
        <trans-unit id="eca7b2277d21c0c8eb2a5172b673ea24b48da4eb" translate="yes" xml:space="preserve">
          <source>You need to use &lt;code&gt;sv_magicext&lt;/code&gt; to add magic to SvREADONLY SVs and also to add more than one instance of the same 'how'.</source>
          <target state="translated">Вам нужно использовать &lt;code&gt;sv_magicext&lt;/code&gt; для добавления магии к SVREADONLY SV, а также для добавления более одного экземпляра одного и того же &amp;laquo;как&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="48a3262ccbefb20acd592d55306e17827a38c688" translate="yes" xml:space="preserve">
          <source>You now have better understanding of what a source filter is, and you might even have a possible use for them. If you feel like playing with source filters but need a bit of inspiration, here are some extra features you could add to the Debug filter.</source>
          <target state="translated">Теперь вы лучше понимаете,что такое фильтр исходного текста,и даже можете использовать его в своих целях.Если вам хочется поиграть с фильтрами исходных текстов,но вам нужно немного вдохновения,вот некоторые дополнительные возможности,которые вы можете добавить в фильтр Debug.</target>
        </trans-unit>
        <trans-unit id="73cbac231eb90b456375cc000b5becdd4bf8f684" translate="yes" xml:space="preserve">
          <source>You probably cannot fix the thing that runs perl, but you can change how perl outputs its warnings by defining a custom warning and die functions.</source>
          <target state="translated">Вероятно,вы не сможете исправить то,что запускается perl,но вы можете изменить то,как perl выдает свои предупреждения,определив пользовательские функции предупреждения и запрета.</target>
        </trans-unit>
        <trans-unit id="c42726aad22724c022f0c559e39f4d6e8477c11a" translate="yes" xml:space="preserve">
          <source>You probably cannot mix &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; is often implemented using &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вы, вероятно, не можете смешивать вызовы &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; часто реализуется с помощью &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15661abf22e3cef9f933847127ca80cfb4161e88" translate="yes" xml:space="preserve">
          <source>You probably cannot mix &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; is often implemented using &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вы, вероятно, не можете смешивать вызовы &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; часто реализуется с помощью &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6ea02ffa42491538c740d65bba124e60d5ff937" translate="yes" xml:space="preserve">
          <source>You probably expect this code to print the equivalent of</source>
          <target state="translated">Вы,вероятно,ожидаете,что этот код напечатает эквивалент</target>
        </trans-unit>
        <trans-unit id="d62ac8cab5911278724664b4481b34fb6ef41dfa" translate="yes" xml:space="preserve">
          <source>You probably meant to use &lt;code&gt;$]&lt;/code&gt; instead. &lt;code&gt;$[&lt;/code&gt; is the base for indexing arrays. &lt;code&gt;$]&lt;/code&gt; is the Perl version number in decimal.</source>
          <target state="translated">Вы, вероятно, хотели вместо этого использовать &lt;code&gt;$]&lt;/code&gt; . &lt;code&gt;$[&lt;/code&gt; - это база для индексирования массивов. &lt;code&gt;$]&lt;/code&gt; - это десятичный номер версии Perl.</target>
        </trans-unit>
        <trans-unit id="fd777891ad8556771da5ce520e6dfb0017006c11" translate="yes" xml:space="preserve">
          <source>You probably shouldn't rely upon the &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; being podded out forever. Not all pod translators are well-behaved in this regard, and perhaps the compiler will become pickier.</source>
          <target state="translated">Вероятно, вам не следует полагаться на то, что &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; будет постоянно отображаться. Не все переводчики подов ведут себя хорошо в этом отношении, и, возможно, компилятор станет более разборчивым.</target>
        </trans-unit>
        <trans-unit id="f7e43d034a25f1af2139047ca7966917ab4cd1dd" translate="yes" xml:space="preserve">
          <source>You probably want to use one of the assortment of wrappers, such as &lt;code&gt;SvSetSV&lt;/code&gt; , &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , &lt;code&gt;SvSetMagicSV&lt;/code&gt; and &lt;code&gt;SvSetMagicSV_nosteal&lt;/code&gt; .</source>
          <target state="translated">Возможно, вы захотите использовать одну из оболочек из ассортимента, например &lt;code&gt;SvSetSV&lt;/code&gt; , &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , &lt;code&gt;SvSetMagicSV&lt;/code&gt; и &lt;code&gt;SvSetMagicSV_nosteal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d6ef8cdce7f3fb77e02bca3307aceacf65c4aa9" translate="yes" xml:space="preserve">
          <source>You probably wrote something like this:</source>
          <target state="translated">Ты,наверное,написал что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="39ad4b4dd2e75230f3579c0483b312257f0274c5" translate="yes" xml:space="preserve">
          <source>You really need GNU make to compile this. GNU make ships by default with QNX 4.23, but you can get it from quics for earlier versions.</source>
          <target state="translated">Вам действительно нужна GNU,чтобы скомпилировать это.GNU делает поставки по умолчанию с QNX 4.23,но вы можете получить их из Quics для более ранних версий.</target>
        </trans-unit>
        <trans-unit id="e91eff73482d2359765ffe5506e4ead5d70a7574" translate="yes" xml:space="preserve">
          <source>You really probably want to be using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; instead, because &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; isn't what most people think of as &quot;local&quot;. See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Вы действительно, вероятно, захотите использовать вместо него &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; - это не то, что большинство людей считают &amp;laquo;местным&amp;raquo;. См. Подробности в разделе &amp;laquo; &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Частные переменные через my ()&amp;raquo; в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab88c992626b72f6894fc343016d386fe947c5ce" translate="yes" xml:space="preserve">
          <source>You really probably want to be using &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; instead, because &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; isn't what most people think of as &quot;local&quot;. See &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Вы действительно, вероятно, захотите использовать вместо него &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; - это не то, что большинство людей считают &amp;laquo;местным&amp;raquo;. См. Подробности в разделе &amp;laquo; &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Частные переменные через my ()&amp;raquo; в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d15f62d6aa63d728245cd3284fc083f9f68cff93" translate="yes" xml:space="preserve">
          <source>You see, if you call pstruct by its other incybernation, c2ph, you have a code generator that translates C code into perl code! Well, structure and union declarations at least, but that's quite a bit.</source>
          <target state="translated">Видите ли,если вы вызываете pstruct по его другой инсибернации,c2ph,то у вас есть генератор кода,который транслирует C-код в perl-код! Ну,по крайней мере,декларации о структуре и союзе,но это довольно много.</target>
        </trans-unit>
        <trans-unit id="95f74aa64cd2ea580871d2847f70b2776302bedc" translate="yes" xml:space="preserve">
          <source>You should also &quot;register&quot; your op with the Perl interpreter so that it can produce sensible error and warning messages. Since it is possible to have multiple custom ops within the one &quot;logical&quot; op type &lt;code&gt;OP_CUSTOM&lt;/code&gt; , Perl uses the value of &lt;code&gt;o-&amp;gt;op_ppaddr&lt;/code&gt; to determine which custom op it is dealing with. You should create an &lt;code&gt;XOP&lt;/code&gt; structure for each ppaddr you use, set the properties of the custom op with &lt;code&gt;XopENTRY_set&lt;/code&gt; , and register the structure against the ppaddr using &lt;code&gt;Perl_custom_op_register&lt;/code&gt; . A trivial example might look like:</source>
          <target state="translated">Вы также должны &amp;laquo;зарегистрировать&amp;raquo; свою операцию в интерпретаторе Perl, чтобы она могла выдавать разумные сообщения об ошибках и предупреждения. Поскольку в одном &amp;laquo;логическом&amp;raquo; типе &lt;code&gt;OP_CUSTOM&lt;/code&gt; возможно иметь несколько пользовательских операций , Perl использует значение &lt;code&gt;o-&amp;gt;op_ppaddr&lt;/code&gt; , чтобы определить, с какой пользовательской операцией он имеет дело. Вы должны создать структуру &lt;code&gt;XOP&lt;/code&gt; для каждого используемого ppaddr, установить свойства пользовательской операции с помощью &lt;code&gt;XopENTRY_set&lt;/code&gt; и зарегистрировать структуру для ppaddr с помощью &lt;code&gt;Perl_custom_op_register&lt;/code&gt; . Тривиальный пример может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="8cd501f21ed6c5e9d05fc6e18329636984dc10c8" translate="yes" xml:space="preserve">
          <source>You should also check out the Frequently Asked Questions list in comp.unix.* for things like this: the answer is essentially the same. It's very system-dependent. Here's one solution that works on BSD systems:</source>
          <target state="translated">Вы также должны проверить список часто задаваемых вопросов на comp.unix.*для таких вещей:ответ по существу тот же самый.Он очень зависит от системы.Вот одно решение,которое работает на системах BSD:</target>
        </trans-unit>
        <trans-unit id="f04dff0eea092cd0ec8988c859db7bf95d5caa53" translate="yes" xml:space="preserve">
          <source>You should also check your modules, and upgrade them if necessary. For example, HTML::Entities requires version &amp;gt;= 1.32 to function correctly, even though the changelog is silent about this.</source>
          <target state="translated">Вам также следует проверить свои модули и при необходимости обновить их. Например, HTML :: Entities для правильной работы требует версии&amp;gt; = 1.32, хотя в журнале изменений об этом ничего не говорится.</target>
        </trans-unit>
        <trans-unit id="1bf271b2d5721f863cabe314c6f3ea53dab9ccef" translate="yes" xml:space="preserve">
          <source>You should also look at &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt;.</source>
          <target state="translated">Вам также следует посмотреть на &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2a8e7bc27f2427aec43e373a1d93fb28c7dab24" translate="yes" xml:space="preserve">
          <source>You should also take a look at &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt; for best practices in making a module.</source>
          <target state="translated">Вам также следует взглянуть на &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle,&lt;/a&gt; чтобы узнать о лучших методах создания модуля.</target>
        </trans-unit>
        <trans-unit id="50caca8ed03bfd57a516ccc3b6dfa215ef520713" translate="yes" xml:space="preserve">
          <source>You should also try to get feedback from people who are already familiar with the module's application domain and the CPAN naming system. Authors of similar modules, or modules with similar names, may be a good place to start, as are community sites like &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org&quot;&gt;Perl Monks&lt;/a&gt;.</source>
          <target state="translated">Вам также следует попытаться получить обратную связь от людей, которые уже знакомы с доменом приложения модуля и системой именования CPAN. Авторы похожих модулей или модулей с похожими именами могут быть хорошим местом для начала, как и сайты сообществ, такие как &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org&quot;&gt;Perl Monks&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6748d5917300372787fdc7a9ff0a6b3a57b1d0d9" translate="yes" xml:space="preserve">
          <source>You should always support a &lt;code&gt;HASH&lt;/code&gt; argument to &lt;code&gt;TIEHASH&lt;/code&gt; that ties the underlying cache so that the user can specify that the cache is also persistent or that it has some other interesting semantics. The example above demonstrates how to do this, as does &lt;code&gt;Memoize::Expire&lt;/code&gt; .</source>
          <target state="translated">Вы всегда должны поддерживать аргумент &lt;code&gt;HASH&lt;/code&gt; для &lt;code&gt;TIEHASH&lt;/code&gt; , который связывает базовый кеш, чтобы пользователь мог указать, что кеш также является постоянным или имеет некоторую другую интересную семантику. В приведенном выше примере показано, как это сделать, как и в &lt;code&gt;Memoize::Expire&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3be69763ec9a168e71d6a325f5feb839520bece8" translate="yes" xml:space="preserve">
          <source>You should attempt older code to fully use</source>
          <target state="translated">Вы должны попытаться использовать старый код в полной мере</target>
        </trans-unit>
        <trans-unit id="2aa5702baea4b6cbbf8baf7ed5e04e20725d5137" translate="yes" xml:space="preserve">
          <source>You should be aware that it is unsupported, and is not claimed to be fit for any purpose. If your system allows installation of arbitrary locales, you may find the definitions useful as they are, or as a basis for the development of your own locales.</source>
          <target state="translated">Вы должны знать,что она не подкреплена и не претендует на пригодность для каких-либо целей.Если ваша система позволяет устанавливать произвольные локали,вы можете найти эти определения полезными в том виде,в котором они есть,или в качестве основы для разработки собственных локалей.</target>
        </trans-unit>
        <trans-unit id="e3162405a76386caaa175c4a5b3c2a85402c9c86" translate="yes" xml:space="preserve">
          <source>You should be careful about creating mortal variables. Strange things can happen if you make the same value mortal within multiple contexts, or if you make a variable mortal multiple times. Thinking of &quot;Mortalization&quot; as deferred &lt;code&gt;SvREFCNT_dec&lt;/code&gt; should help to minimize such problems. For example if you are passing an SV which you</source>
          <target state="translated">Вы должны быть осторожны с созданием смертных переменных. Могут случиться странные вещи, если вы сделаете одно и то же значение смертельным в нескольких контекстах или если вы сделаете переменную смертельной несколько раз. Рассмотрение &quot;Mortalization&quot; как отложенного &lt;code&gt;SvREFCNT_dec&lt;/code&gt; должно помочь свести к минимуму такие проблемы. Например, если вы передаете SV, который вы</target>
        </trans-unit>
        <trans-unit id="f75000df91bba9bce6bbc0dce623bb898fe50b2f" translate="yes" xml:space="preserve">
          <source>You should be very careful when modifying the default values of most special variables described in this document. In most cases you want to localize these variables before changing them, since if you don't, the change may affect other modules which rely on the default values of the special variables that you have changed. This is one of the correct ways to read the whole file at once:</source>
          <target state="translated">Следует быть очень внимательным при изменении значений по умолчанию большинства специальных переменных,описанных в этом документе.В большинстве случаев вы хотите локализовать эти переменные,прежде чем изменять их,так как если вы этого не сделаете,изменение может повлиять на другие модули,которые полагаются на значения по умолчанию специальных переменных,которые вы изменили.Это один из правильных способов сразу прочитать весь файл:</target>
        </trans-unit>
        <trans-unit id="949c1f70059f0d92507bf8500b354d7dab533cd7" translate="yes" xml:space="preserve">
          <source>You should by now have had a look at &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, which tells you about Perl's internal variable types: SVs, HVs, AVs and the rest. If not, do that now.</source>
          <target state="translated">К настоящему времени вы должны были взглянуть на &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; , в котором рассказывается о типах внутренних переменных Perl: SV, HV, AV и других. Если нет, сделайте это сейчас.</target>
        </trans-unit>
        <trans-unit id="1de8c82aa4b462c346cc4f7308a916f25f4fef57" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU General Public License along with this library program; it should be in the file &lt;code&gt;COPYING&lt;/code&gt; . If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA</source>
          <target state="translated">Вы должны были получить копию Стандартной общественной лицензии GNU вместе с этой библиотечной программой; он должен быть в файле &lt;code&gt;COPYING&lt;/code&gt; . Если нет, напишите в Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</target>
        </trans-unit>
        <trans-unit id="e47e81623eb986394886e54e85f1183c3a98df4e" translate="yes" xml:space="preserve">
          <source>You should in general be leery of using functions that could potentially return lists in scalar context without explicitly stating such. This would be clearer to the casual reader:</source>
          <target state="translated">В целом,следует проявлять осторожность при использовании функций,которые потенциально могут возвращать списки в скалярном контексте без явного указания таковых.Это было бы яснее для случайного читателя:</target>
        </trans-unit>
        <trans-unit id="f07911b4c8d126039388d13cb35130da1027b105" translate="yes" xml:space="preserve">
          <source>You should make a module out of any code that you think is going to be useful to others. Anything that's likely to fill a hole in the communal library and which someone else can slot directly into their program. Any part of your code which you can isolate and extract and plug into something else is a likely candidate.</source>
          <target state="translated">Вы должны сделать модуль из любого кода,который,по вашему мнению,будет полезен другим.Всё,что может заполнить дыру в общей библиотеке и что кто-то другой может вставить непосредственно в свою программу.Любая часть вашего кода,которую вы можете изолировать,извлечь и подключить к чему-нибудь другому,является вероятным кандидатом.</target>
        </trans-unit>
        <trans-unit id="040633d0da585780031086722446751b04946152" translate="yes" xml:space="preserve">
          <source>You should neither care about nor depend on the internal representation; it might change without notice. Use &lt;b&gt;ONLY&lt;/b&gt; method calls like &lt;code&gt;$x-&amp;gt;sign();&lt;/code&gt; instead relying on the internal representation.</source>
          <target state="translated">Вы не должны ни заботиться о внутреннем представлении, ни зависеть от него; он может быть изменен без предварительного уведомления. Используйте &lt;b&gt;ТОЛЬКО&lt;/b&gt; вызовы методов, например &lt;code&gt;$x-&amp;gt;sign();&lt;/code&gt; вместо этого полагаясь на внутреннее представление.</target>
        </trans-unit>
        <trans-unit id="8e48507edb3519e34f20c7e3d955b48a4ed82ad2" translate="yes" xml:space="preserve">
          <source>You should normally only add directories to @INC. If you need to delete directories from @INC take care to only delete those which you added yourself or which you are certain are not needed by other modules in your script. Other modules may have added directories which they need for correct operation.</source>
          <target state="translated">Обычно следует добавлять каталоги только в @INC.Если вам нужно удалить каталоги из @INC,позаботьтесь об удалении только тех,которые вы добавили сами или которые,по вашему мнению,не нужны другим модулям в вашем скрипте.Другие модули могут добавлять каталоги,которые им нужны для корректной работы.</target>
        </trans-unit>
        <trans-unit id="693cc772a08fe2cee68cbfc24c2a6625d73c01c6" translate="yes" xml:space="preserve">
          <source>You should not depend on the internal format, all accesses must go through accessor methods. E.g. looking at $x-&amp;gt;{sign} is not a bright idea since there is no guaranty that the object in question has such a hashkey, nor is a hash underneath at all.</source>
          <target state="translated">Вы не должны зависеть от внутреннего формата, все обращения должны осуществляться через методы доступа. Например, смотреть на $ x -&amp;gt; {sign} - не самая лучшая идея, поскольку нет гарантии, что рассматриваемый объект имеет такой хэш-ключ, и нет хеша под ним вообще.</target>
        </trans-unit>
        <trans-unit id="d13d5397797f2275509831750bfac02171b7d4f3" translate="yes" xml:space="preserve">
          <source>You should not depend on the internal format, all accesses must go through accessor methods. E.g. looking at $x-&amp;gt;{sign} is not a good idea since there is no guaranty that the object in question has such a hash key, nor is a hash underneath at all.</source>
          <target state="translated">Вы не должны зависеть от внутреннего формата, все обращения должны осуществляться через методы доступа. Например, смотреть на $ x -&amp;gt; {sign} - не лучшая идея, поскольку нет никакой гарантии, что рассматриваемый объект имеет такой хэш-ключ, а также нет хеш-значения под ним вообще.</target>
        </trans-unit>
        <trans-unit id="6e8d21cc64f2bc1e9d1ef661a62db1a121e53da8" translate="yes" xml:space="preserve">
          <source>You should not even &lt;b&gt;want&lt;/b&gt; to use</source>
          <target state="translated">Вы даже не должны &lt;b&gt;хотеть&lt;/b&gt; использовать</target>
        </trans-unit>
        <trans-unit id="675338533405ed3338eef5ef4ee169f82f2ec7e6" translate="yes" xml:space="preserve">
          <source>You should not use perl's malloc if you are building with gcc. There are reports of core dumps, especially in the PDL module. The problem appears to go away under -DDEBUGGING, so it has been difficult to track down. Sun's compiler appears to be okay with or without perl's malloc. [XXX further investigation is needed here.]</source>
          <target state="translated">Тебе не следует использовать &quot;Маллок Перла&quot;,если ты строишь с ГЦК.Существуют отчеты дампов ядра,особенно в модуле PDL.Похоже,что проблема ушла под -DDEBUGGING,поэтому ее было сложно отследить.Компилятор Sun,похоже,справляется с malloc perl's или без него.[ХХХ дальнейшее исследование необходимо здесь.]</target>
        </trans-unit>
        <trans-unit id="13af3135f590e4077444d490629ef8daddd658bc" translate="yes" xml:space="preserve">
          <source>You should note that, if it is necessary to store the SV (&lt;code&gt;name&lt;/code&gt; in the example above) which corresponds to the Perl subroutine so that it can be used later in the program, it not enough just to store a copy of the pointer to the SV. Say the code above had been like this:</source>
          <target state="translated">Следует отметить, что если необходимо сохранить SV ( &lt;code&gt;name&lt;/code&gt; в приведенном выше примере), который соответствует подпрограмме Perl, чтобы его можно было использовать позже в программе, недостаточно просто сохранить копию указателя на SV. Скажем, приведенный выше код был таким:</target>
        </trans-unit>
        <trans-unit id="30d7be701b66af4a13ce23ca4f4637ef46685c93" translate="yes" xml:space="preserve">
          <source>You should probably be using lexical variables anyway, although the issue is the same here:</source>
          <target state="translated">Скорее всего,вам все равно стоит использовать лексические переменные,хотя проблема здесь та же:</target>
        </trans-unit>
        <trans-unit id="54112594f7721aec0b526a825c8c553a794597d2" translate="yes" xml:space="preserve">
          <source>You should say</source>
          <target state="translated">Вы должны сказать.</target>
        </trans-unit>
        <trans-unit id="5ae04df28b1ca8233ad4f14017b75003d4a4c0fc" translate="yes" xml:space="preserve">
          <source>You should seldom if ever use &lt;code&gt;0644&lt;/code&gt; as argument to &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, because that takes away the user's option to have a more permissive umask. Better to omit it. See the perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; for more on this.</source>
          <target state="translated">Вам следует редко, если когда-либо, использовать &lt;code&gt;0644&lt;/code&gt; в качестве аргумента &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , потому что это лишает пользователя возможности иметь более разрешающую umask. Лучше опустить. См. Запись perlfunc (1) в &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="a5da0398cef906098b3aedb900161f9013fc9dbe" translate="yes" xml:space="preserve">
          <source>You should seldom if ever use &lt;code&gt;0644&lt;/code&gt; as argument to &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, because that takes away the user's option to have a more permissive umask. Better to omit it. See the perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; for more on this.</source>
          <target state="translated">Вам следует редко, если когда-либо, использовать &lt;code&gt;0644&lt;/code&gt; в качестве аргумента &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , потому что это лишает пользователя возможности иметь более разрешающую umask. Лучше опустить. См. Запись perlfunc (1) в &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="93291955e6753d9b28d9290f1f843ab314e860d1" translate="yes" xml:space="preserve">
          <source>You should take great pains to try to pass the function the type of variable it wants, when possible. It will save you a lot of trouble in the long run.</source>
          <target state="translated">Нужно приложить большие усилия,чтобы попытаться передать функции,когда это возможно,тип переменной,которую она хочет.Это избавит вас от многих неприятностей в долгосрочной перспективе.</target>
        </trans-unit>
        <trans-unit id="12e9cbf7ef859529e7aa6ad559377e6f6b1073a2" translate="yes" xml:space="preserve">
          <source>You should think long and hard about why you need everything loaded at once. It's just not a scalable solution.</source>
          <target state="translated">Вы должны долго и упорно думать о том,зачем вам нужно все загружать сразу.Это просто не масштабируемое решение.</target>
        </trans-unit>
        <trans-unit id="60692fdbea6181558282af5a09ad1a91226b0568" translate="yes" xml:space="preserve">
          <source>You should use</source>
          <target state="translated">Вам следует использовать</target>
        </trans-unit>
        <trans-unit id="6151ee9c13ae718ea297cb2924721c23869b50eb" translate="yes" xml:space="preserve">
          <source>You should use the &lt;b&gt;-T&lt;/b&gt; flag to enable taint checking (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;) even if we aren't running setuid or setgid. This is always a good idea for servers or any program run on behalf of someone else (like CGI scripts), because it lessens the chances that people from the outside will be able to compromise your system.</source>
          <target state="translated">Вы должны использовать флаг &lt;b&gt;-T,&lt;/b&gt; чтобы включить проверку taint (см. &lt;a href=&quot;perlsec&quot;&gt;Perlsec&lt;/a&gt; ), даже если мы не запускаем setuid или setgid. Это всегда хорошая идея для серверов или любой программы, запускаемой от имени кого-то другого (например, сценариев CGI), потому что это снижает вероятность того, что люди извне смогут взломать вашу систему.</target>
        </trans-unit>
        <trans-unit id="c6b52a2caf001c41f2fbe0900c81a2862fac3a04" translate="yes" xml:space="preserve">
          <source>You should use this</source>
          <target state="translated">Вы должны использовать это</target>
        </trans-unit>
        <trans-unit id="f980030e1ddd6415377ab007be132a7835310a08" translate="yes" xml:space="preserve">
          <source>You should use this option if you are using UTF-16 and others which linefeed is not $/.</source>
          <target state="translated">Вы должны использовать эту опцию,если вы используете UTF-16 и другие,которые не являются $/.</target>
        </trans-unit>
        <trans-unit id="db384f65b44d08a41642068cf25462a07360e950" translate="yes" xml:space="preserve">
          <source>You should usually be able to ignore this and just use the module without thinking about deferring. However, special applications may require fine control over which writes are deferred, or may require that all writes be immediate. To disable the autodeferment feature, use</source>
          <target state="translated">Обычно вы должны уметь игнорировать это и просто использовать модуль,не думая об отсрочке.Однако,специальные приложения могут требовать точного контроля над тем,какие записи откладываются,или могут требовать,чтобы все записи были немедленными.Чтобы отключить функцию автоматической отсрочки,используйте</target>
        </trans-unit>
        <trans-unit id="962a252e8053766a043aa7e45b2c62a450a0683c" translate="yes" xml:space="preserve">
          <source>You shouldn't have to care. But you may if your Perl is before 5.14.0 or you haven't specified &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
5.012&lt;/code&gt; (or higher) because otherwise the rules for the code points in the range 128 to 255 are different depending on whether the string they are contained within is in Unicode or not. (See &lt;a href=&quot;perlunicode#When-Unicode-Does-Not-Happen&quot;&gt;When Unicode Does Not Happen in perlunicode&lt;/a&gt;.)</source>
          <target state="translated">Тебе не о чем беспокоиться. Но вы можете, если у вас Perl до 5.14.0 или вы не указали, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; (или выше), потому что в противном случае правила для кодовых точек в диапазоне от 128 до 255 отличаются в зависимости от того, является ли строка они содержатся в Юникоде или нет. (См. Раздел &lt;a href=&quot;perlunicode#When-Unicode-Does-Not-Happen&quot;&gt;Когда Unicode не используется в perlunicode&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="a8856a657ecb3d97a5c46abba56a556f46cc66ed" translate="yes" xml:space="preserve">
          <source>You shouldn't need to set this variable, since File::Find should now detect such file systems on-the-fly and switch itself to using stat. This works even for parts of your file system, like a mounted CD-ROM.</source>
          <target state="translated">Устанавливать эту переменную не нужно,так как File::Find должен теперь обнаруживать такие файловые системы на лету и переключаться на использование stat.Это работает даже для части вашей файловой системы,например,для смонтированного CD-ROM.</target>
        </trans-unit>
        <trans-unit id="07632dfd399f0ee08d2dcc1bc356caea0fb1fc3a" translate="yes" xml:space="preserve">
          <source>You shouldn't worry about what this format is, because conversion is automatically done when you decode or encode.</source>
          <target state="translated">Вы не должны беспокоиться о том,что это за формат,потому что преобразование происходит автоматически,когда вы декодируете или кодируете.</target>
        </trans-unit>
        <trans-unit id="1bf2aae490ef3108185dddeac7ace7d36d9b8359" translate="yes" xml:space="preserve">
          <source>You specified a character that has the given plainer way of writing it, and which is also portable to platforms running with different character sets.</source>
          <target state="translated">Вы указали символ,который имеет заданный более простой способ его написания,а также переносится на платформы,работающие с различными наборами символов.</target>
        </trans-unit>
        <trans-unit id="ba1446898cf703a433f10e50053c48b7c4bd65ea" translate="yes" xml:space="preserve">
          <source>You specify the parameters that will be passed into the XSUB on the line(s) after you declare the function's return value and name. Each input parameter line starts with optional whitespace, and may have an optional terminating semicolon.</source>
          <target state="translated">Вы указываете параметры,которые будут передаваться в XSUB на строке(ах)после объявления возвращаемого значения и имени функции.Каждая строка входного параметра начинается с необязательного пробела и может иметь необязательную точку с запятой.</target>
        </trans-unit>
        <trans-unit id="5e23d741eb164f1a1d95de07ecc25c6899dd796b" translate="yes" xml:space="preserve">
          <source>You spend lots and lots of money on dedicated hardware, but this is bound to get you talked about.</source>
          <target state="translated">Вы тратите много и много денег на выделенное оборудование,но это обязательно заставит вас говорить об этом.</target>
        </trans-unit>
        <trans-unit id="e47578a3d656799aa6fd209dfd66ed644e50edb2" translate="yes" xml:space="preserve">
          <source>You then can run the test(s) from your test suite that call &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;. At this point the output of &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; is safely captured by &lt;a href=&quot;tester&quot;&gt;Test::Builder::Tester&lt;/a&gt; rather than being interpreted as real test output.</source>
          <target state="translated">Затем вы можете запустить тесты из своего набора тестов, которые вызывают &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . На этом этапе вывод &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; безопасно фиксируется &lt;a href=&quot;tester&quot;&gt;Test :: Builder :: Tester,&lt;/a&gt; а не интерпретируется как реальный вывод теста.</target>
        </trans-unit>
        <trans-unit id="89f392c3f60b78b930a2c99b682f5745b402f97b" translate="yes" xml:space="preserve">
          <source>You tried to use a negative time argument.</source>
          <target state="translated">Ты пытался использовать отрицательный временной аргумент.</target>
        </trans-unit>
        <trans-unit id="215da501a4d763185822fdec5710086fea4dd9c5" translate="yes" xml:space="preserve">
          <source>You use an old version of GNU make. See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">Вы используете старую версию GNU make. См. &lt;a href=&quot;#Prerequisites&quot;&gt;Предварительные условия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="220275358a49875c3abbea24e2340553d9cb4444" translate="yes" xml:space="preserve">
          <source>You use the &lt;code&gt;\G&lt;/code&gt; anchor to start the next match on the same string where the last match left off. The regular expression engine cannot skip over any characters to find the next match with this anchor, so &lt;code&gt;\G&lt;/code&gt; is similar to the beginning of string anchor, &lt;code&gt;^&lt;/code&gt;. The &lt;code&gt;\G&lt;/code&gt; anchor is typically used with the &lt;code&gt;g&lt;/code&gt; flag. It uses the value of &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; as the position to start the next match. As the match operator makes successive matches, it updates &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; with the position of the next character past the last match (or the first character of the next match, depending on how you like to look at it). Each string has its own &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Вы используете &lt;code&gt;\G&lt;/code&gt; чтобы начать следующее совпадение в той же строке, где закончилось последнее совпадение. Механизм регулярных выражений не может пропустить какие-либо символы, чтобы найти следующее совпадение с этой привязкой, поэтому &lt;code&gt;\G&lt;/code&gt; похож на начало привязки строки, &lt;code&gt;^&lt;/code&gt; . &lt;code&gt;\G&lt;/code&gt; якорь обычно используется с &lt;code&gt;g&lt;/code&gt; флагом. Он использует значение &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; как позицию для начала следующего совпадения. По мере того, как оператор сопоставления выполняет последовательные сопоставления, он обновляет &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; с помощью позиции следующего символа после последнего совпадения (или первого символа следующего совпадения, в зависимости от того, как вы хотите на него смотреть). Каждая строка имеет собственное значение &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc28690a1164ffed63384fc9d48573f0201b1c8c" translate="yes" xml:space="preserve">
          <source>You use the utime() function documented in &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;. By way of example, here's a little program that copies the read and write times from its first argument to all the rest of them.</source>
          <target state="translated">Вы используете функцию utime (), задокументированную в &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt; . В качестве примера приведем небольшую программу, которая копирует время чтения и записи из своего первого аргумента во все остальные.</target>
        </trans-unit>
        <trans-unit id="6636b861a3b2aa1c111b3f0b60ae946532727186" translate="yes" xml:space="preserve">
          <source>You usually can use the value of &lt;code&gt;$^X&lt;/code&gt; to re-invoke an independent copy of the same perl that is currently running, e.g.,</source>
          <target state="translated">Обычно вы можете использовать значение &lt;code&gt;$^X&lt;/code&gt; для повторного вызова независимой копии того же perl, который выполняется в данный момент, например,</target>
        </trans-unit>
        <trans-unit id="aa6e6cfea08fbea7a5de694a45b0570deb9eda14" translate="yes" xml:space="preserve">
          <source>You usually can't. Memory allocated to lexicals (i.e. my() variables) cannot be reclaimed or reused even if they go out of scope. It is reserved in case the variables come back into scope. Memory allocated to global variables can be reused (within your program) by using undef() and/or delete().</source>
          <target state="translated">Обычно ты не можешь.Память,выделенная лексикам (т.е.переменным my()),не может быть восстановлена или использована повторно,даже если они выходят за рамки видимости.Она резервируется на случай,если переменные вернутся в область видимости.Память,выделенная глобальным переменным,может быть повторно использована (внутри вашей программы)с помощью функции undef()и/или delete().</target>
        </trans-unit>
        <trans-unit id="654d5925759821a41f7b319f6f5acce1580b7e6a" translate="yes" xml:space="preserve">
          <source>You want to temporarily change just one element of an array or hash.</source>
          <target state="translated">Вы хотите временно изменить только один элемент массива или хэш.</target>
        </trans-unit>
        <trans-unit id="2ba6881210a4041e425c0b40054f89e605a3c752" translate="yes" xml:space="preserve">
          <source>You will also need to be able to connect over the Internet to the public key servers, like pgp.mit.edu, and their port 11731 (the HKP protocol).</source>
          <target state="translated">Вам также потребуется возможность подключения через Интернет к серверам с публичными ключами,таким как pgp.mit.edu,и их порту 11731 (протокол HKP).</target>
        </trans-unit>
        <trans-unit id="c62030728cb5bac5bc525932491c14ac0a7adf6d" translate="yes" xml:space="preserve">
          <source>You will also need to download the &quot;Platform SDK&quot; (the &quot;Core SDK&quot; and &quot;MDAC SDK&quot; components are required) for header files, libraries and rc.exe, and &quot;.NET Framework SDK&quot; for more libraries and nmake.exe. Note that the latter (which also includes the free compiler and linker) requires the &quot;.NET Framework Redistributable&quot; to be installed first. This can be downloaded and installed separately, but is included in the &quot;Visual C++ Toolkit 2003&quot; anyway.</source>
          <target state="translated">Также вам необходимо загрузить &quot;Platform SDK&quot; (необходимы компоненты &quot;Core SDK&quot; и &quot;MDAC SDK&quot;)для заголовочных файлов,библиотек и rc.exe,и &quot;.NET Framework SDK&quot; для других библиотек и nmake.exe.Обратите внимание,что последняя (которая также включает в себя бесплатный компилятор и компоновщик)требует установки &quot;.NET Framework Redistributable&quot; в первую очередь.Его можно скачать и установить отдельно,но в любом случае он включен в &quot;Visual C++Toolkit 2003&quot;.</target>
        </trans-unit>
        <trans-unit id="356f5d0daa70748f28cbf7166d4f341295254619" translate="yes" xml:space="preserve">
          <source>You will also need to download the &quot;Windows SDK&quot; (the &quot;Core SDK&quot; and &quot;MDAC SDK&quot; components are required) for more header files and libraries.</source>
          <target state="translated">Вам также необходимо загрузить &quot;Windows SDK&quot; (необходимы компоненты &quot;Core SDK&quot; и &quot;MDAC SDK&quot;)для получения большего количества заголовочных файлов и библиотек.</target>
        </trans-unit>
        <trans-unit id="a1a5cfadaa899360662110efdf3739aae4dbc6c1" translate="yes" xml:space="preserve">
          <source>You will encounter this particular error message when you have the &lt;code&gt;strict 'subs'&lt;/code&gt; pragma (or the full strict pragma) in your script. Consider this script:</source>
          <target state="translated">Вы столкнетесь с этим конкретным сообщением об ошибке, если в вашем скрипте есть прагма &lt;code&gt;strict 'subs'&lt;/code&gt; (или полная директива strict). Рассмотрим этот сценарий:</target>
        </trans-unit>
        <trans-unit id="9ef82421bf1d6104efddfdc8565b14c0ddc86aec" translate="yes" xml:space="preserve">
          <source>You will find this behavior is slightly different from that of &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handlers (which don't suppress the error text, but can instead call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again to change it).</source>
          <target state="translated">Вы обнаружите, что это поведение немного отличается от поведения обработчиков &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; (которые не подавляют текст ошибки, но вместо этого могут снова вызвать &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , чтобы изменить его).</target>
        </trans-unit>
        <trans-unit id="7d85e118af6c81732006143a60990cead4fa03d5" translate="yes" xml:space="preserve">
          <source>You will find this behavior is slightly different from that of &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handlers (which don't suppress the error text, but can instead call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again to change it).</source>
          <target state="translated">Вы обнаружите, что это поведение немного отличается от поведения обработчиков &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; (которые не подавляют текст ошибки, но вместо этого могут снова вызвать &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , чтобы изменить его).</target>
        </trans-unit>
        <trans-unit id="c01bddfdbad27a7674a351ac148e02cb61a266a6" translate="yes" xml:space="preserve">
          <source>You will get this error message when one of the parameters in the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call is wrong. Unfortunately there are quite a few parameters to get wrong, so it can be difficult to figure out which one it is.</source>
          <target state="translated">Вы получите сообщение об ошибке , когда один из параметров в &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; вызова неправильно. К сожалению, есть несколько параметров, которые можно ошибиться, поэтому бывает сложно понять, какой именно.</target>
        </trans-unit>
        <trans-unit id="b306755ccc7dd24d9d304eb11d95322f9c7d1c36" translate="yes" xml:space="preserve">
          <source>You will have to make sure that CCTYPE is set correctly and that CCHOME points to wherever you installed your compiler.</source>
          <target state="translated">Вы должны убедиться,что CCTYPE установлен правильно и что CCHOME указывает на то,куда вы установили компилятор.</target>
        </trans-unit>
        <trans-unit id="b8d67b6a7548006b180c9c0aa7f1777391e8e3f6" translate="yes" xml:space="preserve">
          <source>You will need a copy of Git for your computer. You can fetch a copy of the repository using the git protocol:</source>
          <target state="translated">Вам понадобится копия Git'а для вашего компьютера.Вы можете получить копию репозитория,используя git-протокол:</target>
        </trans-unit>
        <trans-unit id="7a0e1442c7d674a64133a4ac5cbad0b8f84016fe" translate="yes" xml:space="preserve">
          <source>You will need perl version 5.005_03 or newer.</source>
          <target state="translated">Вам понадобится perl версия 5.005_03 или более новая.</target>
        </trans-unit>
        <trans-unit id="c20642cf215c3811e3976c0a074a0bc8e167607f" translate="yes" xml:space="preserve">
          <source>You will need the packages mentioned in</source>
          <target state="translated">Вам понадобятся пакеты,упомянутые в</target>
        </trans-unit>
        <trans-unit id="125a7a338622da6411e41d9bf9ce7dc1495ae8ff" translate="yes" xml:space="preserve">
          <source>You will need to have Module::Signature installed, which in turn requires that you have at least one of Crypt::OpenPGP module or the command-line</source>
          <target state="translated">Вам необходимо установить Module::Signature,что в свою очередь требует наличия хотя бы одного из модулей Crypt::OpenPGP или командной строки.</target>
        </trans-unit>
        <trans-unit id="26225667638a5ef1fac02d60146f2f3c0e15d299" translate="yes" xml:space="preserve">
          <source>You will need to open every other filehandle on your own. Although there are many variants, the most common way to call Perl's open() function is with three arguments and one return value:</source>
          <target state="translated">Вам нужно будет открыть все остальные папки самостоятельно.Несмотря на то,что существует множество вариантов,наиболее распространенный способ вызова Perl's open()-это вызов функции с тремя аргументами и одним возвращаемым значением:</target>
        </trans-unit>
        <trans-unit id="ced186b3bff5ac2b886750a50b53e155abe57dbc" translate="yes" xml:space="preserve">
          <source>You will probably find these modifiers even more useful if you have to deal with big- or little-endian C structures. Be sure to read &lt;a href=&quot;#Packing-and-Unpacking-C-Structures&quot;&gt;Packing and Unpacking C Structures&lt;/a&gt; for more on that.</source>
          <target state="translated">Вы, вероятно, найдете эти модификаторы даже более полезными, если вам придется иметь дело со структурами C с прямым или обратным порядком байтов. Обязательно прочтите &amp;laquo; &lt;a href=&quot;#Packing-and-Unpacking-C-Structures&quot;&gt;Упаковка и распаковка структур C&amp;raquo;&lt;/a&gt; , чтобы узнать об этом больше.</target>
        </trans-unit>
        <trans-unit id="299bf5b3f1c12a5c613500fd1bf200a8e448ae9f" translate="yes" xml:space="preserve">
          <source>You will see a message about errors while extracting</source>
          <target state="translated">Вы увидите сообщение об ошибках при извлечении</target>
        </trans-unit>
        <trans-unit id="d4ae5109d0174e4b426288bcd1b8e77508718bce" translate="yes" xml:space="preserve">
          <source>You will sometimes see older books or documentation mention &quot;blessing a reference&quot; or describe an object as a &quot;blessed reference&quot;, but this is incorrect. It isn't the reference that is blessed as an object; it's the thing the reference refers to (i.e. the referent).</source>
          <target state="translated">Иногда вы увидите,что в старых книгах или документации упоминается &quot;благословение ссылки&quot; или описывается объект как &quot;благословенная ссылка&quot;,но это неправильно.В качестве объекта благословляется не ссылка,а то,на что ссылается ссылка (т.е.ссылка).</target>
        </trans-unit>
        <trans-unit id="e797714a16ef1ab3d51adb0398a2351cdb2d4869" translate="yes" xml:space="preserve">
          <source>You would do</source>
          <target state="translated">Ты бы сделал</target>
        </trans-unit>
        <trans-unit id="6a39b437275322e4ded1326f66b7e094ff120686" translate="yes" xml:space="preserve">
          <source>You would do well to understand that the TIEARRAY and TIEHASH interfaces are mere sugar to invoke some perl method calls while using the uniform hash and array syntax. The use of this sugar imposes some overhead (typically about two to four extra opcodes per FETCH/STORE operation, in addition to the creation of all the mortal variables required to invoke the methods). This overhead will be comparatively small if the TIE methods are themselves substantial, but if they are only a few statements long, the overhead will not be insignificant.</source>
          <target state="translated">Вы должны хорошо понимать,что интерфейсы TIEARRAY и TIEHASH-это всего лишь сахар для вызова некоторых perl-методов при использовании единого синтаксиса хэша и массива.Использование этого сахара накладывает некоторые накладные расходы (обычно около двух-четырех дополнительных опкодов на одну операцию FETCH/STORE,в дополнение к созданию всех смертельных переменных,необходимых для вызова методов).Эти накладные расходы будут сравнительно небольшими,если методы TIE сами по себе являются существенными,но если они являются всего лишь несколькими утверждениями,накладные расходы не будут незначительными.</target>
        </trans-unit>
        <trans-unit id="d4ff63e38580a86bc4e960e615187745a0cf46e6" translate="yes" xml:space="preserve">
          <source>You would tell &lt;code&gt;Memoize&lt;/code&gt; to use this normalizer this way:</source>
          <target state="translated">Вы бы сказали &lt;code&gt;Memoize&lt;/code&gt; использовать этот нормализатор следующим образом:</target>
        </trans-unit>
        <trans-unit id="26052a9c2b555b8c00fe517ca714ea40b56ea28f" translate="yes" xml:space="preserve">
          <source>You would think passing files to an XS is difficult, with all the typeglobs and stuff. Well, it isn't.</source>
          <target state="translated">Можно подумать,что передать файлы в XS сложно,со всеми этими шрифтами и прочим.Ну,это не так.</target>
        </trans-unit>
        <trans-unit id="97f37569bdb5c4ba52eeb6c3306265613993e5ff" translate="yes" xml:space="preserve">
          <source>You'll also find that &lt;code&gt;foreach&lt;/code&gt; loop used to create a topicalizer and a switch:</source>
          <target state="translated">Вы также обнаружите, что цикл &lt;code&gt;foreach&lt;/code&gt; используется для создания топикализатора и переключателя:</target>
        </trans-unit>
        <trans-unit id="5e9bf36ecbd53fc8e26acf6fb90205c1b5356d3c" translate="yes" xml:space="preserve">
          <source>You'll also have to choose the appropriate library directory (</source>
          <target state="translated">Вам также нужно будет выбрать соответствующий каталог библиотеки (</target>
        </trans-unit>
        <trans-unit id="d14f9a4e84e4a65a6fcadc471d3775e2d2026c66" translate="yes" xml:space="preserve">
          <source>You'll also need to add the following code to the top of the .xs file, just after the include of &quot;XSUB.h&quot;:</source>
          <target state="translated">Вам также нужно будет добавить следующий код в верхнюю часть файла .xs,сразу после включения &quot;XSUB.h&quot;:</target>
        </trans-unit>
        <trans-unit id="067d0f39aaa002449de130921826b00edd6e52d4" translate="yes" xml:space="preserve">
          <source>You'll also see code that does this without a temporary variable, as in</source>
          <target state="translated">Вы также увидите код,который делает это без временной переменной,как в случае с</target>
        </trans-unit>
        <trans-unit id="e76c883ffb7e9e13e48b98bafcbb6fa1aa675b80" translate="yes" xml:space="preserve">
          <source>You'll be in trouble. Those should (in 99.8% of the cases) be the simpler and more direct:</source>
          <target state="translated">У тебя будут неприятности.Они должны (в 99,8% случаев)быть более простыми и прямыми:</target>
        </trans-unit>
        <trans-unit id="f885bd4b3bb53aff3bed3dec0b066248d1576a12" translate="yes" xml:space="preserve">
          <source>You'll have to catch the SIGCHLD signal, and possibly SIGPIPE too. SIGCHLD is sent when the backgrounded process finishes. SIGPIPE is sent when you write to a filehandle whose child process has closed (an untrapped SIGPIPE can cause your program to silently die). This is not an issue with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system(&quot;cmd&amp;amp;&quot;)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вам нужно будет поймать сигнал SIGCHLD и, возможно, SIGPIPE тоже. SIGCHLD отправляется, когда фоновый процесс завершается. SIGPIPE отправляется, когда вы пишете в дескриптор файла, дочерний процесс которого был закрыт (незафиксированный SIGPIPE может заставить вашу программу молча умереть). Это не проблема с &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system(&quot;cmd&amp;amp;&quot;)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c26c7e5ed49de9efc0c0dba307a9def27936a34" translate="yes" xml:space="preserve">
          <source>You'll have to choose the appropriate compiler (</source>
          <target state="translated">Вам придется выбрать подходящий компилятор (</target>
        </trans-unit>
        <trans-unit id="e62d384e427e6ef82a853693fc0380e3a4a6bcdd" translate="yes" xml:space="preserve">
          <source>You'll know your submission has been processed when you receive an email from our ticket tracking system. This email will give you a ticket number. Once your patch has made it to the ticket tracking system, it will also be sent to the perl5-porters@perl.org list.</source>
          <target state="translated">Вы узнаете,что ваша заявка была обработана,когда получите электронное письмо от нашей системы отслеживания билетов.Это электронное письмо даст вам номер билета.Как только ваш патч попадет в систему отслеживания билетов,он также будет отправлен по адресу perl5-porters@perl.org.</target>
        </trans-unit>
        <trans-unit id="feea2270863ca6e9573aba26122b77d4eeb6b2e7" translate="yes" xml:space="preserve">
          <source>You'll need the &lt;code&gt;nmake&lt;/code&gt; utility, available at &lt;a href=&quot;http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe&quot;&gt;http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe&lt;/a&gt; or dmake, available on CPAN. &lt;a href=&quot;http://search.cpan.org/dist/dmake/&quot;&gt;http://search.cpan.org/dist/dmake/&lt;/a&gt;</source>
          <target state="translated">Вам понадобится утилита &lt;code&gt;nmake&lt;/code&gt; , доступная по адресу &lt;a href=&quot;http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe&quot;&gt;http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN-US/nmake15.exe,&lt;/a&gt; или dmake, доступная на CPAN. &lt;a href=&quot;http://search.cpan.org/dist/dmake/&quot;&gt;http://search.cpan.org/dist/dmake/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d98bbda9e4101a6a3cc3bbb0d325b9faa857f4a3" translate="yes" xml:space="preserve">
          <source>You'll want to do that in your Perl source tree so the debugger can read the source code. You should see the copyright message, followed by the prompt.</source>
          <target state="translated">Вы захотите сделать это в дереве исходных текстов на Perl,чтобы отладчик мог прочитать исходный код.Вы должны увидеть сообщение об авторских правах,за которым следует подсказка.</target>
        </trans-unit>
        <trans-unit id="43eea0417aae56c41dd79afb85423b61a36ecf9b" translate="yes" xml:space="preserve">
          <source>You're confusing the purpose of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; and backticks (``). &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; runs a command and returns exit status information (as a 16 bit value: the low 7 bits are the signal the process died from, if any, and the high 8 bits are the actual exit value). Backticks (``) run a command and return what it sent to STDOUT.</source>
          <target state="translated">Вы путаете назначение &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; и обратных кавычек (``). &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; запускает команду и возвращает информацию о статусе выхода (как 16-битное значение: младшие 7 бит - это сигнал, из-за которого процесс умер, если таковой имеется, а старшие 8 бит - это фактическое значение выхода). Обратные кавычки (``) запускают команду и возвращают то, что она отправила в STDOUT.</target>
        </trans-unit>
        <trans-unit id="0067a9abf52f5d5adc52730de693ce9354a17edf" translate="yes" xml:space="preserve">
          <source>You're encouraged to create self-tests for your module to ensure it's working as intended on the myriad platforms Perl supports; if you upload your module to CPAN, a host of testers will build your module and send you the results of the tests. Again, &lt;code&gt;module-starter&lt;/code&gt; and &lt;code&gt;h2xs&lt;/code&gt; provide a test framework which you can extend - you should do something more than just checking your module will compile. &lt;a href=&quot;test/simple&quot;&gt;Test::Simple&lt;/a&gt; and &lt;a href=&quot;test/more&quot;&gt;Test::More&lt;/a&gt; are good places to start when writing a test suite.</source>
          <target state="translated">Вам предлагается создать самотестирование для вашего модуля, чтобы убедиться, что он работает должным образом на множестве платформ, поддерживаемых Perl; если вы загрузите свой модуль в CPAN, множество тестеров построят ваш модуль и отправят вам результаты тестов. Опять же, &lt;code&gt;module-starter&lt;/code&gt; и &lt;code&gt;h2xs&lt;/code&gt; предоставляют тестовую среду, которую вы можете расширить - вам нужно сделать нечто большее, чем просто проверить, будет ли компилироваться ваш модуль. &lt;a href=&quot;test/simple&quot;&gt;Test :: Simple&lt;/a&gt; и &lt;a href=&quot;test/more&quot;&gt;Test :: More&lt;/a&gt; - хорошие места для начала при написании набора тестов.</target>
        </trans-unit>
        <trans-unit id="1465c23d6a9abbc69d7c02001d0a261855c5206d" translate="yes" xml:space="preserve">
          <source>You're probably trying to convert a string to a number, which Perl only converts as a decimal number. When Perl converts a string to a number, it ignores leading spaces and zeroes, then assumes the rest of the digits are in base 10:</source>
          <target state="translated">Возможно,вы пытаетесь преобразовать строку в число,которое Perl преобразует только в десятичное число.Когда Perl преобразует строку в число,он игнорирует ведущие пробелы и нули,а затем предполагает,что остальные цифры находятся в базе 10:</target>
        </trans-unit>
        <trans-unit id="f32dee0623a34d25e555f7bd9fe977163f048dfb" translate="yes" xml:space="preserve">
          <source>You're still out of luck if you need to keep track of decaying protons though.</source>
          <target state="translated">Тебе все еще не повезло,если тебе нужно следить за разлагающимися протонами.</target>
        </trans-unit>
        <trans-unit id="4522acbd81c14b3349dda685727b4174a91c46c1" translate="yes" xml:space="preserve">
          <source>You're unlikely to ever need to construct an object of this class for yourself, but if you want to, call &lt;code&gt;Pod::Simple::PullParserEndToken-&amp;gt;new( &lt;i&gt;tagname&lt;/i&gt; )&lt;/code&gt;</source>
          <target state="translated">Вам вряд ли когда-нибудь понадобится создавать объект этого класса для себя, но если хотите, вызовите &lt;code&gt;Pod::Simple::PullParserEndToken-&amp;gt;new( &lt;i&gt;tagname&lt;/i&gt; )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13c2c796fe95a445a68ec254f6e70e50cbdb3db7" translate="yes" xml:space="preserve">
          <source>You're unlikely to ever need to construct an object of this class for yourself, but if you want to, call &lt;code&gt;Pod::Simple::PullParserStartToken-&amp;gt;new( &lt;i&gt;tagname&lt;/i&gt;, &lt;i&gt;attrhash&lt;/i&gt; )&lt;/code&gt;</source>
          <target state="translated">Вы вряд ли когда - нибудь понадобится , чтобы построить объект этого класса для себя, но если вы хотите, звони &lt;code&gt;Pod::Simple::PullParserStartToken-&amp;gt;new( &lt;i&gt;tagname&lt;/i&gt;, &lt;i&gt;attrhash&lt;/i&gt; )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63fdd43345f7726cfc85c93addac87c77eec8e6e" translate="yes" xml:space="preserve">
          <source>You're unlikely to ever need to construct an object of this class for yourself, but if you want to, call &lt;code&gt;Pod::Simple::PullParserTextToken-&amp;gt;new( &lt;i&gt;text&lt;/i&gt; )&lt;/code&gt;</source>
          <target state="translated">Вам вряд ли когда-либо понадобится создавать объект этого класса для себя, но если вы хотите, вызовите &lt;code&gt;Pod::Simple::PullParserTextToken-&amp;gt;new( &lt;i&gt;text&lt;/i&gt; )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="244e1e138ccb1ddf345dc218bc4eb88a0d9affd5" translate="yes" xml:space="preserve">
          <source>You've asked &lt;code&gt;Fatal&lt;/code&gt; to replace a subroutine, but it's not a Perl built-in, and &lt;code&gt;Fatal&lt;/code&gt; couldn't find it as a regular subroutine. It either doesn't exist or has not yet been defined.</source>
          <target state="translated">Вы попросили &lt;code&gt;Fatal&lt;/code&gt; заменить подпрограмму, но она не встроена в Perl, и &lt;code&gt;Fatal&lt;/code&gt; не смог найти ее как обычную подпрограмму. Он либо не существует, либо еще не определен.</target>
        </trans-unit>
        <trans-unit id="e40be2d06acbdf1af8b44d624778687fbb9e49ee" translate="yes" xml:space="preserve">
          <source>You've asked &lt;code&gt;Fatal&lt;/code&gt; to try and replace a subroutine which does not exist, or has not yet been defined.</source>
          <target state="translated">Вы попросили &lt;code&gt;Fatal&lt;/code&gt; попробовать заменить подпрограмму, которая не существует или еще не определена.</target>
        </trans-unit>
        <trans-unit id="b50e18d238da3dcc7957f257361d12bcaab56e61" translate="yes" xml:space="preserve">
          <source>You've called &lt;code&gt;Fatal&lt;/code&gt; with an argument that doesn't look like a subroutine name, nor a switch that this version of Fatal understands.</source>
          <target state="translated">Вы вызвали &lt;code&gt;Fatal&lt;/code&gt; с аргументом, который не похож на имя подпрограммы, или с переключателем, который понимает эта версия Fatal.</target>
        </trans-unit>
        <trans-unit id="dcf998c7dc1a2b4fcde7c406f8c5df0a1daf51ce" translate="yes" xml:space="preserve">
          <source>You've found a bug in &lt;code&gt;Fatal&lt;/code&gt; . Please report it using the &lt;code&gt;perlbug&lt;/code&gt; command.</source>
          <target state="translated">Вы нашли ошибку в &lt;code&gt;Fatal&lt;/code&gt; . Сообщите об этом с помощью команды &lt;code&gt;perlbug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="475fb69a6a2555d09a61f2284d19f582455e0ff5" translate="yes" xml:space="preserve">
          <source>You've insisted on hints for user-subroutines, either by pre-pending a &lt;code&gt;!&lt;/code&gt; to the subroutine name itself, or earlier in the list of arguments to &lt;code&gt;autodie&lt;/code&gt; . However the subroutine in question does not have any hints available.</source>
          <target state="translated">Вы настаивали на подсказках для пользовательских подпрограмм, либо предварительно отложив a &lt;code&gt;!&lt;/code&gt; к самому имени подпрограммы или ранее в списке аргументов &lt;code&gt;autodie&lt;/code&gt; . Однако рассматриваемая подпрограмма не имеет доступных подсказок.</target>
        </trans-unit>
        <trans-unit id="3c13a053a1a459196298d76dc68f54350a5781eb" translate="yes" xml:space="preserve">
          <source>You've probably seen shuffling algorithms that work using splice, randomly picking another element to swap the current element with</source>
          <target state="translated">Вы,вероятно,видели перетасовки алгоритмов,которые работают с использованием сплайса,случайно выбирая другой элемент,чтобы поменять текущий элемент на</target>
        </trans-unit>
        <trans-unit id="4f7734dcac6827c63f3c8f78e3f70fe360dc90d8" translate="yes" xml:space="preserve">
          <source>You've tried to use &lt;code&gt;Fatal&lt;/code&gt; on a Perl built-in that can't be overridden, such as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, which means that &lt;code&gt;Fatal&lt;/code&gt; can't help you, although some other modules might. See the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section of this documentation.</source>
          <target state="translated">Вы пытались использовать &lt;code&gt;Fatal&lt;/code&gt; на встроенном Perl, который нельзя переопределить, например &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , а это значит, что &lt;code&gt;Fatal&lt;/code&gt; не может вам помочь, хотя некоторые другие модули могут. См. Раздел этой документации &lt;a href=&quot;#SEE-ALSO&quot;&gt;СМОТРИ ТАКЖЕ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="770547bed3b38328c9ebe9f8750573476f6753ff" translate="yes" xml:space="preserve">
          <source>Young and free of legacy weight, providing a lightweight and easy to learn API. Has a growing addon ecosystem. It is best used for smaller projects and very easy to learn for beginners.</source>
          <target state="translated">Молодой и свободный от унаследованного веса,обеспечивающий легкий и легкий в изучении API.Имеет растущую экосистему аддонов.Лучше всего используется для небольших проектов и очень прост в освоении для новичков.</target>
        </trans-unit>
        <trans-unit id="3c6f85b02933dd53061abea03a23ce712a1c9139" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; is most probably working just fine. It's the numbers that aren't quite what you think.</source>
          <target state="translated">Ваш &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; , скорее всего, работает нормально. Это цифры, которые не совсем то, что вы думаете.</target>
        </trans-unit>
        <trans-unit id="df53f54d51a07584d7be09d83850a7da9c15786b" translate="yes" xml:space="preserve">
          <source>Your basic test. Pass if &lt;code&gt;$test&lt;/code&gt; is true, fail if $test is false. Just like Test::Simple's &lt;code&gt;ok()&lt;/code&gt; .</source>
          <target state="translated">Ваш основной тест. Пройдено, если &lt;code&gt;$test&lt;/code&gt; истинно, неудачно, если $ test ложно. Как и в случае с Test :: Simple &lt;code&gt;ok()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b237ec1c8f3c84ff91c26a3b96b070c2410531e4" translate="yes" xml:space="preserve">
          <source>Your best bet is to use the single argument form:</source>
          <target state="translated">Лучше всего использовать единую форму аргументации:</target>
        </trans-unit>
        <trans-unit id="30a923bd50861e3e1f2796d154bd6dcc6842fa55" translate="yes" xml:space="preserve">
          <source>Your choice:</source>
          <target state="translated">Твой выбор:</target>
        </trans-unit>
        <trans-unit id="2240cd19d3c19a8cd0a6388378dc061fa17be90f" translate="yes" xml:space="preserve">
          <source>Your commit message should describe what part of the Perl core you're changing and what you expect your patch to do.</source>
          <target state="translated">Ваше сообщение о коммите должно описывать,какую часть ядра Perl вы изменяете и чего вы ожидаете от патча.</target>
        </trans-unit>
        <trans-unit id="9f522992b80d434f30bfc99a44403ac7ea5d333f" translate="yes" xml:space="preserve">
          <source>Your commit message should describe why the change you are making is important. When someone looks at your change in six months or six years, your intent should be clear.</source>
          <target state="translated">Ваше сообщение о коммите должно описывать,почему изменения,которые вы делаете,важны.Когда кто-то смотрит на ваши изменения через шесть месяцев или шесть лет,ваши намерения должны быть ясны.</target>
        </trans-unit>
        <trans-unit id="0e92f837de5ea84ed03360a4aeae41a080276983" translate="yes" xml:space="preserve">
          <source>Your current &lt;b&gt;directory&lt;/b&gt;, from which relative pathnames are interpreted by the &lt;b&gt;operating system&lt;/b&gt;. The operating system knows your current directory because you told it with a &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, or because you started out in the place where your parent &lt;b&gt;process&lt;/b&gt; was when you were born.</source>
          <target state="translated">Ваш текущий &lt;b&gt;каталог&lt;/b&gt; , относительные пути из которого интерпретируются &lt;b&gt;операционной системой&lt;/b&gt; . Операционная система знает ваш текущий каталог, потому что вы указали его с помощью &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; или потому что вы начали в том месте, где находился ваш родительский &lt;b&gt;процесс,&lt;/b&gt; когда вы родились.</target>
        </trans-unit>
        <trans-unit id="d9200ca79b7b623bd2d92209c7c88d5edf0f0d25" translate="yes" xml:space="preserve">
          <source>Your custom type should then be picked up automatically by the &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;.</source>
          <target state="translated">Затем ваш пользовательский тип должен быть автоматически выбран &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7f0615cde01baf7008f00eb9c075025028921a" translate="yes" xml:space="preserve">
          <source>Your distribution &lt;b&gt;must&lt;/b&gt; have a &lt;code&gt;NAME&lt;/code&gt; .</source>
          <target state="translated">У вашего дистрибутива &lt;b&gt;должно&lt;/b&gt; быть &lt;code&gt;NAME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df70fd54c497020a59006e2165eb78aadc748605" translate="yes" xml:space="preserve">
          <source>Your first try should probably be the &lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt; module, which is in the Perl standard library since Perl 5.8. It has a variety of functions to deal with tricky text. The &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Common&quot;&gt;Regexp::Common&lt;/a&gt; module can also help by providing canned patterns you can use.</source>
          <target state="translated">Ваша первая попытка, вероятно, должна быть модулем &lt;a href=&quot;text/balanced&quot;&gt;Text :: Balanced&lt;/a&gt; , который находится в стандартной библиотеке Perl, начиная с Perl 5.8. У него есть множество функций для работы с сложным текстом. Модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Common&quot;&gt;Regexp :: Common&lt;/a&gt; также может помочь, предоставляя стандартные шаблоны, которые вы можете использовать.</target>
        </trans-unit>
        <trans-unit id="880f6f429e2d63ef4a94f9a2206ede8287e74da3" translate="yes" xml:space="preserve">
          <source>Your interfaces should be understandable by an average Perl programmer. The following guidelines may help you judge whether your API is sufficiently straightforward:</source>
          <target state="translated">Ваши интерфейсы должны быть понятны среднестатистическому программисту на Perl.Следующие рекомендации могут помочь вам судить о том,достаточно ли понятен ваш API:</target>
        </trans-unit>
        <trans-unit id="d26baf198cb18edde520e205142e25037414abf9" translate="yes" xml:space="preserve">
          <source>Your internet domain name</source>
          <target state="translated">Ваше доменное имя в Интернете</target>
        </trans-unit>
        <trans-unit id="c8e05b300242eb52ca20c1b662ee525c5256fe27" translate="yes" xml:space="preserve">
          <source>Your interpreter doesn't know how to communicate with these extensions on its own. A little glue will help. Up until now you've been calling</source>
          <target state="translated">Ваш переводчик не знает,как общаться с этими расширениями самостоятельно.Немного клея поможет.До сих пор вы звонили</target>
        </trans-unit>
        <trans-unit id="926b6183d26bfd81c7f17ff04a868dae347149ae" translate="yes" xml:space="preserve">
          <source>Your mileage may vary...</source>
          <target state="translated">Ваш пробег может варьироваться...</target>
        </trans-unit>
        <trans-unit id="60a065094064545ff1123708e618e1b6cf8cbd1c" translate="yes" xml:space="preserve">
          <source>Your mileage will vary. If in any doubt &lt;b&gt;do not use it&lt;/b&gt;.</source>
          <target state="translated">Ваш пробег будет отличаться. В случае сомнений &lt;b&gt;не используйте его&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c8a47834f473426f773c0b79429bd305f3db3ac9" translate="yes" xml:space="preserve">
          <source>Your module may be object oriented (OO) or not, or it may have both kinds of interfaces available. There are pros and cons of each technique, which should be considered when you design your API.</source>
          <target state="translated">Ваш модуль может быть объектно-ориентированным (OO)или нет,или же в нем могут быть доступны оба типа интерфейсов.Есть плюсы и минусы каждой техники,которые следует учитывать при разработке API.</target>
        </trans-unit>
        <trans-unit id="4936a62e724ff21109fff06e820adf4197164d03" translate="yes" xml:space="preserve">
          <source>Your module should also include a README file describing the module and giving pointers to further information (website, author email).</source>
          <target state="translated">Ваш модуль также должен включать README файл,описывающий модуль и дающий указатели на дополнительную информацию (веб-сайт,электронная почта автора).</target>
        </trans-unit>
        <trans-unit id="290b95e5d44851668b2e9d3e7d74fdc415789c4e" translate="yes" xml:space="preserve">
          <source>Your module should have a clearly defined scope which is no longer than a single sentence. Can your module be broken down into a family of related modules?</source>
          <target state="translated">Ваш модуль должен иметь четко определенную область действия,которая не должна превышать одного предложения.Можно ли разбить ваш модуль на семейство связанных модулей?</target>
        </trans-unit>
        <trans-unit id="8348552a40cd77a386588c2671c4e766e50a33bd" translate="yes" xml:space="preserve">
          <source>Your module should include documentation aimed at Perl developers. You should use Perl's &quot;plain old documentation&quot; (POD) for your general technical documentation, though you may wish to write additional documentation (white papers, tutorials, etc) in some other format. You need to cover the following subjects:</source>
          <target state="translated">Ваш модуль должен включать документацию,предназначенную для разработчиков Perl.Вы должны использовать &quot;обычную старую документацию&quot; (POD)на Perl для вашей общей технической документации,хотя вы можете захотеть написать дополнительную документацию (технические документы,учебники и т.д.)в каком-нибудь другом формате.Вам необходимо охватить следующие темы:</target>
        </trans-unit>
        <trans-unit id="861d9c806a8066b7b2265b2640dfe765fcbec7fa" translate="yes" xml:space="preserve">
          <source>Your module should run successfully under the strict pragma and should run without generating any warnings. Your module should also handle taint-checking where appropriate, though this can cause difficulties in many cases.</source>
          <target state="translated">Ваш модуль должен успешно работать под строгим прагматизмом и не выдавать никаких предупреждений.Ваш модуль также должен справляться с проверкой на наличие пятен там,где это необходимо,хотя во многих случаях это может вызвать затруднения.</target>
        </trans-unit>
        <trans-unit id="55948057c1f1e500efb989c6858ac749bffed2dd" translate="yes" xml:space="preserve">
          <source>Your module will be part of a developer's toolkit. It will not, in itself, form the &lt;b&gt;entire&lt;/b&gt; toolkit. It's tempting to add extra features until your code is a monolithic system rather than a set of modular building blocks.</source>
          <target state="translated">Ваш модуль станет частью набора инструментов разработчика. Сам по себе он не будет составлять &lt;b&gt;весь&lt;/b&gt; инструментарий. Заманчиво добавлять дополнительные функции, пока ваш код не станет монолитной системой, а не набором модульных строительных блоков.</target>
        </trans-unit>
        <trans-unit id="ad14f196f53d1d71d675a079baed8e60dbe25d0c" translate="yes" xml:space="preserve">
          <source>Your name for distributing the package with the version number included. This is used by 'make dist' to name the resulting archive file.</source>
          <target state="translated">Ваше имя для распространения пакета с включенным в него номером версии.Это имя используется в 'make dist' для имени результирующего архивного файла.</target>
        </trans-unit>
        <trans-unit id="175b500be69da19db3c39bbbb8f52b905fefd909" translate="yes" xml:space="preserve">
          <source>Your naming should be consistent. For instance, it's better to have:</source>
          <target state="translated">Твое имя должно быть последовательным.Например,лучше иметь:</target>
        </trans-unit>
        <trans-unit id="f42ef3040bfea4a52c4a41099b15560c160072e6" translate="yes" xml:space="preserve">
          <source>Your new toolkit</source>
          <target state="translated">Ваш новый набор инструментов</target>
        </trans-unit>
        <trans-unit id="ab842b2beec604e1059561d157771750a66116bd" translate="yes" xml:space="preserve">
          <source>Your patch may be returned with requests for changes, or requests for more detailed explanations about your fix.</source>
          <target state="translated">Ваш патч может быть возвращен с запросами на изменения или с запросами на более подробные разъяснения по вашему исправлению.</target>
        </trans-unit>
        <trans-unit id="1fe050a844b774ad50502f71e6d05cbaaefcd33b" translate="yes" xml:space="preserve">
          <source>Your programs can use the Config module to check whether threads are enabled. If your program can't run without them, you can say something like:</source>
          <target state="translated">Ваши программы могут использовать модуль Config,чтобы проверить,включены ли потоки.Если ваша программа не может работать без них,вы можете сказать что-то вроде:</target>
        </trans-unit>
        <trans-unit id="3998dbed349b6ee91c59e7ad32be8eef4f4d5eba" translate="yes" xml:space="preserve">
          <source>Your return address. The program will ask you to confirm its default if you don't use this option.</source>
          <target state="translated">Ваш обратный адрес.Программа попросит вас подтвердить его по умолчанию,если вы не используете эту опцию.</target>
        </trans-unit>
        <trans-unit id="b4ef3a10fbcdb1f56987b1c90e4c788bb1481b23" translate="yes" xml:space="preserve">
          <source>Your script will declare a skip with the reason why you skipped and exit immediately with a zero (success). See &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; for details.</source>
          <target state="translated">Ваш скрипт объявит пропуск с указанием причины, по которой вы пропустили, и немедленно завершит работу с нулем (успех). Подробнее см. &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ffadff849a0704c5040d7dc21528967305be780" translate="yes" xml:space="preserve">
          <source>Your system documentation for &lt;code&gt;clock&lt;/code&gt; , &lt;code&gt;clock_gettime&lt;/code&gt; , &lt;code&gt;clock_getres&lt;/code&gt; , &lt;code&gt;clock_nanosleep&lt;/code&gt; , &lt;code&gt;clock_settime&lt;/code&gt; , &lt;code&gt;getitimer&lt;/code&gt; , &lt;code&gt;gettimeofday&lt;/code&gt; , &lt;code&gt;setitimer&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ualarm&lt;/code&gt; .</source>
          <target state="translated">Системная документация для &lt;code&gt;clock&lt;/code&gt; , &lt;code&gt;clock_gettime&lt;/code&gt; , &lt;code&gt;clock_getres&lt;/code&gt; , &lt;code&gt;clock_nanosleep&lt;/code&gt; , &lt;code&gt;clock_settime&lt;/code&gt; , &lt;code&gt;getitimer&lt;/code&gt; , &lt;code&gt;gettimeofday&lt;/code&gt; , &lt;code&gt;setitimer&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;ualarm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f45278c990de17bddc07886e62872d5705e84df2" translate="yes" xml:space="preserve">
          <source>Your system may also have man pages installed for those modules, in which case you can probably just use the man(1) command.</source>
          <target state="translated">В вашей системе также могут быть установлены man-страницы для этих модулей,в этом случае вы,вероятно,можете просто использовать команду man(1).</target>
        </trans-unit>
        <trans-unit id="f67311ed40fd91017f49e031b08d5e66ea348e7f" translate="yes" xml:space="preserve">
          <source>Your system may use lockfiles to control multiple access. Make sure you follow the correct protocol. Unpredictable behavior can result from multiple processes reading from one device.</source>
          <target state="translated">Ваша система может использовать блокировочные файлы для контроля многократного доступа.Убедитесь,что вы следуете правильному протоколу.Непредсказуемое поведение может быть результатом многократного считывания данных с одного устройства.</target>
        </trans-unit>
        <trans-unit id="69b78ca3bd9762db3a1f2fc87f8707247fab00ca" translate="yes" xml:space="preserve">
          <source>Your terminal expects ISO-8859-1 (yes/no)?</source>
          <target state="translated">Ваш терминал ожидает ISO-8859-1 (да/нет)?</target>
        </trans-unit>
        <trans-unit id="eb27aa8afa0df31a742a7c36ee000dde7a333d59" translate="yes" xml:space="preserve">
          <source>Your test suite additions should generally follow these guidelines (courtesy of Gurusamy Sarathy &amp;lt;gsar@activestate.com&amp;gt;):</source>
          <target state="translated">При добавлении вашего набора тестов, как правило, следует придерживаться следующих рекомендаций (любезно предоставлено Гурусами Сарати &amp;lt;gsar@activestate.com&amp;gt;):</target>
        </trans-unit>
        <trans-unit id="6757bbaa3e59b9eae8d3358f1cb54cb3839ec256" translate="yes" xml:space="preserve">
          <source>Your text string will be sent using the bytes in Perl's internal format. In some cases, Perl will warn you that you're doing something wrong, with a friendly warning:</source>
          <target state="translated">Ваша текстовая строка будет отправлена с использованием байтов во внутреннем формате Perl.В некоторых случаях Perl предупредит вас о том,что вы делаете что-то не так,с дружественным предупреждением:</target>
        </trans-unit>
        <trans-unit id="e6fdf4d82698552aa3b04fea17dd3738278fad63" translate="yes" xml:space="preserve">
          <source>Your version number for distributing the package. This defaults to 0.1.</source>
          <target state="translated">Ваш номер версии для распространения пакета.По умолчанию он равен 0.1.</target>
        </trans-unit>
        <trans-unit id="6470a2f4b416b0ce03b530f9156d5bf0649ff6c9" translate="yes" xml:space="preserve">
          <source>Your version number for the .xs file of this package. This defaults to the value of the VERSION attribute.</source>
          <target state="translated">Ваш номер версии для файла .xs данного пакета.По умолчанию он равен значению атрибута VERSION.</target>
        </trans-unit>
        <trans-unit id="f943e56eab4587790a7d8e3702190e81dcdaf111" translate="yes" xml:space="preserve">
          <source>YourModule.pm</source>
          <target state="translated">YourModule.pm</target>
        </trans-unit>
        <trans-unit id="a032b09d002bfec745ff9618af85165922efa0c5" translate="yes" xml:space="preserve">
          <source>YourPackage.pm</source>
          <target state="translated">YourPackage.pm</target>
        </trans-unit>
        <trans-unit id="96b451942b04b66df98082b51a96fd9c21c979e6" translate="yes" xml:space="preserve">
          <source>YourPackage.xs</source>
          <target state="translated">YourPackage.xs</target>
        </trans-unit>
        <trans-unit id="3a63a963c11724e54297328f1cd01fab7cc056fb" translate="yes" xml:space="preserve">
          <source>YourProjClass-&amp;gt;fallback_language_classes()</source>
          <target state="translated">YourProjClass-&amp;gt;fallback_language_classes()</target>
        </trans-unit>
        <trans-unit id="93d7ab614acf51e6ed84bd194c23c002e0bc546a" translate="yes" xml:space="preserve">
          <source>YourProjClass-&amp;gt;fallback_languages()</source>
          <target state="translated">YourProjClass-&amp;gt;fallback_languages()</target>
        </trans-unit>
        <trans-unit id="98d44898a77a54f7718ada94977059bdfaa937a9" translate="yes" xml:space="preserve">
          <source>Yuval Kogman &amp;lt;nothingmuch@woobling.org&amp;gt;</source>
          <target state="translated">Юваль Когман &amp;lt;ничегоmuch@woobling.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cf3031c81c2a11248f63acc5b78e4d34caa6f6e1" translate="yes" xml:space="preserve">
          <source>Yves Orton suggested and helped for making &lt;code&gt;Sys::Syslog&lt;/code&gt; use the native event logger under Win32 systems.</source>
          <target state="translated">Ив Ортон предложил и помог заставить &lt;code&gt;Sys::Syslog&lt;/code&gt; использовать собственный журнал событий в системах Win32.</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="f2fd2a56c54b7c37d0d9f4b109a0de518f12a9a8" translate="yes" xml:space="preserve">
          <source>Zeus for Windows is another Win32 multi-language editor/IDE that comes with support for Perl.</source>
          <target state="translated">Zeus для Windows-это еще один Win32 мультиязычный редактор/IDE,который поставляется с поддержкой Perl.</target>
        </trans-unit>
        <trans-unit id="db104e2c14625f90e76e1788e4a37b936ee652b6" translate="yes" xml:space="preserve">
          <source>Zlib Library Version Support</source>
          <target state="translated">Поддержка версий библиотеки Zlib</target>
        </trans-unit>
        <trans-unit id="1e5c2f367f02e47a8c160cda1cd9d91decbac441" translate="yes" xml:space="preserve">
          <source>[</source>
          <target state="translated">[</target>
        </trans-unit>
        <trans-unit id="fd2a987f8fd28617d0641e26e1ee23e3f1c471fb" translate="yes" xml:space="preserve">
          <source>[.Foo.Bar]</source>
          <target state="translated">[.Foo.Bar]</target>
        </trans-unit>
        <trans-unit id="4b6373280a08e827a1ab5c68abe6349dceef8925" translate="yes" xml:space="preserve">
          <source>[.Lib.Auto.</source>
          <target state="translated">[.Lib.Auto.</target>
        </trans-unit>
        <trans-unit id="630f50e0cd8cffab6e0a142979fe618389586858" translate="yes" xml:space="preserve">
          <source>[.pod]</source>
          <target state="translated">[.pod]</target>
        </trans-unit>
        <trans-unit id="0cf7207af93f70e6c641ba1e90b8e15f86916573" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;http://en.wikipedia.org/wiki/Base64#URL_applications&quot;&gt;http://en.wikipedia.org/wiki/Base64#URL_applications&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;http://en.wikipedia.org/wiki/Base64#URL_applications&quot;&gt;http://en.wikipedia.org/wiki/Base64#URL_applications&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6819c355b216edc67b6c6a8c6dab5509cee1376" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;http://perl.plover.com/Rx/paper/&quot;&gt;http://perl.plover.com/Rx/paper/&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;http://perl.plover.com/Rx/paper/&quot;&gt;http://perl.plover.com/Rx/paper/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4bcc9cdddccdc2ae22d3c3454a7739be0e29b10" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b002b78bc12a3ff6e29895fae1de731a69f453ae" translate="yes" xml:space="preserve">
          <source>[&lt;b&gt;-help&lt;/b&gt;] [&lt;b&gt;-man&lt;/b&gt;] [&lt;b&gt;-exit&lt;/b&gt;</source>
          <target state="translated">[ &lt;b&gt;-help&lt;/b&gt; ] [ &lt;b&gt;-man&lt;/b&gt; ] [ &lt;b&gt;-exit&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b0275f738749aa6cac8eb913cf57b88a87e7251a" translate="yes" xml:space="preserve">
          <source>[= =] and [. .]</source>
          <target state="translated">[= =] и [. .]</target>
        </trans-unit>
        <trans-unit id="afca1504bc2e3c3044d29b9874e85f36958af894" translate="yes" xml:space="preserve">
          <source>[Building/installing modules]</source>
          <target state="translated">[Сборка / установка модулей]</target>
        </trans-unit>
        <trans-unit id="1c6555677db9746d71e639d2861c450df21a423a" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Test whether</source>
          <target state="translated">[ВНУТРЕННИЙ] Проверить,</target>
        </trans-unit>
        <trans-unit id="3e3a19400d8a2d90d0db0e1989c48275083a979d" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Tests whether the UTF8 flag is turned on in the</source>
          <target state="translated">[ВНУТРЕННИЙ] Проверяет, включен ли флаг UTF8 в</target>
        </trans-unit>
        <trans-unit id="22eb99e5f093e515d3af9067fe7ea86722b6bbf1" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Turns the</source>
          <target state="translated">[ВНУТРЕННИЙ] Включает</target>
        </trans-unit>
        <trans-unit id="009b33a0528361398d9c707d1795bc4cfafeac38" translate="yes" xml:space="preserve">
          <source>[If you have the recommended version of bash for DJGPP, this is already done for you.]</source>
          <target state="translated">[Если у вас есть рекомендованная версия bash для DJGPP, это уже сделано за вас.]</target>
        </trans-unit>
        <trans-unit id="5af5c7f45b299c973fea5c4dcd0294b1e6234199" translate="yes" xml:space="preserve">
          <source>[If you have the recommended versions of djdev, shell utilities and gawk, all these are already done for you, and you will not need to do anything.]</source>
          <target state="translated">[Если у вас есть рекомендуемые версии djdev, утилит оболочки и gawk, все это уже сделано за вас, и вам не нужно ничего делать.]</target>
        </trans-unit>
        <trans-unit id="f3b3a575af1d23fed1f5628631ec3936ffe0f6d1" translate="yes" xml:space="preserve">
          <source>[Installing/building perl]</source>
          <target state="translated">[Установка / сборка Perl]</target>
        </trans-unit>
        <trans-unit id="5d1e8f7d83caac3b34475dd7d9e3096070d95629" translate="yes" xml:space="preserve">
          <source>[MAYCHANGE] In other words, the array or hash fetch/store functions don't really fetch and store actual values in the case of tied arrays and hashes. They merely call &lt;code&gt;mg_copy&lt;/code&gt; to attach magic to the values that were meant to be &quot;stored&quot; or &quot;fetched&quot;. Later calls to &lt;code&gt;mg_get&lt;/code&gt; and &lt;code&gt;mg_set&lt;/code&gt; actually do the job of invoking the TIE methods on the underlying objects. Thus the magic mechanism currently implements a kind of lazy access to arrays and hashes.</source>
          <target state="translated">[MAYCHANGE] Другими словами, функции выборки / сохранения массива или хэша на самом деле не извлекают и не сохраняют фактические значения в случае связанных массивов и хэшей. Они просто вызывают &lt;code&gt;mg_copy&lt;/code&gt; , чтобы прикрепить магию к значениям, которые должны были быть &amp;laquo;сохранены&amp;raquo; или &amp;laquo;извлечены&amp;raquo;. Более поздние вызовы &lt;code&gt;mg_get&lt;/code&gt; и &lt;code&gt;mg_set&lt;/code&gt; фактически выполняют работу по вызову методов TIE для нижележащих объектов. Таким образом, магический механизм в настоящее время реализует своего рода ленивый доступ к массивам и хешам.</target>
        </trans-unit>
        <trans-unit id="2c69f013a0c0b9f7ed975da9c912abcf0653290a" translate="yes" xml:space="preserve">
          <source>[NEWVAL]</source>
          <target state="translated">[NEWVAL]</target>
        </trans-unit>
        <trans-unit id="4f834c241d7bdeabf113279ffdacebc7dc88459c" translate="yes" xml:space="preserve">
          <source>[Some of this answer was contributed by Kenneth Albanowski.]</source>
          <target state="translated">[Часть этого ответа принадлежит Кеннету Альбановски.]</target>
        </trans-unit>
        <trans-unit id="e9c2c8715a2a88d854204445ba9c4d5016aa0191" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;tie&lt;/a&gt; function.]</source>
          <target state="translated">[Эта функция была в значительной степени заменена функцией &lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;связывания&lt;/a&gt; .]</target>
        </trans-unit>
        <trans-unit id="b1c00ee4c595ea64bb97d342fb1c568e80ba451b" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[Эта функция в значительной степени заменена функцией &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; .]</target>
        </trans-unit>
        <trans-unit id="3b25169a6ac2e6f9178110c63d21693ee54fec41" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[Эта функция в значительной степени заменена функцией &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; .]</target>
        </trans-unit>
        <trans-unit id="466698b7c92675c3f06ae6b2691207f2e8b24913" translate="yes" xml:space="preserve">
          <source>[This section provides a short overview only...]</source>
          <target state="translated">[В этом разделе представлен только краткий обзор ...]</target>
        </trans-unit>
        <trans-unit id="68ecc94bfa207a245a096cc2d83887da582b2e04" translate="yes" xml:space="preserve">
          <source>[This section still under construction. Ignore everything here. Post no bills. Everything not permitted is forbidden.]</source>
          <target state="translated">[Этот раздел все еще находится в разработке. Здесь все игнорируйте. Не публикуйте счета. Все, что не разрешено, запрещено.]</target>
        </trans-unit>
        <trans-unit id="69f3514fe4449506ca2c5d0bbc28b3f3698032b0" translate="yes" xml:space="preserve">
          <source>[Well, it was in</source>
          <target state="translated">[Ну, это было в</target>
        </trans-unit>
        <trans-unit id="88f04dbeb1493ee12988be863cfacc3c7afc777a" translate="yes" xml:space="preserve">
          <source>[linebreak]</source>
          <target state="translated">[linebreak]</target>
        </trans-unit>
        <trans-unit id="434d82c910fba2a895a5be59050f05f00a371e10" translate="yes" xml:space="preserve">
          <source>[r,t]</source>
          <target state="translated">[r,t]</target>
        </trans-unit>
        <trans-unit id="6018e494126b314973d815b3477ee1c68ccc6d49" translate="yes" xml:space="preserve">
          <source>[space][space]</source>
          <target state="translated">[space][space]</target>
        </trans-unit>
        <trans-unit id="cb559588de140bc32d992097ac9c98f627da21d3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any character but a digit</source>
          <target state="translated">\ D - это отрицание \ d; он представляет любой символ, кроме цифры</target>
        </trans-unit>
        <trans-unit id="6f370d6af4556227e5ea557e0c0431081559d1a3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any other character than a digit, or [^\d]</source>
          <target state="translated">\ D - это отрицание \ d; он представляет любой другой символ, кроме цифры, или [^ \ d]</target>
        </trans-unit>
        <trans-unit id="483707e791c24bf4f182daf8d06032f62bf516af" translate="yes" xml:space="preserve">
          <source>\N</source>
          <target state="translated">\N</target>
        </trans-unit>
        <trans-unit id="4b60caece8e9624e4c91f3da6482cbb9fa5912e3" translate="yes" xml:space="preserve">
          <source>\N, like the period, matches any character but &quot;\n&quot;, but it does so regardless of whether the modifier &lt;code&gt;//s&lt;/code&gt; is in effect.</source>
          <target state="translated">\ N, как и точка, соответствует любому символу, кроме &quot;\ n&quot;, но делает это независимо от того, действует ли модификатор &lt;code&gt;//s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5201358bd3798962465786e1340b8d798eb0da66" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character</source>
          <target state="translated">\ S - это отрицание \ s; он представляет любой непробельный символ</target>
        </trans-unit>
        <trans-unit id="2aaa2b30524de7ddb035b2ae4eda9d942f299a65" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character [^\s]</source>
          <target state="translated">\ S - это отрицание \ s; он представляет собой любой непробельный символ [^ \ s]</target>
        </trans-unit>
        <trans-unit id="133129d31f2a64079b4ceec9832484853084047e" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character</source>
          <target state="translated">\ W - отрицательный \ w; он представляет любой символ, не являющийся словом</target>
        </trans-unit>
        <trans-unit id="2f560e92ebecb72c198e33822a82e6e5d9a8c550" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character [^\w]</source>
          <target state="translated">\ W - отрицательный \ w; он представляет собой любой символ, не являющийся словом [^ \ w]</target>
        </trans-unit>
        <trans-unit id="ddc0294fd2b2565335d9fa242ca21ab1de388250" translate="yes" xml:space="preserve">
          <source>\d is a digit and represents</source>
          <target state="translated">\ d - это цифра, представляющая</target>
        </trans-unit>
        <trans-unit id="97c6b30e873b86cfc47d930fe4d9ba2652595791" translate="yes" xml:space="preserve">
          <source>\d matches a digit, not just [0-9] but also digits from non-roman scripts</source>
          <target state="translated">\ d соответствует цифре, а не только [0-9], но и цифрам из нелатинских шрифтов.</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="7b4662d5c71b2e001cf94c995515942d7af18900" translate="yes" xml:space="preserve">
          <source>\s is a whitespace character and represents</source>
          <target state="translated">\ s является пробельным символом и представляет</target>
        </trans-unit>
        <trans-unit id="34a39001363ef5f5ff61ce5c0f19ca73473f1c4c" translate="yes" xml:space="preserve">
          <source>\s matches a whitespace character, the set [\ \t\r\n\f] and others</source>
          <target state="translated">\ s соответствует пробельному символу, множеству [\ \ t \ r \ n \ f] и другим</target>
        </trans-unit>
        <trans-unit id="5b2fc8d661205bb1347d335b86f497e98283eb99" translate="yes" xml:space="preserve">
          <source>\w is a word character (alphanumeric or _) and represents</source>
          <target state="translated">\ w является символом слова (буквенно-цифровым или _) и представляет</target>
        </trans-unit>
        <trans-unit id="9dec4b43c57ccafde6f9f014b8fdbdc6ad78db44" translate="yes" xml:space="preserve">
          <source>\w matches a word character (alphanumeric or _), not just [0-9a-zA-Z_] but also digits and characters from non-roman scripts</source>
          <target state="translated">\ w соответствует символу слова (буквенно-цифровому или _), а не только [0-9a-zA-Z_], но также цифрам и символам из нелатинских шрифтов.</target>
        </trans-unit>
        <trans-unit id="3ae3339d3df42bd81574a61520ae7ec1b26f3f20" translate="yes" xml:space="preserve">
          <source>\xXX</source>
          <target state="translated">\xXX</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="5270612a32d634db637d354ac0c6c3ea3a691c4e" translate="yes" xml:space="preserve">
          <source>] ...]</source>
          <target state="translated">] ...]</target>
        </trans-unit>
        <trans-unit id="7ba1b0d7168057117598130b4cf4913ce7a6d1dd" translate="yes" xml:space="preserve">
          <source>] [</source>
          <target state="translated">] [</target>
        </trans-unit>
        <trans-unit id="e5f96af2d25deb494bcf280fcc22ad9c64b0b550" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;--&lt;/b&gt; ] [</source>
          <target state="translated">] [ &lt;b&gt;-&lt;/b&gt; ] [</target>
        </trans-unit>
        <trans-unit id="7837a05d80f9d4246db05db7739ac9da350692ee" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-okay&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</source>
          <target state="translated">] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-хорошо&lt;/b&gt; | &lt;b&gt;-нок&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d5d86b624a368f240fc8ef717bfac5763b684cc" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fa5aee76641c8374c4a3bb363faca409d18cd95d" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-M&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-M&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe33edc3b5acacf101538a5199d8ef6004372824" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-b&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-b&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d91a8c76a043075cdd5f57b8dc8dd020742dc547" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-c&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-c&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4088d7468ddaef6b6676933981d369aadcae05a4" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-e&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-e&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d446bd20cd4f210e32dddf0953007e6f2d1b5053" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [&lt;i&gt;number/list&lt;/i&gt;] &lt;/b&gt;] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [ &lt;i&gt;число / список&lt;/i&gt; ]&lt;/b&gt; ] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="aca1a0eb03ef6c4968553072034eeee79bad305b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-l&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-l&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="f481bbb7a3ba5ecc6ab5d2ec8921b0caad222177" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-m&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-m&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="7be946169865caf0b4ad4e1c551c97f832b6089b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-r&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-r&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3b371bc5f1731a182afaca0f4c21e6e42f754174" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1cab1fd629b30db28801a88fb200dff0c7358250" translate="yes" xml:space="preserve">
          <source>] [ &lt;code&gt;,&lt;/code&gt; [</source>
          <target state="translated">] [ &lt;code&gt;,&lt;/code&gt; [</target>
        </trans-unit>
        <trans-unit id="60ce1ac427ca955aba7df5e26e666a0cbcdc2f9a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--date&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--date&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d95dd25605574b2c81782f8507419949dc89534a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--errors&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--errors&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="fbbc117050d9385ff235a1dc760a3b8dfa0999cc" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixed&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixed&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="a9250074a5445bcf8eef004dc71ec67ecb9c809b" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbold&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbold&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d7f9db810e921cd28d21cd440fca4722b8d4bf69" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbolditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbolditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="aa2fbdd948dba01a46110fa01725308ca2ef5a08" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixeditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixeditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="6fe77b356c6468bc7d92a318ad6bc1146c2e9172" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--name&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--name&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="39d7370445bc798950f647a09f55cf0aa24d1af4" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--nourls&lt;/b&gt; ] [ &lt;b&gt;--official&lt;/b&gt; ] [ &lt;b&gt;--quotes&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="3ec1ee1005b040af6eed1e1fb1b89be01226d9ce" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;-w&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;--nourls&lt;/b&gt; ] [ &lt;b&gt;--stderr&lt;/b&gt; ] [ &lt;b&gt;-w&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc864e3beb0db82da5fea274b5d83179e2d64279" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--release&lt;/b&gt;[=</source>
          <target state="translated">] [ &lt;b&gt;--release&lt;/b&gt; [=</target>
        </trans-unit>
        <trans-unit id="039bb11ec7e8c6197572dde03eb7f6b45f6c8aa6" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;--utf8&lt;/b&gt;] [&lt;b&gt;--verbose&lt;/b&gt;] [</source>
          <target state="translated">] [ &lt;b&gt;--stderr&lt;/b&gt; ] [ &lt;b&gt;--utf8&lt;/b&gt; ] [ &lt;b&gt;--verbose&lt;/b&gt; ] [</target>
        </trans-unit>
        <trans-unit id="a4b5a58dd7ad938ef0e7ae582da7c0d873b1c242" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-formatter&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-форматер&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3fea5aca88ab916f93ed287dace98a76f7c143b9" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-i&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-i&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="53f6bda63d23372157c365e9965c7ef45e33a277" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-output&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-выход&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="18e0dd56af29c5174edbefe6f7085682dda6e116" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-pathlist&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-pathlist&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="22e124d430902d5c5221cf1c7cf4da237a26222d" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-q&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-q&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0fde4e5d48f00a1e501ad8fe7e8926bde75175b1" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-verbose&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-verbose&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e725a8e5ac100bccc71bd3fa100f49857c67db06" translate="yes" xml:space="preserve">
          <source>] ] &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">]] &lt;code&gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="840af7de6cad4319ff4be78eacfb9c5acf43cf39" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-0&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-0&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9bd44ceffbf549e2ad098d1002b1d677b7d0aa0b" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-D&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-D&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="7bb86a5d6f5da412edc5fa8d69ccfe2ff581bca6" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-I&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-I&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="598e07f95f029fa4f2ce352acaf2288c664b4b76" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</source>
          <target state="translated">]] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt; [ &lt;b&gt;t&lt;/b&gt; ] [:</target>
        </trans-unit>
        <trans-unit id="9db4a34f3f65d57a976aae91bae6f7bcb0835f01" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-i&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-i&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9d460c5f4d3c2477cabad0ac755529bb24fc2217" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc8d2ac6bf0f644f728f5f8cfc8080a8f51efa0e" translate="yes" xml:space="preserve">
          <source>] ] [ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</source>
          <target state="translated">]] [[ &lt;b&gt;-e&lt;/b&gt; | &lt;b&gt;-E&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a7dbaad3cf2aa9abf7389e31afb732d6e15865c" translate="yes" xml:space="preserve">
          <source>]. I.e., &quot;_1&quot; becomes with $_[1], and &quot;_-3&quot; is interpreted as $_[-3] (in which case @_ should have at least three elements in it). Note that $_[0] is the language handle, and is typically not named directly.</source>
          <target state="translated">]. То есть &quot;_1&quot; заменяется на $ _ [1], а &quot;_-3&quot; интерпретируется как $ _ [- 3] (в этом случае @_ должно содержать как минимум три элемента). Обратите внимание, что $ _ [0] - это дескриптор языка, и обычно он не имеет прямого имени.</target>
        </trans-unit>
        <trans-unit id="3fad04c26433591d23451512c23642ef92daf2c6" translate="yes" xml:space="preserve">
          <source>]...</source>
          <target state="translated">]...</target>
        </trans-unit>
        <trans-unit id="36407ed3b603d0dfcd1bd6d50bc3fd8861d8d53f" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-p&lt;/b&gt;][&lt;b&gt;,-q&lt;/b&gt;][&lt;b&gt;,-l&lt;/b&gt;] [&lt;b&gt;,-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;, -p&lt;/b&gt; ] [ &lt;b&gt;, -q&lt;/b&gt; ] [ &lt;b&gt;, -l&lt;/b&gt; ] [ &lt;b&gt;, -s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a9030ca5cbcfd3f3b2ec230506e50fbd3cb2d7e0" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-x&lt;/b&gt;</source>
          <target state="translated">][&lt;b&gt;,-x&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8755a99ada779c83177a95e225a5063fe7499c98" translate="yes" xml:space="preserve">
          <source>]] [&lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">]] [ &lt;b&gt;--section&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="52fd940d0f74d5bee59eaa7c4f0549763254e747" translate="yes" xml:space="preserve">
          <source>_AUTHORS_</source>
          <target state="translated">_AUTHORS_</target>
        </trans-unit>
        <trans-unit id="6b18f91a4d56bcb4195d01326c1707f269dca59a" translate="yes" xml:space="preserve">
          <source>_FFFE and 0x</source>
          <target state="translated">_FFFE и 0x</target>
        </trans-unit>
        <trans-unit id="9ab76b9bb5c2c00731a6298f38a4cee313b768d1" translate="yes" xml:space="preserve">
          <source>_FFFF), all non-shortest encodings, etc.</source>
          <target state="translated">_FFFF), все некратчайшие кодировки и т. Д.</target>
        </trans-unit>
        <trans-unit id="335f29be57bcf11c73c32f1eb934a4263c82062e" translate="yes" xml:space="preserve">
          <source>_MANIFEST_</source>
          <target state="translated">_MANIFEST_</target>
        </trans-unit>
        <trans-unit id="95a35cef151f823296dfad3b7387390964178aff" translate="yes" xml:space="preserve">
          <source>_PDF_ files</source>
          <target state="translated">_PDF_ файлы</target>
        </trans-unit>
        <trans-unit id="a004e5d824ef48686abd54ae20b660d4a2c545c5" translate="yes" xml:space="preserve">
          <source>_Really_ Symbolic Calculator</source>
          <target state="translated">_Really_ Символьный калькулятор</target>
        </trans-unit>
        <trans-unit id="544b04467d0a8ee1a845e4b919a57d9da6144a5e" translate="yes" xml:space="preserve">
          <source>__DATA__</source>
          <target state="translated">__DATA__</target>
        </trans-unit>
        <trans-unit id="c7919376414e8b09a0411c19eee34a71902436cc" translate="yes" xml:space="preserve">
          <source>__DATA__, __END__, and the FOOBAR::DATA filehandle.</source>
          <target state="translated">__DATA__, __END__ и дескриптор файла FOOBAR :: DATA.</target>
        </trans-unit>
        <trans-unit id="ce8a6e08bc25f2ef37956e900401265cf56138c8" translate="yes" xml:space="preserve">
          <source>__END__</source>
          <target state="translated">__END__</target>
        </trans-unit>
        <trans-unit id="9d5d8995523b8b8951428baa81ea663ff0bd2c77" translate="yes" xml:space="preserve">
          <source>__FILE__</source>
          <target state="translated">__FILE__</target>
        </trans-unit>
        <trans-unit id="a51b95694c81c92580bff6f580f8e200ecf86661" translate="yes" xml:space="preserve">
          <source>__LINE__</source>
          <target state="translated">__LINE__</target>
        </trans-unit>
        <trans-unit id="04bd40a79312fa43a624aef25ac864c0770871a3" translate="yes" xml:space="preserve">
          <source>__PACKAGE__</source>
          <target state="translated">__PACKAGE__</target>
        </trans-unit>
        <trans-unit id="b0563c4fda49219aeb921efb5a63d4cff221a59b" translate="yes" xml:space="preserve">
          <source>__SUB__</source>
          <target state="translated">__SUB__</target>
        </trans-unit>
        <trans-unit id="aba4564d3c1fb21ecf21279947a269bfd72d5448" translate="yes" xml:space="preserve">
          <source>__int64</source>
          <target state="translated">__int64</target>
        </trans-unit>
        <trans-unit id="3485357323ef68368533ee148f92fcc38f19f972" translate="yes" xml:space="preserve">
          <source>_bgcd()</source>
          <target state="translated">_bgcd()</target>
        </trans-unit>
        <trans-unit id="3cde53170729285b62e4195015718cc3fccd9d47" translate="yes" xml:space="preserve">
          <source>_control87(3)</source>
          <target state="translated">_control87(3)</target>
        </trans-unit>
        <trans-unit id="ff4fbe22558273c6659ff3e79e3859bcae2f877b" translate="yes" xml:space="preserve">
          <source>_digit($obj, 0)</source>
          <target state="translated">_digit ($ obj, 0)</target>
        </trans-unit>
        <trans-unit id="25fb2a539a78bedeb7219e53f2b8469577c24022" translate="yes" xml:space="preserve">
          <source>_digit(123, -1)</source>
          <target state="translated">_digit (123; -1)</target>
        </trans-unit>
        <trans-unit id="a23c4cef0829fb103be12bd8e5048bf513e4694f" translate="yes" xml:space="preserve">
          <source>_perl.exe_</source>
          <target state="translated">_perl.exe_</target>
        </trans-unit>
        <trans-unit id="2f72a716af3238025dd4229dd58b83bc8629ac38" translate="yes" xml:space="preserve">
          <source>_perl_.exe_</source>
          <target state="translated">_perl_.exe_</target>
        </trans-unit>
        <trans-unit id="5991d513b9abe99f11e9b16c8256e4e9e06ca2ba" translate="yes" xml:space="preserve">
          <source>_perl__.exe_</source>
          <target state="translated">_perl__.exe_</target>
        </trans-unit>
        <trans-unit id="2db94965490eada37ae5ff14a1e0846dbe050e7c" translate="yes" xml:space="preserve">
          <source>_perl___.exe_</source>
          <target state="translated">_perl___.exe_</target>
        </trans-unit>
        <trans-unit id="1fdbb463b8aba017e1e17708622b828c0a70d691" translate="yes" xml:space="preserve">
          <source>_prove</source>
          <target state="translated">_prove</target>
        </trans-unit>
        <trans-unit id="998aae22ec5a43bf133ffb2d411823f4c8a72a20" translate="yes" xml:space="preserve">
          <source>_proverc</source>
          <target state="translated">_proverc</target>
        </trans-unit>
        <trans-unit id="be410059a97a4524ce3b914f3e9c9e407663c029" translate="yes" xml:space="preserve">
          <source>_read</source>
          <target state="translated">_read</target>
        </trans-unit>
        <trans-unit id="8f67b7c018384a0d10f9d2b4577d0c0658bc078a" translate="yes" xml:space="preserve">
          <source>_stdlib.h_ functions</source>
          <target state="translated">_stdlib.h_ функции</target>
        </trans-unit>
        <trans-unit id="d4086139b290958ed25f5bd7a1ff3d730dcf31a9" translate="yes" xml:space="preserve">
          <source>_sub()</source>
          <target state="translated">_sub()</target>
        </trans-unit>
        <trans-unit id="ab1aafd933e3c1f34b78838ca464fabb2cd4e4ef" translate="yes" xml:space="preserve">
          <source>_utf8_off</source>
          <target state="translated">_utf8_off</target>
        </trans-unit>
        <trans-unit id="17db770cf15f37a3c9f4bbc8584367bfd333dd75" translate="yes" xml:space="preserve">
          <source>_utf8_on</source>
          <target state="translated">_utf8_on</target>
        </trans-unit>
        <trans-unit id="349a2cf958187a837c3aed60aca5ce84a2ba8f78" translate="yes" xml:space="preserve">
          <source>`Memoizing' a function makes it faster by trading space for time. It does this by caching the return values of the function in a table. If you call the function again with the same arguments, &lt;code&gt;memoize&lt;/code&gt; jumps in and gives you the value out of the table, instead of letting the function compute the value all over again.</source>
          <target state="translated">&amp;laquo;Запоминание&amp;raquo; функции ускоряет ее за счет обмена места на время. Это достигается путем кэширования возвращаемых значений функции в таблице. Если вы снова &lt;code&gt;memoize&lt;/code&gt; функцию с теми же аргументами, запишется мемоиз и выдает значение из таблицы, вместо того, чтобы позволить функции вычислить значение заново.</target>
        </trans-unit>
        <trans-unit id="97a327decd1b5a73620456539cf89766d09acb8c" translate="yes" xml:space="preserve">
          <source>`` and pipe-open do not work under DOS.</source>
          <target state="translated">`` и pipe-open не работают под DOS.</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="049537f8ff01227a5296e1d4f8184a98a3f6ecb6" translate="yes" xml:space="preserve">
          <source>a &lt;b&gt;-u&lt;/b&gt; flag to make it unbuffered. But very few commands are designed to operate over pipes, so this seldom works unless you yourself wrote the program on the other end of the double-ended pipe.</source>
          <target state="translated">&lt;b&gt;-u&lt;/b&gt; флаг , чтобы сделать его небуферизовано. Но очень немногие команды предназначены для работы с каналами, поэтому это редко срабатывает, если вы сами не написали программу на другом конце двустороннего канала.</target>
        </trans-unit>
        <trans-unit id="29515f80a90ad15c4d7bd700ddff82308e27f071" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;DESTROY&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; in the inherited destructor then correctly picks up.</source>
          <target state="translated">&lt;code&gt;DESTROY&lt;/code&gt; метод), который вызов &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; в унаследованном деструкторе тогда правильно улавливает.</target>
        </trans-unit>
        <trans-unit id="5b4991d0075936f9dd187e536d33c94e2aa27450" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;new&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Init&lt;/code&gt; in the inherited constructor then correctly picks up.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; метод), который вызов &lt;code&gt;EVERY::LAST::Init&lt;/code&gt; в унаследованном конструкторе , то правильно улавливает.</target>
        </trans-unit>
        <trans-unit id="c969393479d626630230a3b33439fab76b06b48e" translate="yes" xml:space="preserve">
          <source>a PREFIX was given as an argument to WriteMakefile() it will set it to the $new_prefix + $default. This is for systems whose file layouts don't neatly fit into our ideas of prefixes.</source>
          <target state="translated">в качестве аргумента для WriteMakefile()был приведен PREFIX,который установит $new_prefix+$default.Это для систем,чья компоновка файлов не очень хорошо вписывается в наши представления о префиксах.</target>
        </trans-unit>
        <trans-unit id="1e7f6022e597b2747e658cd9274fe1392855ea63" translate="yes" xml:space="preserve">
          <source>a Pod block with a &quot;=cut&quot; command. In that case, the Pod processor must halt parsing of the input file, and must by default emit a warning.</source>
          <target state="translated">блок под с командой &quot;=вырезать&quot;.В этом случае процессор Pod должен остановить парсинг входного файла и по умолчанию должен выдать предупреждение.</target>
        </trans-unit>
        <trans-unit id="a295228fd9bd780a4f55d14f8063050501961916" translate="yes" xml:space="preserve">
          <source>a blank (read: empty) line, with the single exception of the file start, which is also starting a paragraph. That means that especially a command (e.g. &lt;code&gt;=head1&lt;/code&gt; )</source>
          <target state="translated">пустая (читаемая: пустая) строка, за исключением начала файла, которое также является началом абзаца. Это означает, что особенно команда (например, &lt;code&gt;=head1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="75c1385dc7bf5ab285efa7812871a616728a97fa" translate="yes" xml:space="preserve">
          <source>a blank line.</source>
          <target state="translated">пустая строчка.</target>
        </trans-unit>
        <trans-unit id="23d9744ba98ffa764233c38e2d3604f3b2d4a76e" translate="yes" xml:space="preserve">
          <source>a bytestream and should not be treated as such. This makes using I/O mechanisms with internal buffering like stdio (i.e. print() and friends) especially cumbersome. Use syswrite(), or better send(), like in the example below.</source>
          <target state="translated">байтестрим и не должен рассматриваться как таковой.Это делает использование механизмов ввода/вывода с внутренней буферизацией,таких как stdio (т.е.print()и friends),особенно громоздким.Используйте syswrite(),или лучше send(),как в примере ниже.</target>
        </trans-unit>
        <trans-unit id="633f7c37ae295810943767d3bf2df992ec0feaea" translate="yes" xml:space="preserve">
          <source>a call to &lt;code&gt;SvPV()&lt;/code&gt; or one of its variants, in case any call to string overloading updates the internal UTF-8 encoding flag.</source>
          <target state="translated">вызов &lt;code&gt;SvPV()&lt;/code&gt; или одного из его вариантов в случае, если любой вызов перегрузки строки обновляет внутренний флаг кодировки UTF-8.</target>
        </trans-unit>
        <trans-unit id="3db5176b71e2550579d05b0d599c0802a2e9855b" translate="yes" xml:space="preserve">
          <source>a call to SvPV() or one of its variants, in case any call to string overloading updates the internal flag.</source>
          <target state="translated">вызов SvPV()или одного из его вариантов,в случае любого вызова перегрузки строк обновляет внутренний флаг.</target>
        </trans-unit>
        <trans-unit id="8e150fc9a00a9d6aba574abf6b3ddaf310665b85" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">вызывающий объект (то есть, если мы находимся в подпрограмме, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ) и неопределенное значение в противном случае. вызывающий абонент никогда не возвращает подписки XS, и они пропускаются. Следующая подпрограмма чистого perl появится вместо подпрограммы XS в возвращаемых значениях вызывающей стороны. В контексте списка вызывающий возвращает</target>
        </trans-unit>
        <trans-unit id="27f90951a846aad1e51cfa906ae9aae15befd397" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">вызывающий объект (то есть, если мы находимся в подпрограмме, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ) и неопределенное значение в противном случае. вызывающий абонент никогда не возвращает подписки XS, и они пропускаются. Следующая подпрограмма чистого perl появится вместо подпрограммы XS в возвращаемых значениях вызывающей стороны. В контексте списка вызывающий возвращает</target>
        </trans-unit>
        <trans-unit id="98a69b7d014f4c34538d96daa513e20ae3249ccf" translate="yes" xml:space="preserve">
          <source>a character</source>
          <target state="translated">персонаж</target>
        </trans-unit>
        <trans-unit id="4d30a63fe6161c410a2de8ef976b935b79ebde5a" translate="yes" xml:space="preserve">
          <source>a directory which the extensions Perl library module passes to the DynaLoader when asking it to map the shareable image, or</source>
          <target state="translated">каталог,который модуль Perl-библиотеки передает DynaLoader,когда он просит его отобразить разделяемое изображение,либо</target>
        </trans-unit>
        <trans-unit id="d53e127062317983028dd489e9754291d72caa45" translate="yes" xml:space="preserve">
          <source>a dummy implementation.</source>
          <target state="translated">фиктивная имплементация.</target>
        </trans-unit>
        <trans-unit id="607bd3e7b2e3b5390e3bf8ef6a8b9efe50dc7299" translate="yes" xml:space="preserve">
          <source>a failure of the OS/2 API call, having some workarounds coded).</source>
          <target state="translated">сбой в вызове OS/2 API,с кодированием некоторых обходных путей).</target>
        </trans-unit>
        <trans-unit id="f2f9eb42b04a6bb70eb81a0ae0a802e7347d6301" translate="yes" xml:space="preserve">
          <source>a filehandle, even though it looks like one). DBNAME is the name of the database (without the</source>
          <target state="translated">ручка файла,даже если она выглядит как одна из них).DBNAME-это имя базы данных (без</target>
        </trans-unit>
        <trans-unit id="d89a37a0200dc0b35d04809afbc53cbf5901983a" translate="yes" xml:space="preserve">
          <source>a function, and precedence doesn't matter. Otherwise it's a list operator or unary operator, and precedence does matter. Whitespace between the function and left parenthesis doesn't count, so sometimes you need to be careful:</source>
          <target state="translated">функция,и приоритет не имеет значения.Иначе это оператор списка или унарный оператор,и приоритет имеет значение.Пробела между функцией и левой скобкой не учитываются,поэтому иногда нужно быть осторожным:</target>
        </trans-unit>
        <trans-unit id="42d8657e92871e593008c5368345a46e3ebc4eac" translate="yes" xml:space="preserve">
          <source>a hard reference. If you use it as a reference, it'll be treated as a symbolic reference. That is, the value of the scalar is taken to be the</source>
          <target state="translated">жесткая ссылка.Если вы используете его в качестве ссылки,он будет рассматриваться как символическая ссылка.То есть,значение скаляра принимается как</target>
        </trans-unit>
        <trans-unit id="b47a8f555bfc4607fa743152b516f486d86995c9" translate="yes" xml:space="preserve">
          <source>a leading &quot;:&quot;. Empty portions are returned as empty string ''.</source>
          <target state="translated">ведущий &quot;:&quot;.Пустые части возвращаются в виде пустой строки ''.</target>
        </trans-unit>
        <trans-unit id="c3ead9f1232af179bcf0c56760a744aa581fa638" translate="yes" xml:space="preserve">
          <source>a long time ago, and some people got used to our funny spelling, and so just as with &lt;code&gt;HTTP_REFERER&lt;/code&gt; &amp;rsquo;s own missing letter, our weird spelling has stuck around.</source>
          <target state="translated">давным-давно, и некоторые люди привыкли к нашему забавному написанию, и, как и в случае с пропавшей буквой &lt;code&gt;HTTP_REFERER&lt;/code&gt; , наше странное написание осталось.</target>
        </trans-unit>
        <trans-unit id="c5ab2e702917e9fab9c642c3876da1a3b4538ce1" translate="yes" xml:space="preserve">
          <source>a mergesort, which happens to be stable, will be employed anyway. Note that</source>
          <target state="translated">слияние,которое окажется стабильным,будет использовано в любом случае.Обратите внимание,что</target>
        </trans-unit>
        <trans-unit id="02537a2b811222631d1996c38165a9255a043dba" translate="yes" xml:space="preserve">
          <source>a noun (i.e., saying how much of it there is, while giving the correct form of it). The behavior of this method is handy for English and a few other Western European languages, and you should override it for languages where it's not suitable. You can feel free to read the source, but the current implementation is basically as this pseudocode describes:</source>
          <target state="translated">существительное (т.е.сказать,сколько его существует,придав ему правильную форму).Поведение этого метода удобно для английского и некоторых других западноевропейских языков,и его следует переопределить для языков,где он не подходит.Вы можете свободно читать исходные тексты,но текущая реализация в основном так,как описывает этот псевдокод:</target>
        </trans-unit>
        <trans-unit id="cbaad0f8fdd1c074dd23e8663bc741bba26c0e9b" translate="yes" xml:space="preserve">
          <source>a number &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</source>
          <target state="translated">число &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20b1aa3e6979f290ef40d1e602b1d7ee858c53e5" translate="yes" xml:space="preserve">
          <source>a parse error.</source>
          <target state="translated">чтобы разобрать ошибку.</target>
        </trans-unit>
        <trans-unit id="36958640033ae606fe1d0a4aeb5cf8119f6964e4" translate="yes" xml:space="preserve">
          <source>a particular place, in combination with non-linguistic location-specific information such as what currency is used there. Locales</source>
          <target state="translated">определенное место,в сочетании с нелингвистической информацией о конкретном месте,например,о том,какая валюта там используется.Местонахождение</target>
        </trans-unit>
        <trans-unit id="427679a88e71c9d05f75a15acaaf64e423868907" translate="yes" xml:space="preserve">
          <source>a posteriori</source>
          <target state="translated">апостериори</target>
        </trans-unit>
        <trans-unit id="a7361da6063a7ceef198f250842e89b36593b797" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">ссылка на объект &lt;code&gt;Pod::Paragraph&lt;/code&gt; который содержит дополнительную информацию об абзаце (подробности см. в &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c80e050c47afd7c7439491b82841365aa5c3f43a" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph command (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">ссылка на объект &lt;code&gt;Pod::Paragraph&lt;/code&gt; который содержит дополнительную информацию о команде абзаца (подробности см. в &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f1cf41b67f8ac934bdb1895a8415ee32895dafcf" translate="yes" xml:space="preserve">
          <source>a reference to the subroutine;</source>
          <target state="translated">ссылка на подпрограмму;</target>
        </trans-unit>
        <trans-unit id="c10bb3ae2e9e12614dc451b112b763b0e4c6ea09" translate="yes" xml:space="preserve">
          <source>a reference to the symbol table entry (typeglob) containing the subroutine;</source>
          <target state="translated">ссылка на запись в таблице символов (typeglob),содержащую подпрограмму;</target>
        </trans-unit>
        <trans-unit id="716ec8e228f41268238a19d64c81add7c59efa1b" translate="yes" xml:space="preserve">
          <source>a regex:</source>
          <target state="translated">регекс:</target>
        </trans-unit>
        <trans-unit id="ff9123773c3af11dc4fc6c1bb3d5deb9aca9a8cf" translate="yes" xml:space="preserve">
          <source>a regexp and backreferences &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; ,... only</source>
          <target state="translated">только регулярное выражение и обратные ссылки &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ...</target>
        </trans-unit>
        <trans-unit id="01acfa70c00b2c40814c6e8e07848ca1e6071adc" translate="yes" xml:space="preserve">
          <source>a regexp. This is a really nice feature; what matches later in a regexp is made to depend on what matched earlier in the regexp. Suppose we wanted to look for doubled words in a text, like 'the the'. The following regexp finds all 3-letter doubles with a space in between:</source>
          <target state="translated">регэксперт.Это действительно хорошая функция;то,что совпадает позже в регеxp,делается в зависимости от того,что совпадает раньше в регеxp.Предположим,мы хотели искать удвоенные слова в тексте,например,&quot;the&quot;.Следующий регеxp находит все 3-буквенные дубликаты с пробелом между ними:</target>
        </trans-unit>
        <trans-unit id="479e514b0897fdfb8d6718c16ce953228a292ea2" translate="yes" xml:space="preserve">
          <source>a regexp; not doing so may lead to surprising and unsatisfactory results.</source>
          <target state="translated">регэкспресс;невыполнение этого требования может привести к удивительным и неудовлетворительным результатам.</target>
        </trans-unit>
        <trans-unit id="8430d6aa05798e9ad31cc9f0f4c419ec21ff77ea" translate="yes" xml:space="preserve">
          <source>a simple word</source>
          <target state="translated">простое слово</target>
        </trans-unit>
        <trans-unit id="e941e8088e0ee725d5a1331bbb15c1f7fa4f3cdd" translate="yes" xml:space="preserve">
          <source>a string of Perl statements.</source>
          <target state="translated">ряд утверждений Перла.</target>
        </trans-unit>
        <trans-unit id="76ca2e58b13a0c692067763da1d921195c362fc6" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">строка восьмеричных цифр. См. Также &lt;a href=&quot;#oct&quot;&gt;окт&lt;/a&gt; , если у вас есть только строка.</target>
        </trans-unit>
        <trans-unit id="f83ace0c428bcd5408c51dfef2ab5e8998435bd7" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">строка восьмеричных цифр. См. Также &lt;a href=&quot;oct&quot;&gt;окт&lt;/a&gt; , если у вас есть только строка.</target>
        </trans-unit>
        <trans-unit id="b3166c6d48bdc27e53a55abb43985ea1756a1268" translate="yes" xml:space="preserve">
          <source>a subroutine reference.</source>
          <target state="translated">ссылка на подпрограмму.</target>
        </trans-unit>
        <trans-unit id="04f0c4b1fd780f4be3730ec3c5d7dfd8c9451073" translate="yes" xml:space="preserve">
          <source>a thread:</source>
          <target state="translated">нить:</target>
        </trans-unit>
        <trans-unit id="fe6d7479ae4200c3a6f4997fc5801bb9889aa1b5" translate="yes" xml:space="preserve">
          <source>a whitespace character.)</source>
          <target state="translated">пробельный символ.)</target>
        </trans-unit>
        <trans-unit id="78ecd65792fd338affd06e9d02fd8d0820236817" translate="yes" xml:space="preserve">
          <source>a) How do I verify that an email address is correctly formatted?</source>
          <target state="translated">a)Как проверить правильность форматирования адреса электронной почты?</target>
        </trans-unit>
        <trans-unit id="1ee08278869a8bdd3842c22f817ca34ed228cb42" translate="yes" xml:space="preserve">
          <source>a+bi</source>
          <target state="translated">a+bi</target>
        </trans-unit>
        <trans-unit id="81541b7da471dd2332c53aedfa2bdfe3a4665452" translate="yes" xml:space="preserve">
          <source>a-f (or A-F, case doesn't matter). Each hexadecimal digit represents four bits, or half a byte. &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; will show a hexadecimal number in decimal, and &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; will show a decimal number in hexadecimal. If you have just the &quot;hex digits&quot; of a hexadecimal number, you can use the &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">af (или AF, регистр значения не имеет). Каждая шестнадцатеричная цифра представляет четыре бита или полбайта. &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; покажет шестнадцатеричное число в десятичном виде, а &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; покажет десятичное число в шестнадцатеричном формате. Если у вас есть только &amp;laquo;шестнадцатеричные цифры&amp;raquo; шестнадцатеричного числа, вы можете использовать функцию &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed5e8e851dceeb90b5c2b37a81b2ad11ae340d95" translate="yes" xml:space="preserve">
          <source>a.out-style build</source>
          <target state="translated">оригинальное строение</target>
        </trans-unit>
        <trans-unit id="5780daf6db0b013dbf82807c9f85abba683b0820" translate="yes" xml:space="preserve">
          <source>about</source>
          <target state="translated">about</target>
        </trans-unit>
        <trans-unit id="8f203a021dc29f479a81bd2dd69f4ea2898f02f6" translate="yes" xml:space="preserve">
          <source>about all the dependencies, so you should make sure that anything is up-to-date, say, by doing</source>
          <target state="translated">о всех зависимостях,так что вы должны убедиться,что что-нибудь актуально,скажем,делая</target>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="translated">above</target>
        </trans-unit>
        <trans-unit id="3f8528380c147f9aa2206094f2404301d5bc3dbf" translate="yes" xml:space="preserve">
          <source>above is set up automatically during the build to a correct value on the builder machine, but is overridable at runtime,</source>
          <target state="translated">выше настраивается автоматически во время сборки на правильное значение на машине разработчика,но переопределяется во время выполнения,</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="a239a7dbad7ea85832efb23e90576b2dd038b7a1" translate="yes" xml:space="preserve">
          <source>abs VALUE</source>
          <target state="translated">ЦЕНА БАССЕЙНА</target>
        </trans-unit>
        <trans-unit id="415190d7a2135efc9f152a71915dffbe7a71529a" translate="yes" xml:space="preserve">
          <source>abs, alarm, chomp, chop, chr, chroot, cos, defined, eval, evalbytes, exp, fc, glob, hex, int, lc, lcfirst, length, log, lstat, mkdir, oct, ord, pos, print, printf, quotemeta, readlink, readpipe, ref, require, reverse (in scalar context only), rmdir, say, sin, split (for its second argument), sqrt, stat, study, uc, ucfirst, unlink, unpack.</source>
          <target state="translated">abs,alarm,chomp,chop,chr,chroot,cos,defined,eval,evalbytes,exp,fc,glob,hex,int,lc,lcfirst,length,log,lstat,mkdir,oct,order,pos,print,printf,quotemeta,читать ссылку,читать трубку,ссылка,требовать,обратное (только в скалярном контексте),rmdir,скажем,грешить,расщепляться (для второго аргумента),sqrt,stat,study,uc,ucfirst,unlink,unpack.</target>
        </trans-unit>
        <trans-unit id="5e8fc1f161ebdf02ac9d2d940aca4c69e7ddd903" translate="yes" xml:space="preserve">
          <source>abs_path and friends</source>
          <target state="translated">абс_пат и друзья</target>
        </trans-unit>
        <trans-unit id="a4694021c8d1356f5760adc6ce253b54e2f437f0" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">абсолютный. Это решение было принято по причинам переносимости. Поскольку &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; возвращает относительные пути во всех других операционных системах, теперь он также будет следовать этому соглашению в Mac OS. Обратите внимание, что это может сломать некоторые существующие скрипты.</target>
        </trans-unit>
        <trans-unit id="eb40247beed3ba10597c7fdb55272d4608c34191" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">абсолютный. Это решение было принято по причинам переносимости. Поскольку &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; возвращает относительные пути во всех других операционных системах, теперь он также будет следовать этому соглашению в Mac OS. Обратите внимание, что это может сломать некоторые существующие скрипты.</target>
        </trans-unit>
        <trans-unit id="75eebe6521e20b7f9388d31918b564655eac99ce" translate="yes" xml:space="preserve">
          <source>absolutely cannot wait for the fix to be made upstream, released to CPAN and copied to blead, you must add (or update) a &lt;code&gt;CUSTOMIZED&lt;/code&gt; entry in the</source>
          <target state="translated">абсолютно не может дождаться, пока исправление будет сделано в апстриме, выпущено в CPAN и скопировано в blead, вы должны добавить (или обновить) &lt;code&gt;CUSTOMIZED&lt;/code&gt; запись в</target>
        </trans-unit>
        <trans-unit id="7a532dc15a911b9b9181922abf6ced9885b401e9" translate="yes" xml:space="preserve">
          <source>accent-insensitive Unicode sort</source>
          <target state="translated">нечувствительный к акценту сорт Юникода</target>
        </trans-unit>
        <trans-unit id="e586a9d31c9053af08de34074e1d2e2b09839079" translate="yes" xml:space="preserve">
          <source>accent-insensitive comparisons</source>
          <target state="translated">сравнения без акцента</target>
        </trans-unit>
        <trans-unit id="fc8cc4afa9fee369f0ce78c3b97600f87cf033b7" translate="yes" xml:space="preserve">
          <source>accent-insensitive locale comparisons</source>
          <target state="translated">сравнения без акцента</target>
        </trans-unit>
        <trans-unit id="5fb801f2f30ac5b8a6671f1d04a959a51fc1671e" translate="yes" xml:space="preserve">
          <source>accept</source>
          <target state="translated">accept</target>
        </trans-unit>
        <trans-unit id="ae12c11f3760218cae63851a278652cd3eaea3b8" translate="yes" xml:space="preserve">
          <source>accept NEWSOCKET,GENERICSOCKET</source>
          <target state="translated">принять Новости,ГЕНЕРИКСОКЕТ</target>
        </trans-unit>
        <trans-unit id="5fc8d440432f0b7db9d7569d2e82bb54a31bbead" translate="yes" xml:space="preserve">
          <source>accept_targets_as_html</source>
          <target state="translated">accept_targets_as_html</target>
        </trans-unit>
        <trans-unit id="67dff9ee8056247422bb2cdd74c074036da47a0c" translate="yes" xml:space="preserve">
          <source>accessing</source>
          <target state="translated">accessing</target>
        </trans-unit>
        <trans-unit id="de3a63299e5e19ed22af733ce3c9c55e72ad3106" translate="yes" xml:space="preserve">
          <source>accessor function for the &quot;safe signals&quot; flag of a SigAction object; see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for general information on safe (a.k.a. &quot;deferred&quot;) signals. If you wish to handle a signal safely, use this accessor to set the &quot;safe&quot; flag in the &lt;code&gt;POSIX::SigAction&lt;/code&gt; object:</source>
          <target state="translated">функция доступа для флага &amp;laquo;безопасные сигналы&amp;raquo; объекта SigAction; см. &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; для получения общей информации о безопасных (так называемых &amp;laquo;отложенных&amp;raquo;) сигналах. Если вы хотите безопасно обрабатывать сигнал, используйте этот метод доступа, чтобы установить флаг &amp;laquo;безопасный&amp;raquo; в объекте &lt;code&gt;POSIX::SigAction&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="130627c716765ea3404bece5800d80aa45677b23" translate="yes" xml:space="preserve">
          <source>accessor functions to get/set the values of a SigAction object.</source>
          <target state="translated">функции доступа для получения/установки значений объекта SigAction.</target>
        </trans-unit>
        <trans-unit id="b7f71f41bfbef50f02bf886cf865af8975cb5786" translate="yes" xml:space="preserve">
          <source>accidentally</source>
          <target state="translated">accidentally</target>
        </trans-unit>
        <trans-unit id="3959b939e5424783c493f42cf465f2662e1abbe0" translate="yes" xml:space="preserve">
          <source>acosec</source>
          <target state="translated">acosec</target>
        </trans-unit>
        <trans-unit id="94cd96ac8391252b0d7300cdaef80570e8f1939f" translate="yes" xml:space="preserve">
          <source>acosech</source>
          <target state="translated">acosech</target>
        </trans-unit>
        <trans-unit id="c8be89c327cde8b860df98308b35887bdf811326" translate="yes" xml:space="preserve">
          <source>acot</source>
          <target state="translated">acot</target>
        </trans-unit>
        <trans-unit id="b5aa292058ce240d98a24e0ca78c79be934f0018" translate="yes" xml:space="preserve">
          <source>acotan</source>
          <target state="translated">acotan</target>
        </trans-unit>
        <trans-unit id="299176f2fa0007084d06d47b1d722326f90b487a" translate="yes" xml:space="preserve">
          <source>acotanh</source>
          <target state="translated">acotanh</target>
        </trans-unit>
        <trans-unit id="eef264f7031ee0d55b786c83a83d07ec29a99714" translate="yes" xml:space="preserve">
          <source>acsc</source>
          <target state="translated">acsc</target>
        </trans-unit>
        <trans-unit id="742151db90a3d5f8f47cde2a0573ae956bba7225" translate="yes" xml:space="preserve">
          <source>action&quot; or &quot;manu-</source>
          <target state="translated">действие&quot; или &quot;маню&quot;...</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="50f46198a1bd51840547aee34fc045921e43d4c6" translate="yes" xml:space="preserve">
          <source>actual</source>
          <target state="translated">actual</target>
        </trans-unit>
        <trans-unit id="5e9b6a0946d93d3600096c34f7b9c6d8f4af95ac" translate="yes" xml:space="preserve">
          <source>actually made it back to</source>
          <target state="translated">фактически вернулся к</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="1d1b3b51172716d0cb050801b8fab16ebc7d7185" translate="yes" xml:space="preserve">
          <source>add_bits</source>
          <target state="translated">add_bits</target>
        </trans-unit>
        <trans-unit id="8bab9844d8f1c6dd4567678a3d4228ce8b501259" translate="yes" xml:space="preserve">
          <source>add_bits($data, $nbits)</source>
          <target state="translated">add_bits($data,$nbits)</target>
        </trans-unit>
        <trans-unit id="93ac08fbb73a3cad19b1e009a5e2b9a0a78a5e4b" translate="yes" xml:space="preserve">
          <source>add_bits()</source>
          <target state="translated">add_bits()</target>
        </trans-unit>
        <trans-unit id="64dea38af51fbf2c8ff3ee6ea4af6ed53003ace2" translate="yes" xml:space="preserve">
          <source>add_callback ()</source>
          <target state="translated">add_callback ()</target>
        </trans-unit>
        <trans-unit id="94d0e78aca0adb443be5d146e1dac8975ed16903" translate="yes" xml:space="preserve">
          <source>add_style ()</source>
          <target state="translated">add_style ()</target>
        </trans-unit>
        <trans-unit id="c3805175370d19c334b59f45b87343b9f2b7f5e1" translate="yes" xml:space="preserve">
          <source>addition</source>
          <target state="translated">addition</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="91ea4e7b6b94343d715c7982210567115655cb20" translate="yes" xml:space="preserve">
          <source>adds a new name for a control character.</source>
          <target state="translated">добавляет новое имя для управляющего персонажа.</target>
        </trans-unit>
        <trans-unit id="9c677b000cbca8edd8a283feb5874aa9705fe891" translate="yes" xml:space="preserve">
          <source>adds it automatically when building a program. However, when accessing an executable as a normal file (e.g.,</source>
          <target state="translated">добавляет его автоматически при сборке программы.Однако,при доступе к исполняемому файлу в виде обычного файла (например,</target>
        </trans-unit>
        <trans-unit id="095c0c5ecd4727ed55c8b2fdc7688091189d0cae" translate="yes" xml:space="preserve">
          <source>adds the line to the history of input, from where it can be used if the actual &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; is present.</source>
          <target state="translated">добавляет строку в историю ввода, откуда ее можно использовать, если присутствует фактическая &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0b7161ec6ad88575ef86bb08f43a11d9469dba1" translate="yes" xml:space="preserve">
          <source>adecimal.</source>
          <target state="translated">adecimal.</target>
        </trans-unit>
        <trans-unit id="b144ec6dfdab55ae2963bf4c782c7e4157019ffd" translate="yes" xml:space="preserve">
          <source>adminaddress</source>
          <target state="translated">adminaddress</target>
        </trans-unit>
        <trans-unit id="916a530bfc75fe948657d7b5108d40fc2508c596" translate="yes" xml:space="preserve">
          <source>advised to follow this introduction with more information from the full Perl manual, the table of contents to which can be found in &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt;.</source>
          <target state="translated">Советуем после этого введения получить дополнительную информацию из полного руководства Perl, оглавление которого можно найти в &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aab93e8e3796f91139b951be5ef4c63e4b3fdff0" translate="yes" xml:space="preserve">
          <source>affect normal access to a variable. (Locks on subs are different, and covered in a bit.) If you really,</source>
          <target state="translated">влияет на нормальный доступ к переменной.(Замки на подлодках разные,и немного покрыты.)Если вы действительно..,</target>
        </trans-unit>
        <trans-unit id="d16b511453d6e723e850460d0b087be14fb56fb1" translate="yes" xml:space="preserve">
          <source>afs.U</source>
          <target state="translated">afs.U</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="1a8a978377842aa511fbb5bb66f929228650a830" translate="yes" xml:space="preserve">
          <source>after a &lt;b&gt;failure&lt;/b&gt;:</source>
          <target state="translated">после &lt;b&gt;сбоя&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="2391217343165dbdcc1e85432eaed6f2d40232f2" translate="yes" xml:space="preserve">
          <source>after the first line of wrap(). This is not a most effective implementation, one may consider</source>
          <target state="translated">после первой строки wrap().Это не самая эффективная реализация,можно предположить.</target>
        </trans-unit>
        <trans-unit id="d501db092c38ad8292690be746bddff30bdd42c1" translate="yes" xml:space="preserve">
          <source>after which you may use either</source>
          <target state="translated">после чего вы можете использовать либо</target>
        </trans-unit>
        <trans-unit id="d237158794ce68f8acfcb27dbb3524b7d367bc44" translate="yes" xml:space="preserve">
          <source>after you made your modifications.</source>
          <target state="translated">после того,как вы внесли свои изменения.</target>
        </trans-unit>
        <trans-unit id="0de616ced95f0b022d2889588dcde62712d64ff3" translate="yes" xml:space="preserve">
          <source>again, and run</source>
          <target state="translated">опять же,и бежать</target>
        </trans-unit>
        <trans-unit id="80ece22ca1db999b834ed949964a66789d2cf76d" translate="yes" xml:space="preserve">
          <source>against the previous and current perls to see what difference it has made, and whether anything else has slowed down as a consequence.</source>
          <target state="translated">в сравнении с предыдущими и текущими перлами,чтобы увидеть,какую разницу она сделала,и не замедлило ли что-нибудь еще в результате этого замедлиться.</target>
        </trans-unit>
        <trans-unit id="f1525d2f1de4ff409ccb719b4f0bd276a7bb7c21" translate="yes" xml:space="preserve">
          <source>agree on the type of reference and also on the organization of data within the object body. Failure to agree on the type results in immediate death when the wrong method tries to access an object. Failure to agree on data organization may lead to one class trampling over the data of another.</source>
          <target state="translated">договориться о типе ссылки,а также об организации данных в теле объекта.Несогласие по типу приводит к немедленной смерти,когда неверный метод пытается получить доступ к объекту.Несогласие по организации данных может привести к тому,что один класс будет топтаться на данных другого.</target>
        </trans-unit>
        <trans-unit id="73468898c9988e2f9e409b93e8bff16eaa79c0ba" translate="yes" xml:space="preserve">
          <source>alarm</source>
          <target state="translated">alarm</target>
        </trans-unit>
        <trans-unit id="05d57bf3c2063c1b5c9e035ba1e89e203c424841" translate="yes" xml:space="preserve">
          <source>alarm SECONDS</source>
          <target state="translated">ВТОРОЙ сигнал тревоги</target>
        </trans-unit>
        <trans-unit id="605bec3b3bc4303313aa3e75ef5affbb28a79c75" translate="yes" xml:space="preserve">
          <source>albeit with substitutions such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; in all cases; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; in some cases; and &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; in some other cases. Controls are listed using their Unicode 6.2 abbreviations. The differences between the 0037 and 1047 sets are flagged with &lt;code&gt;**&lt;/code&gt; . The differences between the 1047 and POSIX-BC sets are flagged with &lt;code&gt;##.&lt;/code&gt; All &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; numbers listed are decimal. If you would rather see this table listing octal values, then run the table (that is, the pod source text of this document, since this recipe may not work with a pod2_other_format translation) through:</source>
          <target state="translated">хотя и с заменами типа &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; во всех случаях; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; в некоторых случаях; и &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; в некоторых других случаях. Элементы управления перечислены с использованием их сокращений Unicode 6.2. Различия между наборами 0037 и 1047 отмечены &lt;code&gt;**&lt;/code&gt; . Различия между наборами 1047 и POSIX-BC отмечены &lt;code&gt;##.&lt;/code&gt; Все перечисленные числа &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; являются десятичными. Если вы предпочитаете видеть эту таблицу со списком восьмеричных значений, запустите таблицу (то есть исходный текст модуля этого документа, поскольку этот рецепт может не работать с переводом pod2_other_format) через:</target>
        </trans-unit>
        <trans-unit id="3b21e0f54dca09308ec896c51cda4f9ca4dd91a4" translate="yes" xml:space="preserve">
          <source>aliases</source>
          <target state="translated">aliases</target>
        </trans-unit>
        <trans-unit id="3d30739d4c2f9e4b4a11180a7c3327f3e52fd8d3" translate="yes" xml:space="preserve">
          <source>alignbytes.U</source>
          <target state="translated">alignbytes.U</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="509fd71434fbe53c02bb286882f845078ef5ee17" translate="yes" xml:space="preserve">
          <source>all compressed data to the output data stream.</source>
          <target state="translated">все сжатые данные в выходной поток данных.</target>
        </trans-unit>
        <trans-unit id="8130249f3817c584cba8ad27e67056edd1c31fac" translate="yes" xml:space="preserve">
          <source>all its ancestor classes. (This is because the idea of &quot;class data&quot; isn't directly implemented in Perl, but is instead left to individual class-systems to implement as they see fit..)</source>
          <target state="translated">всех своих предков.(Это связано с тем,что идея &quot;данных классов&quot; не реализована напрямую в Perl,а оставлена на отдельные классы-системы для реализации по своему усмотрению...).</target>
        </trans-unit>
        <trans-unit id="8cc5040f7ad90d3df578f4dce7d48b395ac1b9d9" translate="yes" xml:space="preserve">
          <source>all of the help</source>
          <target state="translated">вся помощь</target>
        </trans-unit>
        <trans-unit id="7d7ebf534a4b32567ce1f6b72446d3e09f27b240" translate="yes" xml:space="preserve">
          <source>all other versions of the module you're installing</source>
          <target state="translated">все остальные версии устанавливаемого модуля</target>
        </trans-unit>
        <trans-unit id="de05e27afdc59b4d9bbeeae86d35f670cdbf6280" translate="yes" xml:space="preserve">
          <source>all remaining lines from is this way:</source>
          <target state="translated">все оставшиеся строки отсюда:</target>
        </trans-unit>
        <trans-unit id="f966b162e6dd45e46a9c1021ad48d8c4e414675d" translate="yes" xml:space="preserve">
          <source>all the subroutines are called in a list context.</source>
          <target state="translated">все подпрограммы вызываются в контексте списка.</target>
        </trans-unit>
        <trans-unit id="78d2c8306e2172f468ed7da94e5e7fdd772dd33e" translate="yes" xml:space="preserve">
          <source>all uncompressed data to the output data stream.</source>
          <target state="translated">все несжатые данные в выходной поток данных.</target>
        </trans-unit>
        <trans-unit id="e6543caf79edcee1b041e9193f69e17c853ef1f4" translate="yes" xml:space="preserve">
          <source>all with optional leading and trailing zeros and/or spaces. Additionally, numbers are allowed to have an underscore between any two digits.</source>
          <target state="translated">все с дополнительными ведущими и ведущими нулями и/или пробелами.Кроме того,номера могут иметь подчеркивание между любыми двумя цифрами.</target>
        </trans-unit>
        <trans-unit id="acff2f4d1898df7e94ecaebad18831a97e4519ff" translate="yes" xml:space="preserve">
          <source>all_target</source>
          <target state="translated">all_target</target>
        </trans-unit>
        <trans-unit id="12b42e096b7bca3af7ec1c5ba1a6445e520a72d8" translate="yes" xml:space="preserve">
          <source>allkeys.txt</source>
          <target state="translated">allkeys.txt</target>
        </trans-unit>
        <trans-unit id="78c9d45e7d52c660866b311227728fee1dfd5e6c" translate="yes" xml:space="preserve">
          <source>allocates some memory and constructs a Perl interpreter, along these lines:</source>
          <target state="translated">выделяет некоторую память и конструирует Perl-интерпретатор,следуя этим указаниям:</target>
        </trans-unit>
        <trans-unit id="4ac387a6f0f3e93209827552db5ced03710025ff" translate="yes" xml:space="preserve">
          <source>allow suppressing all such STDERR output, and instead allow an option for reporting errors/warnings in some other way, whether by triggering a callback, or noting errors in some attribute of the document object, or some similarly unobtrusive mechanism -- or even by appending a &quot;Pod Errors&quot; section to the end of the parsed form of the document.</source>
          <target state="translated">позволяют подавлять весь такой вывод STDERR,а вместо этого предоставляют возможность сообщать об ошибках/предупреждениях каким-то другим способом,будь то спровоцировав обратный вызов,или отметив ошибки в каком-то атрибуте объекта документа,или каким-либо аналогичным ненавязчивым механизмом --или даже добавив раздел &quot;Pod Errors&quot; в конец разобранной формы документа.</target>
        </trans-unit>
        <trans-unit id="eb4eaf28d97cf6eeb14d04f7a34316c390474dbc" translate="yes" xml:space="preserve">
          <source>allow( $test_me, \@criteria );</source>
          <target state="translated">allow($test_me,\@criteria);</target>
        </trans-unit>
        <trans-unit id="023f8167a0ccb01c809eb2dc9a66997533fa1ae8" translate="yes" xml:space="preserve">
          <source>allowed if $pat is a precompiled regular expression, even if $pat contains &lt;code&gt;(?{ ... })&lt;/code&gt; assertions or &lt;code&gt;(??{ ... })&lt;/code&gt; subexpressions.</source>
          <target state="translated">разрешено, если $ pat является предварительно скомпилированным регулярным выражением, даже если $ pat содержит &lt;code&gt;(?{ ... })&lt;/code&gt; утверждения или &lt;code&gt;(??{ ... })&lt;/code&gt; подвыражения.</target>
        </trans-unit>
        <trans-unit id="4301b689bb097155e3bb6d16044296e9269b5529" translate="yes" xml:space="preserve">
          <source>allows Perl to do unsafe operations. Currently the only &quot;unsafe&quot; operations are attempting to unlink directories while running as superuser and running setuid programs with fatal taint checks turned into warnings. Note that warnings must be enabled along with this option to actually</source>
          <target state="translated">позволяет Perl выполнять небезопасные операции.В настоящее время единственными &quot;опасными&quot; операциями являются попытки разблокировать каталоги при запуске в качестве суперпользователя и запуск setuid-программ с фатальными проверками,превращенными в предупреждения.Обратите внимание,что предупреждения должны быть включены вместе с этой опцией,чтобы на самом деле</target>
        </trans-unit>
        <trans-unit id="132c35f7c02912ac7c614dd2a393fc9375c90687" translate="yes" xml:space="preserve">
          <source>allows the &lt;code&gt;:default&lt;/code&gt; list from a particular version to be used. This provides the convenience of using the default methods, but the surety that no behavioral changes will occur if the &lt;code&gt;autodie&lt;/code&gt; module is upgraded.</source>
          <target state="translated">позволяет использовать список &lt;code&gt;:default&lt;/code&gt; из конкретной версии. Это обеспечивает удобство использования методов по умолчанию, но гарантирует, что при &lt;code&gt;autodie&lt;/code&gt; модуля autodie не произойдет никаких поведенческих изменений .</target>
        </trans-unit>
        <trans-unit id="423d437bbbc6bb7d398c30b28e10d75c03e10783" translate="yes" xml:space="preserve">
          <source>allows you to refer to special variables (like &lt;code&gt;$/&lt;/code&gt; ) with names (like $RS), as though they were in &lt;b&gt;awk&lt;/b&gt;; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">позволяет ссылаться на специальные переменные (например, &lt;code&gt;$/&lt;/code&gt; ) с именами (например, $ RS), как если бы они были в &lt;b&gt;awk&lt;/b&gt; ; подробности смотрите в &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9e2ef61def87209ec2dd5c8efef68de53d4aef6" translate="yes" xml:space="preserve">
          <source>almost</source>
          <target state="translated">almost</target>
        </trans-unit>
        <trans-unit id="f5f5592352120c7c5dd3e80cd891b2a35cc0756a" translate="yes" xml:space="preserve">
          <source>along with #including</source>
          <target state="translated">наряду с #включительно</target>
        </trans-unit>
        <trans-unit id="f84474a16e6ac5b152e8cf62a4c115b6109f018b" translate="yes" xml:space="preserve">
          <source>alphabetic</source>
          <target state="translated">alphabetic</target>
        </trans-unit>
        <trans-unit id="b859ef3e26b0a8f0f8e5984aa4d45230ec4e08bc" translate="yes" xml:space="preserve">
          <source>already exist</source>
          <target state="translated">уже существующий</target>
        </trans-unit>
        <trans-unit id="34879e54886ec3a6f952c7af1d444870828e03e7" translate="yes" xml:space="preserve">
          <source>already-existing</source>
          <target state="translated">already-existing</target>
        </trans-unit>
        <trans-unit id="09706c418809f1f4cfda992435ca1438eddaaeed" translate="yes" xml:space="preserve">
          <source>also</source>
          <target state="translated">also</target>
        </trans-unit>
        <trans-unit id="53ed2e1b9d4ccdc537294ab308f9c5d1e151cf60" translate="yes" xml:space="preserve">
          <source>also creates the prototyping header files for the internal functions, generates the documentation and a lot of other bits and pieces. It's important that when you add a new function to the core or change an existing one, you change the data in the table in</source>
          <target state="translated">Также создает прототипные заголовочные файлы для внутренних функций,генерирует документацию и много других битов и кусков.Важно,что когда вы добавляете новую функцию в ядро или изменяете существующую,вы меняете данные в таблице на</target>
        </trans-unit>
        <trans-unit id="4298c06d3073002d95a1081fb801b4a99c5de328" translate="yes" xml:space="preserve">
          <source>also exists). Cygwin does not require a</source>
          <target state="translated">также существует).Cygwin не требует</target>
        </trans-unit>
        <trans-unit id="2ce647c4199231c5e08b22c4a1f2a2b4b84f2e7b" translate="yes" xml:space="preserve">
          <source>also includes the platform's native underscore character, no matter what the locale is.</source>
          <target state="translated">также включает в себя встроенный в платформу символ подчеркивания,не зависимо от локали.</target>
        </trans-unit>
        <trans-unit id="17b130cdba41303da201c9df43f19e9e6a5a45ad" translate="yes" xml:space="preserve">
          <source>also provides a number of &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; functions which are intended to be used in the table slots of classes which do not need to do anything special for a particular method.</source>
          <target state="translated">также предоставляет ряд функций &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; которые предназначены для использования в слотах таблиц классов, которым не нужно делать ничего особенного для конкретного метода.</target>
        </trans-unit>
        <trans-unit id="edb013a0b027689799b6d3bb946b0380fa2999b8" translate="yes" xml:space="preserve">
          <source>alter the interpretation of nested formatting codes, meaning that the following four example lines are identical in meaning:</source>
          <target state="translated">изменить интерпретацию вложенных кодов форматирования,что означает,что следующие четыре примера строк идентичны по смыслу:</target>
        </trans-unit>
        <trans-unit id="370d1bb1966aad5766de7d85dcf3b3cc7341ab95" translate="yes" xml:space="preserve">
          <source>alternation</source>
          <target state="translated">alternation</target>
        </trans-unit>
        <trans-unit id="c78b3591272b10760192271aec607cc2988dcb68" translate="yes" xml:space="preserve">
          <source>although without duplicating any side effects that dereferencing the lvalue might trigger, such as from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt;. Other assignment operators work similarly. The following are recognized:</source>
          <target state="translated">хотя без дублирования каких-либо побочных эффектов, которые может вызвать разыменование lvalue, например, от &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; . Другие операторы присваивания работают аналогично. Признаны следующие:</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="fb980e8b0c064246b90fe9981d818b33511ba028" translate="yes" xml:space="preserve">
          <source>always be called &lt;code&gt;my_cxt_t&lt;/code&gt; . The other &lt;code&gt;CXT*&lt;/code&gt; macros assume the existence of the &lt;code&gt;my_cxt_t&lt;/code&gt; typedef name.</source>
          <target state="translated">всегда называться &lt;code&gt;my_cxt_t&lt;/code&gt; . Другие макросы &lt;code&gt;CXT*&lt;/code&gt; предполагают наличие имени &lt;code&gt;my_cxt_t&lt;/code&gt; typedef.</target>
        </trans-unit>
        <trans-unit id="9e7cc664880363e8a6f8dd216803f53660c055a7" translate="yes" xml:space="preserve">
          <source>ambient_pragmas</source>
          <target state="translated">ambient_pragmas</target>
        </trans-unit>
        <trans-unit id="75a14d5aecfa0926099831db837cd6a62fe95561" translate="yes" xml:space="preserve">
          <source>amed character.</source>
          <target state="translated">с характером &quot;amed&quot;.</target>
        </trans-unit>
        <trans-unit id="de73eac0c305038f0437bc6a1f994a5a4379ed28" translate="yes" xml:space="preserve">
          <source>an</source>
          <target state="translated">an</target>
        </trans-unit>
        <trans-unit id="8f91a7d4c013d689792014cce41cfca93df8643f" translate="yes" xml:space="preserve">
          <source>an arrayref of CPAN::Distroprefs::Pref objects</source>
          <target state="translated">массив CPAN::Distroprefs::Pref объектов</target>
        </trans-unit>
        <trans-unit id="1fd4e0318cb46a3d9d16dba83e533928a4e2874e" translate="yes" xml:space="preserve">
          <source>an embedded newline, so it doesn't remove it. This pattern still removes the newline at the end of the string:</source>
          <target state="translated">встроенная новая линия,так что она не удаляет ее.Этот шаблон по-прежнему удаляет новую линию в конце строки:</target>
        </trans-unit>
        <trans-unit id="419fb031bbb1d3bd852934c637cbdadfffbdbcd6" translate="yes" xml:space="preserve">
          <source>an entire array or an entire hash (or to just about anything else). Names are one kind of reference that you're already familiar with. Think of the President of the United States: a messy, inconvenient bag of blood and bones. But to talk about him, or to represent him in a computer program, all you need is the easy, convenient scalar string &quot;Barack Obama&quot;.</source>
          <target state="translated">целый массив или целый хэш (или что-то еще).Имена-это один из видов ссылок,с которыми вы уже знакомы.Подумайте о президенте США:грязный,неудобный мешок с кровью и костями.Но чтобы говорить о нем или представлять его в компьютерной программе,все,что вам нужно-это простая,удобная скалярная строка &quot;Барак Обама&quot;.</target>
        </trans-unit>
        <trans-unit id="2130df2147e633640bd9a0d05e6d376dee6ccd2f" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will always be 0.</source>
          <target state="translated">произошла ошибка,возвращаемое значение всегда будет равно 0.</target>
        </trans-unit>
        <trans-unit id="753f0741a207012aea84c4e049df342c160b9190" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will be 1 and the value on the top of the stack will be</source>
          <target state="translated">произошла ошибка,возвращаемое значение будет равно 1,а значение в верхней части стека будет равно</target>
        </trans-unit>
        <trans-unit id="409ef8643f1d521a89ca1a0c3155c4a711f5a647" translate="yes" xml:space="preserve">
          <source>an error to register the same object multiple times with varying sets of hashrefs. Any hashrefs that are not registered yet will be added, others ignored.</source>
          <target state="translated">ошибка многократной регистрации одного и того же объекта с различными наборами хэшрефов.Любые хэшрефы,которые еще не зарегистрированы,будут добавлены,другие проигнорированы.</target>
        </trans-unit>
        <trans-unit id="f7cb42641753796859e397b207b75ba5bcc045ca" translate="yes" xml:space="preserve">
          <source>an integer within [-9, +9]), this is called</source>
          <target state="translated">целое число внутри [-9,+9]),это называется</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="04f99c29e783f9cb4ae84f58faccd00a818b9492" translate="yes" xml:space="preserve">
          <source>anchor_items</source>
          <target state="translated">anchor_items</target>
        </trans-unit>
        <trans-unit id="68694b44e6f48917189ec5e4ceb1c0fef7ef80b9" translate="yes" xml:space="preserve">
          <source>anchored fixed string</source>
          <target state="translated">фиксированная струна</target>
        </trans-unit>
        <trans-unit id="43c00fd1688ea15081e7af4c5f2652c8c8653500" translate="yes" xml:space="preserve">
          <source>anchorify</source>
          <target state="translated">anchorify</target>
        </trans-unit>
        <trans-unit id="f3ef6e09da1f05d18d52776cc5fea65e3b316091" translate="yes" xml:space="preserve">
          <source>anchorname</source>
          <target state="translated">anchorname</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="41f7d9aafc306017d119acf70705c827d97696a7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.)</source>
          <target state="translated">и &lt;a href=&quot;encode&quot;&gt;кодировать&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="1e7b3b70ce0b7269aa85ddea66ae89e1b660b6b7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;, or &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt;, &quot;How do I flush/unbuffer an output filehandle? Why must I do this?&quot;):</source>
          <target state="translated">и &lt;a href=&quot;functions/select&quot;&gt;выберите&lt;/a&gt; , или &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt; , &amp;laquo;Как мне очистить / разблокировать дескриптор выходного файла? Почему я должен это делать?&amp;raquo;):</target>
        </trans-unit>
        <trans-unit id="016f4b3a6b408b7434c9c8addd29fcfb251b75bc" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$default&lt;/code&gt; is 0.</source>
          <target state="translated">а &lt;code&gt;$default&lt;/code&gt; - 0.</target>
        </trans-unit>
        <trans-unit id="79e3a95c66eb0995a5b17cf160488513cd9c4836" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will contain the</source>
          <target state="translated">и &lt;code&gt;$status&lt;/code&gt; будет содержать</target>
        </trans-unit>
        <trans-unit id="fb55aba7e200d190a26516edaeb1e8c8f871d671" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the</source>
          <target state="translated">и &lt;code&gt;$status&lt;/code&gt; будет содержать</target>
        </trans-unit>
        <trans-unit id="f7a05a7c74e5456a922f33cfd811202c94bfd7a6" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the a</source>
          <target state="translated">и &lt;code&gt;$status&lt;/code&gt; будет содержать</target>
        </trans-unit>
        <trans-unit id="faf11d208a41db985f49c9f628222cbd33a1d444" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the exact</source>
          <target state="translated">и &lt;code&gt;$status&lt;/code&gt; будет содержать точное</target>
        </trans-unit>
        <trans-unit id="311c8c621fca6c1133276b3546a71e41872cd5b3" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; is</source>
          <target state="translated">и &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; является</target>
        </trans-unit>
        <trans-unit id="fe56ad1fd6916544bd67d364c47ef22b8722997c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Archive::Tar&lt;/code&gt; will call &lt;code&gt;Cwd::cwd()&lt;/code&gt; internally again.</source>
          <target state="translated">и &lt;code&gt;Archive::Tar&lt;/code&gt; снова вызовет &lt;code&gt;Cwd::cwd()&lt;/code&gt; внутри себя.</target>
        </trans-unit>
        <trans-unit id="aeba6e0c46a5c93c432546b879e4bda2afa3e55c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Perl_dump_all&lt;/code&gt; , which dumps all the subroutines in the stash and the op tree of the main root.</source>
          <target state="translated">и &lt;code&gt;Perl_dump_all&lt;/code&gt; , который выгружает все подпрограммы из тайника и дерева операций главного корня.</target>
        </trans-unit>
        <trans-unit id="24b1d9fb54b19f2a4bf7a0a575b93e2448d41ac7" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;asynch_read_if&lt;/code&gt; could look like this</source>
          <target state="translated">и &lt;code&gt;asynch_read_if&lt;/code&gt; может выглядеть так</target>
        </trans-unit>
        <trans-unit id="52260a6c12657e7cd53ed4aeda42476a80ffde69" translate="yes" xml:space="preserve">
          <source>and C</source>
          <target state="translated">и C</target>
        </trans-unit>
        <trans-unit id="ce624d2a956a4c4fdd87bb0d4c8b8565acc10eb6" translate="yes" xml:space="preserve">
          <source>and CRT DLL. I know no advantages of this executable over &lt;code&gt;perl.exe&lt;/code&gt; , but it cannot fork() at all. Well, one advantage is that the build process is not so convoluted as with &lt;code&gt;perl.exe&lt;/code&gt; .</source>
          <target state="translated">и CRT DLL. Я не знаю преимуществ этого исполняемого файла перед &lt;code&gt;perl.exe&lt;/code&gt; , но он вообще не может использовать fork (). Что ж, одним из преимуществ является то, что процесс сборки не так запутан, как с &lt;code&gt;perl.exe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f78e98c292b6edbfc33a84d6b47bc8f258f6d2" translate="yes" xml:space="preserve">
          <source>and Configure will give up.</source>
          <target state="translated">и &quot;Настройка&quot; сдастся.</target>
        </trans-unit>
        <trans-unit id="e6601ba493fd802e8c69e73fa3178575540d2f6c" translate="yes" xml:space="preserve">
          <source>and Mark Adler</source>
          <target state="translated">и Марк Адлер</target>
        </trans-unit>
        <trans-unit id="86d575fb0f5c883349b5a7f286abb3edbe3207c7" translate="yes" xml:space="preserve">
          <source>and Perl knows that it has to invoke the PerlIOAPR_open() method implemented by the APR layer.</source>
          <target state="translated">и Perl знает,что он должен вызвать метод PerlIOAPR_open(),реализованный слоем APR.</target>
        </trans-unit>
        <trans-unit id="e32c9b9186aa8e9288a2accdf939a5bb0683c0cb" translate="yes" xml:space="preserve">
          <source>and UNIX, &lt;code&gt;$gzerrno&lt;/code&gt; should only be used to check for the presence of</source>
          <target state="translated">и UNIX, &lt;code&gt;$gzerrno&lt;/code&gt; следует использовать только для проверки наличия</target>
        </trans-unit>
        <trans-unit id="dce6c6da0aef880545eedbf05f807b0628611184" translate="yes" xml:space="preserve">
          <source>and UTF-16 is the name of the encoding that embraces them.</source>
          <target state="translated">а UTF-16-это название кодировки,которая их охватывает.</target>
        </trans-unit>
        <trans-unit id="c3a319360d3cdf3729627355f1ee1dd75a51847e" translate="yes" xml:space="preserve">
          <source>and ad hoc &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; . The decision of which to use depends on what part of the test suite you're working on. This is a measure to prevent a high-level failure (such as Config.pm breaking) from causing basic functionality tests to fail.</source>
          <target state="translated">и ad hoc &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; . Решение о том, что использовать, зависит от того, над какой частью набора тестов вы работаете. Это мера для предотвращения сбоя на высоком уровне (например, взлома Config.pm) из-за сбоя основных функциональных тестов.</target>
        </trans-unit>
        <trans-unit id="1759eff6deec8639c809421ad0c28a76e0ef5cae" translate="yes" xml:space="preserve">
          <source>and also $Config::Config{'scriptdir'}</source>
          <target state="translated">а также $Config::Config{'scriptdir'}</target>
        </trans-unit>
        <trans-unit id="092a598de52599e5ea26b086e728adfcb8a8f87b" translate="yes" xml:space="preserve">
          <source>and also how strings are parsed by &lt;code&gt;POSIX::strtod()&lt;/code&gt; as numbers:</source>
          <target state="translated">а также то, как &lt;code&gt;POSIX::strtod()&lt;/code&gt; анализирует строки как числа:</target>
        </trans-unit>
        <trans-unit id="53d3cfa28bbb90ed936aa07f73ce71dbef9ab3f7" translate="yes" xml:space="preserve">
          <source>and are now removed.</source>
          <target state="translated">и теперь удалены.</target>
        </trans-unit>
        <trans-unit id="d7e49eb1b589da099384cdd5bcb2b002b2679a4a" translate="yes" xml:space="preserve">
          <source>and as</source>
          <target state="translated">и как</target>
        </trans-unit>
        <trans-unit id="f930cc83716047f99549b196c0f6ea5f5c50196e" translate="yes" xml:space="preserve">
          <source>and auxiliary ones</source>
          <target state="translated">и вспомогательные</target>
        </trans-unit>
        <trans-unit id="0e8dd9b894bf299a78c91001723d0325159a6a91" translate="yes" xml:space="preserve">
          <source>and basic block profiling with gcc, see the latest GNU CC manual. As of gcc 4.8, this is at &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&lt;/a&gt;</source>
          <target state="translated">и базовое профилирование блоков с помощью gcc, см. последнюю версию руководства GNU CC. Начиная с gcc 4.8, это &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67ac2d9e2193d40fc9c92b85950de3190240ebb3" translate="yes" xml:space="preserve">
          <source>and be sure to also set the environment variable _C89_CCMODE=1 (exporting _C89_CCMODE=1 is also a good idea for users of GNU make).</source>
          <target state="translated">и обязательно установите переменную окружения _C89_CCMODE=1 (экспорт _C89_CCMODE=1 также является хорошей идеей для пользователей марки GNU).</target>
        </trans-unit>
        <trans-unit id="cce2b5ee15547d8411b108ac01a1af3d3a13be3a" translate="yes" xml:space="preserve">
          <source>and belong to the user running the program:</source>
          <target state="translated">и принадлежат пользователю,выполняющему программу:</target>
        </trans-unit>
        <trans-unit id="68c1df893d3dfe1344316c80822ce4982fc34977" translate="yes" xml:space="preserve">
          <source>and by default output is displayed inline.</source>
          <target state="translated">и по умолчанию выводится в строке.</target>
        </trans-unit>
        <trans-unit id="9d972577906aa2c316e9c360f92a8897dc203b61" translate="yes" xml:space="preserve">
          <source>and by definition, the solution is noted</source>
          <target state="translated">и,по определению,решение отмечено</target>
        </trans-unit>
        <trans-unit id="31788a27790e7797ed6a059ba1faefdb6a39e6a9" translate="yes" xml:space="preserve">
          <source>and call</source>
          <target state="translated">и звонить</target>
        </trans-unit>
        <trans-unit id="2b74bf70fe4b516f104f35b9ee09019d1d9b9441" translate="yes" xml:space="preserve">
          <source>and call it with &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; , it actually opens a pipe, executes the &lt;code&gt;rm&lt;/code&gt; command and reads &lt;code&gt;rm&lt;/code&gt; 's output from that pipe. If you want all items in &lt;code&gt;@ARGV&lt;/code&gt; to be interpreted as file names, you can use the module &lt;code&gt;ARGV::readonly&lt;/code&gt; from CPAN, or use the double bracket:</source>
          <target state="translated">и вызовите его с помощью &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; , он фактически открывает канал, выполняет команду &lt;code&gt;rm&lt;/code&gt; и считывает вывод &lt;code&gt;rm&lt;/code&gt; из этого канала. Если вы хотите, чтобы все элементы в &lt;code&gt;@ARGV&lt;/code&gt; интерпретировались как имена файлов, вы можете использовать модуль &lt;code&gt;ARGV::readonly&lt;/code&gt; из CPAN или использовать двойные скобки:</target>
        </trans-unit>
        <trans-unit id="cdadfa4e29a3387e757303b12e15c9ac8ce26389" translate="yes" xml:space="preserve">
          <source>and calling &lt;code&gt;Perl_mro_register&lt;/code&gt; :</source>
          <target state="translated">и вызываем &lt;code&gt;Perl_mro_register&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2dd76bc4189d4946771f4e716aa51df3f1240631" translate="yes" xml:space="preserve">
          <source>and choose your favorite parameters. After a few downloads running the &lt;code&gt;hosts&lt;/code&gt; command will probably assist you in choosing the best mirror sites.</source>
          <target state="translated">и выберите понравившиеся параметры. После нескольких загрузок запуск команды &lt;code&gt;hosts&lt;/code&gt; , вероятно, поможет вам выбрать лучшие зеркальные сайты.</target>
        </trans-unit>
        <trans-unit id="a8c3f91d52eab0005bf1821357c56257522b3d7e" translate="yes" xml:space="preserve">
          <source>and concatenate it to</source>
          <target state="translated">и сконцентрировать его на том,чтобы</target>
        </trans-unit>
        <trans-unit id="2ff89dcb837ced149fb6b5224ee21778d994fc8a" translate="yes" xml:space="preserve">
          <source>and continuing to the first nul. These octets are interpreted as either UTF-8 or Latin-1, according to whether the &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; flag is set in</source>
          <target state="translated">и продолжая до первого нул. Эти октеты интерпретируются как UTF-8 или Latin-1, в зависимости от того, установлен &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; флаг LEX_STUFF_UTF8 в</target>
        </trans-unit>
        <trans-unit id="3b4b74100dbb60dc7d23a3f17b465ea647875121" translate="yes" xml:space="preserve">
          <source>and correct anything wrong you find there. I do not expect it is needed anywhere.</source>
          <target state="translated">и исправьте все,что найдёте там.Я не ожидаю,что это где-то понадобится.</target>
        </trans-unit>
        <trans-unit id="c0554b9855c1b4a6c0834e79b079617190a40bcb" translate="yes" xml:space="preserve">
          <source>and dies. Therefore the SunOS 4.1 hints file explicitly sets the ld to be</source>
          <target state="translated">и умирает.Поэтому в файле подсказок SunOS 4.1 явно установлено,что ld имеет вид</target>
        </trans-unit>
        <trans-unit id="c349b5535bebf3c0ad16ae9e94907ffd5cecb983" translate="yes" xml:space="preserve">
          <source>and divines whether they passed or failed based on their output to STDOUT (details above). It prints out each individual test which failed along with a summary report and a how long it all took.</source>
          <target state="translated">и предсказывает,прошли они или нет,на основании их выхода в STDOUT (подробнее см.выше).Он распечатывает каждый отдельный тест,который прошел неудачно,вместе со сводным отчетом,и показывает,сколько времени это заняло.</target>
        </trans-unit>
        <trans-unit id="a5fd741bd9f2a58aedde00aa2b92b647f2b4c3d7" translate="yes" xml:space="preserve">
          <source>and doing a bunch of messy heuristics on the resulting</source>
          <target state="translated">и делая кучу грязных эвристик в результате</target>
        </trans-unit>
        <trans-unit id="79a24dfc42595a13dbd8f77aa55520c5f2654ac8" translate="yes" xml:space="preserve">
          <source>and earlier, the default setting is based on whether or not $prefix contains the string &lt;code&gt;perl&lt;/code&gt; .</source>
          <target state="translated">и ранее, настройка по умолчанию зависит от того, содержит ли префикс $ строку &lt;code&gt;perl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca01c68b157f542551615a222bf4d40f1c92ab92" translate="yes" xml:space="preserve">
          <source>and ending at</source>
          <target state="translated">и в конце концов</target>
        </trans-unit>
        <trans-unit id="edc511aaa0ea9a61210a5a9707c8841bf5cc309d" translate="yes" xml:space="preserve">
          <source>and even</source>
          <target state="translated">и даже</target>
        </trans-unit>
        <trans-unit id="883426c92d8b38847917d43ce3dd00b6254d2bed" translate="yes" xml:space="preserve">
          <source>and expect C to be B, because the bearing constantly changes when going from A to B (except in some special case like the meridians or the circles of latitudes) and in great_circle_destination() one gives a &lt;b&gt;constant&lt;/b&gt; bearing to follow.</source>
          <target state="translated">и ожидайте, что C будет B, потому что пеленг постоянно меняется при переходе от A к B (за исключением некоторых особых случаев, таких как меридианы или круги широт), а в great_circle_destination () задается &lt;b&gt;постоянный&lt;/b&gt; пеленг, которому нужно следовать.</target>
        </trans-unit>
        <trans-unit id="3ee040c85734bc842f7986baed3ad3d4c7a277c5" translate="yes" xml:space="preserve">
          <source>and extension authors. If your extension is dynamically loaded, DynaLoader creates</source>
          <target state="translated">и авторы расширения.Если ваше расширение динамически загружается,DynaLoader создает</target>
        </trans-unit>
        <trans-unit id="d176fa9bd5235077e8d5cc1dc829719336ead81b" translate="yes" xml:space="preserve">
          <source>and fields. So far, the functions of &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; are unaware of any classes, which I consider a feature. Therefore &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; doesn't address the serialization problems.</source>
          <target state="translated">и поля. Пока что функциям &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; не известны какие-либо классы, что я считаю особенностью. Поэтому &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; не решает проблемы сериализации.</target>
        </trans-unit>
        <trans-unit id="6420fc98ccacfbcabdd1358ce52dbb2f18c3b757" translate="yes" xml:space="preserve">
          <source>and for &lt;code&gt;_&lt;/code&gt; to explicitly populate the object using the unexported and undocumented populate() function with CORE::stat():</source>
          <target state="translated">и для &lt;code&gt;_&lt;/code&gt; , чтобы явно заполнить объект с помощью неэкспортированной и недокументированной функции populate () с CORE :: stat ():</target>
        </trans-unit>
        <trans-unit id="9ecd2684e5d35794eb09b10452dc598bb0f3ca39" translate="yes" xml:space="preserve">
          <source>and for writing:</source>
          <target state="translated">и за написание:</target>
        </trans-unit>
        <trans-unit id="c07a028d906529efcbd2ee19e8498ca6b129b522" translate="yes" xml:space="preserve">
          <source>and from Latin-1 code points to EBCDIC code points</source>
          <target state="translated">и от латинского кода-1 к коду EBCDIC.</target>
        </trans-unit>
        <trans-unit id="3f19bd785ca0e403ace13135f2e7d2f6fda0fce7" translate="yes" xml:space="preserve">
          <source>and get &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; in &lt;code&gt;$match&lt;/code&gt; , since &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; is primary equal to &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml;&lt;code&gt;SS&quot;&lt;/code&gt; .</source>
          <target state="translated">и получите &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; в &lt;code&gt;$match&lt;/code&gt; , так как &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; изначально равно &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml; &lt;code&gt;SS&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17094f04dd71da09c7e552c076f1634e82049f36" translate="yes" xml:space="preserve">
          <source>and have it work portably.</source>
          <target state="translated">и пусть работает портативно.</target>
        </trans-unit>
        <trans-unit id="a5a8ee21b9af7088e79e9b68f8de88da612fb525" translate="yes" xml:space="preserve">
          <source>and have some pending arguments such as header-file names. This is ok:</source>
          <target state="translated">и имеют некоторые отложенные аргументы,такие как имена заголовочных файлов.Это нормально:</target>
        </trans-unit>
        <trans-unit id="d2a6339505fec77b2c331da5c4ce78372f108fa3" translate="yes" xml:space="preserve">
          <source>and hence print:</source>
          <target state="translated">и,следовательно,напечатать:</target>
        </trans-unit>
        <trans-unit id="43fb62ee614e6b7e422fd695927ade0aa52a2d8a" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it</source>
          <target state="translated">и здесь есть функция C,чтобы вызвать ее</target>
        </trans-unit>
        <trans-unit id="5091999bd97a90f1245944c2fb5cff579789d3a7" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it.</source>
          <target state="translated">и здесь есть функция C,чтобы вызвать ее.</target>
        </trans-unit>
        <trans-unit id="9b815eb7a25ba6650e8aed21b42d3225c5665f92" translate="yes" xml:space="preserve">
          <source>and if a method-name was given, it is invoked as:</source>
          <target state="translated">и если было дано имя метода,то оно вызывается как:</target>
        </trans-unit>
        <trans-unit id="cc0088cffc94d4cfc5e772584e99d2d2392934ec" translate="yes" xml:space="preserve">
          <source>and if you want to compress each file one at a time, this will do the trick</source>
          <target state="translated">и если вы захотите сжимать каждый файл по одному,это сработает.</target>
        </trans-unit>
        <trans-unit id="99ebfac46815750e967685ef0c045d72e263a9e9" translate="yes" xml:space="preserve">
          <source>and in</source>
          <target state="translated">и внутри</target>
        </trans-unit>
        <trans-unit id="633f5443d1716f6d61c0fc8d8b08ec73cf1d7a57" translate="yes" xml:space="preserve">
          <source>and in:</source>
          <target state="translated">и в:</target>
        </trans-unit>
        <trans-unit id="1d0130f8a3921bc892b37851ce6cc11bad75e4c1" translate="yes" xml:space="preserve">
          <source>and is</source>
          <target state="translated">и так далее</target>
        </trans-unit>
        <trans-unit id="ebbea3f118453a1b7e7d79408e6db651a9e30122" translate="yes" xml:space="preserve">
          <source>and is invoked when you say</source>
          <target state="translated">и вызывается,когда вы говорите.</target>
        </trans-unit>
        <trans-unit id="7ecd6605c858a1a66d6b614d96b36273cffaf756" translate="yes" xml:space="preserve">
          <source>and is now removed.</source>
          <target state="translated">и теперь удален.</target>
        </trans-unit>
        <trans-unit id="73402b7701fac32d16b3ff7c74498b1589d19a23" translate="yes" xml:space="preserve">
          <source>and is sought only in the current directory.</source>
          <target state="translated">и ищется только в текущем каталоге.</target>
        </trans-unit>
        <trans-unit id="15dd7cf5f3a3a46ccd4b8609412b5d9ec3d381ec" translate="yes" xml:space="preserve">
          <source>and is typically used to test whether a particular extension is available.</source>
          <target state="translated">и обычно используется для проверки наличия конкретного расширения.</target>
        </trans-unit>
        <trans-unit id="040dda9958c7c671c9590ef80fa78defd13909d5" translate="yes" xml:space="preserve">
          <source>and is used like this:</source>
          <target state="translated">и используется вот так:</target>
        </trans-unit>
        <trans-unit id="7a0762f239de965ed45f319d1c0a1eb571367472" translate="yes" xml:space="preserve">
          <source>and it always croaks on error.</source>
          <target state="translated">и он всегда скрипит от ошибки.</target>
        </trans-unit>
        <trans-unit id="37328fc9c48882c8dd3a9ee9675314c5a2fe5451" translate="yes" xml:space="preserve">
          <source>and it is called thusly</source>
          <target state="translated">и так называется</target>
        </trans-unit>
        <trans-unit id="30dae0c952d8a4bc4211df4fa02a32b80f898a03" translate="yes" xml:space="preserve">
          <source>and it will print:</source>
          <target state="translated">и он напечатает:</target>
        </trans-unit>
        <trans-unit id="92f48e8870b365babea517ca9b817b451b407aad" translate="yes" xml:space="preserve">
          <source>and it would import the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; override. But if they said</source>
          <target state="translated">и он импортирует &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; переопределение. Но если они сказали</target>
        </trans-unit>
        <trans-unit id="c15e27e77f8641be998c0928e2456baabe13d2d3" translate="yes" xml:space="preserve">
          <source>and look for 'undef' to find the unsupported APIs (or from Perl use Config).</source>
          <target state="translated">и ищите 'undef',чтобы найти неподдерживаемые API (или из Perl use Config).</target>
        </trans-unit>
        <trans-unit id="d0408bb76ba414190a2d1aabc2693a0c0369eb0d" translate="yes" xml:space="preserve">
          <source>and managing the</source>
          <target state="translated">и управление</target>
        </trans-unit>
        <trans-unit id="6d7251c76d8c565a4c8c07c1d963ea078e2097d6" translate="yes" xml:space="preserve">
          <source>and never returns</source>
          <target state="translated">и никогда не возвращается</target>
        </trans-unit>
        <trans-unit id="ffbc147df069ca6800db6b624cd3c1abcb34c6b3" translate="yes" xml:space="preserve">
          <source>and no matter which sort of shell it's called from, the Perl program will read from the file</source>
          <target state="translated">и неважно,из какой оболочки она вызывается,программа Perl будет читать из файла.</target>
        </trans-unit>
        <trans-unit id="2f3522d8409fab2c8bd7a9a935e5958b1545b923" translate="yes" xml:space="preserve">
          <source>and not</source>
          <target state="translated">и не</target>
        </trans-unit>
        <trans-unit id="aece363ea57b99203cb8486606d46afddab39c93" translate="yes" xml:space="preserve">
          <source>and not worry about whether the subscripts are reserved words. In the rare event that you do wish to do something like</source>
          <target state="translated">и не беспокоиться о том,являются ли подписки зарезервированными словами.В редких случаях,когда вы действительно хотите сделать что-то вроде</target>
        </trans-unit>
        <trans-unit id="90867a465b6b8e0350b0a553fb9bdc04f2f044ec" translate="yes" xml:space="preserve">
          <source>and notify &amp;lt;modules@perl.org&amp;gt;.</source>
          <target state="translated">и уведомить &amp;lt;modules@perl.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="4fe6790d00afd2e85336f040031f25d3b71777a0" translate="yes" xml:space="preserve">
          <source>and omit the second call to &lt;code&gt;A::foo&lt;/code&gt; (since it would not be distinct from the first call to &lt;code&gt;A::foo&lt;/code&gt; ).</source>
          <target state="translated">и опустите второй вызов &lt;code&gt;A::foo&lt;/code&gt; (так как он не будет отличаться от первого вызова &lt;code&gt;A::foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="adeced66d67fcec42518c7d43125b26bcafca512" translate="yes" xml:space="preserve">
          <source>and on &lt;code&gt;PATH&lt;/code&gt; . To find arguments for these scripts Perl uses a different algorithm than</source>
          <target state="translated">и на &lt;code&gt;PATH&lt;/code&gt; . Чтобы найти аргументы для этих сценариев, Perl использует алгоритм, отличный от</target>
        </trans-unit>
        <trans-unit id="2af9cc5d9a90aea15c856967222ce6dfd62554a0" translate="yes" xml:space="preserve">
          <source>and on already open streams, use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">а в уже открытых потоках используйте &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5c28d75bfe8ef3f77376f1de537f6ababec7c8f5" translate="yes" xml:space="preserve">
          <source>and one can inspect the value in debugger using all the possible methods.</source>
          <target state="translated">и можно проверить значение в отладчике всеми возможными методами.</target>
        </trans-unit>
        <trans-unit id="9e3a44de13daa4279c477d6ae9ad2ae6048934f2" translate="yes" xml:space="preserve">
          <source>and only &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt; will be locale aware. Everything else is unaffected.</source>
          <target state="translated">и только &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$! &lt;/a&gt;и &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ E&lt;/a&gt; будет знать локаль. На все остальное это не влияет.</target>
        </trans-unit>
        <trans-unit id="3dfb4545fb1273b004ecd4b9a59f733f64c1cedd" translate="yes" xml:space="preserve">
          <source>and only if the condition is true. &lt;code&gt;unless&lt;/code&gt; is the opposite, it executes the statement</source>
          <target state="translated">и только если условие верно. &lt;code&gt;unless&lt;/code&gt; не обратное, он выполняет оператор</target>
        </trans-unit>
        <trans-unit id="45c260afb98f09cfba9f5207fc8117fcdbcb8feb" translate="yes" xml:space="preserve">
          <source>and only the first of these match:</source>
          <target state="translated">и только первый из этих матчей:</target>
        </trans-unit>
        <trans-unit id="32e3341449eff9e33d610a484aa1f31d028b2c36" translate="yes" xml:space="preserve">
          <source>and optimizing the final combined regexp.</source>
          <target state="translated">и оптимизация конечного комбинированного регэкспо.</target>
        </trans-unit>
        <trans-unit id="899fcac99a7dec6812e6bf7aee73eeaf10908c82" translate="yes" xml:space="preserve">
          <source>and other auto-generated files.</source>
          <target state="translated">и другие автоматически сгенерированные файлы.</target>
        </trans-unit>
        <trans-unit id="c684acd53848e74a7154abad5efe0e096b7463d3" translate="yes" xml:space="preserve">
          <source>and part</source>
          <target state="translated">и часть</target>
        </trans-unit>
        <trans-unit id="d67e5dc377fc2536598e164820c52f727da6d6ab" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;$buf&lt;/code&gt; to your send routine. Some protocols demand that the count should include the length of the count itself: then just add 4 to the data length. (But make sure to read &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;Lengths and Widths&lt;/a&gt; before you really code this!)</source>
          <target state="translated">и передайте &lt;code&gt;$buf&lt;/code&gt; в процедуру отправки. Некоторые протоколы требуют, чтобы счетчик включал длину самого счета: затем просто добавьте 4 к длине данных. (Но не забудьте прочитать &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;Длины и Ширины,&lt;/a&gt; прежде чем писать код!)</target>
        </trans-unit>
        <trans-unit id="d58ccce831f8e9123bc9e80b9e66f8248b980f4c" translate="yes" xml:space="preserve">
          <source>and process time (in UNIX-like systems the sum of</source>
          <target state="translated">и время процесса (в UNIX-подобных системах суммарное количество</target>
        </trans-unit>
        <trans-unit id="3fd6226fa225944b6194d79ef250caae14aa04c4" translate="yes" xml:space="preserve">
          <source>and produces results. If you need to customize its behaviour you should probably familiarize yourself with the source first. Enough lecturing.</source>
          <target state="translated">и приносит результаты.Если вам необходимо настроить его поведение,вам,вероятно,следует сначала познакомиться с источником.Хватит читать лекции.</target>
        </trans-unit>
        <trans-unit id="bc18719ba2c64a9b71c32941b959a3b37a8e9ccb" translate="yes" xml:space="preserve">
          <source>and programs into</source>
          <target state="translated">и программы в</target>
        </trans-unit>
        <trans-unit id="04b3f3eb12446afa59ba04e34128aaa73360c8fb" translate="yes" xml:space="preserve">
          <source>and puts the</source>
          <target state="translated">и ставит</target>
        </trans-unit>
        <trans-unit id="1050864b9d5630870510b4c5ed9d494b62e3e1ac" translate="yes" xml:space="preserve">
          <source>and recompile perl</source>
          <target state="translated">и перекомпилировать перл</target>
        </trans-unit>
        <trans-unit id="04dc98e6e6ecb08df2b06a8c82f091b8669d8771" translate="yes" xml:space="preserve">
          <source>and return a list anyway. If so, then only the last element of the list will be returned.</source>
          <target state="translated">и все равно вернуть список.Если да,то будет возвращен только последний элемент списка.</target>
        </trans-unit>
        <trans-unit id="bea3ea10f617b4820cdc83a6257e4c5d2c2ed531" translate="yes" xml:space="preserve">
          <source>and returns a sequence of octets.</source>
          <target state="translated">и возвращает последовательность октетов.</target>
        </trans-unit>
        <trans-unit id="69bdd065458a753e9be3338a81aee1403915b245" translate="yes" xml:space="preserve">
          <source>and returns this:</source>
          <target state="translated">и возвращает это:</target>
        </trans-unit>
        <trans-unit id="05a85acb845c8558aabbfdc75bce2f31eacc6f3d" translate="yes" xml:space="preserve">
          <source>and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">и запускает его через пейджер, указанный в &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88b01bfc16080bd793c508ce92be40c54c4e0d32" translate="yes" xml:space="preserve">
          <source>and see whether they list something resembling these</source>
          <target state="translated">и посмотрим,перечисляют ли они что-нибудь похожее на эти...</target>
        </trans-unit>
        <trans-unit id="9407dd89aa838f3db9bc1ee001171ae499cdf58c" translate="yes" xml:space="preserve">
          <source>and send a line of data to it this way:</source>
          <target state="translated">и послать туда строку данных:</target>
        </trans-unit>
        <trans-unit id="834b5f4699ca8ef5bed1ec71205174ca1aa071f2" translate="yes" xml:space="preserve">
          <source>and should never be used lightly.</source>
          <target state="translated">и никогда не должен использоваться легкомысленно.</target>
        </trans-unit>
        <trans-unit id="cc72a00bf5f82a31e19586f8d5648eeb9609f807" translate="yes" xml:space="preserve">
          <source>and so on.</source>
          <target state="translated">и так далее.</target>
        </trans-unit>
        <trans-unit id="9db3feda6610247fb93d16581c9f1e324a0dc3ce" translate="yes" xml:space="preserve">
          <source>and so on. Note how the trailing sub-version is automatically stripped from the version.</source>
          <target state="translated">и так далее.Обратите внимание,что трейлинговая подверсия автоматически удаляется из версии.</target>
        </trans-unit>
        <trans-unit id="0b888a2f960617a6f6c366d202b424cbea99cdde" translate="yes" xml:space="preserve">
          <source>and some C to call it</source>
          <target state="translated">и немного &quot;С&quot;,чтобы назвать это</target>
        </trans-unit>
        <trans-unit id="a1e18734fb68f76855ac9d83f86033f89bcb6297" translate="yes" xml:space="preserve">
          <source>and someone has been calling it with an array or expression returning a list:</source>
          <target state="translated">и кто-то вызывал его с массивом или выражением,возвращающим список:</target>
        </trans-unit>
        <trans-unit id="c88d797f97ab7980940e6fbc2a0b1b0f03bf45ed" translate="yes" xml:space="preserve">
          <source>and start with this template:</source>
          <target state="translated">и начните с этого шаблона:</target>
        </trans-unit>
        <trans-unit id="60a1a53956f7f1b07c9ff7e2cf048e0d61cf0aff" translate="yes" xml:space="preserve">
          <source>and still have it work under all the modes Perl could have been compiled with.</source>
          <target state="translated">и до сих пор работает во всех режимах,с которыми Perl мог бы быть скомпилирован.</target>
        </trans-unit>
        <trans-unit id="b93c07a562c2c0c86991f560b275725c74228f04" translate="yes" xml:space="preserve">
          <source>and suffix of C&amp;lt;.dat&amp;gt; would generate a file similar to F</source>
          <target state="translated">и суффикс C &amp;lt;.dat&amp;gt; создаст файл, похожий на F</target>
        </trans-unit>
        <trans-unit id="58b0b8a5933189f91ce79bd5aaa4c4a91a53f4c2" translate="yes" xml:space="preserve">
          <source>and symbolic sub references</source>
          <target state="translated">и символические подссылки</target>
        </trans-unit>
        <trans-unit id="c8bd05940ef361af618d2f58d8ef228c2dc1eee1" translate="yes" xml:space="preserve">
          <source>and that the default flags are kept in a global C variable &lt;code&gt;default_flags&lt;/code&gt; . Suppose that you want to create an interface which is called as</source>
          <target state="translated">и что флаги по умолчанию хранятся в глобальной переменной C &lt;code&gt;default_flags&lt;/code&gt; . Предположим, вы хотите создать интерфейс, который называется</target>
        </trans-unit>
        <trans-unit id="97ed4c8cfdc4058f64674afafa62d45ea754ba4b" translate="yes" xml:space="preserve">
          <source>and that will set this class as the default formatter to run when you do &lt;code&gt;perldoc whatever&lt;/code&gt; .</source>
          <target state="translated">и это установит этот класс как &lt;code&gt;perldoc whatever&lt;/code&gt; форматирования по умолчанию, которое будет запускаться, когда вы делаете perldoc что угодно .</target>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a3e1044d78ff80b32d4053c48546a54399bb4a" translate="yes" xml:space="preserve">
          <source>and the (compiled)</source>
          <target state="translated">и (составленный)</target>
        </trans-unit>
        <trans-unit id="7709e2962fcebb7a32dface22926131efe462333" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;&quot;-&quot;&lt;/code&gt; shouldn't be the first character. If you want to be hypercorrect, stay case-insensitive and within the 8.3 naming convention (all the files and directories have to be unique within one directory if their names are lowercased and truncated to eight characters before the &lt;code&gt;.&lt;/code&gt;, if any, and to three characters after the &lt;code&gt;.&lt;/code&gt;, if any). (And do not use &lt;code&gt;.&lt;/code&gt;s in directory names.)</source>
          <target state="translated">и &lt;code&gt;&quot;-&quot;&lt;/code&gt; не должен быть первым символом. Если вы хотите быть гиперкорректным, оставайтесь без учета регистра и в рамках соглашения об именах 8.3 (все файлы и каталоги должны быть уникальными в пределах одного каталога, если их имена в нижнем регистре и усечены до восьми символов перед &lt;code&gt;.&lt;/code&gt; , Если есть, и до трех символы после &lt;code&gt;.&lt;/code&gt; , если есть). (И не использовать &lt;code&gt;.&lt;/code&gt; S в именах каталогов) .</target>
        </trans-unit>
        <trans-unit id="4d66f33f291aa497e1fbb1cea751208ffbc34985" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;S_IF*&lt;/code&gt; functions are</source>
          <target state="translated">и &lt;code&gt;S_IF*&lt;/code&gt; функции</target>
        </trans-unit>
        <trans-unit id="2942a15e2cfe5df5d7b4806203036ff2059365fd" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;build&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">и &lt;code&gt;build&lt;/code&gt; поля &lt;code&gt;prereqs&lt;/code&gt; вашего</target>
        </trans-unit>
        <trans-unit id="ab5709809a705fe3cbf34a47d36a8f9e3b151b2f" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;configure&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">и &lt;code&gt;configure&lt;/code&gt; поля &lt;code&gt;prereqs&lt;/code&gt; вашего</target>
        </trans-unit>
        <trans-unit id="02c4a9e6fa1ed7552c9cc696dccfac8693bb8d07" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;padadd_STATE&lt;/code&gt; flag get added to</source>
          <target state="translated">и флаг &lt;code&gt;padadd_STATE&lt;/code&gt; добавляется к</target>
        </trans-unit>
        <trans-unit id="3e4685b36d5a4d2703e2682160eabe2135a107d7" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;runtime&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">и время &lt;code&gt;runtime&lt;/code&gt; поля &lt;code&gt;prereqs&lt;/code&gt; вашего</target>
        </trans-unit>
        <trans-unit id="25ff9d2e379f8fa04204de9723f370d19f946094" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;test&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">и &lt;code&gt;test&lt;/code&gt; поля &lt;code&gt;prereqs&lt;/code&gt; вашего</target>
        </trans-unit>
        <trans-unit id="ad51d3bef464cc47afa473cbf58e8f411acbad00" translate="yes" xml:space="preserve">
          <source>and the B part would be serialized by the engine. In &lt;code&gt;STORABLE_thaw&lt;/code&gt; , you would get back the reference to the B' object, deserialized for you.</source>
          <target state="translated">а часть B будет сериализована двигателем. В &lt;code&gt;STORABLE_thaw&lt;/code&gt; вы вернете ссылку на объект B ', десериализованный для вас.</target>
        </trans-unit>
        <trans-unit id="147f20996051af5faf516917523025a59c3b1223" translate="yes" xml:space="preserve">
          <source>and the anonymous sub used with a</source>
          <target state="translated">и анонимная подлодка,используемая с</target>
        </trans-unit>
        <trans-unit id="be7ddd8a1c2d20b11344c530e59b1a76ec5867c2" translate="yes" xml:space="preserve">
          <source>and the assignments to &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;@EXPORT_OK&lt;/code&gt; happen immediately, leaving no room for something to get awry or just plain wrong.</source>
          <target state="translated">и назначения для &lt;code&gt;@ISA&lt;/code&gt; и &lt;code&gt;@EXPORT_OK&lt;/code&gt; происходят немедленно, не оставляя места для того, чтобы что-то пошло наперекосяк или просто неправильно.</target>
        </trans-unit>
        <trans-unit id="ec3881e38f6bc29241523880e8b6087893781e29" translate="yes" xml:space="preserve">
          <source>and the code for rpcb_gettime() can be rewritten as</source>
          <target state="translated">и код для rpcb_gettime()можно переписать как</target>
        </trans-unit>
        <trans-unit id="d0b288947e39526d473e38a00227523ed22a3b40" translate="yes" xml:space="preserve">
          <source>and the context and data stacks, as shown by &lt;code&gt;-Dstv&lt;/code&gt; , look like:</source>
          <target state="translated">а стеки контекста и данных, как показано &lt;code&gt;-Dstv&lt;/code&gt; , выглядят так:</target>
        </trans-unit>
        <trans-unit id="0053caf8d86bff52b61e0db6e20570501321030d" translate="yes" xml:space="preserve">
          <source>and the decoding is</source>
          <target state="translated">и декодирование</target>
        </trans-unit>
        <trans-unit id="6db487f2363f1808733e361f4f9ef6e4c29bac55" translate="yes" xml:space="preserve">
          <source>and the dual-life modules are in</source>
          <target state="translated">и модули с двойным сроком службы</target>
        </trans-unit>
        <trans-unit id="701a5fbfcd6a3d0bfbaa14dc1799d0bcc3687760" translate="yes" xml:space="preserve">
          <source>and the first argument of myref() will be a reference to a scalar, an array, a hash, a code, or a glob.</source>
          <target state="translated">и первым аргументом myref()будет ссылка на скаляр,массив,хэш,код или глобус.</target>
        </trans-unit>
        <trans-unit id="41644e439068ccf4dd12a38456eb1c0abd4f9ac4" translate="yes" xml:space="preserve">
          <source>and the following code will read the hexdump in and convert it on the fly back into bytes:</source>
          <target state="translated">и следующий код прочитает hexdump in и сконвертирует его на лету обратно в байты:</target>
        </trans-unit>
        <trans-unit id="50b6d807bc1aa40041d0aec64ce2f373303ab28d" translate="yes" xml:space="preserve">
          <source>and the latter should be used for consistency.</source>
          <target state="translated">и последнее должно быть использовано для последовательности.</target>
        </trans-unit>
        <trans-unit id="a319d5d5f1db6ffbf62ebbd0eae703d0f1b20336" translate="yes" xml:space="preserve">
          <source>and the method form of &lt;code&gt;isa&lt;/code&gt; for the second:</source>
          <target state="translated">и форма метода &lt;code&gt;isa&lt;/code&gt; для второго:</target>
        </trans-unit>
        <trans-unit id="d51a49fa5c4b18f00dbcb9d665d43c1102906852" translate="yes" xml:space="preserve">
          <source>and the newer &lt;a href=&quot;concise&quot;&gt;B::Concise&lt;/a&gt;, &lt;a href=&quot;terse&quot;&gt;B::Terse&lt;/a&gt;.</source>
          <target state="translated">и более новые &lt;a href=&quot;concise&quot;&gt;B :: Concise&lt;/a&gt; , &lt;a href=&quot;terse&quot;&gt;B :: Terse&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0101ea36f11aa234346b21c12169ca0fa18afce9" translate="yes" xml:space="preserve">
          <source>and the numeric value of $c becomes 5. However, after calling</source>
          <target state="translated">и числовое значение $c становится 5.Однако,после вызова</target>
        </trans-unit>
        <trans-unit id="59496338c48bb851d2fcd377f515a4eb8426caa1" translate="yes" xml:space="preserve">
          <source>and the old 5.005 style threading, or for that matter, to most other threading systems out there, is that by default, no data is shared. When a new Perl thread is created, all the data associated with the current thread is copied to the new thread, and is subsequently private to that new thread! This is similar in feel to what happens when a Unix process forks, except that in this case, the data is just copied to a different part of memory within the same process rather than a real fork taking place.</source>
          <target state="translated">и старая многопоточность в стиле 5.005,или,если уж на то пошло,для большинства других многопоточных систем,это то,что по умолчанию,никакие данные не используются совместно.Когда создается новый поток Perl,все данные,связанные с текущим потоком,копируются в новый поток,а затем становятся приватными для этого нового потока! Это похоже на то,что происходит,когда вилка Unix-процесса,за исключением того,что в этом случае данные просто копируются в другую часть памяти в рамках одного и того же процесса,а не в реальную вилку.</target>
        </trans-unit>
        <trans-unit id="f98e525fd3fa23c9c2e46620627a8148db25bb3f" translate="yes" xml:space="preserve">
          <source>and the process defaults to expand the filespec) and pass the rest of &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;'s argument to it as parameters. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">и по умолчанию процесс расширяет спецификацию файлов) и передает ему остальную часть аргумента &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; в качестве параметров. Если токен не имеет типа файла и соответствует файлу с нулевым типом, то делается попытка определить, является ли файл исполняемым образом, который должен быть вызван с помощью &lt;code&gt;MCR&lt;/code&gt; , или текстовым файлом, который следует передать в DCL как командную процедуру. .</target>
        </trans-unit>
        <trans-unit id="ddacafb3c506d7d636313e8cd8381b88b300fc0f" translate="yes" xml:space="preserve">
          <source>and the process defaults, and if successful, the resulting file is invoked via &lt;code&gt;MCR&lt;/code&gt; . This allows you to invoke an image directly simply by passing the file specification to &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, a common Unixish idiom. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">и настройки процесса по умолчанию, и в случае успеха результирующий файл вызывается через &lt;code&gt;MCR&lt;/code&gt; . Это позволяет вам вызывать изображение напрямую, просто передавая спецификацию файла &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , что является распространенной идиомой Unixish. Если токен не имеет типа файла и соответствует файлу с нулевым типом, то делается попытка определить, является ли файл исполняемым образом, который следует вызывать с помощью &lt;code&gt;MCR&lt;/code&gt; , или текстового файла, который должен быть передан в DCL как командная процедура. .</target>
        </trans-unit>
        <trans-unit id="01a7d35d5fca09ca87a957bce5a8e41bd9acadb8" translate="yes" xml:space="preserve">
          <source>and the repeat count is obtained by popping off the last element from the stack. The</source>
          <target state="translated">и счетчик повторов получается путем вытаскивания последнего элемента из стека.</target>
        </trans-unit>
        <trans-unit id="ffb8c286d177a7fde4b96ec8e58df11a57708992" translate="yes" xml:space="preserve">
          <source>and the result is not what you likely expected. No warnings are generated. If you do string &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;'s within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , you should instead change the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; line to do something like:</source>
          <target state="translated">и результат не такой, как вы ожидали. Никаких предупреждений не генерируется. Если вы выполняете строковые &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , вы должны вместо этого изменить строку &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , чтобы она делала что-то вроде:</target>
        </trans-unit>
        <trans-unit id="5826e275e51e2f92c417012d26e57183b67ddebf" translate="yes" xml:space="preserve">
          <source>and the second as</source>
          <target state="translated">и второй как</target>
        </trans-unit>
        <trans-unit id="4b0c54cf5e55bcce5334c4fb8936e4b45df4be44" translate="yes" xml:space="preserve">
          <source>and the variable is only assigned if the condition is false. In Perl, you need parentheses:</source>
          <target state="translated">и переменная присваивается только в том случае,если условие ложно.В Perl нужны скобки:</target>
        </trans-unit>
        <trans-unit id="b195225fa7acc0b96c9d796bff6aa32f9bf25de1" translate="yes" xml:space="preserve">
          <source>and their source code:</source>
          <target state="translated">и их исходный код:</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">а потом</target>
        </trans-unit>
        <trans-unit id="a89a3626b8565f1e4fe93595aa23beb07a814bdf" translate="yes" xml:space="preserve">
          <source>and then &lt;code&gt;make install&lt;/code&gt; directly in the subshell.</source>
          <target state="translated">а затем &lt;code&gt;make install&lt;/code&gt; прямо в подоболочке.</target>
        </trans-unit>
        <trans-unit id="c057b91530af5ff3d52f001fe2897560766773fd" translate="yes" xml:space="preserve">
          <source>and then I can use it as:</source>
          <target state="translated">и тогда я смогу использовать его как:</target>
        </trans-unit>
        <trans-unit id="7ee1c36bc806d74c955b8deeab5a71a91290b0b4" translate="yes" xml:space="preserve">
          <source>and then at the end add a subroutine (which will override the pre-existing subroutine). Remember to use a tab character to indent the line beginning with &quot;cd&quot;!</source>
          <target state="translated">а затем в конце добавьте подпрограмму (которая переопределит ранее существовавшую подпрограмму).Не забудьте использовать символ табуляции,чтобы отступить от строки,начинающейся с &quot;cd&quot;!</target>
        </trans-unit>
        <trans-unit id="ab0d506f35fd3822d193cc9360b63e031c3942f4" translate="yes" xml:space="preserve">
          <source>and then calls the compiled value, and returns that. (I.e., if $key looks like bracket notation, $compiled is a sub, and we return &amp;amp;{$compiled}(@params); but if $key is just a plain string, we just return that.)</source>
          <target state="translated">а затем вызывает скомпилированное значение и возвращает его. (То есть, если $ key выглядит как скобка, $ compiled является подпрограммой, и мы возвращаем &amp;amp; {$ compiled} (@ params); но если $ key является простой строкой, мы просто возвращаем ее.)</target>
        </trans-unit>
        <trans-unit id="44a3152294c4111f2c746a317f7528eba26af20d" translate="yes" xml:space="preserve">
          <source>and then compile Perl. The places where fchdir() is used have alternatives for systems that do not have fchdir() available.</source>
          <target state="translated">а потом скомпилируй Перла.В местах,где используется функция fchdir(),есть альтернативы для систем,в которых нет функции fchdir().</target>
        </trans-unit>
        <trans-unit id="9b2df89c641d69f45a815efca5beef7560ca9a0a" translate="yes" xml:space="preserve">
          <source>and then just answer client requests for language $wanted by just looking up</source>
          <target state="translated">а затем просто ответить на запросы клиентов на нужном языке,просто посмотрев вверх.</target>
        </trans-unit>
        <trans-unit id="8b1640f57029d1835984f3af20d2191014b99ddf" translate="yes" xml:space="preserve">
          <source>and then only hard references will be allowed for the rest of the enclosing block. An inner block may countermand that with</source>
          <target state="translated">и тогда только жесткие ссылки будут разрешены для остальной части ограждающего блока.Внутренний блок может противодействовать</target>
        </trans-unit>
        <trans-unit id="451e30567469e8b460f1d3bc5414c41a6638cddf" translate="yes" xml:space="preserve">
          <source>and then re-compiling and installing. (&lt;code&gt;%Config&lt;/code&gt; is available from the Config module).</source>
          <target state="translated">а затем перекомпилировать и установить. ( &lt;code&gt;%Config&lt;/code&gt; доступен из модуля Config).</target>
        </trans-unit>
        <trans-unit id="a0240abc49e91dec760c37658ba9b71575aed0e0" translate="yes" xml:space="preserve">
          <source>and then restart the debugger using the &lt;code&gt;R&lt;/code&gt; command (if possible). One can use &lt;code&gt;b
compile subname&lt;/code&gt; for the same purpose.</source>
          <target state="translated">а затем перезапустите отладчик с помощью команды &lt;code&gt;R&lt;/code&gt; (если возможно). Для той же цели можно использовать &lt;code&gt;b compile subname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbf31119ed47c5f8b69e18f4d5f705e1c96574bd" translate="yes" xml:space="preserve">
          <source>and then there's</source>
          <target state="translated">и вот</target>
        </trans-unit>
        <trans-unit id="353ea5311f06d213fb4274ba5a999ecceb56a41b" translate="yes" xml:space="preserve">
          <source>and then use pax.</source>
          <target state="translated">а затем используй Пакс.</target>
        </trans-unit>
        <trans-unit id="48126773317a746d38788a830d1f700877f824cc" translate="yes" xml:space="preserve">
          <source>and there are currently 32 types. These different structures contain pointers to various routines that perform additional actions depending on which function is being called.</source>
          <target state="translated">и в настоящее время существует 32 типа.Эти различные структуры содержат указатели на различные подпрограммы,которые выполняют дополнительные действия в зависимости от того,какая функция вызывается.</target>
        </trans-unit>
        <trans-unit id="125d179aee3f08c5f3f28753f2a610fce93912ec" translate="yes" xml:space="preserve">
          <source>and these</source>
          <target state="translated">а это</target>
        </trans-unit>
        <trans-unit id="e1493a3f0807b6f38cd28b6afc4496c286e444bc" translate="yes" xml:space="preserve">
          <source>and these conditions now hold; changes in caps:</source>
          <target state="translated">и эти условия теперь в силе;изменения в шапках:</target>
        </trans-unit>
        <trans-unit id="634f4431e19540e83429c99c727415ca241cf810" translate="yes" xml:space="preserve">
          <source>and they need renamed to this</source>
          <target state="translated">и им нужно переименовать</target>
        </trans-unit>
        <trans-unit id="c08d7693095dbd2bcba2f2bba00e5c933e696272" translate="yes" xml:space="preserve">
          <source>and things will Just Work.</source>
          <target state="translated">и все будет просто работать.</target>
        </trans-unit>
        <trans-unit id="13d6234dafca22c495f68d2e93ffa91530cf4576" translate="yes" xml:space="preserve">
          <source>and this all reduces to one string internally. Likewise, if you say</source>
          <target state="translated">и все это сводится к одной строке внутри.Точно так же,если вы скажете.</target>
        </trans-unit>
        <trans-unit id="54d316122df54908b330dbe67e0eb1a7496b2e8d" translate="yes" xml:space="preserve">
          <source>and this is the C function</source>
          <target state="translated">и это функция С</target>
        </trans-unit>
        <trans-unit id="b0b7cef2e136b9167abea8c18920b79278779cc6" translate="yes" xml:space="preserve">
          <source>and this is the equivalent skeleton for the</source>
          <target state="translated">и это эквивалент скелета для</target>
        </trans-unit>
        <trans-unit id="6eebd24f36d63aecef99cba57072fffe82f277ba" translate="yes" xml:space="preserve">
          <source>and this is what it outputs:</source>
          <target state="translated">и это то,что он выводит:</target>
        </trans-unit>
        <trans-unit id="fd12e4da86b9aadfbb2734c8e5f1bee5da3b93ce" translate="yes" xml:space="preserve">
          <source>and this to write compress files, if you have the &lt;code&gt;compress&lt;/code&gt; program available</source>
          <target state="translated">и это писать сжимать файлы, если у вас есть &lt;code&gt;compress&lt;/code&gt; программа доступной</target>
        </trans-unit>
        <trans-unit id="e2c2bf67a7935e18e359ad79d84198585a4af3bd" translate="yes" xml:space="preserve">
          <source>and this with &lt;code&gt;gunzip&lt;/code&gt;</source>
          <target state="translated">и это с помощью &lt;code&gt;gunzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d39dfbea4e5b4447637693f64c38ebc1f8116f81" translate="yes" xml:space="preserve">
          <source>and thus the North American servers happen to be listed between the European and the South American sites.</source>
          <target state="translated">и,таким образом,североамериканские серверы оказались в списке между европейским и южноамериканским сайтами.</target>
        </trans-unit>
        <trans-unit id="cb400c328bbed62df7bf2a79424df0971a9b0060" translate="yes" xml:space="preserve">
          <source>and to convert it back:</source>
          <target state="translated">и обратить его обратно:</target>
        </trans-unit>
        <trans-unit id="389eab738d2c24825aaf583e6d4e7e90f7197558" translate="yes" xml:space="preserve">
          <source>and to make a subroutine visible to other packages in the same scope:</source>
          <target state="translated">и сделать подпрограмму видимой для других пакетов в том же объеме:</target>
        </trans-unit>
        <trans-unit id="217975290eb70597845ac22d0c9eaec6ba4f2b06" translate="yes" xml:space="preserve">
          <source>and to pop the return value out. Take a deep breath...</source>
          <target state="translated">и вытащить возвращаемое значение.Сделай глубокий вдох...</target>
        </trans-unit>
        <trans-unit id="f2f253ad479c1e47993bd311d49420fc3740b03a" translate="yes" xml:space="preserve">
          <source>and to prevent the filter's being turned off in any way:</source>
          <target state="translated">и чтобы фильтр ни в коем случае не был выключен:</target>
        </trans-unit>
        <trans-unit id="f457722dbced2bf2ae91cbfea945e31146a31b39" translate="yes" xml:space="preserve">
          <source>and to set CCHOME, CCINCDIR and CCLIBDIR as per the environment setup above.</source>
          <target state="translated">и установить CCHOME,CCINCDIR и CCLIBDIR в соответствии с настройками среды,приведенными выше.</target>
        </trans-unit>
        <trans-unit id="d2fe6dcb8f246d2fce35f742575fa001821e5680" translate="yes" xml:space="preserve">
          <source>and tries again, since it's customary to have file types on all files under VMS.</source>
          <target state="translated">и пытается снова,так как принято иметь типы файлов на всех файлах под VMS.</target>
        </trans-unit>
        <trans-unit id="3b1648c7e0ac8e95616dae97bc077625fd8d6af2" translate="yes" xml:space="preserve">
          <source>and uncomment the relevant variables near the end of the file.</source>
          <target state="translated">и прокомментируйте соответствующие переменные в конце файла.</target>
        </trans-unit>
        <trans-unit id="cfcf943d2393a6f28d49e0ffac0815fd27da0bf6" translate="yes" xml:space="preserve">
          <source>and uncomment the struct.</source>
          <target state="translated">и не комментировать структуру.</target>
        </trans-unit>
        <trans-unit id="9e6562a3babb41524cb81f0cde70dfef28222be8" translate="yes" xml:space="preserve">
          <source>and under Win32, the approximately equivalent:</source>
          <target state="translated">и под Win32,приблизительно эквивалентный:</target>
        </trans-unit>
        <trans-unit id="46d5ca958aec010c55ad2c03e5821dac149faf98" translate="yes" xml:space="preserve">
          <source>and use the &lt;code&gt;TIOCNOTTY&lt;/code&gt; ioctl() on it instead. See tty(4) for details.</source>
          <target state="translated">и используйте вместо него &lt;code&gt;TIOCNOTTY&lt;/code&gt; ioctl (). См. Tty (4) для подробностей.</target>
        </trans-unit>
        <trans-unit id="9f14a6780c851ae104f1481fc1a9906cf9782249" translate="yes" xml:space="preserve">
          <source>and wait:</source>
          <target state="translated">и ждать:</target>
        </trans-unit>
        <trans-unit id="69c07c00f94d0c5b0709bf9c6938ba419bdf55e3" translate="yes" xml:space="preserve">
          <source>and when compiling the POSIX extension</source>
          <target state="translated">и при компиляции расширения POSIX</target>
        </trans-unit>
        <trans-unit id="6ee8bc7f7f274956ec858de1f58858d8da87dae0" translate="yes" xml:space="preserve">
          <source>and will work on any list:</source>
          <target state="translated">и будет работать над любым списком:</target>
        </trans-unit>
        <trans-unit id="56f643ea045d7d28116e861b4f87f762cdd48385" translate="yes" xml:space="preserve">
          <source>and you are attempting to remove an ancestor, such as</source>
          <target state="translated">и вы пытаетесь удалить предка,например.</target>
        </trans-unit>
        <trans-unit id="675d70b7c962e8ca4b793a761fbb9992623d3828" translate="yes" xml:space="preserve">
          <source>and you can create well-formed Unicode with</source>
          <target state="translated">и вы можете создать хорошо сформированный Юникод с помощью</target>
        </trans-unit>
        <trans-unit id="9c639a2ec15edc09ca8e02e951acf39319cc8f44" translate="yes" xml:space="preserve">
          <source>and you want to Export symbol &lt;code&gt;$A::b&lt;/code&gt; back to the module that called package A. Since Exporter relies on the import method to work, via inheritance, as it stands Exporter::import() will never get called. Instead, say the following:</source>
          <target state="translated">и вы хотите экспортировать символ &lt;code&gt;$A::b&lt;/code&gt; обратно в модуль, который вызвал пакет A. Поскольку Exporter полагается на метод импорта для работы, через наследование, в его нынешнем виде Exporter :: import () никогда не будет вызван. Вместо этого скажите следующее:</target>
        </trans-unit>
        <trans-unit id="622cd26503fac9383fb718bed2b3ddba040f7083" translate="yes" xml:space="preserve">
          <source>and you want to produce an output like this, with each country mentioned once, and then an alphabetical list of the cities in that country:</source>
          <target state="translated">и вы хотите произвести такой результат,с упоминанием каждой страны один раз,а затем алфавитный список городов в этой стране:</target>
        </trans-unit>
        <trans-unit id="4c1468c599d605484919b48473553ef4293085c5" translate="yes" xml:space="preserve">
          <source>and you're done.</source>
          <target state="translated">и с тобой покончено.</target>
        </trans-unit>
        <trans-unit id="b0adec687e3ab4fff14b5efa8b7087cfcfe80d04" translate="yes" xml:space="preserve">
          <source>and/or</source>
          <target state="translated">and/or</target>
        </trans-unit>
        <trans-unit id="9f29ab58f3ce583beed68be5f3bf29542855d9de" translate="yes" xml:space="preserve">
          <source>angles being equal to</source>
          <target state="translated">равные углы</target>
        </trans-unit>
        <trans-unit id="03f6df04819f61a4ed7725f72fc3f5557572193e" translate="yes" xml:space="preserve">
          <source>angles.</source>
          <target state="translated">angles.</target>
        </trans-unit>
        <trans-unit id="0a92fab3230134cca6eadd9898325b9b2ae67998" translate="yes" xml:space="preserve">
          <source>anonymous</source>
          <target state="translated">anonymous</target>
        </trans-unit>
        <trans-unit id="f3939ccfbbc78c50725aff277833f2cbdd31e9da" translate="yes" xml:space="preserve">
          <source>anonymous subroutine.)</source>
          <target state="translated">анонимная подпрограмма.)</target>
        </trans-unit>
        <trans-unit id="14ccf9a789edbcad8533f0e8977c70173ff9dfa6" translate="yes" xml:space="preserve">
          <source>anonymous@</source>
          <target state="translated">anonymous@</target>
        </trans-unit>
        <trans-unit id="b7c8ffb8fbc67c171328e0e8f643694e8e61b335" translate="yes" xml:space="preserve">
          <source>another</source>
          <target state="translated">another</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
