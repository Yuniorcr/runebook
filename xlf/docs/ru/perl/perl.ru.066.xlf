<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="f206c1bcae194bffc342770e7b420f8da8111044" translate="yes" xml:space="preserve">
          <source>This namespace is for plugins. Plugins are modules that change or enhance the behavior of Test2. An example of a plugin is a module that sets the encoding to utf8 globally. Another example is a module that causes a bail-out event after the first test failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf32d61a54ff1e8a671180167e4172f9902a980" translate="yes" xml:space="preserve">
          <source>This namespace is for sets of tools. Modules in this namespace should export tools like &lt;code&gt;ok()&lt;/code&gt; and &lt;code&gt;is()&lt;/code&gt;. Most things written for Test2 should go here. Modules in this namespace &lt;b&gt;MUST NOT&lt;/b&gt; export subs from other tools. See the &lt;a href=&quot;#Test2%3A%3ABundle%3A%3A&quot;&gt;&quot;Test2::Bundle::&quot;&lt;/a&gt; namespace if you want to do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4e24a5df257f50d009292829b2bfd20798df4c" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f3b2bdf54de52b80ace773443b078978c32943" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="translated">Этот новый стиль соответствует значениям других свойств Unicode. Чтобы сохранить обратную совместимость, все функции в Unicode :: UCD, которые возвращают имена блоков (за исключением отмеченных), возвращают функции старого стиля. &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases ()&lt;/a&gt; возвращает новый стиль и может использоваться для преобразования старого стиля в новый стиль:</target>
        </trans-unit>
        <trans-unit id="00215ed790925e9c90e37af405255e37b3a2b3c0" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt; , and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt; .</source>
          <target state="translated">Эта функция нормализатора будет хранить возвращаемые значения скалярного контекста в файле на диске под ключами, начинающимися с &lt;code&gt;S:&lt;/code&gt; , и перечислять возвращаемые значения контекста под ключами, начинающимися с &lt;code&gt;L:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565b14e4a137ea8e183d1678fe124d67dbe415ce" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt;, and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af82ed0821cc193322bac301a4efb5cd0be9cd17" translate="yes" xml:space="preserve">
          <source>This normally doesn't happen at the Perl level unless a variable is undef'ed or the last variable holding a reference to it is changed or overwritten. At the internal level, however, reference counts can be manipulated with the following macros:</source>
          <target state="translated">Обычно это не происходит на уровне Perl,если только не изменяется или не перезаписывается последняя переменная,содержащая ссылку на нее.Однако на внутреннем уровне с количеством ссылок можно манипулировать следующими макросами:</target>
        </trans-unit>
        <trans-unit id="3b1609ead2a84dd600fa52f07b23743e8e94c4e5" translate="yes" xml:space="preserve">
          <source>This notes a problem in the Pod, which will be reported in the &quot;Pod Errors&quot; section of the document and/or sent to STDERR, depending on the values of the attributes &lt;code&gt;no_whining&lt;/code&gt;, &lt;code&gt;no_errata_section&lt;/code&gt;, and &lt;code&gt;complain_stderr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a84db8c8f72a870ae46a23a931a2d5e7928615c" translate="yes" xml:space="preserve">
          <source>This notes an error like &lt;code&gt;whine&lt;/code&gt; does, except that it is not suppressible with &lt;code&gt;no_whining&lt;/code&gt;. This should be used only for very serious errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781831a4fcab5b31277395d81bbf01ada61ab8de" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_REVISION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">Этот номер описывает самый ранний совместимый &lt;code&gt;PERL_REVISION&lt;/code&gt; Perl ( &lt;code&gt;compatibility&lt;/code&gt; здесь определяется как достаточная).</target>
        </trans-unit>
        <trans-unit id="0c3631049473f76e2dd0f9b657a8b5bb99ef0ce8" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">Этот номер описывает самую раннюю совместимую &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; Perl ( &lt;code&gt;compatibility&lt;/code&gt; здесь определяется как достаточная).</target>
        </trans-unit>
        <trans-unit id="74feee9a515674df1fbf3fa550f4ebde2a393edc" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_VERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">Этот номер описывает самую раннюю совместимую &lt;code&gt;PERL_VERSION&lt;/code&gt; Perl ( &lt;code&gt;compatibility&lt;/code&gt; здесь определяется как достаточная).</target>
        </trans-unit>
        <trans-unit id="091c6d1236713704a5d644b59c4d940e46aa2271" translate="yes" xml:space="preserve">
          <source>This object consumes &lt;a href=&quot;Test2::Util::ExternalMeta&quot;&gt;Test2::Util::ExternalMeta&lt;/a&gt; which provides a consistent way for you to attach meta-data to instances of this class. This is useful for tools, plugins, and other extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daf144ec9102bb41c4b3e85d9d925806042ef77" translate="yes" xml:space="preserve">
          <source>This object corresponds to a tree of parsed POD text. As POD text is scanned from left to right, it is parsed into an ordered list of text-strings and &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; objects (in order of appearance). A &lt;b&gt;Pod::ParseTree&lt;/b&gt; object corresponds to this list of strings and sequences. Each interior sequence in the parse-tree may itself contain a parse-tree (since interior sequences may be nested).</source>
          <target state="translated">Этот объект соответствует дереву проанализированного текста POD. Поскольку текст POD сканируется слева направо, он разбирается в упорядоченный список текстовых строк и объектов &lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; (в порядке появления). &lt;b&gt;Pod :: ParseTree&lt;/b&gt; объект соответствует этому списку строк и последовательностей. Каждая внутренняя последовательность в синтаксическом дереве может сама содержать синтаксическое дерево (поскольку внутренние последовательности могут быть вложенными).</target>
        </trans-unit>
        <trans-unit id="bf5376f8ad113b045fd4b2cd36ed30b7f5f4f548" translate="yes" xml:space="preserve">
          <source>This object encapsulates the global shared state tracked by &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. A single global instance of this package is stored (and obscured) by the &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65aad4d731c650bf589bf8e7d6030572457b243" translate="yes" xml:space="preserve">
          <source>This object model leads to a tight coupling between subclasses. If one class wants to inherit from another (and both classes access object data), the classes must agree about implementation details. Inheritance can only be used among classes that are maintained together, in a single source or not.</source>
          <target state="translated">Эта объектная модель приводит к плотному соединению между подклассами.Если один класс хочет наследовать от другого (и оба класса получают доступ к объектным данным),то классы должны договориться о деталях реализации.Наследование может быть использовано только между классами,которые поддерживаются вместе,в одном источнике или нет.</target>
        </trans-unit>
        <trans-unit id="ddb04c604b2d23c57bcc7ab2aed8669980c3ec14" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;'a'&lt;/code&gt;. Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;'a'&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75906e4fa98bc1c55561b974f97399cf50b738ce" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;a&lt;/code&gt; . Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;a&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="translated">Это, очевидно, совпадает, но в процессе сопоставления подвыражение &lt;code&gt;a*&lt;/code&gt; сначала захватило &lt;code&gt;a&lt;/code&gt; . Однако это не приведет к совпадению всего регулярного выражения, поэтому после обратного отслеживания &lt;code&gt;a*&lt;/code&gt; в конечном итоге вернул &lt;code&gt;a&lt;/code&gt; и сопоставил пустую строку. Вот что &lt;code&gt;a*&lt;/code&gt; совпадение</target>
        </trans-unit>
        <trans-unit id="fb797c4ef105afbc7e6f092d57da0886c5342624" translate="yes" xml:space="preserve">
          <source>This one is not a name of encoding but a utility that lets you pick up the most appropriate encoding for a data out of given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce31346ef13bdd3b410f6693045b75e1d727f213" translate="yes" xml:space="preserve">
          <source>This one works differently from normal strings:</source>
          <target state="translated">Этот работает иначе,чем обычные струны:</target>
        </trans-unit>
        <trans-unit id="d8b038e9ce5b7ad8b326d48a0c12f7a1a65ddb76" translate="yes" xml:space="preserve">
          <source>This opens the UTF8-encoded file containing Unicode characters; see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;. Note that if layers are specified in the three-argument form, then default layers stored in &lt;a href=&quot;perlvar#%24%7B%5EOPEN%7D&quot;&gt;&lt;code&gt;${^OPEN}&lt;/code&gt;&lt;/a&gt; (usually set by the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma or the switch &lt;code&gt;-CioD&lt;/code&gt;) are ignored. Those layers will also be ignored if you specify a colon with no name following it. In that case the default layer for the operating system (:raw on Unix, :crlf on Windows) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dceabe6741f9e9be624acb0758d7a05df91f7b1" translate="yes" xml:space="preserve">
          <source>This operates as above, but the &lt;code&gt;Filter&lt;/code&gt; argument with a non-zero value causes the entire script, and not just literals, to be translated from the encoding into UTF-8. This allows identifiers in the source to be in that encoding as well. (Problems may occur if the encoding is not a superset of ASCII; imagine all your semi-colons being translated into something different.) One can use this form to make</source>
          <target state="translated">Это работает, как указано выше, но аргумент &lt;code&gt;Filter&lt;/code&gt; с ненулевым значением приводит к тому, что весь сценарий, а не только литералы, переводится из кодировки в UTF-8. Это позволяет идентификаторам в источнике также быть в этой кодировке. (Проблемы могут возникнуть, если кодировка не является надмножеством ASCII; представьте, что все ваши точки с запятой переводятся во что-то другое.) Эту форму можно использовать для создания</target>
        </trans-unit>
        <trans-unit id="bafbb273ef65724f67929789d4cf1821d369332e" translate="yes" xml:space="preserve">
          <source>This operator changes only the modification time of the file (VMS revision date) on ODS-2 volumes and ODS-5 volumes without access dates enabled. On ODS-5 volumes with access dates enabled, the true access time is modified.</source>
          <target state="translated">Оператор изменяет только время модификации файла (дата ревизии СУБД)на томах ОDS-2 и томах ОDS-5 без включения дат доступа.На томах ОDS-5 с включенной датой доступа изменяется истинное время доступа.</target>
        </trans-unit>
        <trans-unit id="ffba20ee3390ab6f7cdbeb9ab15cfb5e9016cca0" translate="yes" xml:space="preserve">
          <source>This operator is also handy for inverting a hash, although there are some caveats. If a value is duplicated in the original hash, only one of those can be represented as a key in the inverted hash. Also, this has to unwind one hash and build a whole new one, which may take some time on a large hash, such as from a DBM file.</source>
          <target state="translated">Этот оператор также удобен для инвертирования хэша,хотя есть некоторые предостережения.Если значение дублируется в исходном хэше,то только одно из них может быть представлено в виде ключа в перевернутом хэше.Кроме того,необходимо развернуть один хэш и построить новый,что может занять некоторое время на большом хэше,например,из DBM файла.</target>
        </trans-unit>
        <trans-unit id="0b8267c16c345a02931d07745eab202ccd1416fa" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;../file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">Этот оператор реализован с помощью стандартного расширения &lt;code&gt;File::Glob&lt;/code&gt; . См. &lt;a href=&quot;../file/glob&quot;&gt;File :: Glob&lt;/a&gt; для подробностей, включая &lt;code&gt;bsd_glob&lt;/code&gt; , который не обрабатывает пробелы как разделитель шаблонов.</target>
        </trans-unit>
        <trans-unit id="6603facafeb0ca27618f690e983e8f47ba2f8982" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;a href=&quot;File::Glob#bsd_glob&quot;&gt;&lt;code&gt;bsd_glob&lt;/code&gt;&lt;/a&gt;, which does not treat whitespace as a pattern separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157d8ec0928a934391402a13da061adc37466e6a" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">Этот оператор реализован с помощью стандартного расширения &lt;code&gt;File::Glob&lt;/code&gt; . См. &lt;a href=&quot;file/glob&quot;&gt;File :: Glob&lt;/a&gt; для подробностей, включая &lt;code&gt;bsd_glob&lt;/code&gt; , который не обрабатывает пробелы как разделитель шаблонов.</target>
        </trans-unit>
        <trans-unit id="6deb73d137130c497b09a54c077553c29fbcaf55" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;a href=&quot;File::Glob&quot;&gt;&lt;code&gt;File::Glob&lt;/code&gt;&lt;/a&gt; extension on most platforms. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18ef89c767fe3092cd7cbf7617a73212c9cedcd" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;code&gt;File::Glob&lt;/code&gt; extension on most platforms. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="translated">Этот оператор реализован через расширение &lt;code&gt;File::Glob&lt;/code&gt; на большинстве платформ. См. &lt;a href=&quot;file/glob&quot;&gt;File :: Glob&lt;/a&gt; для информации о переносимости.</target>
        </trans-unit>
        <trans-unit id="f61ddb296f9de510c527089fa0d0e6f18a12bcc4" translate="yes" xml:space="preserve">
          <source>This operator quotes (and possibly compiles) its</source>
          <target state="translated">Этот оператор цитирует (и,возможно,компилирует)свой</target>
        </trans-unit>
        <trans-unit id="54ff6006dac029e4037de4f8be15a2519fa996e2" translate="yes" xml:space="preserve">
          <source>This option allow the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bfef75bba78bb67546c7867c9c5ceacd8cc589" translate="yes" xml:space="preserve">
          <source>This option allow the filename field in the zip header to be modified before it is written to the zip file.</source>
          <target state="translated">Эта опция позволяет изменить поле имени файла в zip-заголовке перед его записью в zip-файл.</target>
        </trans-unit>
        <trans-unit id="31a1073c0be295447c4fa6a92df15986893583ac" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных для &lt;code&gt;anyinflate&lt;/code&gt; файла, которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="f9285c30af9b4fbbee720f406a006d97f4010015" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyuncompress&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных для &lt;code&gt;anyuncompress&lt;/code&gt; файла, которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="e84a1d77a7ad064325b540c87fc270941af6172d" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bunzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных в &lt;code&gt;bunzip2&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="991318af65c036237347589558cc5bbc7b747313" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных в &lt;code&gt;bzip2&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="e3937b065e9e10f42a614e20da537cf76f206b09" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;deflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных для &lt;code&gt;deflate&lt;/code&gt; которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="7597a37aa86998ead804f6646d406a8232322d5c" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gunzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных в &lt;code&gt;gunzip&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="3b1d88507893c4f30c1f99b3dd08ad9bcc7749d4" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных в &lt;code&gt;gzip&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="197d2e92c12a668b61b45cede98ce89082acf98a" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;inflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных, которые необходимо &lt;code&gt;inflate&lt;/code&gt; которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="11085e39e2558052d844319712c721f6cf03a406" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawdeflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных для &lt;code&gt;rawdeflate&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="5edfb063fb42d1f72af8e3277ad4716ba885c487" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных для &lt;code&gt;rawinflate&lt;/code&gt; , которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="8b0f73e1567ccae83577dd7200eae7bda2188288" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;unzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым &lt;code&gt;unzip&lt;/code&gt; потокам входных или выходных данных, которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="295f0cfd4ded98b9574af22ae3b9d33935ef4669" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;zip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">Этот параметр применяется к любым потокам входных или выходных данных в &lt;code&gt;zip&lt;/code&gt; - архиве, которые являются дескрипторами файлов.</target>
        </trans-unit>
        <trans-unit id="1b0f39997327947c35396eb3046f132a2237f087" translate="yes" xml:space="preserve">
          <source>This option assumes that the formatter (see above) understands the option &quot;utf8&quot;. It turns on generation of utf8 output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2812ec45ee9aa481cedeafcd91c6fd310ce87a63" translate="yes" xml:space="preserve">
          <source>This option can be used when there is useful information immediately following the compressed data stream, and you don't know the length of the compressed data stream.</source>
          <target state="translated">Эта опция может быть использована,когда есть полезная информация,следующая непосредственно за сжатым потоком данных,и вы не знаете длины сжатого потока данных.</target>
        </trans-unit>
        <trans-unit id="96e75df71c1bf6e90ec730c6cdd32614d5b40bf0" translate="yes" xml:space="preserve">
          <source>This option can be useful when the compressed data is embedded in another file/data structure and it is not possible to work out where the compressed data begins without having to read the first few bytes. If this is the case, the uncompression can be</source>
          <target state="translated">Эта опция может быть полезна,когда сжатые данные встроены в другую структуру файла/данных и невозможно определить,где начинаются сжатые данные без чтения первых нескольких байт.В этом случае распаковка может быть следующей</target>
        </trans-unit>
        <trans-unit id="ae71b12d470fda92f5396caeec200106ff4f6bc5" translate="yes" xml:space="preserve">
          <source>This option can be useful when you are processing compressed data that is embedded in another file/buffer. In this case the data that immediately follows the compressed stream will be left in the input buffer.</source>
          <target state="translated">Эта опция может быть полезна при обработке сжатых данных,которые встроены в другой файл/буфер.В этом случае данные,которые следуют непосредственно за сжатым потоком,будут оставлены во входном буфере.</target>
        </trans-unit>
        <trans-unit id="05c5aace4afdf3704689266ed36cfe4a30bb343e" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values as if the environment variable POSIXLY_CORRECT had been set.</source>
          <target state="translated">Эта опция приводит к тому,что все опции конфигурации сбрасываются к их значениям по умолчанию,как если бы была установлена переменная окружения POSIXLY_CORRECT.</target>
        </trans-unit>
        <trans-unit id="0bb7609607b04e591708c21193516c45ee13b415" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values.</source>
          <target state="translated">Эта опция приводит к сбросу всех параметров конфигурации к их значениям по умолчанию.</target>
        </trans-unit>
        <trans-unit id="96a82215c08e826a1eb80ae96999f098e98a4ee7" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods.</source>
          <target state="translated">Эта опция контролирует, как данные записываются в выходной буфер методами &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; и &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c90b7070ba70482f3b4e42afba1dbe1ff165436c" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method.</source>
          <target state="translated">Эта опция контролирует, как данные записываются в выходной буфер методом &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f091361d33604fb6b604c6198e130966342f9758" translate="yes" xml:space="preserve">
          <source>This option controls setting of the &quot;Language Encoding Flag&quot; (EFS) in the zip archive. When set, the filename and comment fields for the zip archive MUST be valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59041bc47f2bcbc25e18c7446422e8f7a244ca3a" translate="yes" xml:space="preserve">
          <source>This option controls the &quot;external file attributes&quot; field in the central header of the zip file. This is a 4 byte field.</source>
          <target state="translated">Эта опция управляет полем &quot;внешние атрибуты файла&quot; в центральном заголовке zip-файла.Это 4-байтовое поле.</target>
        </trans-unit>
        <trans-unit id="fe53ff997f22ee3b8e3b5b499037b30213ed7a2b" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method does with uncompressed data.</source>
          <target state="translated">Этот параметр контролирует, что метод &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; делает с несжатыми данными.</target>
        </trans-unit>
        <trans-unit id="6b761971204df65aacb52bae227edf353dc4466e" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;read&lt;/code&gt; method does with uncompressed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de120c739ea57e22d8c4d48b8a92202db6758c8d" translate="yes" xml:space="preserve">
          <source>This option controls whether the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd5bc077a448b0ac8688176c0355190f56eee1f" translate="yes" xml:space="preserve">
          <source>This option controls whether the extra checks defined below are used when carrying out the decompression. When Strict is on, the extra tests are carried out, when Strict is off they are not.</source>
          <target state="translated">Эта опция контролирует,используются ли дополнительные проверки,определенные ниже,при выполнении декомпрессии.При включенной опции Strict дополнительные проверки выполняются,при выключенной-нет.</target>
        </trans-unit>
        <trans-unit id="e8f91b605f96e49eba45a2533f216bb9aa5630d4" translate="yes" xml:space="preserve">
          <source>This option controls whether the filename field in the zip header is</source>
          <target state="translated">Эта опция контролирует,является ли поле имени файла в заголовке zip</target>
        </trans-unit>
        <trans-unit id="c9ccbe84ff4c87c8d1938d3fb3bc36c35924a163" translate="yes" xml:space="preserve">
          <source>This option controls whether the zip file/buffer output is created in streaming mode.</source>
          <target state="translated">Эта опция управляет тем,создается ли вывод zip-файла/буфера в потоковом режиме.</target>
        </trans-unit>
        <trans-unit id="25df283cc49b2b02eee383b551fc895c82bca588" translate="yes" xml:space="preserve">
          <source>This option defaults to 1.</source>
          <target state="translated">По умолчанию эта опция имеет значение 1.</target>
        </trans-unit>
        <trans-unit id="34b650f76678c6a01e22f15770dea69e53718082" translate="yes" xml:space="preserve">
          <source>This option defaults to 4096.</source>
          <target state="translated">По умолчанию эта опция имеет значение 4096.</target>
        </trans-unit>
        <trans-unit id="d5f2929171736f86edabd8e4e81e6b76f585f308" translate="yes" xml:space="preserve">
          <source>This option defaults to &lt;b&gt;false&lt;/b&gt;.</source>
          <target state="translated">По умолчанию этот параметр равен &lt;b&gt;false&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="0fe4b53be5e0e4b306e7b8817dee109e7d56e3b6" translate="yes" xml:space="preserve">
          <source>This option defaults to false.</source>
          <target state="translated">По умолчанию эта опция имеет значение false.</target>
        </trans-unit>
        <trans-unit id="3c17c5d6de4659d46fac1329201d45aebab6728c" translate="yes" xml:space="preserve">
          <source>This option defaults to off.</source>
          <target state="translated">По умолчанию эта опция выключена.</target>
        </trans-unit>
        <trans-unit id="5b6fb11ab3c3f09a5247ca571c81e532a6439637" translate="yes" xml:space="preserve">
          <source>This option defaults to true.</source>
          <target state="translated">По умолчанию эта опция верна.</target>
        </trans-unit>
        <trans-unit id="624b5280811765e3f408f9a93ba973e345e22b11" translate="yes" xml:space="preserve">
          <source>This option does not affect &lt;code&gt;decode&lt;/code&gt; in any way, and it is recommended to leave it off unless you know your communications partner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49b3dde1d982fff6659af9dbc370e4c81b2a251" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt; . These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="translated">Эта опция ожидает ссылку на массив с ровно тремя элементами: &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; и &lt;code&gt;$ctime&lt;/code&gt; . Они соответствуют времени последнего доступа, времени последней модификации и времени создания соответственно.</target>
        </trans-unit>
        <trans-unit id="c2b6d8d1bd2aae66f05f52544cf5abb5b8808045" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt;, &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt;. These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b61a9548815335c12044934c6edf6afc0fade2" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt; . These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="translated">Эта опция ожидает ссылку на массив ровно с двумя элементами: &lt;code&gt;$uid&lt;/code&gt; и &lt;code&gt;$gid&lt;/code&gt; . Эти значения соответствуют числовому идентификатору пользователя (UID) и идентификатору группы (GID) владельца файлов соответственно.</target>
        </trans-unit>
        <trans-unit id="d0b2b2035706e5f13fabb6689eb4b2eb10e5bd8d" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt;. These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e3123268242816c97985ddf2abce0d046136ba" translate="yes" xml:space="preserve">
          <source>This option is a no-op.</source>
          <target state="translated">Этот вариант-&quot;нет-нет-нет&quot;.</target>
        </trans-unit>
        <trans-unit id="1144456033d4b378e77675f24087a7a175d1be93" translate="yes" xml:space="preserve">
          <source>This option is case-insensitive.</source>
          <target state="translated">Этот вариант не чувствителен к регистру.</target>
        </trans-unit>
        <trans-unit id="2511f05b6374c7879cb361cf57c595c2e2f72590" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt; .</source>
          <target state="translated">Эта опция отмечена, когда вы записываете tar-файл с помощью &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;create_archive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af51699e95a4be95b5bd98b672ad39e412c5139b" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2a2a4f5928dc68068bb78c6282de092775a8e0" translate="yes" xml:space="preserve">
          <source>This option is enabled by default.</source>
          <target state="translated">Эта опция включена по умолчанию.</target>
        </trans-unit>
        <trans-unit id="4549d37c19966c81c9e8c6bc7457a6a5da6fd6d3" translate="yes" xml:space="preserve">
          <source>This option is mostly used when reading from a filehandle, in which case the file pointer will be left pointing to the first byte directly after the compressed data stream.</source>
          <target state="translated">Эта опция чаще всего используется при чтении из файлового дескриптора,в этом случае указатель файла будет оставлен,указывая на первый байт непосредственно после сжатого потока данных.</target>
        </trans-unit>
        <trans-unit id="da3c768aaf3f5e035f976487f87837b11b5b30c6" translate="yes" xml:space="preserve">
          <source>This option is no longer supported. It is still documented only to aid in the debugging of old programs that use it. Old programs should be converted to use the &lt;code&gt;HASH&lt;/code&gt; option instead.</source>
          <target state="translated">Этот вариант больше не поддерживается. Он по-прежнему документирован только для помощи в отладке старых программ, которые его используют. Старые программы следует преобразовать, чтобы вместо этого использовать параметр &lt;code&gt;HASH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fccd188df214a961ab3c96d3b8cb198aeb990733" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be read in binmode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b63a00edd9e5158832afdb166a9cf7c92fa6736" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be written in binmode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a6ba823380e81c3792a98e87160d5e375b14e6" translate="yes" xml:space="preserve">
          <source>This option is obscure and discouraged.</source>
          <target state="translated">Этот вариант неясен и обескураживает.</target>
        </trans-unit>
        <trans-unit id="42ae6c8b76763d5e46a026474b931ab7a98558cf" translate="yes" xml:space="preserve">
          <source>This option is only useful when you also enable &lt;code&gt;indent&lt;/code&gt; or &lt;code&gt;pretty&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86f3c4424a2a7c5541c3bc97e781d1a1d2bf31e" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_BZIP2. It is ignored otherwise.</source>
          <target state="translated">Эта опция действительна, только если &lt;code&gt;Method&lt;/code&gt; - ZIP_CM_BZIP2. В противном случае он игнорируется.</target>
        </trans-unit>
        <trans-unit id="e287076e946d3a88fdf8e217ada09ffe773941d3" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_LZMA. It is ignored otherwise.</source>
          <target state="translated">Эта опция действительна, только если &lt;code&gt;Method&lt;/code&gt; - ZIP_CM_LZMA. В противном случае он игнорируется.</target>
        </trans-unit>
        <trans-unit id="e47f433c8815bcca005cf8fc1f8f226523161029" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: AnyInflate.</target>
        </trans-unit>
        <trans-unit id="4c7afb5a8e42acbe0e34fc5f5b8fc4326a8529d5" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: AnyUncompress.</target>
        </trans-unit>
        <trans-unit id="4c90c6efe9d75228bc8980202147dbd8e5b1d098" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано и значение true, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: Bunzip2.</target>
        </trans-unit>
        <trans-unit id="1a0451d52242cab341bf29b753116dd306cc10b7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: Gunzip.</target>
        </trans-unit>
        <trans-unit id="c6cccd64b3f769d6fde655234d1c117fd17fbdc4" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано, и значение true, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: Inflate.</target>
        </trans-unit>
        <trans-unit id="a026bdcb25c56dbca754467a3829013c39db31ac" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано, и значение true, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: RawInflate.</target>
        </trans-unit>
        <trans-unit id="f4a3d8b2fb37fa80663bb31ac23a1f0cc61d52e6" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="translated">Этот параметр действителен, только если параметр &lt;code&gt;$input&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию файла после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Uncompress :: Unzip.</target>
        </trans-unit>
        <trans-unit id="7d5c3c251f79fe2eaa4fe4d7a23aa2a6bca07482" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d188554dc39b169a30f806b5e23d40f7a99eb7b" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4a9ffa852a02dca76d7971b32b9b03b1b0548e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5731a807a44b0efd83e01b27cd42579c0decc4f" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c914c62b296246924f7d16024e2d19fb089beb85" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f153a0b32df251638a7035a515776badf9702bbd" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93ba06c93cb1edfc319d39e770c284a6a951d1c" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47e1179435d09c1507a883d5e990db962771a45" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="translated">Этот параметр действителен только в том случае, если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию &lt;code&gt;$output&lt;/code&gt; после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97fb53611300748a1b7f47bb19f220d7d3bb2490" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">Этот параметр действителен только в том случае, если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла. Если указано и значение истинно, это приведет к закрытию &lt;code&gt;$output&lt;/code&gt; после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="258816e7ba3830736405fb29e1fd5aa78fa1b61a" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">Этот параметр действителен только в том случае, если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла. Если указано, и значение истинно, это приведет к закрытию &lt;code&gt;$output&lt;/code&gt; после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33f553ec8eed6ca2655d0af84e094c777ea4ac37" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">Этот параметр действителен только в том случае, если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла. Если указано, и значение истинно, это приведет к закрытию &lt;code&gt;$output&lt;/code&gt; после &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта IO :: Compress :: RawDeflate .</target>
        </trans-unit>
        <trans-unit id="29176bb9d55bdad6e9210947b4806edcc6d975b2" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">Этот параметр действителен только в том случае, если параметр &lt;code&gt;$output&lt;/code&gt; является дескриптором файла. Если указано, и значение true, это приведет к закрытию &lt;code&gt;$output&lt;/code&gt; после вызова метода &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; или уничтожения объекта &lt;code&gt;IO::Compress::Zip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd203a3578c6d44aadc174b3929c5c881fa57c87" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56da4e99c55becf3b53cd4d42c1b2e502f1ea8c7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc6b1d042bb75b4b7fcc3f65e4f36863f08ff6d" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22a83808dec6742b1149a03e8a657bbf97e963e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333c8c80db020065477b7b5bfd9c001421d17d16" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4776439da220ae2064b194f480e3edc29818500b" translate="yes" xml:space="preserve">
          <source>This option is probably not useful when converting multiple POD files at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4da7e81811658139a241d2fcf49caaf6fc6d794" translate="yes" xml:space="preserve">
          <source>This option is significantly slower than the other one.</source>
          <target state="translated">Этот вариант значительно медленнее,чем другой.</target>
        </trans-unit>
        <trans-unit id="43ce55b0c5bee0085af75b3bb5923ccf3a65b644" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt; . The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Эта опция используется для сжатия входных данных и добавления их к существующему потоку сжатых данных в &lt;code&gt;$output&lt;/code&gt; . Конечным результатом является единственный поток сжатых данных, хранящийся в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="089ecebdfe8e9a90db3b6de20d411724738cdf04" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt;. The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad95728c1dff8ec162453b97551677cbbf3088e0" translate="yes" xml:space="preserve">
          <source>This option is used to explicitly set the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f49f5c4b9fe97ea0c9160e42ef7f17004bd5369" translate="yes" xml:space="preserve">
          <source>This option is useful if you want the same data structure to be encoded as the same JSON text (given the same overall settings). If it is disabled, the same hash might be encoded differently even if contains the same data, as key-value pairs have no inherent ordering in Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2784a12c385481925ffdf8f295738fd39dfe4239" translate="yes" xml:space="preserve">
          <source>This option may be useful when you embed JSON in HTML, but embedding arbitrary JSON in HTML (by some HTML template toolkit or by string interpolation) is risky in general. You must escape necessary characters in correct order, depending on the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c905ba8910d975a79e749c35e513e95ca43f84ed" translate="yes" xml:space="preserve">
          <source>This option means that you want to limit the results just to items whose podnames match the given glob/wildcard expression. For example, you might limit your search to just &quot;LWP::*&quot;, to search only for modules starting with &quot;LWP::*&quot; (but not including the module &quot;LWP&quot; itself); or you might limit your search to &quot;LW*&quot; to see only modules whose (full) names begin with &quot;LW&quot;; or you might search for &quot;*Find*&quot; to search for all modules with &quot;Find&quot; somewhere in their full name. (You can also use &quot;?&quot; in a glob expression; so &quot;DB?&quot; will match &quot;DBI&quot; and &quot;DBD&quot;.)</source>
          <target state="translated">Эта опция означает,что вы хотите ограничить результаты только теми элементами,чьи имена совпадают с заданным выражением Glob/wildcard.Например,вы можете ограничить поиск только &quot;LWP::*&quot;,искать только модули,начинающиеся с &quot;LWP::*&quot;.(но не включая сам модуль &quot;LWP&quot;);или вы можете ограничить поиск &quot;LW*&quot;,чтобы видеть только те модули,чьи (полные)имена начинаются с &quot;LW&quot;;или вы можете искать &quot;*Find*&quot;,чтобы искать все модули с &quot;Find&quot; где-то в их полном названии.(Вы также можете использовать &quot;?&quot; в выражении глобуса;таким образом,&quot;DB?&quot; будет соответствовать &quot;DBI&quot; и &quot;DBD&quot;).</target>
        </trans-unit>
        <trans-unit id="20360642d3c9e99dc2a287f8242c272ca5705a34" translate="yes" xml:space="preserve">
          <source>This option says to instead output literal UTF-8 characters. If your *roff implementation can handle it, this is the best output format to use and avoids corruption of documents containing non-ASCII characters. However, be warned that *roff source with literal UTF-8 characters is not supported by many implementations and may even result in segfaults and other bad behavior.</source>
          <target state="translated">Эта опция говорит вместо этого выводить буквальные символы UTF-8.Если ваша *roff реализация может справиться с этим,то это лучший формат вывода для использования и позволяет избежать повреждения документов,содержащих не-ASCII символы.Однако,следует предупредить,что *roff источник с буквальными UTF-8 символами не поддерживается многими реализациями и может даже привести к сегментации и другому плохому поведению.</target>
        </trans-unit>
        <trans-unit id="198821065f8114e37c282b1dc5e2e1e562fb79c1" translate="yes" xml:space="preserve">
          <source>This option takes a parameter that must be a reference to a sub. On entry to the sub the &lt;code&gt;$_&lt;/code&gt; variable will contain the name to be filtered. If no filename is available &lt;code&gt;$_&lt;/code&gt; will contain an empty string.</source>
          <target state="translated">Эта опция принимает параметр, который должен быть ссылкой на подпрограмму. При входе в подпрограмму переменная &lt;code&gt;$_&lt;/code&gt; будет содержать имя для фильтрации. Если имя файла недоступно, &lt;code&gt;$_&lt;/code&gt; будет содержать пустую строку.</target>
        </trans-unit>
        <trans-unit id="3c97397612f397cc9803106ff617ed57fcd7bbdd" translate="yes" xml:space="preserve">
          <source>This option was introduced to let you easily customize which</source>
          <target state="translated">Эта опция была введена,чтобы позволить вам легко настраивать то,что</target>
        </trans-unit>
        <trans-unit id="478ef92f533a2a64ed38715adae3641923596540" translate="yes" xml:space="preserve">
          <source>This option will uncompress the contents of &lt;code&gt;$string&lt;/code&gt; before processing the input file/buffer.</source>
          <target state="translated">Эта опция распакует содержимое &lt;code&gt;$string&lt;/code&gt; перед обработкой входного файла / буфера.</target>
        </trans-unit>
        <trans-unit id="94e79c8cc707f4d220ebc5676b2e7c094b43e26e" translate="yes" xml:space="preserve">
          <source>This option, if set to a true value, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt; . This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="translated">Этот параметр, если установлен в истинное значение, подавляет URL-адрес при вводе текста привязки, поэтому этот пример будет отформатирован как просто &lt;code&gt;foo&lt;/code&gt; . Это может привести к менее загромождению вывода в тех случаях, когда URL-адреса не особенно важны.</target>
        </trans-unit>
        <trans-unit id="3c093990608ad560cd2156838664c1a41d4353f2" translate="yes" xml:space="preserve">
          <source>This option, if set to a true value, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt;. This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73e8a9fe84394bb733d349d80f809abc0c71549" translate="yes" xml:space="preserve">
          <source>This overload was introduced in Perl 5.12.</source>
          <target state="translated">Эта перегрузка была введена на Perl 5.12.</target>
        </trans-unit>
        <trans-unit id="80f1948b993b572ddd0ded00367d4480f0e1a9dd" translate="yes" xml:space="preserve">
          <source>This overrides all the default install locations. Man pages, libraries, scripts, etc... MakeMaker will try to make an educated guess about where to place things under the new PREFIX based on your Config defaults. Failing that, it will fall back to a structure which should be sensible for your platform.</source>
          <target state="translated">Это переопределяет все места установки по умолчанию.Страницы управления,библиотеки,скрипты и т.д...MakeMaker попытается сделать обоснованное предположение о том,где разместить вещи под новым PREFIX,основываясь на ваших настройках по умолчанию Config.В противном случае,он вернется к структуре,которая должна быть разумной для вашей платформы.</target>
        </trans-unit>
        <trans-unit id="444e5337bdc60ac371985ae433717f80c0fb2273" translate="yes" xml:space="preserve">
          <source>This overrides the default behavior of &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; inside the newly created thread only.</source>
          <target state="translated">Это отменяет поведение функции &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; по умолчанию только внутри вновь созданного потока.</target>
        </trans-unit>
        <trans-unit id="24a3ff23ecaa6a599f398f1b05a599f96ef89aff" translate="yes" xml:space="preserve">
          <source>This overrides the default behavior of &lt;code&gt;exit()&lt;/code&gt; inside the newly created thread only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54817ecdea72dd0f8dad14e4e986821245f79bb0" translate="yes" xml:space="preserve">
          <source>This package &lt;code&gt;ISA&lt;/code&gt; IO::File, so that you can call IO::File methods on the handles returned by &lt;code&gt;vmsopen&lt;/code&gt; and &lt;code&gt;vmssysopen&lt;/code&gt;. The IO::File package is not initialized, however, until you actually call a method that VMS::Stdio doesn't provide. This is done to save startup time for users who don't wish to use the IO::File methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519b8612e911f1f56d7cf335d416b8b3e0b034ae" translate="yes" xml:space="preserve">
          <source>This package allows a tied hash to autoload its values on the first access, and to use the cached value on the following accesses.</source>
          <target state="translated">Данный пакет позволяет привязанному хэшу автозагружать свои значения при первом обращении,а также использовать кэшированное значение при следующих обращениях.</target>
        </trans-unit>
        <trans-unit id="0dd12631c6783b870d8636d280593396cecef2aa" translate="yes" xml:space="preserve">
          <source>This package assumes your instances are blessed hashrefs, it will not work if that is not true. It will store all meta-data in the &lt;code&gt;_meta&lt;/code&gt; key on your objects hash. If your object makes use of the &lt;code&gt;_meta&lt;/code&gt; key in its underlying hash, then there is a conflict and you cannot use this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ef3cf0031676169d1650659bd8ca01863df483" translate="yes" xml:space="preserve">
          <source>This package exports all the functions necessary to write and/or verify testing tools. Using these building blocks you can begin writing test tools very quickly. You are also provided with tools that help you to test the tools you write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fee1df4d3c220048420e934bfa1571230d5dc6" translate="yes" xml:space="preserve">
          <source>This package gives Perl scripts access via VMS extensions to several C stdio operations not available through Perl's CORE I/O functions. The specific routines are described below. These functions are prototyped as unary operators, with the exception of &lt;code&gt;vmsopen&lt;/code&gt; and &lt;code&gt;vmssysopen&lt;/code&gt;, which can take any number of arguments, and &lt;code&gt;tmpnam&lt;/code&gt;, which takes none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117523179eb4686be1091dc68328b55978f9a6f5" translate="yes" xml:space="preserve">
          <source>This package has an END block. This END block is responsible for setting the exit code based on the test results. This end block also calls the callbacks that can be added to this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52216942838934faafa12f993b9e33de2dc6a37f" translate="yes" xml:space="preserve">
          <source>This package has been part of the perl core since perl 5.001. It has been released separately to CPAN so older installations can benefit from bug fixes.</source>
          <target state="translated">Этот пакет является частью perl ядра с 5.001.Он был выпущен отдельно в CPAN,чтобы более старые установки могли воспользоваться исправлениями ошибок.</target>
        </trans-unit>
        <trans-unit id="a2c6b0ed0d74189431901579ee94937bb8d4ce64" translate="yes" xml:space="preserve">
          <source>This package has been part of the perl core since the first release of perl5. It has been released separately to CPAN so older installations can benefit from bug fixes.</source>
          <target state="translated">Этот пакет входит в состав perl-ядра с первого выпуска perl5.Он был выпущен отдельно в CPAN,чтобы более старые установки могли воспользоваться исправлениями ошибок.</target>
        </trans-unit>
        <trans-unit id="8604a04f6b263dfa751e272224470b230a03d1e8" translate="yes" xml:space="preserve">
          <source>This package has the same copyright and license as the perl core.</source>
          <target state="translated">Этот пакет имеет те же авторские права и лицензию,что и perl core.</target>
        </trans-unit>
        <trans-unit id="5b6805fe29e54bd4efe3c6b5cfa333a68b6dd7e7" translate="yes" xml:space="preserve">
          <source>This package has the same copyright and license as the perl core:</source>
          <target state="translated">Этот пакет имеет те же авторские права и лицензию,что и perl core:</target>
        </trans-unit>
        <trans-unit id="3dd0926d44817739b9d6d9f6b9c878553eedc873" translate="yes" xml:space="preserve">
          <source>This package has the same functionality as CPAN.pm, but tries to prevent the usage of compiled extensions during its own execution. Its primary purpose is a rescue in case you upgraded perl and broke binary compatibility somehow.</source>
          <target state="translated">Этот пакет обладает той же функциональностью,что и CPAN.pm,но пытается предотвратить использование скомпилированных расширений во время собственного исполнения.Его основной целью является спасение в случае,если вы обновили perl и каким-то образом нарушили бинарную совместимость.</target>
        </trans-unit>
        <trans-unit id="5ec260b88b13584e3875f1a95d421c8de3085165" translate="yes" xml:space="preserve">
          <source>This package is free software and is provided &quot;as is&quot; without express or implied warranty. It may be used, redistributed and/or modified under the same terms as Perl itself.</source>
          <target state="translated">Этот пакет является свободным программным обеспечением и предоставляется &quot;как есть&quot; без явной или подразумеваемой гарантии.Он может использоваться,распространяться и/или модифицироваться на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="8d169e6cde7a05a46328dee15bc92ea9fbd31c5a" translate="yes" xml:space="preserve">
          <source>This package is just a front end to some other packages. It's a stub to set up a common interface to the various ReadLine implementations found on CPAN (under the &lt;code&gt;Term::ReadLine::*&lt;/code&gt; namespace).</source>
          <target state="translated">Этот пакет является лишь интерфейсом для некоторых других пакетов. Это заглушка для настройки общего интерфейса для различных реализаций ReadLine, найденных на CPAN (в пространстве имен &lt;code&gt;Term::ReadLine::*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b1ade6c9a8f018d0fad6780df5d177f32fbb0e0d" translate="yes" xml:space="preserve">
          <source>This package is meant as a base of Pod::Perldoc formatters, like &lt;a href=&quot;Pod::Perldoc::ToText&quot;&gt;Pod::Perldoc::ToText&lt;/a&gt;, &lt;a href=&quot;Pod::Perldoc::ToMan&quot;&gt;Pod::Perldoc::ToMan&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce76c6c4371370495517baf3705b461101fff8c7" translate="yes" xml:space="preserve">
          <source>This package is meant as a base of Pod::Perldoc formatters, like &lt;a href=&quot;totext&quot;&gt;Pod::Perldoc::ToText&lt;/a&gt;, &lt;a href=&quot;toman&quot;&gt;Pod::Perldoc::ToMan&lt;/a&gt;, etc.</source>
          <target state="translated">Этот пакет предназначен в качестве основы для форматеров Pod :: Perldoc, таких как &lt;a href=&quot;totext&quot;&gt;Pod :: Perldoc :: ToText&lt;/a&gt; , &lt;a href=&quot;toman&quot;&gt;Pod :: Perldoc :: ToMan&lt;/a&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="9180a230452e68871f0598e03ac17371f08687f4" translate="yes" xml:space="preserve">
          <source>This package is still a work in progress. ;-)</source>
          <target state="translated">Работа над этим пакетом еще не закончена.;-)</target>
        </trans-unit>
        <trans-unit id="e14216db6d6f543013d22d6e863cfe0d56fedf31" translate="yes" xml:space="preserve">
          <source>This package is used to generate classes based on hashrefs. Using this class will give you a &lt;code&gt;new()&lt;/code&gt; method, as well as generating accessors you request. Generated accessors will be getters, &lt;code&gt;set_ACCESSOR&lt;/code&gt; setters will also be generated for you. You also get constants for each accessor (all caps) which return the key into the hash for that accessor. Single inheritance is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5132ab88c97f356a0cb81785c11fd445555c2f78" translate="yes" xml:space="preserve">
          <source>This package lets you create and manipulate complex numbers. By default,</source>
          <target state="translated">Данный пакет позволяет создавать и манипулировать комплексными числами.По умолчанию,</target>
        </trans-unit>
        <trans-unit id="a170bd1eff2041ac0d0ac79f2c0ec18d1fc8c0b5" translate="yes" xml:space="preserve">
          <source>This package lets you define a clear, and consistent way to allow third party tools to attach meta-data to your instances. If your object consumes this package, and imports its methods, then third party meta-data has a safe place to live.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027490dcb5b2efb5529d5116c08443a95ca1c4a" translate="yes" xml:space="preserve">
          <source>This package provides routines to simplify conversion between VMS and Unix syntax when processing file specifications. This is useful when porting scripts designed to run under either OS, and also allows you to take advantage of conveniences provided by either syntax (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a96a3b10a148099f0b7f72edfecfa081ed012b" translate="yes" xml:space="preserve">
          <source>This package represents what is expected in units of amnesty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733cf8ccc54fc2caec2b129c7f9c3b8fe256f776" translate="yes" xml:space="preserve">
          <source>This package supplies the following functions, all of which should be called as methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfaecafb317f7a283c4d709b1fe33fabf00ba94" translate="yes" xml:space="preserve">
          <source>This package variable is used by code which needs to generate random numbers (such as the &lt;a href=&quot;#shuffle&quot;&gt;&quot;shuffle&quot;&lt;/a&gt; and &lt;a href=&quot;#sample&quot;&gt;&quot;sample&quot;&lt;/a&gt; functions). If set to a CODE reference it provides an alternative to perl's builtin &lt;code&gt;rand()&lt;/code&gt; function. When a new random number is needed this function will be invoked with no arguments and is expected to return a floating-point value, of which only the fractional part will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0502ae210c839a0d5612b4c49c9ee0a00914b58d" translate="yes" xml:space="preserve">
          <source>This packs &lt;code&gt;3*@buffer&lt;/code&gt; bytes, but it turns out that the size of &lt;code&gt;buffer_t&lt;/code&gt; is four times &lt;code&gt;BUFLEN&lt;/code&gt; ! The moral of the story is that the required alignment of a structure or array is propagated to the next higher level where we have to consider padding</source>
          <target state="translated">Это упаковывает &lt;code&gt;3*@buffer&lt;/code&gt; байта, но оказывается, что размер &lt;code&gt;buffer_t&lt;/code&gt; в четыре раза больше &lt;code&gt;BUFLEN&lt;/code&gt; ! Мораль этой истории заключается в том, что требуемое выравнивание структуры или массива распространяется на следующий более высокий уровень, где мы должны учитывать заполнение</target>
        </trans-unit>
        <trans-unit id="e53c590bd241b677c54acd7fcca9e80edc4d08e4" translate="yes" xml:space="preserve">
          <source>This packs &lt;code&gt;3*@buffer&lt;/code&gt; bytes, but it turns out that the size of &lt;code&gt;buffer_t&lt;/code&gt; is four times &lt;code&gt;BUFLEN&lt;/code&gt;! The moral of the story is that the required alignment of a structure or array is propagated to the next higher level where we have to consider padding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a4741dfc9d84d06564831e13aad41055715be9" translate="yes" xml:space="preserve">
          <source>This page assumes you already know things, like what a &quot;pattern&quot; is, and the basic syntax of using them. If you don't, see &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946e326f892b4b8b1ddce244173724cf9a7d1bb8" translate="yes" xml:space="preserve">
          <source>This page covers the very basics of understanding, creating and using regular expressions ('regexes') in Perl.</source>
          <target state="translated">На этой странице рассказывается об основах понимания,создания и использования регулярных выражений ('regexes')на Perl.</target>
        </trans-unit>
        <trans-unit id="dce9886ab9b0a9a0def511caa51f7fe80e84aea2" translate="yes" xml:space="preserve">
          <source>This page describes the syntax of regular expressions in Perl.</source>
          <target state="translated">На этой странице описан синтаксис регулярных выражений на Perl.</target>
        </trans-unit>
        <trans-unit id="317e90a756283c2e548a97a6d078f31d1baf3825" translate="yes" xml:space="preserve">
          <source>This page provides a basic tutorial on understanding, creating and using regular expressions in Perl. It serves as a complement to the reference page on regular expressions &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;. Regular expressions are an integral part of the &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operators and so this tutorial also overlaps with &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt; and &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">Эта страница предоставляет базовое руководство по пониманию, созданию и использованию регулярных выражений в Perl. Он служит дополнением к справочной странице по регулярным выражениям &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; . Регулярные выражения являются неотъемлемой частью операторов &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , поэтому это руководство также перекрывается с &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;операторами Regexp Quote-Like в perlop&lt;/a&gt; и &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d5a131e3270619460abdb9845cd688fb5a50600" translate="yes" xml:space="preserve">
          <source>This page provides a basic tutorial on understanding, creating and using regular expressions in Perl. It serves as a complement to the reference page on regular expressions &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;. Regular expressions are an integral part of the &lt;code&gt;m//&lt;/code&gt;, &lt;code&gt;s///&lt;/code&gt;, &lt;code&gt;qr//&lt;/code&gt; and &lt;code&gt;split&lt;/code&gt; operators and so this tutorial also overlaps with &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt; and &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd11d6815b6bbd5757b2908c5f7f36d9fc65ef7" translate="yes" xml:space="preserve">
          <source>This parameter allows additional metadata to be stored in the ExtraField in the gzip header. An RFC 1952 compliant ExtraField consists of zero or more subfields. Each subfield consists of a two byte header followed by the subfield data.</source>
          <target state="translated">Этот параметр позволяет хранить дополнительные метаданные в поле ExtraField в заголовке gzip.Соответствующий RFC 1952 ExtraField состоит из нулевого или более подполей.Каждое подполе состоит из двух байтового заголовка,за которым следуют данные подполя.</target>
        </trans-unit>
        <trans-unit id="6c5f89c77abee951f08c51fc642a03fa6b870eac" translate="yes" xml:space="preserve">
          <source>This parameter controls the setting of a bit in the zip central header. It is used to signal that the data stored in the zip file/buffer is probably text.</source>
          <target state="translated">Этот параметр управляет настройкой бита в центральном заголовке zip.Он используется для сигнала о том,что данные,хранящиеся в zip-файле/буфере,вероятно,являются текстовыми.</target>
        </trans-unit>
        <trans-unit id="f7ab5c8a3bc9a88a9534a62193fcda4a2a345ca3" translate="yes" xml:space="preserve">
          <source>This parameter controls the setting of the FLG.FTEXT bit in the gzip header. It is used to signal that the data stored in the gzip file/buffer is probably text.</source>
          <target state="translated">Этот параметр управляет настройкой FLG.FTEXT бита в заголовке gzip.Он используется для сигнала о том,что данные,хранящиеся в gzip-файле/буфере,вероятно,являются текстовыми.</target>
        </trans-unit>
        <trans-unit id="1d135fdd7e0c9609625dc055c076f0bab706088f" translate="yes" xml:space="preserve">
          <source>This parameter defaults to 0.</source>
          <target state="translated">По умолчанию этот параметр равен 0.</target>
        </trans-unit>
        <trans-unit id="a954f8a244020c9f424e9822cfad5459a2f5fec4" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.</source>
          <target state="translated">Этот параметр игнорируется.</target>
        </trans-unit>
        <trans-unit id="3095070e85d1a1b0788b86dc1c47569b11d0ecb4" translate="yes" xml:space="preserve">
          <source>This parameter is used to specify the ambient pragmas which are stored in the special hash %^H.</source>
          <target state="translated">Этот параметр используется для задания управляющих правил окружающей среды,которые хранятся в специальном хэше %^H.</target>
        </trans-unit>
        <trans-unit id="aaafa45d95b04bd8c01708fb5fdd297ddbefc3b4" translate="yes" xml:space="preserve">
          <source>This parameter takes precedence over the &lt;code&gt;Local*&lt;/code&gt;, &lt;code&gt;Family&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Proto&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144cb2f166d202c7f6fa31b74b5f72c47f93cb09" translate="yes" xml:space="preserve">
          <source>This parameter takes precedence over the &lt;code&gt;Peer*&lt;/code&gt;, &lt;code&gt;Family&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Proto&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57f8e4024e58b80873e8cbfaa23d47d4d596bfc" translate="yes" xml:space="preserve">
          <source>This parameter works like &lt;code&gt;overrideCJK&lt;/code&gt; , so see there for examples.</source>
          <target state="translated">Этот параметр работает как &lt;code&gt;overrideCJK&lt;/code&gt; , поэтому см. Примеры.</target>
        </trans-unit>
        <trans-unit id="51565d89891bf2948d91c1cc64dabcc98c8f8a0a" translate="yes" xml:space="preserve">
          <source>This parameter works like &lt;code&gt;overrideCJK&lt;/code&gt;, so see there for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9494fe5df3170e77a2748f1c2b29eb01128b21" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and always fails. It can be used to force the engine to backtrack. It is equivalent to &lt;code&gt;(?!)&lt;/code&gt;, but easier to read. In fact, &lt;code&gt;(?!)&lt;/code&gt; gets optimised into &lt;code&gt;(*FAIL)&lt;/code&gt; internally.</source>
          <target state="translated">Этот шаблон ничего не соответствует и всегда терпит неудачу. Его можно использовать, чтобы заставить двигатель вернуться назад. Это эквивалент &lt;code&gt;(?!)&lt;/code&gt; , Но его легче читать. Фактически, &lt;code&gt;(?!)&lt;/code&gt; &lt;code&gt;(*FAIL)&lt;/code&gt; Внутренне оптимизируется до (* FAIL) .</target>
        </trans-unit>
        <trans-unit id="6fc6c7ad71aa7736bfa3c0da48319c974555eb05" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and always fails. It can be used to force the engine to backtrack. It is equivalent to &lt;code&gt;(?!)&lt;/code&gt;, but easier to read. In fact, &lt;code&gt;(?!)&lt;/code&gt; gets optimised into &lt;code&gt;(*FAIL)&lt;/code&gt; internally. You can provide an argument so that if the match fails because of this &lt;code&gt;FAIL&lt;/code&gt; directive the argument can be obtained from &lt;code&gt;$REGERROR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7331a8c75f2ab7015003fc1a186b402d4f4b0f" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and causes the end of successful matching at the point at which the &lt;code&gt;(*ACCEPT)&lt;/code&gt; pattern was encountered, regardless of whether there is actually more to match in the string. When inside of a nested pattern, such as recursion, or in a subpattern dynamically generated via &lt;code&gt;(??{})&lt;/code&gt; , only the innermost pattern is ended immediately.</source>
          <target state="translated">Этот шаблон ничего не соответствует и приводит к завершению успешного сопоставления в точке, в которой был обнаружен шаблон &lt;code&gt;(*ACCEPT)&lt;/code&gt; , независимо от того, есть ли на самом деле другие сопоставления в строке. Находясь внутри вложенного шаблона, такого как рекурсия, или во вложенном шаблоне, динамически генерируемом с помощью &lt;code&gt;(??{})&lt;/code&gt; , только самый внутренний шаблон немедленно завершается.</target>
        </trans-unit>
        <trans-unit id="67ca6793aa1baf492f23da59c43d48ed60e5c55a" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and causes the end of successful matching at the point at which the &lt;code&gt;(*ACCEPT)&lt;/code&gt; pattern was encountered, regardless of whether there is actually more to match in the string. When inside of a nested pattern, such as recursion, or in a subpattern dynamically generated via &lt;code&gt;(??{})&lt;/code&gt;, only the innermost pattern is ended immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f045887dd160fbc7bf52fef1325dee9e3b92d8" translate="yes" xml:space="preserve">
          <source>This perl distribution comes with a tremendous amount of documentation. To add these to the built-in manuals that come with Plan 9, from /sys/src/cmd/perl/5.00301 (adjust version appropriately) run:</source>
          <target state="translated">Этот perl-дистрибутив поставляется с огромным количеством документации.Чтобы добавить их во встроенные руководства,поставляемые вместе с Plan 9,из /sys/src/cmd/perl/5.00301 (отрегулируйте версию соответствующим образом)запустите:</target>
        </trans-unit>
        <trans-unit id="faaee2dbff571e442cc459d64235bf7e75251410" translate="yes" xml:space="preserve">
          <source>This phase is not called &quot;BEGIN&quot; to avoid confusion with &lt;code&gt;BEGIN&lt;/code&gt; -blocks, as those are executed during compile-time of any compilation unit, not just the top-level program. A new, localised compile-time entered at run-time, for example by constructs as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;use SomeModule&quot;&lt;/code&gt; are not global interpreter phases, and therefore aren't reflected by &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; .</source>
          <target state="translated">Эта фаза не называется &amp;laquo;BEGIN&amp;raquo;, чтобы избежать путаницы с &lt;code&gt;BEGIN&lt;/code&gt; -блоками, так как они выполняются во время компиляции любой единицы компиляции, а не только программы верхнего уровня. Новое локализованное время компиляции, введенное во время выполнения, например, с помощью таких конструкций, как &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;use SomeModule&quot;&lt;/code&gt; , не является фазами глобального интерпретатора и поэтому не отражается в &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c6076111df5ac2088f7c60ba538962c1ba1518f" translate="yes" xml:space="preserve">
          <source>This phase is not called &quot;BEGIN&quot; to avoid confusion with &lt;code&gt;BEGIN&lt;/code&gt;-blocks, as those are executed during compile-time of any compilation unit, not just the top-level program. A new, localised compile-time entered at run-time, for example by constructs as &lt;code&gt;eval &quot;use SomeModule&quot;&lt;/code&gt; are not global interpreter phases, and therefore aren't reflected by &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d412691b698918f3fb521b6c5dd0a3a033324a" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo&quot; to the &quot;less&quot; pager and prints &quot;bar&quot; on the console:</source>
          <target state="translated">Эта трубка &quot;foo&quot; на &quot;less&quot; пейджер и печатает &quot;bar&quot; на консоли:</target>
        </trans-unit>
        <trans-unit id="aa4d6fbd955f7e5cef0d107f07af92fd7a485df2" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo&quot; to the pager and writes &quot;bar&quot; in the file &quot;blurch&quot;:</source>
          <target state="translated">Эта трубка &quot;foo&quot; на пейджер и записывает &quot;bar&quot; в файл &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="f5e952eb46ee9ecbd24ef00bffe49334d2cc3dad" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo\nbar\n&quot; to the less pager:</source>
          <target state="translated">Эта трубка &quot;foo\nbar\n&quot; на меньший пейджер:</target>
        </trans-unit>
        <trans-unit id="9ef24b3495020011602b2e6eab8942a1d3d9b7c9" translate="yes" xml:space="preserve">
          <source>This port can also be built on IA64/AMD64 using:</source>
          <target state="translated">Этот порт также может быть построен на IA64/AMD64 с использованием:</target>
        </trans-unit>
        <trans-unit id="ca794b2a97ff2f3e9f3ab8b1358dfca57eef50e2" translate="yes" xml:space="preserve">
          <source>This port currently supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites.</source>
          <target state="translated">Этот порт в настоящее время поддерживает MakeMaker (набор модулей,который используется для сборки расширений на perl).Поэтому,вы должны быть в состоянии собрать и установить большинство расширений,найденных на сайтах CPAN.</target>
        </trans-unit>
        <trans-unit id="793aa06cc8a67a48ad4353d4f7baf40b5e8a8732" translate="yes" xml:space="preserve">
          <source>This port fully supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites. See &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;&quot;Usage Hints for Perl on Windows&quot;&lt;/a&gt; below for general hints about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d54e517da55f89f98bd5f4b007e4f6e30203a" translate="yes" xml:space="preserve">
          <source>This port fully supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites. See &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;Usage Hints for Perl on Windows&lt;/a&gt; below for general hints about this.</source>
          <target state="translated">Этот порт полностью поддерживает MakeMaker (набор модулей, который используется для создания расширений для Perl). Таким образом, у вас должна быть возможность создавать и устанавливать большинство расширений, имеющихся на сайтах CPAN. Общие советы по этому поводу см. В разделе &amp;laquo; &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;Подсказки по использованию Perl в Windows&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="eca5da1d69d15505d5dfe7b2200728b9e2a69857" translate="yes" xml:space="preserve">
          <source>This port of Perl also uses Unix-epoch date values internally. As long as you are dealing with ASCII character string representations of dates, this should not be an issue. The supported epoch is January 1, 1980 to January 17, 2038.</source>
          <target state="translated">Этот порт Perl также использует значения даты Unix-epoch внутри.До тех пор,пока вы имеете дело со строковыми представлениями дат в ASCII символах,это не должно быть проблемой.Поддерживаемая эпоха-с 1 января 1980 года по 17 января 2038 года.</target>
        </trans-unit>
        <trans-unit id="3b59478e1d9adc5bbc9ae74efe6d7c2a8e595477" translate="yes" xml:space="preserve">
          <source>This port of Perl version 5 prefers Unix-style, slash-separated pathnames over OpenVOS-style greater-than-separated pathnames. OpenVOS-style pathnames should work in most contexts, but if you have trouble, replace all greater-than characters by slash characters. Because the slash character is used as a pathname delimiter, Perl cannot process OpenVOS pathnames containing a slash character in a directory or file name; these must be renamed.</source>
          <target state="translated">Этот порт на Perl версии 5 предпочитает Unix-стиль,разделенные на слэш-патни,а не OpenVOS-стиль более крупные,чем разделенные на слэш-патни.Путаницы в стиле OpenVOS должны работать в большинстве контекстов,но если у вас возникли проблемы,замените все символы больше,чем разделены косая черта на символы косая черта.Поскольку символ косой черты используется в качестве разделителя имен,Perl не может обрабатывать имена файлов OpenVOS,содержащие символ косой черты в имени каталога или файла;они должны быть переименованы.</target>
        </trans-unit>
        <trans-unit id="5661c31774bac29706eeedad5ca0b82e3ef23fed" translate="yes" xml:space="preserve">
          <source>This port was originally contributed by Gary Ng around 5.003_24, and borrowed from the Hip Communications port that was available at the time. Various people have made numerous and sundry hacks since then.</source>
          <target state="translated">Первоначально этот порт был предоставлен Гари Нгом около 5.003_24 и заимствован из порта Hip Communications,который был доступен в то время.С тех пор различные люди совершили многочисленные и разнообразные взломы.</target>
        </trans-unit>
        <trans-unit id="791faea88ef9fd32067c73f960fb805edbc087f6" translate="yes" xml:space="preserve">
          <source>This port will support dynamic loading, but it is not selected by default. If you would like to experiment with dynamic loading then be sure to specify -Dusedl in the arguments to the Configure script. See the comments in hints/os390.sh for more information on dynamic loading. If you build with dynamic loading then you will need to add the $archlibexp/CORE directory to your LIBPATH environment variable in order for perl to work. See the config.sh file for the value of $archlibexp. If in trying to use Perl you see an error message similar to:</source>
          <target state="translated">Этот порт будет поддерживать динамическую загрузку,но по умолчанию он не выбран.Если вы хотите поэкспериментировать с динамической загрузкой,то обязательно укажите -Dusedl в аргументах к скрипту Configure.Дополнительную информацию о динамической загрузке смотрите в комментариях в hints/os390.sh.Если вы собираете с динамической загрузкой,то вам нужно добавить каталог $archlibexp/CORE в переменную окружения LIBPATH,чтобы perl работал.Значение $archlibexp см.в файле config.sh.Если при попытке использования Perl вы увидите сообщение об ошибке,похожее на:</target>
        </trans-unit>
        <trans-unit id="9ea06585be873f55abde4de83dd620970030f924" translate="yes" xml:space="preserve">
          <source>This pragma allows overloading of Perl's operators for a class. To overload built-in functions, see &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;&quot;Overriding Built-in Functions&quot; in perlsub&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e0b9c8e30e0b67210d260345f05889e99ff243" translate="yes" xml:space="preserve">
          <source>This pragma allows overloading of Perl's operators for a class. To overload built-in functions, see &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Overriding Built-in Functions in perlsub&lt;/a&gt; instead.</source>
          <target state="translated">Эта прагма позволяет перегрузить операторы Perl для класса. Чтобы перегрузить встроенные функции, см. &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Вместо&lt;/a&gt; этого раздел &amp;laquo;Переопределение встроенных функций в perlsub&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="ca794d61d2dfe5a76e1bb77807f394d0b2d09964" translate="yes" xml:space="preserve">
          <source>This pragma allows you to declare constants at compile-time.</source>
          <target state="translated">Эта прагма позволяет объявлять константы во время компиляции.</target>
        </trans-unit>
        <trans-unit id="2c01b8b1ad50eec7e989d0f266d4a4fc89f5d88b" translate="yes" xml:space="preserve">
          <source>This pragma allows you to lexically disable or enable overloading.</source>
          <target state="translated">Эта прагма позволяет лексически отключить или включить перегрузку.</target>
        </trans-unit>
        <trans-unit id="c428d7745a523c21e13cd202bfe44587bda59ff5" translate="yes" xml:space="preserve">
          <source>This pragma also affects encoding of the 0x80..0xFF code point range: normally characters in that range are left as eight-bit bytes (unless they are combined with characters with code points 0x100 or larger, in which case all characters need to become UTF-8 encoded), but if the &lt;code&gt;encoding&lt;/code&gt; pragma is present, even the 0x80..0xFF range always gets UTF-8 encoded.</source>
          <target state="translated">Эта прагма также влияет на кодирование диапазона кодовых точек 0x80..0xFF: обычно символы в этом диапазоне остаются восьмибитными байтами (если они не объединены с символами с кодовыми точками 0x100 или больше, и в этом случае все символы должны стать UTF -8), но если прагма &lt;code&gt;encoding&lt;/code&gt; присутствует, даже диапазон 0x80..0xFF всегда будет закодирован в UTF-8.</target>
        </trans-unit>
        <trans-unit id="d924aa9de8af230a322065eb09c25f0d879f8eac" translate="yes" xml:space="preserve">
          <source>This pragma arranges for all inputs from files to be translated into Unicode from the current locale as specified in the environment (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt;), and all outputs to files to be translated back into the locale. (See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;). On a per-filehandle basis, you can instead use the &lt;a href=&quot;PerlIO::locale&quot;&gt;PerlIO::locale&lt;/a&gt; module, or the &lt;a href=&quot;Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt; module, both available from CPAN. The latter module also has methods to ease the handling of &lt;code&gt;ARGV&lt;/code&gt; and environment variables, and can be used on individual strings. If you know that all your locales will be UTF-8, as many are these days, you can use the &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;&lt;b&gt;-C&lt;/b&gt;&lt;/a&gt; command line switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd54481ef89d3dcd2f0d998cbd0de47400ae94c4" translate="yes" xml:space="preserve">
          <source>This pragma arranges for all inputs from files to be translated into Unicode from the current locale as specified in the environment (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt;), and all outputs to files to be translated back into the locale. (See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;). On a per-filehandle basis, you can instead use the &lt;a href=&quot;http://search.cpan.org/perldoc/PerlIO::locale&quot;&gt;PerlIO::locale&lt;/a&gt; module, or the &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt; module, both available from CPAN. The latter module also has methods to ease the handling of &lt;code&gt;ARGV&lt;/code&gt; and environment variables, and can be used on individual strings. If you know that all your locales will be UTF-8, as many are these days, you can use the &lt;a href=&quot;perlrun#-C&quot;&gt;-C&lt;/a&gt; command line switch.</source>
          <target state="translated">Эта прагма организует перевод всех входных данных из файлов в Unicode из текущего языкового стандарта, как указано в среде (см. &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ОКРУЖЕНИЕ&lt;/a&gt; ), а все выходные данные в файлы переводятся обратно в языковой стандарт. (Смотрите &lt;a href=&quot;open&quot;&gt;открытые&lt;/a&gt; ). Вместо этого для каждого дескриптора файла вы можете использовать модуль &lt;a href=&quot;http://search.cpan.org/perldoc/PerlIO::locale&quot;&gt;PerlIO :: locale&lt;/a&gt; или модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode :: Locale&lt;/a&gt; , оба из которых доступны в CPAN. Последний модуль также имеет методы, упрощающие обработку переменных &lt;code&gt;ARGV&lt;/code&gt; и среды, и может использоваться для отдельных строк. Если вы знаете, что все ваши языковые стандарты будут в кодировке UTF-8, как в наши дни, вы можете использовать переключатель командной строки &lt;a href=&quot;perlrun#-C&quot;&gt;-C&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37ed3079bf4bc6e6eae888371e167c272116e8dd" translate="yes" xml:space="preserve">
          <source>This pragma dates from the days when UTF-8-enabled editors were uncommon. But that was long ago, and the need for it is greatly diminished. That, coupled with the fact that it doesn't work with threads, along with other problems, (see &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;) have led to its being deprecated. It is planned to remove this pragma in a future Perl version. New code should be written in UTF-8, and the &lt;code&gt;use utf8&lt;/code&gt; pragma used instead (see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; and &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; for details). Old code should be converted to UTF-8, via something like the recipe in the &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt; (though this simple approach may require manual adjustments afterwards).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db7e44f64dc2e33987c7fbd44c07e44789bfa8" translate="yes" xml:space="preserve">
          <source>This pragma dates from the days when UTF-8-enabled editors were uncommon. But that was long ago, and the need for it is greatly diminished. That, coupled with the fact that it doesn't work with threads, along with other problems, (see &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;) have led to its being deprecated. It is planned to remove this pragma in a future Perl version. New code should be written in UTF-8, and the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma used instead (see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; and &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; for details). Old code should be converted to UTF-8, via something like the recipe in the &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; (though this simple approach may require manual adjustments afterwards).</source>
          <target state="translated">Эта прагма восходит к тем временам, когда редакторы с поддержкой UTF-8 были редкостью. Но это было давно, и потребность в этом значительно уменьшилась. Это, в сочетании с тем фактом, что он не работает с потоками, а также с другими проблемами (см. &lt;a href=&quot;#BUGS&quot;&gt;ОШИБКИ&lt;/a&gt; ), привело к тому, что он устарел. Планируется удалить эту прагму в будущей версии Perl. Новый код должен быть написан в UTF-8, и вместо него &lt;a href=&quot;perluniintro&quot;&gt;должна &lt;/a&gt; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; прагма use utf8 (подробности см. В perluniintro и &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; ). Старый код следует преобразовать в UTF-8, используя что-то вроде рецепта в &lt;a href=&quot;#SYNOPSIS&quot;&gt;СИНХРОНИЗАЦИИ&lt;/a&gt; (хотя этот простой подход впоследствии может потребовать ручной настройки).</target>
        </trans-unit>
        <trans-unit id="4adb9dc70f3c9381053e6cf64fee4c07c531fe57" translate="yes" xml:space="preserve">
          <source>This pragma doesn't affect I/O. Nor does it change the internal representation of strings, only their interpretation. There are still several places where Unicode isn't fully supported, such as in filenames.</source>
          <target state="translated">Эта прагма не влияет на ввод/вывод.Она также не изменяет внутреннее представление строк,а только их интерпретацию.Есть еще несколько мест,где Юникод не полностью поддерживается,например,в именах файлов.</target>
        </trans-unit>
        <trans-unit id="d0a1053bcb46765bc08bab8c76c7daf170b6ab41" translate="yes" xml:space="preserve">
          <source>This pragma doesn't work well with &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; because PerlIO does not get along very well with it. When &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; contains non-ASCII characters it prints funny or gets &quot;wide character warnings&quot;. To understand it, try the code below.</source>
          <target state="translated">Эта прагма плохо работает с &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; потому что PerlIO не очень хорошо с ним справляется. Когда &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; содержит символы, отличные от ASCII, он печатает смешные символы или получает &amp;laquo;предупреждения о широких символах&amp;raquo;. Чтобы понять это, попробуйте приведенный ниже код.</target>
        </trans-unit>
        <trans-unit id="63bc5c639e862260de54994e4a3fd753cd2d30e7" translate="yes" xml:space="preserve">
          <source>This pragma doesn't work well with &lt;code&gt;format&lt;/code&gt; because PerlIO does not get along very well with it. When &lt;code&gt;format&lt;/code&gt; contains non-ASCII characters it prints funny or gets &quot;wide character warnings&quot;. To understand it, try the code below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842309da32a571cffd281160b3136685717f49db" translate="yes" xml:space="preserve">
          <source>This pragma first appeared in Perl v5.8.0. It has been enhanced in later releases as specified above.</source>
          <target state="translated">Эта прагма впервые появилась в Perl v5.8.0.Она была усовершенствована в более поздних релизах,как указано выше.</target>
        </trans-unit>
        <trans-unit id="ea296547782279e5c0e53a333818543fc8821038" translate="yes" xml:space="preserve">
          <source>This pragma is used to enable a Perl script to be written in encodings that aren't strictly ASCII nor UTF-8. It translates all or portions of the Perl program script from a given encoding into UTF-8, and changes the PerlIO layers of &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; to the encoding specified.</source>
          <target state="translated">Эта прагма используется для включения сценария Perl для написания в кодировках, которые не являются строго ASCII или UTF-8. Он переводит весь сценарий Perl-программы или его части из заданной кодировки в UTF-8 и изменяет уровни PerlIO &lt;code&gt;STDIN&lt;/code&gt; и &lt;code&gt;STDOUT&lt;/code&gt; на указанную кодировку.</target>
        </trans-unit>
        <trans-unit id="b2499dd223fe6da7fc3aa8e53b4286111a638895" translate="yes" xml:space="preserve">
          <source>This pragma lets you switch to the &quot;C3&quot; resolution order. In simple terms, &quot;C3&quot; order ensures that shared parent classes are never searched before child classes, so Perl will now search: &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , &lt;code&gt;Mother&lt;/code&gt;&lt;code&gt;MaternalGrandparent&lt;/code&gt; , and finally &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; . Note however that this is not &quot;breadth-first&quot; searching: All the &lt;code&gt;Father&lt;/code&gt; ancestors (except the common ancestor) are searched before any of the &lt;code&gt;Mother&lt;/code&gt; ancestors are considered.</source>
          <target state="translated">Эта прагма позволяет переключиться на порядок разрешения &amp;laquo;C3&amp;raquo;. Проще говоря, порядок &amp;laquo;C3&amp;raquo; гарантирует, что общие родительские классы никогда не будут просматриваться до дочерних классов, поэтому Perl теперь будет искать: &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , &lt;code&gt;Mother&lt;/code&gt; &lt;code&gt;MaternalGrandparent&lt;/code&gt; и, наконец, &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; . Однако следует отметить , что это не &amp;laquo;широта-первых&amp;raquo; ищут: Все &lt;code&gt;Father&lt;/code&gt; предки (кроме общего предка) сканируются до любого из &lt;code&gt;Mother&lt;/code&gt; предков считаются.</target>
        </trans-unit>
        <trans-unit id="2c6a561743b48f6917f3de6223e944d7c22b30aa" translate="yes" xml:space="preserve">
          <source>This pragma lets you switch to the &quot;C3&quot; resolution order. In simple terms, &quot;C3&quot; order ensures that shared parent classes are never searched before child classes, so Perl will now search: &lt;code&gt;Child&lt;/code&gt;, &lt;code&gt;Father&lt;/code&gt;, &lt;code&gt;PaternalGrandparent&lt;/code&gt;, &lt;code&gt;Mother&lt;/code&gt;&lt;code&gt;MaternalGrandparent&lt;/code&gt;, and finally &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;. Note however that this is not &quot;breadth-first&quot; searching: All the &lt;code&gt;Father&lt;/code&gt; ancestors (except the common ancestor) are searched before any of the &lt;code&gt;Mother&lt;/code&gt; ancestors are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7563cc6ded71ab7f47219e909773301db6c2d889" translate="yes" xml:space="preserve">
          <source>This pragma provides an easy and convenient way to enable or disable experimental features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2063e0ed31e4ca83c59af99843b134e51c1d67ca" translate="yes" xml:space="preserve">
          <source>This pragma reflects early attempts to incorporate Unicode into perl and has since been superseded. It breaks encapsulation (i.e. it exposes the innards of how the perl executable currently happens to store a string), and use of this module for anything other than debugging purposes is strongly discouraged. If you feel that the functions here within might be useful for your application, this possibly indicates a mismatch between your mental model of Perl Unicode and the current reality. In that case, you may wish to read some of the perl Unicode documentation: &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;, &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;, &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Эта прагма отражает ранние попытки включить Unicode в Perl и с тех пор была заменена. Он нарушает инкапсуляцию (то есть раскрывает внутреннюю часть того, как исполняемый файл perl в настоящее время хранит строку), и использование этого модуля для чего-либо, кроме целей отладки, настоятельно не рекомендуется. Если вы чувствуете, что функции здесь могут быть полезны для вашего приложения, это, возможно, указывает на несоответствие между вашей ментальной моделью Perl Unicode и текущей реальностью. В этом случае вы можете прочитать некоторую документацию Perl Unicode: &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; , &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; , &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; и &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17b8d23d839b79073aa5a07e1c3b5c9898bf0286" translate="yes" xml:space="preserve">
          <source>This pragma simplifies the maintenance of dual-life modules that will no longer be included in the Perl core in a future Perl release, but are still included currently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c260c6accbf395dcf89666ab18de9cc81ef025ab" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to change the behaviour of the filetest permission operators, &lt;code&gt;-r&lt;/code&gt;&lt;code&gt;-w&lt;/code&gt;&lt;code&gt;-x&lt;/code&gt;&lt;code&gt;-R&lt;/code&gt;&lt;code&gt;-W&lt;/code&gt;&lt;code&gt;-X&lt;/code&gt; (see &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef074ee97cc67ce380e960a125c4b931d1340ce" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to change the behaviour of the filetest permission operators, &lt;code&gt;-r&lt;/code&gt;&lt;code&gt;-w&lt;/code&gt;&lt;code&gt;-x&lt;/code&gt;&lt;code&gt;-R&lt;/code&gt;&lt;code&gt;-W&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; (see &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="translated">Эта прагма указывает компилятору изменить поведение операторов разрешения проверки файлов, &lt;code&gt;-r&lt;/code&gt; &lt;code&gt;-w&lt;/code&gt; &lt;code&gt;-x&lt;/code&gt; &lt;code&gt;-R&lt;/code&gt; &lt;code&gt;-W&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; (см. &lt;a href=&quot;perlfunc&quot;&gt;Perlfunc&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="221ed9ae1b0c79e2438890e0d6c973d357078c4b" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to enable (or disable) the use of POSIX locales for built-in operations (for example, LC_CTYPE for regular expressions, LC_COLLATE for string comparison, and LC_NUMERIC for number formatting). Each &quot;use locale&quot; or &quot;no locale&quot; affects statements to the end of the enclosing BLOCK.</source>
          <target state="translated">Эта прагма говорит компилятору включить (или отключить)использование локалей POSIX для встроенных операций (например,LC_CTYPE для регулярных выражений,LC_COLLATE для сравнения строк и LC_NUMERIC для форматирования чисел).Каждая &quot;использовать локаль&quot; или &quot;нет локали&quot; влияет на выражения в конце прилагаемого BLOCK.</target>
        </trans-unit>
        <trans-unit id="aeeaf592fadd170ef60bd36772264838afffed60" translate="yes" xml:space="preserve">
          <source>This pragma was created so you can explicitly tell Perl that operations executed within its scope are to use Unicode rules. More operations are affected with newer perls. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e609830a837e5307b3fb39be2d58dc9501e3994d" translate="yes" xml:space="preserve">
          <source>This pragma was created so you can explicitly tell Perl that operations executed within its scope are to use Unicode rules. More operations are affected with newer perls. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt;.</source>
          <target state="translated">Эта прагма была создана для того, чтобы вы могли явно указать Perl, что операции, выполняемые в ее области, должны использовать правила Unicode. Новые perls влияют на большее количество операций. См &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;. Ошибка Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c932803f2c5c4b2cf5c88433b729097c2569d39" translate="yes" xml:space="preserve">
          <source>This pragma will predeclare all the variables whose names are in the list, allowing you to use them under &lt;code&gt;use strict&lt;/code&gt;, and disabling any typo warnings for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700e6f2388b406cbe201cbb98323ed5f25c8d4b4" translate="yes" xml:space="preserve">
          <source>This pragma works just like the &lt;code&gt;strict&lt;/code&gt; pragma. This means that the scope of the warning pragma is limited to the enclosing block. It also means that the pragma setting will not leak across files (via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;). This allows authors to independently define the degree of warning checks that will be applied to their module.</source>
          <target state="translated">Эта прагма работает так же, как и прагма &lt;code&gt;strict&lt;/code&gt; . Это означает, что область прагмы предупреждения ограничена охватывающим блоком. Это также означает, что параметр прагмы не будет просачиваться через файлы (через &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ). Это позволяет авторам независимо определять степень предупреждающих проверок, которые будут применяться к их модулю.</target>
        </trans-unit>
        <trans-unit id="efd21a83903c74ae90d870a3df25547a1a2130d8" translate="yes" xml:space="preserve">
          <source>This pragma works just like the &lt;code&gt;strict&lt;/code&gt; pragma. This means that the scope of the warning pragma is limited to the enclosing block. It also means that the pragma setting will not leak across files (via &lt;code&gt;use&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt;). This allows authors to independently define the degree of warning checks that will be applied to their module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a2879d5d48273acab2ab3a9f22c1edf08032e3" translate="yes" xml:space="preserve">
          <source>This prints</source>
          <target state="translated">Это отпечатки</target>
        </trans-unit>
        <trans-unit id="b6e212e7ef6ac1844cda369639e0440d069cad8b" translate="yes" xml:space="preserve">
          <source>This prints &quot;bar&quot; and writes &quot;foo&quot; into the file &quot;blurch&quot;:</source>
          <target state="translated">При этом печатается &quot;bar&quot; и записывается &quot;foo&quot; в файл &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="d54bfbbae93113b4950fc2d869fb4754b9ce7e99" translate="yes" xml:space="preserve">
          <source>This prints &quot;bar&quot; and writes &quot;foo&quot; to the file &quot;blurch&quot;:</source>
          <target state="translated">При этом печатается &quot;bar&quot; и записывается &quot;foo&quot; в файл &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="efd4b33e8216cea60a6219dc7e5bd98ac5e87040" translate="yes" xml:space="preserve">
          <source>This prints &quot;foo&quot; (&quot;bar&quot; disappears into nowhereland):</source>
          <target state="translated">Это отпечаток &quot;фу&quot; (&quot;бар&quot; исчезает в никуда):</target>
        </trans-unit>
        <trans-unit id="41ff0d603c865bec8366dedecbae0223cb1c3622" translate="yes" xml:space="preserve">
          <source>This prints &lt;code&gt;2.7&lt;/code&gt; .</source>
          <target state="translated">Это печатает &lt;code&gt;2.7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5884fb8d5912977dd4b38b66daf68b4ce0bb0d83" translate="yes" xml:space="preserve">
          <source>This prints &lt;code&gt;2.7&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb91200cd90a472a1ae9cb007ac03043f56be426" translate="yes" xml:space="preserve">
          <source>This prints out the name and version of all modules used and then exits.</source>
          <target state="translated">При этом распечатывается название и версия всех используемых модулей,а затем выходит из них.</target>
        </trans-unit>
        <trans-unit id="0f904b0830f014f8a9104235a42d06c972150632" translate="yes" xml:space="preserve">
          <source>This prints out your environment like the &lt;a href=&quot;http://man.he.net/man1/printenv&quot;&gt;printenv(1)&lt;/a&gt; program, but in a different order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f686232da2ac609974851dce432c4e1340ec7365" translate="yes" xml:space="preserve">
          <source>This prints out your environment like the printenv(1) program, but in a different order:</source>
          <target state="translated">При этом печатается ваше окружение,как в программе printenv(1),но в другом порядке:</target>
        </trans-unit>
        <trans-unit id="04d447d63dbf460d4723e288297a46d354df3e2a" translate="yes" xml:space="preserve">
          <source>This prints two doublequotes:</source>
          <target state="translated">Это печатает две двойные кавычки:</target>
        </trans-unit>
        <trans-unit id="345205710c1209079bdf05b4d146f25fe0a01f36" translate="yes" xml:space="preserve">
          <source>This prints:</source>
          <target state="translated">Это отпечатки:</target>
        </trans-unit>
        <trans-unit id="468d6d44762bf30d6816e393a8ba4eeeb6a7be16" translate="yes" xml:space="preserve">
          <source>This probably does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21d1db17e4be9e2f5e50a54879f0a7c98d4455f" translate="yes" xml:space="preserve">
          <source>This probably isn't as useful as you might think. Normally, you shouldn't need to.</source>
          <target state="translated">Наверное,это не так полезно,как вы думаете.Обычно,не стоит.</target>
        </trans-unit>
        <trans-unit id="341bfd19674c6dfeba3ffe584bfdf82c2776cb1e" translate="yes" xml:space="preserve">
          <source>This probably makes more sense for a human: enter a block, start a statement. Get the values of &lt;code&gt;$b&lt;/code&gt; and &lt;code&gt;$c&lt;/code&gt; , and add them together. Find &lt;code&gt;$a&lt;/code&gt; , and assign one to the other. Then leave.</source>
          <target state="translated">Вероятно, это имеет больше смысла для человека: введите блок, начните утверждение. Получите значения &lt;code&gt;$b&lt;/code&gt; и &lt;code&gt;$c&lt;/code&gt; и сложите их вместе. Найдите &lt;code&gt;$a&lt;/code&gt; и назначьте одно другому. Тогда уходи.</target>
        </trans-unit>
        <trans-unit id="a4586de2c445b95b021af0b04d69fb01ba89d45c" translate="yes" xml:space="preserve">
          <source>This probably makes more sense for a human: enter a block, start a statement. Get the values of &lt;code&gt;$b&lt;/code&gt; and &lt;code&gt;$c&lt;/code&gt;, and add them together. Find &lt;code&gt;$a&lt;/code&gt;, and assign one to the other. Then leave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d98988085b44026120bb435150bffabf68b9c3" translate="yes" xml:space="preserve">
          <source>This probably sounds a bit more confusing than it really is, so let's go through this program piece by piece and see what it does. (For those of you who might be trying to remember exactly what a prime number is, it's a number that's only evenly divisible by itself and 1.)</source>
          <target state="translated">Вероятно,это звучит немного более запутанно,чем есть на самом деле,так что давайте рассмотрим эту программу по частям и посмотрим,что она делает.(Для тех из вас,кто,возможно,пытается точно запомнить,что такое простое число,это число,которое только равномерно делится само по себе и 1).</target>
        </trans-unit>
        <trans-unit id="8ac64410a0a0c80ce97774854ab9fa0ae7c24c64" translate="yes" xml:space="preserve">
          <source>This probing and the checks we performed have some limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e016023303c59d801c6e740a285fec3afa4a6473" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; syntax. When inner anonymous subs that reference lexical subroutines in outer subroutines are created, they are automatically rebound to the current values of such lexical subs.</source>
          <target state="translated">Эту проблему обычно можно решить, сделав внутреннюю подпрограмму анонимной с помощью синтаксиса &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; . Когда создаются внутренние анонимные подпрограммы, которые ссылаются на лексические подпрограммы во внешних подпрограммах, они автоматически возвращаются к текущим значениям таких лексических подпрограмм.</target>
        </trans-unit>
        <trans-unit id="b60e9bed0f73061b937a8fe5fecd9ad0d49454e0" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; syntax. When inner anonymous subs that reference variables in outer subroutines are created, they are automatically rebound to the current values of such variables.</source>
          <target state="translated">Эту проблему обычно можно решить, сделав внутреннюю подпрограмму анонимной с помощью синтаксиса &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; . Когда создаются внутренние анонимные подпрограммы, которые ссылаются на переменные во внешних подпрограммах, они автоматически возвращаются к текущим значениям таких переменных.</target>
        </trans-unit>
        <trans-unit id="57123e780f962baab766839b9fcf02a5c2e726f1" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;sub {}&lt;/code&gt; syntax. When inner anonymous subs that reference lexical subroutines in outer subroutines are created, they are automatically rebound to the current values of such lexical subs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0f22c9ea1e13dec6b01b469b5a53003b6ea76c" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;sub {}&lt;/code&gt; syntax. When inner anonymous subs that reference variables in outer subroutines are created, they are automatically rebound to the current values of such variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e5c26de90551718f152502391c103ab788e07b" translate="yes" xml:space="preserve">
          <source>This problem usually involves one of the Perl built-ins that has the same name a Unix command that uses octal numbers as arguments on the command line. In this example, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; on the command line knows that its first argument is octal because that's what it does:</source>
          <target state="translated">Эта проблема обычно связана с одной из встроенных программ Perl, которая имеет то же имя, что и команда Unix, которая использует восьмеричные числа в качестве аргументов в командной строке. В этом примере &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; в командной строке знает, что его первый аргумент восьмеричный, потому что он делает следующее:</target>
        </trans-unit>
        <trans-unit id="d33a707f660fda2085139973d7ad824dc2ab179f" translate="yes" xml:space="preserve">
          <source>This problem usually involves one of the Perl built-ins that has the same name a Unix command that uses octal numbers as arguments on the command line. In this example, &lt;code&gt;chmod&lt;/code&gt; on the command line knows that its first argument is octal because that's what it does:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b6c2ab73ee787f434ee0ce1c24dc74fd9f5055" translate="yes" xml:space="preserve">
          <source>This problem was fixed in perl 5.004_05, so preventing it means upgrading your version of perl. ;)</source>
          <target state="translated">Эта проблема была исправлена в perl 5.004_05,так что предотвратить ее означает обновить вашу версию perl.;)</target>
        </trans-unit>
        <trans-unit id="149ef363e988711abf3a930d8381275df0baf405" translate="yes" xml:space="preserve">
          <source>This processes the lines in &lt;code&gt;@lines&lt;/code&gt; (where each list item must be a defined value, and must contain exactly one line of content -- so no items like &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; are allowed). The final &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is used to indicate the end of document being parsed.</source>
          <target state="translated">Это обрабатывает строки в &lt;code&gt;@lines&lt;/code&gt; (где каждый элемент списка должен быть определенным значением и должен содержать ровно одну строку содержимого - поэтому такие элементы, как &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; не допускаются). Последний &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; используется для обозначения конца анализируемого документа.</target>
        </trans-unit>
        <trans-unit id="688ef3f8e6f5eaf3a51865a695b77382ce66b228" translate="yes" xml:space="preserve">
          <source>This processes the lines in &lt;code&gt;@lines&lt;/code&gt; (where each list item must be a defined value, and must contain exactly one line of content -- so no items like &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; are allowed). The final &lt;code&gt;undef&lt;/code&gt; is used to indicate the end of document being parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20dce79362eb3c48b58c8e5bc86aad6133c323" translate="yes" xml:space="preserve">
          <source>This produces a patch based on the difference between blead and your current branch. It's important to make sure that blead is up to date before producing the diff, that's why we call &lt;code&gt;git pull&lt;/code&gt; first.</source>
          <target state="translated">Это создает патч, основанный на разнице между blead и вашей текущей веткой. Перед созданием различий важно убедиться, что blead обновлено, поэтому мы сначала вызываем &lt;code&gt;git pull&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a3bf030e7bf490188072c702d468c0925c814bb" translate="yes" xml:space="preserve">
          <source>This produces the Perl docs online book &lt;code&gt;perl.INF&lt;/code&gt; . Install in on &lt;code&gt;BOOKSHELF&lt;/code&gt; path.</source>
          <target state="translated">Это создает онлайн-книгу Perl docs &lt;code&gt;perl.INF&lt;/code&gt; . Установить по пути &lt;code&gt;BOOKSHELF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1d23f3b834b32d7a55e6f86f555013820b4d006" translate="yes" xml:space="preserve">
          <source>This produces the Perl docs online book &lt;code&gt;perl.INF&lt;/code&gt;. Install in on &lt;code&gt;BOOKSHELF&lt;/code&gt; path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a75bb1a7c7847916a1dc3b67dbf0cb3e9f1aba1" translate="yes" xml:space="preserve">
          <source>This produces the default error string for the given exception,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9c734dac073d3001ca1ea5f8fa8cfb8daa173b" translate="yes" xml:space="preserve">
          <source>This program is Copyright 1990,2015 by Johan Vromans. This program is free software; you can redistribute it and/or modify it under the terms of the Perl Artistic License or the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</source>
          <target state="translated">Эта программа защищена авторским правом 1990,2015 Йохана Вроманса.Эта программа свободна;вы можете распространять ее и/или изменять ее на условиях Художественной лицензии Perl или Стандартной общественной лицензии GNU,опубликованной Фондом свободного программного обеспечения;либо версии 2 Лицензии,либо (по вашему выбору)любой более поздней версии.</target>
        </trans-unit>
        <trans-unit id="26f7f8dba51ed564d4c376a299ad1ccb7d59f62d" translate="yes" xml:space="preserve">
          <source>This program is designed to help you generate and send bug reports (and thank-you notes) about perl5 and the modules which ship with it.</source>
          <target state="translated">Эта программа предназначена для того,чтобы помочь вам генерировать и отправлять сообщения об ошибках (и благодарственные письма)о perl5 и модулях,которые с ним поставляются.</target>
        </trans-unit>
        <trans-unit id="95c0f8377730d3f4d0f475e508c5eeed353ea1d3" translate="yes" xml:space="preserve">
          <source>This program is designed to help you generate bug reports (and thank-you notes) about perl5 and the modules which ship with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d3efb8a4ca3ef394388570fac127108dc6a9fe" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See either the GNU General Public License or the Artistic License for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cac2059d04ed459899445fb7d4adafed92ceb31" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">Эта программа распространяется в надежде,что она будет полезной,но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ;даже без подразумеваемой гарантии ТОВАРНОЙ ПРИГОДНОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНЫХ ЦЕЛЕЙ.Более подробная информация приведена в Стандартной Общественной Лицензии GNU.</target>
        </trans-unit>
        <trans-unit id="d8761e66f0aa0865d7b8a0fad53a385acc12de1d" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantability or fitness for a particular purpose.</source>
          <target state="translated">Эта программа распространяется в надежде,что она будет полезна,но без каких-либо гарантий;даже без подразумеваемой гарантии товарного состояния или пригодности для конкретной цели.</target>
        </trans-unit>
        <trans-unit id="2b736eab48b8800afefb519e32bdf619448f2254" translate="yes" xml:space="preserve">
          <source>This program is distributed under the Artistic License.</source>
          <target state="translated">Эта программа распространяется на условиях Художественной лицензии.</target>
        </trans-unit>
        <trans-unit id="d1d0a6a12423ce6569360d8955fb54c14fc9d18b" translate="yes" xml:space="preserve">
          <source>This program is distributed under the same terms as perl itself. See &lt;a href=&quot;http://perl.org/&quot;&gt;http://perl.org/&lt;/a&gt; or &lt;a href=&quot;http://cpan.org/&quot;&gt;http://cpan.org/&lt;/a&gt; for more info on that.</source>
          <target state="translated">Эта программа распространяется на тех же условиях, что и сам perl. См. &lt;a href=&quot;http://perl.org/&quot;&gt;Http://perl.org/&lt;/a&gt; или &lt;a href=&quot;http://cpan.org/&quot;&gt;http://cpan.org/&lt;/a&gt; для получения дополнительной информации об этом.</target>
        </trans-unit>
        <trans-unit id="9f880f2d75284047b0b3ca19e5c220c8ba58fc91" translate="yes" xml:space="preserve">
          <source>This program is distributed under the same terms as perl itself. See http://perl.org/ or http://cpan.org/ for more info on that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09da468beec666c3faa34069fc9e34aec608126" translate="yes" xml:space="preserve">
          <source>This program is easy to understand. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; is the standard way to invoke a perl program from the shell. &lt;code&gt;$regexp = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; saves the first command line argument as the regexp to be used, leaving the rest of the command line arguments to be treated as files. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loops over all the lines in all the files. For each line, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; if /$regexp/;&lt;/code&gt; prints the line if the regexp matches the line. In this line, both &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;/$regexp/&lt;/code&gt; use the default variable &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="translated">Эта программа проста для понимания. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; - это стандартный способ вызвать программу Perl из оболочки. &lt;code&gt;$regexp = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; сохраняет первый аргумент командной строки как используемое регулярное выражение, оставляя остальные аргументы командной строки для обработки как файлы. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; перебирает все строки во всех файлах. Для каждой строки &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; if /$regexp/;&lt;/code&gt; печатает строку, если регулярное выражение соответствует строке. В этой строке и &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;/$regexp/&lt;/code&gt; неявно используют переменную по умолчанию &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1261f166c54df8049e546eae1262e6a9cada525" translate="yes" xml:space="preserve">
          <source>This program is easy to understand. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; is the standard way to invoke a perl program from the shell. &lt;code&gt;$regexp = shift;&lt;/code&gt; saves the first command line argument as the regexp to be used, leaving the rest of the command line arguments to be treated as files. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loops over all the lines in all the files. For each line, &lt;code&gt;print if /$regexp/;&lt;/code&gt; prints the line if the regexp matches the line. In this line, both &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;/$regexp/&lt;/code&gt; use the default variable &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9820f4fcf840eefdc1fac524d68220274e583" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself</source>
          <target state="translated">Эта программа свободна;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="46aefc944a8368be1c5041bb6eeeeb6f411fe967" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта программа свободна;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="ef7753908303851a8d71edec5d567bdf9359f255" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the terms of either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d232685400a50b411b31a9d8b5d5d46e7d1e5a7e" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the terms of either: the GNU General Public License as published by the Free Software Foundation; or the Artistic License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda486acda27bdf9cd66949e1266b5a78cb661d8" translate="yes" xml:space="preserve">
          <source>This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта программа свободна;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="49a9ebce432bc6f7a5abfa1673ae23d082772d50" translate="yes" xml:space="preserve">
          <source>This program is maintained by the Perl 5 Porters. The CPAN distribution is maintained by S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;</source>
          <target state="translated">Эта программа поддерживается Perl 5 Porters. Распространение CPAN поддерживает Себастьян Апергис-Трамони &amp;lt;</target>
        </trans-unit>
        <trans-unit id="d98f469a4bef1492cbd51567cf72d3226f5fb0a1" translate="yes" xml:space="preserve">
          <source>This program provides an easy way to send a thank-you message back to the authors and maintainers of perl. It's just</source>
          <target state="translated">Эта программа предоставляет простой способ отправить благодарственное сообщение обратно авторам и сопровождающим perl.Просто</target>
        </trans-unit>
        <trans-unit id="474e6c18a35ba4d4e6ef7db0a92aa1f2c8019fc7" translate="yes" xml:space="preserve">
          <source>This program uses the pipeline model to generate prime numbers. Each thread in the pipeline has an input queue that feeds numbers to be checked, a prime number that it's responsible for, and an output queue into which it funnels numbers that have failed the check. If the thread has a number that's failed its check and there's no child thread, then the thread must have found a new prime number. In that case, a new child thread is created for that prime and stuck on the end of the pipeline.</source>
          <target state="translated">Эта программа использует модель трубопровода для генерации простых чисел.Каждый поток конвейера имеет входную очередь,в которую поступают числа,подлежащие проверке,простое число,за которое он отвечает,и выходную очередь,в которую он направляет воронки с числами,которые не прошли проверку.Если поток имеет число,которое не прошло проверку,и нет дочернего потока,то поток должен был найти новое простое число.В этом случае новая дочерняя нить создается для этой простейшей и застревает на конце конвейера.</target>
        </trans-unit>
        <trans-unit id="9bd07d758efadc42857a5a0bab51cd8a077edefd" translate="yes" xml:space="preserve">
          <source>This program will print only the line containing &quot;Bar&quot;. If the range operator is changed to &lt;code&gt;...&lt;/code&gt; , it will also print the &quot;Baz&quot; line.</source>
          <target state="translated">Эта программа напечатает только строку, содержащую &amp;laquo;Бар&amp;raquo;. Если изменить оператор диапазона на &lt;code&gt;...&lt;/code&gt; , он также напечатает строку &amp;laquo;Baz&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="30db2380e071100cd380f37fbfe50881aec4a9f3" translate="yes" xml:space="preserve">
          <source>This program will print only the line containing &quot;Bar&quot;. If the range operator is changed to &lt;code&gt;...&lt;/code&gt;, it will also print the &quot;Baz&quot; line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91a32c34a450fa3aaeea5e09b4bf9753a0de2ef" translate="yes" xml:space="preserve">
          <source>This program will probably hang until you kill it. The only way it won't hang is if one of the two threads acquires both locks first. A guaranteed-to-hang version is more complicated, but the principle is the same.</source>
          <target state="translated">Эта программа,вероятно,повиснет,пока ты ее не убьешь.Единственный способ,которым она не повиснет-это если один из двух потоков сначала приобретет оба замка.Гарантированная версия более сложна,но принцип тот же.</target>
        </trans-unit>
        <trans-unit id="5342717fe0bceba26cbcb8fb4ec4c851e52a537d" translate="yes" xml:space="preserve">
          <source>This project was originated by the late Nick Ing-Simmons and later maintained by Dan Kogai</source>
          <target state="translated">Этот проект был начат покойным Ником Инг-Симмонсом и позже поддерживался Дэном Когаем.</target>
        </trans-unit>
        <trans-unit id="9118e7dccf4093710a6ee14c8c47816f5d4b16b0" translate="yes" xml:space="preserve">
          <source>This property is always written in the compound form. For example, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; matches characters that are normally written right to left. Unlike the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; property, this property can have more values added in a future Unicode release. Those listed above comprised the complete set for many Unicode releases, but others were added in Unicode 6.3; you can always find what the current ones are in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;. And &lt;a href=&quot;https://www.unicode.org/reports/tr9/&quot;&gt;https://www.unicode.org/reports/tr9/&lt;/a&gt; describes how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d353efbbda92520a2429ad4f8535f649667e5952" translate="yes" xml:space="preserve">
          <source>This property is always written in the compound form. For example, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; matches characters that are normally written right to left. Unlike the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; property, this property can have more values added in a future Unicode release. Those listed above comprised the complete set for many Unicode releases, but others were added in Unicode 6.3; you can always find what the current ones are in in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;. And &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; describes how to use them.</source>
          <target state="translated">Это свойство всегда записывается в составной форме. Например, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; соответствует символам, которые обычно пишутся справа налево. В отличие от свойства &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; , это свойство может иметь дополнительные значения, добавленные в будущей версии Unicode. Перечисленные выше составляли полный набор для многих выпусков Unicode, но другие были добавлены в Unicode 6.3; вы всегда можете найти текущие в &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt; . И &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; описывает, как их использовать.</target>
        </trans-unit>
        <trans-unit id="9d34b69b565209c628e5e765cbc6639e949afb7e" translate="yes" xml:space="preserve">
          <source>This property is used when you need to know in what Unicode version(s) a character is.</source>
          <target state="translated">Это свойство используется,когда вам нужно знать,в какой версии Юникода (Unicode)находится символ.</target>
        </trans-unit>
        <trans-unit id="ba740c0026c45f2093377326c9e21d5c765b2b70" translate="yes" xml:space="preserve">
          <source>This provides access to most of the Win32 GUI widgets from Perl. Obviously, it only runs under Win32, and uses native widgets. The Perl interface doesn't really follow the C interface: it's been made more Perlish, and the documentation is pretty good. More advanced stuff may require familiarity with the C Win32 APIs, or reference to MSDN.</source>
          <target state="translated">Это обеспечивает доступ к большинству Win32 GUI-виджетов с Perl.Очевидно,что он работает только под Win32 и использует нативные виджеты.Perl интерфейс на самом деле не следует C интерфейсу:он сделан более Perlish,и документация довольно неплохая.Более продвинутые вещи могут потребовать знакомства с C Win32 API,или ссылки на MSDN.</target>
        </trans-unit>
        <trans-unit id="05ed7360b5662052cf8df531a4821820675f5a90" translate="yes" xml:space="preserve">
          <source>This provides an alternate means to specify function names to be exported from the extension. Its value is a reference to an array of function names to be exported by the extension. These names are passed through unaltered to the linker options file.</source>
          <target state="translated">Это предоставляет альтернативное средство для указания имен функций,которые будут экспортированы из расширения.Его значение является ссылкой на массив имен функций,которые будут экспортированы расширением.Эти имена без изменений передаются в линкерный файл опций.</target>
        </trans-unit>
        <trans-unit id="b6d4501c0d8df55386bc41a04cfb00e365ded86e" translate="yes" xml:space="preserve">
          <source>This provides an alternate means to specify function names to be exported from the extension. Its value is a reference to an array of function names to be exported by the extension. These names are passed through unaltered to the linker options file. Specifying a value for the FUNCLIST attribute suppresses automatic generation of the bootstrap function for the package. To still create the bootstrap name you have to specify the package name in the DL_FUNCS hash:</source>
          <target state="translated">Это предоставляет альтернативное средство для указания имен функций,которые будут экспортированы из расширения.Его значение является ссылкой на массив имен функций,которые будут экспортированы расширением.Эти имена без изменений передаются в линкерный файл опций.Указание значения для атрибута FUNCLIST подавляет автоматическую генерацию функции bootstrap для пакета.Для того,чтобы всё равно создать имя бутстрапа,необходимо указать имя пакета в хэше DL_FUNCS:</target>
        </trans-unit>
        <trans-unit id="e5949eb8258f363515432b75a3130bd3950de7ae" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for &lt;a href=&quot;../../harness&quot;&gt;TAP::Harness&lt;/a&gt; when run with multiple &lt;a href=&quot;../../harness#jobs&quot;&gt;jobs in TAP::Harness&lt;/a&gt;.</source>
          <target state="translated">Это обеспечивает ориентированное на консоль форматирование вывода для &lt;a href=&quot;../../harness&quot;&gt;TAP :: Harness&lt;/a&gt; при запуске с несколькими &lt;a href=&quot;../../harness#jobs&quot;&gt;заданиями в TAP :: Harness&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c754e200bc077c2bf6996a1253c57ba0690ec6b" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; when run with multiple &lt;a href=&quot;TAP::Harness#jobs&quot;&gt;&quot;jobs&quot; in TAP::Harness&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9181d13c6755b2d2d5fcc68549a86008e0459f52" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for TAP::Harness.</source>
          <target state="translated">Это обеспечивает консольно-ориентированное форматирование вывода для TAP::Harness.</target>
        </trans-unit>
        <trans-unit id="cb848608e40dafbcfe04519def93d68a46db285b" translate="yes" xml:space="preserve">
          <source>This provides fairly low-level access to the Win32 System API calls dealing with files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d034d371e8adbdcae6dcc8b5f1035f643b009166" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for &lt;a href=&quot;../../harness&quot;&gt;TAP::Harness&lt;/a&gt;. It is particularly important when running with parallel tests, as it ensures that test results are not interleaved, even when run verbosely.</source>
          <target state="translated">Это обеспечивает ориентированное на файл форматирование вывода для &lt;a href=&quot;../../harness&quot;&gt;TAP :: Harness&lt;/a&gt; . Это особенно важно при работе с параллельными тестами, так как это гарантирует, что результаты тестов не будут чередоваться даже при подробном запуске.</target>
        </trans-unit>
        <trans-unit id="41a1e8e2958aae247fdb0f251950cd9259ec4e20" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt;. It is particularly important when running with parallel tests, as it ensures that test results are not interleaved, even when run verbosely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3613f62ba727bb8044f064f871c5a2ffe96d89" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for TAP::Harness.</source>
          <target state="translated">Это обеспечивает файлово-ориентированное форматирование вывода для TAP::Harness.</target>
        </trans-unit>
        <trans-unit id="e79f6eddf4d757dda9eee150d598652b5e165fe6" translate="yes" xml:space="preserve">
          <source>This provides the &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; token that returns a reference to the current subroutine or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; outside of a subroutine.</source>
          <target state="translated">Это предоставляет токен &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; , который возвращает ссылку на текущую подпрограмму или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; вне подпрограммы.</target>
        </trans-unit>
        <trans-unit id="3e44b62c4658b0866a101af4ad0e69174b50a666" translate="yes" xml:space="preserve">
          <source>This provides the &lt;code&gt;__SUB__&lt;/code&gt; token that returns a reference to the current subroutine or &lt;code&gt;undef&lt;/code&gt; outside of a subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224c6e548e4884dfbdfe2ac071bf15dda7c825fc" translate="yes" xml:space="preserve">
          <source>This puts the executables in f:/perllib/bin. Manually move them to the &lt;code&gt;PATH&lt;/code&gt; , manually move the built</source>
          <target state="translated">Это помещает исполняемые файлы в f: / perllib / bin. Вручную переместите их в &lt;code&gt;PATH&lt;/code&gt; , вручную переместите построенные</target>
        </trans-unit>
        <trans-unit id="0f078af34eb1808b4b8645c105ffb896a2e3287b" translate="yes" xml:space="preserve">
          <source>This puts the executables in f:/perllib/bin. Manually move them to the &lt;code&gt;PATH&lt;/code&gt;, manually move the built</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a0cac7b723579ba6e539b4576a4997c5b49e8f" translate="yes" xml:space="preserve">
          <source>This read-only variable contains a reference to the last-read filehandle. This is set by &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;. This is the same handle that &lt;code&gt;$.&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without arguments use. It is also the handle used when Perl appends &quot;, &amp;lt;STDIN&amp;gt; line 1&quot; to an error or warning message.</source>
          <target state="translated">Эта доступная только для чтения переменная содержит ссылку на дескриптор файла, который был прочитан последним. Это устанавливается &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; . Это тот же дескриптор, что и &lt;code&gt;$.&lt;/code&gt; а &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; без аргументов пользуйся . Это также дескриптор, используемый, когда Perl добавляет &quot;, &amp;lt;STDIN&amp;gt; line 1&quot; к сообщению об ошибке или предупреждению.</target>
        </trans-unit>
        <trans-unit id="be43d29d7cb60d0bb5d93c01c4c8424abbd333f2" translate="yes" xml:space="preserve">
          <source>This read-only variable contains a reference to the last-read filehandle. This is set by &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt; and &lt;code&gt;seek&lt;/code&gt;. This is the same handle that &lt;code&gt;$.&lt;/code&gt; and &lt;code&gt;tell&lt;/code&gt; and &lt;code&gt;eof&lt;/code&gt; without arguments use. It is also the handle used when Perl appends &quot;, &amp;lt;STDIN&amp;gt; line 1&quot; to an error or warning message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8564c99d9b70452198f29efc00c01b42f3989" translate="yes" xml:space="preserve">
          <source>This readonly SV has a zero numeric value and a &lt;code&gt;&quot;0&quot;&lt;/code&gt; string value. It's similar to &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt; except for its string value. Can be used as a cheap alternative to &lt;code&gt;mXPUSHi(0)&lt;/code&gt; for example. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_zero&lt;/code&gt;. Introduced in 5.28.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9c374af25573cbb8a011c91df0b5de175403d9" translate="yes" xml:space="preserve">
          <source>This reads the Pod content of the file (or filehandle) that you specify, and processes it with that &lt;code&gt;$parser&lt;/code&gt; object, according to however &lt;code&gt;$parser&lt;/code&gt; 's class works, and according to whatever parser options you have set up for this &lt;code&gt;$parser&lt;/code&gt; object.</source>
          <target state="translated">Это читает содержимое Pod файла (или дескриптора файла), который вы указываете, и обрабатывает его с помощью этого объекта &lt;code&gt;$parser&lt;/code&gt; , в зависимости от того, как работает класс &lt;code&gt;$parser&lt;/code&gt; , и в соответствии с любыми параметрами парсера, которые вы установили для этого объекта &lt;code&gt;$parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a26e710e2e27380d631c3ef937b2b0240e77b996" translate="yes" xml:space="preserve">
          <source>This reads the Pod content of the file (or filehandle) that you specify, and processes it with that &lt;code&gt;$parser&lt;/code&gt; object, according to however &lt;code&gt;$parser&lt;/code&gt;'s class works, and according to whatever parser options you have set up for this &lt;code&gt;$parser&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bb05c8de9876d308efc2608bb9d89029538d52" translate="yes" xml:space="preserve">
          <source>This refers to a namespace declared with the Perl &lt;code&gt;package&lt;/code&gt; statement. In Perl, packages often have a version number property given by the &lt;code&gt;$VERSION&lt;/code&gt; variable in the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ff270630232407257920d032001ef8966fbd15" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code contained in a single file. Modules usually contain one or more packages and are often referred to by the name of a primary package that can be mapped to the file name. For example, one might refer to &lt;code&gt;File::Spec&lt;/code&gt; instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d7cb3ad9af8785004d6aea2c58d998c7c43122" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code typically contained in a single file. Currently, we primarily talk of perl modules, but this specification should be open enough to apply to other languages as well (ex. python, ruby).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eced75506fbb27c39fc8e3e1e378940cf07d3648" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code typically contained in a single file. Currently, we primarily talk of perl modules, but this specification should be open enough to apply to other languages as well (ex. python, ruby). Examples of modules are &lt;code&gt;Class::Container&lt;/code&gt;, &lt;code&gt;LWP::Simple&lt;/code&gt;, or &lt;code&gt;DBD::File&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738d39668fa39fd446be00455410afcfca770f3c" translate="yes" xml:space="preserve">
          <source>This refers to code that constructs a metadata data structure, serializes into a bytestream and/or writes it to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb6deaa19e9a370f00c7ae0865d9d2054ba9d5" translate="yes" xml:space="preserve">
          <source>This refers to code that reads a metadata file, deserializes it into a data structure in memory, or interprets a data structure of metadata elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31dda74f7214f2c1e1f0e262ad534c6710776eb" translate="yes" xml:space="preserve">
          <source>This regex from Benjamin Goldberg will add commas to numbers:</source>
          <target state="translated">Этот регекс от Бенджамина Голдберга добавит запятых к числам:</target>
        </trans-unit>
        <trans-unit id="056a5755811e26e84ba66501ddc6e8aa83e0239e" translate="yes" xml:space="preserve">
          <source>This regexp covers a much more limited set of formats and constitutes the best practices for initializing version objects. Whether you choose to employ decimal or dotted-decimal for is a personal preference however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63b86d7679f940ac8c61114c80aac9d0dbe5e33" translate="yes" xml:space="preserve">
          <source>This regexp covers all of the legal forms allowed under the current version string parser. This is not to say that all of these forms are recommended, and some of them can only be used when quoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5402a82ba706913f690e8b3975f67ccd9cac88" translate="yes" xml:space="preserve">
          <source>This regexp displays a common task: perform a case-insensitive match. Perl provides a way of avoiding all those brackets by simply appending an &lt;code&gt;'i'&lt;/code&gt; to the end of the match. Then &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; can be rewritten as &lt;code&gt;/yes/i;&lt;/code&gt; . The &lt;code&gt;'i'&lt;/code&gt; stands for case-insensitive and is an example of a</source>
          <target state="translated">Это регулярное выражение отображает общую задачу: выполнить сопоставление без учета регистра. Perl позволяет избежать всех этих скобок, просто добавив &lt;code&gt;'i'&lt;/code&gt; в конец совпадения. Тогда &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; можно переписать как &lt;code&gt;/yes/i;&lt;/code&gt; . &lt;code&gt;'i'&lt;/code&gt; обозначает регистронезависимыми и является примером</target>
        </trans-unit>
        <trans-unit id="3a214c88f7b6824fbb7ccf51b387a9a746e2ab88" translate="yes" xml:space="preserve">
          <source>This regexp displays a common task: perform a case-insensitive match. Perl provides a way of avoiding all those brackets by simply appending an &lt;code&gt;'i'&lt;/code&gt; to the end of the match. Then &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; can be rewritten as &lt;code&gt;/yes/i;&lt;/code&gt;. The &lt;code&gt;'i'&lt;/code&gt; stands for case-insensitive and is an example of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f039b2c10f0c743bc7161531bc5bb4ee7cf32e0f" translate="yes" xml:space="preserve">
          <source>This regexp matches at the earliest string position, &lt;code&gt;'T'&lt;/code&gt; . One might think that &lt;code&gt;e&lt;/code&gt; , being leftmost in the alternation, would be matched, but &lt;code&gt;r&lt;/code&gt; produces the longest string in the first quantifier.</source>
          <target state="translated">Это регулярное выражение соответствует самой ранней позиции строки, &lt;code&gt;'T'&lt;/code&gt; . Можно подумать, что &lt;code&gt;e&lt;/code&gt; , крайнее левое в чередовании, будет сопоставлено, но &lt;code&gt;r&lt;/code&gt; производит самую длинную строку в первом квантификаторе.</target>
        </trans-unit>
        <trans-unit id="18bc3044ad1a70322cf6bfca75dfe2f27fadde89" translate="yes" xml:space="preserve">
          <source>This regexp matches at the earliest string position, &lt;code&gt;'T'&lt;/code&gt;. One might think that &lt;code&gt;'e'&lt;/code&gt;, being leftmost in the alternation, would be matched, but &lt;code&gt;'r'&lt;/code&gt; produces the longest string in the first quantifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2afed8f05eefbd66a6b4b21a4dd6dc09f86be3d" translate="yes" xml:space="preserve">
          <source>This regexp without the &lt;code&gt;/x&lt;/code&gt; modifier is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d61ce1428d48124b4e47e558b037fdd3f04877" translate="yes" xml:space="preserve">
          <source>This registers warning categories for the given names and is primarily for use by the warnings::register pragma.</source>
          <target state="translated">Она регистрирует категории предупреждений для заданных имен и предназначена в первую очередь для использования предупреждения::register pragma.</target>
        </trans-unit>
        <trans-unit id="ac7da667100d67a773306ce2d3526ac0aaefa222" translate="yes" xml:space="preserve">
          <source>This release (5.14) uses &lt;code&gt;unix&lt;/code&gt; as the bottom layer on Win32, and so still uses the C compiler's numeric file descriptor routines. There is an experimental native &lt;code&gt;win32&lt;/code&gt; layer, which is expected to be enhanced and should eventually become the default under Win32.</source>
          <target state="translated">В этом выпуске (5.14) в качестве нижнего уровня Win32 используется &lt;code&gt;unix&lt;/code&gt; , и поэтому все еще используются подпрограммы числовых дескрипторов файлов компилятора C. Существует экспериментальный собственный уровень &lt;code&gt;win32&lt;/code&gt; , который, как ожидается, будет улучшен и в конечном итоге станет стандартом по умолчанию для Win32.</target>
        </trans-unit>
        <trans-unit id="e97366cc6c8c908874e040814cdab3c3ba7152dc" translate="yes" xml:space="preserve">
          <source>This release (5.30) uses &lt;code&gt;:unix&lt;/code&gt; as the bottom layer on Win32, and so still uses the C compiler's numeric file descriptor routines. There is an experimental native &lt;code&gt;:win32&lt;/code&gt; layer, which is expected to be enhanced and may eventually become the default under Win32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e93ba339b839f549405138c86c3e7a085e38a6" translate="yes" xml:space="preserve">
          <source>This release of Storable can be used on a newer version of Perl to serialize data which is not supported by earlier Perls. By default, Storable will attempt to do the right thing, by &lt;code&gt;croak()&lt;/code&gt; ing if it encounters data that it cannot deserialize. However, the defaults can be changed as follows:</source>
          <target state="translated">Этот выпуск Storable можно использовать в более новой версии Perl для сериализации данных, которые не поддерживаются более ранними версиями Perl. По умолчанию Storable будет пытаться поступить правильно, с помощью &lt;code&gt;croak()&lt;/code&gt; ing, если обнаружит данные, которые не может десериализовать. Однако значения по умолчанию можно изменить следующим образом:</target>
        </trans-unit>
        <trans-unit id="7ffdd0bf1fbd694aafba1b69b74908623d9b39e0" translate="yes" xml:space="preserve">
          <source>This release of Storable can be used on a newer version of Perl to serialize data which is not supported by earlier Perls. By default, Storable will attempt to do the right thing, by &lt;code&gt;croak()&lt;/code&gt;ing if it encounters data that it cannot deserialize. However, the defaults can be changed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224448a00c11022eb7a054d96b5b7887fe965764" translate="yes" xml:space="preserve">
          <source>This relied on &lt;code&gt;Test::Builder-&amp;gt;_try()&lt;/code&gt; which was a private method, documented as something nobody should use. This was fixed by using a different tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df9abd6e13cb17537a033c0a98a21365649ee63" translate="yes" xml:space="preserve">
          <source>This relies on the fact that uninitialized array elements are set to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1b77b3467fa5b58df05f447b8e32028382b1ea" translate="yes" xml:space="preserve">
          <source>This relies on the fact that uninitialized array elements are set to NULL.</source>
          <target state="translated">Это зависит от того,что неинициализированные элементы массива установлены в NULL.</target>
        </trans-unit>
        <trans-unit id="44ecfba29c712b60c9051df87b6cdce165f041c1" translate="yes" xml:space="preserve">
          <source>This removes the requirement for a given module from the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7d55aad79de70107f3e8211b62fbf8c98570e5" translate="yes" xml:space="preserve">
          <source>This renders a print statement, which includes a call to the function. It's identical to rendering a file with a use call and that single statement, except for the filename which appears in the nextstate ops.</source>
          <target state="translated">В результате получается сообщение для печати,которое включает вызов функции.Это идентично отрисовке файла с вызовом use и этим единственным оператором,за исключением имени файла,которое появляется в nextstate ops.</target>
        </trans-unit>
        <trans-unit id="ea6f5b9409b135d9fd2914f5e9712bb211e3d415" translate="yes" xml:space="preserve">
          <source>This renders all functions in the B::Concise package with the source lines. It eschews the O framework so that the stashref can be passed directly to B::Concise::compile(). See -stash option for a more convenient way to render a package.</source>
          <target state="translated">Это делает все функции в пакете B::Concise с исходными строками.Он воздерживается от фреймворка O,так что stashref может быть передан непосредственно в B::Concise::compile().Смотрите опцию -stash для более удобного способа отрисовки пакета.</target>
        </trans-unit>
        <trans-unit id="32554955438229712c4cac893fa9122a188f77ea" translate="yes" xml:space="preserve">
          <source>This replaces any read-only SV with a fresh SV and removes any magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e348cbe59c03a2464d04a9305501c3c5773cd34e" translate="yes" xml:space="preserve">
          <source>This replaces any read-only SV with a fresh writable copy and removes any magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e89c15d6e7988885e07ca54d3050b10693c573d" translate="yes" xml:space="preserve">
          <source>This reports whether the VMS process has been set to a case tolerant state, and returns true when the process is in the traditional case tolerant mode and false when case sensitivity has been enabled for the process. It is intended for use by the File::Spec::VMS-&amp;gt;case_tolerant method only, and it is recommended that you only use File::Spec-&amp;gt;case_tolerant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65869e50f6892b08c4cf7dcb78cc5963bf748c6b" translate="yes" xml:space="preserve">
          <source>This requires &lt;code&gt;perl-5.8&lt;/code&gt; or higher, compiled with &lt;code&gt;perlio&lt;/code&gt;</source>
          <target state="translated">Для этого требуется &lt;code&gt;perl-5.8&lt;/code&gt; или выше, скомпилированный с &lt;code&gt;perlio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf4909d18f4323c37d07bae96a1d0080562f63f5" translate="yes" xml:space="preserve">
          <source>This requires require a 64-bit MIPS CPU (R8000, R10000, ...)</source>
          <target state="translated">Для этого требуется 64-битный MIPS-процессор (R8000,R10000,...).</target>
        </trans-unit>
        <trans-unit id="f7da7513031db644267fa4b13fabe99ed2a030c7" translate="yes" xml:space="preserve">
          <source>This restores one of the standard line-styles: &lt;code&gt;terse&lt;/code&gt; , &lt;code&gt;concise&lt;/code&gt; , &lt;code&gt;linenoise&lt;/code&gt; , &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; , into effect. It also accepts style names previously defined with add_style().</source>
          <target state="translated">Это восстанавливает один из стандартных стилей линий: &lt;code&gt;terse&lt;/code&gt; , &lt;code&gt;concise&lt;/code&gt; , &lt;code&gt;linenoise&lt;/code&gt; , &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; . Он также принимает имена стилей, ранее определенные с помощью add_style ().</target>
        </trans-unit>
        <trans-unit id="36fc0f09fd582998b2f90539bd1668c94507a44b" translate="yes" xml:space="preserve">
          <source>This restores one of the standard line-styles: &lt;code&gt;terse&lt;/code&gt;, &lt;code&gt;concise&lt;/code&gt;, &lt;code&gt;linenoise&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, into effect. It also accepts style names previously defined with add_style().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0559182bda8492a3ca4dae9b14b73dc55291956" translate="yes" xml:space="preserve">
          <source>This restores the default behavior after you've changed it with '-main' (it's not normally needed). If no subroutine name/ref is given, main is rendered, regardless of this flag.</source>
          <target state="translated">Это восстанавливает поведение по умолчанию после того,как вы изменили его с помощью '-main' (обычно это не нужно).Если имя/рефр подпрограмм не задано,то отрисовывается main,независимо от этого флага.</target>
        </trans-unit>
        <trans-unit id="f49545d47b4c2e67130feb223d7916803e2151e7" translate="yes" xml:space="preserve">
          <source>This restores the token object(s) to the front of the parser stream.</source>
          <target state="translated">Это восстанавливает токен-объект(ы)в передней части потока синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="bc16a591c72f30b96574184a49591c3cb8b3396e" translate="yes" xml:space="preserve">
          <source>This results in checking out the median commit between &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;perl-5.10.0&lt;/code&gt;. You can then run the bisecting process with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc61a1506f4a52166fcca29cd0724a61c00502b" translate="yes" xml:space="preserve">
          <source>This returns -1 if it is not possible to know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7a366a88c90193129d1a95d7e39c2f2c494051" translate="yes" xml:space="preserve">
          <source>This returns -1 if there is no way to check (assume yes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc21f44beb4322ca69654d9019b9237853614328" translate="yes" xml:space="preserve">
          <source>This returns 0 if there are (most likely) no pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd0398abb2c08261b0415684f65513126559e63" translate="yes" xml:space="preserve">
          <source>This returns 0 if there are no pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5a3b4ddffecb8501f761fb971c3b2d6c7162bb" translate="yes" xml:space="preserve">
          <source>This returns 1 if there are (likely) pending events. Upon return it will reset, nothing else will be able to see that there were pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa266181f0344e330298c3c78c5770ba393e0756" translate="yes" xml:space="preserve">
          <source>This returns 1 if there are pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438306ebd9d1acbe91b86dc11907f9e6dab643b7" translate="yes" xml:space="preserve">
          <source>This returns NULL if the variable does not exist.</source>
          <target state="translated">Это возвращает NULL,если переменная не существует.</target>
        </trans-unit>
        <trans-unit id="7a696a06774c6f3002eeb51ec2f2001513d53029" translate="yes" xml:space="preserve">
          <source>This returns a data structure containing the version requirements for a given module or undef if the given module has no requirements. This should not be used for version checks (see &lt;a href=&quot;#accepts_module&quot;&gt;&quot;accepts_module&quot;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37bfa051bc09e91f6aa8c8e068658f22a9b05b4" translate="yes" xml:space="preserve">
          <source>This returns a glob reference for the symbol table entry of VARNAME in the package of the compartment. VARNAME must be the &lt;b&gt;name&lt;/b&gt; of a variable without any leading type marker. For example:</source>
          <target state="translated">Это возвращает глобальную ссылку для записи таблицы символов ПЕРЕМЕННОЙ в пакете отсека. VARNAME должно быть &lt;b&gt;именем&lt;/b&gt; переменной без начального маркера типа. Например:</target>
        </trans-unit>
        <trans-unit id="4846a06785f0daaeee2213d80f23082c8fa4965c" translate="yes" xml:space="preserve">
          <source>This returns a handy stringified value of this object. This is useful for debugging, as in:</source>
          <target state="translated">Это возвращает удобное строковое значение этого объекта.Это полезно для отладки:</target>
        </trans-unit>
        <trans-unit id="ed3e8770a5f12bfd2e6e0013e9c81234e1f2fd4f" translate="yes" xml:space="preserve">
          <source>This returns a list of all facets that have been loaded using the &lt;code&gt;load_facet()&lt;/code&gt; method. This will not return any classes that have not been loaded, or have been loaded directly without a call to &lt;code&gt;load_facet()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ea704d04f7c3ec75b7f4e64aa2fc6d627bedce" translate="yes" xml:space="preserve">
          <source>This returns a list of the elements of the op's aux data structure, or a null list if there is no aux. What will be returned depends on the object's type, but will typically be a collection of &lt;code&gt;B::IV&lt;/code&gt; , &lt;code&gt;B::GV&lt;/code&gt; , etc. objects. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="translated">Это возвращает список элементов вспомогательной структуры данных op или нулевой список, если вспомогательных данных нет. Что будет возвращено, зависит от типа объекта, но обычно это коллекция объектов &lt;code&gt;B::IV&lt;/code&gt; , &lt;code&gt;B::GV&lt;/code&gt; и т. Д. &lt;code&gt;cv&lt;/code&gt; - это объект &lt;code&gt;B::CV&lt;/code&gt; представляющий подпрограмму, в которой содержится операция.</target>
        </trans-unit>
        <trans-unit id="18b3e284330afc61e3a6c84779d9500461f4397e" translate="yes" xml:space="preserve">
          <source>This returns a list of the elements of the op's aux data structure, or a null list if there is no aux. What will be returned depends on the object's type, but will typically be a collection of &lt;code&gt;B::IV&lt;/code&gt;, &lt;code&gt;B::GV&lt;/code&gt;, etc. objects. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c4d2eacb966527e478f0083cb85da673514051" translate="yes" xml:space="preserve">
          <source>This returns a list of the names of all the installed modules. The perl 'core' is given the special name 'Perl'.</source>
          <target state="translated">Возвращается список названий всех установленных модулей.Perl 'core' получает специальное название 'Perl'.</target>
        </trans-unit>
        <trans-unit id="14379e40e50bf7d9283b3df7b37c3928bd424f74" translate="yes" xml:space="preserve">
          <source>This returns a new CPAN::Meta::Requirements object. It takes an optional hash reference argument. Currently, only one key is supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531b8c5d5e45b476d43548e396af61e47ca0e014" translate="yes" xml:space="preserve">
          <source>This returns a new Feature object. The &lt;code&gt;%spec&lt;/code&gt; argument to the constructor should be the same as the value of the &lt;code&gt;optional_feature&lt;/code&gt; entry in the distmeta. It must contain entries for &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;prereqs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39fe91e6096e4528d2eface949d54878f13adb3" translate="yes" xml:space="preserve">
          <source>This returns a new parser object, where</source>
          <target state="translated">Это возвращает новый объект анализатора,где</target>
        </trans-unit>
        <trans-unit id="c0e359e0a6bfe07d5ae556f45550772e1dc21138" translate="yes" xml:space="preserve">
          <source>This returns a normal Perl scalar from $x. It is used automatically whenever a scalar is needed, for instance in array index operations.</source>
          <target state="translated">Это возвращает нормальный Perl скаляр из $x.Он используется автоматически всякий раз,когда необходим скаляр,например,в операциях с индексами массивов.</target>
        </trans-unit>
        <trans-unit id="39af602c2add0567b4eacfb622fe97070c79fecd" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash describing the requirements using the strings in the &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bedda000844c8f0e165c8e9491e25dc6f787dac" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has short general category names (such as &lt;code&gt;Lu&lt;/code&gt; , &lt;code&gt;Nd&lt;/code&gt; , &lt;code&gt;Zs&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; ) as keys and long names (such as &lt;code&gt;UppercaseLetter&lt;/code&gt; , &lt;code&gt;DecimalNumber&lt;/code&gt; , &lt;code&gt;SpaceSeparator&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; ) as values. The hash is reversible in case you need to go from the long names to the short names. The general category is the one returned from &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; under the &lt;code&gt;category&lt;/code&gt; key.</source>
          <target state="translated">Это возвращает ссылку на хэш , который имеет короткие имена общей категории (например, &lt;code&gt;Lu&lt;/code&gt; , &lt;code&gt;Nd&lt;/code&gt; , &lt;code&gt;Zs&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; ) в качестве ключей и длинных имен (например, &lt;code&gt;UppercaseLetter&lt;/code&gt; , &lt;code&gt;DecimalNumber&lt;/code&gt; , &lt;code&gt;SpaceSeparator&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; ) в качестве значений. Хеш обратим, если вам нужно перейти от длинных имен к коротким. Общая категория - это категория, возвращаемая &lt;a href=&quot;#charinfo()&quot;&gt;функцией charinfo ()&lt;/a&gt; под ключом &lt;code&gt;category&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="039f30ebcd1468ad00dd473984fb486ddd84fa51" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has short general category names (such as &lt;code&gt;Lu&lt;/code&gt;, &lt;code&gt;Nd&lt;/code&gt;, &lt;code&gt;Zs&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;) as keys and long names (such as &lt;code&gt;UppercaseLetter&lt;/code&gt;, &lt;code&gt;DecimalNumber&lt;/code&gt;, &lt;code&gt;SpaceSeparator&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;) as values. The hash is reversible in case you need to go from the long names to the short names. The general category is the one returned from &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; under the &lt;code&gt;category&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c58feecc3765e5c4080f925afe0ce2010395de" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has the short bidi (bidirectional) type names (such as &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;R&lt;/code&gt; ) as keys and long names (such as &lt;code&gt;Left-to-Right&lt;/code&gt; , &lt;code&gt;Right-to-Left&lt;/code&gt; ) as values. The hash is reversible in case you need to go from the long names to the short names. The bidi type is the one returned from &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; under the &lt;code&gt;bidi&lt;/code&gt; key. For the exact meaning of the various bidi classes the Unicode TR9 is recommended reading: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (as of Unicode 5.0.0)</source>
          <target state="translated">Это возвращает ссылку на хеш, который имеет короткие двунаправленные (двунаправленные) имена типов (например, &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;R&lt;/code&gt; ) в качестве ключей и длинные имена (например, &lt;code&gt;Left-to-Right&lt;/code&gt; , &lt;code&gt;Right-to-Left&lt;/code&gt; ) в качестве значений. Хеш обратим, если вам нужно перейти от длинных имен к коротким. Тип двунаправленного &lt;a href=&quot;#charinfo()&quot;&gt;текста&lt;/a&gt; - это тот, который возвращается функцией charinfo () под ключом &lt;code&gt;bidi&lt;/code&gt; текста . Чтобы узнать точное значение различных классов двунаправленного текста, рекомендуется прочитать Unicode TR9: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; ( начиная с Unicode 5.0.0)</target>
        </trans-unit>
        <trans-unit id="48267796da0925cc66914e24ff7b670270826077" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has the short bidi (bidirectional) type names (such as &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;) as keys and long names (such as &lt;code&gt;Left-to-Right&lt;/code&gt;, &lt;code&gt;Right-to-Left&lt;/code&gt;) as values. The hash is reversible in case you need to go from the long names to the short names. The bidi type is the one returned from &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; under the &lt;code&gt;bidi&lt;/code&gt; key. For the exact meaning of the various bidi classes the Unicode TR9 is recommended reading: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (as of Unicode 5.0.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75d5049d79453d5b8c6ef528d7b4bbb5dbbb29f" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has the short bidi (bidirectional) type names (such as &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;) as keys and long names (such as &lt;code&gt;Left-to-Right&lt;/code&gt;, &lt;code&gt;Right-to-Left&lt;/code&gt;) as values. The hash is reversible in case you need to go from the long names to the short names. The bidi type is the one returned from &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; under the &lt;code&gt;bidi&lt;/code&gt; key. For the exact meaning of the various bidi classes the Unicode TR9 is recommended reading: &lt;a href=&quot;https://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (as of Unicode 5.0.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e684e737bcd2717e8bbc64c2a24292cf8407953" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash whose keys are all the distinct Unicode (no Perl extension) properties, and whose values are the respective values for those properties for the input &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6e4381af622706d0b561391364ef549fe16051" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash whose keys are all the distinct Unicode (no Perl extension) properties, and whose values are the respective values for those properties for the input &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;.</source>
          <target state="translated">Это возвращает ссылку на хэш, ключами которого являются все отдельные свойства Unicode (без расширения Perl), а значениями являются соответствующие значения этих свойств для входного &lt;a href=&quot;#code-point-argument&quot;&gt;аргумента кодовой точки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92aa49cb1c3f622edac6a155f13e38f83b6dfb08" translate="yes" xml:space="preserve">
          <source>This returns a scalar reference to the string that this token holds. This can be useful if you don't want to memory-copy the potentially large text value (well, as large as a paragraph or a verbatim block) as calling $token-&amp;gt;text would do.</source>
          <target state="translated">Это возвращает скалярную ссылку на строку, которую содержит этот токен. Это может быть полезно, если вы не хотите копировать в память потенциально большое текстовое значение (ну, размером с абзац или дословный блок), как при вызове $ token-&amp;gt; text.</target>
        </trans-unit>
        <trans-unit id="34145279dcfb22813c0a829b74bb6750ab581547" translate="yes" xml:space="preserve">
          <source>This returns a string containing the version requirements for a given module in the format described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; or undef if the given module has no requirements. This should only be used for informational purposes such as error messages and should not be interpreted or used for comparison (see &lt;a href=&quot;#accepts_module&quot;&gt;&quot;accepts_module&quot;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab22c2c85c0520c74858caf823a5761f4144c2f" translate="yes" xml:space="preserve">
          <source>This returns a string of the form &quot;AUTHORID/TARBALL&quot;. If you want the full path and filename to this distribution on a CPAN mirror, then it is &lt;code&gt;.../authors/id/A/AU/AUTHORID/TARBALL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd7e0058fbe245746ba269fcc6ddbdc3f189037" translate="yes" xml:space="preserve">
          <source>This returns a string reporting the $VERSION value from your module (and its classname) as well as the $VERSION value of Pod::Simple. Note that &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; requires output formats (wherever possible) to note this detail in a comment in the output format. For example, for some kind of SGML output format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d7fbfdd37ad836b426c426d9f57674d28b607c" translate="yes" xml:space="preserve">
          <source>This returns a textual representation of the object (likely to b useful for deparsing and debugging), or an empty string if the op type doesn't support this. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="translated">Это возвращает текстовое представление объекта (может быть полезно для депарсинга и отладки) или пустую строку, если тип операции не поддерживает это. &lt;code&gt;cv&lt;/code&gt; - это объект &lt;code&gt;B::CV&lt;/code&gt; представляющий подпрограмму, в которой содержится операция.</target>
        </trans-unit>
        <trans-unit id="589c10ddf68513d199db67a67a86aebabd06473d" translate="yes" xml:space="preserve">
          <source>This returns all the case foldings in the current version of Unicode in the form of a reference to a hash. Each key to the hash is the decimal representation of a Unicode character that has a casefold to other than itself. The casefold of a semi-colon is itself, so it isn't in the hash; likewise for a lowercase &quot;a&quot;, but there is an entry for a capital &quot;A&quot;. The hash value for each key is another hash, identical to what is returned by &lt;a href=&quot;#casefold%28%29&quot;&gt;&quot;casefold()&quot;&lt;/a&gt; if called with that code point as its argument. So the value &lt;code&gt;all_casefolds()-&amp;gt;{ord(&quot;A&quot;)}'&lt;/code&gt; is equivalent to &lt;code&gt;casefold(ord(&quot;A&quot;))&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5163e24143304da0c24ab6f05ddab5463a924808" translate="yes" xml:space="preserve">
          <source>This returns all the case foldings in the current version of Unicode in the form of a reference to a hash. Each key to the hash is the decimal representation of a Unicode character that has a casefold to other than itself. The casefold of a semi-colon is itself, so it isn't in the hash; likewise for a lowercase &quot;a&quot;, but there is an entry for a capital &quot;A&quot;. The hash value for each key is another hash, identical to what is returned by &lt;a href=&quot;#casefold()&quot;&gt;casefold()&lt;/a&gt; if called with that code point as its argument. So the value &lt;code&gt;all_casefolds()-&amp;gt;{&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;)}'&lt;/code&gt; is equivalent to &lt;code&gt;casefold(&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;))&lt;/code&gt; ;</source>
          <target state="translated">Это возвращает все сворачивания регистра в текущей версии Unicode в виде ссылки на хэш. Каждый ключ к хешу - это десятичное представление символа Юникода, имеющего регистр, отличный от него самого. Регистр двоеточия является самим собой, поэтому его нет в хеше; то же самое для строчной &amp;laquo;а&amp;raquo;, но есть запись для заглавной &amp;laquo;А&amp;raquo;. Хеш-значение для каждого ключа - это другой хэш, идентичный тому, который возвращается &lt;a href=&quot;#casefold()&quot;&gt;casefold (),&lt;/a&gt; если он вызывается с этой кодовой точкой в ​​качестве аргумента. Таким образом, значение &lt;code&gt;all_casefolds()-&amp;gt;{&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;)}'&lt;/code&gt; эквивалентно &lt;code&gt;casefold(&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;))&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="b91ef374b2d4fc8d006452914a0d544355b3b1bb" translate="yes" xml:space="preserve">
          <source>This returns information about the input &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; as a reference to a hash of fields as defined by the Unicode standard. If the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; is not assigned in the standard (i.e., has the general category &lt;code&gt;Cn&lt;/code&gt; meaning &lt;code&gt;Unassigned&lt;/code&gt;) or is a non-character (meaning it is guaranteed to never be assigned in the standard), &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc96752d9a4198cd2cf54c44f2b3b5b10b6e33c5" translate="yes" xml:space="preserve">
          <source>This returns information about the input &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; as a reference to a hash of fields as defined by the Unicode standard. If the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; is not assigned in the standard (i.e., has the general category &lt;code&gt;Cn&lt;/code&gt; meaning &lt;code&gt;Unassigned&lt;/code&gt; ) or is a non-character (meaning it is guaranteed to never be assigned in the standard), &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Это возвращает информацию об &lt;a href=&quot;#code-point-argument&quot;&gt;аргументе&lt;/a&gt; входной кодовой точки в качестве ссылки на хэш полей, как определено стандартом Unicode. Если &lt;a href=&quot;#code-point-argument&quot;&gt;аргумент кодовой точки&lt;/a&gt; не назначен в стандарте (т. Е. Имеет общую категорию &lt;code&gt;Cn&lt;/code&gt; ,что означает &lt;code&gt;Unassigned&lt;/code&gt; ) или не является символом (что означает, что он гарантированно никогда не будет назначен в стандарте), возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="720b1f4304617aafa21c73583795df1e0c36847e" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then an upgrade is required for the module to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b8690d330c57f118fa7767021e234753523c18" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then an upgrade would be a good idea, but not strictly necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f9c7b3513420a38f5822d9d3cf20a8ca38b03e" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then the module will not work. A newer version may work, but is not tested or verified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bdf5cea17e905e3d66cdc8ddc0f9c868e3cf58" translate="yes" xml:space="preserve">
          <source>This returns the (almost) locale-independent case folding of the character specified by the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;. (Starting in Perl v5.16, the core function &lt;code&gt;fc()&lt;/code&gt; returns the &lt;code&gt;full&lt;/code&gt; mapping (described below) faster than this does, and for entire strings.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91ab331ab9de210b4db7e921e9ff160732003a" translate="yes" xml:space="preserve">
          <source>This returns the (almost) locale-independent case folding of the character specified by the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;. (Starting in Perl v5.16, the core function &lt;code&gt;&lt;a href=&quot;../functions/fc&quot;&gt;fc()&lt;/a&gt;&lt;/code&gt; returns the &lt;code&gt;full&lt;/code&gt; mapping (described below) faster than this does, and for entire strings.)</source>
          <target state="translated">Это возвращает (почти) независимое от языкового стандарта сворачивание регистра символа, указанного &lt;a href=&quot;#code-point-argument&quot;&gt;аргументом кодовой точки&lt;/a&gt; . (Начиная с Perl v5.16, основная функция &lt;code&gt;&lt;a href=&quot;../functions/fc&quot;&gt;fc()&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;full&lt;/code&gt; отображение (описанное ниже) быстрее, чем это, и для целых строк.)</target>
        </trans-unit>
        <trans-unit id="91677229ee695edb8db59966a9bf52f69db7141f" translate="yes" xml:space="preserve">
          <source>This returns the ExtUtils::Packlist object for the specified module.</source>
          <target state="translated">При этом возвращается объект ExtUtils::Packlist для указанного модуля.</target>
        </trans-unit>
        <trans-unit id="dffc96fcce0657afd70270ea32ed9cfdcbbe0c11" translate="yes" xml:space="preserve">
          <source>This returns the arguments that should be used to construct the proper &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc91311f7c5bdfc09fe1efb765e76b3d3c015ee2" translate="yes" xml:space="preserve">
          <source>This returns the count of Pod paragraphs seen so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaab350d04c0aa0ce59d8ea55f9203083f5944f" translate="yes" xml:space="preserve">
          <source>This returns the data structure used for tables by &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c8292002290e5d7ad79eff5f6aca62a17b0302" translate="yes" xml:space="preserve">
          <source>This returns the file format version as number. It is a string like &quot;2.007&quot;. This value is suitable for numeric comparisons.</source>
          <target state="translated">При этом возвращается версия формата файла в виде номера.Это строка типа &quot;2.007&quot;.Это значение подходит для численных сравнений.</target>
        </trans-unit>
        <trans-unit id="b28a3d3b844d30822d117ab98847259c42e20f28" translate="yes" xml:space="preserve">
          <source>This returns the file format version. It is a string like &quot;2.7&quot;.</source>
          <target state="translated">При этом возвращается версия формата файла.Это строка типа &quot;2.7&quot;.</target>
        </trans-unit>
        <trans-unit id="88abd5e16e9b3ba61f0f89ea977172fa6b064d17" translate="yes" xml:space="preserve">
          <source>This returns the filename that this parser object was set to read from.</source>
          <target state="translated">Это возвращает имя файла,из которого этот объект парсера был настроен на чтение.</target>
        </trans-unit>
        <trans-unit id="bccff29a1ac784a814e5e53a8041bdec5c902b0f" translate="yes" xml:space="preserve">
          <source>This returns the full path of the first occurrence to the file. Package names (eg 'A::B') are automatically converted to directory names in the selected directory. Additionally, '.pm', '.pl' and '.pod' are automatically appended to the search as required. (So, for example, under Unix, &quot;A::B&quot; is converted to &quot;somedir/A/B.pm&quot;, &quot;somedir/A/B.pod&quot;, or &quot;somedir/A/B.pl&quot;, as appropriate.)</source>
          <target state="translated">При этом возвращается полный путь первого вхождения в файл.Имена пакетов (например,'A::B')автоматически преобразуются в имена каталогов в выбранном каталоге.Кроме того,'.pm','.pl' и '.pod' автоматически добавляются к поиску по мере необходимости.(Так,например,в Unix,&quot;A::B&quot; преобразуется в &quot;somedir/A/B.pm&quot;,&quot;somedir/A/B.pod&quot; или &quot;somedir/A/B.pl&quot;,соответственно).</target>
        </trans-unit>
        <trans-unit id="2a501f04d237b4afdc751c24d97b1564c6c9be99" translate="yes" xml:space="preserve">
          <source>This returns the function name as a string (e.g. &quot;PL_ppaddr[OP_ADD]&quot;, &quot;PL_ppaddr[OP_RV2AV]&quot;).</source>
          <target state="translated">Это возвращает имя функции в виде строки (например,&quot;PL_ppaddr[OP_ADD]&quot;,&quot;PL_ppaddr[OP_RV2AV]&quot;).</target>
        </trans-unit>
        <trans-unit id="a6c7ba8cdf1911985e871524f867f03a73878f39" translate="yes" xml:space="preserve">
          <source>This returns the given noun form which is appropriate for the quantity &lt;code&gt;$number&lt;/code&gt; according to this language's conventions. &lt;code&gt;numerate&lt;/code&gt; is used internally by &lt;code&gt;quant&lt;/code&gt; to quantify nouns. Use it directly -- usually from bracket notation -- to avoid &lt;code&gt;quant&lt;/code&gt; 's implicit call to &lt;code&gt;numf&lt;/code&gt; and output of a numeric quantity.</source>
          <target state="translated">Это возвращает заданную форму существительного, которая соответствует количеству &lt;code&gt;$number&lt;/code&gt; соответствии с соглашениями этого языка. &lt;code&gt;numerate&lt;/code&gt; используется внутри &lt;code&gt;quant&lt;/code&gt; для количественного определения существительных. С его помощи можно непосредственно - обычно от обозначений квадратных скобок - чтобы избежать &lt;code&gt;quant&lt;/code&gt; &amp;laquo;s неявного вызова &lt;code&gt;numf&lt;/code&gt; и вывод числового количества.</target>
        </trans-unit>
        <trans-unit id="f3221ea44d138b99a98ddd26d5fa0b5a10d585e1" translate="yes" xml:space="preserve">
          <source>This returns the given noun form which is appropriate for the quantity &lt;code&gt;$number&lt;/code&gt; according to this language's conventions. &lt;code&gt;numerate&lt;/code&gt; is used internally by &lt;code&gt;quant&lt;/code&gt; to quantify nouns. Use it directly -- usually from bracket notation -- to avoid &lt;code&gt;quant&lt;/code&gt;'s implicit call to &lt;code&gt;numf&lt;/code&gt; and output of a numeric quantity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecd76e9b7635df85484a01189e6a2f492cf6d79" translate="yes" xml:space="preserve">
          <source>This returns the given number formatted nicely according to this language's conventions. Maketext's default method is mostly to just take the normal string form of the number (applying sprintf &quot;%G&quot; for only very large numbers), and then to add commas as necessary. (Except that we apply &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/,./.,/&lt;/a&gt;&lt;/code&gt; if $language-&amp;gt;{'numf_comma'} is true; that's a bit of a hack that's useful for languages that express two million as &quot;2.000.000&quot; and not as &quot;2,000,000&quot;).</source>
          <target state="translated">Это возвращает заданное число, отформатированное в хорошем соответствии с соглашениями этого языка. Метод Maketext по умолчанию в основном просто принимает обычную строковую форму числа (применяя sprintf &quot;% G&quot; только для очень больших чисел), а затем при необходимости добавляет запятые. (За исключением того, что мы применяем &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/,./.,/&lt;/a&gt;&lt;/code&gt; если $ language -&amp;gt; {'numf_comma'} истинно; это своего рода уловка, полезная для языков, в которых два миллиона выражаются как &quot;2.000.000&quot;, а не как &quot; 2 000 000 &quot;).</target>
        </trans-unit>
        <trans-unit id="05a83ab19e6c9cde5d56340c6947ca203501a3b8" translate="yes" xml:space="preserve">
          <source>This returns the given number formatted nicely according to this language's conventions. Maketext's default method is mostly to just take the normal string form of the number (applying sprintf &quot;%G&quot; for only very large numbers), and then to add commas as necessary. (Except that we apply &lt;code&gt;tr/,./.,/&lt;/code&gt; if $language-&amp;gt;{'numf_comma'} is true; that's a bit of a hack that's useful for languages that express two million as &quot;2.000.000&quot; and not as &quot;2,000,000&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025fac90217d4ce617ea39a22bf3a99d01ca61a8" translate="yes" xml:space="preserve">
          <source>This returns the hashref that is the attribute set for this start-token. This is useful if (for example) you want to ask what all the attributes are -- you can just do &lt;code&gt;&lt;a href=&quot;../../functions/keys&quot;&gt;keys&lt;/a&gt; %{$token-&amp;gt;attr_hash}&lt;/code&gt;</source>
          <target state="translated">Это возвращает хэш-ссылку, которая является атрибутом, установленным для этого начального токена. Это полезно, если (например) вы хотите спросить, каковы все атрибуты - вы можете просто &lt;code&gt;&lt;a href=&quot;../../functions/keys&quot;&gt;keys&lt;/a&gt; %{$token-&amp;gt;attr_hash}&lt;/code&gt; &lt;a href=&quot;../../functions/keys&quot;&gt;ключи&lt;/a&gt; % {$ token-&amp;gt; attr_hash}</target>
        </trans-unit>
        <trans-unit id="5c00d82623e18153d6a353f47395dae6583b5a22" translate="yes" xml:space="preserve">
          <source>This returns the hashref that is the attribute set for this start-token. This is useful if (for example) you want to ask what all the attributes are -- you can just do &lt;code&gt;keys %{$token-&amp;gt;attr_hash}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a1d54ba9e2a0e72117dea2ff05555485f06342" translate="yes" xml:space="preserve">
          <source>This returns the name of the associated .packlist file</source>
          <target state="translated">Это возвращает имя ассоциированного файла .packlist</target>
        </trans-unit>
        <trans-unit id="1e09dcd49b996b5c9c29c7bd188efbeaabae3afb" translate="yes" xml:space="preserve">
          <source>This returns the next token object (which will be of a subclass of &lt;a href=&quot;Pod::Simple::PullParserToken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt;), or undef if the parser-stream has hit the end of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8714a4ea9c89be9e02bb0a484046217a2fdc2659" translate="yes" xml:space="preserve">
          <source>This returns the next token object (which will be of a subclass of &lt;a href=&quot;pullparsertoken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt;), or undef if the parser-stream has hit the end of the document.</source>
          <target state="translated">Это возвращает следующий объект-токен (который будет из подкласса &lt;a href=&quot;pullparsertoken&quot;&gt;Pod :: Simple :: PullParserToken&lt;/a&gt; ) или undef, если поток синтаксического анализатора достиг конца документа.</target>
        </trans-unit>
        <trans-unit id="db9439ac80b35bc802acd8f20ce2c7390e307d09" translate="yes" xml:space="preserve">
          <source>This returns the op description from the global C PL_op_desc array (e.g. &quot;addition&quot; &quot;array deref&quot;).</source>
          <target state="translated">Это возвращает описание операции из глобального массива C PL_op_desc (например,&quot;adding&quot; &quot;array deref&quot;).</target>
        </trans-unit>
        <trans-unit id="5681c12774f7d1547e4176d6eccb3ccd12074a1f" translate="yes" xml:space="preserve">
          <source>This returns the op name as a string (e.g. &quot;add&quot;, &quot;rv2av&quot;).</source>
          <target state="translated">Это возвращает имя операции в виде строки (например,&quot;add&quot;,&quot;rv2av&quot;).</target>
        </trans-unit>
        <trans-unit id="c03ab2186d312ee9f05759433ffaba12c8dd3636" translate="yes" xml:space="preserve">
          <source>This returns the potentially locale-dependent case mappings of the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;. The mappings may be longer than a single code point (which the basic Unicode case mappings as returned by &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; never are).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c24d1c30b8541d36722cb533fdf5d0b9d4b051d" translate="yes" xml:space="preserve">
          <source>This returns the potentially locale-dependent case mappings of the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;. The mappings may be longer than a single code point (which the basic Unicode case mappings as returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; never are).</source>
          <target state="translated">Это возвращает потенциально зависимые от локали сопоставления регистра &lt;a href=&quot;#code-point-argument&quot;&gt;аргумента кодовой точки&lt;/a&gt; . Сопоставления могут быть длиннее одной кодовой точки (чего никогда не бывает в базовых сопоставлениях регистра Unicode, возвращаемых &lt;a href=&quot;#charinfo()&quot;&gt;функцией charinfo ()&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="64bc8ef0666e73530b9a3f2cd195ef738c2d8851" translate="yes" xml:space="preserve">
          <source>This returns the string form of the table if it was set, otherwise it returns the string &lt;code&gt;&quot;&amp;lt;TABLE NOT DISPLAYED&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e407d9572ab9c5f99771767ba652986d36609117" translate="yes" xml:space="preserve">
          <source>This returns the tagname for this end-token object. For example, parsing a &quot;=head1 ...&quot; line will give you a start-token with the tagname of &quot;head1&quot;, token(s) for its content, and then an end-token with the tagname of &quot;head1&quot;.</source>
          <target state="translated">Это возвращает магнитное поле этому конечному объекту.Например,при разборе строки &quot;=head1 ...&quot; вы получите стартовый символ с именем &quot;head1&quot;,токен(ы)для его содержимого,а затем конечный символ с именем &quot;head1&quot;.</target>
        </trans-unit>
        <trans-unit id="1457f9cf582cb43f3b8ece06b77a4a774ea5edd5" translate="yes" xml:space="preserve">
          <source>This returns the tagname for this start-token object. For example, parsing a &quot;=head1 ...&quot; line will give you a start-token with the tagname of &quot;head1&quot;, token(s) for its content, and then an end-token with the tagname of &quot;head1&quot;.</source>
          <target state="translated">Это возвращает магнитное поле этому стартовому объекту.Например,при разборе строки &quot;=head1 ...&quot; вы получите старт-токен с тиканом &quot;head1&quot;,токен(ы)его содержимого,а затем конец-токен с тиканом &quot;head1&quot;.</target>
        </trans-unit>
        <trans-unit id="a92df26815537e43f9c0925776fd61d439836096" translate="yes" xml:space="preserve">
          <source>This returns the text that this token holds. For example, parsing C&amp;lt;foo&amp;gt; will return a C start-token, a text-token, and a C end-token. And if you want to get the &quot;foo&quot; out of the text-token, call &lt;code&gt;$token-&amp;gt;text&lt;/code&gt;</source>
          <target state="translated">Это возвращает текст, который содержит этот токен. Например, синтаксический анализ C &amp;lt;foo&amp;gt; вернет начальный токен C, текстовый токен и конечный токен C. И если вы хотите получить &quot;foo&quot; из текстового токена, вызовите &lt;code&gt;$token-&amp;gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37adaa267b32499cf66804411e8414b1ad1805e1" translate="yes" xml:space="preserve">
          <source>This returns the thread's context in the same manner as &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt;.</source>
          <target state="translated">Это возвращает контекст потока так же, как &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cadb33aaeb1401584260a466e314c67532c002d6" translate="yes" xml:space="preserve">
          <source>This returns the thread's context in the same manner as &lt;a href=&quot;perlfunc#wantarray&quot;&gt;wantarray()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65fe0dbb6e214f3cd7dbd02a6dc6c382b0c30da" translate="yes" xml:space="preserve">
          <source>This returns the type of the token. This will be either the string &quot;start&quot;, the string &quot;text&quot;, or the string &quot;end&quot;.</source>
          <target state="translated">Это возвращает тип токена.Это будет либо строка &quot;start&quot;,либо строка &quot;text&quot;,либо строка &quot;end&quot;.</target>
        </trans-unit>
        <trans-unit id="11b6f6f063cb5805a948af38969c126392d218a6" translate="yes" xml:space="preserve">
          <source>This returns the value of the</source>
          <target state="translated">Это возвращает значение</target>
        </trans-unit>
        <trans-unit id="58c9aa25d44f77824a03159b1475adf1a9714a16" translate="yes" xml:space="preserve">
          <source>This returns the value of the Unicode property given by the second parameter for the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; given by the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7567ac847e3dd9703ee4f767f192a1f4433a0b" translate="yes" xml:space="preserve">
          <source>This returns the value of the Unicode property given by the second parameter for the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; given by the first.</source>
          <target state="translated">Это возвращает значение свойства Unicode, заданное вторым параметром, для &lt;a href=&quot;#code-point-argument&quot;&gt;аргумента кодовой точки,&lt;/a&gt; заданного первым.</target>
        </trans-unit>
        <trans-unit id="00254886c0f76de134b6342f6c209f119eee2c52" translate="yes" xml:space="preserve">
          <source>This returns the version number for the specified module.</source>
          <target state="translated">При этом возвращается номер версии указанного модуля.</target>
        </trans-unit>
        <trans-unit id="28cb21f0ce04fc34237dafa4d05afb66efd55c58" translate="yes" xml:space="preserve">
          <source>This returns the version of the Unicode Character Database, in other words, the version of the Unicode standard the database implements. The version is a string of numbers delimited by dots (&lt;code&gt;'.'&lt;/code&gt; ).</source>
          <target state="translated">Это возвращает версию базы данных символов Unicode, другими словами, версию стандарта Unicode, которую реализует база данных. Версия - это строка чисел, разделенных точками ( &lt;code&gt;'.'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a289cd11d045f8591acb29dd41933e8954d58596" translate="yes" xml:space="preserve">
          <source>This returns the version of the Unicode Character Database, in other words, the version of the Unicode standard the database implements. The version is a string of numbers delimited by dots (&lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0537cb9604bd46fdc53aedf1ef4d31156ea69d21" translate="yes" xml:space="preserve">
          <source>This returns true if &lt;code&gt;$parser&lt;/code&gt; has read from a source, and come to the end of that source.</source>
          <target state="translated">Это возвращает истину, если &lt;code&gt;$parser&lt;/code&gt; прочитал из источника и подошел к концу этого источника.</target>
        </trans-unit>
        <trans-unit id="d892085e64119e5b73847e052d7936e4ec27fd45" translate="yes" xml:space="preserve">
          <source>This returns true if &lt;code&gt;$parser&lt;/code&gt; has read from a source, and has seen Pod content in it.</source>
          <target state="translated">Это возвращает true, если &lt;code&gt;$parser&lt;/code&gt; прочитал из источника и увидел в нем содержимое Pod.</target>
        </trans-unit>
        <trans-unit id="0b811ea00850392c2bee3b4f40af1e1b677b7142" translate="yes" xml:space="preserve">
          <source>This returns true only if there has been any real content seen for this document. Returns false in cases where the document contains content, but does not make use of any Pod markup.</source>
          <target state="translated">Это возвращает true только в том случае,если для этого документа было видно какое-либо реальное содержимое.Возвращает false в случаях,когда документ содержит содержимое,но не использует разметку Pod.</target>
        </trans-unit>
        <trans-unit id="e28605a00b749132376858f485353c17ca2a0f0d" translate="yes" xml:space="preserve">
          <source>This routine also returns a different number of arguments depending on the success or failure of the call to statfs. If there is an error, the error number is returned as a single-element array. If the call is successful, then a 7-element array is returned. Since only one argument is passed into this function, we need room on the stack to hold the 7 values which may be returned.</source>
          <target state="translated">Эта рутина также возвращает различное количество аргументов в зависимости от успеха или неудачи вызова statfs.В случае ошибки номер ошибки возвращается в виде одноэлементного массива.При успешном вызове возвращается 7-элементный массив.Поскольку в эту функцию передается только один аргумент,нам нужно место на стеке для хранения 7-ми значений,которые могут быть возвращены.</target>
        </trans-unit>
        <trans-unit id="5b820e747b00eb7161f8b3a6555a694bd263c329" translate="yes" xml:space="preserve">
          <source>This routine behaves identically to the final two forms. That is, it does not return &lt;b&gt;true&lt;/b&gt; if the code point has a decomposition consisting of another single code point, nor if its decomposition starts with a code point whose combining class is non-zero. Code points that meet either of these conditions should also not be produced by composition normalization, which is probably why you should use the &lt;code&gt;Full_Composition_Exclusion&lt;/code&gt; property instead, as shown above.</source>
          <target state="translated">Эта процедура ведет себя идентично двум последним формам. То есть он не возвращает &lt;b&gt;истину,&lt;/b&gt; если кодовая точка имеет декомпозицию, состоящую из другой единственной кодовой точки, или если ее декомпозиция начинается с кодовой точки, класс комбинирования которой не равен нулю. Точки кода, которые удовлетворяют любому из этих условий, также не должны создаваться нормализацией композиции, поэтому, вероятно, вам следует использовать вместо этого свойство &lt;code&gt;Full_Composition_Exclusion&lt;/code&gt; , как показано выше.</target>
        </trans-unit>
        <trans-unit id="e6cbcd70e8dd9e2b5edee3c69038ed73e9a903ad" translate="yes" xml:space="preserve">
          <source>This routine checks to see what types of magic &lt;code&gt;sv&lt;/code&gt; has. If the mg_type field is an uppercase letter, then the mg_obj is copied to &lt;code&gt;nsv&lt;/code&gt; , but the mg_type field is changed to be the lowercase letter.</source>
          <target state="translated">Эта процедура проверяет, какие типы магии есть у &lt;code&gt;sv&lt;/code&gt; . Если поле mg_type представляет собой прописную букву, тогда mg_obj копируется в &lt;code&gt;nsv&lt;/code&gt; , но поле mg_type изменяется на строчную букву.</target>
        </trans-unit>
        <trans-unit id="e4ebc0f1624cad62f6320cad80e7fcee1daed490" translate="yes" xml:space="preserve">
          <source>This routine checks to see what types of magic &lt;code&gt;sv&lt;/code&gt; has. If the mg_type field is an uppercase letter, then the mg_obj is copied to &lt;code&gt;nsv&lt;/code&gt;, but the mg_type field is changed to be the lowercase letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1147ded4271f3785411e40a784f62228ae86794d" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns a list of attributes, which may be empty. If passed invalid arguments, it uses die() (via &lt;a href=&quot;carp&quot;&gt;Carp::croak&lt;/a&gt;) to raise a fatal exception. If it can find an appropriate package name for a class method lookup, it will include the results from a &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; call in its return list, as described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;&quot;Package-specific Attribute Handling&quot;&lt;/a&gt; below. Otherwise, only &lt;a href=&quot;#Built-in-Attributes&quot;&gt;built-in attributes&lt;/a&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156fe43e5f5152548ce6f33bee1b7f0723071b2f" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns a list of attributes, which may be empty. If passed invalid arguments, it uses die() (via &lt;a href=&quot;carp&quot;&gt;Carp::croak&lt;/a&gt;) to raise a fatal exception. If it can find an appropriate package name for a class method lookup, it will include the results from a &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; call in its return list, as described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Package-specific Attribute Handling&lt;/a&gt; below. Otherwise, only &lt;a href=&quot;#Built-in-Attributes&quot;&gt;built-in attributes&lt;/a&gt; will be returned.</source>
          <target state="translated">Эта процедура ожидает единственный параметр - ссылку на подпрограмму или переменную. Он возвращает список атрибутов, который может быть пустым. Если переданы недопустимые аргументы, он использует die () (через &lt;a href=&quot;carp&quot;&gt;Carp :: croak&lt;/a&gt; ), чтобы вызвать фатальное исключение. Если он сможет найти подходящее имя пакета для поиска метода класса, он включит результаты &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; в свой список возврата, как описано в разделе &amp;laquo; &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Обработка атрибутов для конкретного пакета&amp;raquo;&lt;/a&gt; ниже. В противном случае будут возвращены только &lt;a href=&quot;#Built-in-Attributes&quot;&gt;встроенные атрибуты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cbd8c6e15630953581b673b778fa0654a81555" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns the built-in type of the referenced variable, ignoring any package into which it might have been blessed. This can be useful for determining the</source>
          <target state="translated">Эта рутина ожидает один параметр-ссылку на подпрограмму или переменную.Он возвращает встроенный тип ссылающейся переменной,игнорируя любой пакет,в котором она могла бы быть благословлена.Это может быть полезно для определения</target>
        </trans-unit>
        <trans-unit id="a441bbdb5a22183756c86532b0bd8538c60db634" translate="yes" xml:space="preserve">
          <source>This routine is automatically used whenever a scalar is required:</source>
          <target state="translated">Эта рутина используется автоматически всякий раз,когда требуется скаляр:</target>
        </trans-unit>
        <trans-unit id="9d5c36985c03c1b5c7bc41a618c507ece2116559" translate="yes" xml:space="preserve">
          <source>This routine is just a simple interface into GetOSVersion(). More specific or demanding situations should use that instead. Another option would be to use POSIX::uname(), however the latter appears to report only the OS family name and not the specific OS. In scalar context it returns just the ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af05f40d5a349a9cf28386764e38317c02e23a0c" translate="yes" xml:space="preserve">
          <source>This routine provides word completion on the list of words in the array (or array ref).</source>
          <target state="translated">Эта процедура обеспечивает завершение слов в списке слов в массиве (или ссылка на массив).</target>
        </trans-unit>
        <trans-unit id="a12916af343198cbe644e34418361cddb6245ff7" translate="yes" xml:space="preserve">
          <source>This routine returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the Unicode version being used is so early that it doesn't have this property.</source>
          <target state="translated">Эта подпрограмма возвращает &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если используемая версия Unicode настолько ранняя, что у нее нет этого свойства.</target>
        </trans-unit>
        <trans-unit id="3f4e8ad32963f7898d4d526c86c643ef2d8a5ac8" translate="yes" xml:space="preserve">
          <source>This routine returns &lt;code&gt;undef&lt;/code&gt; if the Unicode version being used is so early that it doesn't have this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ceccec63478c5c011c3caa8244abb6108d41c" translate="yes" xml:space="preserve">
          <source>This routine returns a pointer to a &lt;code&gt;MAGIC&lt;/code&gt; structure stored in the SV. If the SV does not have that magical feature, &lt;code&gt;NULL&lt;/code&gt; is returned. If the SV has multiple instances of that magical feature, the first one will be returned. &lt;code&gt;mg_findext&lt;/code&gt; can be used to find a &lt;code&gt;MAGIC&lt;/code&gt; structure of an SV based on both its magic type and its magic virtual table:</source>
          <target state="translated">Эта процедура возвращает указатель на структуру &lt;code&gt;MAGIC&lt;/code&gt; , хранящуюся в SV. Если SV не имеет этой волшебной особенности, возвращается &lt;code&gt;NULL&lt;/code&gt; . Если у SV есть несколько экземпляров этого волшебного свойства, будет возвращен первый. &lt;code&gt;mg_findext&lt;/code&gt; можно использовать для поиска &lt;code&gt;MAGIC&lt;/code&gt; структуры SV на основе как его магического типа, так и его волшебной виртуальной таблицы:</target>
        </trans-unit>
        <trans-unit id="be064f7d7fc8c5c81c03e6f7693444f3da761d4d" translate="yes" xml:space="preserve">
          <source>This runs all the given</source>
          <target state="translated">Это все соответствует</target>
        </trans-unit>
        <trans-unit id="5f9d330768a086b11c3fee8aaebb21d2fcbcb969" translate="yes" xml:space="preserve">
          <source>This runs some basic sanity tests on the source tree and helps catch basic errors before you submit a patch.</source>
          <target state="translated">Это запускает некоторые базовые тесты на вменяемость дерева исходных текстов и помогает отловить основные ошибки до отправки патча.</target>
        </trans-unit>
        <trans-unit id="b456dbbb28104ac1fe79034d2719d013d951db2d" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;#chop&quot;&gt;chop&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;code&gt;$/&lt;/code&gt; (also known as $INPUT_RECORD_SEPARATOR in the &lt;code&gt;English&lt;/code&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt; ), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) or fixed-length record mode (&lt;code&gt;$/&lt;/code&gt; is a reference to an integer or the like; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;) chomp() won't remove anything. If VARIABLE is omitted, it chomps &lt;code&gt;$_&lt;/code&gt; . Example:</source>
          <target state="translated">Эта более безопасная версия &lt;a href=&quot;#chop&quot;&gt;chop&lt;/a&gt; удаляет любую завершающую строку, которая соответствует текущему значению &lt;code&gt;$/&lt;/code&gt; (также известному как $ INPUT_RECORD_SEPARATOR в &lt;code&gt;English&lt;/code&gt; модуле). Он возвращает общее количество символов, удаленных из всех его аргументов. Он часто используется для удаления новой строки из конца входной записи, когда вы беспокоитесь, что в последней записи может отсутствовать перевод строки. В режиме абзаца ( &lt;code&gt;$/ = ''&lt;/code&gt; ) он удаляет все завершающие символы новой строки из строки. В режиме slurp ( &lt;code&gt;$/ = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) или режиме записи фиксированной длины ( &lt;code&gt;$/&lt;/code&gt; - это ссылка на целое число и т.п., см. &lt;a href=&quot;perlvar&quot;&gt;Perlvar&lt;/a&gt; ) chomp () ничего не удалит. Если VARIABLE опущен, он грызет &lt;code&gt;$_&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="f11cb2092730214fd2c5570df1288f5c170ff762" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;#chop-VARIABLE&quot;&gt;&lt;code&gt;chop&lt;/code&gt;&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (also known as &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in the &lt;a href=&quot;english&quot;&gt;&lt;code&gt;English&lt;/code&gt;&lt;/a&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt;), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = undef&lt;/code&gt;) or fixed-length record mode (&lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; is a reference to an integer or the like; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;), &lt;a href=&quot;#chomp-VARIABLE&quot;&gt;&lt;code&gt;chomp&lt;/code&gt;&lt;/a&gt; won't remove anything. If VARIABLE is omitted, it chomps &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade7671cda06ea60596db7de673c42e7e9809682" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;code&gt;$/&lt;/code&gt; (also known as $INPUT_RECORD_SEPARATOR in the &lt;code&gt;English&lt;/code&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt; ), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) or fixed-length record mode (&lt;code&gt;$/&lt;/code&gt; is a reference to an integer or the like; see &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;) chomp() won't remove anything. If VARIABLE is omitted, it chomps &lt;code&gt;$_&lt;/code&gt; . Example:</source>
          <target state="translated">Эта более безопасная версия &lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt; удаляет любую завершающую строку, которая соответствует текущему значению &lt;code&gt;$/&lt;/code&gt; (также известному как $ INPUT_RECORD_SEPARATOR в &lt;code&gt;English&lt;/code&gt; модуле). Он возвращает общее количество символов, удаленных из всех его аргументов. Он часто используется для удаления новой строки из конца входной записи, когда вы беспокоитесь, что в последней записи может отсутствовать перевод строки. В режиме абзаца ( &lt;code&gt;$/ = ''&lt;/code&gt; ) он удаляет все завершающие символы новой строки из строки. В режиме slurp ( &lt;code&gt;$/ = &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) или режиме записи фиксированной длины ( &lt;code&gt;$/&lt;/code&gt; - это ссылка на целое число и т.п., см. &lt;a href=&quot;../perlvar&quot;&gt;Perlvar&lt;/a&gt; ) chomp () ничего не удалит. Если VARIABLE опущен, он грызет &lt;code&gt;$_&lt;/code&gt; . Пример:</target>
        </trans-unit>
        <trans-unit id="29322e1fae611c7a4ec6b18f01c0e5539c007dbe" translate="yes" xml:space="preserve">
          <source>This same method is available from pure perl via, &lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt; же метод доступен из чистого Perl через mro :: method_changed_in (имя класса) .</target>
        </trans-unit>
        <trans-unit id="3881ba4a6ee9c9f7a39f8b6e30cf077c3df62fb1" translate="yes" xml:space="preserve">
          <source>This same method is available from pure perl via, &lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a4db1ab47139698e5958a2175645481a1041ec" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is a reference (ROK), which points to another SV which is a PVAV, an array. The array has one element, element zero, which is another SV. The field &lt;code&gt;FILL&lt;/code&gt; above indicates the last element in the array, similar to &lt;code&gt;$#$a&lt;/code&gt; .</source>
          <target state="translated">Это говорит о том, что &lt;code&gt;$a&lt;/code&gt; является ссылкой (ROK), которая указывает на другой SV, который является PVAV, массивом. В массиве есть один элемент, нулевой элемент, который является другим SV. Поле &lt;code&gt;FILL&lt;/code&gt; выше указывает последний элемент в массиве, аналогично &lt;code&gt;$#$a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9184d54b5dc37c9e6366802801d705be70172a95" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is a reference (ROK), which points to another SV which is a PVAV, an array. The array has one element, element zero, which is another SV. The field &lt;code&gt;FILL&lt;/code&gt; above indicates the last element in the array, similar to &lt;code&gt;$#$a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036ebde834d76ddc89809412a48e08bc1aad5dd1" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is an SV, a scalar. The scalar is an IV, a number. Its reference count is 1. It has the &lt;code&gt;IOK&lt;/code&gt; flag set, meaning it is currently being evaluated as a number. Because IOK is set we look at the IV item to see what is in the scalar.</source>
          <target state="translated">Это говорит о том, что &lt;code&gt;$a&lt;/code&gt; - это SV, скаляр. Скаляр - это IV, число. Его счетчик ссылок равен 1. У него установлен флаг &lt;code&gt;IOK&lt;/code&gt; , что означает, что он в настоящее время оценивается как число. Поскольку IOK установлен, мы смотрим на элемент IV, чтобы увидеть, что находится в скаляре.</target>
        </trans-unit>
        <trans-unit id="2536195f9e270d7a0608ccd9b92c67b39acf3e86" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is an SV, a scalar. The scalar type is a PVIV, which is capable of holding an integer (IV) and/or a string (PV) value. The scalar's head is allocated at address 0xbe9a8, while the body is at 0xbc288. Its reference count is 1. It has the &lt;code&gt;POK&lt;/code&gt; flag set, meaning its current PV field is valid. Because POK is set we look at the PV item to see what is in the scalar. The \0 at the end indicate that this PV is properly NUL-terminated. Note that the IV field still contains its old numeric value, but because FLAGS doesn't have IOK set, we must ignore the IV item. CUR indicates the number of characters in the PV. LEN indicates the number of bytes allocated for the PV (at least one more than CUR, because LEN includes an extra byte for the end-of-string marker, then usually rounded up to some efficient allocation unit).</source>
          <target state="translated">Это говорит о том, что &lt;code&gt;$a&lt;/code&gt; - это SV, скаляр. Скалярный тип - это PVIV, который может содержать целочисленное (IV) и / или строковое (PV) значение. Голова скаляра размещается по адресу 0xbe9a8, а тело - по адресу 0xbc288. Его количество ссылок равно 1. Он имеет &lt;code&gt;POK&lt;/code&gt; установлен флаг, означающий, что его текущее поле PV является действительным. Поскольку POK установлен, мы смотрим на элемент PV, чтобы увидеть, что находится в скаляре. \ 0 в конце указывает, что этот PV правильно завершен NUL. Обратите внимание, что поле IV по-прежнему содержит свое старое числовое значение, но поскольку для FLAGS не установлен IOK, мы должны игнорировать элемент IV. CUR указывает количество символов в PV. LEN указывает количество байтов, выделенных для PV (по крайней мере, на один больше, чем CUR, потому что LEN включает дополнительный байт для маркера конца строки, который обычно округляется до некоторой эффективной единицы распределения).</target>
        </trans-unit>
        <trans-unit id="d4038eb2f65cf90ff5c5db0ff06612a08d942853" translate="yes" xml:space="preserve">
          <source>This says that records are delimited by the string &lt;code&gt;es&lt;/code&gt; . If the file contained the following data:</source>
          <target state="translated">Это говорит о том, что записи разделяются строкой &lt;code&gt;es&lt;/code&gt; . Если файл содержал следующие данные:</target>
        </trans-unit>
        <trans-unit id="e7ff66ceeac2fbc00d45f5c00f7c3466cddbfb77" translate="yes" xml:space="preserve">
          <source>This says that records are delimited by the string &lt;code&gt;es&lt;/code&gt;. If the file contained the following data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f732b3da7c2a158f6a684ddbc311ca908a5e5b" translate="yes" xml:space="preserve">
          <source>This says what packages are internal to Perl. &lt;code&gt;Carp&lt;/code&gt; will never report an error as being from a line in a package that is internal to Perl. For example:</source>
          <target state="translated">Это говорит о том, какие пакеты являются внутренними для Perl. &lt;code&gt;Carp&lt;/code&gt; никогда не будет сообщать об ошибке как об ошибке в строке внутреннего пакета Perl. Например:</target>
        </trans-unit>
        <trans-unit id="94c9a814257648d20b0d4f2bf7acb2782a18b6ea" translate="yes" xml:space="preserve">
          <source>This says which packages are internal to Perl's warning system. For generating a full stack backtrace this is the same as being internal to Perl, the stack backtrace will not start inside packages that are listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . But it is slightly different for the summary message generated by &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt; . There errors will not be reported on any lines that are calling packages in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</source>
          <target state="translated">Это говорит о том, какие пакеты являются внутренними для системы предупреждений Perl. Для генерации полной трассировки стека это то же самое, что и внутренняя для Perl, трассировка стека не запускается внутри пакетов, перечисленных в &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Но это немного отличается для краткого сообщения , генерируемого &lt;code&gt;carp&lt;/code&gt; или &lt;code&gt;croak&lt;/code&gt; . Ошибки не будут сообщаться ни в одной строке, вызывающей пакеты в &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84798169adfcecd51c1ec3874bbf65c79b20278e" translate="yes" xml:space="preserve">
          <source>This says which packages are internal to Perl's warning system. For generating a full stack backtrace this is the same as being internal to Perl, the stack backtrace will not start inside packages that are listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;. But it is slightly different for the summary message generated by &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt;. There errors will not be reported on any lines that are calling packages in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31106a1a20d4ea51da0f7d90c3fe4fb2b5ff8f01" translate="yes" xml:space="preserve">
          <source>This scenario will mostly be applicable to code that is meant to be called from within destructors, asynchronous callbacks, and signal handlers. In such situations, where the code being called has little relation to the surrounding dynamic context, the main program needs to be insulated from errors in the called code, even if they can't be handled intelligently. It may also be useful to do this with code for &lt;code&gt;__DIE__&lt;/code&gt; or &lt;code&gt;__WARN__&lt;/code&gt; hooks, and &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">Этот сценарий в основном применим к коду, который предназначен для вызова из деструкторов, асинхронных обратных вызовов и обработчиков сигналов. В таких ситуациях, когда вызываемый код имеет мало отношения к окружающему динамическому контексту, основную программу необходимо изолировать от ошибок в вызываемом коде, даже если они не могут быть обработаны разумно. Он также может быть полезно сделать это с кодом для &lt;code&gt;__DIE__&lt;/code&gt; или &lt;code&gt;__WARN__&lt;/code&gt; крючков и &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; функций.</target>
        </trans-unit>
        <trans-unit id="36ac4667cace4096dfbe5b4c50d550b72cbd4224" translate="yes" xml:space="preserve">
          <source>This scenario will mostly be applicable to code that is meant to be called from within destructors, asynchronous callbacks, and signal handlers. In such situations, where the code being called has little relation to the surrounding dynamic context, the main program needs to be insulated from errors in the called code, even if they can't be handled intelligently. It may also be useful to do this with code for &lt;code&gt;__DIE__&lt;/code&gt; or &lt;code&gt;__WARN__&lt;/code&gt; hooks, and &lt;code&gt;tie&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1df3253c4ccef59169cb5ac31f3ae1f9a3a9a53" translate="yes" xml:space="preserve">
          <source>This script provides a command interface (not a shell) to CPAN. At the moment it uses CPAN.pm to do the work, but it is not a one-shot command runner for CPAN.pm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17cbd723cbdc191dc4fdc562d2ff451e857ff96" translate="yes" xml:space="preserve">
          <source>This script shows how to override the default sorting algorithm that BTREE uses. Instead of using the normal lexical ordering, a case insensitive compare function will be used.</source>
          <target state="translated">Этот скрипт показывает,как переопределить алгоритм сортировки по умолчанию,используемый BTREE.Вместо обычной лексической сортировки будет использоваться нечувствительная к регистру функция сравнения.</target>
        </trans-unit>
        <trans-unit id="af317b7379a832e3b0678b6eea769f242beb3e07" translate="yes" xml:space="preserve">
          <source>This script,</source>
          <target state="translated">Этот сценарий,</target>
        </trans-unit>
        <trans-unit id="86ea44fa36ed41d21548135cdfb2e7b1ad994fbc" translate="yes" xml:space="preserve">
          <source>This searches the directories given in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc448c949fa2502c3de5bd50cf25e079f49a973e" translate="yes" xml:space="preserve">
          <source>This section also applies to other overloaded math packages, like Math::String.</source>
          <target state="translated">Этот раздел также применим к другим перегруженным математическим пакетам,таким как Math::String.</target>
        </trans-unit>
        <trans-unit id="ef6d18fe35323b673cf86ded4be1699795588d00" translate="yes" xml:space="preserve">
          <source>This section applies fully to Perls starting with v5.22. Various caveats for earlier releases are in the &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;&quot;Earlier releases caveats&quot;&lt;/a&gt; subsection below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be390d54ea95c83e1fca1268a1911351d2f7df4c" translate="yes" xml:space="preserve">
          <source>This section applies fully to Perls starting with v5.22. Various caveats for earlier releases are in the &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;Earlier releases caveats&lt;/a&gt; subsection below.</source>
          <target state="translated">Этот раздел полностью применим к Perls, начиная с v5.22. Различные предостережения для более ранних релизов в &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;более ранних версиях предостережений&lt;/a&gt; подраздела ниже.</target>
        </trans-unit>
        <trans-unit id="56dd90ab92335c6f36e8ed1d4a60c84c97df21db" translate="yes" xml:space="preserve">
          <source>This section concerns the lookahead and lookbehind assertions. First, a little background.</source>
          <target state="translated">Этот раздел относится к утверждениям о внешнем виде и внешнем виде.Во-первых,небольшой фон.</target>
        </trans-unit>
        <trans-unit id="ab4a7c816ed65ffc082450cf0217f6cf1db2cf6e" translate="yes" xml:space="preserve">
          <source>This section deals with I/O and the &quot;f&quot; issues: filehandles, flushing, formats, and footers.</source>
          <target state="translated">В этом разделе рассматриваются вопросы,связанные с вводом/выводом и &quot;f&quot;:ручки файлов,промывка,форматы и нижние колонтитулы.</target>
        </trans-unit>
        <trans-unit id="c67dd2be244aa67b2c3982a2251efd0aba82da6e" translate="yes" xml:space="preserve">
          <source>This section deals with general Perl language issues that don't clearly fit into any of the other sections.</source>
          <target state="translated">В этом разделе рассматриваются общие вопросы языка Perl,которые четко не вписываются ни в один из других разделов.</target>
        </trans-unit>
        <trans-unit id="4dacb0d5b8529783cda24f9a101a291fd790bb1b" translate="yes" xml:space="preserve">
          <source>This section deals with questions related to running web sites, sending and receiving email as well as general networking.</source>
          <target state="translated">В этом разделе рассматриваются вопросы,связанные с работой веб-сайтов,отправкой и получением электронной почты,а также общим сетевым взаимодействием.</target>
        </trans-unit>
        <trans-unit id="b8c7e75fcfcb79fa2aefcfcb9d7bd00c769af0ac" translate="yes" xml:space="preserve">
          <source>This section defines an interface that allows in-memory compression using the</source>
          <target state="translated">Этот раздел определяет интерфейс,позволяющий осуществлять внутрипамятное сжатие с помощью функции</target>
        </trans-unit>
        <trans-unit id="07d89dd508bd9a1955f604c65746a72fe10cd652" translate="yes" xml:space="preserve">
          <source>This section defines an interface that allows in-memory uncompression using the</source>
          <target state="translated">Этот раздел определяет интерфейс,позволяющий осуществлять распаковку внутри памяти с помощью функции</target>
        </trans-unit>
        <trans-unit id="574b76a7c21f5d83dd373c1961cc34e2c0747c9f" translate="yes" xml:space="preserve">
          <source>This section defines the Version type, used by several fields in the CPAN Meta Spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3243853ef1a289c9e89d976c5c5c21cc63e5a678" translate="yes" xml:space="preserve">
          <source>This section defines the interface available that allows in-memory uncompression using the</source>
          <target state="translated">Этот раздел определяет доступный интерфейс,позволяющий осуществлять распаковку внутри памяти с помощью функции</target>
        </trans-unit>
        <trans-unit id="8adf59417e2d7f3c501610b406a6fa8b838974b3" translate="yes" xml:space="preserve">
          <source>This section describes how JSON::PP maps Perl values to JSON values and vice versa. These mappings are designed to &quot;do the right thing&quot; in most circumstances automatically, preserving round-tripping characteristics (what you put in comes out as something equivalent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0852ba843f17dcbe1940f17029f381d5d77f9" translate="yes" xml:space="preserve">
          <source>This section describes the accuracy/precision handling in Math::Big* as it used to be and as it is now, complete with an explanation of all terms and abbreviations.</source>
          <target state="translated">Этот раздел описывает обработку точности/точности в Math::Big*в том виде,в котором она была раньше,и в том виде,в котором она есть сейчас,с объяснением всех терминов и сокращений.</target>
        </trans-unit>
        <trans-unit id="06b4644a1d0abd71307ee2e3605d7fc2e4535b4d" translate="yes" xml:space="preserve">
          <source>This section describes the accuracy/precision handling in Math::BigInt and Math::BigFloat as it used to be and as it is now, complete with an explanation of all terms and abbreviations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec789fa26c9d8dfd2479d175b7e934018d065eea" translate="yes" xml:space="preserve">
          <source>This section describes the re-implementation of the tmpnam() and tmpfile() functions described in &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; using the mkstemp() from this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aef7a353c321f38285ab3f99461b24884c7fa4" translate="yes" xml:space="preserve">
          <source>This section describes the re-implementation of the tmpnam() and tmpfile() functions described in L</source>
          <target state="translated">В этом разделе описывается повторная реализация функций tmpnam()и tmpfile(),описанных в L</target>
        </trans-unit>
        <trans-unit id="5b6ee285a0e0ef806b91b3b763a8498277e66885" translate="yes" xml:space="preserve">
          <source>This section describes the recommended interface for generating temporary files and directories.</source>
          <target state="translated">В этом разделе описывается рекомендуемый интерфейс для генерации временных файлов и каталогов.</target>
        </trans-unit>
        <trans-unit id="69aa90134b4dce1d696ebb05a6dbb67cf8770a91" translate="yes" xml:space="preserve">
          <source>This section describes the steps to be performed to build PerlCE. You may find additional information about building perl for WinCE at &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt; and some pre-built binaries.</source>
          <target state="translated">В этом разделе описаны шаги, которые необходимо выполнить для сборки PerlCE. Вы можете найти дополнительную информацию о создании Perl для WinCE на &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt; и некоторых предварительно созданных двоичных файлах.</target>
        </trans-unit>
        <trans-unit id="11f3d56c367a6b305dcc2c5edd92d44276e1ff5b" translate="yes" xml:space="preserve">
          <source>This section describes the steps to be performed to build a Perl NLM and other associated NLMs.</source>
          <target state="translated">В этом разделе описаны шаги,которые необходимо выполнить для создания Perl NLM и других связанных с ним NLM.</target>
        </trans-unit>
        <trans-unit id="1019c06c85688bbdf3af5c6e3b95950cdf59effc" translate="yes" xml:space="preserve">
          <source>This section describes ways to call &lt;code&gt;open&lt;/code&gt; outside of best practices; you may encounter these uses in older code. Perl does not consider their use deprecated, exactly, but neither is it recommended in new code, for the sake of clarity and readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c6a4b67a7eaa7527571d5faec72b4bfebc75e4" translate="yes" xml:space="preserve">
          <source>This section documents functions to manipulate CVs which are code-values, or subroutines. For more information, see &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">В этом разделе описаны функции для управления CV, которые являются кодовыми значениями или подпрограммами. Для получения дополнительной информации см. &lt;a href=&quot;perlguts&quot;&gt;Perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33ac896f6350aabd5af3622467a85a4b6b744251" translate="yes" xml:space="preserve">
          <source>This section gives some details on all extensions that aren't just synonyms for compound-form Unicode properties (for those properties, you'll have to refer to the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr44&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="translated">В этом разделе приводятся некоторые подробности обо всех расширениях, которые не являются просто синонимами для свойств составной формы Unicode (для этих свойств вам придется обратиться к &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr44&quot;&gt;стандарту Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9319fc0cf40bc57d3c32a473ab7229f4845e3419" translate="yes" xml:space="preserve">
          <source>This section gives some details on all extensions that aren't just synonyms for compound-form Unicode properties (for those properties, you'll have to refer to the &lt;a href=&quot;https://www.unicode.org/reports/tr44&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954cb379e9610eb88d0cd37b6e5358601612440b" translate="yes" xml:space="preserve">
          <source>This section hopes to clarify how Perl handles quoted constructs. Although the most common reason to learn this is to unravel labyrinthine regular expressions, because the initial steps of parsing are the same for all quoting operators, they are all discussed together.</source>
          <target state="translated">В этом разделе мы надеемся прояснить,как Perl работает с цитируемыми конструкциями.Хотя наиболее распространенной причиной для изучения этого является распутывание лабиринтных регулярных выражений,так как начальные шаги разбора одинаковы для всех операторов кавычки,все они обсуждаются вместе.</target>
        </trans-unit>
        <trans-unit id="536fa6406d989d8eb5028cec20788cbdc6568c11" translate="yes" xml:space="preserve">
          <source>This section is about functions (really macros) that classify characters into types, such as punctuation versus alphabetic, etc. Most of these are analogous to regular expression character classes. (See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.) There are several variants for each class. (Not all macros have all variants; each item below lists the ones valid for it.) None are affected by &lt;code&gt;use bytes&lt;/code&gt;, and only the ones with &lt;code&gt;LC&lt;/code&gt; in the name are affected by the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7547891b2c07526eb3624e622a75bf7d7cccf2c6" translate="yes" xml:space="preserve">
          <source>This section is about functions (really macros) that classify characters into types, such as punctuation versus alphabetic, etc. Most of these are analogous to regular expression character classes. (See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt;.) There are several variants for each class. (Not all macros have all variants; each item below lists the ones valid for it.) None are affected by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , and only the ones with &lt;code&gt;LC&lt;/code&gt; in the name are affected by the current locale.</source>
          <target state="translated">Этот раздел посвящен функциям (на самом деле макросам), которые классифицируют символы по типам, например, пунктуация или алфавит и т. Д. Большинство из них аналогичны классам символов регулярных выражений. (См. &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;Классы символов POSIX в perlrecharclass&lt;/a&gt; .) Существует несколько вариантов для каждого класса. (Не все макросы имеют все варианты; в каждом элементе ниже перечислены действительные для него.) Ни на один из них не влияют &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;использования&lt;/a&gt; , и только на макросы с &lt;code&gt;LC&lt;/code&gt; в имени влияет текущий языковой стандарт.</target>
        </trans-unit>
        <trans-unit id="e9ab2821650c93c09f64d44ff30564f17238787a" translate="yes" xml:space="preserve">
          <source>This section is also taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeda1d72fad19d0a6a9f82fe55d9f33ab10382a" translate="yes" xml:space="preserve">
          <source>This section is intended to supplement and clarify the discussion in &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;&quot;Command Paragraph&quot; in perlpod&lt;/a&gt;. These are the currently recognized Pod commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919f2203b8f136316a99d5a21a115c2a5759b1a" translate="yes" xml:space="preserve">
          <source>This section is intended to supplement and clarify the discussion in &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;Command Paragraph in perlpod&lt;/a&gt;. These are the currently recognized Pod commands:</source>
          <target state="translated">Этот раздел предназначен для дополнения и пояснения обсуждения в &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;абзаце команд в perlpod&lt;/a&gt; . Это известные в настоящее время команды Pod:</target>
        </trans-unit>
        <trans-unit id="12d39af9317de3b208731a0e9f6172ef3ca0985f" translate="yes" xml:space="preserve">
          <source>This section is just an outline of some of the things code in a compartment might do (intentionally or unintentionally) which can have an effect outside the compartment.</source>
          <target state="translated">Этот раздел представляет собой лишь набросок некоторых вещей,которые код в помещении может делать (намеренно или непреднамеренно)и которые могут иметь эффект за пределами помещения.</target>
        </trans-unit>
        <trans-unit id="afce53c6f9505fd215e3565d5b9cbd7590482493" translate="yes" xml:space="preserve">
          <source>This section is only necessary for those who want to write a compiler backend module that can be used via this module.</source>
          <target state="translated">Данный раздел необходим только тем,кто хочет написать модуль бэкэнда компилятора,который может быть использован через этот модуль.</target>
        </trans-unit>
        <trans-unit id="1d2dead1ebaa9a0daf17a7735104700bab6a62c1" translate="yes" xml:space="preserve">
          <source>This section is only relevant if you want to use the &lt;code&gt;FOOBAR::DATA&lt;/code&gt; together with the &lt;b&gt;SelfLoader&lt;/b&gt;.</source>
          <target state="translated">Этот раздел актуален только в том случае, если вы хотите использовать &lt;code&gt;FOOBAR::DATA&lt;/code&gt; вместе с &lt;b&gt;SelfLoader&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6b8111cc382b6e222eab22ae8b7285382f21bba0" translate="yes" xml:space="preserve">
          <source>This section is surprisingly small because the rest of the FAQ is littered with answers involving regular expressions. For example, decoding a URL and checking whether something is a number can be handled with regular expressions, but those answers are found elsewhere in this document (in &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt;: &quot;How do I decode or create those %-encodings on the web&quot; and &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;: &quot;How do I determine whether a scalar is a number/whole/integer/float&quot;, to be precise).</source>
          <target state="translated">Этот раздел на удивление невелик, потому что остальная часть часто задаваемых вопросов завалена ответами с использованием регулярных выражений. Например, декодирование URL-адреса и проверка того, является ли что-то числом, можно обработать с помощью регулярных выражений, но эти ответы можно найти в другом месте в этом документе (в &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt; : &amp;laquo;Как мне декодировать или создать эти% -кодировки в Интернете&amp;raquo; и &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; : &quot;Как определить, является ли скаляр числом / целым / целым / вещественным числом&quot;, если быть точным).</target>
        </trans-unit>
        <trans-unit id="e488b03478a9d4c34a486aa35881d2d7c336d0b6" translate="yes" xml:space="preserve">
          <source>This section is surprisingly small because the rest of the FAQ is littered with answers involving regular expressions. For example, decoding a URL and checking whether something is a number can be handled with regular expressions, but those answers are found elsewhere in this document (in perlfaq9 : &quot;How do I decode or create those %-encodings on the web&quot; and perlfaq4 : &quot;How do I determine whether a scalar is a number/whole/integer/float&quot;, to be precise).</source>
          <target state="translated">Этот раздел удивительно мал,потому что остальная часть FAQ забита ответами с регулярными выражениями.Например,декодирование URL-адреса и проверка того,является ли что-то числом,может быть обработано регулярными выражениями,но эти ответы можно найти в другом месте этого документа (в perlfaq9:&quot;Как расшифровать или создать эти %-кодировки в Интернете&quot; и perlfaq4:&quot;Как определить,является ли скаляр числом/кодировкой/всегдатаем/плавучим&quot;,если быть точным).</target>
        </trans-unit>
        <trans-unit id="732c1a0656cc78e70f97a666a29ecd78fe5a04dd" translate="yes" xml:space="preserve">
          <source>This section is taken from JSON::XS almost verbatim. &lt;code&gt;encode_json&lt;/code&gt; and &lt;code&gt;decode_json&lt;/code&gt; are exported by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d687991685902a3cbba9421e6e5a504f1cdd17" translate="yes" xml:space="preserve">
          <source>This section is taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94757c3cee869d3cff315104b19f6299d40770f6" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions about where to find source and documentation for Perl, support, and related matters.</source>
          <target state="translated">Этот раздел FAQ отвечает на вопросы о том,где найти источник и документацию для Perl,поддержку и связанные с этим вопросы.</target>
        </trans-unit>
        <trans-unit id="dd108d0d127c5d70473c9d7274a370ea63329739" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions related to manipulating numbers, dates, strings, arrays, hashes, and miscellaneous data issues.</source>
          <target state="translated">В этом разделе FAQ даются ответы на вопросы,связанные с манипуляциями с числами,датами,строками,массивами,хешами и различными вопросами,касающимися данных.</target>
        </trans-unit>
        <trans-unit id="43d6c325f900a7d6a933d383734e7454f02fa808" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions related to programmer tools and programming support.</source>
          <target state="translated">Этот раздел FAQ отвечает на вопросы,связанные с инструментами программиста и поддержкой программирования.</target>
        </trans-unit>
        <trans-unit id="8c63d2f74bc0df3e2938dcd3a6724a679f1d5b9f" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers very general, high-level questions about Perl.</source>
          <target state="translated">Этот раздел часто задаваемых вопросов отвечает на очень общие вопросы высокого уровня о Perl.</target>
        </trans-unit>
        <trans-unit id="f91732cbb36111757913713f2dd27264f7f4075b" translate="yes" xml:space="preserve">
          <source>This section of the Perl FAQ covers questions involving operating system interaction. Topics include interprocess communication (IPC), control over the user-interface (keyboard, screen and pointing devices), and most anything else not related to data manipulation.</source>
          <target state="translated">В этом разделе FAQ на Perl рассматриваются вопросы,связанные с взаимодействием с операционной системой.Темы включают в себя межпроцессное взаимодействие (IPC),управление пользовательским интерфейсом (клавиатура,экран и указывающие устройства),а также большинство других вопросов,не связанных с манипуляциями с данными.</target>
        </trans-unit>
        <trans-unit id="d25ee711a891d2493e43b730a8ee5f38afba1662" translate="yes" xml:space="preserve">
          <source>This section only applies to you if you have existing data written out by Storable 2.02 or earlier on perl 5.6.0 or 5.6.1 on Unix or Linux which has been configured with 64 bit integer support (not the default) If you got a precompiled perl, rather than running Configure to build your own perl from source, then it almost certainly does not affect you, and you can stop reading now (unless you're curious). If you're using perl on Windows it does not affect you.</source>
          <target state="translated">Этот раздел применим к вам только в том случае,если у вас есть данные,записанные в Storable 2.02 или более ранней версии на perl 5.6.0 или 5.6.1 в Unix или Linux,который был настроен с поддержкой 64-битных целых чисел (не по умолчанию)Если у вас есть прекомпилированный perl,а не запущена функция Configure,чтобы собрать свой собственный perl из исходников,то это почти наверняка не повлияет на вас,и вы можете перестать читать сейчас (если вам не любопытно).Если вы используете perl в Windows,это вас не касается.</target>
        </trans-unit>
        <trans-unit id="8ecf28b7a887ea07f287d9185e0392b617b15554" translate="yes" xml:space="preserve">
          <source>This section only considers the tagged value case: a tagged JSON object is encountered during decoding and &lt;code&gt;allow_tags&lt;/code&gt; is disabled, a parse error will result (as if tagged values were not part of the grammar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df773f3e4810bcca716d1f76438458e235350349" translate="yes" xml:space="preserve">
          <source>This section tries to classify the supported encodings by their applicability for information exchange over the Internet and to choose the most suitable aliases to name them in the context of such communication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9863e5d9d88cf88755191633db565f4fe6bf163c" translate="yes" xml:space="preserve">
          <source>This sends an &lt;a href=&quot;Test2::Event::Bail&quot;&gt;Test2::Event::Bail&lt;/a&gt; event. This event will completely terminate all testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9a6489148fff3cc80ff958733f7f998b0b3cdf" translate="yes" xml:space="preserve">
          <source>This server accepts one of five different commands, sending output back to the client. Unlike most network servers, this one handles only one incoming client at a time. Multitasking servers are covered in Chapter 16 of the Camel.</source>
          <target state="translated">Этот сервер принимает одну из пяти различных команд,отправляя вывод обратно клиенту.В отличие от большинства сетевых серверов,этот сервер обрабатывает только одного входящего клиента за раз.Многозадачность серверов описана в Главе 16 Верблюда.</target>
        </trans-unit>
        <trans-unit id="ffb206fa8662fa49c173d5f9d350cc23a1d8b5c6" translate="yes" xml:space="preserve">
          <source>This server takes the trouble to clone off a child version via fork() for each incoming request. That way it can handle many requests at once, which you might not always want. Even if you don't fork(), the listen() will allow that many pending connections. Forking servers have to be particularly careful about cleaning up their dead children (called &quot;zombies&quot; in Unix parlance), because otherwise you'll quickly fill up your process table. The REAPER subroutine is used here to call waitpid() for any child processes that have finished, thereby ensuring that they terminate cleanly and don't join the ranks of the living dead.</source>
          <target state="translated">Этот сервер берет на себя задачу клонирования дочерней версии через fork()для каждого входящего запроса.Таким образом,он может обрабатывать множество запросов одновременно,чего не всегда хочется.Даже если вы не используете fork(),функция listen()разрешит такое количество отложенных соединений.Рабочие серверы должны быть особенно осторожны с очисткой своих мертвых детей (называемых &quot;зомби&quot; в языке Unix),потому что в противном случае вы быстро заполните таблицу процессов.Подпрограмма REAPER используется здесь для вызова waitpid()для любых завершенных дочерних процессов,тем самым гарантируя,что они закончатся чисто и не пополнят ряды живых мертвецов.</target>
        </trans-unit>
        <trans-unit id="3c5ebe323e1cea15acbe8beafe841f6d123af5cf" translate="yes" xml:space="preserve">
          <source>This set of instructions is meant to describe a so-called &quot;native&quot; port of Perl to the Windows platform. This includes both 32-bit and 64-bit Windows operating systems. The resulting Perl requires no additional software to run (other than what came with your operating system). Currently, this port is capable of using one of the following compilers on the Intel x86 architecture:</source>
          <target state="translated">Этот набор инструкций предназначен для описания так называемого &quot;родного&quot; порта Perl на платформу Windows.Он включает в себя как 32-битные,так и 64-битные операционные системы Windows.Полученный Perl не требует запуска дополнительного программного обеспечения (кроме того,что поставляется с операционной системой).В настоящее время этот перенос способен использовать один из следующих компиляторов на архитектуре Intel x86:</target>
        </trans-unit>
        <trans-unit id="8777023fd72f0e0c5194df7056fed5f92ab1ed79" translate="yes" xml:space="preserve">
          <source>This sets &lt;code&gt;$\&lt;/code&gt; to newline and then sets &lt;code&gt;$/&lt;/code&gt; to the null character.</source>
          <target state="translated">Это устанавливает &lt;code&gt;$\&lt;/code&gt; на новую строку, а затем устанавливает &lt;code&gt;$/&lt;/code&gt; на нулевой символ.</target>
        </trans-unit>
        <trans-unit id="4549dd71bcce8b09d1c070ffac130c9cb9eed0b2" translate="yes" xml:space="preserve">
          <source>This sets a variable in op/numconvert.t.</source>
          <target state="translated">Это устанавливает переменную в op/numconvert.t.</target>
        </trans-unit>
        <trans-unit id="df79d9971c873dd56e1affe3565f833f5f4ef4be" translate="yes" xml:space="preserve">
          <source>This sets the</source>
          <target state="translated">Это устанавливает</target>
        </trans-unit>
        <trans-unit id="cc422551baf5bd378e1441e1ffd937104c35c5d0" translate="yes" xml:space="preserve">
          <source>This sets the accuracy for all math operations. The argument must be greater than or equal to zero. See Math::BigInt's bround() function for details.</source>
          <target state="translated">Это устанавливает точность для всех математических операций.Аргумент должен быть больше или равен нулю.Подробности смотрите в функции Math::BigInt's bround().</target>
        </trans-unit>
        <trans-unit id="3b2057b585966ee5e34a71b1fcc4af8dffd8aef3" translate="yes" xml:space="preserve">
          <source>This sets the default per-thread stack size at the start of the application.</source>
          <target state="translated">Это задает размер стека по умолчанию на поток при запуске приложения.</target>
        </trans-unit>
        <trans-unit id="d80f3ae97beba02bd7de41d9d2bef09e8032704e" translate="yes" xml:space="preserve">
          <source>This sets the filehandle that &lt;code&gt;$parser&lt;/code&gt; 's output will be written to. You can pass &lt;code&gt;*STDOUT&lt;/code&gt; or &lt;code&gt;*STDERR&lt;/code&gt; , otherwise you should probably do something like this:</source>
          <target state="translated">Это устанавливает дескриптор файла, в который будет записываться вывод &lt;code&gt;$parser&lt;/code&gt; . Вы можете передать &lt;code&gt;*STDOUT&lt;/code&gt; или &lt;code&gt;*STDERR&lt;/code&gt; , в противном случае вам, вероятно, следует сделать что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="2f62f85bc91a48745c4461c85cd5655d80de88af" translate="yes" xml:space="preserve">
          <source>This sets the filehandle that &lt;code&gt;$parser&lt;/code&gt;'s output will be written to. You can pass &lt;code&gt;*STDOUT&lt;/code&gt; or &lt;code&gt;*STDERR&lt;/code&gt;, otherwise you should probably do something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af102c7f2132a623b34e9347ca5e8597fbe36895" translate="yes" xml:space="preserve">
          <source>This sets the language code to tag this document as being in. By default, it is currently the value of the environment variable &lt;code&gt;RTFDEFLANG&lt;/code&gt; , or if that's not set, then the value 1033 (for US English).</source>
          <target state="translated">Это устанавливает код языка, чтобы пометить этот документ как существующий. По умолчанию, в настоящее время это значение переменной среды &lt;code&gt;RTFDEFLANG&lt;/code&gt; , или, если оно не установлено, то значение 1033 (для американского английского).</target>
        </trans-unit>
        <trans-unit id="38b3389f1a148c762d20dbeefeec456038d65737" translate="yes" xml:space="preserve">
          <source>This sets the language code to tag this document as being in. By default, it is currently the value of the environment variable &lt;code&gt;RTFDEFLANG&lt;/code&gt;, or if that's not set, then the value 1033 (for US English).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529a10bfb87aaa836949c559d932aa868d0ea517" translate="yes" xml:space="preserve">
          <source>This sets the precision for all math operations. The argument can be any integer. Negative values mean a fixed number of digits after the dot, and are &amp;lt;B&amp;gt;ignored&amp;lt;/B&amp;gt; since all operations happen in integer space. A positive value rounds to this digit left from the dot. 0 or 1 mean round to integer and are ignore like negative values.</source>
          <target state="translated">Это устанавливает точность для всех математических операций. Аргумент может быть любым целым числом. Отрицательные значения означают фиксированное количество цифр после точки и &amp;lt;B&amp;gt; игнорируются &amp;lt;/B&amp;gt;, поскольку все операции выполняются в целочисленном пространстве. Положительное значение округляется до этой цифры слева от точки. 0 или 1 означают округление до целого числа и игнорируются, как отрицательные значения.</target>
        </trans-unit>
        <trans-unit id="674e5733f608427771b5b90d6f64c3b452aa5b35" translate="yes" xml:space="preserve">
          <source>This sets the precision for all math operations. The argument can be any integer. Negative values mean a fixed number of digits after the dot, while a positive value rounds to this digit left from the dot. 0 or 1 mean round to integer. See Math::BigInt's bfround() function for details.</source>
          <target state="translated">Это устанавливает точность для всех математических операций.Аргументом может быть любое целое число.Отрицательные значения означают фиксированное количество цифр после точки,в то время как положительное значение округляется до этой цифры слева от точки.0 или 1 означает округление до целого числа.Подробнее см.функцию bfround()в Math::BigInt.</target>
        </trans-unit>
        <trans-unit id="7b5668a047104c30653c0804d67e484bf29d90cb" translate="yes" xml:space="preserve">
          <source>This sets the soft and hard limits to 10 and 20 seconds, respectively. After 10 seconds of time spent running on the CPU (not &quot;wall&quot; time), the process will be sent a signal (XCPU on some systems) which, if not trapped, will cause the process to terminate. If that signal is trapped, then after 10 more seconds (20 seconds in total) the process will be killed with a non-trappable signal.</source>
          <target state="translated">Это устанавливает мягкое и жесткое ограничение на 10 и 20 секунд соответственно.По истечении 10 секунд,проведенных на процессоре (не &quot;настенное&quot; время),процессу будет отправлен сигнал (XCPU на некоторых системах),который,если он не будет захвачен,приведет к завершению процесса.Если этот сигнал окажется в ловушке,то еще через 10 секунд (всего 20 секунд)процесс завершится сигналом,который не будет захвачен.</target>
        </trans-unit>
        <trans-unit id="130c125b35cf3d3da34044cd207b5628dc2ffac8" translate="yes" xml:space="preserve">
          <source>This sets the string that &lt;code&gt;$parser&lt;/code&gt; 's output will be sent to, instead of any filehandle.</source>
          <target state="translated">Это устанавливает строку, в которую будет отправлен вывод &lt;code&gt;$parser&lt;/code&gt; , вместо любого дескриптора файла.</target>
        </trans-unit>
        <trans-unit id="11dc24aa23b6cf452f77c63ea5e698909de49109" translate="yes" xml:space="preserve">
          <source>This sets the string that &lt;code&gt;$parser&lt;/code&gt;'s output will be sent to, instead of any filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4632ee2d247f3c071c82005711a1c83db25822" translate="yes" xml:space="preserve">
          <source>This sets the version required for the given module to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce02c4df1fe3dcc67a7d36b7b1e441cff60cc978" translate="yes" xml:space="preserve">
          <source>This sets what class is used for rendering the files. The default is &quot;Pod::Simple::HTML&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::HTML, and you should &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="translated">Это устанавливает, какой класс используется для рендеринга файлов. По умолчанию это &amp;laquo;Pod :: Simple :: HTML&amp;raquo;. Если вы установите для него другое значение, он, вероятно, должен быть подклассом Pod :: Simple :: HTML, и вам следует &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; этот класс, чтобы он загружался до того, как Pod :: Simple :: HTMLBatch попытается его загрузить.</target>
        </trans-unit>
        <trans-unit id="5cfda4b2fca350828dd5a1ac91438eac5b206248" translate="yes" xml:space="preserve">
          <source>This sets what class is used for rendering the files. The default is &quot;Pod::Simple::HTML&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::HTML, and you should &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1e3d22ca8911a43038e77812f3f3938f114390" translate="yes" xml:space="preserve">
          <source>This sets what class is used for searching for the files. The default is &quot;Pod::Simple::Search&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::Search, and you should &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="translated">Это устанавливает, какой класс используется для поиска файлов. По умолчанию это &amp;laquo;Pod :: Simple :: Search&amp;raquo;. Если вы установите для него другое значение, он, вероятно, должен быть подклассом Pod :: Simple :: Search, и вам следует &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; этот класс, чтобы он загружался до того, как Pod :: Simple :: HTMLBatch попытается его загрузить.</target>
        </trans-unit>
        <trans-unit id="7237f6ff3ed8efb498d362dab04bc50228f211f0" translate="yes" xml:space="preserve">
          <source>This sets what class is used for searching for the files. The default is &quot;Pod::Simple::Search&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::Search, and you should &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cf2efded42d8cb56f73f264ab95aef6e9febaa" translate="yes" xml:space="preserve">
          <source>This setting has currently no effect on tied hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c8e9c991aed7d8a50a93d4bed0eb71bffb9b06" translate="yes" xml:space="preserve">
          <source>This setting has no effect on &lt;code&gt;decode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d1b9e8622b5f2ff4cb6a55e0533419d19af149" translate="yes" xml:space="preserve">
          <source>This setting has no effect when decoding JSON texts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e68aea7378a9d8770b734fa44395aeb3e883a4" translate="yes" xml:space="preserve">
          <source>This setting has no effect when decoding JSON texts. You will also most likely combine this setting with &lt;code&gt;space_after&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40822cd1e25ae559171a5c38a63f3fa78270123b" translate="yes" xml:space="preserve">
          <source>This setting needs to be in effect while Perl is built, but also when the programs are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef0f761ac69580bceb47730cfb76aca36efdbeb" translate="yes" xml:space="preserve">
          <source>This shares the variable(s) in the argument list with the compartment. This is almost identical to exporting variables using the &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; module.</source>
          <target state="translated">Это разделяет переменные в списке аргументов с отсеком. Это почти идентично экспорту переменных с помощью модуля &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d152c0ad7d6bcbd14fe51b7170fea53d971e63b6" translate="yes" xml:space="preserve">
          <source>This shifts the burden of complexity off to the quant method. That method's parameters are: the numeric value it's going to use to quantify something; the Russian word it's going to quantify; and the parameter &quot;accusative&quot;, which you're using to mean that this sentence's syntax wants a noun in the accusative case there, although that quantification method may have to overrule, for grammatical reasons you may recall from the beginning of this article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6847db733d896a734ef92c2af3a111d1b507ced6" translate="yes" xml:space="preserve">
          <source>This should &lt;b&gt;ONLY&lt;/b&gt; be used on memory obtained using &lt;a href=&quot;#Newx&quot;&gt;&quot;Newx&quot;&lt;/a&gt; and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3464b620ba9f7ef03d81ee4683ae7ba242d757" translate="yes" xml:space="preserve">
          <source>This should &lt;b&gt;ONLY&lt;/b&gt; be used on memory obtained using &lt;a href=&quot;#Newx&quot;&gt;Newx&lt;/a&gt; and friends.</source>
          <target state="translated">Это должно использоваться &lt;b&gt;ТОЛЬКО&lt;/b&gt; для памяти, полученной с помощью &lt;a href=&quot;#Newx&quot;&gt;Newx&lt;/a&gt; и его друзей.</target>
        </trans-unit>
        <trans-unit id="d79a68f01e1702d7ec1c9976d188db9c7f2aece8" translate="yes" xml:space="preserve">
          <source>This should allow read/write access to any files that are extracted from the zip file/buffer`.</source>
          <target state="translated">Это должно позволить доступ на чтение/запись к любым файлам,извлеченным из zip-файла/буфера`.</target>
        </trans-unit>
        <trans-unit id="38a7ea1ad739ecad0857da6650e530f48bc66f62" translate="yes" xml:space="preserve">
          <source>This should be completely transparent to any applications written entirely in Perl (minus a few rarely encountered caveats given in the &lt;a href=&quot;#Multi-threaded&quot;&gt;&quot;Multi-threaded&quot;&lt;/a&gt; section). Information for XS module writers is given in &lt;a href=&quot;perlxs#Locale-aware-XS-code&quot;&gt;&quot;Locale-aware XS code&quot; in perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bc0e6df3ccf75b9d4b22bada1e150f1c0bf5e1" translate="yes" xml:space="preserve">
          <source>This should be fixed already.</source>
          <target state="translated">Это должно быть уже исправлено.</target>
        </trans-unit>
        <trans-unit id="f1709f85224b4fc47c42955a5583dcda72fcf36e" translate="yes" xml:space="preserve">
          <source>This should be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d375da43f6c63dd4302e9f62a049ebffa1351990" translate="yes" xml:space="preserve">
          <source>This should be interpreted as '&lt;code&gt;PVOP&lt;/code&gt; ' only. The &lt;code&gt;_OR_SVOP&lt;/code&gt; is because the only core &lt;code&gt;PVOP&lt;/code&gt; , &lt;code&gt;OP_TRANS&lt;/code&gt; , can sometimes be a &lt;code&gt;SVOP&lt;/code&gt; instead.</source>
          <target state="translated">Это следует интерпретировать только как &amp;laquo; &lt;code&gt;PVOP&lt;/code&gt; &amp;raquo;. &lt;code&gt;_OR_SVOP&lt;/code&gt; потому , что только ядро &lt;code&gt;PVOP&lt;/code&gt; , &lt;code&gt;OP_TRANS&lt;/code&gt; , иногда может быть &lt;code&gt;SVOP&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="55cb7fd92e54949da6a1f17f8e9cc521852ab737" translate="yes" xml:space="preserve">
          <source>This should be interpreted as '&lt;code&gt;PVOP&lt;/code&gt;' only. The &lt;code&gt;_OR_SVOP&lt;/code&gt; is because the only core &lt;code&gt;PVOP&lt;/code&gt;, &lt;code&gt;OP_TRANS&lt;/code&gt;, can sometimes be a &lt;code&gt;SVOP&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a5db63688f7fa372582799c1bd3dfdaa3ba0cd" translate="yes" xml:space="preserve">
          <source>This should be replaced by the full path to your clang executable if it is not in your path.</source>
          <target state="translated">Он должен быть заменен полным путем к исполняемому файлу clang,если его нет в вашем пути.</target>
        </trans-unit>
        <trans-unit id="87cbf40ae5f30dda5d9df6e6dea667727ea90c08" translate="yes" xml:space="preserve">
          <source>This should be set for non debug messages that are still important enough to show when a formatter is in quiet mode. A formatter should send these to STDOUT not STDERR, but should show them even in non-verbose mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a95a55a5803d791f964bba2e2a1d75b4c88370" translate="yes" xml:space="preserve">
          <source>This should be the first thing you call in your test script. It declares your testing plan, how many there will be, if any of them should be allowed to fail, and so on.</source>
          <target state="translated">Это должно быть первое,что вы позвоните в вашем тестовом сценарии.Он объявляет ваш план тестирования,сколько их будет,если кто-то из них допустит неудачу,и так далее.</target>
        </trans-unit>
        <trans-unit id="c0f01ea79ad3c782b34e1c39edb42ab144bd80b0" translate="yes" xml:space="preserve">
          <source>This should build everything. Specifically, it will create perl.exe, perl522.dll at the perl toplevel, and various other extension dll's under the lib\auto directory. If the build fails for any reason, make sure you have done the previous steps correctly.</source>
          <target state="translated">Это должно все построить.В частности,она создаст perl.exe,perl522.dll на верхнем уровне perl и различные другие расширения dll в каталоге lib\auto.Если сборка не удастся по каким-либо причинам,убедитесь,что вы выполнили все предыдущие шаги правильно.</target>
        </trans-unit>
        <trans-unit id="3a62d97effee732e54e0d1504511279a90715573" translate="yes" xml:space="preserve">
          <source>This should build everything. Specifically, it will create perl.exe, perl532.dll at the perl toplevel, and various other extension dll's under the lib\auto directory. If the build fails for any reason, make sure you have done the previous steps correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ba9060ffc1293bd461e0db035bb80a563a059f" translate="yes" xml:space="preserve">
          <source>This should build miniperl and then fail when it tries to run it.</source>
          <target state="translated">Он должен построить miniperl,а затем провалиться,когда он пытается запустить его.</target>
        </trans-unit>
        <trans-unit id="db496c0536d24209950a452554a51ec2ca77e58c" translate="yes" xml:space="preserve">
          <source>This should contain a URI where the exact terms of the license may be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678375f3c34a52f1c875afc4e9a5d9d1a7cc959a" translate="yes" xml:space="preserve">
          <source>This should create an executable</source>
          <target state="translated">Это должно создать исполняемый файл</target>
        </trans-unit>
        <trans-unit id="0343ed053df7e2ae641054c461a6d9ef120ebfaa" translate="yes" xml:space="preserve">
          <source>This should match any sequences of characters that aren't &lt;code&gt;\xDF&lt;/code&gt; nor what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. &lt;code&gt;&quot;s&quot;&lt;/code&gt; isn't &lt;code&gt;\xDF&lt;/code&gt; , but Unicode says that &lt;code&gt;&quot;ss&quot;&lt;/code&gt; is what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. So which one &quot;wins&quot;? Do you fail the match because the string has &lt;code&gt;ss&lt;/code&gt; or accept it because it has an &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; followed by another &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;? Perl has chosen the latter. (See note in &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;Bracketed Character Classes&lt;/a&gt; above.)</source>
          <target state="translated">Это должно соответствовать любым последовательностям символов, которые не соответствуют &lt;code&gt;\xDF&lt;/code&gt; или тем, что соответствует &lt;code&gt;\xDF&lt;/code&gt; в &lt;code&gt;/i&lt;/code&gt; . &lt;code&gt;&quot;s&quot;&lt;/code&gt; не является &lt;code&gt;\xDF&lt;/code&gt; , но Unicode говорит, что &lt;code&gt;&quot;ss&quot;&lt;/code&gt; - это то, что соответствует &lt;code&gt;\xDF&lt;/code&gt; в &lt;code&gt;/i&lt;/code&gt; . Так кто же &amp;laquo;побеждает&amp;raquo;? Вы проваливаете сопоставление, потому что в строке есть &lt;code&gt;ss&lt;/code&gt; , или принимаете его, потому что в ней есть &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , за которым следует другой &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ? Perl выбрал последнее. (См. Примечание к &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;классам символов&lt;/a&gt; в квадратных скобках выше.)</target>
        </trans-unit>
        <trans-unit id="eb02f2a8ec63111dfc588d8b17a8d6fb2096fcb5" translate="yes" xml:space="preserve">
          <source>This should match any sequences of characters that aren't &lt;code&gt;\xDF&lt;/code&gt; nor what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. &lt;code&gt;&quot;s&quot;&lt;/code&gt; isn't &lt;code&gt;\xDF&lt;/code&gt;, but Unicode says that &lt;code&gt;&quot;ss&quot;&lt;/code&gt; is what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. So which one &quot;wins&quot;? Do you fail the match because the string has &lt;code&gt;ss&lt;/code&gt; or accept it because it has an &lt;code&gt;s&lt;/code&gt; followed by another &lt;code&gt;s&lt;/code&gt;? Perl has chosen the latter. (See note in &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;&quot;Bracketed Character Classes&quot;&lt;/a&gt; above.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050396cf8762718cb34435af8d06d17eb8dd7bc6" translate="yes" xml:space="preserve">
          <source>This should not be used to supply default values for parameters. One would normally use this when a function parameter must be processed by another library function before it can be used. Default parameters are covered in the next section.</source>
          <target state="translated">Это не должно использоваться для подачи значений параметров по умолчанию.Обычно это используется,когда параметр функции должен быть обработан другой библиотечной функцией,прежде чем его можно будет использовать.Параметры по умолчанию рассматриваются в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="8b1ca7922101edcce2a492b3a6c129abd8a583e6" translate="yes" xml:space="preserve">
          <source>This should only be necessary if</source>
          <target state="translated">Это должно быть необходимо только в том случае,если</target>
        </trans-unit>
        <trans-unit id="598f32a1125324d2a241a1c920bc050b40fac3d7" translate="yes" xml:space="preserve">
          <source>This should rarely be necessary, as the Perl &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; function is to be used for things that Perl opened itself, even if it was a dup of a numeric descriptor as with &lt;code&gt;MHCONTEXT&lt;/code&gt; above. But if you really have to, you may be able to do this:</source>
          <target state="translated">Это должно быть редко, поскольку функция Perl &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; должна использоваться для вещей, которые Perl открывал сам, даже если это была &lt;code&gt;MHCONTEXT&lt;/code&gt; числового дескриптора, как в случае MHCONTEXT выше. Но если вам действительно нужно, вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="81e177911fc8ed26557ec26b5355ec1390d9f4d0" translate="yes" xml:space="preserve">
          <source>This should rarely be necessary, as the Perl &lt;code&gt;close()&lt;/code&gt; function is to be used for things that Perl opened itself, even if it was a dup of a numeric descriptor as with &lt;code&gt;MHCONTEXT&lt;/code&gt; above. But if you really have to, you may be able to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79cf36faa3af81e4bd5bbe5c4a98d13ad84be9" translate="yes" xml:space="preserve">
          <source>This should return true if the driver works in the current environment. This should return false if it does not. This is a CLASS method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1ab6069990fc4ba153fc0e586880eb88157c07" translate="yes" xml:space="preserve">
          <source>This shows &lt;code&gt;$a&lt;/code&gt; is a reference pointing to an SV. That SV is a PVHV, a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c7e9b83cb4841b6e6724c1f7e531bbbc2b68cb" translate="yes" xml:space="preserve">
          <source>This shows &lt;code&gt;$a&lt;/code&gt; is a reference pointing to an SV. That SV is a PVHV, a hash. Fields RITER and EITER are used by &lt;code&gt;&lt;a href=&quot;../functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это показывает, что &lt;code&gt;$a&lt;/code&gt; - это ссылка, указывающая на SV. Этот SV - это PVHV, хэш. Поля RITER и EITER используются &lt;code&gt;&lt;a href=&quot;../functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4544b90fccd9dc8117d7d96fcbc15a1ca629dfae" translate="yes" xml:space="preserve">
          <source>This shows that</source>
          <target state="translated">Это показывает,что</target>
        </trans-unit>
        <trans-unit id="d012fb20c34f9ef1051349030cb25501698029ec" translate="yes" xml:space="preserve">
          <source>This shows that there were changes to this document staged for commit, and that there were further changes in the working directory not yet staged. It also shows that there was an untracked file in the working directory, and as you can see shows how to change all of this. It also shows that there is one commit on the working branch &lt;code&gt;blead&lt;/code&gt; which has not been pushed to the &lt;code&gt;origin&lt;/code&gt; remote yet. &lt;b&gt;NOTE&lt;/b&gt;: This output is also what you see as a template if you do not provide a message to &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55aa05d72ea8d4828d039cb967e2a4c2c9f3f35" translate="yes" xml:space="preserve">
          <source>This shows that we have an SV which is a reference, which points at another SV. In this case that second SV is a PVMG, a blessed scalar. Because it is blessed it has the &lt;code&gt;OBJECT&lt;/code&gt; flag set. Note that an SV which holds a C pointer also has the &lt;code&gt;IOK&lt;/code&gt; flag set. The &lt;code&gt;STASH&lt;/code&gt; is set to the package name which this SV was blessed into.</source>
          <target state="translated">Это показывает, что у нас есть SV, который является эталоном, который указывает на другой SV. В данном случае второй SV - это PVMG, благословенный скаляр. Поскольку это благословение, у него установлен флаг &lt;code&gt;OBJECT&lt;/code&gt; . Обратите внимание, что SV, который содержит указатель C, также имеет установленный флаг &lt;code&gt;IOK&lt;/code&gt; . &lt;code&gt;STASH&lt;/code&gt; устанавливается на имя пакета , который этот SV был благословлен в.</target>
        </trans-unit>
        <trans-unit id="d6b36418bf4797a5df13199701553bd6ebeff202" translate="yes" xml:space="preserve">
          <source>This shows the sorts of output the &lt;code&gt;l&lt;/code&gt; command can produce:</source>
          <target state="translated">Здесь показаны типы вывода, которые может произвести команда &lt;code&gt;l&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="220ae5d1e65680423ed0fee8d1ae71265a4673d1" translate="yes" xml:space="preserve">
          <source>This shows the variables used in the subroutine &lt;code&gt;clear_noremap&lt;/code&gt; . The variable &lt;code&gt;$ready_to_print&lt;/code&gt; is a my() (lexical) variable, &lt;b&gt;i&lt;/b&gt;ntroduced (first declared with my()) on line 1069, and used on line 1079. The variable &lt;code&gt;$&amp;amp;&lt;/code&gt; from the main package is used on 1086, and so on.</source>
          <target state="translated">Здесь показаны переменные, используемые в подпрограмме &lt;code&gt;clear_noremap&lt;/code&gt; . Переменный &lt;code&gt;$ready_to_print&lt;/code&gt; является моим () (лексическим) переменным, &lt;b&gt;я&lt;/b&gt; ntroduced (первым объявленным с моим ()) по линии 1069, и использовать на линии 1079. переменного &lt;code&gt;$&amp;amp;&lt;/code&gt; от основного пакета используются на 1086, и так далее .</target>
        </trans-unit>
        <trans-unit id="69445b30eafff7b7c0b6c3e36cb0b52aa8e5353f" translate="yes" xml:space="preserve">
          <source>This shows the variables used in the subroutine &lt;code&gt;clear_noremap&lt;/code&gt;. The variable &lt;code&gt;$ready_to_print&lt;/code&gt; is a my() (lexical) variable, &lt;b&gt;i&lt;/b&gt;ntroduced (first declared with my()) on line 1069, and used on line 1079. The variable &lt;code&gt;$&amp;amp;&lt;/code&gt; from the main package is used on 1086, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a1a612c118404300b4fc88e912d956be940f47" translate="yes" xml:space="preserve">
          <source>This shows us two libraries being updated and two being added, one of which has an undefined version in the right-hand side version.</source>
          <target state="translated">Это показывает нам,что две библиотеки обновляются и две добавляются,одна из которых имеет неопределенную версию в правой версии.</target>
        </trans-unit>
        <trans-unit id="a9392876266258935c97915a0016be1ab3e077a8" translate="yes" xml:space="preserve">
          <source>This shows what a reference looks like when it references a simple scalar.</source>
          <target state="translated">Это показывает,как выглядит ссылка,когда она ссылается на простой скаляр.</target>
        </trans-unit>
        <trans-unit id="62c1dd6d2092bdafabfdd27d34aabe7eb07a45cc" translate="yes" xml:space="preserve">
          <source>This shows what a reference to an array looks like.</source>
          <target state="translated">Это показывает,как выглядит ссылка на массив.</target>
        </trans-unit>
        <trans-unit id="5af0b0f40fa34ec87e6b5d92094f2a134fbd1781" translate="yes" xml:space="preserve">
          <source>This signifies that this entry should be replaced by the decompositions for all the code points whose decomposition is algorithmically calculated. (All of them are currently in one range and no others outside the range are likely to ever be added to Unicode; the &lt;code&gt;&quot;n&quot;&lt;/code&gt; format has this same entry.) These can be generated via the function &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize::NFD()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b0c298e2bbc25317cee46892abecba84a7892d" translate="yes" xml:space="preserve">
          <source>This signifies that this entry should be replaced by the decompositions for all the code points whose decomposition is algorithmically calculated. (All of them are currently in one range and no others outside the range are likely to ever be added to Unicode; the &lt;code&gt;&quot;n&quot;&lt;/code&gt; format has this same entry.) These can be generated via the function &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize::NFD()&lt;/a&gt;.</source>
          <target state="translated">Это означает, что эта запись должна быть заменена разложениями для всех кодовых точек, разложение которых вычисляется алгоритмически. (Все они в настоящее время находятся в одном диапазоне, и никакие другие вне этого диапазона, вероятно, когда-либо будут добавлены в Unicode; формат &lt;code&gt;&quot;n&quot;&lt;/code&gt; имеет такую ​​же запись.) Их можно сгенерировать с помощью функции &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize :: NFD ( )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a3ee18b62d8c4cf82c2682ec3f88357d163d3e8" translate="yes" xml:space="preserve">
          <source>This silent implicit decoding is known as &quot;upgrading&quot;. That may sound positive, but it's best to avoid it.</source>
          <target state="translated">Это неявное неявное декодирование известно как &quot;модернизация&quot;.Это может звучать позитивно,но лучше избегать этого.</target>
        </trans-unit>
        <trans-unit id="75ceec87638702fc9211fcbb47c663ad2b557d5f" translate="yes" xml:space="preserve">
          <source>This simplifies the reverse operation as the number of repetitions can be unpacked with the &lt;code&gt;/&lt;/code&gt; code:</source>
          <target state="translated">Это упрощает обратную операцию, так как количество повторов можно распаковать с помощью кода &lt;code&gt;/&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c76a52e49b25fb93c5814da39f8a0ca4f090ec45" translate="yes" xml:space="preserve">
          <source>This simply calls &lt;code&gt;sv_magic&lt;/code&gt; and coerces the &lt;code&gt;gv&lt;/code&gt; argument into an &lt;code&gt;SV&lt;/code&gt; .</source>
          <target state="translated">Это просто вызывает &lt;code&gt;sv_magic&lt;/code&gt; и переводит аргумент &lt;code&gt;gv&lt;/code&gt; в &lt;code&gt;SV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37a8b66b66bc575f562e00ecf205b1032d87cf22" translate="yes" xml:space="preserve">
          <source>This simply calls &lt;code&gt;sv_magic&lt;/code&gt; and coerces the &lt;code&gt;gv&lt;/code&gt; argument into an &lt;code&gt;SV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c5bc95dce18ddda2693ffc0b4a16e21790eea4" translate="yes" xml:space="preserve">
          <source>This simply evaluates any expression (&lt;code&gt;$got eq $expected&lt;/code&gt; is just a simple example) and uses that to determine if the test succeeded or failed. A true expression passes, a false one fails. Very simple.</source>
          <target state="translated">Он просто оценивает любое выражение ( &lt;code&gt;$got eq $expected&lt;/code&gt; - это просто простой пример) и использует его, чтобы определить, прошел ли тест успешно или нет. Истинное выражение проходит, ложное - нет. Очень просто.</target>
        </trans-unit>
        <trans-unit id="3d969d8fe90ed0cdf3881a37bda779e5984f6b64" translate="yes" xml:space="preserve">
          <source>This simply passes the C representation of the Perl variable (an SV*) in and out of the XS layer. This can be used if the C code wants to deal directly with the Perl variable.</source>
          <target state="translated">При этом просто передается представление на C переменной Perl (SV*)внутри и снаружи слоя XS.Это может быть использовано,если код на C хочет работать непосредственно с переменной Perl.</target>
        </trans-unit>
        <trans-unit id="2e6d63f50f6edf8d1ca7caa25f784dd03a42ad6f" translate="yes" xml:space="preserve">
          <source>This simultaneously affects all threads of the program, so it may be problematic to use locales in threaded applications except where there is a single locale applicable to all threads.</source>
          <target state="translated">Это одновременно влияет на все потоки программы,поэтому использование локалей в многопоточных приложениях может быть проблематичным,за исключением тех случаев,когда существует одна локаль,применимая ко всем потокам.</target>
        </trans-unit>
        <trans-unit id="cd936fff6e8f9ae7642c5c6dc94b4b5fc101a895" translate="yes" xml:space="preserve">
          <source>This situation can happen, for example, in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e7f436f0844c6bf989784164030c8f8ea5c91c" translate="yes" xml:space="preserve">
          <source>This software enables you to upgrade software on your computer and so is inherently dangerous because the newly installed software may contain bugs and may alter the way your computer works or even make it unusable. Please consider backing up your data before every upgrade.</source>
          <target state="translated">Это программное обеспечение позволяет вам обновлять программное обеспечение на вашем компьютере,и поэтому оно по своей природе является опасным,так как вновь установленное программное обеспечение может содержать ошибки и может изменить способ работы компьютера или даже сделать его непригодным для использования.Пожалуйста,подумайте о резервном копировании своих данных перед каждым обновлением.</target>
        </trans-unit>
        <trans-unit id="95b86ac068430d7abe3629291f82ebff76fb040f" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 1996- by Andreas Koenig.</source>
          <target state="translated">Эта программа защищена авторским правом (c)1996 года-Андреасом Кёнигом.</target>
        </trans-unit>
        <trans-unit id="dfe6bc95971d9555fd4a070b4a33ad4fd59cb09c" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 1997 - 2018 by Graham Barr &amp;amp; Dave Rolsky.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21371f38c12dbc9248a71f0465727bfaee148a3" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2002 by Ilya Zakharevich.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d4de71ea698d046dd2d94f72a8a7fd4559231" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by Adam Kennedy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af578baff649ee012be86b76b46b21b70df94c94" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by David Golden and Ricardo Signes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bb5af5fa084e557d0f3cc7f0b45662d3a55d8f" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e377a624f20232cdb4cb749fe2907f2c5ef396be" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2013 by Leon Timmermans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67032da8813d4f4a0a08f93013ebb3760de4d75d" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2013 by Tim Jenness and the UK Particle Physics and Astronomy Research Council.</source>
          <target state="translated">Данное программное обеспечение защищено авторским правом (c)2013 года Тима Дженнеса и Совета по физике частиц и астрономическим исследованиям Великобритании.</target>
        </trans-unit>
        <trans-unit id="ff5cf6253d3c58ee0e8370fe0b1014e17ef0f493" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2014 by Adam Kennedy and Contributors.</source>
          <target state="translated">Это программное обеспечение защищено авторским правом (c)2014 года Адамом Кеннеди и Соавторами.</target>
        </trans-unit>
        <trans-unit id="66f85f97c6d8584288b7cc1e27089a6848dac19e" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2016 by David Golden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e0edd840c94a8b44ae9918823591f4112c67a4" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2018 by Christian Hansen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071214c3f60bf69bb79c3a0e0a801662f73777b" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2019 by Tim Jenness and the UK Particle Physics and Astronomy Research Council.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb28093815e879710a9bb0a4ef5d290c79e5b95" translate="yes" xml:space="preserve">
          <source>This software is free software and can be modified and distributed under the same terms as Perl itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbd632224b5aa617ba78b7d9260ccc05095f469" translate="yes" xml:space="preserve">
          <source>This software is released under the MIT license cited below. Additionally, when this software is distributed with &lt;b&gt;Perl Kit, Version 5&lt;/b&gt;, you may also redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Это программное обеспечение выпущено под лицензией MIT, указанной ниже. Кроме того, когда это программное обеспечение распространяется с &lt;b&gt;Perl Kit версии 5&lt;/b&gt; , вы также можете распространять и / или изменять его на тех же условиях, что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="b8cc7587a3592d000978422dcd1052715c6866c6" translate="yes" xml:space="preserve">
          <source>This software pattern is so widely applicable that Attribute::Handlers provides a way to automate it: specifying &lt;code&gt;'autotie'&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Attribute::Handlers&lt;/code&gt; statement. So, the cycling example, could also be written:</source>
          <target state="translated">Этот программный шаблон настолько широко применим, что Attribute :: Handlers позволяет автоматизировать его: указав &lt;code&gt;'autotie'&lt;/code&gt; в операторе &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Attribute::Handlers&lt;/code&gt; . Итак, пример езды на велосипеде можно было бы также записать:</target>
        </trans-unit>
        <trans-unit id="d91e373183a0a3faaf1f65e220cc6670b2950cfc" translate="yes" xml:space="preserve">
          <source>This software pattern is so widely applicable that Attribute::Handlers provides a way to automate it: specifying &lt;code&gt;'autotie'&lt;/code&gt; in the &lt;code&gt;use Attribute::Handlers&lt;/code&gt; statement. So, the cycling example, could also be written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89832468782e8e99834462aa8eda8b90c2a987a8" translate="yes" xml:space="preserve">
          <source>This somewhat unpredictable behavior can be avoided with the &quot;bitwise&quot; feature, new in Perl 5.22. You can enable it via &lt;code&gt;use feature 'bitwise'&lt;/code&gt; or &lt;code&gt;use v5.28&lt;/code&gt;. Before Perl 5.28, it used to emit a warning in the &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; category. Under this feature, the four standard bitwise operators (&lt;code&gt;~ | &amp;amp; ^&lt;/code&gt;) are always numeric. Adding a dot after each operator (&lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt;) forces it to treat its operands as strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4e18e30d88ab31167f2d6596e06fcdc6dfcfae" translate="yes" xml:space="preserve">
          <source>This somewhat unpredictable behavior can be avoided with the experimental &quot;bitwise&quot; feature, new in Perl 5.22. You can enable it via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; . By default, it will warn unless the &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; warnings category has been disabled. (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; experimental 'bitwise'&lt;/code&gt; will enable the feature and disable the warning.) Under this feature, the four standard bitwise operators (&lt;code&gt;~ | &amp;amp; ^&lt;/code&gt;) are always numeric. Adding a dot after each operator (&lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt; ) forces it to treat its operands as strings:</source>
          <target state="translated">Этого несколько непредсказуемого поведения можно избежать с помощью экспериментальной &amp;laquo;побитовой&amp;raquo; функции, новой в Perl 5.22. Вы можете включить его с помощью &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; . По умолчанию он будет предупреждать, если не отключена категория предупреждений &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; . ( &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; experimental 'bitwise'&lt;/code&gt; метод, чтобы включить эту функцию и отключить предупреждение.) В рамках этой функции четыре стандартных побитовых оператора ( &lt;code&gt;~ | &amp;amp; ^&lt;/code&gt; ) всегда числовые. Добавление точки после каждого оператора ( &lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt; ) Заставляет его рассматривать свои операнды как строки:</target>
        </trans-unit>
        <trans-unit id="c23e7895c905e61a802fac11e961fcc5116c44d1" translate="yes" xml:space="preserve">
          <source>This sort of code can be a real eyesore to read, as well as being very sensitive to typos, and it's much clearer to dereference the variable explicitly. We're side-stepping the issue of working with object-oriented programming techniques to encapsulate variable access via methods, only accessible through an object. Here we're just discussing the technical implementation of choice, and whether this has an effect on performance. We can see whether this dereferencing operation, has any overhead by putting comparative code in a file and running a &lt;code&gt;Benchmark&lt;/code&gt; test.</source>
          <target state="translated">Такой код может быть неприятным для чтения, а также очень чувствительным к опечаткам, а явное разыменование переменной гораздо проще. Мы обошли проблему работы с методами объектно-ориентированного программирования, чтобы инкапсулировать доступ к переменным через методы, доступные только через объект. Здесь мы просто обсуждаем выбранную техническую реализацию и влияет ли это на производительность. Мы можем видеть , является ли этой разыменованией операции, не имеют накладные расходы, помещая сравнительный код в файл и запустить &lt;code&gt;Benchmark&lt;/code&gt; тест.</target>
        </trans-unit>
        <trans-unit id="30f7b19aa0a9a6b3365d27ee63f89751c7ffa5a4" translate="yes" xml:space="preserve">
          <source>This special value becomes JSON null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97c4e8f1d7ea6446c4098759acfa71805444e34" translate="yes" xml:space="preserve">
          <source>This special variable is correctly set to the pseudo-process ID. It can be used to identify pseudo-processes within a particular session. Note that this value is subject to recycling if any pseudo-processes are launched after others have been wait()-ed on.</source>
          <target state="translated">Эта специальная переменная корректно установлена на псевдопроцессный идентификатор.Она может быть использована для идентификации псевдопроцессов в рамках конкретного сеанса.Обратите внимание,что это значение подлежит переработке,если какие-либо псевдо-процессы запускаются после того,как другие были включены функцией wait()-ed.</target>
        </trans-unit>
        <trans-unit id="d6c4aceca7fa6325a5de35ebe0aa5f8ca9090348" translate="yes" xml:space="preserve">
          <source>This specifies a search for library &lt;code&gt;gl&lt;/code&gt; as before. If that search fails to find the library, it looks at the next item in the list. The &lt;code&gt;:nosearch&lt;/code&gt; flag will prevent searching for the libraries that follow, so it simply returns the value as &lt;code&gt;-Ld:\mesalibs -lmesa -luser32&lt;/code&gt;, since GCC can use that value as is with its linker.</source>
          <target state="translated">Это определяет поиск библиотеки &lt;code&gt;gl&lt;/code&gt; , как и раньше. Если этот поиск не может найти библиотеку, он просматривает следующий элемент в списке. &lt;code&gt;:nosearch&lt;/code&gt; флаг будет препятствовать поиску библиотек , которые следуют, так что это просто возвращает значение как &lt;code&gt;-Ld:\mesalibs -lmesa -luser32&lt;/code&gt; , так как GCC может использовать это значение как с его агентом.</target>
        </trans-unit>
        <trans-unit id="15c61edb09c43955982bc45d6acb4f0c4af7b4ab" translate="yes" xml:space="preserve">
          <source>This specifies an option to call the formatter &lt;b&gt;w&lt;/b&gt;ith. For example, &lt;code&gt;-w textsize:15&lt;/code&gt; will call &lt;code&gt;$formatter-&amp;gt;textsize(15)&lt;/code&gt; on the formatter object before it is used to format the object. For this to be valid, the formatter class must provide such a method, and the value you pass should be valid. (So if &lt;code&gt;textsize&lt;/code&gt; expects an integer, and you do &lt;code&gt;-w textsize:big&lt;/code&gt;, expect trouble.)</source>
          <target state="translated">Это указывает возможность вызова средства форматирования &lt;b&gt;с помощью&lt;/b&gt; . Например, &lt;code&gt;-w textsize:15&lt;/code&gt; вызовет &lt;code&gt;$formatter-&amp;gt;textsize(15)&lt;/code&gt; для объекта форматирования перед его использованием для форматирования объекта. Чтобы это было действительным, класс средства форматирования должен предоставить такой метод, и значение, которое вы передаете, должно быть действительным. (Итак, если &lt;code&gt;textsize&lt;/code&gt; ожидает целое число, а вы используете &lt;code&gt;-w textsize:big&lt;/code&gt; , ждите неприятностей.)</target>
        </trans-unit>
        <trans-unit id="68a43776b3796bfc1e7b13ea689fcb5185c15c99" translate="yes" xml:space="preserve">
          <source>This specifies code that should be called when a code line is seen (i.e., a line outside of the Pod). Normally this is undef, meaning that no code should be called. If you provide a routine, it should start out like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a814b946e54a59ba68d016b5b039bbdb959679" translate="yes" xml:space="preserve">
          <source>This specifies that the director &quot;somedir&quot; is the input. (This can be an absolute or relative path, it doesn't matter.)</source>
          <target state="translated">Это указывает на то,что режиссер &quot;somedir&quot; является входом.(Это может быть абсолютный или относительный путь,это не имеет значения).</target>
        </trans-unit>
        <trans-unit id="6e3a29e95276948f0b11420f703cc3aaddffd6ef" translate="yes" xml:space="preserve">
          <source>This specifies that the input directories are the items in the arrayref &lt;code&gt;\@dirs&lt;/code&gt; .</source>
          <target state="translated">Это указывает, что входные каталоги - это элементы в arrayref &lt;code&gt;\@dirs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1655aff188e0c2a28c8b5f646e8ad62ec66c5897" translate="yes" xml:space="preserve">
          <source>This specifies that the input directories are the items in the arrayref &lt;code&gt;\@dirs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63679666659be8466fb9bd4dddfdca5063fd3f26" translate="yes" xml:space="preserve">
          <source>This specifies that the output is not to be sent to a pager, but is to be sent directly to STDOUT.</source>
          <target state="translated">Это указывает на то,что вывод не должен быть отправлен на пейджер,а должен быть отправлен непосредственно в STDOUT.</target>
        </trans-unit>
        <trans-unit id="b1a8fe6a04c1ca76ee22b76d1682c8136ef9711f" translate="yes" xml:space="preserve">
          <source>This specifies that the output is to be sent neither to a pager nor to STDOUT, but is to be saved to the specified filename. Example: &lt;code&gt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&lt;/code&gt;</source>
          <target state="translated">Это указывает, что вывод не должен быть отправлен ни на пейджер, ни на STDOUT, но должен быть сохранен в указанном имени файла. Пример: &lt;code&gt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45d4b28c13ac9c0ec2726a96f6188b8beab502af" translate="yes" xml:space="preserve">
          <source>This specifies that you want Perldoc to try using a Pod-formatting class for the output format that you specify. For example: &lt;code&gt;-oman&lt;/code&gt; . This is actually just a wrapper around the &lt;code&gt;-M&lt;/code&gt; switch; using &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; just looks for a loadable class by adding that format name (with different capitalizations) to the end of different classname prefixes.</source>
          <target state="translated">Это указывает, что вы хотите, чтобы Perldoc попробовал использовать класс форматирования Pod для указанного вами выходного формата. Например: - &lt;code&gt;-oman&lt;/code&gt; . На самом деле это просто оболочка вокруг переключателя &lt;code&gt;-M&lt;/code&gt; ; использование &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; просто ищет загружаемый класс, добавляя это имя формата (с разными заглавными буквами) в конец разных префиксов имени класса.</target>
        </trans-unit>
        <trans-unit id="010d97695be94f0fec9f8d59b9e5f92e8321d055" translate="yes" xml:space="preserve">
          <source>This specifies that you want Perldoc to try using a Pod-formatting class for the output format that you specify. For example: &lt;code&gt;-oman&lt;/code&gt;. This is actually just a wrapper around the &lt;code&gt;-M&lt;/code&gt; switch; using &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; just looks for a loadable class by adding that format name (with different capitalizations) to the end of different classname prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4b01265a71898dfb9f81df9b68ddce9ce51346" translate="yes" xml:space="preserve">
          <source>This specifies that you want the HTML output to go into the current directory.</source>
          <target state="translated">Это указывает на то,что вы хотите,чтобы вывод HTML перешел в текущую директорию.</target>
        </trans-unit>
        <trans-unit id="2ae7a3e343e7bbeb0dfb1ab04a69a9932581a88b" translate="yes" xml:space="preserve">
          <source>This specifies that you want the HTML output to go into the directory 'somedir'. (This can be an absolute or relative path, it doesn't matter.)</source>
          <target state="translated">Это указывает на то,что вы хотите,чтобы вывод HTML зашел в директорию 'somedir'.(Это может быть абсолютный или относительный путь,это не имеет значения).</target>
        </trans-unit>
        <trans-unit id="e7729b553095fc163c271a3e43dbeb5e583f17f6" translate="yes" xml:space="preserve">
          <source>This specifies that you want the dirs &quot;somedir&quot;, &quot;someother&quot;, and &quot;also&quot; scanned, just as if you'd passed the arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt; . Note that a &quot;:&quot;-separator is normal under Unix, but Under MSWin, you'll need &lt;code&gt;'somedir;someother;also'&lt;/code&gt; instead, since the pathsep on MSWin is &quot;;&quot; instead of &quot;:&quot;. (And</source>
          <target state="translated">Это указывает на то, что вы хотите просканировать каталоги somedir, someother и также, как если бы вы передали arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt; . Обратите внимание, что разделитель &quot;:&quot; - нормальный в Unix, но в MSWin вместо него вам понадобится &lt;code&gt;'somedir;someother;also'&lt;/code&gt; , поскольку pathsep в MSWin равен &quot;;&quot; вместо того &quot;:&quot;. (И</target>
        </trans-unit>
        <trans-unit id="4d5774ca5649a7d9fa31c36d1f9fa10a02babb34" translate="yes" xml:space="preserve">
          <source>This specifies that you want the dirs &quot;somedir&quot;, &quot;someother&quot;, and &quot;also&quot; scanned, just as if you'd passed the arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt;. Note that a &quot;:&quot;-separator is normal under Unix, but Under MSWin, you'll need &lt;code&gt;'somedir;someother;also'&lt;/code&gt; instead, since the pathsep on MSWin is &quot;;&quot; instead of &quot;:&quot;. (And</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8852ab4d60e276583c1dd4292c015bb068208e6" translate="yes" xml:space="preserve">
          <source>This specifies the module that you want to try using for formatting the pod. The class must at least provide a &lt;code&gt;parse_from_file&lt;/code&gt; method. For example: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt; .</source>
          <target state="translated">Это указывает модуль, который вы хотите попробовать использовать для форматирования модуля. Класс должен как минимум предоставлять метод &lt;code&gt;parse_from_file&lt;/code&gt; . Например: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9860d4fcf1674e2b5833d10a9182c9c5be14d26" translate="yes" xml:space="preserve">
          <source>This specifies the module that you want to try using for formatting the pod. The class must at least provide a &lt;code&gt;parse_from_file&lt;/code&gt; method. For example: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be95e643e0441d56be0f4bdb53c658cbf47d5fc4" translate="yes" xml:space="preserve">
          <source>This specifies what string should be put at the beginning of the contents page. The default is a string more or less like this:</source>
          <target state="translated">Это определяет,какую строку следует поместить в начало страницы содержимого.По умолчанию строка более или менее похожа на эту:</target>
        </trans-unit>
        <trans-unit id="9c8f94ea33d23c19ce77204a84bf9dc0e745ad73" translate="yes" xml:space="preserve">
          <source>This specifies what string should be put at the end of the contents page. The default is a string more or less like this:</source>
          <target state="translated">Это определяет,какая строка должна быть помещена в конец страницы содержимого.По умолчанию строка более или менее похожа на эту:</target>
        </trans-unit>
        <trans-unit id="6917d9958e46c59dbadffa0d75ffc8ead9eeb027" translate="yes" xml:space="preserve">
          <source>This specifies where to find a YAML file of test scheduling rules. If not provided, it looks for a default file to use. It first checks for a file given in the &lt;code&gt;HARNESS_RULESFILE&lt;/code&gt; environment variable, then it checks for</source>
          <target state="translated">Это указывает, где найти YAML-файл правил планирования тестирования. Если не указан, он ищет файл по умолчанию для использования. Сначала он проверяет наличие файла, указанного в &lt;code&gt;HARNESS_RULESFILE&lt;/code&gt; среды HARNESS_RULESFILE , затем проверяет наличие</target>
        </trans-unit>
        <trans-unit id="ad18b67d60ebc32fa32a162a7cf995a9a7c75509" translate="yes" xml:space="preserve">
          <source>This stack stores the values that regular perl code is operating on, usually intermediate values of expressions within a statement. The stack itself is formed of an array of SV pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702c584a5b241344dd398527ce50b4bfbe9b63e" translate="yes" xml:space="preserve">
          <source>This stage is controlled by the macro &lt;code&gt;SIZE_ONLY&lt;/code&gt; being set.</source>
          <target state="translated">Этот этап управляется &lt;code&gt;SIZE_ONLY&lt;/code&gt; макросом SIZE_ONLY .</target>
        </trans-unit>
        <trans-unit id="bad4c7bd6149d53fef7284ef08f67b09b3206bd8" translate="yes" xml:space="preserve">
          <source>This statement is not a legal contract. This statement is not a legal document in any way, shape, or form. Perl is distributed under the GNU Public License and under the Artistic License; those are the precise legal terms. This statement isn't about the law or licenses. It's about community, mutual respect, trust, and good-faith cooperation.</source>
          <target state="translated">Это заявление не является юридическим договором.Данное заявление никоим образом не является юридическим документом,ни по форме,ни по форме.Perl распространяется на условиях Общественной лицензии GNU и Художественной лицензии;это точные юридические условия.Это утверждение не относится к закону или лицензиям.Оно о сообществе,взаимном уважении,доверии и добросовестном сотрудничестве.</target>
        </trans-unit>
        <trans-unit id="5a98c55935426becf715b954b892501f79db080b" translate="yes" xml:space="preserve">
          <source>This statement should at least appear in the README file. You may also wish to include it in a Copying file and your source files. Remember to include the other words in addition to the Copyright.</source>
          <target state="translated">Это утверждение должно,по крайней мере,появиться в файле README.Вы также можете включить его в файл копирования и в исходные файлы.Не забудьте включить другие слова в дополнение к авторскому праву.</target>
        </trans-unit>
        <trans-unit id="5584a0e56dfda5fbec4748cd6a50bc455909922d" translate="yes" xml:space="preserve">
          <source>This step is listed for completeness only. Since it does not change semantics, details of this step are not documented and are subject to change without notice. This step is performed over the finite automaton that was generated during the previous pass.</source>
          <target state="translated">Этот шаг указан только для полноты.Так как он не изменяет семантику,детали этого шага не документируются и могут быть изменены без предварительного уведомления.Этот шаг выполняется над конечным автоматом,который был сгенерирован во время предыдущего прохода.</target>
        </trans-unit>
        <trans-unit id="54c5eb8ed193c34bf7512d41b140b26cac84363b" translate="yes" xml:space="preserve">
          <source>This step is the last one for all constructs except regular expressions, which are processed further.</source>
          <target state="translated">Этот шаг является последним для всех конструкций,кроме регулярных выражений,которые обрабатываются в дальнейшем.</target>
        </trans-unit>
        <trans-unit id="821b4588528e230329db6b553dfd4048a67b80be" translate="yes" xml:space="preserve">
          <source>This still doesn't guarantee that a real person is answering your prompts or reading your output.</source>
          <target state="translated">Это все равно не гарантирует,что реальный человек ответит на ваши подсказки или прочитает ваш вывод.</target>
        </trans-unit>
        <trans-unit id="a7c9161f97b6f8900f13bf7304c1db4d0488adaf" translate="yes" xml:space="preserve">
          <source>This stores the number of eval groups in the pattern. This is used for security purposes when embedding compiled regexes into larger patterns with &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это сохраняет количество групп eval в шаблоне. Это используется в целях безопасности при встраивании скомпилированных регулярных выражений в более крупные шаблоны с помощью &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc862416697ee8a2c0658635a4952465e7e9a208" translate="yes" xml:space="preserve">
          <source>This stores the number of eval groups in the pattern. This is used for security purposes when embedding compiled regexes into larger patterns with &lt;code&gt;qr//&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc38633b5aabfda04a32707218d9bef85297337b" translate="yes" xml:space="preserve">
          <source>This strategy can employ a network connection. As such it would be computationally expensive.</source>
          <target state="translated">Эта стратегия может использовать сетевое соединение.Как таковое,оно будет дорогостоящим с вычислительной точки зрения.</target>
        </trans-unit>
        <trans-unit id="55b6f7ba63a618224a4b898bcbb27d9706c30d52" translate="yes" xml:space="preserve">
          <source>This string tells Perl to consult the CRTL's internal &lt;code&gt;environ&lt;/code&gt; array of key-value pairs, using</source>
          <target state="translated">Эта строка говорит Perl проконсультироваться внутрений CRTL в &lt;code&gt;environ&lt;/code&gt; массив пар ключ-значение, используя</target>
        </trans-unit>
        <trans-unit id="7ae6448a0aa9566553b6817c071e02a343cc087d" translate="yes" xml:space="preserve">
          <source>This struct typedef</source>
          <target state="translated">Этот структурированный шрифт</target>
        </trans-unit>
        <trans-unit id="f1bc15138286b1a37e209e8a6243ffb9f2ea5373" translate="yes" xml:space="preserve">
          <source>This structure is used for handling data structures that the regex engine needs to handle specially during a clone or free operation on the compiled product. Each element in the data array has a corresponding element in the what array. During compilation regops that need special structures stored will add an element to each array using the add_data() routine and then store the index in the regop.</source>
          <target state="translated">Эта структура используется для обработки структур данных,с которыми регрессионный двигатель должен работать особенно во время клонирования или свободной работы на собранном продукте.Каждый элемент массива данных имеет соответствующий элемент в каком массиве.Во время компиляции регопы,которым нужны хранимые специальные структуры,добавляют элемент в каждый массив с помощью функции add_data(),а затем сохраняют индекс в регопе.</target>
        </trans-unit>
        <trans-unit id="313e4efa9f1c4a624d38d9de85969d28133dcf4f" translate="yes" xml:space="preserve">
          <source>This stuff if needed to allow me to play with other ways of monitoring the test results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78d4b0d4925694b27ab08d1c6e58334dc8e28bc" translate="yes" xml:space="preserve">
          <source>This style of commenting has been largely superseded by the raw, freeform commenting that is allowed with the &lt;code&gt;//x&lt;/code&gt; modifier.</source>
          <target state="translated">Этот стиль комментирования в значительной степени вытеснен необработанными комментариями в произвольной форме, которые допускаются с помощью модификатора &lt;code&gt;//x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="057805a7554b8dd392dcf60ed8e3b1750c015cb9" translate="yes" xml:space="preserve">
          <source>This style of commenting has been largely superseded by the raw, freeform commenting that is allowed with the &lt;code&gt;/x&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9149446c6e172d289bce208ab7502a726c607dbb" translate="yes" xml:space="preserve">
          <source>This subkey gives the integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f344b018a57310e7df154cc09c4a4c8ffc8347" translate="yes" xml:space="preserve">
          <source>This subroutine accepts a new style name and three style arguments as above, and creates, registers, and selects the newly named style. It is an error to re-add a style; call set_style_standard() to switch between several styles.</source>
          <target state="translated">Эта подпрограмма принимает новое имя стиля и три аргумента стиля,как указано выше,и создает,регистрирует и выбирает новый стиль.Ошибкой является повторное добавление стиля;вызов set_style_standard()для переключения между несколькими стилями.</target>
        </trans-unit>
        <trans-unit id="d4edd10fd3d7f6f2e8552ea6e5bfd25a981a931d" translate="yes" xml:space="preserve">
          <source>This subroutine produces a standard help message, derived from the program's POD section SYNOPSIS using &lt;a href=&quot;../pod/usage&quot;&gt;Pod::Usage&lt;/a&gt;. It takes the same arguments as VersionMessage(). In particular, you cannot tie it directly to an option, e.g.:</source>
          <target state="translated">Эта подпрограмма создает стандартное справочное сообщение, полученное из раздела SYNOPSIS программы POD с использованием &lt;a href=&quot;../pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt; . Он принимает те же аргументы, что и VersionMessage (). В частности, вы не можете напрямую привязать его к опции, например:</target>
        </trans-unit>
        <trans-unit id="9b889ca4ce29aee9a3861172160f0fc1f9aa54f8" translate="yes" xml:space="preserve">
          <source>This subroutine produces a standard help message, derived from the program's POD section SYNOPSIS using &lt;a href=&quot;Pod::Usage&quot;&gt;Pod::Usage&lt;/a&gt;. It takes the same arguments as VersionMessage(). In particular, you cannot tie it directly to an option, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5689fa040b7fc66f95972afdb83490d423250c81" translate="yes" xml:space="preserve">
          <source>This subroutine provides a standard version message. Its argument can be:</source>
          <target state="translated">Эта подпрограмма предоставляет сообщение стандартной версии.Ее аргументом может быть:</target>
        </trans-unit>
        <trans-unit id="8ecee5dd8e0a61ddae4c3d45c386aa7954dd0f33" translate="yes" xml:space="preserve">
          <source>This subroutine will add commas to your number:</source>
          <target state="translated">Эта подпрограмма добавит запятых к вашему номеру:</target>
        </trans-unit>
        <trans-unit id="f33530c08d2ea0b801b43fac5cff8bb563110c57" translate="yes" xml:space="preserve">
          <source>This succeeds if the &quot;martian&quot; character GX is in the string, and fails otherwise. If you don't like using (?&amp;lt;!), a zero-width negative look-behind assertion, you can replace (?&amp;lt;![A-Z]) with (?:^|[^A-Z]).</source>
          <target state="translated">Это успешно, если &quot;марсианский&quot; символ GX находится в строке, и не работает в противном случае. Если вам не нравится использовать (? &amp;lt;!), Утверждение отрицательного просмотра назад нулевой ширины, вы можете заменить (? &amp;lt;! [AZ]) на (?: ^ | [^ AZ]).</target>
        </trans-unit>
        <trans-unit id="85a98330f72d7fa29e768ec7aa2344fb1a20cbca" translate="yes" xml:space="preserve">
          <source>This suppresses printing of VMS status messages to SYS$OUTPUT and SYS$ERROR if Perl terminates with an error status, and allows programs that are expecting &quot;unix-style&quot; Perl to avoid having to parse VMS error messages. It does not suppress any messages from Perl itself, just the messages generated by DCL after Perl exits. The DCL symbol $STATUS will still have the termination status, but with a high-order bit set:</source>
          <target state="translated">Это подавляет печать сообщений о состоянии VMS в SYS$OUTPUT и SYS$ERROR,если Perl заканчивается со статусом ошибки,и позволяет программам,ожидающим Perl в &quot;уникс-стиле&quot;,избежать необходимости разбора сообщений об ошибках VMS.Он не подавляет сообщения от самого Perl,а только сообщения,генерируемые DCL после выхода Perl.Символ DCL $STATUS все равно будет иметь статус завершения,но с набором старших битов:</target>
        </trans-unit>
        <trans-unit id="a73c08f06f0acf42846845d03633aa9b47905a33" translate="yes" xml:space="preserve">
          <source>This surprising autovivification in what does not at first--or even second--glance appear to be an lvalue context may be fixed in a future release.</source>
          <target state="translated">Это удивительное автообновление в том,что не в первый раз-или даже второй взгляд кажется контекстом lvalue,может быть исправлено в будущем релизе.</target>
        </trans-unit>
        <trans-unit id="e56b6634af06492105c8150cce8eec38c642722a" translate="yes" xml:space="preserve">
          <source>This switch causes Perl to dump core after compiling your program. You can then in theory take this core dump and turn it into an executable file by using the</source>
          <target state="translated">Этот переключатель заставляет Perl выдавливать ядро после компиляции вашей программы.Затем вы можете теоретически взять этот дамп ядра и превратить его в исполняемый файл,используя параметр</target>
        </trans-unit>
        <trans-unit id="cdeac32803cbaac383dc34d3e5d5f188b61766f8" translate="yes" xml:space="preserve">
          <source>This switch really just enables the global &lt;code&gt;$^W&lt;/code&gt; variable; normally, the lexically scoped &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma is preferred. You can disable or promote into fatal errors specific warnings using &lt;code&gt;__WARN__&lt;/code&gt; hooks, as described in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; and &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;. See also &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; and &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt;. A fine-grained warning facility is also available if you want to manipulate entire classes of warnings; see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Этот переключатель на самом деле просто включает глобальную переменную &lt;code&gt;$^W&lt;/code&gt; ; обычно предпочтительнее &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; прагму предупреждений с лексической областью видимости . Вы можете отключить или преобразовать в конкретные предупреждения о фатальных ошибках с &lt;code&gt;__WARN__&lt;/code&gt; хуков __WARN__ , как описано в &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; и &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; . См. Также &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; и &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt; . Также доступна функция детализированных предупреждений, если вы хотите управлять целыми классами предупреждений; см. &lt;a href=&quot;warnings&quot;&gt;предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1eec8c1e53eca861ae72403ed034c71d15de36a4" translate="yes" xml:space="preserve">
          <source>This switch really just enables the global &lt;code&gt;$^W&lt;/code&gt; variable; normally, the lexically scoped &lt;code&gt;use warnings&lt;/code&gt; pragma is preferred. You can disable or promote into fatal errors specific warnings using &lt;code&gt;__WARN__&lt;/code&gt; hooks, as described in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; and &lt;a href=&quot;perlfunc#warn&quot;&gt;&quot;warn&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; and &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt;. A fine-grained warning facility is also available if you want to manipulate entire classes of warnings; see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aace5953cb75e0bd50c74f57a0b38f9c0103c2" translate="yes" xml:space="preserve">
          <source>This symbol conditionally defines the symbol &lt;code&gt;BSD&lt;/code&gt; when running on a &lt;code&gt;BSD&lt;/code&gt; system.</source>
          <target state="translated">Этот символ условно определяет символ &lt;code&gt;BSD&lt;/code&gt; при работе в системе &lt;code&gt;BSD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dffb9b12a2139e8c4c666d76c2bbb94b410515d" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by mmap() (and simultaneously the type of the first argument). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;caddr_t&lt;/code&gt; .</source>
          <target state="translated">Этот символ содержит тип указателя, возвращаемого mmap () (и одновременно тип первого аргумента). Это может быть &lt;code&gt;void *&lt;/code&gt; или &lt;code&gt;caddr_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82fb35656fbf4e4b9cf3733e209ae82b04049909" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by mmap() (and simultaneously the type of the first argument). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;caddr_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78cc593a5e3d5f9580ef534ee09e8fe0d641140" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by shmat(). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;char *&lt;/code&gt; .</source>
          <target state="translated">Этот символ содержит тип указателя, возвращаемый функцией shmat (). Это может быть &lt;code&gt;void *&lt;/code&gt; или &lt;code&gt;char *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="784f8163b2c96f5e1ad2d33b1877166fe69ae941" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by shmat(). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f3ba36a4f3dda7bd8acb2eea24bb10daa748c" translate="yes" xml:space="preserve">
          <source>This symbol is defined if using the &lt;code&gt;FILE_ptr&lt;/code&gt; macro as an lvalue to increase the pointer by n has the side effect of decreasing the value of File_cnt(fp) by n.</source>
          <target state="translated">Этот символ определяется, если использование макроса &lt;code&gt;FILE_ptr&lt;/code&gt; в качестве lvalue для увеличения указателя на n имеет побочный эффект уменьшения значения File_cnt (fp) на n.</target>
        </trans-unit>
        <trans-unit id="0683919acfce603ad7685e97943788fb4e37c119" translate="yes" xml:space="preserve">
          <source>This symbol is defined if using the &lt;code&gt;FILE_ptr&lt;/code&gt; macro as an lvalue to increase the pointer by n leaves File_cnt(fp) unchanged.</source>
          <target state="translated">Этот символ определяется, если использование макроса &lt;code&gt;FILE_ptr&lt;/code&gt; в качестве lvalue для увеличения указателя на n оставляет File_cnt (fp) без изменений.</target>
        </trans-unit>
        <trans-unit id="93f9dcbec7fb63d67f75a0e1d4dc9ae41d2b59f2" translate="yes" xml:space="preserve">
          <source>This symbol is set to &lt;code&gt;struct direct&lt;/code&gt; or &lt;code&gt;struct dirent&lt;/code&gt; depending on whether dirent is available or not. You should use this pseudo type to portably declare your directory entries.</source>
          <target state="translated">Этот символ имеет значение &lt;code&gt;struct direct&lt;/code&gt; или &lt;code&gt;struct dirent&lt;/code&gt; в зависимости от того, доступен ли dirent или нет. Вы должны использовать этот псевдотип для переносимого объявления записей каталога.</target>
        </trans-unit>
        <trans-unit id="ac5221df55c0b6f88cbdccf1d492a80ec8b042ec" translate="yes" xml:space="preserve">
          <source>This symbol reflects the patchlevel, if available. Will usually come from the</source>
          <target state="translated">Этот символ отражает уровень патча,если он доступен.Обычно будет исходить от</target>
        </trans-unit>
        <trans-unit id="b709a76faa1011cf3f1c524bd59100484a2a8c2a" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports fpos64_t.</source>
          <target state="translated">Этот символ будет определен,если Си-компилятор поддерживает fpos64_t.</target>
        </trans-unit>
        <trans-unit id="343c9a95f0e1882d7b8de9c8d965312cb38ddb59" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports int64_t.</source>
          <target state="translated">Этот символ будет определен,если Си-компилятор поддерживает int64_t.</target>
        </trans-unit>
        <trans-unit id="9fabec6c07d2b2eb93287e97cce2db59d9d91ab9" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports off64_t.</source>
          <target state="translated">Этот символ будет определен,если компилятор Си поддерживает off64_t.</target>
        </trans-unit>
        <trans-unit id="425b3d025cac3f927d48be352caec0255a6ff1f6" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports ptrdiff_t.</source>
          <target state="translated">Этот символ будет определен,если компилятор Си поддерживает ptrdiff_t.</target>
        </trans-unit>
        <trans-unit id="8b08c311a150e9da2b658a2599a4ffb33ccacd56" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports socklen_t.</source>
          <target state="translated">Этот символ будет определен,если компилятор Си поддерживает socklen_t.</target>
        </trans-unit>
        <trans-unit id="025aea88f0880f5a01a7cfa41a1296fe3bb5e473" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the malloc_good_size routine is available for use.</source>
          <target state="translated">Этот символ,если он определен,означает,что рутина malloc_good_size доступна для использования.</target>
        </trans-unit>
        <trans-unit id="8a656f9000aaa7b4a0b80166141d60895ed70146" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the malloc_size routine is available for use.</source>
          <target state="translated">Этот символ,если он определен,означает,что рутина malloc_size доступна для использования.</target>
        </trans-unit>
        <trans-unit id="9f16a25b173530b121560b8b39634ea26912b006" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the system provides a prototype for the modfl() function. Otherwise, it is up to the program to supply one. C99 says it should be long double modfl(long double, long double *);</source>
          <target state="translated">Этот символ,если он определен,указывает на то,что система предоставляет прототип функции modfl().В противном случае,его должна предоставить программа.C99 говорит,что это должно быть long double modfl(long double,long double *);</target>
        </trans-unit>
        <trans-unit id="46fd1ea7339001ddcefcaaf1e70c3783b77303d2" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the system stores the variable argument list datatype, va_list, in a format that cannot be copied by simple assignment, so that some other means must be used when copying is required. As such systems vary in their provision (or non-provision) of copying mechanisms,</source>
          <target state="translated">Этот символ,если он определен,указывает на то,что система хранит тип данных списка аргументов переменных,va_list,в формате,который не может быть скопирован простым присваиванием,так что при копировании необходимо использовать другие средства.Поскольку такие системы отличаются предоставлением (или непредоставлением)механизмов копирования,</target>
        </trans-unit>
        <trans-unit id="33cfc6c8458868fdba1853ad63d6a5ab248c80dd" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that we can use _NSGetExecutablePath and realpath to get a full path for the executable, and hence convert $^X to an absolute path.</source>
          <target state="translated">Этот символ,если он определен,указывает,что мы можем использовать _NSGetExecutablePath и realpath,чтобы получить полный путь к исполняемому файлу,и,следовательно,преобразовать $^X в абсолютный путь.</target>
        </trans-unit>
        <trans-unit id="c755fed5c388f41a69a9c083b151ea18f5a79b60" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates to the C program that it should include &amp;lt;xlocale.h&amp;gt; to get uselocale() and its friends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cca9096a2b0dd91e445763521373111ae6cf7d" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells how many mantissa bits there are in double precision floating point format. Note that this is usually &lt;code&gt;DBL_MANT_DIG&lt;/code&gt; minus one, since with the standard &lt;code&gt;IEEE&lt;/code&gt; 754 formats &lt;code&gt;DBL_MANT_DIG&lt;/code&gt; includes the implicit bit which doesn't really exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cda7b3100613ca1663cb55bf36b335f38c04e0" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells how many mantissa bits there are in long double precision floating point format. Note that this can be &lt;code&gt;LDBL_MANT_DIG&lt;/code&gt; minus one, since &lt;code&gt;LDBL_MANT_DIG&lt;/code&gt; can include the &lt;code&gt;IEEE&lt;/code&gt; 754 implicit bit. The common x86-style 80-bit long double does not have an implicit bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5579cd2141da02375bbc1afc9cdf3e216d16eb" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that fflush(&lt;code&gt;NULL&lt;/code&gt; ) correctly flushes all pending stdio output without side effects. In particular, on some platforms calling fflush(&lt;code&gt;NULL&lt;/code&gt; ) *still* corrupts &lt;code&gt;STDIN&lt;/code&gt; if it is a pipe.</source>
          <target state="translated">Этот символ, если он определен, сообщает, что fflush ( &lt;code&gt;NULL&lt;/code&gt; ) правильно сбрасывает весь ожидающий вывод stdio без побочных эффектов. В частности, на некоторых платформах вызов fflush ( &lt;code&gt;NULL&lt;/code&gt; ) * still * повреждает &lt;code&gt;STDIN&lt;/code&gt; , если это канал.</target>
        </trans-unit>
        <trans-unit id="864f27e3d5797754ededc663f882621f2b6e62f1" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that fflush(&lt;code&gt;NULL&lt;/code&gt;) correctly flushes all pending stdio output without side effects. In particular, on some platforms calling fflush(&lt;code&gt;NULL&lt;/code&gt;) *still* corrupts &lt;code&gt;STDIN&lt;/code&gt; if it is a pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345492b736fde856a18832ea228dc15b7f57e1fd" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that to flush all pending stdio output one must loop through all the stdio file handles stored in an array and fflush them. Note that if fflushNULL is defined, fflushall will not even be probed for and will be left undefined.</source>
          <target state="translated">Этот символ,если он задан,говорит о том,что для прошивки всех ожидающих выхода stdio необходимо пройтись по всем дескрипторам stdio файлов,хранящимся в массиве,и промыть их.Обратите внимание,что если определено значение fflushNULL,то fflushall даже не будет проверяться и останется неопределенным.</target>
        </trans-unit>
        <trans-unit id="dcd9bfb79795353183cc954075073576d42a4a96" translate="yes" xml:space="preserve">
          <source>This syntax can be used with any class or object method:</source>
          <target state="translated">Данный синтаксис может быть использован с любым классом или объектным методом:</target>
        </trans-unit>
        <trans-unit id="361a88cbd3ef11a7c4b058ea6f65a1768cf1bf06" translate="yes" xml:space="preserve">
          <source>This syntax make the caret a special character inside a bracketed character class, but only if it is the first character of the class. So if you want the caret as one of the characters to match, either escape the caret or else don't list it first.</source>
          <target state="translated">Этот синтаксис делает каретту специальным символом внутри класса символов,заключённых в скобки,но только если это первый символ класса.Поэтому,если вы хотите,чтобы каретта была одним из символов,либо выходите из каретты,либо не указывайте ее первым.</target>
        </trans-unit>
        <trans-unit id="cf8882c6e41ea0e436011545b6eac42846ae64e6" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'postderef'&lt;/code&gt; . It is experimental, and will warn by default unless &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::postderef'&lt;/code&gt; is in effect.</source>
          <target state="translated">Этот синтаксис должен быть включен с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'postderef'&lt;/code&gt; . Это экспериментально, и по умолчанию &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::postderef'&lt;/code&gt; предупреждение, если &lt;a href=&quot;functions/no&quot;&gt;не&lt;/a&gt; действует предупреждение &amp;laquo;экспериментальный :: postderef&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="2448d5ee0ab20cace7d0d694356cb8b018b6fff7" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'refaliasing'&lt;/code&gt; . It is experimental, and will warn by default unless &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::refaliasing'&lt;/code&gt; is in effect.</source>
          <target state="translated">Этот синтаксис должен быть включен с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'refaliasing'&lt;/code&gt; . Это экспериментально, и по умолчанию &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::refaliasing'&lt;/code&gt; предупреждение, если &lt;a href=&quot;functions/no&quot;&gt;не&lt;/a&gt; действует предупреждение &amp;laquo;экспериментальный :: refaliasing&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="287e0462bd1d909a19c1388821cda96b1374549b" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;use feature 'refaliasing'&lt;/code&gt;. It is experimental, and will warn by default unless &lt;code&gt;no warnings 'experimental::refaliasing'&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f3dce1b8ffb69288b5e7233eedf50e51bf6d28" translate="yes" xml:space="preserve">
          <source>This table should give some indication on the relative speed of different algorithms. It is sorted by throughput based on a benchmark done with of some implementations of this API:</source>
          <target state="translated">Эта таблица должна дать некоторое представление об относительной скорости работы различных алгоритмов.Она отсортирована по пропускной способности на основе бенчмарка,выполненного с некоторыми реализациями данного API:</target>
        </trans-unit>
        <trans-unit id="dd4da486347f5d466977ce9a1a1aa8289c5632b1" translate="yes" xml:space="preserve">
          <source>This table summarizes the mapping of the encodings set up by the &lt;code&gt;Encode::Locale&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7d00a447b322e0b6281e41be210174353561f" translate="yes" xml:space="preserve">
          <source>This tag holds groups of assorted specialist opcodes that don't warrant having optags defined for them.</source>
          <target state="translated">Эта метка содержит группы различных специализированных опкодов,которые не гарантируют,что для них будут определены оптограммы.</target>
        </trans-unit>
        <trans-unit id="4b596b3ecff7c84a2d9f652cda2f444e71a7c9fa" translate="yes" xml:space="preserve">
          <source>This tag holds opcodes related to loading modules and getting information about calling environment and args.</source>
          <target state="translated">Этот тег содержит опкоды,связанные с загрузкой модулей и получением информации о вызывающей среде и аргументах.</target>
        </trans-unit>
        <trans-unit id="04ae009bf5132dad193828814ac61d5405735292" translate="yes" xml:space="preserve">
          <source>This tag is simply a bucket for opcodes that are unlikely to be used via a tag name but need to be tagged for completeness and documentation.</source>
          <target state="translated">Этот тег-просто ведро для опкодов,которые вряд ли будут использоваться через имя тега,но должны быть помечены для полноты и документации.</target>
        </trans-unit>
        <trans-unit id="2f05cedd800de4070129a2009cffd984beb3db08" translate="yes" xml:space="preserve">
          <source>This takes a list of operator names and returns the corresponding list of operator descriptions.</source>
          <target state="translated">При этом берется список имен операторов и возвращается соответствующий список описаний операторов.</target>
        </trans-unit>
        <trans-unit id="7c7d2a6226efbfa63a2425be94ed3ca13dcfd261" translate="yes" xml:space="preserve">
          <source>This takes a list of strings (which are presumed to be language-tags; strings that aren't, are ignored); and after each one, this function inserts super-ordinate forms that don't already appear in the list. The original list, plus these insertions, is returned.</source>
          <target state="translated">Для этого берется список строк (которые предположительно являются языковыми тегами;строки,которые не являются таковыми,игнорируются),а после каждой из них эта функция вставляет супер-ординатные формы,которые еще не появились в списке.Возвращается исходный список,плюс эти вставки.</target>
        </trans-unit>
        <trans-unit id="13fd8ee50911015c2027466ceb16f127d689e9d2" translate="yes" xml:space="preserve">
          <source>This takes a locale name (like &quot;en&quot;, &quot;en_US&quot;, or &quot;en_US.ISO8859-1&quot;) and maps it to a language tag. If it's not mappable (as with, notably, &quot;C&quot; and &quot;POSIX&quot;), this returns empty-list in a list context, or undef in a scalar context.</source>
          <target state="translated">При этом берется имя локали (например,&quot;en&quot;,&quot;en_US&quot; или &quot;en_US.ISO8859-1&quot;)и привязывается к языковому тегу.Если он не отображается (как,например,&quot;C&quot; и &quot;POSIX&quot;),возвращается пустой список в контексте списка,или undef в скалярном контексте.</target>
        </trans-unit>
        <trans-unit id="bec8c5f2b922f1fda3abe6ef42f1ed85d0f41b3d" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of a .packlist. If the file exists, it will be opened and the contents of the file will be read. The new() method returns a reference to a hash. This hash holds an entry for each line in the .packlist. In the case of old-style .packlists, the value associated with each key is undef. In the case of new-style .packlists, the value associated with each key is a hash containing the key=value pairs following the filename in the .packlist.</source>
          <target state="translated">Для этого требуется необязательный параметр,имя .packlist.Если файл существует,он будет открыт,а его содержимое будет прочитано.Метод new()возвращает ссылку на хэш.Этот хэш содержит запись для каждой строки в .packlist.В случае .packlists в старом стиле,значение,связанное с каждым ключом,является undef.В случае списков .packlist'ов нового типа,значение,связанное с каждым ключом,представляет собой хэш,содержащий пары ключ=значение,следующие за именем файла в списке .packlist'ов.</target>
        </trans-unit>
        <trans-unit id="cc773e12adc99441c781ca39ab744dcff4457a5a" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of the .packlist to be read. If no file is specified, the .packlist specified to new() will be read. If the .packlist does not exist, Carp::croak will be called.</source>
          <target state="translated">Для этого требуется прочитать необязательный параметр,имя .packlist.Если файл не указан,будет прочитан .packlist,указанный в функции new().Если .packlist не существует,будет вызван Carp::croak.</target>
        </trans-unit>
        <trans-unit id="1a1bc9e2453dd25ae8b25a05301cb1b80e688d4f" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of the .packlist to be written. If no file is specified, the .packlist specified to new() will be overwritten.</source>
          <target state="translated">Для этого требуется необязательный параметр,имя .packlist для записи.Если файл не указан,то .packlist,указанный в функции new(),будет перезаписан.</target>
        </trans-unit>
        <trans-unit id="71c865c7274d3c7e5bfe698effd4f04214f7cd15" translate="yes" xml:space="preserve">
          <source>This takes name/value pairs that effect how the test is run.</source>
          <target state="translated">При этом берутся пары имя/значение,которые влияют на то,как выполняется тест.</target>
        </trans-unit>
        <trans-unit id="cc76b10f19749554379a021ff3eedaa58c818a23" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It checks that all the files listed in the modules .packlist actually exist, and returns a list of any missing files. If an optional second argument which evaluates to true is given any missing files will be removed from the .packlist</source>
          <target state="translated">Для этого требуется один обязательный параметр-название модуля.Он проверяет,что все файлы,перечисленные в модулях .packlist,на самом деле существуют,и возвращает список недостающих файлов.Если второй необязательный аргумент,который вычисляется как истинный,то все недостающие файлы будут удалены из .packlist'а.</target>
        </trans-unit>
        <trans-unit id="5b5d51a829067c0f74043220e1f7dc0a082fd9a1" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It returns a list of all the directories from the package. Additional parameters are allowed. The first is one of the strings &quot;prog&quot;, &quot;doc&quot; or &quot;all&quot;, to select either just program directories, just manual directories or all directories. The remaining parameters are a list of directories. The directories returned will be restricted to those under the specified directories. This method returns only the leaf directories that contain files from the specified module.</source>
          <target state="translated">Для этого требуется один обязательный параметр-название модуля.Возвращается список всех каталогов из пакета.Дополнительные параметры разрешены.Первый-это одна из строк &quot;prog&quot;,&quot;doc&quot; или &quot;all&quot;,для выбора либо только каталогов программы,только каталогов вручную,либо всех каталогов.Остальные параметры представляют собой список каталогов.Возвращаемые каталоги будут ограничены только теми,которые находятся под указанными каталогами.При этом методе возвращаются только каталоги листов,содержащие файлы из указанного модуля.</target>
        </trans-unit>
        <trans-unit id="d2af5c7a635840c9a764106b51edcb4ae7965f15" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It returns a list of all the filenames from the package. To obtain a list of core perl files, use the module name 'Perl'. Additional parameters are allowed. The first is one of the strings &quot;prog&quot;, &quot;doc&quot; or &quot;all&quot;, to select either just program files, just manual files or all files. The remaining parameters are a list of directories. The filenames returned will be restricted to those under the specified directories.</source>
          <target state="translated">Для этого требуется один обязательный параметр-название модуля.Возвращает список всех имен файлов из пакета.Для получения списка файлов ядра perl используйте имя модуля 'Perl'.Дополнительные параметры разрешены.Первый-одна из строк &quot;prog&quot;,&quot;doc&quot; или &quot;all&quot;,для выбора либо просто файлов программы,либо только ручных файлов,либо всех файлов.Остальные параметры представляют собой список каталогов.Возвращаемые имена файлов будут ограничены теми,которые находятся под указанными каталогами.</target>
        </trans-unit>
        <trans-unit id="c87f6895af9c38d5c250f2c66fe4725760f823f0" translate="yes" xml:space="preserve">
          <source>This takes optional named parameters. Without parameters, this searches for all the installed .packlists on the system using information from &lt;code&gt;%Config::Config&lt;/code&gt; and the default module search paths &lt;code&gt;@INC&lt;/code&gt; . The packlists are read using the &lt;a href=&quot;packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt; module.</source>
          <target state="translated">Это принимает необязательные именованные параметры. Без параметров поиск всех установленных .packlists в системе осуществляется с использованием информации из &lt;code&gt;%Config::Config&lt;/code&gt; и путей поиска модулей по умолчанию &lt;code&gt;@INC&lt;/code&gt; . Списки пакетов читаются с помощью модуля &lt;a href=&quot;packlist&quot;&gt;ExtUtils :: Packlist&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af5e8e4c803265793609442c474430cf073a9f84" translate="yes" xml:space="preserve">
          <source>This takes optional named parameters. Without parameters, this searches for all the installed .packlists on the system using information from &lt;code&gt;%Config::Config&lt;/code&gt; and the default module search paths &lt;code&gt;@INC&lt;/code&gt;. The packlists are read using the &lt;a href=&quot;ExtUtils::Packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac00ded61272ff3715863e3d3dc5ed285ce52be5" translate="yes" xml:space="preserve">
          <source>This takes the hashref from &lt;code&gt;facet_data()&lt;/code&gt; and blesses each facet into the proper &lt;code&gt;Test2::EventFacet::*&lt;/code&gt; subclass. If no class can be found for any given facet it will be passed along unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0811a32d0bc5998774816ef12efb4252ce7381da" translate="yes" xml:space="preserve">
          <source>This talk of parameters and arbitrary complexity is just another way to say that an entry in a phrasebook is what in a programming language would be called a &quot;function&quot;. Just so you don't miss it, this is the crux of this article:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03ab8b368c68d278641fea23e27727f8dbba74" translate="yes" xml:space="preserve">
          <source>This target is stubbed out. Not sure why.</source>
          <target state="translated">Эта мишень накрыта.Не знаю,почему.</target>
        </trans-unit>
        <trans-unit id="fab4c4b22d474c11e9a11868afc03c97140845f1" translate="yes" xml:space="preserve">
          <source>This technique is most useful when you have a project that uses a lot of third-party modules. You can define all your possible hints in one-place. This can even be in a sub-class of autodie. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ca50a85da91c16a0a908f36c57ff992ef7c02c" translate="yes" xml:space="preserve">
          <source>This technique of separation of the glue part from the workhorse part has obvious tradeoffs: if you want to change a Perl interface, you need to change two places in your code. However, it removes a lot of clutter, and makes the workhorse part independent from idiosyncrasies of Perl calling convention. (In fact, there is nothing Perl-specific in the above description, a different version of &lt;b&gt;xsubpp&lt;/b&gt; might have translated this to TCL glue or Python glue as well.)</source>
          <target state="translated">Этот метод отделения клейкой части от рабочей лошадки имеет очевидные компромиссы: если вы хотите изменить интерфейс Perl, вам нужно изменить два места в вашем коде. Тем не менее, он удаляет много беспорядка и делает рабочую лошадку независимой от особенностей соглашения о вызовах Perl. (На самом деле, в приведенном выше описании нет ничего специфичного для Perl, другая версия &lt;b&gt;xsubpp&lt;/b&gt; могла бы также перевести это на клей TCL или клей Python.)</target>
        </trans-unit>
        <trans-unit id="579494abf777c1edad219e4e3e72f24bade80f1c" translate="yes" xml:space="preserve">
          <source>This technique was popular for a while (and was recommended in Damian Conway's</source>
          <target state="translated">Эта техника была популярна некоторое время (и была рекомендована в &quot;Damian Conway's</target>
        </trans-unit>
        <trans-unit id="5e8f5ce6d67f7bf4b479db2dfff968206c152d0a" translate="yes" xml:space="preserve">
          <source>This tells the compiler to use integer operations from here to the end of the enclosing BLOCK. On many machines, this doesn't matter a great deal for most computations, but on those without floating point hardware, it can make a big difference in performance.</source>
          <target state="translated">Это говорит компилятору использовать целочисленные операции отсюда до конца вложенного BLOCK.На многих машинах это не имеет большого значения для большинства вычислений,но на машинах без аппаратного обеспечения с плавающей запятой это может сильно повлиять на производительность.</target>
        </trans-unit>
        <trans-unit id="661943b2ace4b2cbd0e7c782744a83d712cb4bd1" translate="yes" xml:space="preserve">
          <source>This tells the parser that you accept additional formatting codes, beyond just the standard ones (I B C L F S X, plus the two weird ones you don't actually see in the parse tree, Z and E). For example, to also accept codes &quot;N&quot;, &quot;R&quot;, and &quot;W&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c227c573c801b67ab844d5a781ca2d861b5ad11" translate="yes" xml:space="preserve">
          <source>This test harness is the same as &lt;a href=&quot;../harness&quot;&gt;TAP::Harness&lt;/a&gt;, but test results are output in color. Passing tests are printed in green. Failing tests are in red. Skipped tests are blue on a white background and TODO tests are printed in white.</source>
          <target state="translated">Эта тестовая оснастка такая же, как &lt;a href=&quot;../harness&quot;&gt;TAP :: Harness&lt;/a&gt; , но результаты тестирования выводятся в цвете. Сдача тестов отмечена зеленым цветом. Неудачные тесты отмечены красным. Пропущенные тесты отображаются синим цветом на белом фоне, а тесты TODO печатаются белым.</target>
        </trans-unit>
        <trans-unit id="5aeeba01de86baa7b8993aef4f94514bdbb7f537" translate="yes" xml:space="preserve">
          <source>This test harness is the same as &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt;, but test results are output in color. Passing tests are printed in green. Failing tests are in red. Skipped tests are blue on a white background and TODO tests are printed in white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c5da5399251bb5e1db8f624c5839bd6c16417b" translate="yes" xml:space="preserve">
          <source>This test not coming out ok could indicate that you have in fact installed a bLuRfle.pm module or that the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; test may give misleading results with your installation of perl. If yours is the latter case then please let the author know.</source>
          <target state="translated">Этот тест, который не прошел успешно, может указывать на то, что вы действительно установили модуль bLuRfle.pm или что тест &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; может дать вводящие в заблуждение результаты с вашей установкой perl. Если у вас последний случай, сообщите об этом автору.</target>
        </trans-unit>
        <trans-unit id="f1a47c3ed2c720af6cbbff7d8f1fba90981d6cf7" translate="yes" xml:space="preserve">
          <source>This test not coming out ok could indicate that you have in fact installed a bLuRfle.pm module or that the &lt;code&gt;eval &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; test may give misleading results with your installation of perl. If yours is the latter case then please let the author know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7779eb97d1704eb5b38f4af625c19d04da87929" translate="yes" xml:space="preserve">
          <source>This third program fails to run because &lt;code&gt;$&amp;amp;&lt;/code&gt; is tainted: it is the result of a match involving &lt;code&gt;\w&lt;/code&gt; while &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect.</source>
          <target state="translated">Эта третья программа не запускается, потому что &lt;code&gt;$&amp;amp;&lt;/code&gt; испорчен: это результат совпадения с участием &lt;code&gt;\w&lt;/code&gt; пока действует &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;использования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d68ad58afc351b6be0d95c3d8369561b57239182" translate="yes" xml:space="preserve">
          <source>This third program fails to run because &lt;code&gt;$&amp;amp;&lt;/code&gt; is tainted: it is the result of a match involving &lt;code&gt;\w&lt;/code&gt; while &lt;code&gt;use locale&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dae3d33db186460fb270be827c017862ed6f4c9" translate="yes" xml:space="preserve">
          <source>This thread can change the locale all it wants and it won't affect any other thread, except any that also have been switched to the global locale. This means that a multi-threaded application can have a single thread using an alien library without a problem; but no more than a single thread can be so-occupied. Bad results likely will happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af2bc97cd9f37316fc3da9caf4914a2a7462bf" translate="yes" xml:space="preserve">
          <source>This threshold can be changed from 100, by recompiling the</source>
          <target state="translated">Этот порог может быть изменен с 100,путем перекомпиляции</target>
        </trans-unit>
        <trans-unit id="e43eef0f764abc7110894418223db6c40d531f70" translate="yes" xml:space="preserve">
          <source>This throws an exception at the frame (filename and line number where errors should be reported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a47e3515c81e527144a0c9b60fab0d504885832" translate="yes" xml:space="preserve">
          <source>This tie class has chosen to return an error rather than raising an exception if its constructor should fail. While this is how dbmopen() works, other classes may well not wish to be so forgiving. It checks the global variable &lt;code&gt;$^W&lt;/code&gt; to see whether to emit a bit of noise anyway.</source>
          <target state="translated">Этот класс связи предпочел вернуть ошибку, а не вызывать исключение, если его конструктор выйдет из строя. Хотя именно так работает dbmopen (), другие классы могут не захотеть быть столь снисходительными. Он проверяет глобальную переменную &lt;code&gt;$^W&lt;/code&gt; чтобы увидеть, нужно ли в любом случае издавать небольшой шум.</target>
        </trans-unit>
        <trans-unit id="65215d2823f33c6578d2c1ee584a26f404ed972a" translate="yes" xml:space="preserve">
          <source>This time only two filters have been used -- we only need to manipulate the contents of the key, so it wasn't necessary to install any value filters.</source>
          <target state="translated">На этот раз было использовано только два фильтра-нам нужно было только манипулировать содержимым ключа,так что не нужно было устанавливать никаких фильтров значений.</target>
        </trans-unit>
        <trans-unit id="ce475e5b88de267f8c35364dcce4ac0349ad1b9f" translate="yes" xml:space="preserve">
          <source>This time only two filters have been used; we only need to manipulate the contents of the key, so it wasn't necessary to install any value filters.</source>
          <target state="translated">На этот раз было использовано только два фильтра;нам нужно было только манипулировать содержимым ключа,поэтому не нужно было устанавливать никаких фильтров значений.</target>
        </trans-unit>
        <trans-unit id="33080a774d1683a847960294bf99870a610d6d24" translate="yes" xml:space="preserve">
          <source>This time we get the right answer:</source>
          <target state="translated">На этот раз мы получим правильный ответ:</target>
        </trans-unit>
        <trans-unit id="de132ff4c4de4a8dae8876bdea9d65e3845d2e34" translate="yes" xml:space="preserve">
          <source>This time we have got all the key/value pairs, including the multiple values associated with the key &lt;code&gt;Wall&lt;/code&gt; .</source>
          <target state="translated">На этот раз у нас есть все пары ключ / значение, включая несколько значений, связанных с ключом &lt;code&gt;Wall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc46887a2d3ce4b75ca14523b77c1875e5b5f923" translate="yes" xml:space="preserve">
          <source>This time we have got all the key/value pairs, including the multiple values associated with the key &lt;code&gt;Wall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549daec07a3febc80783db85efb5cb76a1300cf5" translate="yes" xml:space="preserve">
          <source>This time we've decided to blow up (raise an exception) if the renice fails--there's no place for us to return an error otherwise, and it's probably the right thing to do.</source>
          <target state="translated">На этот раз мы решили взорваться (поднять исключение),если ренессанс не удастся-в противном случае нам некуда будет возвращать ошибку,и,наверное,это правильный поступок.</target>
        </trans-unit>
        <trans-unit id="e8220bb1a44581d2e3ca1f66709b3d28e4dca5ce" translate="yes" xml:space="preserve">
          <source>This time whenever &lt;code&gt;CallSavedSub1&lt;/code&gt; gets called it will execute the Perl subroutine &lt;code&gt;joe&lt;/code&gt; (assuming it exists) rather than &lt;code&gt;fred&lt;/code&gt; as was originally requested in the call to &lt;code&gt;SaveSub1&lt;/code&gt; .</source>
          <target state="translated">На этот раз всякий раз, когда &lt;code&gt;CallSavedSub1&lt;/code&gt; он будет выполнять подпрограмму Perl &lt;code&gt;joe&lt;/code&gt; (при условии, что она существует), а не &lt;code&gt;fred&lt;/code&gt; , как было первоначально запрошено при вызове &lt;code&gt;SaveSub1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9585799a0bb025c0fc2a5fb468e2e0510621cfe4" translate="yes" xml:space="preserve">
          <source>This time whenever &lt;code&gt;CallSavedSub1&lt;/code&gt; gets called it will execute the Perl subroutine &lt;code&gt;joe&lt;/code&gt; (assuming it exists) rather than &lt;code&gt;fred&lt;/code&gt; as was originally requested in the call to &lt;code&gt;SaveSub1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97f664a05e05836532f171c31abc8294dc4fa2e" translate="yes" xml:space="preserve">
          <source>This timeout prevents CPAN from hanging when trying to parse a pathologically coded $VERSION from a module.</source>
          <target state="translated">Этот таймаут предотвращает зависание CPAN при попытке разбора патологически закодированного $VERSION из модуля.</target>
        </trans-unit>
        <trans-unit id="818cb77ceebe03d7349ba167c3cce5e948a3bb9b" translate="yes" xml:space="preserve">
          <source>This tip has been brought to you by Nick Ing-Simmons and Stas Bekman.</source>
          <target state="translated">Этот совет принесли вам Ник Инг-Симмонс и Стас Бекман.</target>
        </trans-unit>
        <trans-unit id="d27a6342f3cf97c393debaf5d2880083dadfb79d" translate="yes" xml:space="preserve">
          <source>This toggle lets you turn off the abort logic for the hub. When this is toggled to true &lt;b&gt;you&lt;/b&gt; are responsible for ensuring no additional events are generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad35df16ed4d238965d8000164af0c76d6be400" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or the &quot;current_sub&quot; feature. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Этот токен доступен только при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; или функции &quot;current_sub&quot;. См. &lt;a href=&quot;feature&quot;&gt;Особенность&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35716269721e35aed3ed9931d09baf8957f4a7d8" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or the &quot;current_sub&quot; feature. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Этот токен доступен только при &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; или функции &quot;current_sub&quot;. См. &lt;a href=&quot;../feature&quot;&gt;Особенность&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8782e676913565f7b95bd8b849e9d4513a4cab5" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;use v5.16&lt;/code&gt; or the &lt;a href=&quot;feature#The-%27current_sub%27-feature&quot;&gt;&lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; feature&lt;/a&gt;. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a442863544084141507fc6b9cc253372f4528af" translate="yes" xml:space="preserve">
          <source>This token tells &lt;b&gt;sigtrap&lt;/b&gt; to install handlers for all subsequently listed signals. This is the default behavior.</source>
          <target state="translated">Этот токен сообщает &lt;b&gt;sigtrap&lt;/b&gt; об установке обработчиков для всех перечисленных далее сигналов. Это поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="563416938874462a6a3a7e213b018a4bbf3569b4" translate="yes" xml:space="preserve">
          <source>This token tells &lt;b&gt;sigtrap&lt;/b&gt; to install handlers only for subsequently listed signals which aren't already trapped or ignored.</source>
          <target state="translated">Этот токен сообщает &lt;b&gt;sigtrap&lt;/b&gt; об установке обработчиков только для перечисленных далее сигналов, которые еще не перехватываются или не игнорируются.</target>
        </trans-unit>
        <trans-unit id="0c3e36d66e90a38e2c172eb5380aff092f3d8aff" translate="yes" xml:space="preserve">
          <source>This tool is most useful when you want to return the value you get from calling a function that needs to see the current context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbef2365e83f0b66bb2b5afb7a58a64a398a46f8" translate="yes" xml:space="preserve">
          <source>This tool isn't appropriate for reporting bugs in any version prior to Perl 5.0.</source>
          <target state="translated">Этот инструмент не подходит для сообщения об ошибках в любой версии до Perl 5.0.</target>
        </trans-unit>
        <trans-unit id="5b1f48f2009eaba595386dfcdaf2125e0a97a308" translate="yes" xml:space="preserve">
          <source>This tool will hide a context for the provided block of code. This means any tools run inside the block will get a completely new context if they acquire one. The new context will be inherited by tools nested below the one that acquired it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cd36d63ba450353c54dc7196ff92a040ad99b2" translate="yes" xml:space="preserve">
          <source>This translates as &quot;set &lt;code&gt;TARG&lt;/code&gt; to 10, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack; set &lt;code&gt;TARG&lt;/code&gt; to 20, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack&quot;. At the end of the operation, the stack does not contain the values 10 and 20, but actually contains two pointers to &lt;code&gt;TARG&lt;/code&gt; , which we have set to 20.</source>
          <target state="translated">Это переводится как &amp;laquo;установить &lt;code&gt;TARG&lt;/code&gt; на 10, &lt;code&gt;TARG&lt;/code&gt; указатель на TARG в стек; установить &lt;code&gt;TARG&lt;/code&gt; на 20, &lt;code&gt;TARG&lt;/code&gt; указатель на TARG в стек&amp;raquo;. В конце операции стек не содержит значений 10 и 20, но фактически содержит два указателя на &lt;code&gt;TARG&lt;/code&gt; , которые мы установили на 20.</target>
        </trans-unit>
        <trans-unit id="b327555f1c252fbe229268edcab000a9e602b1a9" translate="yes" xml:space="preserve">
          <source>This translates as &quot;set &lt;code&gt;TARG&lt;/code&gt; to 10, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack; set &lt;code&gt;TARG&lt;/code&gt; to 20, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack&quot;. At the end of the operation, the stack does not contain the values 10 and 20, but actually contains two pointers to &lt;code&gt;TARG&lt;/code&gt;, which we have set to 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba94eb90171beedcd9bec6456a8694f27844f356" translate="yes" xml:space="preserve">
          <source>This transport contacts a remote SMTP server over TCP. It optionally uses SSL and can authenticate to the server via SASL.</source>
          <target state="translated">Этот транспорт связывается с удаленным SMTP-сервером по TCP.Опционально он использует SSL и может аутентифицироваться на сервере по SASL.</target>
        </trans-unit>
        <trans-unit id="e40f9d55c5ee498252f4f99087dcea386954252b" translate="yes" xml:space="preserve">
          <source>This transport contacts a remote SMTP server over TCP. It optionally uses TLS or SSL and can authenticate to the server via SASL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f84e699be8b82423bdf0c8efc71c8b6cffc002" translate="yes" xml:space="preserve">
          <source>This tree has 5 nodes (one per &lt;code&gt;TYPE&lt;/code&gt; specifier), only 3 of them are not optimized away (one per number in the left column). The immediate children of the given node correspond to &lt;code&gt;{}&lt;/code&gt; pairs on the same level of indentation, thus this listing corresponds to the tree:</source>
          <target state="translated">Это дерево имеет 5 узлов (по одному на спецификатор &lt;code&gt;TYPE&lt;/code&gt; ), только 3 из них не оптимизированы (по одному на число в левом столбце). Непосредственные дочерние элементы данного узла соответствуют парам &lt;code&gt;{}&lt;/code&gt; на одном уровне отступа, таким образом, этот листинг соответствует дереву:</target>
        </trans-unit>
        <trans-unit id="10bdb23da270b66c79801ca69744614d31056771" translate="yes" xml:space="preserve">
          <source>This tries loading classes based on the language-tags you give (like &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt; , and for the first class that succeeds, returns YourProjClass::</source>
          <target state="translated">Это пытается загрузить классы на основе заданных вами языковых тегов (например, &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt; , и для первого класс, который завершился успешно, возвращает YourProjClass ::</target>
        </trans-unit>
        <trans-unit id="babb439fd1f2025fd1dc37240e930742af072a8e" translate="yes" xml:space="preserve">
          <source>This tries loading classes based on the language-tags you give (like &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt;, and for the first class that succeeds, returns YourProjClass::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2350736fbbdb09c3e03af560458218f7c39a0887" translate="yes" xml:space="preserve">
          <source>This tries to get the title string out of $parser, by getting some tokens, and scanning them for the title, and then ungetting them so that you can process the token-stream from the beginning.</source>
          <target state="translated">Это делается для того,чтобы получить строку заголовка из $parser,получив несколько маркеров и отсканировав их на предмет заголовка,а затем отменив их,вы сможете обрабатывать поток маркеров с самого начала.</target>
        </trans-unit>
        <trans-unit id="a7a0a5100eb7d660c79e344156a06e5739ae3e99" translate="yes" xml:space="preserve">
          <source>This turns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c43b29369b0643df2b475c636f7ba4a7760104c" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that the make program that Perl is configured to use is called &lt;code&gt;make&lt;/code&gt; . Instead of running &quot;make&quot; in the examples that follow, you may have to substitute whatever make program Perl has been configured to use. Running &lt;b&gt;perl -V:make&lt;/b&gt; should tell you what it is.</source>
          <target state="translated">В этом руководстве предполагается, что программа make, для использования которой настроен Perl, называется &lt;code&gt;make&lt;/code&gt; . Вместо запуска make в следующих примерах вам, возможно, придется заменить любую программу make, которую Perl сконфигурировал для использования. Запуск &lt;b&gt;perl -V: make&lt;/b&gt; должен сказать вам, что это такое.</target>
        </trans-unit>
        <trans-unit id="99b5d150876f05176f523c02a4521b0203e2d731" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that the make program that Perl is configured to use is called &lt;code&gt;make&lt;/code&gt;. Instead of running &quot;make&quot; in the examples that follow, you may have to substitute whatever make program Perl has been configured to use. Running &lt;b&gt;perl -V:make&lt;/b&gt; should tell you what it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c02c1e1c4554cfc38ab4519576c46376d729f42" translate="yes" xml:space="preserve">
          <source>This tutorial can still be used on such a system. The XSUB build mechanism will check the system and build a dynamically-loadable library if possible, or else a static library and then, optionally, a new statically-linked executable with that static library linked in.</source>
          <target state="translated">Данное учебное пособие все еще может быть использовано в такой системе.Механизм сборки XSUB проверит систему и,если возможно,соберет динамически загружаемую библиотеку,или статическую библиотеку,а затем,опционально,новый статически скомпонованный исполняемый файл со статической библиотекой,в которую он будет скомпонован.</target>
        </trans-unit>
        <trans-unit id="042a6a29ffea342487866bd18b2ff67e8550a4e6" translate="yes" xml:space="preserve">
          <source>This tutorial describes the use of Perl interpreter threads (sometimes referred to as</source>
          <target state="translated">В данном учебнике описывается использование потоков Perl-интерпретатора (иногда называемых</target>
        </trans-unit>
        <trans-unit id="584c62ddbbc858e85333edcc1d7b6494d833b45b" translate="yes" xml:space="preserve">
          <source>This tutorial flattens the learning curve by discussing regular expression concepts, along with their notation, one at a time and with many examples. The first part of the tutorial will progress from the simplest word searches to the basic regular expression concepts. If you master the first part, you will have all the tools needed to solve about 98% of your needs. The second part of the tutorial is for those comfortable with the basics and hungry for more power tools. It discusses the more advanced regular expression operators and introduces the latest cutting-edge innovations.</source>
          <target state="translated">Это учебное пособие сглаживает кривую обучения,обсуждая понятия регулярных выражений,а также их обозначения,по одному и на многих примерах.В первой части урока мы перейдем от простейших словарных поисков к основным понятиям регулярных выражений.Если вы освоите первую часть,то получите все необходимые инструменты для решения примерно 98% задач.Вторая часть урока предназначена для тех,кто знаком с основами и жаждет получить дополнительные инструменты.В ней обсуждаются более продвинутые операторы регулярных выражений и представлены последние передовые инновации.</target>
        </trans-unit>
        <trans-unit id="09418d1e9dc1ccd649181b2ae1d0e9cc30227030" translate="yes" xml:space="preserve">
          <source>This tutorial speaks in rather absolute terms, and provides only a limited view of the wealth of character string related features that Perl has to offer. For most projects, this information will probably suffice.</source>
          <target state="translated">Данное учебное пособие говорит в довольно абсолютных выражениях и дает лишь ограниченное представление о богатстве функций,связанных с символьными строками,которые может предложить Perl.Для большинства проектов этой информации,вероятно,будет достаточно.</target>
        </trans-unit>
        <trans-unit id="5a1babab3f5740242709a97dfef0170b83cfd116" translate="yes" xml:space="preserve">
          <source>This tutorial starts with very simple examples and becomes more complex, with each new example adding new features. Certain concepts may not be completely explained until later in the tutorial in order to slowly ease the reader into building extensions.</source>
          <target state="translated">Это учебное пособие начинается с очень простых примеров и становится более сложным,с каждым новым примером добавляя новые функции.Некоторые понятия могут быть полностью объяснены только позже в учебнике,чтобы облегчить читателю процесс сборки расширений.</target>
        </trans-unit>
        <trans-unit id="513743e90a808d724cf722e256c18c6a577aed36" translate="yes" xml:space="preserve">
          <source>This tutorial was written from a Unix point of view. Where I know them to be otherwise different for other platforms (e.g. Win32), I will list them. If you find something that was missed, please let me know.</source>
          <target state="translated">Это учебное пособие было написано с точки зрения Unix.Там,где я знаю,что они отличаются для других платформ (например,Win32),я перечислю их.Если вы найдете что-то,что было пропущено,пожалуйста,дайте мне знать.</target>
        </trans-unit>
        <trans-unit id="2d3bc7e20dd6d03170372006d4bcd471be2b1a05" translate="yes" xml:space="preserve">
          <source>This tutorial will educate the reader on the steps involved in creating a Perl extension. The reader is assumed to have access to &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">Это руководство познакомит читателя с этапами создания расширения Perl. Предполагается, что у читателя есть доступ к &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; , &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; и &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73d6133ba18859a5eaedd64f01ef459aa33a4f61" translate="yes" xml:space="preserve">
          <source>This ucfirst form of #var generates a tag-value form of itself for display; it converts '#Var' into a 'Var =&amp;gt; #var' style, which is then handled as described above. (Imp-note: #Vars cannot be used for conditional-fills, because the =&amp;gt; #var transform is done after the check for #Var's value).</source>
          <target state="translated">Эта ucfirst форма #var генерирует свою форму значения тега для отображения; он преобразует '#Var' в стиль 'Var =&amp;gt; #var', который затем обрабатывается, как описано выше. (Важное примечание: #Vars нельзя использовать для условного заполнения, потому что преобразование =&amp;gt; #var выполняется после проверки значения # Var).</target>
        </trans-unit>
        <trans-unit id="e1c48ccdb02bacfa9c7db277adb42c2586c3c859" translate="yes" xml:space="preserve">
          <source>This unloading is usually necessary when embedding a shared-object perl (e.g. one configured with -Duseshrplib) within a larger application, and the perl interpreter is created and destroyed several times within the lifetime of the application. In this case it is possible that the system dynamic linker will unload and then subsequently reload the shared libperl without relocating any references to it from any files DynaLoaded by the previous incarnation of the interpreter. As a result, any shared objects opened by DynaLoader may point to a now invalid 'ghost' of the libperl shared object, causing apparently random memory corruption and crashes. This behaviour is most commonly seen when using Apache and mod_perl built with the APXS mechanism.</source>
          <target state="translated">Такая выгрузка обычно необходима при встраивании shared-объекта perl (например,сконфигурированного с -Duseshrplib)в более крупное приложение,а интерпретатор perl создается и уничтожается несколько раз в течение жизни приложения.В этом случае возможно,что системный динамический компоновщик выгрузит,а затем перезагрузит разделяемую libperl без перемещения на неё ссылок из любых файлов DynaLoaded от предыдущего воплощения интерпретатора.В результате,любые общие объекты,открытые DynaLoader,могут указывать на теперь уже недействительный &quot;призрак&quot; общего объекта libperl,вызывая,по-видимому,случайное повреждение памяти и аварийное завершение работы.Такое поведение наиболее часто встречается при использовании Apache и mod_perl,собранных с помощью механизма APXS.</target>
        </trans-unit>
        <trans-unit id="1b13f3deb5370e5675a9d76c565d42ae5d602f71" translate="yes" xml:space="preserve">
          <source>This usage is deprecated, because the behavior is likely to change in a future version of Perl.</source>
          <target state="translated">Это использование устарело,так как поведение,скорее всего,изменится в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="f8cc0202ec780bce218b4e5dcccd13c92cdafc61" translate="yes" xml:space="preserve">
          <source>This usage was deprecated and as of Perl 5.32 is no longer allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8628227b2034eb7bb5d1a38319f1096e92570eb" translate="yes" xml:space="preserve">
          <source>This usage was deprecated, and as of Perl 5.32 is no longer allowed, making it possible to change the behavior in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bf7571677624aefcaac6c0acb5fa38635561cd" translate="yes" xml:space="preserve">
          <source>This use of &lt;code&gt;my()&lt;/code&gt; in a false conditional has been deprecated since Perl 5.10, and it will become a fatal error in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb7ee3adb793d7785e44f4cd1c475bc562072ff" translate="yes" xml:space="preserve">
          <source>This use of &lt;code&gt;my()&lt;/code&gt; in a false conditional was deprecated beginning in Perl 5.10 and became a fatal error in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa749e21deac96525cb24d3358da4f7fb5f0d24" translate="yes" xml:space="preserve">
          <source>This use of my() in false conditional is no longer allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b6fb62901deb9e84ba258e77b4c4979b396131" translate="yes" xml:space="preserve">
          <source>This used to provide support for the old 5.005 threading module. It now does nothing.</source>
          <target state="translated">Это использовалось для поддержки старого резьбового модуля 5.005.Теперь он ничего не делает.</target>
        </trans-unit>
        <trans-unit id="ad74ce7c330e222ac3a23c23df9097ca9cc782c1" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;[...]&lt;/code&gt; notation to create a new anonymous array, and &lt;code&gt;$aref2&lt;/code&gt; is assigned a reference to the new array. The new array is initialized with the contents of the array referred to by &lt;code&gt;$aref1&lt;/code&gt; .</source>
          <target state="translated">При этом используется нотация &lt;code&gt;[...]&lt;/code&gt; для создания нового анонимного массива, а &lt;code&gt;$aref2&lt;/code&gt; назначается ссылка на новый массив. Новый массив инициализируется содержимым массива, на который указывает &lt;code&gt;$aref1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f780e61f5be8b67d8a73b7a70cd2de66ca725d92" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;[...]&lt;/code&gt; notation to create a new anonymous array, and &lt;code&gt;$aref2&lt;/code&gt; is assigned a reference to the new array. The new array is initialized with the contents of the array referred to by &lt;code&gt;$aref1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec25d0bdb752659175b1040a999aeb2b6d490b8" translate="yes" xml:space="preserve">
          <source>This uses a comment character so that we can distinguish a &lt;code&gt;set&lt;/code&gt; value (from a previous</source>
          <target state="translated">Здесь используется символ комментария, чтобы мы могли отличить &lt;code&gt;set&lt;/code&gt; значение (от предыдущего</target>
        </trans-unit>
        <trans-unit id="cc1cad67a921e3eb4640eba7ead1b7740937eea5" translate="yes" xml:space="preserve">
          <source>This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">При этом используются файловые дескрипторы, например, полученные при вызове &lt;code&gt;POSIX::open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef0715f911bf2d7dde414c04ee4f2d77679374e6" translate="yes" xml:space="preserve">
          <source>This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8309f8b6f133836961834b1a77c15524062381" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;LIB$FID_TO_NAME&lt;/code&gt; run-time library call to find the name of the primary link to a file, and returns the filename in VMS format. This function is not available on non-VMS systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7665ba2d9d5783e7fcf462d2624ff87c082afc" translate="yes" xml:space="preserve">
          <source>This uses the git protocol (port 9418).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f46aaaf1565e8957012263096fadaa9a048c4d5" translate="yes" xml:space="preserve">
          <source>This utility allows you to apply pattern matching to &lt;b&gt;the contents&lt;/b&gt; of files contained in a tar archive. You might use this to identify all files in an archive which contain lines matching the specified pattern and either print out the pathnames or extract the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9ad1aba7c9a639b483b1f8f929290363dd11bd" translate="yes" xml:space="preserve">
          <source>This utility is designed to write a Makefile for an extension module from a Makefile.PL. It is based on the Makefile.SH model provided by Andy Dougherty and the perl5-porters.</source>
          <target state="translated">Эта утилита предназначена для записи Makefile для модуля расширения из Makefile.PL.Она основана на модели Makefile.SH,предоставленной Энди Догерти и perl5-портерами.</target>
        </trans-unit>
        <trans-unit id="b24b7df29646f7c014772e5059f3068df5bbacbd" translate="yes" xml:space="preserve">
          <source>This utility takes a list of libraries in the form &lt;code&gt;-llib1 -llib2
-llib3&lt;/code&gt; and returns lines suitable for inclusion in an extension Makefile. Extra library paths may be included with the form &lt;code&gt;-L/another/path&lt;/code&gt; this will affect the searches for all subsequent libraries.</source>
          <target state="translated">Эта утилита принимает список библиотек в форме &lt;code&gt;-llib1 -llib2 -llib3&lt;/code&gt; и возвращает строки, подходящие для включения в Makefile расширения. Дополнительные пути к библиотекам могут быть включены в форму &lt;code&gt;-L/another/path&lt;/code&gt; , это повлияет на поиск всех последующих библиотек.</target>
        </trans-unit>
        <trans-unit id="b766c16803f46a0ae895c110a4b6edf915519f91" translate="yes" xml:space="preserve">
          <source>This utility will read *.pl files (given as parameters) and write corresponding *.pm files. The pl2pm utilities does the following:</source>
          <target state="translated">Эта утилита будет читать *.pl файлы (заданные в качестве параметров)и записывать соответствующие *.pm файлы.Утилиты pl2pm делают следующее:</target>
        </trans-unit>
        <trans-unit id="a410c695becbafd5bc2593139ba56b80c63242e8" translate="yes" xml:space="preserve">
          <source>This utility, that comes with the &lt;code&gt;Digest::SHA&lt;/code&gt; module, is used to print or verify SHA checksums.</source>
          <target state="translated">Эта утилита, поставляемая с модулем &lt;code&gt;Digest::SHA&lt;/code&gt; , используется для печати или проверки контрольных сумм SHA.</target>
        </trans-unit>
        <trans-unit id="3f272981cac4ae61e9e9e8d75fb4dc12762de509" translate="yes" xml:space="preserve">
          <source>This value can be adjusted to reduce security checking if required. The value is only relevant when &lt;code&gt;safe_level&lt;/code&gt; is set to MEDIUM or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4ff7242b8a2fd67b36df12914e2cc6d1af606d" translate="yes" xml:space="preserve">
          <source>This value can be adjusted to reduce security checking if required. The value is only relevant when C</source>
          <target state="translated">Это значение может быть отрегулировано для уменьшения проверки безопасности,если это необходимо.Значение имеет значение только в том случае,если C</target>
        </trans-unit>
        <trans-unit id="cdc136e48e274a6f45986365041835b0a320611a" translate="yes" xml:space="preserve">
          <source>This value may be set when embedding for full cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591c615f6c14e41979e1eaadb2f09a869a865a0" translate="yes" xml:space="preserve">
          <source>This value overrides any &lt;code&gt;stack_size&lt;/code&gt; parameter given to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; . Its primary purpose is to permit setting the per-thread stack size for legacy threaded applications.</source>
          <target state="translated">Это значение переопределяет любой параметр &lt;code&gt;stack_size&lt;/code&gt; , заданный для &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; . Его основная цель - разрешить установку размера стека для каждого потока для устаревших потоковых приложений.</target>
        </trans-unit>
        <trans-unit id="c8d10aaff4c3d6cbb1dc6581ac92ed77de4530c0" translate="yes" xml:space="preserve">
          <source>This value overrides any &lt;code&gt;stack_size&lt;/code&gt; parameter given to &lt;code&gt;use threads&lt;/code&gt;. Its primary purpose is to permit setting the per-thread stack size for legacy threaded applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89d32d5d5695a0582f22913b8f68fcff2f07a33" translate="yes" xml:space="preserve">
          <source>This variable (and the corresponding &lt;code&gt;array_base&lt;/code&gt; feature and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; module) allowed changing the base for array and string indexing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ecf008113019e40a6e54f73ff5a98b48282c9e" translate="yes" xml:space="preserve">
          <source>This variable (default is 1) controls whether to enforce the contents of $^E to start with &lt;code&gt;SYS0003&lt;/code&gt; -like id. If set to 0, then the string value of $^E is what is available from the OS/2 message file. (Some messages in this file have an &lt;code&gt;SYS0003&lt;/code&gt; -like id prepended, some not.)</source>
          <target state="translated">Эта переменная (по умолчанию 1) определяет, нужно ли принудительно запускать содержимое $ ^ E с идентификатором типа &lt;code&gt;SYS0003&lt;/code&gt; . Если установлено значение 0, строковое значение $ ^ E - это то, что доступно из файла сообщений OS / 2. (Некоторые сообщения в этом файле имеют &lt;code&gt;SYS0003&lt;/code&gt; -как идентификатор предваряется, некоторые нет.)</target>
        </trans-unit>
        <trans-unit id="0e88ea105d4b7ad833e8f62738de77591c442f12" translate="yes" xml:space="preserve">
          <source>This variable (default is 1) controls whether to enforce the contents of $^E to start with &lt;code&gt;SYS0003&lt;/code&gt;-like id. If set to 0, then the string value of $^E is what is available from the OS/2 message file. (Some messages in this file have an &lt;code&gt;SYS0003&lt;/code&gt;-like id prepended, some not.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16732492f2d070676c6f99bbc0efae47b95f7071" translate="yes" xml:space="preserve">
          <source>This variable bears the symbol value to be used during open() or fcntl() to turn on non-blocking I/O for a file descriptor. If you wish to switch between blocking and non-blocking, you may try ioctl(&lt;code&gt;FIOSNBIO&lt;/code&gt; ) instead, but that is only supported by some devices.</source>
          <target state="translated">Эта переменная содержит значение символа, которое будет использоваться во время open () или fcntl () для включения неблокирующего ввода-вывода для файлового дескриптора. Если вы хотите переключаться между блокированием и неблокированием, вы можете попробовать ioctl ( &lt;code&gt;FIOSNBIO&lt;/code&gt; ) вместо этого, но это поддерживается только некоторыми устройствами.</target>
        </trans-unit>
        <trans-unit id="15ff3c0604e1d75a5342996d8934873f8d50aeb1" translate="yes" xml:space="preserve">
          <source>This variable bears the symbol value to be used during open() or fcntl() to turn on non-blocking I/O for a file descriptor. If you wish to switch between blocking and non-blocking, you may try ioctl(&lt;code&gt;FIOSNBIO&lt;/code&gt;) instead, but that is only supported by some devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca2eeea3350d961dcaad04aa855c2a1f247bac2" translate="yes" xml:space="preserve">
          <source>This variable bears the symbolic errno code set by read() when no data is present on the file and non-blocking I/O was enabled (otherwise, read() blocks naturally).</source>
          <target state="translated">Эта переменная несет символический код errno,заданный функцией read(),когда в файле нет данных и неблокирующий ввод/вывод был включен (в противном случае,read()блокируется естественным образом).</target>
        </trans-unit>
        <trans-unit id="248382abe33b16964803e73f6ecfb34faabcc93f" translate="yes" xml:space="preserve">
          <source>This variable can be used to determine whether the Perl interpreter executing a script is in the right range of versions:</source>
          <target state="translated">Эта переменная может быть использована для определения,находится ли Perl-интерпретатор,выполняющий сценарий,в нужном диапазоне версий:</target>
        </trans-unit>
        <trans-unit id="dfea1020f3dea68d67242c313286038f4a0d0e35" translate="yes" xml:space="preserve">
          <source>This variable can be used to establish a fallthrough for the cases where nm fails to find a symbol. If usenm is false or usenm is true and mistrustnm is false, this variable has no effect. If usenm is true and mistrustnm is &lt;code&gt;compile&lt;/code&gt; , a test program will be compiled to try to find any symbol that can't be located via nm lookup. If mistrustnm is &lt;code&gt;run&lt;/code&gt; , the test program will be run as well as being compiled.</source>
          <target state="translated">Эту переменную можно использовать для определения спада для случаев, когда nm не может найти символ. Если usenm - false или usenm - true, а mistrustnm - false, эта переменная не действует. Если usenm истинно, а mistrustnm &lt;code&gt;compile&lt;/code&gt; , будет скомпилирована тестовая программа, чтобы попытаться найти любой символ, который не может быть обнаружен с помощью поиска nm. Если Mistrustnm &lt;code&gt;run&lt;/code&gt; , тестовая программа будет запущена, а также компилируется.</target>
        </trans-unit>
        <trans-unit id="4b3e9ceee71cdc320b5939b5ceda3cad1b31e64c" translate="yes" xml:space="preserve">
          <source>This variable can be used to establish a fallthrough for the cases where nm fails to find a symbol. If usenm is false or usenm is true and mistrustnm is false, this variable has no effect. If usenm is true and mistrustnm is &lt;code&gt;compile&lt;/code&gt;, a test program will be compiled to try to find any symbol that can't be located via nm lookup. If mistrustnm is &lt;code&gt;run&lt;/code&gt;, the test program will be run as well as being compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0fbadd8567e78cf31399e6a2260ad4aafcd61e" translate="yes" xml:space="preserve">
          <source>This variable combines api_revision, api_version, and api_subversion in a format such as 5.6.1 (or 5_6_1) suitable for use as a directory name. This is filesystem dependent.</source>
          <target state="translated">Эта переменная объединяет api_revision,api_version и api_subversion в формате 5.6.1 (или 5_6_1),подходящем для использования в качестве имени каталога.Это зависит от файловой системы.</target>
        </trans-unit>
        <trans-unit id="3a2c3f8de756634885e7def1800fcfd4dd0d57a3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defined &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определена &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0b791466461b0141a9f42bfce168d808b632ccd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defined &lt;code&gt;PERL_VENDORARCH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd929c3d0bcbeeec8636fa669401d4e86c870d3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;ARCHLIB&lt;/code&gt; to hold the pathname of architecture-dependent library files for $package. If $archlib is the same as $privlib, then this is set to undef.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;ARCHLIB&lt;/code&gt; для хранения пути к архитектурно-зависимым файлам библиотеки для $ package. Если $ archlib совпадает с $ privlib, то устанавливается значение undef.</target>
        </trans-unit>
        <trans-unit id="ef97d2a231904adfc4265eba4006701690eed6ca" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CAN_VAPROTO&lt;/code&gt; on systems supporting prototype declaration of functions with a variable number of arguments. See also prototype.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;CAN_VAPROTO&lt;/code&gt; в системах, поддерживающих объявление прототипа функций с переменным числом аргументов. См. Также прототип.</target>
        </trans-unit>
        <trans-unit id="980485e36e7b05790618d387e3c7b5f9dffdd4ab" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CASTNEG&lt;/code&gt; , which indicates whether the C compiler can cast negative float to unsigned.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;CASTNEG&lt;/code&gt; , который указывает, может ли компилятор C преобразовать отрицательное число с плавающей запятой в беззнаковое.</target>
        </trans-unit>
        <trans-unit id="e6c288a30b9263a34f361a5d921f5d74655c9671" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CASTNEG&lt;/code&gt;, which indicates whether the C compiler can cast negative float to unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2c21b1fb400d236c7f8b93084483db1894c446" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CHARVSPRINTF&lt;/code&gt; if this system has vsprintf returning type (char*). The trend seems to be to declare it as &quot;int vsprintf()&quot;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;CHARVSPRINTF&lt;/code&gt; , если эта система имеет возвращаемый тип vsprintf (char *). Кажется, что тенденция состоит в том, чтобы объявить его как &quot;int vsprintf ()&quot;.</target>
        </trans-unit>
        <trans-unit id="5078955ce08b58cadcdb20d3c38df82d26ee60ff" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CTERMID&lt;/code&gt; if ctermid() is available to generate filename for terminal.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;CTERMID&lt;/code&gt; , если ctermid () доступен для генерации имени файла для терминала.</target>
        </trans-unit>
        <trans-unit id="978df228f8d800c08979baf4f0b9bb0fc46ebfa9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DIRNAMLEN&lt;/code&gt; , which indicates to the C program that the length of directory entry names is provided by a d_namelen field.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;DIRNAMLEN&lt;/code&gt; , который указывает программе на C, что длина имён записей каталога обеспечивается полем d_namelen.</target>
        </trans-unit>
        <trans-unit id="dc998e2c8c6e574860ee6fbf06818e7c667f7aa2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DIRNAMLEN&lt;/code&gt;, which indicates to the C program that the length of directory entry names is provided by a d_namelen field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3c72fff3ec53eb910b33c4d8de7ba859b22249" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt; , which indicates that we need to prepend an underscore to the symbol name before calling dlsym().</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt; , что указывает на то, что нам нужно добавить подчеркивание к имени символа перед вызовом dlsym ().</target>
        </trans-unit>
        <trans-unit id="8582344f9c7c22d7833d9ec106477884283a6de7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt;, which indicates that we need to prepend an underscore to the symbol name before calling dlsym().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b013eda5d273dde0c71244769fe3ad52ab910f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;EBCDIC&lt;/code&gt; if this system uses &lt;code&gt;EBCDIC&lt;/code&gt; encoding.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;EBCDIC&lt;/code&gt; , если эта система использует кодировку &lt;code&gt;EBCDIC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95f5847b07ee6a0574affcb0afba6691ba0cb5dc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;EOF_NONBLOCK&lt;/code&gt; if &lt;code&gt;EOF&lt;/code&gt; can be seen when reading from a non-blocking I/O source.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;EOF_NONBLOCK&lt;/code&gt; , если &lt;code&gt;EOF&lt;/code&gt; можно увидеть при чтении из неблокирующего источника ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="0af8dac12168ddb05c87d99076fc3d364dbfc497" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;GRPASSWD&lt;/code&gt; , which indicates that struct group in &amp;lt;grp.h&amp;gt; contains gr_passwd.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;GRPASSWD&lt;/code&gt; , который указывает, что группа структур в &amp;lt;grp.h&amp;gt; содержит gr_passwd.</target>
        </trans-unit>
        <trans-unit id="cca67ae13cb5b5216b026f087e4c9cd2724e9abd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;GRPASSWD&lt;/code&gt;, which indicates that struct group in &amp;lt;grp.h&amp;gt; contains gr_passwd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e239460b32f067f0e57a573c2a38cc269c4e8cf6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt; , which indicates that &lt;code&gt;GCC&lt;/code&gt; can handle the attribute for marking deprecated APIs</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt; , что указывает, что &lt;code&gt;GCC&lt;/code&gt; может обрабатывать атрибут для маркировки устаревших API.</target>
        </trans-unit>
        <trans-unit id="8a3ce902111f1fb6ddfbb032a62404920f5f0a69" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt;, which indicates that &lt;code&gt;GCC&lt;/code&gt; can handle the attribute for marking deprecated APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096a4e7335c9e97171f7b50c60f3c4f1d139650c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt; , which indicates the C compiler can check for printf-like formats.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt; , который указывает, что компилятор C может проверять форматы, подобные printf.</target>
        </trans-unit>
        <trans-unit id="f0f60c4dd5eeeaebaa985d1b6354c9a991633b8e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt;, which indicates the C compiler can check for printf-like formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc32aff59b98aa4940aa65546e2ce2f0bae5f6b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt; , which indicates the C compiler can understand functions as having malloc-like semantics.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt; , который указывает, что компилятор C может понимать функции как имеющие семантику, подобную malloc.</target>
        </trans-unit>
        <trans-unit id="bf5374f94e92fd1cc3e01675dd69dfccafafe1cf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt;, which indicates the C compiler can understand functions as having malloc-like semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc77040e22d8dbd38fd3bdef2b4c807ff2648d0f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt; , which indicates that the C compiler can know that certain arguments must not be &lt;code&gt;NULL&lt;/code&gt; , and will check accordingly at compile time.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt; , который указывает, что компилятор C может знать, что некоторые аргументы не должны быть &lt;code&gt;NULL&lt;/code&gt; , и будет проверять это во время компиляции.</target>
        </trans-unit>
        <trans-unit id="0d008cebd99a9203bb4aed19e68f0fe934a519a6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt;, which indicates that the C compiler can know that certain arguments must not be &lt;code&gt;NULL&lt;/code&gt;, and will check accordingly at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ca1b192eaeeef39ff342721f49f9732f5c25b0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt; , which indicates that the C compiler can know that certain functions are guaranteed never to return.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt; , который указывает, что компилятор C может знать, что определенные функции гарантированно никогда не вернутся.</target>
        </trans-unit>
        <trans-unit id="db7d6ff22150607f2faf6e212132ffd7e2e815da" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt;, which indicates that the C compiler can know that certain functions are guaranteed never to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f0cde07593cb535b92fefc63eb7d81d46fe8bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt; , which indicates that the C compiler can know that certain functions are &lt;code&gt;pure&lt;/code&gt; functions, meaning that they have no side effects, and only rely on function input</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt; , что означает, что компилятор C может знать, что определенные функции являются &lt;code&gt;pure&lt;/code&gt; функциями, что означает, что они не имеют побочных эффектов и полагаются только на ввод функции.</target>
        </trans-unit>
        <trans-unit id="17b724553d5b8a923ac88e7dad14f63c4b3879af" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt;, which indicates that the C compiler can know that certain functions are &lt;code&gt;pure&lt;/code&gt; functions, meaning that they have no side effects, and only rely on function input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420fa8e106aa6be346627e32f034151a52362ffe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt; , which indicates that the C compiler can know that certain variables and arguments may not always be used, and to not throw warnings if they don't get used.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt; , который указывает, что компилятор C может знать, что определенные переменные и аргументы могут использоваться не всегда, и не выдавать предупреждения, если они не используются.</target>
        </trans-unit>
        <trans-unit id="dd8f83fc842425448043adda2ad084876969855e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt;, which indicates that the C compiler can know that certain variables and arguments may not always be used, and to not throw warnings if they don't get used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcad35f0c318736909295f4f6cd964d37f1a53f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt; , which indicates that the C compiler can know that certain functions have a return values that must not be ignored, such as malloc() or open().</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt; , который указывает, что компилятор C может знать, что определенные функции имеют возвращаемые значения, которые нельзя игнорировать, например malloc () или open ().</target>
        </trans-unit>
        <trans-unit id="b236732aa4e34a009b54dcede2dfd55e746dc6ee" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt;, which indicates that the C compiler can know that certain functions have a return values that must not be ignored, such as malloc() or open().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f215b234b46ef7c56eb723ad08f919ae0a7c950" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ACCESS&lt;/code&gt; if the access() system call is available to check for access permissions using real IDs.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_ACCESS&lt;/code&gt; , если доступен системный вызов access () для проверки прав доступа с использованием реальных идентификаторов.</target>
        </trans-unit>
        <trans-unit id="79fed26f317480a67e604252b89c9e7cd20f70a5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_ADD_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_add_overflow(x,y,&amp;amp;z) for safely adding x and y into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffb21d9b86f1027201a5668c38e081eccafe1d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_MUL_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_mul_overflow(x,y,&amp;amp;z) for safely multiplying x and y into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b292063a7933d4c21b5fe0bdc942a12c561f5a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_SUB_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_sub_overflow(x,y,&amp;amp;z) for safely subtracting y from x into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c105d4e6058827fec8056bf20316718cbab9faa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_CLOSEDIR&lt;/code&gt; if closedir() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_CLOSEDIR&lt;/code&gt; , если доступна closedir ().</target>
        </trans-unit>
        <trans-unit id="8654218934b9b6758432460c578cc5a644b91d92" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDHOSTENT&lt;/code&gt; if endhostent() is available to close whatever was being used for host queries.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_ENDHOSTENT&lt;/code&gt; , если endhostent () доступен для закрытия всего, что использовалось для запросов хоста.</target>
        </trans-unit>
        <trans-unit id="79e5c8edfd4691e1b4f25bb1c714fe1507e829f4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDNETENT&lt;/code&gt; if endnetent() is available to close whatever was being used for network queries.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_ENDNETENT&lt;/code&gt; , если endnetent () доступен для закрытия всего, что использовалось для сетевых запросов.</target>
        </trans-unit>
        <trans-unit id="23979ba16f9e3dd7409c1aeb4d7d4d5911e864e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDPROTOENT&lt;/code&gt; if endprotoent() is available to close whatever was being used for protocol queries.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_ENDPROTOENT&lt;/code&gt; , если endprotoent () доступен для закрытия всего, что использовалось для запросов протокола.</target>
        </trans-unit>
        <trans-unit id="1f85023e116dfb459bcb6c6b9ea107e1880da801" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDSERVENT&lt;/code&gt; if endservent() is available to close whatever was being used for service queries.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_ENDSERVENT&lt;/code&gt; , если endservent () доступен для закрытия всего, что использовалось для служебных запросов.</target>
        </trans-unit>
        <trans-unit id="9026ce557a983587089262cdc30c657f39523536" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FEGETROUND&lt;/code&gt; if fegetround() is available to get the floating point rounding mode.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_FEGETROUND&lt;/code&gt; , если fegetround () доступен для получения режима округления с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="a5695e9822f626cc75613841b734f1880b97e1cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FGETPOS&lt;/code&gt; if fgetpos() is available to get the file position indicator.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_FGETPOS&lt;/code&gt; , если fgetpos () доступна для получения индикатора положения файла.</target>
        </trans-unit>
        <trans-unit id="ecd11d67113d55076e38c3f87fbec174b96046c1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FLOCK&lt;/code&gt; if flock() is available to do file locking.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_FLOCK&lt;/code&gt; , если доступна функция flock () для блокировки файлов.</target>
        </trans-unit>
        <trans-unit id="d12df32e7c3e2769df2173cc4aeba55819c508b3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FPGETROUND&lt;/code&gt; if fpgetround() is available to get the floating point rounding mode.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_FPGETROUND&lt;/code&gt; , если доступна функция fpgetround () для получения режима округления с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="7caed5a67bbd1068f15dc1afc8a52fbcbb8a3a6c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FSETPOS&lt;/code&gt; if fsetpos() is available to set the file position indicator.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_FSETPOS&lt;/code&gt; , если fsetpos () доступна для установки индикатора положения файла.</target>
        </trans-unit>
        <trans-unit id="4ca1f26e1ee2a6d6b7bcc20d2c601de0d8652782" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETESPWNAM&lt;/code&gt; if getespwnam() is available to retrieve enhanced (shadow) password entries by name.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETESPWNAM&lt;/code&gt; , если getespwnam () доступен для получения расширенных (теневых) записей паролей по имени.</target>
        </trans-unit>
        <trans-unit id="523b849ed0e10fbdf244f4e8cd77184e7b2e7e2e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETHOSTENT&lt;/code&gt; if gethostent() is available to look up host names in some data base or another.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETHOSTENT&lt;/code&gt; , если gethostent () доступен для поиска имен хостов в той или иной базе данных.</target>
        </trans-unit>
        <trans-unit id="c477102d11cefe29ba1af921e3e01940cce25886" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETNETENT&lt;/code&gt; if getnetent() is available to look up network names in some data base or another.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETNETENT&lt;/code&gt; , если getnetent () доступен для поиска сетевых имен в той или иной базе данных.</target>
        </trans-unit>
        <trans-unit id="3dd4221c56df17e7463336ebb61e6a0a59685106" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPAGESIZE&lt;/code&gt; if getpagesize() is available to get the system page size.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETPAGESIZE&lt;/code&gt; , если getpagesize () доступна для получения размера системной страницы.</target>
        </trans-unit>
        <trans-unit id="008f90e9dce5e248f0a062499f460cbfe1316a70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPGRP&lt;/code&gt; if getpgrp() is available to get the current process group.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETPGRP&lt;/code&gt; , если getpgrp () доступна для получения текущей группы процессов.</target>
        </trans-unit>
        <trans-unit id="466f30d3944227e178d079578b5e186c11b86479" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPRIORITY&lt;/code&gt; if getpriority() is available to get a process's priority.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETPRIORITY&lt;/code&gt; , если getpriority () доступна для получения приоритета процесса.</target>
        </trans-unit>
        <trans-unit id="f8a60b1d5d8d846ce3f5e6fe4d7b072471b5e6c6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPROTOENT&lt;/code&gt; if getprotoent() is available to look up protocols in some data base or another.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETPROTOENT&lt;/code&gt; , если getprotoent () доступна для поиска протоколов в той или иной базе данных.</target>
        </trans-unit>
        <trans-unit id="703bdebcae3a9b18831e785584b8e179d8f5569d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPRPWNAM&lt;/code&gt; if getprpwnam() is available to retrieve protected (shadow) password entries by name.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETPRPWNAM&lt;/code&gt; , если getprpwnam () доступна для получения защищенных (теневых) записей паролей по имени.</target>
        </trans-unit>
        <trans-unit id="d470dbda91b75051a9116195c5471b4cc0a994bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETSERVENT&lt;/code&gt; if getservent() is available to look up network services in some data base or another.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETSERVENT&lt;/code&gt; , если getservent () доступен для поиска сетевых сервисов в той или иной базе данных.</target>
        </trans-unit>
        <trans-unit id="8f1532a01e5d8ec8dbefe92231b99738657124d6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETSPNAM&lt;/code&gt; if getspnam() is available to retrieve SysV shadow password entries by name.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_GETSPNAM&lt;/code&gt; , если функция getspnam () доступна для получения записей теневого пароля SysV по имени.</target>
        </trans-unit>
        <trans-unit id="cfad68a688a0a88c6b15faed3a855ee7ed81db88" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_HTONL&lt;/code&gt; if htonl() and its friends are available to do network order byte swapping.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_HTONL&lt;/code&gt; , если htonl () и его друзья доступны для обмена байтами сетевого порядка.</target>
        </trans-unit>
        <trans-unit id="36ae55fc8ab6d9db052670febb9d6c73ffc9c7fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_HYPOT&lt;/code&gt; if hypot is available for numerically stable hypotenuse function.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_HYPOT&lt;/code&gt; , если гипотеза доступна для численно стабильной функции гипотенузы.</target>
        </trans-unit>
        <trans-unit id="1c8f906308fe5425fd5dc9fc6c65283219211f28" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_INDEX&lt;/code&gt; if index() and rindex() are available for string searching.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_INDEX&lt;/code&gt; , если index () и rindex () доступны для поиска по строкам.</target>
        </trans-unit>
        <trans-unit id="f58665b1066bffd31d93be9865becf02e07fbc33" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LINK&lt;/code&gt; if link() is available to create hard links.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LINK&lt;/code&gt; , если ссылка () доступна для создания жестких ссылок.</target>
        </trans-unit>
        <trans-unit id="f7aaa9b5790c7fed2f4557a1b76230d9dee2b872" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LOCALECONV&lt;/code&gt; if localeconv() is available for numeric and monetary formatting conventions.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LOCALECONV&lt;/code&gt; , если localeconv () доступен для соглашений о числовом и денежном форматировании.</target>
        </trans-unit>
        <trans-unit id="a3c4adc80b08fec49de9e85a9758844bbed93d4f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LOCKF&lt;/code&gt; if lockf() is available to do file locking.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LOCKF&lt;/code&gt; , если для блокировки файлов доступна функция lockf ().</target>
        </trans-unit>
        <trans-unit id="a3309e731f7ec54de80f5709f885fa11f752d281" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LONG_DOUBLE&lt;/code&gt; if the long double type is supported.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LONG_DOUBLE&lt;/code&gt; , если поддерживается тип long double.</target>
        </trans-unit>
        <trans-unit id="f96dc22b2fabc7d6becfede8302b062283c67511" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LONG_LONG&lt;/code&gt; if the long long type is supported.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LONG_LONG&lt;/code&gt; , если поддерживается тип long long.</target>
        </trans-unit>
        <trans-unit id="bde46e5f10d187a1e49089e8f14937e758db8660" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LSTAT&lt;/code&gt; if lstat() is available to do file stats on symbolic links.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_LSTAT&lt;/code&gt; , если lstat () доступен для сбора статистики файла по символическим ссылкам.</target>
        </trans-unit>
        <trans-unit id="9c29d2f5108f120fc070de1998bbec52bcea01c7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MADVISE&lt;/code&gt; if madvise() is available to map a file into memory.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_MADVISE&lt;/code&gt; , если доступна функция madvise () для отображения файла в память.</target>
        </trans-unit>
        <trans-unit id="a0176dd527685bd6e90190916167c20eaf54f9cf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MKOSTEMP&lt;/code&gt; if mkostemp() is available to exclusively create and open a uniquely named (with a suffix) temporary file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773977cefbb09ffe9bf40f7bdd75aa66788128d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MMAP&lt;/code&gt; if mmap() is available to map a file into memory.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_MMAP&lt;/code&gt; , если доступна функция mmap () для отображения файла в память.</target>
        </trans-unit>
        <trans-unit id="e49a09fbe97831dedb0097fc04c353ecd4fdc497" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MPROTECT&lt;/code&gt; if mprotect() is available to modify the access protection of a memory mapped file.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_MPROTECT&lt;/code&gt; , если mprotect () доступен для изменения защиты доступа к отображенному в память файлу.</target>
        </trans-unit>
        <trans-unit id="d39b4760c4a7ddea99da224cda29212d2ef99aed" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MSYNC&lt;/code&gt; if msync() is available to synchronize a mapped file.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_MSYNC&lt;/code&gt; , если msync () доступен для синхронизации сопоставленного файла.</target>
        </trans-unit>
        <trans-unit id="542bb319608c7eec938e5b98398f37ee190044a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MUNMAP&lt;/code&gt; if munmap() is available to unmap a region mapped by mmap().</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_MUNMAP&lt;/code&gt; , если доступна функция munmap () для отмены отображения области, отображаемой с помощью mmap ().</target>
        </trans-unit>
        <trans-unit id="02d3878b96b9be7c2121b2227ea0c924b133a4a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NAN&lt;/code&gt; if nan() is available to generate NaN.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_NAN&lt;/code&gt; , если nan () доступен для генерации NaN.</target>
        </trans-unit>
        <trans-unit id="8ac0a1512388c05f6e3f6942497c27a45e8e3efe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NANOSLEEP&lt;/code&gt; if nanosleep() is available to sleep with 1E-9 sec accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6ab26a7e66c25dc87e4ed8365e14b5b776d611" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEARBYINT&lt;/code&gt; if nearbyint() is available to return the integral value closest to (according to the current rounding mode) to x.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_NEARBYINT&lt;/code&gt; , если доступна функция nearint () для возврата интегрального значения, ближайшего (в соответствии с текущим режимом округления) к x.</target>
        </trans-unit>
        <trans-unit id="9de8df4ca9d3107d7b5e197ebc2f8b56f2a456de" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEXTAFTER&lt;/code&gt; if nextafter() is available to return the next machine representable double from x in direction y.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_NEXTAFTER&lt;/code&gt; , если nextafter () доступен для возврата следующего машинно-представимого двойника от x в направлении y.</target>
        </trans-unit>
        <trans-unit id="09cc9884f832b1e2f2ad4607b97076420d46d665" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEXTTOWARD&lt;/code&gt; if nexttoward() is available to return the next machine representable long double from x in direction y.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_NEXTTOWARD&lt;/code&gt; , если функция nexttoward () доступна для возврата следующего машинно-представимого long double из x в направлении y.</target>
        </trans-unit>
        <trans-unit id="e84d3a1694bc236dbf1d7993a1d2c9255724da86" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_PTHREAD_ATTR_SETSCOPE&lt;/code&gt; if pthread_attr_setscope() is available to set the contention scope attribute of a thread attribute object.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_PTHREAD_ATTR_SETSCOPE&lt;/code&gt; , если pthread_attr_setscope () доступен для установки атрибута области действия объекта атрибута потока.</target>
        </trans-unit>
        <trans-unit id="ca9e53f6ec390b98dfba5bb4f284367970f8d262" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_READDIR&lt;/code&gt; if readdir() is available to read directory entries.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_READDIR&lt;/code&gt; , если readdir () доступен для чтения записей каталога.</target>
        </trans-unit>
        <trans-unit id="c772ddc21b6658b7802061d88a44caa292765ab3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_REWINDDIR&lt;/code&gt; if rewinddir() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_REWINDDIR&lt;/code&gt; , если доступна функция rewinddir ().</target>
        </trans-unit>
        <trans-unit id="102609636e6adf43c7c619fd51b5305af390db97" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_RMDIR&lt;/code&gt; if rmdir() is available to remove directories.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_RMDIR&lt;/code&gt; , если rmdir () доступен для удаления каталогов.</target>
        </trans-unit>
        <trans-unit id="887794d99137721bdeb0c86f2844b40ead019692" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SEEKDIR&lt;/code&gt; if seekdir() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SEEKDIR&lt;/code&gt; , если доступна seekdir ().</target>
        </trans-unit>
        <trans-unit id="eabab054867a6e7a1fda52591f68108f354fff8a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SELECT&lt;/code&gt; if select() is available to select active file descriptors. A &amp;lt;sys/time.h&amp;gt; inclusion may be necessary for the timeout field.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SELECT&lt;/code&gt; , если select () доступен для выбора активных файловых дескрипторов. Для поля тайм-аута может потребоваться включение &amp;lt;sys / time.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bc33f5c99454e91ae2ee5c0078387d95e7d2e9a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETHOSTENT&lt;/code&gt; if sethostent() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETHOSTENT&lt;/code&gt; , если доступна sethostent ().</target>
        </trans-unit>
        <trans-unit id="75151e22ebcabc154ea71d8ff2b10a358ed030a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETLOCALE&lt;/code&gt; if setlocale() is available to handle locale-specific ctype implementations.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETLOCALE&lt;/code&gt; , если setlocale () доступен для обработки реализаций ctype, зависящих от локали.</target>
        </trans-unit>
        <trans-unit id="3d673facbb75d108913e27f1a2486a73d55d0236" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETNETENT&lt;/code&gt; if setnetent() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETNETENT&lt;/code&gt; , если доступна setnetent ().</target>
        </trans-unit>
        <trans-unit id="7914dcc37c31303f3da0f6e201df5d765f8aa85c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPGRP&lt;/code&gt; if setpgrp() is available to set the current process group.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETPGRP&lt;/code&gt; , если setpgrp () доступен для установки текущей группы процессов.</target>
        </trans-unit>
        <trans-unit id="2002a17a2c2a55f6f40172b2b8fb58d5b76cdd2a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPRIORITY&lt;/code&gt; if setpriority() is available to set a process's priority.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETPRIORITY&lt;/code&gt; , если setpriority () доступен для установки приоритета процесса.</target>
        </trans-unit>
        <trans-unit id="3c631092c3030de3575c0a7a87bf0eb17b021238" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPROTOENT&lt;/code&gt; if setprotoent() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETPROTOENT&lt;/code&gt; , если доступна setprotoent ().</target>
        </trans-unit>
        <trans-unit id="0f78400a8b12f8656f01ebbdf5086223548e1e83" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREGID&lt;/code&gt; if setregid() is available to change the real and effective gid of the current process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETREGID&lt;/code&gt; , если setregid () доступен для изменения реального и эффективного gid текущего процесса.</target>
        </trans-unit>
        <trans-unit id="30c69bd63c2acea93583c8f9220b4a879c50d781" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETRESGID&lt;/code&gt; if setresgid() is available to change the real, effective and saved gid of the current process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETRESGID&lt;/code&gt; , если setresgid () доступен для изменения реального, действующего и сохраненного gid текущего процесса.</target>
        </trans-unit>
        <trans-unit id="35485f4098b6c1c258054bdb628277a4ccf112e2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREUID&lt;/code&gt; if setresuid() is available to change the real, effective and saved uid of the current process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETREUID&lt;/code&gt; , если setresuid () доступен для изменения реального, эффективного и сохраненного uid текущего процесса.</target>
        </trans-unit>
        <trans-unit id="aba8a0bc40989a1ca38df2aae3c387f371d5192b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREUID&lt;/code&gt; if setreuid() is available to change the real and effective uid of the current process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETREUID&lt;/code&gt; , если setreuid () доступна для изменения реального и эффективного uid текущего процесса.</target>
        </trans-unit>
        <trans-unit id="eb6783028c86e7bf10a2b92123734f47a7944fac" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSERVENT&lt;/code&gt; if setservent() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETSERVENT&lt;/code&gt; , если доступна функция setservent ().</target>
        </trans-unit>
        <trans-unit id="56d4df6b62a7f4a67414b6f9ecb8ddad65efc719" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSID&lt;/code&gt; if setsid() is available to set the process group &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SETSID&lt;/code&gt; , если setsid () доступен для установки &lt;code&gt;ID&lt;/code&gt; группы процессов .</target>
        </trans-unit>
        <trans-unit id="7ef408c79ac243069730beb417294ee15f89a8da" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSID&lt;/code&gt; if setsid() is available to set the process group &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53a8b438b669e85e8dac90bda9a163f72b38dcd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SIGPROCMASK&lt;/code&gt; if sigprocmask() is available to examine or change the signal mask of the calling process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SIGPROCMASK&lt;/code&gt; , если sigprocmask () доступен для проверки или изменения маски сигнала вызывающего процесса.</target>
        </trans-unit>
        <trans-unit id="fedaa514d1228b3cb8d459d4c50ec34f00f6ac02" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SOCKET&lt;/code&gt; , which indicates that the &lt;code&gt;BSD&lt;/code&gt; socket interface is supported.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SOCKET&lt;/code&gt; , который указывает, что интерфейс сокета &lt;code&gt;BSD&lt;/code&gt; поддерживается.</target>
        </trans-unit>
        <trans-unit id="d90f4b16cfc328489f9f3e006e37192e3670ab4a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SOCKET&lt;/code&gt;, which indicates that the &lt;code&gt;BSD&lt;/code&gt; socket interface is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acf41a0b06778d8de2ab0c3e21b6db83e6e1a26" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STAT&lt;/code&gt; if stat() is available to get file status.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_STAT&lt;/code&gt; , если stat () доступен для получения статуса файла.</target>
        </trans-unit>
        <trans-unit id="104dec5b82fbc045989fe3c8c4ef8fa75c373740" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRCHR&lt;/code&gt; if strchr() and strrchr() are available for string searching.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_STRCHR&lt;/code&gt; , если strchr () и strrchr () доступны для поиска по строкам.</target>
        </trans-unit>
        <trans-unit id="66c65e480ececd2a54e0b9068f9890c68b2b94ad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRCOLL&lt;/code&gt; if strcoll() is available to compare strings using collating information.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_STRCOLL&lt;/code&gt; , если strcoll () доступен для сравнения строк с использованием информации сопоставления.</target>
        </trans-unit>
        <trans-unit id="b82eb75e3b5d7a021a62e68340d85ee6ee407d5d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRERROR&lt;/code&gt; if strerror() is available to translate error numbers to strings.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_STRERROR&lt;/code&gt; , если есть strerror () для преобразования номеров ошибок в строки.</target>
        </trans-unit>
        <trans-unit id="157fd2966246701c1e0fd97cb121f370d5243dfd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRXFRM&lt;/code&gt; if strxfrm() is available to transform strings.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_STRXFRM&lt;/code&gt; , если strxfrm () доступна для преобразования строк.</target>
        </trans-unit>
        <trans-unit id="f665cc4a3804d1cfbb21ea5e1e553f34ba0001f3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYSCALL&lt;/code&gt; if syscall() is available call arbitrary system calls.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SYSCALL&lt;/code&gt; , если доступна функция syscall (), вызывающая произвольные системные вызовы.</target>
        </trans-unit>
        <trans-unit id="76958e03c19c57ba5daadf788ceb559703fda4a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYSTEM&lt;/code&gt; if system() is available to issue a shell command.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SYSTEM&lt;/code&gt; , если system () доступна для выполнения команды оболочки.</target>
        </trans-unit>
        <trans-unit id="fba0f75ab5519c316f7379166065cac7a0fa0f08" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYS_ERRLIST&lt;/code&gt; if sys_errlist[] is available to translate error numbers to strings.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SYS_ERRLIST&lt;/code&gt; , если sys_errlist [] доступен для преобразования номеров ошибок в строки.</target>
        </trans-unit>
        <trans-unit id="3133e51b2626aefa90c83a60c2bc07b45364f9d8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYS_ERRNOLIST&lt;/code&gt; if sys_errnolist[] is available to translate error numbers to the symbolic name.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_SYS_ERRNOLIST&lt;/code&gt; , если sys_errnolist [] доступен для преобразования номеров ошибок в символическое имя.</target>
        </trans-unit>
        <trans-unit id="3b6cc938eb6588fef7831af7c25c38df6b393dba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TELLDIR&lt;/code&gt; if telldir() is available.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_TELLDIR&lt;/code&gt; , если telldir () доступен.</target>
        </trans-unit>
        <trans-unit id="13376d783be11f279f6a31e5dca53c18c5518beb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt; , which indicates indicates to the C program that the struct tm has the tm_gmtoff field.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt; , который указывает программе на C, что структура tm имеет поле tm_gmtoff.</target>
        </trans-unit>
        <trans-unit id="1086cb9c5e3f467454832b8b12812058cd92e06e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt;, which indicates to the C program that the struct tm has the tm_gmtoff field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fdffc25ffd7e4584eb45e68410699ffcf4500b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt; , which indicates indicates to the C program that the struct tm has the tm_zone field.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt; , который указывает программе на C, что структура tm имеет поле tm_zone.</target>
        </trans-unit>
        <trans-unit id="c04ef66c28333bfa29c16eb97a4f1bf1a07a865b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt;, which indicates to the C program that the struct tm has the tm_zone field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c5c15d4eddf8d206488d6739d6fd8de91eb4bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TRUNCATE&lt;/code&gt; if truncate() is available to truncate files.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_TRUNCATE&lt;/code&gt; , если truncate () доступен для усечения файлов.</target>
        </trans-unit>
        <trans-unit id="e2b911e2460cf128e44ed370b2980c2209097f87" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TZNAME&lt;/code&gt; if tzname[] is available to access timezone names.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_TZNAME&lt;/code&gt; , если tzname [] доступно для доступа к именам часовых поясов.</target>
        </trans-unit>
        <trans-unit id="0d2899983d1ce6900d5663872bcf0fe4bc31fe25" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_UNION_SEMUN&lt;/code&gt; if the union semun is defined by including &amp;lt;sys/sem.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_UNION_SEMUN&lt;/code&gt; , если объединение semun определяется включением &amp;lt;sys / sem.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="9dbad1c6f722a7fb60b2580c6825a89a0875ea78" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_USLEEP&lt;/code&gt; if usleep() is available to do high granularity sleeps.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_USLEEP&lt;/code&gt; , если usleep () доступен для выполнения засыпания с высокой степенью детализации.</target>
        </trans-unit>
        <trans-unit id="62fcdd3f292691fc949ae90083b1d7e19d396383" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_USTAT&lt;/code&gt; if ustat() is available to query file system statistics by dev_t.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_USTAT&lt;/code&gt; , если ustat () доступен для запроса статистики файловой системы с помощью dev_t.</target>
        </trans-unit>
        <trans-unit id="e6da30a5484ed0715193a06b75bbdc0f387b14b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_WAITPID&lt;/code&gt; if waitpid() is available to wait for child process.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS_WAITPID&lt;/code&gt; , если waitpid () доступен для ожидания дочернего процесса.</target>
        </trans-unit>
        <trans-unit id="ea1ebdb3e07eb3cfa8774547eb7eca99b9cbda6a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS__FWALK&lt;/code&gt; if _fwalk() is available to apply a function to all the file handles.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;HAS__FWALK&lt;/code&gt; , если _fwalk () доступен для применения функции ко всем дескрипторам файлов.</target>
        </trans-unit>
        <trans-unit id="ccfbe62640f2e7f4d3f434546f57dde1c801c589" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_DIRENT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;dirent.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_DIRENT&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;dirent.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a9a787f2a18f3b44e560a5f3940cd8e2d3a4e477" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_DIRENT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;dirent.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09b17b8feebed4fb31ad1053dd929b31fc1552d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_NETINET_IN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;netinet/in.h&amp;gt;. Otherwise, you may try &amp;lt;sys/in.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_NETINET_IN&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;netinet / in.h&amp;gt;. В противном случае вы можете попробовать &amp;lt;sys / in.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="6229f1fa60966db3808987381a186cc7f8635df8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_NETINET_IN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;netinet/in.h&amp;gt;. Otherwise, you may try &amp;lt;sys/in.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18545a27b23f4ec408fe168cb07019ddd52aeb9d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_PWD&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;pwd.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_PWD&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;pwd.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bb803936d76c5aab724f9475cc78845aadf9c816" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_PWD&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;pwd.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3999885997764e29fe1e4dcd432c1a48f0dbd137" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_QUADMATH&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;quadmath.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_QUADMATH&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;quadmath.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="84ed6ce0c86d5ff27c690b2ddda9c899654179c0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_QUADMATH&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;quadmath.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59b19169614e1208d6a92cb8cd08ec908a8e0b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_IN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/in.h&amp;gt; instead of &amp;lt;netinet/in.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_IN&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;sys / in.h&amp;gt; вместо &amp;lt;netinet / in.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="03b21042961935fbfbefec3a909d5794f5de25f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_IN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/in.h&amp;gt; instead of &amp;lt;netinet/in.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72fad23f2686fa8a3b7ba796dba5e928d3c1193" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SELECT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/select.h&amp;gt; in order to get the definition of struct timeval.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_SELECT&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;sys / select.h&amp;gt;, чтобы получить определение struct timeval.</target>
        </trans-unit>
        <trans-unit id="be7898505b9471576bb5b430ec24e9c34c7b1a55" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SELECT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/select.h&amp;gt; in order to get the definition of struct timeval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b3e1dfb1e11c227d687db5d0baaa2e450457de" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SOCKIO&lt;/code&gt; to indicate to the C program that socket ioctl codes may be found in &amp;lt;sys/sockio.h&amp;gt; instead of &amp;lt;sys/ioctl.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_SOCKIO&lt;/code&gt; , чтобы указать программе на C, что коды ioctl сокета могут быть найдены в &amp;lt;sys / sockio.h&amp;gt; вместо &amp;lt;sys / ioctl.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="abc49b9ac08dff6a9f6857ae04835d4e61d8c3d9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_TIME&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;sys / time.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a05fce4796eb0a468ac066cc59e0a4dc57538112" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134ce192071bcaa440fc2e6dd10833f44f8a3750" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt; with &lt;code&gt;KERNEL&lt;/code&gt; defined.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt; , который указывает программе C, что она должна включать &amp;lt;sys / time.h&amp;gt; с определенным &lt;code&gt;KERNEL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f179c336e76408f1f071c7e6f1d598b7e1ea26ef" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt; with &lt;code&gt;KERNEL&lt;/code&gt; defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939cb7b0620edee4edc61983e7278fc31a5c1093" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_UN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/un.h&amp;gt; to get &lt;code&gt;UNIX&lt;/code&gt; domain socket definitions.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_UN&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;sys / un.h&amp;gt; для получения определений сокетов домена &lt;code&gt;UNIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ff1d57c77149a8f8965a9ee33bf60883847c53e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_UN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/un.h&amp;gt; to get &lt;code&gt;UNIX&lt;/code&gt; domain socket definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b60d3b34826e6947a78549014fc461f91e426" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_WAIT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/wait.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_SYS_WAIT&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;sys / wait.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f8afd487363c7052289252816c4039d5e7259ee5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_WAIT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/wait.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbee00fea0a0e43a823409e3c9ea7ecbe6db0995" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_TIME&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;time.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_TIME&lt;/code&gt; , которое указывает программе на C, что она должна включать &amp;lt;time.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="5e26138c57947cb8f890b9cb6f5d5a73c355cb2b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_VARARGS&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;varargs.h&amp;gt;.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;I_VARARGS&lt;/code&gt; , который указывает программе на C, что она должна включать &amp;lt;varargs.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="adacd8529d588003400a218d9efa8778e7c5a4a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE&lt;/code&gt; if the long double is any of the &lt;code&gt;IEEE&lt;/code&gt; 754 style long doubles: &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_STD&lt;/code&gt;, &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_EXTENDED&lt;/code&gt;, &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f3c21fd0b8ede657c0701ed24331b130440cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;IEEE&lt;/code&gt; 754 double-double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756980c20db36fe0dd46d4db8127dd1afbfcd959" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_EXTENDED&lt;/code&gt; if the long double is the 80-bit &lt;code&gt;IEEE&lt;/code&gt; 754 extended precision. Note that despite the &lt;code&gt;extended&lt;/code&gt; this is less than the &lt;code&gt;std&lt;/code&gt;, since thisis an extension of the double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aa1379dea829947822c99c195a810d06bb4a38" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_STD&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;IEEE&lt;/code&gt; 754.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce75ff7631bbaf803d0ace7a33143e12192218ef" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_VAX&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;VAX&lt;/code&gt; format H.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58139b2e3b281a9a118c344ae314fa19f7ef819b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;MYMALLOC&lt;/code&gt; in case other parts of the source want to take special action if &lt;code&gt;MYMALLOC&lt;/code&gt; is used. This may include different sorts of profiling or error detection.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;MYMALLOC&lt;/code&gt; на случай, если другие части источника захотят предпринять специальные действия, если используется &lt;code&gt;MYMALLOC&lt;/code&gt; . Это может включать в себя различные виды профилирования или обнаружения ошибок.</target>
        </trans-unit>
        <trans-unit id="2c8fdadfdd30950a7b700d396be77876a6f4c5f5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; . It is set to undef when &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; is empty.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; . Он устанавливается в undef, когда &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; пуст.</target>
        </trans-unit>
        <trans-unit id="7b135860345eb1cb4ecb8f5dbf25f3b80d9663cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt;. It is set to undef when &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff46e0082d05a29ab6252efc4bd771d18d5878f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt; , which contains a colon-separated set of paths for the perl binary to include in @&lt;code&gt;INC&lt;/code&gt; . See also otherlibdirs.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt; , который содержит разделенный двоеточием набор путей для двоичного файла perl , который должен быть включен в @ &lt;code&gt;INC&lt;/code&gt; . См. Также otherlibdirs.</target>
        </trans-unit>
        <trans-unit id="792edce2f8757d59c45987f57e7fea3d6b286f1e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt;, which contains a colon-separated set of paths for the perl binary to include in @&lt;code&gt;INC&lt;/code&gt;. See also otherlibdirs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caef6d2331c84b17275d3f9012789c819b377ba9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORBIN&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PERL_VENDORBIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d76f60666c8aecb525e5906ff962481dc318171" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORBIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533111c8d8f10b6751abb6a1a0088f4c19073d3e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORLIB&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PERL_VENDORLIB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="871a0cb0554ef284df45b5e6ac6f30c717bd50ad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORLIB&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177a5dd44b77ca5ced87275d19c31e96d16bc7b0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7969ccc81d5cd924a862496e98d359f5c4fdb7ba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc9c3d91fb6f28bed8329dae1d992b2ddc3b88b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt; , which indicates the C compiler allows printf-like formats to be null.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt; , что означает, что компилятор C позволяет форматам, подобным printf, иметь значение NULL.</target>
        </trans-unit>
        <trans-unit id="a63de281be650d131b0dada057dda3c788db87bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt;, which indicates the C compiler allows printf-like formats to be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b45d18a0fa0b9cd91b944a53b1e7323f8adc333" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWAGE&lt;/code&gt; , which indicates that struct passwd contains pw_age.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWAGE&lt;/code&gt; , что указывает на то, что struct passwd содержит pw_age.</target>
        </trans-unit>
        <trans-unit id="8f93b894ca294b4b089fefb4c8e130735fcaeb5c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWAGE&lt;/code&gt;, which indicates that struct passwd contains pw_age.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b184e19c4dcc5f872f5344f6afc9d5aa8890c36" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCHANGE&lt;/code&gt; , which indicates that struct passwd contains pw_change.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWCHANGE&lt;/code&gt; , что указывает на то, что struct passwd содержит pw_change.</target>
        </trans-unit>
        <trans-unit id="8441cd9467c256bdc9b09035b7b1876a361955b4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCHANGE&lt;/code&gt;, which indicates that struct passwd contains pw_change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5fb50ace415a9312b25c289ac7ee228f0dd1f8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCLASS&lt;/code&gt; , which indicates that struct passwd contains pw_class.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWCLASS&lt;/code&gt; , который указывает, что struct passwd содержит pw_class.</target>
        </trans-unit>
        <trans-unit id="bf37296a4f626e5d681b9f335125151376abd8ce" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCLASS&lt;/code&gt;, which indicates that struct passwd contains pw_class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f567085df536f85d28a3794c7c79c2f135c39fc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCOMMENT&lt;/code&gt; , which indicates that struct passwd contains pw_comment.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWCOMMENT&lt;/code&gt; , который указывает, что struct passwd содержит pw_comment.</target>
        </trans-unit>
        <trans-unit id="d446c0dd2bd7215acf1c8d761e1c367d9b022427" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCOMMENT&lt;/code&gt;, which indicates that struct passwd contains pw_comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2223305749b21469a0762164dc8dc0df3aaa8c7f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWEXPIRE&lt;/code&gt; , which indicates that struct passwd contains pw_expire.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWEXPIRE&lt;/code&gt; , что означает, что struct passwd содержит pw_expire.</target>
        </trans-unit>
        <trans-unit id="9992e4d0615a9aacf641f7f53cfe12ded3beec47" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWEXPIRE&lt;/code&gt;, which indicates that struct passwd contains pw_expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf2af3d9e7342f5f1fe442fb4ba6590cba3aeaf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWGECOS&lt;/code&gt; , which indicates that struct passwd contains pw_gecos.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWGECOS&lt;/code&gt; , что означает, что struct passwd содержит pw_gecos.</target>
        </trans-unit>
        <trans-unit id="3b8016818095e885888a0aca57a1a20c790843e4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWGECOS&lt;/code&gt;, which indicates that struct passwd contains pw_gecos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4df7b4ce4ecdac74c8fac53257d7c54e9e2b1d2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWPASSWD&lt;/code&gt; , which indicates that struct passwd contains pw_passwd.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWPASSWD&lt;/code&gt; , который указывает, что struct passwd содержит pw_passwd.</target>
        </trans-unit>
        <trans-unit id="abe328a44bbcae89a29efb7320b5f4698e2f3a19" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWPASSWD&lt;/code&gt;, which indicates that struct passwd contains pw_passwd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f5c85237fcc07cb2101d49b94de63960320aab" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWQUOTA&lt;/code&gt; , which indicates that struct passwd contains pw_quota.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;PWQUOTA&lt;/code&gt; , что указывает на то, что struct passwd содержит pw_quota.</target>
        </trans-unit>
        <trans-unit id="9226e8f3babf511a24917282807de2e020e40767" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWQUOTA&lt;/code&gt;, which indicates that struct passwd contains pw_quota.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b4b9ba5cff92bc6dcdb8d6c8455ba666662fc3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SETLOCALE_ACCEPTS_ANY_LOCALE_NAME&lt;/code&gt; if setlocale() accepts any locale name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6dc66871cca735678df0954175fa95cf018eb7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; if setuid scripts can be secure. This test looks in</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;SETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; , если сценарии setuid могут быть безопасными. Этот тест смотрит в</target>
        </trans-unit>
        <trans-unit id="81f004e1abf850968e0e52c15f9f6cad13d862f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SITEARCH&lt;/code&gt; to hold the pathname of architecture-dependent library files for $package. If $sitearch is the same as $archlib, then this is set to undef.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;SITEARCH&lt;/code&gt; для хранения пути к архитектурно-зависимым файлам библиотеки для $ package. Если $ sitearch совпадает с $ archlib, то устанавливается значение undef.</target>
        </trans-unit>
        <trans-unit id="8b1027f2dc2d15c75eedea147e9dd18e08a6014d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDCHAR&lt;/code&gt; to be the type of char used in</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;STDCHAR&lt;/code&gt; как тип char, используемый в</target>
        </trans-unit>
        <trans-unit id="f33764730e4076b75f7a54ca0311a31df43bbaae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDIO_CNT_LVALUE&lt;/code&gt; if the &lt;code&gt;FILE_cnt&lt;/code&gt; macro can be used as an lvalue.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;STDIO_CNT_LVALUE&lt;/code&gt; , если макрос &lt;code&gt;FILE_cnt&lt;/code&gt; может использоваться как lvalue.</target>
        </trans-unit>
        <trans-unit id="0e69f3a8bd1de18db50aaf0b9ef5033e3dafd978" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDIO_PTR_LVALUE&lt;/code&gt; if the &lt;code&gt;FILE_ptr&lt;/code&gt; macro can be used as an lvalue.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;STDIO_PTR_LVALUE&lt;/code&gt; , если макрос &lt;code&gt;FILE_ptr&lt;/code&gt; может использоваться как lvalue.</target>
        </trans-unit>
        <trans-unit id="d7bc8c4e73c6aaa4fc8b7bd3db1eed9675bd50c1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_BSD_GETPGRP&lt;/code&gt; if getpgrp needs one arguments whereas &lt;code&gt;USG&lt;/code&gt; one needs none.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_BSD_GETPGRP&lt;/code&gt; , если для getpgrp нужен один аргумент, а для &lt;code&gt;USG&lt;/code&gt; - нет.</target>
        </trans-unit>
        <trans-unit id="4cb9da0f1f2c05f27c0a4f7de8f8706f136adf70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_BSD_SETPGRP&lt;/code&gt; if setpgrp needs two arguments whereas &lt;code&gt;USG&lt;/code&gt; one needs none. See also d_setpgid for a &lt;code&gt;POSIX&lt;/code&gt; interface.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_BSD_SETPGRP&lt;/code&gt; , если для setpgrp нужны два аргумента, а для &lt;code&gt;USG&lt;/code&gt; - ни одного. См. Также d_setpgid для интерфейса &lt;code&gt;POSIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f057b25789e3d0c0c978f875ab711fef26822396" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_IOCNOTTY&lt;/code&gt; to indicate that the ioctl() call with &lt;code&gt;TIOCNOTTY&lt;/code&gt; should be used to void tty association. Otherwise (on &lt;code&gt;USG&lt;/code&gt; probably), it is enough to close the standard file descriptors and do a setpgrp().</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_IOCNOTTY&lt;/code&gt; , чтобы указать, что вызов ioctl () с &lt;code&gt;TIOCNOTTY&lt;/code&gt; должен использоваться для аннулирования ассоциации tty. В противном случае ( вероятно, в &lt;code&gt;USG&lt;/code&gt; ) достаточно закрыть стандартные файловые дескрипторы и выполнить setpgrp ().</target>
        </trans-unit>
        <trans-unit id="c86f9683041fce14f0acc7f22e22cb66e7ecf21d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt; , which indicates that struct semid_ds * is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt; , который указывает, что struct semid_ds * должна использоваться для semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1109513dd38439e5fff1a28d882ff5dff7ec9cbf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt;, which indicates that struct semid_ds * is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165216a22f48262f27b72dd85b30d1c442227e08" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt; , which indicates that union semun is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt; , который указывает, что union semun должен использоваться для semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4aafdea14d415917179c68732185373f4c70028" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt;, which indicates that union semun is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d946a174db1c59c6d451a81dd08b793b70e50298" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STAT_BLOCKS&lt;/code&gt; if this system has a stat structure declaring st_blksize and st_blocks.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_STAT_BLOCKS&lt;/code&gt; , если в этой системе есть структура stat, объявляющая st_blksize и st_blocks.</target>
        </trans-unit>
        <trans-unit id="4f2a34f2d97a9448f367a3e7dc94f6a98d0c8541" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STDIO_BASE&lt;/code&gt; if this system has a &lt;code&gt;FILE&lt;/code&gt; structure declaring a usable _base field (or equivalent) in</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_STDIO_BASE&lt;/code&gt; , если в этой системе есть структура &lt;code&gt;FILE&lt;/code&gt; , объявляющая пригодное для использования поле _base (или эквивалент) в</target>
        </trans-unit>
        <trans-unit id="884014009e45fc4b799369297408405b825f05ec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STDIO_PTR&lt;/code&gt; if this system has a &lt;code&gt;FILE&lt;/code&gt; structure declaring usable _ptr and _cnt fields (or equivalent) in</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;USE_STDIO_PTR&lt;/code&gt; , если в этой системе есть структура &lt;code&gt;FILE&lt;/code&gt; , объявляющая используемые поля _ptr и _cnt (или эквивалентные) в</target>
        </trans-unit>
        <trans-unit id="e2ce6f3e2ba733cc080d545a7f5345eaada6b53b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;VOIDSIG&lt;/code&gt; if this system declares &quot;void (*signal(...))()&quot; in</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;VOIDSIG&lt;/code&gt; , если эта система объявляет &quot;void (* signal (...)) ()&quot; в</target>
        </trans-unit>
        <trans-unit id="c1b1eb5455ff0e45585c738f286f73520d2bda4a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;VOID_CLOSEDIR&lt;/code&gt; if closedir() does not return a value.</source>
          <target state="translated">Эта переменная условно определяет &lt;code&gt;VOID_CLOSEDIR&lt;/code&gt; , если closedir () не возвращает значение.</target>
        </trans-unit>
        <trans-unit id="f67d5b9663b7f0f671bc57d6208cef2ecf39a7bd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines CASTI32, which indicates whether the C compiler can cast large floats to 32-bit ints.</source>
          <target state="translated">Эта переменная условно определяет CASTI32,что указывает на то,может ли компилятор C приводить большие флоты к 32-битным интам.</target>
        </trans-unit>
        <trans-unit id="01b443cab6a6f837f35bbd4a8391036b60139696" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_ACCEPT4 if accept4() is available to accept socket connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0e56548eb03f6bba0bfbdaf1893bfedf8b743e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_DUP2 if dup2() is available to duplicate file descriptors.</source>
          <target state="translated">Эта переменная условно определяет HAS_DUP2,если функция dup2()доступна для дублирования файловых дескрипторов.</target>
        </trans-unit>
        <trans-unit id="b26b7adde106aa6278ad18ec71be8d927043d6fd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_DUP3 if dup3() is available to duplicate file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439c57e77afcdbc973932168c0d12a970d487a4f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_LC_MONETARY_2008 if libc has the international currency locale rules from &lt;code&gt;POSIX&lt;/code&gt; 1003.1-2008.</source>
          <target state="translated">Эта переменная условно определяет HAS_LC_MONETARY_2008, если libc имеет правила локали для международной валюты из &lt;code&gt;POSIX&lt;/code&gt; 1003.1-2008.</target>
        </trans-unit>
        <trans-unit id="3d55d58456df494116e8e08588b498d9a5a4a48d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_dbl_dig if this system's header files provide &lt;code&gt;DBL_DIG&lt;/code&gt; , which is the number of significant digits in a double precision number.</source>
          <target state="translated">Эта переменная условно определяет d_dbl_dig, если файлы заголовков этой системы предоставляют &lt;code&gt;DBL_DIG&lt;/code&gt; , который представляет собой количество значащих цифр в числе с двойной точностью.</target>
        </trans-unit>
        <trans-unit id="26943f542b57e3d665241442f5609c91f668a2bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_ldbl_dig if this system's header files provide &lt;code&gt;LDBL_DIG&lt;/code&gt; , which is the number of significant digits in a long double precision number.</source>
          <target state="translated">Эта переменная условно определяет d_ldbl_dig, если файлы заголовков этой системы предоставляют &lt;code&gt;LDBL_DIG&lt;/code&gt; , который представляет собой количество значащих цифр в длинном числе двойной точности.</target>
        </trans-unit>
        <trans-unit id="0899cdd5463edd7d47e779f47e9d996e29a1d596" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_ldbl_dig if this system's header files provide &lt;code&gt;LDBL_DIG&lt;/code&gt;, which is the number of significant digits in a long double precision number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d4367b100c21704ff1afa07d5fcbbbff3622b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines pthread_create_joinable. undef if</source>
          <target state="translated">Эта переменная условно определяет pthread_create_joinable.undef if</target>
        </trans-unit>
        <trans-unit id="4e65c9696692a1039d19a96f88bbb8715e74549c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CHSIZE&lt;/code&gt; symbol, which indicates to the C program that the chsize() routine is available to truncate files. You might need a -lx to get this routine.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;CHSIZE&lt;/code&gt; , который указывает программе на C, что функция chsize () доступна для усечения файлов. Вам может понадобиться -lx, чтобы получить эту процедуру.</target>
        </trans-unit>
        <trans-unit id="846b0e7427992bb9738c034b084170cbd17a9268" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CRYPT&lt;/code&gt; symbol, which indicates to the C program that the crypt() routine is available to encrypt passwords and the like.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;CRYPT&lt;/code&gt; , который указывает программе на C, что процедура crypt () доступна для шифрования паролей и т.п.</target>
        </trans-unit>
        <trans-unit id="357bf08dc30645376499e133bedc6c5b51689b15" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CSH&lt;/code&gt; symbol, which indicates to the C program that the C-shell exists.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;CSH&lt;/code&gt; , который указывает программе C, что C-оболочка существует.</target>
        </trans-unit>
        <trans-unit id="e54e9f341c505bb1d2ec118651994c8e65d0f811" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;FCNTL_CAN_LOCK&lt;/code&gt; symbol and indicates whether file locking with fcntl() works.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;FCNTL_CAN_LOCK&lt;/code&gt; и указывает, работает ли блокировка файла с помощью fcntl ().</target>
        </trans-unit>
        <trans-unit id="02d3adba206dca72cb969c2114087d914736e57e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;FLEXFILENAMES&lt;/code&gt; symbol, which indicates that the system supports filenames longer than 14 characters.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;FLEXFILENAMES&lt;/code&gt; , который указывает, что система поддерживает имена файлов длиной более 14 символов.</target>
        </trans-unit>
        <trans-unit id="b6165df6dc3c074b8386cff10673ed582f2313bf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HASCONST&lt;/code&gt; symbol, which indicates to the C program that this C compiler knows about the const type.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HASCONST&lt;/code&gt; , который указывает программе C, что компилятор C знает о типе const.</target>
        </trans-unit>
        <trans-unit id="514ce51d44fd8efc6f22a726ff2d864524dc5927" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HASVOLATILE&lt;/code&gt; symbol, which indicates to the C program that this C compiler knows about the volatile declaration.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HASVOLATILE&lt;/code&gt; , который указывает программе C, что этот компилятор C знает о объявлении изменчивого.</target>
        </trans-unit>
        <trans-unit id="3baa45e96d482436f92754c7ebdc6a73550f0eae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ACCESSX&lt;/code&gt; symbol, which indicates to the C program that the accessx() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ACCESSX&lt;/code&gt; , который указывает программе на C, что доступна процедура accessx ().</target>
        </trans-unit>
        <trans-unit id="12a76ff5170c955de143e03f08fd4db9b4437e7b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ACOSH&lt;/code&gt; symbol, which indicates to the C program that the acosh() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ACOSH&lt;/code&gt; , который указывает программе на C, что доступна процедура acosh ().</target>
        </trans-unit>
        <trans-unit id="3bbc6bd18282fbbaa0a5df512d46d448872f79f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_AINTL&lt;/code&gt; symbol, which indicates to the C program that the aintl() routine is available. If copysignl is also present we can emulate modfl.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_AINTL&lt;/code&gt; , который указывает программе на C, что доступна процедура aintl (). Если также присутствует copysignl, мы можем эмулировать modfl.</target>
        </trans-unit>
        <trans-unit id="ac4f3fc539e3b11a8b62b87684564e56d5832bdb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ALARM&lt;/code&gt; symbol, which indicates to the C program that the alarm() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ALARM&lt;/code&gt; , который указывает программе на языке C, что доступна функция alarm ().</target>
        </trans-unit>
        <trans-unit id="393748ad8a6e58564f59c88a5a65a0fccff40956" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ASCTIME_R&lt;/code&gt; symbol, which indicates to the C program that the asctime_r() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ASCTIME_R&lt;/code&gt; , который указывает программе на C, что доступна процедура asctime_r ().</target>
        </trans-unit>
        <trans-unit id="e6240de5e54fe3a786d797ae169f9a039181d8e9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ASINH&lt;/code&gt; symbol, which indicates to the C program that the asinh() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ASINH&lt;/code&gt; , который указывает программе C, что доступна процедура asinh ().</target>
        </trans-unit>
        <trans-unit id="968fc15f09fb64edc7440ecd0aed6b099eb7c13a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATANH&lt;/code&gt; symbol, which indicates to the C program that the atanh() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ATANH&lt;/code&gt; , который указывает программе на C, что доступна процедура atanh ().</target>
        </trans-unit>
        <trans-unit id="0b6ee241d9266a7948fd72b86cd3046b1822d99c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATOLF&lt;/code&gt; symbol, which indicates to the C program that the atolf() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ATOLF&lt;/code&gt; , который указывает программе на C, что доступна процедура atolf ().</target>
        </trans-unit>
        <trans-unit id="7f44fe9ea95c9ae1f907047c17022ef03aa1acbb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATOLL&lt;/code&gt; symbol, which indicates to the C program that the atoll() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_ATOLL&lt;/code&gt; , который указывает программе на C, что доступна процедура atoll ().</target>
        </trans-unit>
        <trans-unit id="d5e0162b328b8a9b754dac6231795ba2f27a65bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BACKTRACE&lt;/code&gt; symbol, which indicates to the C program that the backtrace() routine is available to get a stack trace.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_BACKTRACE&lt;/code&gt; , который указывает программе на C, что для получения трассировки стека доступна процедура backtrace ().</target>
        </trans-unit>
        <trans-unit id="e96fa08dff1194cea11b6b542d4bb635e9998fe7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BCMP&lt;/code&gt; symbol if the bcmp() routine is available to compare strings.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_BCMP&lt;/code&gt; , если для сравнения строк доступна подпрограмма bcmp ().</target>
        </trans-unit>
        <trans-unit id="2c3a347a1f168f38f12b42fec82e5a9d4a71e447" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BCOPY&lt;/code&gt; symbol if the bcopy() routine is available to copy strings.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_BCOPY&lt;/code&gt; , если для копирования строк доступна подпрограмма bcopy ().</target>
        </trans-unit>
        <trans-unit id="fe7d21ac1bac028a9a4864da166ebd5752380e71" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BZERO&lt;/code&gt; symbol if the bzero() routine is available to set memory to 0.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_BZERO&lt;/code&gt; , если доступна процедура bzero () для установки памяти в 0.</target>
        </trans-unit>
        <trans-unit id="6ca90016e7f6abf49f24d5147f764f4e266fad51" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CBRT&lt;/code&gt; symbol, which indicates to the C program that the cbrt() (cube root) function is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CBRT&lt;/code&gt; , который указывает программе на C, что доступна функция cbrt () (корень куба).</target>
        </trans-unit>
        <trans-unit id="9190489c62bb031470f6a8b4f7cd7a1825719930" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CHOWN&lt;/code&gt; symbol, which indicates to the C program that the chown() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CHOWN&lt;/code&gt; , который указывает программе на C, что доступна процедура chown ().</target>
        </trans-unit>
        <trans-unit id="ab782a1830d8f2fd000403d6b221d923f1975987" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CHROOT&lt;/code&gt; symbol, which indicates to the C program that the chroot() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CHROOT&lt;/code&gt; , который указывает программе на C, что доступна процедура chroot ().</target>
        </trans-unit>
        <trans-unit id="32e6c736a6ca4ad0fe4ee89e271bd5cc262bc051" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CLASS&lt;/code&gt; symbol, which indicates to the C program that the class() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CLASS&lt;/code&gt; , который указывает программе на C, что доступна процедура class ().</target>
        </trans-unit>
        <trans-unit id="a075a89328697cbb603b70b3c6d8d110f118b481" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CLEARENV&lt;/code&gt; symbol, which indicates to the C program that the clearenv () routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CLEARENV&lt;/code&gt; , который указывает программе на C, что доступна процедура clearenv ().</target>
        </trans-unit>
        <trans-unit id="74f77f33bb77370820b1492e4169ae2248f4c8c7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_COPYSIGN&lt;/code&gt; symbol, which indicates to the C program that the copysign() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_COPYSIGN&lt;/code&gt; , который указывает программе на C, что доступна функция copysign ().</target>
        </trans-unit>
        <trans-unit id="98b66499ba2e3361546a98261177f15a6de1a0f6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_COPYSIGNL&lt;/code&gt; symbol, which indicates to the C program that the copysignl() routine is available. If aintl is also present we can emulate modfl.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_COPYSIGNL&lt;/code&gt; , который указывает программе на C, что доступна процедура copysignl (). Если также присутствует aintl, мы можем эмулировать modfl.</target>
        </trans-unit>
        <trans-unit id="df0f6e4346afa66f63cca26a76d791fade6366c0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CRYPT_R&lt;/code&gt; symbol, which indicates to the C program that the crypt_r() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CRYPT_R&lt;/code&gt; , который указывает программе на C, что доступна процедура crypt_r ().</target>
        </trans-unit>
        <trans-unit id="953edbb919ba277a0602d4f2fae83655b7094d65" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CTERMID_R&lt;/code&gt; symbol, which indicates to the C program that the ctermid_r() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CTERMID_R&lt;/code&gt; , который указывает программе на C, что доступна процедура ctermid_r ().</target>
        </trans-unit>
        <trans-unit id="88f0e31c279f299ee13d676f3280ed80bdc1ec78" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CTIME_R&lt;/code&gt; symbol, which indicates to the C program that the ctime_r() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CTIME_R&lt;/code&gt; , который указывает программе на C, что доступна процедура ctime_r ().</target>
        </trans-unit>
        <trans-unit id="f94152d7278e725fe89c658a702df792c385b802" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CUSERID&lt;/code&gt; symbol, which indicates to the C program that the cuserid() routine is available to get character login names.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_CUSERID&lt;/code&gt; , который указывает программе на C, что доступна процедура cuserid () для получения символьных имен входа.</target>
        </trans-unit>
        <trans-unit id="ce2c192cea1c48bf6a95dcfd9e173ca30310cf0e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DBMINIT_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the dbminit() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DBMINIT_PROTO&lt;/code&gt; , который указывает программе на C, что система предоставляет прототип для функции dbminit (). В противном случае программа должна предоставить его.</target>
        </trans-unit>
        <trans-unit id="9f277ae3e34118b1fe4f7a94827507d1e32928ea" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIFFTIME&lt;/code&gt; symbol, which indicates to the C program that the difftime() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DIFFTIME&lt;/code&gt; , который указывает программе на C, что доступна процедура difftime ().</target>
        </trans-unit>
        <trans-unit id="a13740603c74d16121c0903202111151cb13d77c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIRFD&lt;/code&gt; constant, which indicates to the C program that dirfd() is available to return the file descriptor of a directory stream.</source>
          <target state="translated">Эта переменная условно определяет константу &lt;code&gt;HAS_DIRFD&lt;/code&gt; , которая указывает программе C, что dirfd () доступна для возврата файлового дескриптора потока каталогов.</target>
        </trans-unit>
        <trans-unit id="87bbbc4e9449012cc05f3e6c9ced36d1a9bc5f01" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIR_DD_FD&lt;/code&gt; symbol, which indicates that the &lt;code&gt;DIR&lt;/code&gt; directory stream type contains a member variable called dd_fd.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DIR_DD_FD&lt;/code&gt; , который указывает, что тип потока каталога &lt;code&gt;DIR&lt;/code&gt; содержит переменную-член с именем dd_fd.</target>
        </trans-unit>
        <trans-unit id="ca28447a8986907b62f8a42e124cc4cf1327b826" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLADDR&lt;/code&gt; symbol, which indicates to the C program that the dladdr() routine is available to get a stack trace.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DLADDR&lt;/code&gt; , который указывает программе C, что доступна процедура dladdr () для получения трассировки стека.</target>
        </trans-unit>
        <trans-unit id="44450e1cdbf629ec9119c59c9f90d2b874b7e95d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLERROR&lt;/code&gt; symbol, which indicates to the C program that the dlerror() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DLERROR&lt;/code&gt; , который указывает программе на C, что доступна процедура dlerror ().</target>
        </trans-unit>
        <trans-unit id="ed1d2043eb098d6534774a50acff39bfc0910625" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLOPEN&lt;/code&gt; symbol, which indicates to the C program that the dlopen() routine is available.</source>
          <target state="translated">Эта переменная условно определяет символ &lt;code&gt;HAS_DLOPEN&lt;/code&gt; , который указывает программе на C, что доступна процедура dlopen ().</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
