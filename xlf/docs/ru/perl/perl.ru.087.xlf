<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="3544e08776822456b1b3b4ea8b99c4679f526905" translate="yes" xml:space="preserve">
          <source>to_uni_title</source>
          <target state="translated">to_uni_title</target>
        </trans-unit>
        <trans-unit id="7f84e4e48c13ca88413e28fd749ba6159dcbc4da" translate="yes" xml:space="preserve">
          <source>to_uni_upper</source>
          <target state="translated">to_uni_upper</target>
        </trans-unit>
        <trans-unit id="05f20a71783db1a6f0c4e75ebb1914154e901af2" translate="yes" xml:space="preserve">
          <source>todo</source>
          <target state="translated">todo</target>
        </trans-unit>
        <trans-unit id="ea41a8c9a20f33e3b6029fd7a0cfc530555e108b" translate="yes" xml:space="preserve">
          <source>todo $reason =&amp;gt; sub { ... }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea220b11a2a4067478311e4d993aecab5a00fcc" translate="yes" xml:space="preserve">
          <source>todo_failed</source>
          <target state="translated">todo_failed</target>
        </trans-unit>
        <trans-unit id="cfd3d4badd0ccd550d36d3fe188fa041e7d46b76" translate="yes" xml:space="preserve">
          <source>todo_list</source>
          <target state="translated">todo_list</target>
        </trans-unit>
        <trans-unit id="8f1a2eafc3eca1cd784354c4089d7b2830b888c3" translate="yes" xml:space="preserve">
          <source>todo_passed</source>
          <target state="translated">todo_passed</target>
        </trans-unit>
        <trans-unit id="9461b677437869b4caa6ae020e205909485b9fed" translate="yes" xml:space="preserve">
          <source>toke.c</source>
          <target state="translated">toke.c</target>
        </trans-unit>
        <trans-unit id="ee977806d7286510da8b9a7492ba58e2484c0ecc" translate="yes" xml:space="preserve">
          <source>token</source>
          <target state="translated">token</target>
        </trans-unit>
        <trans-unit id="3b1ebaa6a9e7c2d892d7a35c0681619b6af90370" translate="yes" xml:space="preserve">
          <source>token are split out into separate files. Some routines may be placed prior to this marker to force their immediate loading and parsing.</source>
          <target state="translated">токен разбивается на отдельные файлы.Некоторые подпрограммы могут быть размещены перед этим маркером,чтобы заставить их немедленно загрузить и разобрать.</target>
        </trans-unit>
        <trans-unit id="dfef88c92ae8353715029ce8b7ef3e86ca49d70b" translate="yes" xml:space="preserve">
          <source>token_types</source>
          <target state="translated">token_types</target>
        </trans-unit>
        <trans-unit id="eb4cee8f934e5d595a2c202695340507029ec772" translate="yes" xml:space="preserve">
          <source>tokener</source>
          <target state="translated">tokener</target>
        </trans-unit>
        <trans-unit id="70a62ec5d8473e2687167f889dfe377270114e99" translate="yes" xml:space="preserve">
          <source>tokenize</source>
          <target state="translated">tokenize</target>
        </trans-unit>
        <trans-unit id="c25571fea31e3c99195e8d5c414e30c1f7cb3ff2" translate="yes" xml:space="preserve">
          <source>tokenizing</source>
          <target state="translated">tokenizing</target>
        </trans-unit>
        <trans-unit id="681ae2540f4704c6471585ae03c5ad34d7587a65" translate="yes" xml:space="preserve">
          <source>tokuhirom &amp;lt;tokuhirom@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1c3db3f21e326855ec671f236713cdbe520c2c" translate="yes" xml:space="preserve">
          <source>tolerate arbitrarily large amounts of text in the &quot;=item</source>
          <target state="translated">допускать произвольно большое количество текста в &quot;=элементе</target>
        </trans-unit>
        <trans-unit id="d9ae998ab9e8ebfc629710b723541fc505ed244c" translate="yes" xml:space="preserve">
          <source>tom (at) compton.nu</source>
          <target state="translated">tom (at)compton.nu</target>
        </trans-unit>
        <trans-unit id="903d7da65d624842b5db58b63ef8eaae82b048be" translate="yes" xml:space="preserve">
          <source>tom@compton.nu</source>
          <target state="translated">tom@compton.nu</target>
        </trans-unit>
        <trans-unit id="8ab5f520c5bc598f6a23200477705ec0f56ef10f" translate="yes" xml:space="preserve">
          <source>tommylutz@gmail.com</source>
          <target state="translated">tommylutz@gmail.com</target>
        </trans-unit>
        <trans-unit id="164a5c24f5df5918f285228443ab87209785293f" translate="yes" xml:space="preserve">
          <source>too</source>
          <target state="translated">too</target>
        </trans-unit>
        <trans-unit id="b47f0da3aa6e0a239f5e94e0877b31f25e13bf8a" translate="yes" xml:space="preserve">
          <source>too.</source>
          <target state="translated">too.</target>
        </trans-unit>
        <trans-unit id="426267451d2aab91845a1f7b22772772450c1009" translate="yes" xml:space="preserve">
          <source>too. Add this line BEFORE any section definition:</source>
          <target state="translated">тоже.Добавьте эту строку ДО определения любого раздела:</target>
        </trans-unit>
        <trans-unit id="90edf77c811db872526b3b484bef9279ab6440fb" translate="yes" xml:space="preserve">
          <source>tool can then display the collected data in various ways. Usually</source>
          <target state="translated">инструмент может затем отображать собранные данные различными способами.Обычно</target>
        </trans-unit>
        <trans-unit id="ccb51450d25446e81f4942d86de10a8c406492b5" translate="yes" xml:space="preserve">
          <source>tool included with Perl 5. Bug reports will be included in the Perl 5 ticket system at &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org&lt;/a&gt;.</source>
          <target state="translated">инструмент, включенный в Perl 5. Отчеты об ошибках будут включены в систему заявок Perl 5 на &lt;a href=&quot;http://rt.perl.org&quot;&gt;http://rt.perl.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07819fa05095cb2be15d10b89b2a7033c3b16f21" translate="yes" xml:space="preserve">
          <source>tool included with Perl 5. Bug reports will be included in the Perl 5 ticket system at &lt;a href=&quot;https://rt.perl.org&quot;&gt;https://rt.perl.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f39224c5c445b7f4c4eea9f381baa177eb7cb91" translate="yes" xml:space="preserve">
          <source>tool installed.</source>
          <target state="translated">установленный инструмент.</target>
        </trans-unit>
        <trans-unit id="2adced328d5d2ff8ee0e676e609a7ca3cf7538c7" translate="yes" xml:space="preserve">
          <source>tool is included in the &lt;code&gt;Storable&lt;/code&gt; distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88aa984e8c2d55237b91314cbcf92140805cfef9" translate="yes" xml:space="preserve">
          <source>tool that comes with Perl tries to convert C include files to Perl code, which can be &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;d. FIONREAD ends up defined as a function in the</source>
          <target state="translated">инструмент, поставляемый с Perl, пытается преобразовать включаемые файлы C в код Perl, для чего может &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; d. FIONREAD в конечном итоге определяется как функция в</target>
        </trans-unit>
        <trans-unit id="ebe27f24839435afef60aa8043822d82f37b617a" translate="yes" xml:space="preserve">
          <source>tool that comes with Perl tries to convert C include files to Perl code, which can be &lt;code&gt;require&lt;/code&gt;d. FIONREAD ends up defined as a function in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92adaa38df139e8b7202b087183871bcb1dd01c" translate="yes" xml:space="preserve">
          <source>tool. If you fix or enhance a performance issue, you may want to add a representative code sample to the file, then run</source>
          <target state="translated">инструмент.Если вы исправите или улучшите производительность,вы можете добавить представительский образец кода в файл,а затем запустить</target>
        </trans-unit>
        <trans-unit id="8cd3fb1667a905290c5b0e870e6cf4f615dde4f7" translate="yes" xml:space="preserve">
          <source>tool_autosplit</source>
          <target state="translated">tool_autosplit</target>
        </trans-unit>
        <trans-unit id="353f522e35463b7e821000818d97c43f25c384e1" translate="yes" xml:space="preserve">
          <source>tool_xsubpp (o)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64249617bd5bdb892a4cfb6cbb526359c99e77fb" translate="yes" xml:space="preserve">
          <source>toolbox approach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8623287e2d342133af98c4af1a3151d917692c2" translate="yes" xml:space="preserve">
          <source>tools_other</source>
          <target state="translated">tools_other</target>
        </trans-unit>
        <trans-unit id="52412a93868b5b1cf50b3d270c04ef47ba9f3ddf" translate="yes" xml:space="preserve">
          <source>tools_other (override)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df097104885ecf49eeda77591edc71fc32a475e" translate="yes" xml:space="preserve">
          <source>top ( MSGNUM [, NUMLINES ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156806de8ef990a34b3ac6280c26b4ecca6c2b47" translate="yes" xml:space="preserve">
          <source>top_anchor</source>
          <target state="translated">top_anchor</target>
        </trans-unit>
        <trans-unit id="a4a517be2abf7b5cbbf48b28b90b2deafacb23fd" translate="yes" xml:space="preserve">
          <source>top_targets (o)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b415e16fbe4ca40f22707a97322b49cb9bc5e487" translate="yes" xml:space="preserve">
          <source>topic</source>
          <target state="translated">topic</target>
        </trans-unit>
        <trans-unit id="4f83d880aeb0e2a0498a5bc0e8ac975990e97449" translate="yes" xml:space="preserve">
          <source>tored by Gurusamy Sarathy (&amp;lt;gsar@activestate.com&amp;gt;), Tom Christiansen (&amp;lt;tchrist@perl.com&amp;gt;), Nathan Torkington (&amp;lt;gnat@frii.com&amp;gt;), Charles F. Randall (&amp;lt;cfr@pobox.com&amp;gt;), Mike Guy (&amp;lt;mjtg@cam.ac.uk&amp;gt;), Dominic Dunlop (&amp;lt;domo@computer.org&amp;gt;), Hugo van der Sanden (&amp;lt;hv@crypt.org&amp;gt;), Jarkko Hietaniemi (&amp;lt;jhi@iki.fi&amp;gt;), Chris Nandor (&amp;lt;pudge@pobox.com&amp;gt;), Jon Orwant (&amp;lt;orwant@media.mit.edu&amp;gt;, Richard Foley (&amp;lt;richard.foley@rfi.net&amp;gt;), Jesse Vincent (&amp;lt;jesse@bestpractical.com&amp;gt;), and Craig A. Berry (&amp;lt;craigberry@mac.com&amp;gt;).</source>
          <target state="translated">Авторы: Гурусами Сарати (&amp;lt;gsar@activestate.com&amp;gt;), Том Кристиансен (&amp;lt;tchrist@perl.com&amp;gt;), Натан Торкингтон (&amp;lt;gnat@frii.com&amp;gt;), Чарльз Ф. Рэндалл (&amp;lt;cfr@pobox.com&amp;gt; ), Майк Гай (&amp;lt;mjtg@cam.ac.uk&amp;gt;), Доминик Данлоп (&amp;lt;domo@computer.org&amp;gt;), Хьюго ван дер Санден (&amp;lt;hv@crypt.org&amp;gt;), Яркко Хиетаниеми (&amp;lt;jhi @ iki. fi&amp;gt;), Крис Нандор (&amp;lt;pudge@pobox.com&amp;gt;), Джон Орвант (&amp;lt;orwant@media.mit.edu&amp;gt;, Ричард Фоли (&amp;lt;richard.foley@rfi.net&amp;gt;), Джесси Винсент (&amp;lt;jesse @ bestpractical .com&amp;gt;) и Крейг А. Берри (&amp;lt;craigberry@mac.com&amp;gt;).</target>
        </trans-unit>
        <trans-unit id="5a537e209151ae5fcccd6326b34b5622bcfb0578" translate="yes" xml:space="preserve">
          <source>total</source>
          <target state="translated">total</target>
        </trans-unit>
        <trans-unit id="f946bb4c412cec0161b446353e7e1a4ee67a20e7" translate="yes" xml:space="preserve">
          <source>total number of bytes</source>
          <target state="translated">общее количество байт</target>
        </trans-unit>
        <trans-unit id="4ddb17cd3ef0d793512142788d255e17de1a217e" translate="yes" xml:space="preserve">
          <source>total_failures</source>
          <target state="translated">total_failures</target>
        </trans-unit>
        <trans-unit id="c1c8273aad4f9a7cacdfa5cac7b18b00d7494695" translate="yes" xml:space="preserve">
          <source>total_passes</source>
          <target state="translated">total_passes</target>
        </trans-unit>
        <trans-unit id="f4d1f0193879cba82d65c5752c4ba5cbb43a7188" translate="yes" xml:space="preserve">
          <source>touch</source>
          <target state="translated">touch</target>
        </trans-unit>
        <trans-unit id="e8937c0528189796d518e5700c56664fe7f52839" translate="yes" xml:space="preserve">
          <source>tpt</source>
          <target state="translated">tpt</target>
        </trans-unit>
        <trans-unit id="d9e83874d260f2f10d48d98c0b773b836096d426" translate="yes" xml:space="preserve">
          <source>tr</source>
          <target state="translated">tr</target>
        </trans-unit>
        <trans-unit id="c39522f52c3ec29023c219c19d4067a9b3eee877" translate="yes" xml:space="preserve">
          <source>tr///</source>
          <target state="translated">tr///</target>
        </trans-unit>
        <trans-unit id="2d7afbb0e384d30410fdf173188d5d4f21201da9" translate="yes" xml:space="preserve">
          <source>trace =&amp;gt; {...}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536783780cbdb29a264e212e15753a5bedd082e3" translate="yes" xml:space="preserve">
          <source>trailingData</source>
          <target state="translated">trailingData</target>
        </trans-unit>
        <trans-unit id="2d3d774f797509aed854d6cdea0a59d83a6162c4" translate="yes" xml:space="preserve">
          <source>translate_substr_offsets</source>
          <target state="translated">translate_substr_offsets</target>
        </trans-unit>
        <trans-unit id="15c4593ae86e3bf2017dc51f07fb9e08cc13291e" translate="yes" xml:space="preserve">
          <source>translates a list of numbers to the corresponding characters.</source>
          <target state="translated">переводит список номеров в соответствующие символы.</target>
        </trans-unit>
        <trans-unit id="34d7fc1774ad1e06f48d4d6adb73b20c2ab97c2b" translate="yes" xml:space="preserve">
          <source>translates a list of numbers to their squared values.</source>
          <target state="translated">переводит список чисел в их квадратные значения.</target>
        </trans-unit>
        <trans-unit id="b957f6243dc857b0d32b836fc652ac09fad6dc17" translate="yes" xml:space="preserve">
          <source>translates to any other string, that string is used as the name of a logical name table, which is consulted using</source>
          <target state="translated">транслируется в любую другую строку,эта строка используется в качестве имени таблицы логических названий,которая просматривается с использованием</target>
        </trans-unit>
        <trans-unit id="b83065734825ace6b5d6e623f5d8b917a787ab2d" translate="yes" xml:space="preserve">
          <source>translating the small parts into regexps,</source>
          <target state="translated">переводя маленькие детали в регэксперты,</target>
        </trans-unit>
        <trans-unit id="dd8a35d37cfae9df7f428bbc3d9a97c5906fd897" translate="yes" xml:space="preserve">
          <source>transliterate</source>
          <target state="translated">transliterate</target>
        </trans-unit>
        <trans-unit id="7982afa4ce12a15076ad30ff5a7c216bd7dd8013" translate="yes" xml:space="preserve">
          <source>transliterates into</source>
          <target state="translated">переводится в</target>
        </trans-unit>
        <trans-unit id="38bedfbdef70fc53b2e50e67a65d5f48bdccc217" translate="yes" xml:space="preserve">
          <source>trap (OP, ...), untrap (OP, ...)</source>
          <target state="translated">ловушка (ОП,...),ловушка (ОП,...).</target>
        </trans-unit>
        <trans-unit id="eb36d2f3d7dae65e6087de6be679219d1af5b693" translate="yes" xml:space="preserve">
          <source>traverse_op_tree</source>
          <target state="translated">traverse_op_tree</target>
        </trans-unit>
        <trans-unit id="ce03721ca3b28ce2f21226c122a3dc4ab883c73d" translate="yes" xml:space="preserve">
          <source>treated</source>
          <target state="translated">treated</target>
        </trans-unit>
        <trans-unit id="42dc828341bea99e4235ff61dd8d9128d8bccb29" translate="yes" xml:space="preserve">
          <source>trial.gz</source>
          <target state="translated">trial.gz</target>
        </trans-unit>
        <trans-unit id="d67deefa1e5c2dfdd8fc91aa3b6e2acaad1cff89" translate="yes" xml:space="preserve">
          <source>tries to load optional library but also dies if library is not available</source>
          <target state="translated">пытается загрузить дополнительную библиотеку,но умирает,если библиотека недоступна.</target>
        </trans-unit>
        <trans-unit id="63d62d4aee9a5d4fe8539e53a9e3d05ffc210c9b" translate="yes" xml:space="preserve">
          <source>trigger</source>
          <target state="translated">trigger</target>
        </trans-unit>
        <trans-unit id="36f951df07c5aef7652954b112908952a2b30f49" translate="yes" xml:space="preserve">
          <source>trigger this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d5f2f5bfbf86fb0fb77296bec3b548a2f42af5" translate="yes" xml:space="preserve">
          <source>trim_whitespace()</source>
          <target state="translated">trim_whitespace()</target>
        </trans-unit>
        <trans-unit id="fe8141b320d3a24d3a892e79b8db92b4b4527f30" translate="yes" xml:space="preserve">
          <source>trimsym($name[,$maxlen[,$silent]])</source>
          <target state="translated">trimsym($name[,$maxlen[,$silent]])</target>
        </trans-unit>
        <trans-unit id="44f4ec0df5683ac806b7475ce06f2e050567bf2b" translate="yes" xml:space="preserve">
          <source>trinary</source>
          <target state="translated">trinary</target>
        </trans-unit>
        <trans-unit id="d32c5b68132ef2211100518b2ca2f7847b516c84" translate="yes" xml:space="preserve">
          <source>trnl.U</source>
          <target state="translated">trnl.U</target>
        </trans-unit>
        <trans-unit id="4d242be641b7deeef1d9477a81834d2589a3ba9b" translate="yes" xml:space="preserve">
          <source>troff</source>
          <target state="translated">troff</target>
        </trans-unit>
        <trans-unit id="cc4728d0763649871c56fd8cb6de629f5fbf5b84" translate="yes" xml:space="preserve">
          <source>troff(1)</source>
          <target state="translated">troff(1)</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="438789e48d4c0e2a17e93fb22d092028b03bb360" translate="yes" xml:space="preserve">
          <source>true if the Perl library was compiled in AOUT format.</source>
          <target state="translated">true,если библиотека Perl была скомпилирована в формате AOUT.</target>
        </trans-unit>
        <trans-unit id="59e4766fb49e429a8314ef2500009926b97e90d6" translate="yes" xml:space="preserve">
          <source>true if the current executable is an AOUT EMX executable, so Perl can fork. Do not use this, use the portable check for $Config::Config{dfork}.</source>
          <target state="translated">true,если текущий исполняемый файл является исполняемым файлом AOUT EMX,поэтому Perl может вилкой.Не используйте это,используйте переносной чек на $Config::Config{dfork}.</target>
        </trans-unit>
        <trans-unit id="1bcf5542764919cf26fda2e66c73aa29f02ef9a2" translate="yes" xml:space="preserve">
          <source>true if this pref has a 'match' attribute and at least one valid match attribute</source>
          <target state="translated">true,если этот префикс имеет атрибут 'match' и хотя бы один действительный атрибут match</target>
        </trans-unit>
        <trans-unit id="3fce60a5697d8001beb7164eaf5a9b21b4de4c72" translate="yes" xml:space="preserve">
          <source>true if this pref has a 'match' attribute at all</source>
          <target state="translated">верно,если этот префикс вообще имеет атрибут 'match'.</target>
        </trans-unit>
        <trans-unit id="1e9cc6decc0c9571c723bb4ad00488c48abdc585" translate="yes" xml:space="preserve">
          <source>true if this pref matches the passed-in hashref, which must have a value for each of the &lt;code&gt;match_attributes&lt;/code&gt; (above)</source>
          <target state="translated">истина, если этот pref совпадает с переданным hashref, который должен иметь значение для каждого из &lt;code&gt;match_attributes&lt;/code&gt; (см. выше)</target>
        </trans-unit>
        <trans-unit id="cb4b42b99367dbaef3b308097c9d0a1cff17603b" translate="yes" xml:space="preserve">
          <source>true in &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub{}&lt;/a&gt;&lt;/code&gt;, or contrary to popular belief &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do{}&lt;/a&gt;&lt;/code&gt; blocks, which do</source>
          <target state="translated">true в &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub{}&lt;/a&gt;&lt;/code&gt; или вопреки распространенному мнению &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do{}&lt;/a&gt;&lt;/code&gt; блоков, которые делают</target>
        </trans-unit>
        <trans-unit id="1d2a4d210e124adf250fe001527a6e60a0d48719" translate="yes" xml:space="preserve">
          <source>true in &lt;code&gt;eval{}&lt;/code&gt;, &lt;code&gt;sub{}&lt;/code&gt;, or contrary to popular belief &lt;code&gt;do{}&lt;/code&gt; blocks, which do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4999f329cdfd3e993f8f4efa9d9ce2d2c1f0a5f" translate="yes" xml:space="preserve">
          <source>true, false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f137b2b3b4e3fc6aaa0e99ddd7a0b171b7598b68" translate="yes" xml:space="preserve">
          <source>true-or-false</source>
          <target state="translated">true-or-false</target>
        </trans-unit>
        <trans-unit id="00ec0d6c2044e8e1b719e93ece0d4740d510b9fa" translate="yes" xml:space="preserve">
          <source>true_or_false</source>
          <target state="translated">true_or_false</target>
        </trans-unit>
        <trans-unit id="66fe2fdee953072a309daa163ca5ed615049d0c2" translate="yes" xml:space="preserve">
          <source>trueop</source>
          <target state="translated">trueop</target>
        </trans-unit>
        <trans-unit id="90099b2e34aa9d96304e9cb4c2b9ae07073445c0" translate="yes" xml:space="preserve">
          <source>truly</source>
          <target state="translated">truly</target>
        </trans-unit>
        <trans-unit id="f283ea9bea0e80213ac091021420ffc9b3415914" translate="yes" xml:space="preserve">
          <source>truncate</source>
          <target state="translated">truncate</target>
        </trans-unit>
        <trans-unit id="a1261bf96d8d4c6b4b727d215938b97e14a121ae" translate="yes" xml:space="preserve">
          <source>truncate EXPR,LENGTH</source>
          <target state="translated">Укороченный ЭКСПР,ЛЕНГТ.</target>
        </trans-unit>
        <trans-unit id="c0a4a0ea2c037915554ed29699877c89805a57bd" translate="yes" xml:space="preserve">
          <source>truncate FILEHANDLE,LENGTH</source>
          <target state="translated">усечённый ФИЛЬЕФАНДЛЬ,ЛЕНГТ.</target>
        </trans-unit>
        <trans-unit id="fab8ceacac2e7216633cb9b84dab94ca5cf763d6" translate="yes" xml:space="preserve">
          <source>truncate not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5fbc0b463cf9789d996b5f21e17e0748f34553" translate="yes" xml:space="preserve">
          <source>truncating</source>
          <target state="translated">truncating</target>
        </trans-unit>
        <trans-unit id="53028b90056316570dad36dc627a6b17c0330b6d" translate="yes" xml:space="preserve">
          <source>truncation invariably removes all digits following the rounding place, replacing them with zeros. Thus, 987.65 rounded to tens (P=1) becomes 980, and rounded to the fourth sigdig becomes 987.6 (A=4). 123.456 rounded to the second place after the decimal point (P=-2) becomes 123.46.</source>
          <target state="translated">Усечение всегда удаляет все цифры,следующие за местом округления,заменяя их нулями.Таким образом,987,65 округленное до десятков (P=1)становится 980,а округленное до четвертого сигдига становится 987,6 (A=4).123.456 округленное до второго места после запятой (P=2)становится 123.46.</target>
        </trans-unit>
        <trans-unit id="c974284acc2da6c604a9b9a760be398292dab020" translate="yes" xml:space="preserve">
          <source>trust_test_report_history</source>
          <target state="translated">trust_test_report_history</target>
        </trans-unit>
        <trans-unit id="45fa151bf9a11c0e25734df135de9edd4ff738df" translate="yes" xml:space="preserve">
          <source>truth</source>
          <target state="translated">truth</target>
        </trans-unit>
        <trans-unit id="823fca4f1093d64814a9d2afbcda71b935d03e40" translate="yes" xml:space="preserve">
          <source>try something like the following:</source>
          <target state="translated">попробуй что-нибудь вроде следующего:</target>
        </trans-unit>
        <trans-unit id="ce6d1c45f4e5ab6843ee500a73af34957d4c92aa" translate="yes" xml:space="preserve">
          <source>try to equate new (and never-used, and unusable) ISO639-2 three-letter tags to old (and still in use) ISO639-1 two-letter equivalents -- like &quot;ara&quot; -&amp;gt; &quot;ar&quot; -- because &quot;ara&quot; has</source>
          <target state="translated">попробуйте приравнять новые (и никогда не использовавшиеся и непригодные к использованию) трехбуквенные теги ISO639-2 со старыми (и все еще используемыми) двухбуквенными эквивалентами ISO639-1 - например, &quot;ara&quot; -&amp;gt; &quot;ar&quot; - потому что &quot; ара &quot;имеет</target>
        </trans-unit>
        <trans-unit id="57e127eec090cbe9dea58f22f65ee320b138415f" translate="yes" xml:space="preserve">
          <source>try_amagic_bin</source>
          <target state="translated">try_amagic_bin</target>
        </trans-unit>
        <trans-unit id="38278cac64d395a35f6260473b7ab836ae167fce" translate="yes" xml:space="preserve">
          <source>try_amagic_un</source>
          <target state="translated">try_amagic_un</target>
        </trans-unit>
        <trans-unit id="cb050805b03c907314122eca2548681495db1636" translate="yes" xml:space="preserve">
          <source>tst.fil</source>
          <target state="translated">tst.fil</target>
        </trans-unit>
        <trans-unit id="9f160f66c4d781a33c60820b496697aaf2bd47ff" translate="yes" xml:space="preserve">
          <source>tty(1)</source>
          <target state="translated">tty(1)</target>
        </trans-unit>
        <trans-unit id="6b7c4b72eb87c9f9986fb12efd7d83af95caa365" translate="yes" xml:space="preserve">
          <source>turkic</source>
          <target state="translated">turkic</target>
        </trans-unit>
        <trans-unit id="bb900dfa419ab730b52dadfa0dfec48b9c5a6aba" translate="yes" xml:space="preserve">
          <source>turns debugging on for all packages.</source>
          <target state="translated">включает отладку для всех пакетов.</target>
        </trans-unit>
        <trans-unit id="8a1f73e9662f187f57c576ccd9399ebd14ab3421" translate="yes" xml:space="preserve">
          <source>turns into</source>
          <target state="translated">превращается в</target>
        </trans-unit>
        <trans-unit id="85691f9a0ab6bb1c21ccb666a6135b2368136c66" translate="yes" xml:space="preserve">
          <source>turns on &quot;taint&quot; so you can test them. Ordinarily these checks are done only when running setuid or setgid. It's a good idea to turn them on explicitly for programs that run on behalf of someone else whom you might not necessarily trust, such as CGI programs or any internet servers you might write in Perl. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; for details. For security reasons, this option must be seen by Perl quite early; usually this means it must appear early on the command line or in the &lt;code&gt;#!&lt;/code&gt; line for systems which support that construct.</source>
          <target state="translated">включает &quot;порчу&quot;, чтобы вы могли их протестировать. Обычно эти проверки выполняются только при запуске setuid или setgid. Хорошая идея - включить их явно для программ, которые запускаются от имени кого-то еще, кому вы не обязательно доверяете, например, программы CGI или любые интернет-серверы, которые вы можете написать на Perl. См. Подробности в &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; . Из соображений безопасности Perl должен увидеть эту опцию достаточно рано; обычно это означает, что он должен появиться в начале командной строки или в &lt;code&gt;#!&lt;/code&gt; линия для систем, которые поддерживают эту конструкцию.</target>
        </trans-unit>
        <trans-unit id="9a81459b2cd105c6c761074bb2b4a9e022fbe42b" translate="yes" xml:space="preserve">
          <source>turns on autosplit mode when used with a &lt;a href=&quot;#-n&quot;&gt;&quot;-n&quot;&lt;/a&gt; or &lt;a href=&quot;#-p&quot;&gt;&quot;-p&quot;&lt;/a&gt;. An implicit split command to the @F array is done as the first thing inside the implicit while loop produced by the &lt;a href=&quot;#-n&quot;&gt;&quot;-n&quot;&lt;/a&gt; or &lt;a href=&quot;#-p&quot;&gt;&quot;-p&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef46c243925d2af48b614f7b9635e2daf263b6a6" translate="yes" xml:space="preserve">
          <source>turns on autosplit mode when used with a &lt;b&gt;-n&lt;/b&gt; or &lt;b&gt;-p&lt;/b&gt;. An implicit split command to the @F array is done as the first thing inside the implicit while loop produced by the &lt;b&gt;-n&lt;/b&gt; or &lt;b&gt;-p&lt;/b&gt;.</source>
          <target state="translated">включает режим автоматического разделения при использовании с &lt;b&gt;-n&lt;/b&gt; или &lt;b&gt;-p&lt;/b&gt; . Неявная команда разделения массива @F выполняется первым делом внутри неявного цикла while, созданного с помощью &lt;b&gt;-n&lt;/b&gt; или &lt;b&gt;-p&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d758a5e43d45f7b0023331c6222762129e429a5f" translate="yes" xml:space="preserve">
          <source>tv_interval</source>
          <target state="translated">tv_interval</target>
        </trans-unit>
        <trans-unit id="eee45a4f6e1f6f37d3488c8a9faeb95e80168595" translate="yes" xml:space="preserve">
          <source>tv_interval ( $ref_to_gettimeofday [, $ref_to_later_gettimeofday] )</source>
          <target state="translated">tv_interval($ref_to_gettimeofday [,$ref_to_later_gettimeofday]))</target>
        </trans-unit>
        <trans-unit id="ad782ecdac770fc6eb9a62e44f90873fb97fb26b" translate="yes" xml:space="preserve">
          <source>two</source>
          <target state="translated">two</target>
        </trans-unit>
        <trans-unit id="9c545de6bb84eb94b6126add62f1eef381366296" translate="yes" xml:space="preserve">
          <source>two-dimensional slice</source>
          <target state="translated">двумерный срез</target>
        </trans-unit>
        <trans-unit id="a123eaabf183286fe1b857fb9fc12040b8b4df03" translate="yes" xml:space="preserve">
          <source>two_face.pm</source>
          <target state="translated">two_face.pm</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="b753343b5da37d198843243dcf888d1616a6a3c3" translate="yes" xml:space="preserve">
          <source>type ( [ TYPE ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cde45778b2661710b4012364ab45886b602002" translate="yes" xml:space="preserve">
          <source>type casting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c447fadcff0742d1e431e49dd7e912c62d2f17" translate="yes" xml:space="preserve">
          <source>type is a subtype of String. It describes a range of Versions that may be present or installed to fulfill prerequisites. It is specified in detail in the &lt;a href=&quot;#Version-Ranges&quot;&gt;&quot;Version Ranges&quot;&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7b4d8120e3abb8a993bd8c9369e8e492554273" translate="yes" xml:space="preserve">
          <source>type of $bar is a scalar reference, and we do not overload the scalar dereference. Thus we can get the</source>
          <target state="translated">тип $bar является скалярной ссылкой,и мы не перегружаем скалярную ссылку.Таким образом,мы можем получить</target>
        </trans-unit>
        <trans-unit id="0f846c66a3d5e2d04d7dad5376934b529b97a76f" translate="yes" xml:space="preserve">
          <source>type of &lt;code&gt;File&lt;/code&gt; . All mp3 files are files, but not all files are mp3 files.</source>
          <target state="translated">тип &lt;code&gt;File&lt;/code&gt; . Все файлы mp3 являются файлами, но не все файлы являются файлами mp3.</target>
        </trans-unit>
        <trans-unit id="43e7a1b89addad0cac64c9cc3f6a39dbecf1e9ee" translate="yes" xml:space="preserve">
          <source>type of &lt;code&gt;File&lt;/code&gt;. All mp3 files are files, but not all files are mp3 files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d48747c7234e695806a5ec0475ca088f8de7d2c" translate="yes" xml:space="preserve">
          <source>type of damage only: FP flags changed when loading a DLL.</source>
          <target state="translated">только тип повреждения:FP-флаги меняются при загрузке DLL.</target>
        </trans-unit>
        <trans-unit id="2f746d02fe588180e5eec4bbf6e7e14f76d8a306" translate="yes" xml:space="preserve">
          <source>type()</source>
          <target state="translated">type()</target>
        </trans-unit>
        <trans-unit id="da13ec01e5255e09772a528daf1dc927ea109a6a" translate="yes" xml:space="preserve">
          <source>typed lexical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc2082b65ff3a9aefc09caca29756531dea041a" translate="yes" xml:space="preserve">
          <source>typedef</source>
          <target state="translated">typedef</target>
        </trans-unit>
        <trans-unit id="5052707d2072399e0334e151ef42c6217ebc242f" translate="yes" xml:space="preserve">
          <source>typedef my_cxt_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d101b171f19730b086799c893b4bced74e281" translate="yes" xml:space="preserve">
          <source>typeglob</source>
          <target state="translated">typeglob</target>
        </trans-unit>
        <trans-unit id="3f6b0af8d4178fa799abd02b53080eb8e0e9d792" translate="yes" xml:space="preserve">
          <source>typemap</source>
          <target state="translated">typemap</target>
        </trans-unit>
        <trans-unit id="e7b1fff7007b635892a8f2c7c17f4fabc7aa2f8c" translate="yes" xml:space="preserve">
          <source>types</source>
          <target state="translated">types</target>
        </trans-unit>
        <trans-unit id="deb55915d36bd1424af6d03d22f72514c86c0621" translate="yes" xml:space="preserve">
          <source>types_in</source>
          <target state="translated">types_in</target>
        </trans-unit>
        <trans-unit id="c3c57ccf025216fd17025a5cd72ba43c150e0712" translate="yes" xml:space="preserve">
          <source>typestash</source>
          <target state="translated">typestash</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="0fd46ec5b330088197c4793972e00723f3f26a43" translate="yes" xml:space="preserve">
          <source>ualarm ( $useconds [, $interval_useconds ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4914c57306212f2cc515f07c8cf90f3fabf5399e" translate="yes" xml:space="preserve">
          <source>ualarm(0) will cancel an outstanding ualarm().</source>
          <target state="translated">ualarm(0)отменяет неоплаченную ualarm().</target>
        </trans-unit>
        <trans-unit id="3519ace88affd1d0bcd984e15dfaf7b1c1479e99" translate="yes" xml:space="preserve">
          <source>uc</source>
          <target state="translated">uc</target>
        </trans-unit>
        <trans-unit id="46680910c867722cf1e95037ec06eee09df4a0d5" translate="yes" xml:space="preserve">
          <source>uc EXPR</source>
          <target state="translated">ОК ЭКСПР</target>
        </trans-unit>
        <trans-unit id="62a2132e3a00127b1e64e2e50602c12c4f218bce" translate="yes" xml:space="preserve">
          <source>ucfirst</source>
          <target state="translated">ucfirst</target>
        </trans-unit>
        <trans-unit id="46c5616dab2749d151e0c53b59ef03e6d4e5ee52" translate="yes" xml:space="preserve">
          <source>ucfirst EXPR</source>
          <target state="translated">первый ЭКСПР</target>
        </trans-unit>
        <trans-unit id="92e6f746eff84e65c584e48e78614108b0c4500a" translate="yes" xml:space="preserve">
          <source>ucmlint</source>
          <target state="translated">ucmlint</target>
        </trans-unit>
        <trans-unit id="85b193ef62ce5bd8f0d8f72987c5acefe070a801" translate="yes" xml:space="preserve">
          <source>ucmsort</source>
          <target state="translated">ucmsort</target>
        </trans-unit>
        <trans-unit id="c9915ec6eb1c1121af4deacd2838d47d88af181c" translate="yes" xml:space="preserve">
          <source>ucsort</source>
          <target state="translated">ucsort</target>
        </trans-unit>
        <trans-unit id="59788463710c67e54b3959fdfe20dceea39a24ab" translate="yes" xml:space="preserve">
          <source>udf</source>
          <target state="translated">udf</target>
        </trans-unit>
        <trans-unit id="e2577dd78b54fe28c65ee56ffbc8bb73058e08c0" translate="yes" xml:space="preserve">
          <source>uid</source>
          <target state="translated">uid</target>
        </trans-unit>
        <trans-unit id="25e8bd4f798f4792cc4245013ee9965840283795" translate="yes" xml:space="preserve">
          <source>uid =&amp;gt; $owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3443b0dd255d92dea875958de03ac53cd401e" translate="yes" xml:space="preserve">
          <source>uid and gid, in that order. A value of -1 in either position is interpreted by most systems to leave that value unchanged. Returns the number of files successfully changed.</source>
          <target state="translated">Уид и Гид,в таком порядке.Значение -1 в любой позиции интерпретируется большинством систем,чтобы оставить это значение без изменений.Возвращает количество успешно измененных файлов.</target>
        </trans-unit>
        <trans-unit id="b14ef85c6823dc1f2ef811c9a63a44faab1dfccc" translate="yes" xml:space="preserve">
          <source>uidf.U</source>
          <target state="translated">uidf.U</target>
        </trans-unit>
        <trans-unit id="1c280185515b0623d680b380470d88032ff0459b" translate="yes" xml:space="preserve">
          <source>uidl ( [ MSGNUM ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f266624b4cab00c3fa39590bc3e4d402c6054f9" translate="yes" xml:space="preserve">
          <source>uidsign.U</source>
          <target state="translated">uidsign.U</target>
        </trans-unit>
        <trans-unit id="49d287411193cd0643e68cecc7793271c3750fe3" translate="yes" xml:space="preserve">
          <source>uidsize.U</source>
          <target state="translated">uidsize.U</target>
        </trans-unit>
        <trans-unit id="ef4e5b306b52e07f68c82e7e4824b1b0139a919a" translate="yes" xml:space="preserve">
          <source>uidtype.U</source>
          <target state="translated">uidtype.U</target>
        </trans-unit>
        <trans-unit id="1e7a9669ea1ec15d267b3f8a833c3c6b92db5b36" translate="yes" xml:space="preserve">
          <source>uiv_2buf</source>
          <target state="translated">uiv_2buf</target>
        </trans-unit>
        <trans-unit id="7e3b66f9c4f175dd93b125d08b9fe1b4cd25111e" translate="yes" xml:space="preserve">
          <source>ulk</source>
          <target state="translated">ulk</target>
        </trans-unit>
        <trans-unit id="4b824f445e8d64ec6f262547c18a3ab02a6fd22c" translate="yes" xml:space="preserve">
          <source>umask</source>
          <target state="translated">umask</target>
        </trans-unit>
        <trans-unit id="36e21e5c3a8f3b270b5c9c2576b01408eed47929" translate="yes" xml:space="preserve">
          <source>umask EXPR</source>
          <target state="translated">маска EXPR</target>
        </trans-unit>
        <trans-unit id="b1471162adccbbb07cc4046eac056eb60fb7d981" translate="yes" xml:space="preserve">
          <source>umask not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6198103dad02d1c9dcb61d16d9ffbac78237d4" translate="yes" xml:space="preserve">
          <source>umask() works, but the correct permissions are only set when the file is finally close()d</source>
          <target state="translated">umask()работает,но правильные разрешения устанавливаются только тогда,когда файл,наконец,закрывается функцией close()d</target>
        </trans-unit>
        <trans-unit id="768906d218848d10146e9421d32c8c0734f53ea5" translate="yes" xml:space="preserve">
          <source>unable to map [group] to a gid, group ownership not changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd5434a9f5a002f18dac42d43c70f5152caf438" translate="yes" xml:space="preserve">
          <source>unable to map [owner] to a uid, ownership not changed&quot;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de840c4a5d7a3a264136f73eb4f2de7198cc159" translate="yes" xml:space="preserve">
          <source>unable to run</source>
          <target state="translated">неспособный бежать</target>
        </trans-unit>
        <trans-unit id="b5bf93e700d8bd890e9a145f2c66392881d1d701" translate="yes" xml:space="preserve">
          <source>uname</source>
          <target state="translated">uname</target>
        </trans-unit>
        <trans-unit id="446503d23ca142503a5fad0280d5b83e0d676140" translate="yes" xml:space="preserve">
          <source>unary &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11a4d6675eceaa50fcbd393de78705d6e6d2add" translate="yes" xml:space="preserve">
          <source>unary *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223780cbeb2aa88fe6fa0300efa71bee0616f297" translate="yes" xml:space="preserve">
          <source>unary operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9d9a1ee71ab26f80b55634148ddbec55d054c0" translate="yes" xml:space="preserve">
          <source>uncolor() performs the opposite translation as color(), turning escape sequences into a list of strings corresponding to the attributes being set by those sequences.</source>
          <target state="translated">uncolor()выполняет обратное преобразование как color(),превращая экранирующие последовательности в список строк,соответствующих атрибутам,устанавливаемым этими последовательностями.</target>
        </trans-unit>
        <trans-unit id="e951895d12a6d386d4d17c7f6bdd0e569b078621" translate="yes" xml:space="preserve">
          <source>uncolor() performs the opposite translation as color(), turning escape sequences into a list of strings corresponding to the attributes being set by those sequences. uncolor() will never return &lt;code&gt;ansi16&lt;/code&gt; through &lt;code&gt;ansi255&lt;/code&gt;, instead preferring the &lt;code&gt;grey&lt;/code&gt; and &lt;code&gt;rgb&lt;/code&gt; names (and likewise for &lt;code&gt;on_ansi16&lt;/code&gt; through &lt;code&gt;on_ansi255&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db58e771ba16097a9e70dd6d29f120c52db3b67" translate="yes" xml:space="preserve">
          <source>uncolor(ESCAPE)</source>
          <target state="translated">uncolor(ESCAPE)</target>
        </trans-unit>
        <trans-unit id="4445a4f01a1ca8d002d7d995f0253b4f1abd9dc6" translate="yes" xml:space="preserve">
          <source>unctrl</source>
          <target state="translated">unctrl</target>
        </trans-unit>
        <trans-unit id="894a40dce8e5591059922ff5808e4c093326c141" translate="yes" xml:space="preserve">
          <source>undef</source>
          <target state="translated">undef</target>
        </trans-unit>
        <trans-unit id="98feb57f02fa68186d8b891aea735323789452c7" translate="yes" xml:space="preserve">
          <source>undef EXPR</source>
          <target state="translated">undef EXPR</target>
        </trans-unit>
        <trans-unit id="7414d1ab529bc86f7fbab5fae94abda24dcf86b4" translate="yes" xml:space="preserve">
          <source>undefChar</source>
          <target state="translated">undefChar</target>
        </trans-unit>
        <trans-unit id="3ddd5f42f688d3e124523295fd31c4fbe76d8214" translate="yes" xml:space="preserve">
          <source>undefName</source>
          <target state="translated">undefName</target>
        </trans-unit>
        <trans-unit id="2e6e324398420050bcebe65786c1ee784c78a29b" translate="yes" xml:space="preserve">
          <source>undefined symbols when it loads a dynamic library. The default behaviour is to resolve symbols when they are used. Setting this variable is useful during testing of extensions, as it ensures that you get an error on misspelled function names even if the test suite doesn't call them.</source>
          <target state="translated">неопределенные символы при загрузке динамической библиотеки.Поведение по умолчанию заключается в разрешении символов при их использовании.Установка этой переменной полезна при тестировании расширений,так как она гарантирует,что вы получите ошибку на неправильно написанных именах функций,даже если тестовый набор их не вызывает.</target>
        </trans-unit>
        <trans-unit id="b514a784ac2399d445614c88fc7a8533a4e033a5" translate="yes" xml:space="preserve">
          <source>under Unix), which can set important options. (A subroutine (&lt;code&gt;&amp;amp;afterinit&lt;/code&gt; ) can be defined here as well; it is executed after the debugger completes its own initialization.)</source>
          <target state="translated">под Unix), в котором можно установить важные параметры. (Здесь также может быть определена подпрограмма ( &lt;code&gt;&amp;amp;afterinit&lt;/code&gt; ); она выполняется после того, как отладчик завершит свою собственную инициализацию.)</target>
        </trans-unit>
        <trans-unit id="0e908427b1e0eddac81b2ec1cedcf9305ae5fe34" translate="yes" xml:space="preserve">
          <source>under Unix), which can set important options. (A subroutine (&lt;code&gt;&amp;amp;afterinit&lt;/code&gt;) can be defined here as well; it is executed after the debugger completes its own initialization.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dafb5899098e6cb8288d8485a2851027cdacf0a" translate="yes" xml:space="preserve">
          <source>under Unixy systems.] but here we've specified the port number (13) in parentheses. Using just the number would have also worked, but numeric literals make careful programmers nervous.</source>
          <target state="translated">под Unixy системами.]но здесь в скобках указан номер порта (13).Использование только числа тоже сработало бы,но числовые литералы заставляют внимательных программистов нервничать.</target>
        </trans-unit>
        <trans-unit id="4fd1ca9b1cc4b71ec35a6a6dcfdad1203f30fb09" translate="yes" xml:space="preserve">
          <source>under control of the &lt;code&gt;$^F&lt;/code&gt; variable. This is so any filehandles you didn't explicitly route to the STDIN, STDOUT or STDERR of a child</source>
          <target state="translated">под управлением переменной &lt;code&gt;$^F&lt;/code&gt; Это означает, что любые дескрипторы файлов, которые вы явно не направили в STDIN, STDOUT или STDERR дочернего элемента</target>
        </trans-unit>
        <trans-unit id="7881ed7a3c041a4c372935ce39c3487feea2f64f" translate="yes" xml:space="preserve">
          <source>under the name &lt;code&gt;MY::top_targets&lt;/code&gt; ;</source>
          <target state="translated">под именем &lt;code&gt;MY::top_targets&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9328bb3e44b86b8ed0418ed8c74e2b21908b1a35" translate="yes" xml:space="preserve">
          <source>under the name &lt;code&gt;MY::top_targets&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f01b49453b711076f00ff8b4dd47a7886a96fc1" translate="yes" xml:space="preserve">
          <source>under the specified locations are automatically included if they exist, with this lookup done at interpreter startup time. In addition, any directories matching the entries in &lt;code&gt;$Config{inc_version_list}&lt;/code&gt; are added. (These typically would be for older compatible perl versions installed in the same directory tree.)</source>
          <target state="translated">в указанных местах автоматически включаются, если они существуют, при этом поиск выполняется во время запуска интерпретатора. Кроме того, добавляются все каталоги, соответствующие записям в &lt;code&gt;$Config{inc_version_list}&lt;/code&gt; . (Обычно это для более старых совместимых версий Perl, установленных в том же дереве каталогов.)</target>
        </trans-unit>
        <trans-unit id="c82b67c88e6911c321806d35b9d8f040d8726133" translate="yes" xml:space="preserve">
          <source>underline</source>
          <target state="translated">underline</target>
        </trans-unit>
        <trans-unit id="5f20d1da022fbc92bca7260a4274b9728956fa2b" translate="yes" xml:space="preserve">
          <source>underneath the parent directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af103245dacc4f3c99cc847fbeb84cf15b0ae90" translate="yes" xml:space="preserve">
          <source>underscores separating digits in numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7455d50fd345c0e29f3dcf49611be6ce0df37457" translate="yes" xml:space="preserve">
          <source>understands the following options:</source>
          <target state="translated">понимает следующие варианты:</target>
        </trans-unit>
        <trans-unit id="7e3f3d64053f5e4159b5dafdba3166075e9e2eae" translate="yes" xml:space="preserve">
          <source>undocumented, used internally by the &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddb3081295d2039a2ce92ed30ca850d53c716e6" translate="yes" xml:space="preserve">
          <source>undone during backtracking, and we get</source>
          <target state="translated">разобранный во время отступления,и мы получаем</target>
        </trans-unit>
        <trans-unit id="3f9c012699681359b2d4c5c0da4c0c319f7b4851" translate="yes" xml:space="preserve">
          <source>undump</source>
          <target state="translated">undump</target>
        </trans-unit>
        <trans-unit id="7d8329250a4011a5a4f0a9f93c2700d6d867dcbe" translate="yes" xml:space="preserve">
          <source>unexec of %s into %s failed!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe50587164ae65a0d736c4251f94382f0fb9f13" translate="yes" xml:space="preserve">
          <source>unexpand</source>
          <target state="translated">unexpand</target>
        </trans-unit>
        <trans-unit id="8b77486db5e737dfba2f215ad3f09d26e7574ce4" translate="yes" xml:space="preserve">
          <source>ungetc</source>
          <target state="translated">ungetc</target>
        </trans-unit>
        <trans-unit id="57e123228495371596dd545a2ab7f01edd61e120" translate="yes" xml:space="preserve">
          <source>ungetline ( TEXT )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611ef7f3e74e93a2d99c8502e80be88ed14c4b7a" translate="yes" xml:space="preserve">
          <source>unicaps</source>
          <target state="translated">unicaps</target>
        </trans-unit>
        <trans-unit id="d0621ea6db045280a171ba1bfb3a6dfa337b7d85" translate="yes" xml:space="preserve">
          <source>unichars</source>
          <target state="translated">unichars</target>
        </trans-unit>
        <trans-unit id="8236ccc893aa3b688923006cde5ef7c867e1200f" translate="yes" xml:space="preserve">
          <source>unicore/</source>
          <target state="translated">unicore/</target>
        </trans-unit>
        <trans-unit id="34819feb4a120661fd90c7edb70e9578267e83cd" translate="yes" xml:space="preserve">
          <source>unicore/README.perl</source>
          <target state="translated">unicore/README.perl</target>
        </trans-unit>
        <trans-unit id="9cef115904c9a43eab6bd725f98fb0e895022817" translate="yes" xml:space="preserve">
          <source>unicore/mktables</source>
          <target state="translated">unicore/mktables</target>
        </trans-unit>
        <trans-unit id="695753c5963950095c0928d372a2deb661f1bf28" translate="yes" xml:space="preserve">
          <source>unifmt</source>
          <target state="translated">unifmt</target>
        </trans-unit>
        <trans-unit id="c2b5c55f0827d9c553bdc5a4de94a5d8d20f474b" translate="yes" xml:space="preserve">
          <source>unilook</source>
          <target state="translated">unilook</target>
        </trans-unit>
        <trans-unit id="b1217427083e0f38e61077d9500c698e2f3ef93b" translate="yes" xml:space="preserve">
          <source>unimplemented in this platform</source>
          <target state="translated">нереализованный на этой платформе</target>
        </trans-unit>
        <trans-unit id="2e954cc0c45457c88e7789778a3d7213d804d016" translate="yes" xml:space="preserve">
          <source>unimport()</source>
          <target state="translated">unimport()</target>
        </trans-unit>
        <trans-unit id="c9f59799203ace15feeda610ffd283211d4c8395" translate="yes" xml:space="preserve">
          <source>uninames</source>
          <target state="translated">uninames</target>
        </trans-unit>
        <trans-unit id="e375ed02e8215d5defda8610a10331083ab72346" translate="yes" xml:space="preserve">
          <source>uninarrow</source>
          <target state="translated">uninarrow</target>
        </trans-unit>
        <trans-unit id="328bff70ae4c6a47b6b25e9441f490474af8e448" translate="yes" xml:space="preserve">
          <source>uniprops</source>
          <target state="translated">uniprops</target>
        </trans-unit>
        <trans-unit id="42c53cdf8dcda07ef06c4014d43c03ab4ba1798b" translate="yes" xml:space="preserve">
          <source>uniq</source>
          <target state="translated">uniq</target>
        </trans-unit>
        <trans-unit id="688475de7bbf55ad773324d97aaf1f0f32fa8363" translate="yes" xml:space="preserve">
          <source>uniq_map</source>
          <target state="translated">uniq_map</target>
        </trans-unit>
        <trans-unit id="4c4a076d49de72eb22cd6aaae2298e7d4ad2f701" translate="yes" xml:space="preserve">
          <source>uniqint</source>
          <target state="translated">uniqint</target>
        </trans-unit>
        <trans-unit id="b24d8d9b5cbd1ccd5b20756f757761d5228f43bd" translate="yes" xml:space="preserve">
          <source>uniqnum</source>
          <target state="translated">uniqnum</target>
        </trans-unit>
        <trans-unit id="28f1a76d46f644fa5a1e218d64c3a50ad9fa0245" translate="yes" xml:space="preserve">
          <source>uniqnum() on oversized bignums</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7869d494a1e698fa76c4588027e4909f3358bb" translate="yes" xml:space="preserve">
          <source>uniqstr</source>
          <target state="translated">uniqstr</target>
        </trans-unit>
        <trans-unit id="d0055c6ae0267a382ac2e1bad930f39429529fe8" translate="yes" xml:space="preserve">
          <source>unique_name ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247380163f42421ae2d703eb8679cd83b34870e9" translate="yes" xml:space="preserve">
          <source>uniquote</source>
          <target state="translated">uniquote</target>
        </trans-unit>
        <trans-unit id="4c65113b300dbe7d18a1abac20294d929a7ffe75" translate="yes" xml:space="preserve">
          <source>unisubs</source>
          <target state="translated">unisubs</target>
        </trans-unit>
        <trans-unit id="81fb19e7a4af499b20a01cf4f84c2eb70605d5c9" translate="yes" xml:space="preserve">
          <source>unisupers</source>
          <target state="translated">unisupers</target>
        </trans-unit>
        <trans-unit id="c963c79ebbc894a1f0fa607d195e400ac457f80a" translate="yes" xml:space="preserve">
          <source>unitcheck_av</source>
          <target state="translated">unitcheck_av</target>
        </trans-unit>
        <trans-unit id="4a58aa07cd9c7fe995d8e039ce466daabed183ad" translate="yes" xml:space="preserve">
          <source>unititle</source>
          <target state="translated">unititle</target>
        </trans-unit>
        <trans-unit id="4869ecdc8289baa1bc191dbc361750e4e3bdf4ad" translate="yes" xml:space="preserve">
          <source>uniwc</source>
          <target state="translated">uniwc</target>
        </trans-unit>
        <trans-unit id="2a82b2c6779fce7a27aa805912edf1a4e6a2a894" translate="yes" xml:space="preserve">
          <source>uniwide</source>
          <target state="translated">uniwide</target>
        </trans-unit>
        <trans-unit id="bc2bc8105ced5b8215de72b6021554276bd23583" translate="yes" xml:space="preserve">
          <source>unixify</source>
          <target state="translated">unixify</target>
        </trans-unit>
        <trans-unit id="76b5bd522bdaa5e3755be98d8318c306c547b80c" translate="yes" xml:space="preserve">
          <source>unixpath</source>
          <target state="translated">unixpath</target>
        </trans-unit>
        <trans-unit id="b66add90cb0777ed5392bc3b4e1e6b56a2d86142" translate="yes" xml:space="preserve">
          <source>unixrealpath</source>
          <target state="translated">unixrealpath</target>
        </trans-unit>
        <trans-unit id="dc9206a6415e9837c874d5d503ed24b6c771aaa0" translate="yes" xml:space="preserve">
          <source>unknown methods</source>
          <target state="translated">неизвестные методы</target>
        </trans-unit>
        <trans-unit id="42e184930956d048c819e40f18f94f0094d47bc6" translate="yes" xml:space="preserve">
          <source>unless</source>
          <target state="translated">unless</target>
        </trans-unit>
        <trans-unit id="15358cd04268c58ca1fc4bee824af0b4d7a6f722" translate="yes" xml:space="preserve">
          <source>unless its already there.</source>
          <target state="translated">если только он уже не там.</target>
        </trans-unit>
        <trans-unit id="17ad721591ccd7748e1c7959af21fb641d063512" translate="yes" xml:space="preserve">
          <source>unless needed (metachars found).</source>
          <target state="translated">если только в этом нет необходимости (найдены метамашины).</target>
        </trans-unit>
        <trans-unit id="d8416865eb0efe0f795590dee12d7f0bc0f6bdd0" translate="yes" xml:space="preserve">
          <source>unless stated otherwise.</source>
          <target state="translated">если не указано иначе.</target>
        </trans-unit>
        <trans-unit id="778e8726acf23c71a85b892bf787372cd24a1b81" translate="yes" xml:space="preserve">
          <source>unlike($got, $regex, $name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55e2f1543d6b58851fc49ec657b147c15bce11b" translate="yes" xml:space="preserve">
          <source>unlike($got, $regex, $name, @diag)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b91025887687e8951f32135d89cf33a54553e45" translate="yes" xml:space="preserve">
          <source>unlink</source>
          <target state="translated">unlink</target>
        </trans-unit>
        <trans-unit id="2f7ab4d1414a38eaf72b218d2bc6396a10c7c03b" translate="yes" xml:space="preserve">
          <source>unlink LIST</source>
          <target state="translated">развязать СПИСОК</target>
        </trans-unit>
        <trans-unit id="2737b7545bd7b175365f0ee4b7afa2e1181e0653" translate="yes" xml:space="preserve">
          <source>unlnk</source>
          <target state="translated">unlnk</target>
        </trans-unit>
        <trans-unit id="ca9428c77b6e9175521ac643429f5441f83e1362" translate="yes" xml:space="preserve">
          <source>unlock_hash() does the opposite of lock_hash(). All keys and values are made writable. All values can be changed and keys can be added and deleted.</source>
          <target state="translated">unlock_hash()делает все наоборот lock_hash().Все ключи и значения сделаны доступными для записи.Все значения можно изменять,а ключи добавлять и удалять.</target>
        </trans-unit>
        <trans-unit id="05e5c85735ed74105bc5422998ce82f311785a5b" translate="yes" xml:space="preserve">
          <source>unlock_hash_recurse() does the opposite of lock_hash_recurse(). All keys and values are made writable. All values can be changed and keys can be added and deleted. Identical recursion restrictions apply as to lock_hash_recurse().</source>
          <target state="translated">Функция unlock_hash_recurse()выполняет функцию,противоположную функции lock_hash_recurse().Все ключи и значения делаются доступными для записи.Все значения можно изменять,а ключи добавлять и удалять.Для функции lock_hash_recurse()действуют одинаковые ограничения рекурсии.</target>
        </trans-unit>
        <trans-unit id="8e6fea04a2324b2bdf16d22c0b24e1599050807a" translate="yes" xml:space="preserve">
          <source>unlock_hashref</source>
          <target state="translated">unlock_hashref</target>
        </trans-unit>
        <trans-unit id="0f1468e82576313abf43b248cdf5b6cfc7280365" translate="yes" xml:space="preserve">
          <source>unlock_hashref_recurse</source>
          <target state="translated">unlock_hashref_recurse</target>
        </trans-unit>
        <trans-unit id="12c71ea32d5c373cf996228a9178f241f0008404" translate="yes" xml:space="preserve">
          <source>unlock_ref_keys</source>
          <target state="translated">unlock_ref_keys</target>
        </trans-unit>
        <trans-unit id="96215327cf41b3c48e87f5e8dc81cee8f88bf9da" translate="yes" xml:space="preserve">
          <source>unlock_ref_value</source>
          <target state="translated">unlock_ref_value</target>
        </trans-unit>
        <trans-unit id="15e49863432c89071dddfddf04017fe4b06da4a4" translate="yes" xml:space="preserve">
          <source>unmemoize</source>
          <target state="translated">unmemoize</target>
        </trans-unit>
        <trans-unit id="9a106745b32b1bc24d96df74906aa49ca0a5bab7" translate="yes" xml:space="preserve">
          <source>unpack</source>
          <target state="translated">unpack</target>
        </trans-unit>
        <trans-unit id="ad26ce7bca64b2cdad8c6ebcce728e4fe4dc8d68" translate="yes" xml:space="preserve">
          <source>unpack TEMPLATE</source>
          <target state="translated">распаковать ТЕМПЛАТУ</target>
        </trans-unit>
        <trans-unit id="d51158b8ba32894fc3f16c818771c4ff1c948b25" translate="yes" xml:space="preserve">
          <source>unpack TEMPLATE,EXPR</source>
          <target state="translated">Распакуйте TEMPLATE,EXPR.</target>
        </trans-unit>
        <trans-unit id="667f1aa48f4a7e472a9614df04adc9554f19b5a1" translate="yes" xml:space="preserve">
          <source>unpack_str</source>
          <target state="translated">unpack_str</target>
        </trans-unit>
        <trans-unit id="4019f40dd6050d48c4e9c756fe1667c0dd5c3051" translate="yes" xml:space="preserve">
          <source>unpackstring</source>
          <target state="translated">unpackstring</target>
        </trans-unit>
        <trans-unit id="eecd0df4af25a397ff85b82d08059f22712d1347" translate="yes" xml:space="preserve">
          <source>unpairs</source>
          <target state="translated">unpairs</target>
        </trans-unit>
        <trans-unit id="250bc13b5832a332d66e9c4880b8ac5a636d1a3f" translate="yes" xml:space="preserve">
          <source>unresolved internal link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91a205638bd5e3c9fb1fb38119f13fd97586247" translate="yes" xml:space="preserve">
          <source>unrestricted</source>
          <target state="translated">unrestricted</target>
        </trans-unit>
        <trans-unit id="519f72fe3d89c3099ea41ae1c802c97bdc5eadc1" translate="yes" xml:space="preserve">
          <source>unsets debug mode for packages.</source>
          <target state="translated">Сброс отладочного режима для пакетов.</target>
        </trans-unit>
        <trans-unit id="3678183d2623a68c44d9f0bbce67b01afe435aaf" translate="yes" xml:space="preserve">
          <source>unshare_hek</source>
          <target state="translated">unshare_hek</target>
        </trans-unit>
        <trans-unit id="7a0ca95c95533a6dc0a1e0e9aff970ba66b94452" translate="yes" xml:space="preserve">
          <source>unsharepvn</source>
          <target state="translated">unsharepvn</target>
        </trans-unit>
        <trans-unit id="aa81750b23852766b6c1312c52c74e8e43376ec7" translate="yes" xml:space="preserve">
          <source>unshift</source>
          <target state="translated">unshift</target>
        </trans-unit>
        <trans-unit id="e7cfc09be72c471dc24ba67fa64a04d2094e0c98" translate="yes" xml:space="preserve">
          <source>unshift ARRAY,LIST</source>
          <target state="translated">Смена АРРЕЯ,СПИСОК.</target>
        </trans-unit>
        <trans-unit id="7c2f42f7576eda73695913606951c9319ab37f8b" translate="yes" xml:space="preserve">
          <source>unshift EXPR,LIST</source>
          <target state="translated">Переключить ЭКСПР,СПИСОК</target>
        </trans-unit>
        <trans-unit id="6960baf3f3c0a0ba2056861718b4e11ab734837d" translate="yes" xml:space="preserve">
          <source>unsigned integer, the same size as</source>
          <target state="translated">беззнаковое целое число,размером с</target>
        </trans-unit>
        <trans-unit id="fd2a7e1cb00c329990c65763cacd331b6ddf577d" translate="yes" xml:space="preserve">
          <source>unstable</source>
          <target state="translated">unstable</target>
        </trans-unit>
        <trans-unit id="3ebe40b3b1535e2070d458bd74877413f860e991" translate="yes" xml:space="preserve">
          <source>unsupported ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a357a89ef6c8cc2c4b8fede70ba2f64a1fb87a" translate="yes" xml:space="preserve">
          <source>untaint_pattern</source>
          <target state="translated">untaint_pattern</target>
        </trans-unit>
        <trans-unit id="08257bf290350a2f8d16f85ae7fda5d81b518918" translate="yes" xml:space="preserve">
          <source>untie</source>
          <target state="translated">untie</target>
        </trans-unit>
        <trans-unit id="41ffa486976cc60b0d9967f715609a090b4a3233" translate="yes" xml:space="preserve">
          <source>untie VARIABLE</source>
          <target state="translated">развязать ПЕРЕМЕННУЮ</target>
        </trans-unit>
        <trans-unit id="9b67ad7d62e1b60d0628d59e38cb26cc0acf8b6e" translate="yes" xml:space="preserve">
          <source>untie attempted while %d inner references still exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5615ce15b3dc9cab6781e3f31740416951c3440d" translate="yes" xml:space="preserve">
          <source>untie() is called:</source>
          <target state="translated">вызывается untie():</target>
        </trans-unit>
        <trans-unit id="b310f4d4d89b8570184b9777ad7d90fc1df20457" translate="yes" xml:space="preserve">
          <source>until</source>
          <target state="translated">until</target>
        </trans-unit>
        <trans-unit id="54cf6374a981007eef58d61195525d7f8217765c" translate="yes" xml:space="preserve">
          <source>until EOF, and appends that data to the current state. The return value is the updated object itself.</source>
          <target state="translated">до EOF,и добавляет эти данные в текущее состояние.Возвращаемым значением является сам обновленный объект.</target>
        </trans-unit>
        <trans-unit id="bfcf86091d3067466bc9ffe8d93a97d5a468fb2d" translate="yes" xml:space="preserve">
          <source>until the lock goes out of scope.</source>
          <target state="translated">пока замок не выйдет из строя.</target>
        </trans-unit>
        <trans-unit id="0d864558375e79b6bcd8d41b4eadfd0e190c7c45" translate="yes" xml:space="preserve">
          <source>unweaken</source>
          <target state="translated">unweaken</target>
        </trans-unit>
        <trans-unit id="49b9dec079931986840591d4efaaed3acf9eae03" translate="yes" xml:space="preserve">
          <source>unzip $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">распаковать $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="c601a15fbbc4f41d21e99b8a92db91d6e7d39d25" translate="yes" xml:space="preserve">
          <source>unzip.exe</source>
          <target state="translated">unzip.exe</target>
        </trans-unit>
        <trans-unit id="4e7d82f49845ac441224661e3cf7519a4da4777e" translate="yes" xml:space="preserve">
          <source>uotemeta,</source>
          <target state="translated">uotemeta,</target>
        </trans-unit>
        <trans-unit id="90f24aedaaa17d525888f5a21248234b30a9b336" translate="yes" xml:space="preserve">
          <source>uparrow()</source>
          <target state="translated">uparrow()</target>
        </trans-unit>
        <trans-unit id="ae8f0e6170cd6b45d0cc212ac0c66e0e8d722f2b" translate="yes" xml:space="preserve">
          <source>upd</source>
          <target state="translated">upd</target>
        </trans-unit>
        <trans-unit id="a9f314bc60e448e7fbd1dd13bce399681bb032d3" translate="yes" xml:space="preserve">
          <source>updated by the binary installer, some of them may need to be hand-edited. I know no such data, please keep me informed if you find one. Moreover, manual changes to the installed version may need to be accompanied by an edit of this file.</source>
          <target state="translated">обновленные программой установки двоичных файлов,некоторые из них могут потребовать ручного редактирования.Я не знаю таких данных,пожалуйста,держите меня в курсе,если найдете.Более того,изменения в установленной версии вручную могут потребовать редактирования этого файла.</target>
        </trans-unit>
        <trans-unit id="5a656fda5269af09ff3873ba74dd4de0ac85bbc1" translate="yes" xml:space="preserve">
          <source>updated the build process during the 5.19 development track.</source>
          <target state="translated">обновил процесс сборки в ходе разработки 5.19.</target>
        </trans-unit>
        <trans-unit id="5180e2a88b78792eaa555e79a47e08848d757634" translate="yes" xml:space="preserve">
          <source>updir</source>
          <target state="translated">updir</target>
        </trans-unit>
        <trans-unit id="28eadd2fb4651dc126fabacc1cb030b3958512f3" translate="yes" xml:space="preserve">
          <source>updir (override)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573157bac2f3122bc189ba9a682cbdbe7b752ee2" translate="yes" xml:space="preserve">
          <source>upg_version</source>
          <target state="translated">upg_version</target>
        </trans-unit>
        <trans-unit id="0d9974044112d7da99592fcbf7918308b2bc8a6d" translate="yes" xml:space="preserve">
          <source>upgrade [Module|/Regexp/]...</source>
          <target state="translated">обновление [Module|/Regexp/]...</target>
        </trans-unit>
        <trans-unit id="6da792f9cfdafa82fd95aab7bdbf212c83da734f" translate="yes" xml:space="preserve">
          <source>upgrade()</source>
          <target state="translated">upgrade()</target>
        </trans-unit>
        <trans-unit id="d0088ce268ddc2ca0b6ec577f9ff466210e4742e" translate="yes" xml:space="preserve">
          <source>upgrade_fragment</source>
          <target state="translated">upgrade_fragment</target>
        </trans-unit>
        <trans-unit id="f4edf1dbbd73a675c8ae27608131c3a5ee71c114" translate="yes" xml:space="preserve">
          <source>upgraded encoding of characters, which is approximately UTF-8 on ASCII machines, but UTF-EBCDIC on EBCDIC machines. This allows any character Perl can represent to be read from or written to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29143dcad2b014512f6db9b84be0b9aa6e6b8deb" translate="yes" xml:space="preserve">
          <source>upi</source>
          <target state="translated">upi</target>
        </trans-unit>
        <trans-unit id="f0cdaeeecd9781d9f40d62459a27fb4ba813d0e3" translate="yes" xml:space="preserve">
          <source>upon failure.</source>
          <target state="translated">после провала.</target>
        </trans-unit>
        <trans-unit id="c538c170bdc6b0f3bb98dce44a016a2e2d45a6e7" translate="yes" xml:space="preserve">
          <source>upper</source>
          <target state="translated">upper</target>
        </trans-unit>
        <trans-unit id="ee3b0e62b31ff3f021baa533d6c3dd18974e4733" translate="yes" xml:space="preserve">
          <source>upper_before_lower</source>
          <target state="translated">upper_before_lower</target>
        </trans-unit>
        <trans-unit id="117ec720ea4b96702ba69fad917ef776ef5efe4e" translate="yes" xml:space="preserve">
          <source>uppercase</source>
          <target state="translated">uppercase</target>
        </trans-unit>
        <trans-unit id="4a6494f7b0c3a8922958394fa4ecd0b4a0fd0851" translate="yes" xml:space="preserve">
          <source>uptodate</source>
          <target state="translated">uptodate</target>
        </trans-unit>
        <trans-unit id="81736358b1645103ae83247b10c5f82af641ddfc" translate="yes" xml:space="preserve">
          <source>url</source>
          <target state="translated">url</target>
        </trans-unit>
        <trans-unit id="4b281e89c728be235d2824fa8c4c0f6f127e3fa5" translate="yes" xml:space="preserve">
          <source>urllist parameters are URLs according to RFC 1738. We do a little guessing if your URL is not compliant, but if you have problems with &lt;code&gt;file&lt;/code&gt; URLs, please try the correct format. Either:</source>
          <target state="translated">Параметры urllist - это URL-адреса в соответствии с RFC 1738. Мы немного догадываемся, если ваш URL-адрес не соответствует требованиям, но если у вас есть проблемы с URL-адресами &lt;code&gt;file&lt;/code&gt; , попробуйте правильный формат. Либо:</target>
        </trans-unit>
        <trans-unit id="b7716ea49e243080f83315764fdf88f7e9e1bbcd" translate="yes" xml:space="preserve">
          <source>urllist_ping_external</source>
          <target state="translated">urllist_ping_external</target>
        </trans-unit>
        <trans-unit id="7e9dae022da383e848300f174de398361fd558f3" translate="yes" xml:space="preserve">
          <source>urllist_ping_verbose</source>
          <target state="translated">urllist_ping_verbose</target>
        </trans-unit>
        <trans-unit id="65d3e043a9cd16e5189d57b097e935dcca84ddd3" translate="yes" xml:space="preserve">
          <source>usage prefers the form listed above, i.e. it splits on /\s+version\s+/ taking the first field as the name of the tool that generated the file and the second field as version of that tool. RWS]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04489a12bbaa6aebffb61ed2f524424ba8e1147e" translate="yes" xml:space="preserve">
          <source>use</source>
          <target state="translated">use</target>
        </trans-unit>
        <trans-unit id="5f81e2624a9db0b5ca4038055b053e3a8d67059d" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;&amp;amp;len&lt;/code&gt; ). If you do not care about what the length of the key is, you may use the global variable &lt;code&gt;PL_na&lt;/code&gt; , though this is rather less efficient than using a local variable. Remember though, that hash keys in perl are free to contain embedded nulls, so using &lt;code&gt;strlen()&lt;/code&gt; or similar is not a good way to find the length of hash keys. This is very similar to the &lt;code&gt;SvPV()&lt;/code&gt; macro described elsewhere in this document. See also &lt;code&gt;HeUTF8&lt;/code&gt; .</source>
          <target state="translated">используйте &lt;code&gt;&amp;amp;len&lt;/code&gt; ). Если вам не &lt;code&gt;PL_na&lt;/code&gt; длина ключа, вы можете использовать глобальную переменную PL_na , хотя это гораздо менее эффективно, чем использование локальной переменной. Однако помните, что хеш-ключи в Perl могут содержать встроенные нули, поэтому использование &lt;code&gt;strlen()&lt;/code&gt; или аналогичного - не лучший способ определить длину хеш-ключей. Это очень похоже на &lt;code&gt;SvPV()&lt;/code&gt; описанный в другом месте этого документа. См. Также &lt;code&gt;HeUTF8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b981c090e0ccf2394ca9d98ec6e98f5fdb3b15ee" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;&amp;amp;len&lt;/code&gt; ). If you do not care what the length of the data is, use the &lt;code&gt;SvPV_nolen&lt;/code&gt; macro. Historically the &lt;code&gt;SvPV&lt;/code&gt; macro with the global variable &lt;code&gt;PL_na&lt;/code&gt; has been used in this case. But that can be quite inefficient because &lt;code&gt;PL_na&lt;/code&gt; must be accessed in thread-local storage in threaded Perl. In any case, remember that Perl allows arbitrary strings of data that may both contain NULs and might not be terminated by a &lt;code&gt;NUL&lt;/code&gt; .</source>
          <target state="translated">используйте &lt;code&gt;&amp;amp;len&lt;/code&gt; ). Если вас не волнует длина данных, используйте макрос &lt;code&gt;SvPV_nolen&lt;/code&gt; . Исторически в этом случае использовался макрос &lt;code&gt;SvPV&lt;/code&gt; с глобальной переменной &lt;code&gt;PL_na&lt;/code&gt; . Но это может быть довольно неэффективным, потому что &lt;code&gt;PL_na&lt;/code&gt; должен быть доступен в локальном хранилище потока в многопоточном Perl. В любом случае помните, что Perl допускает произвольные строки данных, которые могут содержать NUL и не завершаться &lt;code&gt;NUL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91872a2db1d3c2ad811092fe03641de69bac02c8" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;&amp;amp;len&lt;/code&gt;). If you do not care about what the length of the key is, you may use the global variable &lt;code&gt;PL_na&lt;/code&gt;, though this is rather less efficient than using a local variable. Remember though, that hash keys in perl are free to contain embedded nulls, so using &lt;code&gt;strlen()&lt;/code&gt; or similar is not a good way to find the length of hash keys. This is very similar to the &lt;code&gt;SvPV()&lt;/code&gt; macro described elsewhere in this document. See also &lt;code&gt;&lt;a href=&quot;#HeUTF8&quot;&gt;&quot;HeUTF8&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a43d99f8e2faa8d07b5565dc5d0de6fb1762a1" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;&amp;amp;len&lt;/code&gt;). If you do not care what the length of the data is, use the &lt;code&gt;SvPV_nolen&lt;/code&gt; macro. Historically the &lt;code&gt;SvPV&lt;/code&gt; macro with the global variable &lt;code&gt;PL_na&lt;/code&gt; has been used in this case. But that can be quite inefficient because &lt;code&gt;PL_na&lt;/code&gt; must be accessed in thread-local storage in threaded Perl. In any case, remember that Perl allows arbitrary strings of data that may both contain NULs and might not be terminated by a &lt;code&gt;NUL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7c0594a0c4ad4b7139bc4478498a69f7e492fd" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">используйте &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b438f8ebaf9cd38ef6ddc105cb8f6b0e5c7983a5" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;B&amp;lt;&amp;gt;&lt;/code&gt; for commands names like &lt;b&gt;cat&lt;/b&gt; or &lt;b&gt;grep&lt;/b&gt;.</source>
          <target state="translated">используйте &lt;code&gt;B&amp;lt;&amp;gt;&lt;/code&gt; для имен команд, таких как &lt;b&gt;cat&lt;/b&gt; или &lt;b&gt;grep&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="912f09261e74f066e3e24f4b46906e4342000bf4" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; for function, variable and module names (and more generally anything that can be considered part of code, like filehandles or specific values). Note that function names are considered more readable with parentheses after their name, that is &lt;code&gt;function()&lt;/code&gt; .</source>
          <target state="translated">используйте &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; для имен функций, переменных и модулей (и вообще всего, что может считаться частью кода, например дескрипторов файлов или конкретных значений). Обратите внимание, что имена функций считаются более удобочитаемыми с круглыми скобками после их имени, то есть &lt;code&gt;function()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39b5f5dc3c155da3a9793019cfc895b275e0b180" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; for function, variable and module names (and more generally anything that can be considered part of code, like filehandles or specific values). Note that function names are considered more readable with parentheses after their name, that is &lt;code&gt;function()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91895a1cf51d91f57aca46510d3d62ba8b32f1ee" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; for file names. &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; should be the only Pod code for file names, but as most Pod formatters render it as italic, Unix and Windows paths with their slashes and backslashes may be less readable, and better rendered with &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">используйте &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; или &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; для имен файлов. &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; должен быть единственным кодом Pod для имен файлов, но поскольку большинство форматеров Pod отображают его курсивом, пути Unix и Windows с их косой чертой и обратной косой чертой могут быть менее читаемыми и лучше отображаться с помощью &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="524c11492d5ee4aa3afeb961e886930eb41cabec" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; for file names. &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; should be the only Pod code for file names, but as most Pod formatters render it as italic, Unix and Windows paths with their slashes and backslashes may be less readable, and better rendered with &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f492c89808474610e1c99a87dbe9bf8660e0714" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;local&lt;/code&gt; instead of &lt;code&gt;my&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc3bde8eda2284372421b6e4025b7b2372a316b" translate="yes" xml:space="preserve">
          <source>use Bourne shell (&lt;code&gt;sh(1)&lt;/code&gt; ) redirection syntax in backticks, not &lt;code&gt;csh(1)&lt;/code&gt; ! Details on why Perl's &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; and backtick and pipe opens all use the Bourne shell are in the</source>
          <target state="translated">используйте синтаксис перенаправления оболочки Bourne ( &lt;code&gt;sh(1)&lt;/code&gt; ) в обратных кавычках, а не &lt;code&gt;csh(1)&lt;/code&gt; ! Подробная информация о том, почему Perl &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; обратная кавычка и конвейерная линия открывают все, что используют оболочку Bourne, находятся в разделе</target>
        </trans-unit>
        <trans-unit id="df7e56339ef79629428229acb32534b1e300a431" translate="yes" xml:space="preserve">
          <source>use Bourne shell (&lt;code&gt;sh(1)&lt;/code&gt;) redirection syntax in backticks, not &lt;code&gt;csh(1)&lt;/code&gt;! Details on why Perl's &lt;code&gt;system()&lt;/code&gt; and backtick and pipe opens all use the Bourne shell are in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c5202eb33a9fabbe84c4c8634db07023b9dfa6" translate="yes" xml:space="preserve">
          <source>use Filter::Util::Call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16599c655382953c8630fbbdb2c964d3e8dee9ae" translate="yes" xml:space="preserve">
          <source>use Module</source>
          <target state="translated">модуль использования</target>
        </trans-unit>
        <trans-unit id="90f04428920392ff9b2def8ba0ed469f079b6502" translate="yes" xml:space="preserve">
          <source>use Module LIST</source>
          <target state="translated">использовать СПИСОК Модулей</target>
        </trans-unit>
        <trans-unit id="7ed0869d2d4fc928494f42d5819555da7a79edd6" translate="yes" xml:space="preserve">
          <source>use Module VERSION</source>
          <target state="translated">использовать Модуль ВЕРСИИ</target>
        </trans-unit>
        <trans-unit id="c2de803ffc4c0a3b39ed0dff30412c19bd9d9fee" translate="yes" xml:space="preserve">
          <source>use Module VERSION LIST</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ Модуль ВЕРСИИ СПИСОК ВЕРСИИ</target>
        </trans-unit>
        <trans-unit id="ed1b16f9eadabbae879f86b68ec71e8b6d05ca67" translate="yes" xml:space="preserve">
          <source>use Perl; used to provide a slashdot-style news/blog website covering all things Perl, from minutes of the meetings of the Perl 6 Design team to conference announcements with (ir)relevant discussion. It no longer accepts updates, but you can still use the site to read old entries and comments.</source>
          <target state="translated">Используйте Perl;используется для предоставления новостного/блог-сайта в стиле slashdot,охватывающего все вещи на Perl,начиная с протоколов заседаний дизайнерской группы Perl 6 и заканчивая анонсами конференции с (ir)соответствующим обсуждением.Он больше не принимает обновления,но вы все еще можете использовать сайт для чтения старых записей и комментариев.</target>
        </trans-unit>
        <trans-unit id="d91bc845470d4a86d4018011a4792f7dcf86f037" translate="yes" xml:space="preserve">
          <source>use SA_RESTART. Consequently, restartable system calls can fail (with $! set to &lt;code&gt;EINTR&lt;/code&gt; ) in places where they previously would have succeeded.</source>
          <target state="translated">используйте SA_RESTART. Следовательно, перезапускаемые системные вызовы могут завершиться ошибкой (если для $! Установлено значение &lt;code&gt;EINTR&lt;/code&gt; ) в тех местах, где раньше они были бы успешными.</target>
        </trans-unit>
        <trans-unit id="63988d3f48d2bb0b68264da99290684d703e5c2a" translate="yes" xml:space="preserve">
          <source>use SA_RESTART. Consequently, restartable system calls can fail (with $! set to &lt;code&gt;EINTR&lt;/code&gt;) in places where they previously would have succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7c49503a611307f683497f7df47accbf51802a" translate="yes" xml:space="preserve">
          <source>use VERSION</source>
          <target state="translated">использовать ВЕРСИЮ</target>
        </trans-unit>
        <trans-unit id="86d6a1e3bbd163625d7fac651620cbfa17805164" translate="yes" xml:space="preserve">
          <source>use bytes;</source>
          <target state="translated">использовать байты;</target>
        </trans-unit>
        <trans-unit id="fa4be9c50a05e3e4beb43cd9f7972d2ccf304eae" translate="yes" xml:space="preserve">
          <source>use if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6056cfb56b5a37f62f1bf027d56c8cb904bd1" translate="yes" xml:space="preserve">
          <source>use integer vs. use bigint</source>
          <target state="translated">использовать целое число vs.использовать bigint</target>
        </trans-unit>
        <trans-unit id="814151fffad1e37f33b4e503823e70b6bbf3c04b" translate="yes" xml:space="preserve">
          <source>use integer;</source>
          <target state="translated">используйте целое число;</target>
        </trans-unit>
        <trans-unit id="49d768463f13dbf420913f9d0b8f147140ea29e5" translate="yes" xml:space="preserve">
          <source>use it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1d48f5b10a148ad0e4d39b9da43de87d730e84" translate="yes" xml:space="preserve">
          <source>use of a backslash to include a space in a word</source>
          <target state="translated">использование обратного слеша для включения пробела в слово</target>
        </trans-unit>
        <trans-unit id="1f5c67435c71d9a6ca9c3233dedb2dc1513c55c2" translate="yes" xml:space="preserve">
          <source>use of a backslash to remove the special meaning of a double-quote</source>
          <target state="translated">использование обратного слеша для удаления особого значения двойной кавычки</target>
        </trans-unit>
        <trans-unit id="f6fe0074742b81fff90e497bf135242ea8e89606" translate="yes" xml:space="preserve">
          <source>use of quotes to include a space in a word</source>
          <target state="translated">использование кавычек для включения пробела в слово</target>
        </trans-unit>
        <trans-unit id="8c01026ad061791e802cf597a172313b49e695da" translate="yes" xml:space="preserve">
          <source>use re 'strict'</source>
          <target state="translated">использовать &quot;строго</target>
        </trans-unit>
        <trans-unit id="cda9500ef317eb6fc5a5f798984325090df1150f" translate="yes" xml:space="preserve">
          <source>use re;</source>
          <target state="translated">используйте..;</target>
        </trans-unit>
        <trans-unit id="53e07a32bf191d6917ee6fd863f0b52632a86798" translate="yes" xml:space="preserve">
          <source>use strict</source>
          <target state="translated">строго использовать</target>
        </trans-unit>
        <trans-unit id="8428b0851b0684a353e7ed0874608908c7b5144e" translate="yes" xml:space="preserve">
          <source>use strict;</source>
          <target state="translated">используй строго;</target>
        </trans-unit>
        <trans-unit id="371d195a9f9f3ece23b26e71d1dd939d2d111281" translate="yes" xml:space="preserve">
          <source>use symbolic references are when you really must refer to the symbol table. This may be because it's something that one can't take a real reference to, such as a format name. Doing so may also be important for method calls, since these always go through the symbol table for resolution.</source>
          <target state="translated">использовать символьные ссылки-это когда вы действительно должны обратиться к таблице символов.Это может быть потому,что это то,на что нельзя взять настоящую ссылку,например,имя формата.Это также может быть важно для вызовов методов,так как они всегда проходят через таблицу символов для разрешения.</target>
        </trans-unit>
        <trans-unit id="9b052d587b755b57eec4828588dac107af257aee" translate="yes" xml:space="preserve">
          <source>use the &lt;code&gt;sources&lt;/code&gt; parameter below.</source>
          <target state="translated">используйте параметр &lt;code&gt;sources&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="cbacfc4c115173ec78e0b2e5387eefbdb941b814" translate="yes" xml:space="preserve">
          <source>use the brackets. These are correct: &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FH)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;(FH, 0,
2)&lt;/code&gt; and &quot;copying from STDIN to FILE&quot;.</source>
          <target state="translated">используйте скобки. Это правильные: &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FH)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;(FH, 0, 2)&lt;/code&gt; и &amp;laquo;копирование из STDIN в FILE&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ae9a40effe41a60d5a17fa34d81461e3663991d5" translate="yes" xml:space="preserve">
          <source>use the brackets. These are correct: &lt;code&gt;eof(FH)&lt;/code&gt;, &lt;code&gt;seek(FH, 0, 2)&lt;/code&gt; and &quot;copying from STDIN to FILE&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbd8b9a036d877785987351768edc2c897562b7" translate="yes" xml:space="preserve">
          <source>use this option. In the example above it will prevent the filename being included in the gzip header and make the size of the gzip data stream a slight bit smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f77e9413c57563ec485af7a0a5bae4e8e2ecbf" translate="yes" xml:space="preserve">
          <source>use threads 'exit' =&amp;gt; 'threads_only'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b4c206d9c4bb68da44a80182ebb4ba60535275" translate="yes" xml:space="preserve">
          <source>use threads ('stack_size' =&amp;gt; VALUE);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16242ca7d468c97ea7b6997607a050d2e0014a3f" translate="yes" xml:space="preserve">
          <source>use utf8;</source>
          <target state="translated">использовать utf8;</target>
        </trans-unit>
        <trans-unit id="0fa383e37931d8581b639133cfcd368d72f2dc65" translate="yes" xml:space="preserve">
          <source>use warnings::register</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9bf76551e571ede80cc893a3c04b1861a56e60" translate="yes" xml:space="preserve">
          <source>use warnings;</source>
          <target state="translated">использовать предупреждения;</target>
        </trans-unit>
        <trans-unit id="43e6bb793575b0e1c61db35e98228f60aeaf2f8d" translate="yes" xml:space="preserve">
          <source>use()</source>
          <target state="translated">use()</target>
        </trans-unit>
        <trans-unit id="d05287976184d88c455cd302b00f63b076bbdc63" translate="yes" xml:space="preserve">
          <source>use64bits.U</source>
          <target state="translated">use64bits.U</target>
        </trans-unit>
        <trans-unit id="dc1f703fbe2525f75cc9ab49194aee9e138946ca" translate="yes" xml:space="preserve">
          <source>use_RS [YESNO]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322d0f0f0db821475c4f6805cc89ae633c406474" translate="yes" xml:space="preserve">
          <source>use_prompt_default</source>
          <target state="translated">use_prompt_default</target>
        </trans-unit>
        <trans-unit id="f5132649d33439de6ae0a145d2b65de546b4a3bd" translate="yes" xml:space="preserve">
          <source>use_sqlite</source>
          <target state="translated">use_sqlite</target>
        </trans-unit>
        <trans-unit id="de888ddd185c016565479b29ef9407370202fca3" translate="yes" xml:space="preserve">
          <source>usebacktrace.U</source>
          <target state="translated">usebacktrace.U</target>
        </trans-unit>
        <trans-unit id="c75278e55d10139a00150399331bbf063800d605" translate="yes" xml:space="preserve">
          <source>useconds or interval more than ...</source>
          <target state="translated">...секунд или интервала больше,чем...</target>
        </trans-unit>
        <trans-unit id="83a7a6b40353b9f6be160c361611ae311dfb9752" translate="yes" xml:space="preserve">
          <source>useconds or uinterval equal to or more than 1000000</source>
          <target state="translated">юзеконы или унтервалы равны или превышают 1000000</target>
        </trans-unit>
        <trans-unit id="192a56759d36454cc0b8c812e31845e9ed10b130" translate="yes" xml:space="preserve">
          <source>used</source>
          <target state="translated">used</target>
        </trans-unit>
        <trans-unit id="73decdd966503bbba3c9fd02a2b5f2ce91746665" translate="yes" xml:space="preserve">
          <source>used by &lt;code&gt;DynaLoader&lt;/code&gt; for DLL name mangling.</source>
          <target state="translated">используется &lt;code&gt;DynaLoader&lt;/code&gt; для изменения имени DLL.</target>
        </trans-unit>
        <trans-unit id="e30f4a35ac593e13f39f5488a20368f2d3e27f69" translate="yes" xml:space="preserve">
          <source>used by &lt;code&gt;File::Copy::copy&lt;/code&gt; , see &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt;.</source>
          <target state="translated">используется &lt;code&gt;File::Copy::copy&lt;/code&gt; , см. &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c89876435377f44f971efb9c888edc6a3425954" translate="yes" xml:space="preserve">
          <source>used by &lt;code&gt;File::Copy::copy&lt;/code&gt;, see &lt;a href=&quot;File::Copy&quot;&gt;File::Copy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6651965b06637ac206b1de96bf978eb27b24abe2" translate="yes" xml:space="preserve">
          <source>used by Microsoft C/C++), all of these functions will be available for use. Otherwise, you won't be able to perform the SHA-384 and SHA-512 transforms, both of which require 64-bit operations.</source>
          <target state="translated">используемых Microsoft C/C++),все эти функции будут доступны для использования.В противном случае вы не сможете выполнять преобразования SHA-384 и SHA-512,требующие 64-битных операций.</target>
        </trans-unit>
        <trans-unit id="4bcdb1a3c67ee6a36e9c8f01fec7794365214c0a" translate="yes" xml:space="preserve">
          <source>used in the Canonical Ordering Algorithm. For Unicode 5.1, this is described in Section 3.11 &lt;code&gt;Canonical Ordering Behavior&lt;/code&gt; available at &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;</source>
          <target state="translated">используется в алгоритме канонического упорядочения. Для Unicode 5.1 это описано в Разделе 3.11 &amp;laquo; &lt;code&gt;Canonical Ordering Behavior&lt;/code&gt; доступном по адресу &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b85c796251a2d8885ba0e04887adb1e36a182490" translate="yes" xml:space="preserve">
          <source>used in the Canonical Ordering Algorithm. For Unicode 5.1, this is described in Section 3.11 &lt;code&gt;Canonical Ordering Behavior&lt;/code&gt; available at &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f21d186e7b8936010e35678ac31222355da13c" translate="yes" xml:space="preserve">
          <source>used in this way, the result of evaluation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d652c7d874ec8b1c40417e324ea5d062c754cc5c" translate="yes" xml:space="preserve">
          <source>used in this way, the result of evaluation of &lt;code&gt;code&lt;/code&gt; is put into the special variable &lt;code&gt;$^R&lt;/code&gt; . This happens immediately, so &lt;code&gt;$^R&lt;/code&gt; can be used from other &lt;code&gt;(?{ code })&lt;/code&gt; assertions inside the same regular expression.</source>
          <target state="translated">используется таким образом, результат оценки &lt;code&gt;code&lt;/code&gt; помещается в специальном переменных &lt;code&gt;$^R&lt;/code&gt; . Это происходит немедленно, поэтому &lt;code&gt;$^R&lt;/code&gt; можно использовать из других утверждений &lt;code&gt;(?{ code })&lt;/code&gt; внутри того же регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="ad7a1aa25b73ae4e670cc536096730d91e2000c2" translate="yes" xml:space="preserve">
          <source>used to be the recommended way to report bugs in the perl interpreter itself or any of the standard library modules back to the developers; bug reports and patches should now be submitted to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910e6213db30e16ad6b1c4b4021611873d6ce5e8" translate="yes" xml:space="preserve">
          <source>usedtrace.U</source>
          <target state="translated">usedtrace.U</target>
        </trans-unit>
        <trans-unit id="ae3154c3ec5c365c6959f779a04adc35659601ba" translate="yes" xml:space="preserve">
          <source>usefaststdio.U</source>
          <target state="translated">usefaststdio.U</target>
        </trans-unit>
        <trans-unit id="682aa3c2d38618cf64e946cc3bbd2fc8a96d01db" translate="yes" xml:space="preserve">
          <source>useful programs are slow</source>
          <target state="translated">полезные программы медленно</target>
        </trans-unit>
        <trans-unit id="64cd2a07a89b1a0f1da29526d021d0937a062dc3" translate="yes" xml:space="preserve">
          <source>useful:</source>
          <target state="translated">useful:</target>
        </trans-unit>
        <trans-unit id="86959ccaa35c5e158cbc673c5b275d5c75322ffb" translate="yes" xml:space="preserve">
          <source>usekernprocpathname.U</source>
          <target state="translated">usekernprocpathname.U</target>
        </trans-unit>
        <trans-unit id="dfb174e9b45efda0d2813ab34a52566fc0e5149a" translate="yes" xml:space="preserve">
          <source>uselfs.U</source>
          <target state="translated">uselfs.U</target>
        </trans-unit>
        <trans-unit id="4a865fd135358714278adf708601a551aa95d374" translate="yes" xml:space="preserve">
          <source>uselongdbl.U</source>
          <target state="translated">uselongdbl.U</target>
        </trans-unit>
        <trans-unit id="8f139461261d4e47392a29d9a1470571a111a9dc" translate="yes" xml:space="preserve">
          <source>uselongdouble.cbu</source>
          <target state="translated">uselongdouble.cbu</target>
        </trans-unit>
        <trans-unit id="55dcabac6b2a581cb97ea8cc9bfb5c2c032a1aa2" translate="yes" xml:space="preserve">
          <source>usemorebits.U</source>
          <target state="translated">usemorebits.U</target>
        </trans-unit>
        <trans-unit id="cacd09fc8d7a5be6357aae988bf81988f273cde2" translate="yes" xml:space="preserve">
          <source>usemultiplicity.U</source>
          <target state="translated">usemultiplicity.U</target>
        </trans-unit>
        <trans-unit id="999728bc8bffebc44a36dcc8573424d9a99a522c" translate="yes" xml:space="preserve">
          <source>usenm.U</source>
          <target state="translated">usenm.U</target>
        </trans-unit>
        <trans-unit id="135519af067f60479443d73bde99b3ce40a82660" translate="yes" xml:space="preserve">
          <source>usensgetexecutablepath.U</source>
          <target state="translated">usensgetexecutablepath.U</target>
        </trans-unit>
        <trans-unit id="f8a6096831b8f25daa716e7ca10d96073259de34" translate="yes" xml:space="preserve">
          <source>useperlio.U</source>
          <target state="translated">useperlio.U</target>
        </trans-unit>
        <trans-unit id="97f9b6453ab8627d3cd32b5de7ede1a376eb1e42" translate="yes" xml:space="preserve">
          <source>usequadmath.U</source>
          <target state="translated">usequadmath.U</target>
        </trans-unit>
        <trans-unit id="12dea96fec20593566ab75692c9949596833adc9" translate="yes" xml:space="preserve">
          <source>user</source>
          <target state="translated">user</target>
        </trans-unit>
        <trans-unit id="6f725d50593f3b2f80e8611b06f57655c0a960f0" translate="yes" xml:space="preserve">
          <source>user ( USER )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac7df9d404fadc667203b21aea1bdd5765ffcc2" translate="yes" xml:space="preserve">
          <source>user =&amp;gt; $owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948109d35f9658f13aa26db4dca1ebe12f69c043" translate="yes" xml:space="preserve">
          <source>user interface (tty or graphical)</source>
          <target state="translated">пользовательский интерфейс (tty или графический)</target>
        </trans-unit>
        <trans-unit id="99cd2c26d48da74abf7a71cda0673fef004fd48c" translate="yes" xml:space="preserve">
          <source>user time</source>
          <target state="translated">время пользователя</target>
        </trans-unit>
        <trans-unit id="a7e2c648dc9941f38aea4196f90df226d6e93b2b" translate="yes" xml:space="preserve">
          <source>uses</source>
          <target state="translated">uses</target>
        </trans-unit>
        <trans-unit id="8fe9b31e1cb4034ae05b748f916caeb04bc961ae" translate="yes" xml:space="preserve">
          <source>uses &lt;code&gt;$a&lt;/code&gt; for the width, &lt;code&gt;$b&lt;/code&gt; for the precision, and &lt;code&gt;$c&lt;/code&gt; as the value to format; while:</source>
          <target state="translated">использует &lt;code&gt;$a&lt;/code&gt; для ширины, &lt;code&gt;$b&lt;/code&gt; для точности и &lt;code&gt;$c&lt;/code&gt; как значение для форматирования; пока:</target>
        </trans-unit>
        <trans-unit id="09830868f1f121ce087a3809e753c0b99304db3d" translate="yes" xml:space="preserve">
          <source>uses dl_findfile() to determine the filename to load</source>
          <target state="translated">использует dl_findfile()для определения имени файла для загрузки</target>
        </trans-unit>
        <trans-unit id="5af968b0841a76d30d08c146e669a78b4cab19ad" translate="yes" xml:space="preserve">
          <source>uses empty string matches as separators to produce the output 'a:b:c'; thus, the empty string may be used to split EXPR into a list of its component characters.</source>
          <target state="translated">использует пустые совпадения строк в качестве разделителей для вывода 'a:b:c';таким образом,пустая строка может быть использована для разделения EXPR на список своих компонентных символов.</target>
        </trans-unit>
        <trans-unit id="9c891935852b3302589a0146d43ab52b0fa3de2f" translate="yes" xml:space="preserve">
          <source>uses empty string matches as separators to produce the output &lt;code&gt;a:b:c&lt;/code&gt;; thus, the empty string may be used to split EXPR into a list of its component characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fd05af98859035d1a5f230da49fa1011416f54" translate="yes" xml:space="preserve">
          <source>uses the 'b' in 'abc' as a separator to produce the output 'a:c'. However, this:</source>
          <target state="translated">использует 'b' в 'abc' в качестве разделителя для вывода 'a:c'.Однако,это:</target>
        </trans-unit>
        <trans-unit id="0385b247665cc9feec9dd5e3fae26654605693e5" translate="yes" xml:space="preserve">
          <source>uses the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; class.</source>
          <target state="translated">использует класс &lt;a href=&quot;threads&quot;&gt;нитей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c45c816514a9d0fe253989721442e7a2dc858372" translate="yes" xml:space="preserve">
          <source>uses the &lt;code&gt;b&lt;/code&gt; in &lt;code&gt;'abc'&lt;/code&gt; as a separator to produce the output &lt;code&gt;a:c&lt;/code&gt;. However, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1854e57bb3e0204fcdb39b3f71fdc0b1165103" translate="yes" xml:space="preserve">
          <source>uses the lexical variables that are maintained by the closure.</source>
          <target state="translated">использует лексические переменные,которые поддерживаются при закрытии.</target>
        </trans-unit>
        <trans-unit id="09d1afddd581a0eacf04d5d0d5756a7efff2579d" translate="yes" xml:space="preserve">
          <source>uses the object passed to the method to store any context data, whereas the</source>
          <target state="translated">использует переданный в метод объект для хранения любых контекстных данных,в то время как объект</target>
        </trans-unit>
        <trans-unit id="c3ceef66b33c51bee6d1bb1d471003d812947110" translate="yes" xml:space="preserve">
          <source>uses the string &lt;code&gt;&quot;\n&quot;&lt;/code&gt; as the line delimiter.</source>
          <target state="translated">в качестве разделителя строк используется строка &lt;code&gt;&quot;\n&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3cd2678befce2c7f2ae3fa75bbf277408ae4f0c" translate="yes" xml:space="preserve">
          <source>usesocks.U</source>
          <target state="translated">usesocks.U</target>
        </trans-unit>
        <trans-unit id="f9de3288841199ccb6c310b320eb302bb6d60b04" translate="yes" xml:space="preserve">
          <source>usethreads.U</source>
          <target state="translated">usethreads.U</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="ef2c97b86bc74213c765549ddf68b4f640c57c39" translate="yes" xml:space="preserve">
          <source>using &lt;a href=&quot;http://man.he.net/man2/lseek&quot;&gt;lseek(2)&lt;/a&gt;. FILEHANDLE may be an expression whose value gives the name of the filehandle. The values for WHENCE are &lt;code&gt;0&lt;/code&gt; to set the new position to POSITION; &lt;code&gt;1&lt;/code&gt; to set it to the current position plus POSITION; and &lt;code&gt;2&lt;/code&gt; to set it to EOF plus POSITION, typically negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598c217817c73e5780e3966c099266496e2980d1" translate="yes" xml:space="preserve">
          <source>using GNU libc and you can ignore &lt;code&gt;LANGUAGE&lt;/code&gt; .</source>
          <target state="translated">используя GNU libc, и вы можете игнорировать &lt;code&gt;LANGUAGE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7ab0439ca2d580e4845590a60f824395ba7c62" translate="yes" xml:space="preserve">
          <source>using GNU libc and you can ignore &lt;code&gt;LANGUAGE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fc297cbc600394f05f8c2154dec797fd2616a9" translate="yes" xml:space="preserve">
          <source>using the &lt;b&gt;parseopts()&lt;/b&gt; method. The set of currently accepted parse-options is as follows:</source>
          <target state="translated">с помощью &lt;b&gt;метода parseopts ()&lt;/b&gt; . Набор принятых в настоящее время синтаксических опций выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="5ddf1529ff81cf1646da1b5ad744e5598d0ce2a2" translate="yes" xml:space="preserve">
          <source>using the G_EVAL flag, it promptly reset &lt;code&gt;$@&lt;/code&gt; . This results in the failure of the outermost test for &lt;code&gt;$@&lt;/code&gt; , and thereby the failure of the error trap.</source>
          <target state="translated">используя флаг G_EVAL, он быстро сбрасывает &lt;code&gt;$@&lt;/code&gt; . Это приводит к сбою самого внешнего теста для &lt;code&gt;$@&lt;/code&gt; и, следовательно, к сбою ловушки ошибок.</target>
        </trans-unit>
        <trans-unit id="0820ff5901a5159270b22207182f2cfebef68967" translate="yes" xml:space="preserve">
          <source>using the G_EVAL flag, it promptly reset &lt;code&gt;$@&lt;/code&gt;. This results in the failure of the outermost test for &lt;code&gt;$@&lt;/code&gt;, and thereby the failure of the error trap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb699932692b6b7e2ea37fceb7f7f660756e9c08" translate="yes" xml:space="preserve">
          <source>using the mkstemp() from this module.</source>
          <target state="translated">используя mkstemp()из этого модуля.</target>
        </trans-unit>
        <trans-unit id="15096566b8bf4d62f473ddd5d668fd41aaeea35d" translate="yes" xml:space="preserve">
          <source>usleep ( $useconds )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74206ccb17460da0011cfb062984120700d158f9" translate="yes" xml:space="preserve">
          <source>usrinc.U</source>
          <target state="translated">usrinc.U</target>
        </trans-unit>
        <trans-unit id="66c2fa4e9e56695791a43a16b1e7e46e2db759e4" translate="yes" xml:space="preserve">
          <source>usually</source>
          <target state="translated">usually</target>
        </trans-unit>
        <trans-unit id="f68489ebd04ca3a9cf85cc582f26b952d9e0e821" translate="yes" xml:space="preserve">
          <source>usually denotes an intensity, but the name does not matter). The number</source>
          <target state="translated">обычно обозначает интенсивность,но название не имеет значения).Число</target>
        </trans-unit>
        <trans-unit id="552fa32543fec03ccf6183c2b935ef13e3235d5b" translate="yes" xml:space="preserve">
          <source>usually have their own documentation, either in the</source>
          <target state="translated">обычно имеют свою собственную документацию,либо в</target>
        </trans-unit>
        <trans-unit id="5b8f21f7c75d9b9f23162e7287673f1417b09fab" translate="yes" xml:space="preserve">
          <source>usually need to be overridden by subclasses.</source>
          <target state="translated">обычно должны быть переопределены подклассами.</target>
        </trans-unit>
        <trans-unit id="f35e977202447fa29b00c199673188a6d0811d59" translate="yes" xml:space="preserve">
          <source>usually without needing to know which versions of perl to use as start and end revisions, as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde8b16abacfa7f9fada90430fe9a29449f6021b" translate="yes" xml:space="preserve">
          <source>utf16_to_utf8</source>
          <target state="translated">utf16_to_utf8</target>
        </trans-unit>
        <trans-unit id="d9aaae66847368171fad8d735e03a0a30163708b" translate="yes" xml:space="preserve">
          <source>utf16_to_utf8_reversed</source>
          <target state="translated">utf16_to_utf8_reversed</target>
        </trans-unit>
        <trans-unit id="81f0c4ab9b5679964eab3692a28c6daa905d6fc9" translate="yes" xml:space="preserve">
          <source>utf8</source>
          <target state="translated">utf8</target>
        </trans-unit>
        <trans-unit id="bf16403afd56538795ee624940c94265c7f38841" translate="yes" xml:space="preserve">
          <source>utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source code</source>
          <target state="translated">utf8-Perl pragma для включения/выключения UTF-8 (или UTF-EBCDIC)в исходном коде</target>
        </trans-unit>
        <trans-unit id="8a55e267e231fb42d7315571178272cd8e0ca77a" translate="yes" xml:space="preserve">
          <source>utf8 / &quot;Wide character in print&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c785784048f177ac818710465c9dce1b458981" translate="yes" xml:space="preserve">
          <source>utf8 data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a594f2111ee293665faf1e597c91b88defdbc7c8" translate="yes" xml:space="preserve">
          <source>utf8.h</source>
          <target state="translated">utf8.h</target>
        </trans-unit>
        <trans-unit id="c23f5615906bc56a2ba756aeb96aa29939293657" translate="yes" xml:space="preserve">
          <source>utf8::unicode_to_native() and utf8::native_to_unicode()</source>
          <target state="translated">utf8::unicode_to_native()и utf8::native_to_unicode()</target>
        </trans-unit>
        <trans-unit id="7dac82ca32b1030f4424185fae73b6880a765d90" translate="yes" xml:space="preserve">
          <source>utf8_distance</source>
          <target state="translated">utf8_distance</target>
        </trans-unit>
        <trans-unit id="7d0f1a511bbdeb467797b2cb2e1fce26a20f1f05" translate="yes" xml:space="preserve">
          <source>utf8_hop</source>
          <target state="translated">utf8_hop</target>
        </trans-unit>
        <trans-unit id="7685a6b6d73246d06c91c2b616b920e390cc9c5b" translate="yes" xml:space="preserve">
          <source>utf8_hop_back</source>
          <target state="translated">utf8_hop_back</target>
        </trans-unit>
        <trans-unit id="d63ddc7e6107a1d98b06aff600ab7e9b741693ae" translate="yes" xml:space="preserve">
          <source>utf8_hop_forward</source>
          <target state="translated">utf8_hop_forward</target>
        </trans-unit>
        <trans-unit id="a771a1b2d9fd5a6e2ba308697abcc9763e3e3861" translate="yes" xml:space="preserve">
          <source>utf8_hop_safe</source>
          <target state="translated">utf8_hop_safe</target>
        </trans-unit>
        <trans-unit id="9e4b320eedfb44001a171f2b8ca5d579b28c5d18" translate="yes" xml:space="preserve">
          <source>utf8_length</source>
          <target state="translated">utf8_length</target>
        </trans-unit>
        <trans-unit id="186738a6bc7116c632c74c0447e4cf282f9b3d21" translate="yes" xml:space="preserve">
          <source>utf8_to_bytes</source>
          <target state="translated">utf8_to_bytes</target>
        </trans-unit>
        <trans-unit id="8f4497897eb2e648f000a7b7abb093986b721356" translate="yes" xml:space="preserve">
          <source>utf8_to_uvchr</source>
          <target state="translated">utf8_to_uvchr</target>
        </trans-unit>
        <trans-unit id="2ab5ed375b631b40a85a14eb893d8a19c4207efe" translate="yes" xml:space="preserve">
          <source>utf8_to_uvchr_buf</source>
          <target state="translated">utf8_to_uvchr_buf</target>
        </trans-unit>
        <trans-unit id="25a4ee76b31039e084260c9c17d411878c6fa82d" translate="yes" xml:space="preserve">
          <source>utf8_to_uvchr_buf_helper</source>
          <target state="translated">utf8_to_uvchr_buf_helper</target>
        </trans-unit>
        <trans-unit id="b1f213b77a6f6572d9a478339eab6e36e02a5cf3" translate="yes" xml:space="preserve">
          <source>utf8_to_uvuni</source>
          <target state="translated">utf8_to_uvuni</target>
        </trans-unit>
        <trans-unit id="9b962956de20b92131fe706ba67bd5e54e165fe5" translate="yes" xml:space="preserve">
          <source>utf8_to_uvuni_buf</source>
          <target state="translated">utf8_to_uvuni_buf</target>
        </trans-unit>
        <trans-unit id="4029d13c1fb28c650fa1b00e9cc3491ec43714a7" translate="yes" xml:space="preserve">
          <source>utf8n_to_uvchr</source>
          <target state="translated">utf8n_to_uvchr</target>
        </trans-unit>
        <trans-unit id="94b57ebbfa812b0d52815f40f8359413722f07ef" translate="yes" xml:space="preserve">
          <source>utf8n_to_uvchr_error</source>
          <target state="translated">utf8n_to_uvchr_error</target>
        </trans-unit>
        <trans-unit id="a479adfa7d5a20e92ed27b6198f89b0e85b4d0d2" translate="yes" xml:space="preserve">
          <source>utf8n_to_uvchr_msgs</source>
          <target state="translated">utf8n_to_uvchr_msgs</target>
        </trans-unit>
        <trans-unit id="c4259b4a365bbd7fcafb6468ba0de6847fe4300d" translate="yes" xml:space="preserve">
          <source>utf8n_to_uvuni</source>
          <target state="translated">utf8n_to_uvuni</target>
        </trans-unit>
        <trans-unit id="1817968011ad57f4fc7f6411c6afa179d20d5f52" translate="yes" xml:space="preserve">
          <source>utfebcdic.h</source>
          <target state="translated">utfebcdic.h</target>
        </trans-unit>
        <trans-unit id="ccf120ba24ab73f5ca75edfecede60e684a35e77" translate="yes" xml:space="preserve">
          <source>utility (which should be installed if you have gcc 3.0 or newer installed).</source>
          <target state="translated">утилита (которая должна быть установлена,если у вас установлен gcc 3.0 или новее).</target>
        </trans-unit>
        <trans-unit id="e41e3186138fd652f131d74e1372b713a50e4b13" translate="yes" xml:space="preserve">
          <source>utility available from the shell or from the C library. Consult your system's documentation for information on iconv.</source>
          <target state="translated">утилита,доступная из оболочки или из библиотеки C.Обратитесь к системной документации для получения информации по иконкеv.</target>
        </trans-unit>
        <trans-unit id="4fdd7e64e9e4f34f325d3712aee75fdf123eaaa7" translate="yes" xml:space="preserve">
          <source>utility is distributed as part of the &lt;a href=&quot;Module::Starter&quot;&gt;Module::Starter&lt;/a&gt; CPAN package. It creates a directory with stubs of all the necessary files to start a new module, according to recent &quot;best practice&quot; for module development, and is invoked from the command line, thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b875306388033d91efeec1a88fa3e69e64258572" translate="yes" xml:space="preserve">
          <source>utility is distributed as part of the &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Starter&quot;&gt;Module::Starter&lt;/a&gt; CPAN package. It creates a directory with stubs of all the necessary files to start a new module, according to recent &quot;best practice&quot; for module development, and is invoked from the command line, thus:</source>
          <target state="translated">Утилита распространяется как часть пакета &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Starter&quot;&gt;Module :: Starter&lt;/a&gt; CPAN. Он создает каталог с заглушками всех файлов, необходимых для запуска нового модуля, в соответствии с последними &quot;лучшими практиками&quot; разработки модулей, и вызывается из командной строки, таким образом:</target>
        </trans-unit>
        <trans-unit id="d1c19560c50c6028812fe75cd093528162e899fa" translate="yes" xml:space="preserve">
          <source>utility which can be used to package Perl scripts and/or Perl library directories into SIS files, which can be installed to the device. To run the sisify.pl utility, you will need to have the 'makesis' and 'uidcrc' utilities already installed. If you don't have the Win32 SDKs, you may try for example &lt;a href=&quot;http://gnupoc.sourceforge.net/&quot;&gt;http://gnupoc.sourceforge.net/&lt;/a&gt; or &lt;a href=&quot;http://symbianos.org/~andreh/&quot;&gt;http://symbianos.org/~andreh/&lt;/a&gt;.</source>
          <target state="translated">утилита, которая может использоваться для упаковки сценариев Perl и / или каталогов библиотек Perl в файлы SIS, которые можно установить на устройство. Для запуска утилиты sisify.pl у вас должны быть уже установлены утилиты &amp;laquo;makeis&amp;raquo; и &amp;laquo;uidcrc&amp;raquo;. Если у вас нет Win32 SDK, вы можете попробовать, например, &lt;a href=&quot;http://gnupoc.sourceforge.net/&quot;&gt;http://gnupoc.sourceforge.net/&lt;/a&gt; или &lt;a href=&quot;http://symbianos.org/~andreh/&quot;&gt;http://symbianos.org/~andreh/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b20e9780dfec2e3ed9c87a6333e7f3f40af656" translate="yes" xml:space="preserve">
          <source>utility will look for errors in your markup.</source>
          <target state="translated">утилита будет искать ошибки в разметке.</target>
        </trans-unit>
        <trans-unit id="abd2ad286bf2e0b3a412f26ebf2a2be21f7de0fc" translate="yes" xml:space="preserve">
          <source>utility.</source>
          <target state="translated">utility.</target>
        </trans-unit>
        <trans-unit id="e5b9fa572bc5bd55617cfad38a4c758f62792ceb" translate="yes" xml:space="preserve">
          <source>utility. If none of these apply then passive mode is used.</source>
          <target state="translated">Утилита.Если ни одна из них не применяется,то используется пассивный режим.</target>
        </trans-unit>
        <trans-unit id="c7bed6d783c875c092d49c40fd8051d2fa7b3af7" translate="yes" xml:space="preserve">
          <source>utilize</source>
          <target state="translated">utilize</target>
        </trans-unit>
        <trans-unit id="14409714f17737ef57cc19222c7537577b62d475" translate="yes" xml:space="preserve">
          <source>utils/</source>
          <target state="translated">utils/</target>
        </trans-unit>
        <trans-unit id="acdaec40e375d0ed21e862c4bbd0ccd230de21bf" translate="yes" xml:space="preserve">
          <source>utils/perldoc</source>
          <target state="translated">utils/perldoc</target>
        </trans-unit>
        <trans-unit id="760a22f0d3b89382b2ae33446840987c56669270" translate="yes" xml:space="preserve">
          <source>utils/perldoc.PL</source>
          <target state="translated">utils/perldoc.PL</target>
        </trans-unit>
        <trans-unit id="07be56c9175d1e0cf47abe27bd2ea4c74d0a71b7" translate="yes" xml:space="preserve">
          <source>utime</source>
          <target state="translated">utime</target>
        </trans-unit>
        <trans-unit id="e021c739267a3c120765dfd8bbf7a3476cf90409" translate="yes" xml:space="preserve">
          <source>utime LIST</source>
          <target state="translated">СПИСОК ВРЕМЕНИ</target>
        </trans-unit>
        <trans-unit id="3677a34e80cc23f49ad5f1fae628d097e1c1e1cb" translate="yes" xml:space="preserve">
          <source>uu encoding and decoding</source>
          <target state="translated">кодирование и декодирование uu</target>
        </trans-unit>
        <trans-unit id="84cc80da77dc844b797abdbb7eac416a4e49eb70" translate="yes" xml:space="preserve">
          <source>uutardist_target</source>
          <target state="translated">uutardist_target</target>
        </trans-unit>
        <trans-unit id="e4a7f205795403d34eba5ba891e6e72bdc185ce4" translate="yes" xml:space="preserve">
          <source>uvchr_to_utf8</source>
          <target state="translated">uvchr_to_utf8</target>
        </trans-unit>
        <trans-unit id="b154db59f6f625c7f66657ffd6c042600f1ce2a8" translate="yes" xml:space="preserve">
          <source>uvchr_to_utf8_flags</source>
          <target state="translated">uvchr_to_utf8_flags</target>
        </trans-unit>
        <trans-unit id="6e302cd00a4beb637ea90ddae2c419e4a24a5240" translate="yes" xml:space="preserve">
          <source>uvchr_to_utf8_flags_msgs</source>
          <target state="translated">uvchr_to_utf8_flags_msgs</target>
        </trans-unit>
        <trans-unit id="fac3fd32d53b58ba55a9aa857787c93cfd2cd8af" translate="yes" xml:space="preserve">
          <source>uvoffuni_to_utf8_flags</source>
          <target state="translated">uvoffuni_to_utf8_flags</target>
        </trans-unit>
        <trans-unit id="031521be966aca6fa594c85e4743ca45a923f41a" translate="yes" xml:space="preserve">
          <source>uvoffuni_to_utf8_flags_msgs</source>
          <target state="translated">uvoffuni_to_utf8_flags_msgs</target>
        </trans-unit>
        <trans-unit id="7497351132834d7892103406146d88988529c371" translate="yes" xml:space="preserve">
          <source>uvuni_to_utf8</source>
          <target state="translated">uvuni_to_utf8</target>
        </trans-unit>
        <trans-unit id="17f3328aa01585eed96b5e733f1260d01b770be5" translate="yes" xml:space="preserve">
          <source>uvuni_to_utf8_flags</source>
          <target state="translated">uvuni_to_utf8_flags</target>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="fdfe36c7870ab1c824bee3ec0da08620a1b4b18a" translate="yes" xml:space="preserve">
          <source>v [line]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367359b6bf8e4ab62a2e8c4a8d369c9e055fe57" translate="yes" xml:space="preserve">
          <source>v or version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c4f0a3864508ce28efb920b9b2102b78da0602" translate="yes" xml:space="preserve">
          <source>v-string</source>
          <target state="translated">v-string</target>
        </trans-unit>
        <trans-unit id="361122ca0dc8560cf79ff094f6193cd4093bfbfc" translate="yes" xml:space="preserve">
          <source>v1.0.0 &amp;ndash; first public release, 2012-02-27</source>
          <target state="translated">v1.0.0 - первый публичный выпуск, 27.02.2012</target>
        </trans-unit>
        <trans-unit id="1ff89fe452707ff11cdd66dd56c896def957dc56" translate="yes" xml:space="preserve">
          <source>v1.234.5</source>
          <target state="translated">v1.234.5</target>
        </trans-unit>
        <trans-unit id="b216231c5110f84b829aa27516a90312069b919a" translate="yes" xml:space="preserve">
          <source>v1.45 inherits from Pod::Simple as opposed to all previous versions inheriting from Pod::Parser. Do &lt;b&gt;not&lt;/b&gt; use Pod::Simple's interface when using Pod::Checker unless it is documented somewhere on this page. I repeat, DO &lt;b&gt;NOT&lt;/b&gt; USE POD::SIMPLE'S INTERFACE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d7aee24dfe0953c95b730f8777dd9d65515b2c" translate="yes" xml:space="preserve">
          <source>v5.22 core Perl runs on z/OS (formerly OS/390). Theoretically it could run on the successors of OS/400 on AS/400 minicomputers as well as VM/ESA, and BS2000 for S/390 Mainframes. Such computers use EBCDIC character sets internally (usually Character Code Set ID 0037 for OS/400 and either 1047 or POSIX-BC for S/390 systems).</source>
          <target state="translated">v5.22 ядро Perl работает на z/OS (ранее OS/390).Теоретически он может работать на преемниках OS/400 на миникомпьютерах AS/400,а также VM/ESA и BS2000 для мейнфреймов S/390.На таких компьютерах внутренне используются наборы символов EBCDIC (обычно это идентификатор набора символов 0037 для OS/400 и либо 1047,либо POSIX-BC для систем S/390).</target>
        </trans-unit>
        <trans-unit id="39f69c278f46165447f30d10acf54277aaa3d5fc" translate="yes" xml:space="preserve">
          <source>val</source>
          <target state="translated">val</target>
        </trans-unit>
        <trans-unit id="c204f11609a31497c02218b5e5a0a169c78effbe" translate="yes" xml:space="preserve">
          <source>valgrind</source>
          <target state="translated">valgrind</target>
        </trans-unit>
        <trans-unit id="53046fa987b388728c455fdf478e8c9a874dace2" translate="yes" xml:space="preserve">
          <source>valid as UTF-8. A line consisting of simply &quot;#&quot;, an e-acute, and any non-highbit byte, is sufficient to establish this file's encoding.</source>
          <target state="translated">действует как UTF-8.Для установления кодировки этого файла достаточно строки,состоящей из простого &quot;#&quot;,e-acute и любого несоседнего байта.</target>
        </trans-unit>
        <trans-unit id="1b2e4dda331c5bdd529decc6ff8c097010110880" translate="yes" xml:space="preserve">
          <source>valid_proto_string()</source>
          <target state="translated">valid_proto_string()</target>
        </trans-unit>
        <trans-unit id="42d3aa66690369b2a9863e9ea376a9311b638ba5" translate="yes" xml:space="preserve">
          <source>valid_utf8_to_uvchr</source>
          <target state="translated">valid_utf8_to_uvchr</target>
        </trans-unit>
        <trans-unit id="80ba00adaa1b4446cdcca5bbd9d5e101e78ac6da" translate="yes" xml:space="preserve">
          <source>valid_utf8_to_uvuni</source>
          <target state="translated">valid_utf8_to_uvuni</target>
        </trans-unit>
        <trans-unit id="d30edfc3900bec3423d8ac3183b2557d7b53579b" translate="yes" xml:space="preserve">
          <source>validate()</source>
          <target state="translated">validate()</target>
        </trans-unit>
        <trans-unit id="945019fe470b3d5648ec128b564c5d2130c504d3" translate="yes" xml:space="preserve">
          <source>validate_proto</source>
          <target state="translated">validate_proto</target>
        </trans-unit>
        <trans-unit id="f32b67c7e26342af42efabc674d441dca0a281c5" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="translated">value</target>
        </trans-unit>
        <trans-unit id="1e7e5e9fa34075181b1c3ae301720ed61601a7be" translate="yes" xml:space="preserve">
          <source>value is returned. It is up to the user to call &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; if they so desire.</source>
          <target state="translated">значение возвращается. Пользователь может вызвать &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; если он того пожелает.</target>
        </trans-unit>
        <trans-unit id="f6d7058c218bb3dae94559db1c932b42605d46a4" translate="yes" xml:space="preserve">
          <source>value is returned. It is up to the user to call &lt;code&gt;reset&lt;/code&gt; if they so desire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216685f7982133ab569ad4dfe5f678f3e1dbbd1f" translate="yes" xml:space="preserve">
          <source>value of 4. Pod processors may complain if</source>
          <target state="translated">значение 4.процессоры стручки могут пожаловаться,если</target>
        </trans-unit>
        <trans-unit id="789c8a7b03ce1d1295ddf529b2afdf58a3077c30" translate="yes" xml:space="preserve">
          <source>value of the array pointed to by $AoA. If you wanted the C notion, you'd have to write &lt;code&gt;${$AoA[$i]}&lt;/code&gt; to force the &lt;code&gt;$AoA[$i]&lt;/code&gt; to get evaluated first before the leading &lt;code&gt;$&lt;/code&gt; dereferencer.</source>
          <target state="translated">значение массива, на которое указывает $ AoA. Если вам нужна идея C, вам нужно написать &lt;code&gt;${$AoA[$i]}&lt;/code&gt; чтобы заставить &lt;code&gt;$AoA[$i]&lt;/code&gt; оцениваться первым перед ведущим &lt;code&gt;$&lt;/code&gt; dereferencer.</target>
        </trans-unit>
        <trans-unit id="08668798148afad07d631910b71e55873b2010e9" translate="yes" xml:space="preserve">
          <source>value of the verb pattern, if the verb was involved in the failure of the match. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe44ac8c6973b5b0020ed98076f8432b17459eec" translate="yes" xml:space="preserve">
          <source>value which forms part of the method names described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;&quot;Package-specific Attribute Handling&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f2b9679159768f9feb1485f4697501baee27a2" translate="yes" xml:space="preserve">
          <source>value which forms part of the method names described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Package-specific Attribute Handling&lt;/a&gt; below.</source>
          <target state="translated">значение, которое является частью имен методов, описанных ниже в разделе &amp;laquo; &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Обработка атрибутов для конкретного пакета&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ad9fad6207027296ab17875f3071f0a7723f9b" translate="yes" xml:space="preserve">
          <source>value, with</source>
          <target state="translated">стоимость,с</target>
        </trans-unit>
        <trans-unit id="345c822266c73d960e7e049d7d44d3fac7c7ec19" translate="yes" xml:space="preserve">
          <source>value.</source>
          <target state="translated">value.</target>
        </trans-unit>
        <trans-unit id="1de6ed8b204380a369710406f1cf40db9ea3121e" translate="yes" xml:space="preserve">
          <source>value. If the user does not call either of these methods then the result will be a reference to a &lt;code&gt;Net::FTP::dataconn&lt;/code&gt; based object.</source>
          <target state="translated">стоимость. Если пользователь не вызывает ни один из этих методов, результатом будет ссылка на объект на основе &lt;code&gt;Net::FTP::dataconn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44415ffb02a62884cecd489fafaf5338dd30ca7a" translate="yes" xml:space="preserve">
          <source>value. If you want to see if the array is empty, just use &lt;code&gt;if (@array) { # not empty }&lt;/code&gt; for example.</source>
          <target state="translated">стоимость. Если вы хотите увидеть, пуст ли массив, просто используйте, например, &lt;code&gt;if (@array) { # not empty }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="417801383c26ee78fc40ea379e8eda01aa338144" translate="yes" xml:space="preserve">
          <source>value:</source>
          <target state="translated">value:</target>
        </trans-unit>
        <trans-unit id="048b0cb1b94379c74e7e8c8ede496e3edbea3386" translate="yes" xml:space="preserve">
          <source>values</source>
          <target state="translated">values</target>
        </trans-unit>
        <trans-unit id="17a7c4c339f3492b8acb953db7732092bf51412a" translate="yes" xml:space="preserve">
          <source>values ARRAY</source>
          <target state="translated">значения АРРЕЙ</target>
        </trans-unit>
        <trans-unit id="2634c50fe8c56acb708defe572a6f66bd0ae2e7a" translate="yes" xml:space="preserve">
          <source>values EXPR</source>
          <target state="translated">значения EXPR</target>
        </trans-unit>
        <trans-unit id="be8bd433d6363b535b0f1f125f2785bdc4c730c2" translate="yes" xml:space="preserve">
          <source>values HASH</source>
          <target state="translated">значения HASH</target>
        </trans-unit>
        <trans-unit id="3ea57ca13e694603f7108bdb09b7bf05d3dbe095" translate="yes" xml:space="preserve">
          <source>values between 0 and 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cc0505dbca3944a2927a21fd999a949878da59" translate="yes" xml:space="preserve">
          <source>values between 0 and 255. Similarly, the recognized background colors are &lt;code&gt;on_r&lt;i&gt;RRR&lt;/i&gt;g&lt;i&gt;GGG&lt;/i&gt;b&lt;i&gt;BBB&lt;/i&gt;&lt;/code&gt; for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52427f1ebccdb4fcea47bc5d0e5145b7b892e93d" translate="yes" xml:space="preserve">
          <source>values from 0 to 5, such as &lt;code&gt;rgb000&lt;/code&gt; or &lt;code&gt;rgb515&lt;/code&gt; . Similarly, the recognized background colors are:</source>
          <target state="translated">значения от 0 до 5, например &lt;code&gt;rgb000&lt;/code&gt; или &lt;code&gt;rgb515&lt;/code&gt; . Аналогичным образом распознаются следующие цвета фона:</target>
        </trans-unit>
        <trans-unit id="1f1f0dc1fce3a05d4540c3e7aab441e272a120c1" translate="yes" xml:space="preserve">
          <source>values from 0 to 5, such as &lt;code&gt;rgb000&lt;/code&gt; or &lt;code&gt;rgb515&lt;/code&gt;. Similarly, the recognized background colors are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74a3ebadeba9abb6c66ee5f8ffd1d486ee6fcb8" translate="yes" xml:space="preserve">
          <source>values from 0 to 5.</source>
          <target state="translated">значения от 0 до 5.</target>
        </trans-unit>
        <trans-unit id="e6ad9de07df6ee716656600f984ea5e44acf9199" translate="yes" xml:space="preserve">
          <source>values may already be available through the POSIX, Errno, or Fcntl modules.) The &lt;b&gt;pl2pm&lt;/b&gt; file in the distribution may help in your conversion, but it's just a mechanical process and therefore far from bulletproof.</source>
          <target state="translated">значения могут уже быть доступны через модули POSIX, Errno или Fcntl.) Файл &lt;b&gt;pl2pm&lt;/b&gt; в дистрибутиве может помочь в вашем преобразовании, но это всего лишь механический процесс и поэтому далеко не пуленепробиваемый.</target>
        </trans-unit>
        <trans-unit id="b6d212092cfb3c4de0fc9e126c8856174b98ea6d" translate="yes" xml:space="preserve">
          <source>values of variables, open file handles) are not affected by calling &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">значения переменных, дескрипторы открытых файлов) не затрагиваются вызовом &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="660e2ed06f78faef8b5e3bf402f6557cda07d382" translate="yes" xml:space="preserve">
          <source>values of variables, open file handles) are not affected by calling &lt;code&gt;dump&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78a54d54f417f166b040fd1193f989fbac7669b" translate="yes" xml:space="preserve">
          <source>vaproto.U</source>
          <target state="translated">vaproto.U</target>
        </trans-unit>
        <trans-unit id="e5b4e786e382d03c28e9edfab2d8149378ae69df" translate="yes" xml:space="preserve">
          <source>var</source>
          <target state="translated">var</target>
        </trans-unit>
        <trans-unit id="442355f6097724b9f300211ae8b56c9215274278" translate="yes" xml:space="preserve">
          <source>varargs.h</source>
          <target state="translated">varargs.h</target>
        </trans-unit>
        <trans-unit id="32c263408bb93f559077c6e179bd9ba556508a09" translate="yes" xml:space="preserve">
          <source>varglob (VARNAME)</source>
          <target state="translated">варглоб (Варнама)</target>
        </trans-unit>
        <trans-unit id="b46d0172433dd6895dac7544b9dacbb87b361e9f" translate="yes" xml:space="preserve">
          <source>variable</source>
          <target state="translated">variable</target>
        </trans-unit>
        <trans-unit id="6d4be5796ee90e66e89724d565fcf04fffb0caee" translate="yes" xml:space="preserve">
          <source>variable interpolation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28cdc93712b217f7e1a7f8c732549e7fca12478" translate="yes" xml:space="preserve">
          <source>variable. If found, and the value does not begin with a slash, and the terminal type name is the same as the environment string</source>
          <target state="translated">переменная.Если найдено,и значение не начинается со слеша,а имя типа терминала совпадает со строкой окружения</target>
        </trans-unit>
        <trans-unit id="73be3da84c74dd524e9174ed859ebd8fbe0ecb3e" translate="yes" xml:space="preserve">
          <source>variables with) the compartment's namespace and only that data will be visible to code evaluated in the compartment.</source>
          <target state="translated">переменные с)пространством имён помещения и только эти данные будут видны для кода,вычисляемого в помещении.</target>
        </trans-unit>
        <trans-unit id="2cdbd8867248aec3e255c4edd9177abb2d97c96f" translate="yes" xml:space="preserve">
          <source>variadic</source>
          <target state="translated">variadic</target>
        </trans-unit>
        <trans-unit id="6a59ea152047ab67df8e6fb2434c953c72e6647f" translate="yes" xml:space="preserve">
          <source>variant_byte_number</source>
          <target state="translated">variant_byte_number</target>
        </trans-unit>
        <trans-unit id="c127c64f4c59881b1a6741d4d0e16d9db5b90da9" translate="yes" xml:space="preserve">
          <source>variant_under_utf8_count</source>
          <target state="translated">variant_under_utf8_count</target>
        </trans-unit>
        <trans-unit id="e0fc50595f67cf73357568141754704ff19965eb" translate="yes" xml:space="preserve">
          <source>varname</source>
          <target state="translated">varname</target>
        </trans-unit>
        <trans-unit id="328b2913d40a4414bbacabb3a360dbd897edd419" translate="yes" xml:space="preserve">
          <source>vars</source>
          <target state="translated">vars</target>
        </trans-unit>
        <trans-unit id="d0738423627650c10c37e4c0cb07def0732c0229" translate="yes" xml:space="preserve">
          <source>vars - Perl pragma to predeclare global variable names</source>
          <target state="translated">vars-Perl прагма для предопределения имен глобальных переменных</target>
        </trans-unit>
        <trans-unit id="3fda85e28248463329b5095a7e36c028b3156227" translate="yes" xml:space="preserve">
          <source>vary in size. The alignment constraint of the structure can be greater than any of its elements. [And if you think that this doesn't affect anything common, dismember the next cellphone that you see. Many have ARM cores, and the ARM structure rules make &lt;code&gt;sizeof (foo_t)&lt;/code&gt; == 4]</source>
          <target state="translated">различаются по размеру. Ограничение выравнивания конструкции может быть больше любого из ее элементов. [И если вы думаете, что это не влияет ни на что общее, расчлените следующий мобильный телефон, который вы увидите. Многие из них имеют ядра ARM, и правила структуры ARM делают &lt;code&gt;sizeof (foo_t)&lt;/code&gt; == 4]</target>
        </trans-unit>
        <trans-unit id="bc997f6b532a64f46192e63cb27d866b3f751883" translate="yes" xml:space="preserve">
          <source>vcmp</source>
          <target state="translated">vcmp</target>
        </trans-unit>
        <trans-unit id="9c0ea36b72f7347fbc37fa7e3a8c6ebdb2e6c847" translate="yes" xml:space="preserve">
          <source>vcroak</source>
          <target state="translated">vcroak</target>
        </trans-unit>
        <trans-unit id="48b6af594a6f1884b8e83ac94121f4b618d4e6cc" translate="yes" xml:space="preserve">
          <source>vdeb</source>
          <target state="translated">vdeb</target>
        </trans-unit>
        <trans-unit id="b803e7ca5c714dbd85bf00d511fbc99a77690ad2" translate="yes" xml:space="preserve">
          <source>vec</source>
          <target state="translated">vec</target>
        </trans-unit>
        <trans-unit id="c54a18ac21d0acf2be7f8a4af68b6de9a68db6ff" translate="yes" xml:space="preserve">
          <source>vec EXPR,OFFSET,BITS</source>
          <target state="translated">vec EXPR,OFFSET,BITS</target>
        </trans-unit>
        <trans-unit id="027c1146b1b8f9274e5a4cfd7a959e328a326cd6" translate="yes" xml:space="preserve">
          <source>vector</source>
          <target state="translated">vector</target>
        </trans-unit>
        <trans-unit id="eaf07e13bf74ea47db6f4ba0e7cbfa9a921a7765" translate="yes" xml:space="preserve">
          <source>vector argument not supported with alpha versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32af47b87ac2b19a971faaedbed3373dcd83c6e8" translate="yes" xml:space="preserve">
          <source>vector flag</source>
          <target state="translated">векторный флаг</target>
        </trans-unit>
        <trans-unit id="f997c58732c07191b9cf44ba3c5fdd710cc19a22" translate="yes" xml:space="preserve">
          <source>vendorarch.U</source>
          <target state="translated">vendorarch.U</target>
        </trans-unit>
        <trans-unit id="78c0f01568b26ab7021a574fad5f974198aad6d0" translate="yes" xml:space="preserve">
          <source>vendorbin.U</source>
          <target state="translated">vendorbin.U</target>
        </trans-unit>
        <trans-unit id="660495819236779e293a0a32c3609f3b6829ad8a" translate="yes" xml:space="preserve">
          <source>vendorhtml1dir.U</source>
          <target state="translated">vendorhtml1dir.U</target>
        </trans-unit>
        <trans-unit id="ba034d33799b6d494964ade71fe262b57e78da69" translate="yes" xml:space="preserve">
          <source>vendorhtml3dir.U</source>
          <target state="translated">vendorhtml3dir.U</target>
        </trans-unit>
        <trans-unit id="5c5f94ad3d73d98afb7e36c994b2d58e93b157c9" translate="yes" xml:space="preserve">
          <source>vendorlib.U</source>
          <target state="translated">vendorlib.U</target>
        </trans-unit>
        <trans-unit id="2284692bf04e52a99af83b0173dbfd7bb5474851" translate="yes" xml:space="preserve">
          <source>vendorman1dir.U</source>
          <target state="translated">vendorman1dir.U</target>
        </trans-unit>
        <trans-unit id="0bb32aac5c75643dd8a475440312246f61ee79e2" translate="yes" xml:space="preserve">
          <source>vendorman3dir.U</source>
          <target state="translated">vendorman3dir.U</target>
        </trans-unit>
        <trans-unit id="105d52e11b963cf884747461ead872a0d154eae4" translate="yes" xml:space="preserve">
          <source>vendorprefix.U</source>
          <target state="translated">vendorprefix.U</target>
        </trans-unit>
        <trans-unit id="e5ff5428b3a391d0a31fc7b9d32363c3703413d8" translate="yes" xml:space="preserve">
          <source>vendorscript.U</source>
          <target state="translated">vendorscript.U</target>
        </trans-unit>
        <trans-unit id="5e0b8aa15aad848de36cf3fd23d80803845b78d5" translate="yes" xml:space="preserve">
          <source>ver</source>
          <target state="translated">ver</target>
        </trans-unit>
        <trans-unit id="3a4dc0c486f7ec2c6e9ab752e3ce6d8bf47f6d1c" translate="yes" xml:space="preserve">
          <source>verbatim paragraphs, but</source>
          <target state="translated">дословные абзацы,но</target>
        </trans-unit>
        <trans-unit id="3f73a838273f8b6a5792b9b4f27d36e76a0078b9" translate="yes" xml:space="preserve">
          <source>verbose</source>
          <target state="translated">verbose</target>
        </trans-unit>
        <trans-unit id="e1f2aa2d0b586c6bed93a4a3d544b2c2dc1827b9" translate="yes" xml:space="preserve">
          <source>verbose =&amp;gt; $bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6699df163a7658fea9b25e953658e43c10171cc8" translate="yes" xml:space="preserve">
          <source>verify ( ADDRESS )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1304f7ac1bfbbd2d8339d21fefac7161a487962" translate="yes" xml:space="preserve">
          <source>verify_opset (OPSET, ...)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>
        </trans-unit>
        <trans-unit id="1e9744dd208039bb003db329ab004f53031ec395" translate="yes" xml:space="preserve">
          <source>version - Perl extension for Version Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd4d5aaaaf8faae2312b63e6b30da46078d7f8e" translate="yes" xml:space="preserve">
          <source>version 0.018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a7754dc900fc69e091dc725ff679d6345812e8" translate="yes" xml:space="preserve">
          <source>version 0.020</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08a78e4d8553f237c2b75a537d874a5349598e8" translate="yes" xml:space="preserve">
          <source>version 0.076</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b94753b152e0687bf16e0e66bde6c46129e227" translate="yes" xml:space="preserve">
          <source>version 0.2304</source>
          <target state="translated">версия 0.2304</target>
        </trans-unit>
        <trans-unit id="59e47f870db61f53930f6bfb7196acbc325a0fb0" translate="yes" xml:space="preserve">
          <source>version 0.2309</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da78c3388782a77d1dc3ff066b5116f55fcf16b4" translate="yes" xml:space="preserve">
          <source>version 1.000037</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69a8d293137ba6e9e14606b76b794ad5ba37abd" translate="yes" xml:space="preserve">
          <source>version 1.010</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aa6f8fde3c89137d1a02f4303d58612486697f" translate="yes" xml:space="preserve">
          <source>version 1.28</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ac6ea1ff9c002c30c590cc6d63a98d39a0b85d" translate="yes" xml:space="preserve">
          <source>version 1.4414</source>
          <target state="translated">версия 1.4414</target>
        </trans-unit>
        <trans-unit id="76c801534aba92a44e1c434c81eb16f53ac7ddba" translate="yes" xml:space="preserve">
          <source>version 1.70</source>
          <target state="translated">версия 1.70</target>
        </trans-unit>
        <trans-unit id="0b8a7ab887f39bcf6eb205560fb225202ea22652" translate="yes" xml:space="preserve">
          <source>version 1.72</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edea1f7390c55fc9b6c85c7eaff41c8aa7ac463" translate="yes" xml:space="preserve">
          <source>version 2.140</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84c3069d709d377fe9cdad33583ef23a7efb092" translate="yes" xml:space="preserve">
          <source>version 2.150010</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dd6edfb9d761a98efb572f5834520db1b98413" translate="yes" xml:space="preserve">
          <source>version 3.1, this means configuring with &lt;code&gt;-Doptimize=-g3&lt;/code&gt; . Other compilers might use a different switch (if they support debugging macros at all).</source>
          <target state="translated">версия 3.1, это означает настройку с &lt;code&gt;-Doptimize=-g3&lt;/code&gt; . Другие компиляторы могут использовать другой переключатель (если они вообще поддерживают отладочные макросы).</target>
        </trans-unit>
        <trans-unit id="42791378eb5f03cd7efe5a5c1043d47ae5bddd22" translate="yes" xml:space="preserve">
          <source>version 3.1, this means configuring with &lt;code&gt;-Doptimize=-g3&lt;/code&gt;. Other compilers might use a different switch (if they support debugging macros at all).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8e3493b0cc6a16d5dae9adf9f2dd0db64b3340" translate="yes" xml:space="preserve">
          <source>version 5.021009</source>
          <target state="translated">версия 5.021009</target>
        </trans-unit>
        <trans-unit id="fab7e2e6c036b7a9e0181e06bb95905613e3c280" translate="yes" xml:space="preserve">
          <source>version 5.20200523</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9f1f2300bb8f65cae0f07d8c5462081befc31c" translate="yes" xml:space="preserve">
          <source>version &lt;b&gt;(required)&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d2f7e0b9f8b8f230b98d6215f70ce9e9142a5e" translate="yes" xml:space="preserve">
          <source>version mismatch</source>
          <target state="translated">несовпадение версий</target>
        </trans-unit>
        <trans-unit id="e6d98fbd6e1f722af1a7187d887c11be3eebc59e" translate="yes" xml:space="preserve">
          <source>version number to standard output, then exits.</source>
          <target state="translated">номер версии на стандартный вывод,затем выходит.</target>
        </trans-unit>
        <trans-unit id="753706ebef33a950942786467c39030e3338394b" translate="yes" xml:space="preserve">
          <source>version of documentation (&lt;b&gt;very&lt;/b&gt; recommended) outside of OS/2, one needs an IBM's reader (may be available on IBM ftp sites (?) (URL anyone?)) or shipped with PC DOS 7.0 and IBM's Visual Age C++ 3.5.</source>
          <target state="translated">версия документации ( &lt;b&gt;очень&lt;/b&gt; рекомендуется) вне OS / 2, требуется читатель IBM (может быть доступен на ftp-сайтах IBM (?) (URL-адрес?)) или поставляться с PC DOS 7.0 и IBM Visual Age C ++ 3.5.</target>
        </trans-unit>
        <trans-unit id="8debcc6e279c738f85bcad06098d11cd2de6baac" translate="yes" xml:space="preserve">
          <source>version of the callback with the same args, or if the f is invalid, set errno to EBADF and return</source>
          <target state="translated">версия обратного вызова с теми же аргументами,или если f недействительна,установите errno в EBADF и возвращайте</target>
        </trans-unit>
        <trans-unit id="da458f9f51eff82b9638d6edc4d1ce471a6ba279" translate="yes" xml:space="preserve">
          <source>version of the callback with the same args, or if the f is invalid, set errno to EBADF.</source>
          <target state="translated">версию обратного вызова с теми же аргументами,или если f недействительна,установите errno в EBADF.</target>
        </trans-unit>
        <trans-unit id="a2eb90561fd99e3e214231b4376190cf697028ad" translate="yes" xml:space="preserve">
          <source>version($package)</source>
          <target state="translated">version($package)</target>
        </trans-unit>
        <trans-unit id="487013207ed7c3cb3a7f74a3b17b3e253c524781" translate="yes" xml:space="preserve">
          <source>version()</source>
          <target state="translated">version()</target>
        </trans-unit>
        <trans-unit id="5a39b5188a546cfb958abc453eeb19b2bec53bfa" translate="yes" xml:space="preserve">
          <source>version.pm provides an overloaded version object that is designed to both encapsulate the author's intended $VERSION assignment as well as make it completely natural to use those objects as if they were numbers (e.g. for comparisons). To do this, a version object contains both the original representation as typed by the author, as well as a parsed representation to ease comparisons. Version objects employ &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; methods to simplify code that needs to compare, print, etc the objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d188558a424efbc4d8356b4ed5f1c9c2fdba669" translate="yes" xml:space="preserve">
          <source>version.pod</source>
          <target state="translated">version.pod</target>
        </trans-unit>
        <trans-unit id="89ea6fd5613838ed30c0baa85610d353411b9790" translate="yes" xml:space="preserve">
          <source>version/</source>
          <target state="translated">version/</target>
        </trans-unit>
        <trans-unit id="636593de67e783331b57ae2dba0e1181ac91cb43" translate="yes" xml:space="preserve">
          <source>version/archname/</source>
          <target state="translated">version/archname/</target>
        </trans-unit>
        <trans-unit id="43ec70e6e8036e0c5df8fc98d8beebd78c67da9d" translate="yes" xml:space="preserve">
          <source>version::Internals</source>
          <target state="translated">version::Internals</target>
        </trans-unit>
        <trans-unit id="5479ded628d1ae4c01c475d406613219540bdb82" translate="yes" xml:space="preserve">
          <source>version::Internals - Perl extension for Version Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377eac344dfb7b06bffecbd751ad37489a5b0895" translate="yes" xml:space="preserve">
          <source>version_timeout</source>
          <target state="translated">version_timeout</target>
        </trans-unit>
        <trans-unit id="278658a67f306172b28c147dd5c2b59021a8cb9c" translate="yes" xml:space="preserve">
          <source>versiononly.U</source>
          <target state="translated">versiononly.U</target>
        </trans-unit>
        <trans-unit id="95280caf11d86c580985b1777a2534b60278693b" translate="yes" xml:space="preserve">
          <source>versus/csh.whynot</source>
          <target state="translated">versus/csh.whynot</target>
        </trans-unit>
        <trans-unit id="e74295bfc2ed0b52d40073e8ebad555100df1380" translate="yes" xml:space="preserve">
          <source>very</source>
          <target state="translated">very</target>
        </trans-unit>
        <trans-unit id="f565e1178fde22502d0199216c613a7dbe288927" translate="yes" xml:space="preserve">
          <source>very costly time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cacac029430830dfca23f87b705db6949c1ea0" translate="yes" xml:space="preserve">
          <source>very same place</source>
          <target state="translated">то же самое место</target>
        </trans-unit>
        <trans-unit id="f2e6aa26ddeffa0689780c36cd916b4d3bb69f77" translate="yes" xml:space="preserve">
          <source>very simple</source>
          <target state="translated">очень простой</target>
        </trans-unit>
        <trans-unit id="d8af93441dc65b7bd4c325af25a2ac853fc68bd7" translate="yes" xml:space="preserve">
          <source>veryCompact</source>
          <target state="translated">veryCompact</target>
        </trans-unit>
        <trans-unit id="5e003e428f0ffe94849ebe99e98b3f1cfe632d4e" translate="yes" xml:space="preserve">
          <source>vfc</source>
          <target state="translated">vfc</target>
        </trans-unit>
        <trans-unit id="efbea1089258378284b4c64dc60908c3c6b4f3b3" translate="yes" xml:space="preserve">
          <source>vfork.h</source>
          <target state="translated">vfork.h</target>
        </trans-unit>
        <trans-unit id="2e180e22878b4d017bbc7eff0849c396506053ca" translate="yes" xml:space="preserve">
          <source>vform</source>
          <target state="translated">vform</target>
        </trans-unit>
        <trans-unit id="833da188871dde4c49e08271ff3deff524b7992c" translate="yes" xml:space="preserve">
          <source>vi</source>
          <target state="translated">vi</target>
        </trans-unit>
        <trans-unit id="a19e070e30616772d5e5bccf22dd825266237820" translate="yes" xml:space="preserve">
          <source>via</source>
          <target state="translated">via</target>
        </trans-unit>
        <trans-unit id="3b741f8124ff9a5cff40f1444836353cc05d2208" translate="yes" xml:space="preserve">
          <source>via &lt;code&gt;sh.exe&lt;/code&gt; via &lt;code&gt;perl.exe&lt;/code&gt; , but this is a price to pay if you want to use non-conforming program.</source>
          <target state="translated">через &lt;code&gt;sh.exe&lt;/code&gt; через &lt;code&gt;perl.exe&lt;/code&gt; , но это цена, которую нужно заплатить, если вы хотите использовать несовместимую программу.</target>
        </trans-unit>
        <trans-unit id="ce2c8ce18e7dfba0ed5d7cfa65c912e8674eff07" translate="yes" xml:space="preserve">
          <source>via &lt;code&gt;sh.exe&lt;/code&gt; via &lt;code&gt;perl.exe&lt;/code&gt;, but this is a price to pay if you want to use non-conforming program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b68c8b6949fa7692f33f6e0bbc33b71066897e0" translate="yes" xml:space="preserve">
          <source>via pointers</source>
          <target state="translated">указатели</target>
        </trans-unit>
        <trans-unit id="65f7d47d7029da85cdba5bc94831dbaa426ce6e5" translate="yes" xml:space="preserve">
          <source>via shell</source>
          <target state="translated">сквозная оболочка</target>
        </trans-unit>
        <trans-unit id="f1e73a24ed2cd61923e64ac891a0cf0355e98da1" translate="yes" xml:space="preserve">
          <source>vianame() normally returns an ordinal code point, but when the input name is of the form &lt;code&gt;U+...&lt;/code&gt; , it returns a chr instead. In this case, if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; is in effect and the character won't fit into a byte, it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and raises a warning.</source>
          <target state="translated">vianame () обычно возвращает порядковый номер кода, но когда имя входа имеет форму &lt;code&gt;U+...&lt;/code&gt; , вместо этого возвращается chr. В этом случае, если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , и символ не помещается в байт, он возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; и вызывает предупреждение.</target>
        </trans-unit>
        <trans-unit id="7f82a459843874024ac4b37982919794bff237ca" translate="yes" xml:space="preserve">
          <source>vianame() normally returns an ordinal code point, but when the input name is of the form &lt;code&gt;U+...&lt;/code&gt;, it returns a chr instead. In this case, if &lt;code&gt;use bytes&lt;/code&gt; is in effect and the character won't fit into a byte, it returns &lt;code&gt;undef&lt;/code&gt; and raises a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857a269ccef5d7fbbb98d9ddef77bc0b5d9701a9" translate="yes" xml:space="preserve">
          <source>vice versa</source>
          <target state="translated">наоборот</target>
        </trans-unit>
        <trans-unit id="af84d91fde168566c7dc18f3121ea2fbe651af1f" translate="yes" xml:space="preserve">
          <source>virtual</source>
          <target state="translated">virtual</target>
        </trans-unit>
        <trans-unit id="273d3211f66d3ed5bfd77d7571871ddef64f03b6" translate="yes" xml:space="preserve">
          <source>virtual time</source>
          <target state="translated">виртуальное время</target>
        </trans-unit>
        <trans-unit id="67d9a13c0ea811cb661b315208b763f672d69dda" translate="yes" xml:space="preserve">
          <source>visiPerl+</source>
          <target state="translated">visiPerl+</target>
        </trans-unit>
        <trans-unit id="3d8e7c1b9583beb6eeb6594c0d15855e988c4de7" translate="yes" xml:space="preserve">
          <source>vivify_defelem</source>
          <target state="translated">vivify_defelem</target>
        </trans-unit>
        <trans-unit id="94c1e40b04e0668779ca52fe50c9952f9764b18a" translate="yes" xml:space="preserve">
          <source>vivify_ref</source>
          <target state="translated">vivify_ref</target>
        </trans-unit>
        <trans-unit id="f5f3472b722bd709cadddc4ee58cc01eaa2e31e3" translate="yes" xml:space="preserve">
          <source>vload_module</source>
          <target state="translated">vload_module</target>
        </trans-unit>
        <trans-unit id="3b093d0dc021300d0284d51800e7d9193a683f8c" translate="yes" xml:space="preserve">
          <source>vmess</source>
          <target state="translated">vmess</target>
        </trans-unit>
        <trans-unit id="fd9d67fe1b466b2dd61a9d25c1346a7e24941513" translate="yes" xml:space="preserve">
          <source>vms/</source>
          <target state="translated">vms/</target>
        </trans-unit>
        <trans-unit id="32bf68c9b1bb340dd396abb1c86ec82840d8fd5d" translate="yes" xml:space="preserve">
          <source>vmsify</source>
          <target state="translated">vmsify</target>
        </trans-unit>
        <trans-unit id="92e911c38db62b637631e5e6d4e2f54b71f1b1ec" translate="yes" xml:space="preserve">
          <source>vmsish</source>
          <target state="translated">vmsish</target>
        </trans-unit>
        <trans-unit id="b6f4b16934c4d0ae88fbb45f248668506c1e515a" translate="yes" xml:space="preserve">
          <source>vmsish - Perl pragma to control VMS-specific language features</source>
          <target state="translated">vmsish-Perl прагма для управления специфическими для VMS особенностями языка</target>
        </trans-unit>
        <trans-unit id="840c1e98831f785b63714fc8cde7dc009f605556" translate="yes" xml:space="preserve">
          <source>vmsopen</source>
          <target state="translated">vmsopen</target>
        </trans-unit>
        <trans-unit id="3c7926b46a4368d08f21a3be76813bc8cd9a7f9c" translate="yes" xml:space="preserve">
          <source>vmspath</source>
          <target state="translated">vmspath</target>
        </trans-unit>
        <trans-unit id="47c9b6c34c34bb84a495fafd2ac449b137a21fcf" translate="yes" xml:space="preserve">
          <source>vmsperl list, vmsperl-subscribe@perl.org</source>
          <target state="translated">vmsperl-список,vmsperl-subscribe@perl.org</target>
        </trans-unit>
        <trans-unit id="43e59f877b6e30149c0ab30290dad796aad04379" translate="yes" xml:space="preserve">
          <source>vmsperl on the web, &lt;a href=&quot;http://www.sidhe.org/vmsperl/index.html&quot;&gt;http://www.sidhe.org/vmsperl/index.html&lt;/a&gt;</source>
          <target state="translated">vmsperl в Интернете, &lt;a href=&quot;http://www.sidhe.org/vmsperl/index.html&quot;&gt;http://www.sidhe.org/vmsperl/index.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90bfc416799787af4c10273022a61e4d2b453591" translate="yes" xml:space="preserve">
          <source>vmsrealpath</source>
          <target state="translated">vmsrealpath</target>
        </trans-unit>
        <trans-unit id="7dbb73a07119ea7148844f9bc12d76fb35a879e0" translate="yes" xml:space="preserve">
          <source>vmssysopen</source>
          <target state="translated">vmssysopen</target>
        </trans-unit>
        <trans-unit id="c546839d43a99414362b2c0a43224799df149062" translate="yes" xml:space="preserve">
          <source>vnewSVpvf</source>
          <target state="translated">vnewSVpvf</target>
        </trans-unit>
        <trans-unit id="9b2d9ffc3a465d7790473af657210832eb6db087" translate="yes" xml:space="preserve">
          <source>vnormal</source>
          <target state="translated">vnormal</target>
        </trans-unit>
        <trans-unit id="3523da90bef8d0b786e42d56977461c33c6dd06b" translate="yes" xml:space="preserve">
          <source>vnumify</source>
          <target state="translated">vnumify</target>
        </trans-unit>
        <trans-unit id="e9cede9b80ea3abd89c755f1117337d429162c86" translate="yes" xml:space="preserve">
          <source>void</source>
          <target state="translated">void</target>
        </trans-unit>
        <trans-unit id="8e19c817c720cc2d4b5c62be8969d15d78eb237a" translate="yes" xml:space="preserve">
          <source>void context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9901ea7bc50240c07dbde1f94425cb15aba6f905" translate="yes" xml:space="preserve">
          <source>volume names</source>
          <target state="translated">названия томов</target>
        </trans-unit>
        <trans-unit id="49c3830184f749fbad60dc76ce91042670b42663" translate="yes" xml:space="preserve">
          <source>vstringify</source>
          <target state="translated">vstringify</target>
        </trans-unit>
        <trans-unit id="5faa65a46441f5990a560502cd10eef567622feb" translate="yes" xml:space="preserve">
          <source>vverify</source>
          <target state="translated">vverify</target>
        </trans-unit>
        <trans-unit id="fcda5b662340d762f84d079a9fdff27c17470b59" translate="yes" xml:space="preserve">
          <source>vwarn</source>
          <target state="translated">vwarn</target>
        </trans-unit>
        <trans-unit id="2bb4885ce803b9f89aa5b4e6fddb44e07ffb04cd" translate="yes" xml:space="preserve">
          <source>vwarner</source>
          <target state="translated">vwarner</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="bf6f6f261198cba48e3c44f51ddf05075881f74b" translate="yes" xml:space="preserve">
          <source>w expr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="890ad40c07f3863125585ae26d1eb5009581cbd1" translate="yes" xml:space="preserve">
          <source>wait() and waitpid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16599a2caf0e43357dfd62cf1bbedac5d4f9aa78" translate="yes" xml:space="preserve">
          <source>wait() and waitpid() can be passed a pseudo-process ID returned by fork(). These calls will properly wait for the termination of the pseudo-process and return its status.</source>
          <target state="translated">wait()и waitpid()могут быть переданы псевдо-идентификатор процесса,возвращаемый функцией fork().Эти вызовы будут корректно ожидать завершения псевдо-процесса и возвращать ему статус.</target>
        </trans-unit>
        <trans-unit id="69c29097cb967e595fc1da3e699aa0f1c4465d43" translate="yes" xml:space="preserve">
          <source>wait(2)</source>
          <target state="translated">wait(2)</target>
        </trans-unit>
        <trans-unit id="9c8ff40ef6d055cafa6594a3e1f0887439eb59a3" translate="yes" xml:space="preserve">
          <source>wait4pid</source>
          <target state="translated">wait4pid</target>
        </trans-unit>
        <trans-unit id="a8497c29e208d2ed72e5f976bab5a590fe3de3ef" translate="yes" xml:space="preserve">
          <source>waitfh</source>
          <target state="translated">waitfh</target>
        </trans-unit>
        <trans-unit id="2adada1e71a33f071825f68863aa78076956f91c" translate="yes" xml:space="preserve">
          <source>waitpid</source>
          <target state="translated">waitpid</target>
        </trans-unit>
        <trans-unit id="7a5601dcd3b6db75e71ed2908ce3b9fba9edaa57" translate="yes" xml:space="preserve">
          <source>waitpid PID,FLAGS</source>
          <target state="translated">выжидательный ПИД,ФЛАГЫ</target>
        </trans-unit>
        <trans-unit id="33a4d790db96047d8f48435d61872442016da10a" translate="yes" xml:space="preserve">
          <source>waitpid(3)</source>
          <target state="translated">waitpid(3)</target>
        </trans-unit>
        <trans-unit id="fd058fa4ab8d6a0792ce2841bb7452beac62f85e" translate="yes" xml:space="preserve">
          <source>wakeonlan($mac, [$host, [$port]])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b0061098539515cd93819a7b475cb4d404858a" translate="yes" xml:space="preserve">
          <source>walkoptree(OP, METHOD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9308b2bf161b6c5d95d8de889ec70d10a356cf" translate="yes" xml:space="preserve">
          <source>walkoptree_debug(DEBUG)</source>
          <target state="translated">walkoptree_debug(DEBUG)</target>
        </trans-unit>
        <trans-unit id="b0d88aa083de089664bd50033f793ecb39a1ba2f" translate="yes" xml:space="preserve">
          <source>walksymtable(SYMREF, METHOD, RECURSE, PREFIX)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a714f64e3698739073c4107159d7e2ec7580a59" translate="yes" xml:space="preserve">
          <source>wallclock time</source>
          <target state="translated">настенное время</target>
        </trans-unit>
        <trans-unit id="96de3fd5a3dfc06b03a0beb1f7587b6e6941ca96" translate="yes" xml:space="preserve">
          <source>want a record separator of 0777, specify it as &lt;b&gt;-0x1FF&lt;/b&gt;. (This means that you cannot use the &lt;a href=&quot;#-x&quot;&gt;&quot;-x&quot;&lt;/a&gt; option with a directory name that consists of hexadecimal digits, or else Perl will think you have specified a hex number to &lt;b&gt;-0&lt;/b&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fae1179f0e54b2fbcfa0e1e58a96822af50f7c" translate="yes" xml:space="preserve">
          <source>want a record separator of 0777, specify it as &lt;b&gt;-0x1FF&lt;/b&gt;. (This means that you cannot use the &lt;b&gt;-x&lt;/b&gt; option with a directory name that consists of hexadecimal digits, or else Perl will think you have specified a hex number to &lt;b&gt;-0&lt;/b&gt;.)</source>
          <target state="translated">хотите разделитель записей 0777, укажите его как &lt;b&gt;-0x1FF&lt;/b&gt; . (Это означает, что вы не можете использовать параметр &lt;b&gt;-x&lt;/b&gt; с именем каталога, состоящим из шестнадцатеричных цифр, иначе Perl будет думать, что вы указали шестнадцатеричное число &lt;b&gt;равным -0&lt;/b&gt; .)</target>
        </trans-unit>
        <trans-unit id="fa1de8a88193794f6bcd0270bd3c78df8da87f33" translate="yes" xml:space="preserve">
          <source>want locks to block access, then go ahead and tie them to something and manage this yourself. This is done on purpose. While managing access to variables is a good thing, Perl doesn't force you out of its living room...</source>
          <target state="translated">хотите,чтобы замки блокировали доступ,а потом привяжите их к чему-нибудь и управляйте этим сами.Это сделано специально.В то время как управление доступом к переменным-это хорошо,Perl не заставляет вас выходить из своей гостиной...</target>
        </trans-unit>
        <trans-unit id="430e2f9e2b553be017639dc38d8145a216cfb84b" translate="yes" xml:space="preserve">
          <source>want to follow an &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; with some other statement, you can use one of these styles to avoid the warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f9df8dd43a1cbf03eed19f45b2ac004af68f76" translate="yes" xml:space="preserve">
          <source>want to follow an &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; with some other statement, you can use one of these styles to avoid the warning:</source>
          <target state="translated">хотите следовать за &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; другим оператором, вы можете использовать один из этих стилей, чтобы избежать предупреждения:</target>
        </trans-unit>
        <trans-unit id="1be38d5f877aab6abdfed0efc178920ad9fb017d" translate="yes" xml:space="preserve">
          <source>want to follow an &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; with some other statement, you can use one of these styles to avoid the warning:</source>
          <target state="translated">хотите следовать за &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; другим оператором, вы можете использовать один из этих стилей, чтобы избежать предупреждения:</target>
        </trans-unit>
        <trans-unit id="b18cfd0bd3a597bb757ac9a15224a9fadf94a687" translate="yes" xml:space="preserve">
          <source>want to make the same transformation to all keys and/or values in a DBM database.</source>
          <target state="translated">хотят сделать одно и то же преобразование для всех ключей и/или значений в базе данных DBM.</target>
        </trans-unit>
        <trans-unit id="891609b1d0a9a2a6ed2e0ee37725092c4205c0dd" translate="yes" xml:space="preserve">
          <source>want to make the same transformation to all keys and/or values in a DBM database. An example is when you need to encode your data in UTF-8 before writing to the database and then decode the UTF-8 when reading from the database file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8898e1e919ff199c09160ba3765d7cb61b031b32" translate="yes" xml:space="preserve">
          <source>want to make the same transformation to all keys, all values or both.</source>
          <target state="translated">хотят сделать одно и то же преобразование для всех клавиш,всех значений или обоих.</target>
        </trans-unit>
        <trans-unit id="f51e84e28b94e6a1e90ca25ef3ad13faa9a3700c" translate="yes" xml:space="preserve">
          <source>want to pass a meaningful metacharacter to the shell, such with the &lt;code&gt;&quot;*&quot;&lt;/code&gt; inside that final &lt;code&gt;unsorted/*.txt&lt;/code&gt; argument here, you can't use this alternate syntax. In this case, we have worked around it via Perl's handy &lt;code&gt;glob&lt;/code&gt; built-in function, which evaluates its argument into a list of filenames &amp;mdash; and we can safely pass that resulting list right into &lt;code&gt;open&lt;/code&gt;, as shown above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f812f0ab1052c34ba58a9aa6c43451d87573ad" translate="yes" xml:space="preserve">
          <source>want to subclass &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;'s grammar the best thing to do is read through the code. There's no easy way of summarizing it here.</source>
          <target state="translated">хотите &lt;a href=&quot;../parser&quot;&gt;создать&lt;/a&gt; подкласс грамматики TAP :: Parser, лучше всего прочитать код. Здесь нет простого способа подвести итог.</target>
        </trans-unit>
        <trans-unit id="b2a39e7d6c80fc057a0eb3b70c2d3b0a2a92a422" translate="yes" xml:space="preserve">
          <source>want to subclass &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;'s grammar the best thing to do is read through the code. There's no easy way of summarizing it here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f51d192120dd11344a546a620674d65ea15871" translate="yes" xml:space="preserve">
          <source>wantarray</source>
          <target state="translated">wantarray</target>
        </trans-unit>
        <trans-unit id="77921eed5c933c5cd87a4b266d8972f000e6983e" translate="yes" xml:space="preserve">
          <source>wanted()</source>
          <target state="translated">wanted()</target>
        </trans-unit>
        <trans-unit id="5383092a76f9a7f2052899ae6bf06e0ebac04977" translate="yes" xml:space="preserve">
          <source>wants</source>
          <target state="translated">wants</target>
        </trans-unit>
        <trans-unit id="4e586b17a78dad3ec40f5515d1f0072bbcf17f64" translate="yes" xml:space="preserve">
          <source>wants to succeed, so it uses the standard pattern back-off-and-retry and lets &lt;code&gt;\D*&lt;/code&gt; expand to just &quot;AB&quot; this time. Now there's indeed something following &quot;AB&quot; that is not &quot;123&quot;. It's &quot;C123&quot;, which suffices.</source>
          <target state="translated">хочет добиться успеха, поэтому он использует стандартный шаблон возврата и повторения и позволяет &lt;code&gt;\D*&lt;/code&gt; на этот раз расширяться до &quot;AB&quot;. Теперь действительно есть что-то после &quot;AB&quot;, которое не является &quot;123&quot;. Это &quot;C123&quot;, этого достаточно.</target>
        </trans-unit>
        <trans-unit id="4c8ea4760fcb5dff8ec1af0394a338be9df55090" translate="yes" xml:space="preserve">
          <source>warn</source>
          <target state="translated">warn</target>
        </trans-unit>
        <trans-unit id="dd055b1e3e77f358b39e3dcec164c30e81c00105" translate="yes" xml:space="preserve">
          <source>warn LIST</source>
          <target state="translated">предупредить СПИСОК</target>
        </trans-unit>
        <trans-unit id="c7d627029f960a00a820fb09dd882cfac7ab7de9" translate="yes" xml:space="preserve">
          <source>warn_nocontext</source>
          <target state="translated">warn_nocontext</target>
        </trans-unit>
        <trans-unit id="950dc0ea04deb0d6c766287d4d1e3bf5db49f42e" translate="yes" xml:space="preserve">
          <source>warn_sv</source>
          <target state="translated">warn_sv</target>
        </trans-unit>
        <trans-unit id="32339611df027ade1e4c7ce52fc19d50c05be10e" translate="yes" xml:space="preserve">
          <source>warner</source>
          <target state="translated">warner</target>
        </trans-unit>
        <trans-unit id="f77ef17efb4e8eba1b901c39be9c61072dc87c85" translate="yes" xml:space="preserve">
          <source>warner_nocontext</source>
          <target state="translated">warner_nocontext</target>
        </trans-unit>
        <trans-unit id="383fd7bf84aa027bdc40159c5d7c5805664a8eb2" translate="yes" xml:space="preserve">
          <source>warning</source>
          <target state="translated">warning</target>
        </trans-unit>
        <trans-unit id="3f4c20cf2e4f20443c501790a359300f5f40529f" translate="yes" xml:space="preserve">
          <source>warning messages. These messages will be displayed by default. But this is not the same as &lt;code&gt;verbose&lt;/code&gt; mode.</source>
          <target state="translated">предупреждающие сообщения. Эти сообщения будут отображаться по умолчанию. Но это не то же самое, что и &lt;code&gt;verbose&lt;/code&gt; режим.</target>
        </trans-unit>
        <trans-unit id="9f6be01127af67b499b57da0fae72ba37a45a9a4" translate="yes" xml:space="preserve">
          <source>warning.</source>
          <target state="translated">warning.</target>
        </trans-unit>
        <trans-unit id="dd0b3a6a5123562613947d4d18ddc919dc59bdce" translate="yes" xml:space="preserve">
          <source>warning_bits</source>
          <target state="translated">warning_bits</target>
        </trans-unit>
        <trans-unit id="bd207fab08951eb6cee30e4969e79ca50d1f7c65" translate="yes" xml:space="preserve">
          <source>warnings</source>
          <target state="translated">warnings</target>
        </trans-unit>
        <trans-unit id="3ce091add8db14f8e39ccb40d45911c210817c5d" translate="yes" xml:space="preserve">
          <source>warnings - Perl pragma to control optional warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69788f5b932d69519f6c6fa630facec7b52027c8" translate="yes" xml:space="preserve">
          <source>warnings. The difference is that although the previously mandatory warnings are still enabled by default, they can then be subsequently enabled or disabled with the lexical warning pragma. For example, in the code below, an &lt;code&gt;&quot;isn't numeric&quot;&lt;/code&gt; warning will only be reported for the &lt;code&gt;$a&lt;/code&gt; variable.</source>
          <target state="translated">предупреждения. Разница в том, что хотя ранее обязательные предупреждения по-прежнему включены по умолчанию, они могут быть впоследствии включены или отключены с помощью прагмы lexical warning. Например, в приведенном ниже коде предупреждение &lt;code&gt;&quot;isn't numeric&quot;&lt;/code&gt; будет выдано только для переменной &lt;code&gt;$a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a05775b0763806efaceb501f42ba1c2daa250b2" translate="yes" xml:space="preserve">
          <source>warnings::enabled($category)</source>
          <target state="translated">warnings::enabled($category)</target>
        </trans-unit>
        <trans-unit id="0efe62937e9c150a79c2cdbdcf25d73c677e0dca" translate="yes" xml:space="preserve">
          <source>warnings::enabled($object)</source>
          <target state="translated">warnings::enabled($object)</target>
        </trans-unit>
        <trans-unit id="895ac3c6fd6945e3ec8133db677fe54b6731aeec" translate="yes" xml:space="preserve">
          <source>warnings::enabled()</source>
          <target state="translated">warnings::enabled()</target>
        </trans-unit>
        <trans-unit id="b8c7e32144afd288bb6e5510bbcba9b4ea150764" translate="yes" xml:space="preserve">
          <source>warnings::enabled_at_level($category, $level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88cc9d6a60bace42a3c7eb92827b76d9b3076c0" translate="yes" xml:space="preserve">
          <source>warnings::fatal_enabled($category)</source>
          <target state="translated">warnings::fatal_enabled($category)</target>
        </trans-unit>
        <trans-unit id="8eab780c954dab0571b4e328af15ed1d5d7ac1d1" translate="yes" xml:space="preserve">
          <source>warnings::fatal_enabled($object)</source>
          <target state="translated">warnings::fatal_enabled($object)</target>
        </trans-unit>
        <trans-unit id="389934ab3437483805bb47cb317984089ef82e70" translate="yes" xml:space="preserve">
          <source>warnings::fatal_enabled()</source>
          <target state="translated">warnings::fatal_enabled()</target>
        </trans-unit>
        <trans-unit id="3e82046f0d4570f15171e3846b132c61f433b334" translate="yes" xml:space="preserve">
          <source>warnings::fatal_enabled_at_level($category, $level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25304d614db590d11bde4fb00d1385306732fa04" translate="yes" xml:space="preserve">
          <source>warnings::register</source>
          <target state="translated">warnings::register</target>
        </trans-unit>
        <trans-unit id="38c5e56d56c5509ef7afa87cb247e50311f9a294" translate="yes" xml:space="preserve">
          <source>warnings::register - warnings import function</source>
          <target state="translated">предупреждения::register-функция импорта предупреждений</target>
        </trans-unit>
        <trans-unit id="572db0cabfb983bbb52bca4294d68d887a18b745" translate="yes" xml:space="preserve">
          <source>warnings::register_categories(@names)</source>
          <target state="translated">warnings::register_categories(@names)</target>
        </trans-unit>
        <trans-unit id="d71d34370fc48aecda7efac336b135ae93d0c271" translate="yes" xml:space="preserve">
          <source>warnings::warn($category, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2768498b6c456bd413a122afffbaf4f71dff49cf" translate="yes" xml:space="preserve">
          <source>warnings::warn($message)</source>
          <target state="translated">warnings::warn($message)</target>
        </trans-unit>
        <trans-unit id="510223632a299412d30fa46f1b1f1f98d0b354f8" translate="yes" xml:space="preserve">
          <source>warnings::warn($object, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd82ceef173f078f755f99bc1d237a03443e07c" translate="yes" xml:space="preserve">
          <source>warnings::warn_at_level($category, $level, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72436a2120044ecf27ca0f71df6408fedadafbad" translate="yes" xml:space="preserve">
          <source>warnings::warnif($category, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fac69d3ce70dac06a45d0f1b764fb76695daab" translate="yes" xml:space="preserve">
          <source>warnings::warnif($message)</source>
          <target state="translated">warnings::warnif($message)</target>
        </trans-unit>
        <trans-unit id="4917a0d247382e3e78725d8bed226f251b0846c1" translate="yes" xml:space="preserve">
          <source>warnings::warnif($object, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df78376b9b77a9cbca980bb8cee3320f9420ed7c" translate="yes" xml:space="preserve">
          <source>warnings::warnif_at_level($category, $level, $message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de521d3619155e9228f83cc5f773bfcbfc52749" translate="yes" xml:space="preserve">
          <source>was</source>
          <target state="translated">was</target>
        </trans-unit>
        <trans-unit id="f062dc50293a6ebef0644413f16dbe666de1a1ed" translate="yes" xml:space="preserve">
          <source>was available through the &lt;code&gt;Thread.pm&lt;/code&gt; API. This threading model has been deprecated, and was removed as of Perl 5.10.0.)</source>
          <target state="translated">был доступен через API &lt;code&gt;Thread.pm&lt;/code&gt; . Эта потоковая модель устарела и была удалена в Perl 5.10.0.)</target>
        </trans-unit>
        <trans-unit id="1f19bc6bea19581bc44bbfb345e232346246a9a6" translate="yes" xml:space="preserve">
          <source>was called without options, but with the additional behaviour that the temporary file is removed by the object destructor if UNLINK is set to true (the default).</source>
          <target state="translated">был вызван без опций,но с дополнительным поведением,что временный файл удаляется деструктором объекта,если UNLINK установлена в true (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="f83d8fcf9f9f581aff720bc3d0f0345f5631b7ae" translate="yes" xml:space="preserve">
          <source>was changed to return some value(s), having specified G_DISCARD will mean that they will be wiped by the time control returns from</source>
          <target state="translated">был изменен,чтобы вернуть некоторые значения,указав G_DISCARD,это будет означать,что они будут стерты по возвращению контроля времени от</target>
        </trans-unit>
        <trans-unit id="358b1b390577816773119471fd35f58a152fe39c" translate="yes" xml:space="preserve">
          <source>was deliberately picked to avoid namespace tainting -- this module may be used as a base class so method names that appear in Encode::Encoding are avoided.</source>
          <target state="translated">был специально выбран,чтобы избежать запятнания пространства имен --этот модуль может быть использован в качестве базового класса,поэтому имена методов,которые появляются в Encode::Encoding,избегаются.</target>
        </trans-unit>
        <trans-unit id="4ef5ff209fb64ad33c3a43e09b9777f546e6d687" translate="yes" xml:space="preserve">
          <source>was disabled, IO::Zlib has not much chance of working.</source>
          <target state="translated">был нетрудоспособен,ИО::У Злиба мало шансов работать.</target>
        </trans-unit>
        <trans-unit id="c0031fc3fa962990af70319240516fc9adc0fce7" translate="yes" xml:space="preserve">
          <source>was generated by hand, it is suggested that the author be specified here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc39726c2752bbbdac1623dec16d2ec7ec5530fe" translate="yes" xml:space="preserve">
          <source>was modified after creation. Note that if a temp directory is your current directory, it cannot be removed - a warning will be given in this case. C</source>
          <target state="translated">был модифицирован после создания.Обратите внимание,что если временный каталог является вашим текущим,то он не может быть удален-в этом случае будет выдано предупреждение.C</target>
        </trans-unit>
        <trans-unit id="1c2cacfa9911a9740c2f39057d9556ce6e3a53b2" translate="yes" xml:space="preserve">
          <source>was not built, user must have HOST perl and properly edit</source>
          <target state="translated">не был построен,пользователь должен иметь HOST perl и правильно редактировать</target>
        </trans-unit>
        <trans-unit id="e1a5fcfd7b191fc7b62fed25dba309a60f6a62f6" translate="yes" xml:space="preserve">
          <source>was used to invoke native compiler to create HOST miniperl, which then facilitates cross-compiling process. Extension building support was added.</source>
          <target state="translated">был использован для вызова нативного компилятора для создания HOST miniperl,который затем облегчает кросс-компиляцию.Добавлена поддержка сборки расширений.</target>
        </trans-unit>
        <trans-unit id="66ffd23620129e551f53385e61617103184d89ce" translate="yes" xml:space="preserve">
          <source>was written, not even Perl 5.6.0 had been born yet, many features documented in the book remained unimplemented for a long time. Perl 5.8 corrected much of this, and the introduction of the UTF8 flag is one of them. You can think of there being two fundamentally different kinds of strings and string-operations in Perl: one a byte-oriented mode for when the internal UTF8 flag is off, and the other a character-oriented mode for when the internal UTF8 flag is on.</source>
          <target state="translated">был написан,даже Perl 5.6.0 еще не родился,многие черты,задокументированные в книге,оставались невыполненными в течение длительного времени.Perl 5.8 исправил многое из этого,и введение флага UTF8 является одним из них.В Perl можно придумать два принципиально разных типа строк и операций со строками:один-ориентированный на байты режим для случая,когда внутренний флаг UTF8 выключен,а другой-ориентированный на символы режим для случая,когда внутренний флаг UTF8 включен.</target>
        </trans-unit>
        <trans-unit id="9ea1e1a2b2d771820e619ae8a8ea0fa6c89f8cc7" translate="yes" xml:space="preserve">
          <source>was_lvalue_sub</source>
          <target state="translated">was_lvalue_sub</target>
        </trans-unit>
        <trans-unit id="181b4dd436ea635e496b642bf6193eba9531e9f5" translate="yes" xml:space="preserve">
          <source>wasn't installed or doesn't work for you, you can</source>
          <target state="translated">не был установлен или не работает на тебя,ты можешь</target>
        </trans-unit>
        <trans-unit id="a3bbe1a8f2f025b8b6c5b66937763bb2b9bebdf2" translate="yes" xml:space="preserve">
          <source>wat</source>
          <target state="translated">wat</target>
        </trans-unit>
        <trans-unit id="292b0901993f7e9d9a0d9b80542f9e59505ba5be" translate="yes" xml:space="preserve">
          <source>watch</source>
          <target state="translated">watch</target>
        </trans-unit>
        <trans-unit id="e7152c88856289d637f0929b846306d3b766534a" translate="yes" xml:space="preserve">
          <source>watch expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53aa762a10c4741758c57fe1af6e5ea0916edef6" translate="yes" xml:space="preserve">
          <source>wbh</source>
          <target state="translated">wbh</target>
        </trans-unit>
        <trans-unit id="146b5dae12284acb165c37a9e39cd9753cbc537e" translate="yes" xml:space="preserve">
          <source>wc</source>
          <target state="translated">wc</target>
        </trans-unit>
        <trans-unit id="ef35d3fdfcda49bff3dd3e76ad690e14e647c769" translate="yes" xml:space="preserve">
          <source>wck</source>
          <target state="translated">wck</target>
        </trans-unit>
        <trans-unit id="45bd0a272f28f8117c12214636d9fc1deeb9a5da" translate="yes" xml:space="preserve">
          <source>we can write the more sensible (see &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; for a full explanation of is() and other testing functions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe0dfef3d9b02dc86d540b75c78abe297bdb20e" translate="yes" xml:space="preserve">
          <source>we can write the more sensible (see &lt;a href=&quot;test/more&quot;&gt;Test::More&lt;/a&gt; for a full explanation of is() and other testing functions).</source>
          <target state="translated">мы можем написать более разумное (см. &lt;a href=&quot;test/more&quot;&gt;Test :: More&lt;/a&gt; для полного объяснения is () и других функций тестирования).</target>
        </trans-unit>
        <trans-unit id="8419df2ab51f8cb1466217a1a4f14649c05b6c1d" translate="yes" xml:space="preserve">
          <source>we have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f6e33ca845e7a167620cb9b0592d72afd41ebe" translate="yes" xml:space="preserve">
          <source>we need to construct the tree for &lt;code&gt;$a = $b + $c&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ea3c732a0cadb4cba11f8084adbc162ad146ff" translate="yes" xml:space="preserve">
          <source>we prevent backtracking and find the count of the longest matching string at each matching starting point like so:</source>
          <target state="translated">мы предотвращаем обратное отслеживание и находим счетчик самой длинной строки выравнивания в каждой начальной точке выравнивания,подобно этому:</target>
        </trans-unit>
        <trans-unit id="3d0b0b7bc297d97e84595de72ecb8a0030fdd17e" translate="yes" xml:space="preserve">
          <source>we've checked all its derived classes (i.e. before we tried &lt;code&gt;Mother&lt;/code&gt; and &lt;code&gt;MaternalGrandparent&lt;/code&gt; ).</source>
          <target state="translated">мы проверили все его производные классы (т.е. до того, как попробовали &lt;code&gt;Mother&lt;/code&gt; и &lt;code&gt;MaternalGrandparent&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7da04a13c6144445a9e40ca87afe08fb19cf3a44" translate="yes" xml:space="preserve">
          <source>we've checked all its derived classes (i.e. before we tried &lt;code&gt;Mother&lt;/code&gt; and &lt;code&gt;MaternalGrandparent&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431d4e35e7d98928b3b8e2544e63a493e23d5282" translate="yes" xml:space="preserve">
          <source>weak reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb9e7c68cc7aee9b7ae828bf3eb4f0c0ab95fcd" translate="yes" xml:space="preserve">
          <source>weaken</source>
          <target state="translated">weaken</target>
        </trans-unit>
        <trans-unit id="ae27e6a12247433968a2426ceb5f2faec9f64b2d" translate="yes" xml:space="preserve">
          <source>webget</source>
          <target state="translated">webget</target>
        </trans-unit>
        <trans-unit id="79b1646e47722f151fadfe6b4b9cfd75b5507a18" translate="yes" xml:space="preserve">
          <source>week number</source>
          <target state="translated">номер недели</target>
        </trans-unit>
        <trans-unit id="afe0444198ad67c415c63ad23456fcbf739b9bf7" translate="yes" xml:space="preserve">
          <source>weight</source>
          <target state="translated">weight</target>
        </trans-unit>
        <trans-unit id="b6894b43bb03af96eabb423701dc0bc9e071a3e0" translate="yes" xml:space="preserve">
          <source>were affected. This leads to spooky, incorrect action at a distance that is hard to debug.</source>
          <target state="translated">были затронуты.Это приводит к жутким,неправильным действиям на расстоянии,которое трудно отладить.</target>
        </trans-unit>
        <trans-unit id="0a8fc1dcdcb951afef794f96428b2c2d30d4cbdd" translate="yes" xml:space="preserve">
          <source>were fine, but the hard ones like</source>
          <target state="translated">были в порядке,но твердые,как</target>
        </trans-unit>
        <trans-unit id="b3e74349971aeb0151fc1bfbab7d483e124b80fe" translate="yes" xml:space="preserve">
          <source>were merged, so perlce build process comes in</source>
          <target state="translated">были объединены,так что процесс создания perlce приходит.</target>
        </trans-unit>
        <trans-unit id="9421eaaa36860a069e3089b1dd32635567692a1f" translate="yes" xml:space="preserve">
          <source>were the command shell, this would probably work better:</source>
          <target state="translated">если бы это был командный снаряд,это,наверное,сработало бы лучше:</target>
        </trans-unit>
        <trans-unit id="a110e6b9a361653a042e3f5dfbac4c6105693789" translate="yes" xml:space="preserve">
          <source>what</source>
          <target state="translated">what</target>
        </trans-unit>
        <trans-unit id="5028edf30c355a53744774edb4e246a65bdda7eb" translate="yes" xml:space="preserve">
          <source>what &lt;code&gt;File::GlobMapper&lt;/code&gt; does.</source>
          <target state="translated">что делает &lt;code&gt;File::GlobMapper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b36160c1ec6399ee58f1e1eaed45b1a11a29091d" translate="yes" xml:space="preserve">
          <source>what follows, it just leaves the choice open. Thus, after</source>
          <target state="translated">что следует за этим,это просто оставляет выбор открытым.Таким образом,после</target>
        </trans-unit>
        <trans-unit id="235cc5e25df726ef139cc4e3ed273f18953c310e" translate="yes" xml:space="preserve">
          <source>what it does</source>
          <target state="translated">что он делает</target>
        </trans-unit>
        <trans-unit id="c1576912aed55be9f20cbdb86381f89139b595e1" translate="yes" xml:space="preserve">
          <source>what you want to use to capture the output from a command; for that you should use merely backticks or &lt;a href=&quot;#qx%2FSTRING%2F&quot;&gt;&lt;code&gt;qx//&lt;/code&gt;&lt;/a&gt;, as described in &lt;a href=&quot;perlop#%60STRING%60&quot;&gt;&quot;`STRING`&quot; in perlop&lt;/a&gt;. Return value of -1 indicates a failure to start the program or an error of the &lt;a href=&quot;http://man.he.net/man2/wait&quot;&gt;wait(2)&lt;/a&gt; system call (inspect &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; for the reason).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a97de175ae265b931e0f47d8189ba1c158846c3" translate="yes" xml:space="preserve">
          <source>what you want to use to capture the output from a command; for that you should use merely backticks or &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;, as described in &lt;a href=&quot;perlop#%60STRING%60&quot;&gt;`STRING` in perlop&lt;/a&gt;. Return value of -1 indicates a failure to start the program or an error of the wait(2) system call (inspect $! for the reason).</source>
          <target state="translated">что вы хотите использовать для захвата вывода команды; для этого вы должны использовать просто обратные кавычки или &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; , как описано в &lt;a href=&quot;perlop#%60STRING%60&quot;&gt;`STRING` в perlop&lt;/a&gt; . Возвращаемое значение -1 указывает на сбой при запуске программы или ошибку системного вызова wait (2) (проверьте причину $!).</target>
        </trans-unit>
        <trans-unit id="3926fc849cd226411c2dc28dbb3c1ac9425d41ae" translate="yes" xml:space="preserve">
          <source>what you want to use to capture the output from a command; for that you should use merely backticks or &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;, as described in &lt;a href=&quot;../perlop#%60STRING%60&quot;&gt;`STRING` in perlop&lt;/a&gt;. Return value of -1 indicates a failure to start the program or an error of the wait(2) system call (inspect $! for the reason).</source>
          <target state="translated">что вы хотите использовать для захвата вывода команды; для этого вы должны использовать просто обратные кавычки или &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; , как описано в &lt;a href=&quot;../perlop#%60STRING%60&quot;&gt;`STRING` в perlop&lt;/a&gt; . Возвращаемое значение -1 указывает на сбой при запуске программы или ошибку системного вызова wait (2) (проверьте причину $!).</target>
        </trans-unit>
        <trans-unit id="2a01f2e26cea4a9807d9d068afa0bdc36ba5e00e" translate="yes" xml:space="preserve">
          <source>what you're doing, you can use the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers to force big- or little-endian byte-order on floating-point values.</source>
          <target state="translated">то, что вы делаете, вы можете использовать модификаторы &lt;code&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&lt;/code&gt; для принудительного порядка байтов с прямым или обратным порядком байтов для значений с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="d869db7fe62fb07c25a0403ecaea55031744b5fb" translate="yes" xml:space="preserve">
          <source>whatever</source>
          <target state="translated">whatever</target>
        </trans-unit>
        <trans-unit id="021bc9488a6a6118c1c75c3f7a5aeeaa12491ccd" translate="yes" xml:space="preserve">
          <source>whatever falls between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt;</source>
          <target state="translated">все, что попадает между &lt;code&gt;\Q&lt;/code&gt; и &lt;code&gt;\E&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30603fa9e0f620c305cd627ab0ff138a960c48bd" translate="yes" xml:space="preserve">
          <source>when</source>
          <target state="translated">when</target>
        </trans-unit>
        <trans-unit id="ed6268873901e8209d3ac22fc700c31706eaa9bd" translate="yes" xml:space="preserve">
          <source>when &quot;dumping&quot;; it has nothing to do with $| auto-flush.)</source>
          <target state="translated">при &quot;бросании&quot;;это не имеет никакого отношения к автопромывке $|).)</target>
        </trans-unit>
        <trans-unit id="c89dac7f6e160306ca10f788c9bd6a54efcd1ffc" translate="yes" xml:space="preserve">
          <source>when &lt;code&gt;xsubpp&lt;/code&gt; is invoked with &lt;code&gt;-s foo_&lt;/code&gt; will install a &lt;code&gt;foo_bar&lt;/code&gt; function in Perl, but really call &lt;code&gt;bar(i)&lt;/code&gt; in C. Most of the time, this is the opposite of what you want and failure modes are somewhat obscure, so please avoid this option where possible.</source>
          <target state="translated">когда &lt;code&gt;xsubpp&lt;/code&gt; вызывается с &lt;code&gt;-s foo_&lt;/code&gt; установит &lt;code&gt;foo_bar&lt;/code&gt; функцию в Perl, но на самом деле вызов &lt;code&gt;bar(i)&lt;/code&gt; в С. Большую часть времени, это противоположно тому , что вы хотите , и виды отказов несколько неясными, поэтому , пожалуйста , избежать этого вариант, где это возможно.</target>
        </trans-unit>
        <trans-unit id="75aed76d9314bc923e71101c151f2b2893f266e7" translate="yes" xml:space="preserve">
          <source>when another process is holding the lockfile. This is an experimental feature that is not yet tested very well. This second shell then does not write the history file, does not use the metadata file, and has a different prompt.</source>
          <target state="translated">когда другой процесс держит замок.Это экспериментальная функция,которая еще не протестирована очень хорошо.Эта вторая оболочка не записывает файл истории,не использует файл метаданных и имеет другую подсказку.</target>
        </trans-unit>
        <trans-unit id="58ecde95462d5104216d56768f577c7350fb30b7" translate="yes" xml:space="preserve">
          <source>when is experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964616827ebdcbd31d66560bf1e05ea1f8b5815a" translate="yes" xml:space="preserve">
          <source>when n and k are non-negative. This method implements the full Kronenburg extension (Kronenburg, M.J. &quot;The Binomial Coefficient for Negative Arguments.&quot; 18 May 2011. http://arxiv.org/abs/1105.3689/) illustrated by the following pseudo-code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1a27d93b87aa252d9684f7f42d0351ba582ec5" translate="yes" xml:space="preserve">
          <source>when necessary.</source>
          <target state="translated">когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="44248e18784ae26a400c98943c5b171efaca56f6" translate="yes" xml:space="preserve">
          <source>when the element to return happens to be &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd9d2e738a8b92221411f890d0e1eb0c5e3b660" translate="yes" xml:space="preserve">
          <source>when the element to return happens to be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">когда возвращаемый элемент оказывается &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b023844c7b290ca1a038802a6472c7aeafce41c" translate="yes" xml:space="preserve">
          <source>when the element to return happens to be &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">когда возвращаемый элемент оказывается &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94e8d83126a46666a564b1c81177abe2c908a36d" translate="yes" xml:space="preserve">
          <source>when the file is closed, or when an explicit flush is done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938c56ff8ee83ab6578974df30b9d1c7e33fe7dd" translate="yes" xml:space="preserve">
          <source>when the functions are called from within the scope of the &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt; pragma</source>
          <target state="translated">когда функции вызываются из области прагмы &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ce6402418c47b212eb07ca370a93108ff150f4a" translate="yes" xml:space="preserve">
          <source>when the imaginary part is zero (otherwise, it would not be called an extension, would it?).</source>
          <target state="translated">когда воображаемая часть равна нулю (иначе это не называлось бы расширением,не так ли?).</target>
        </trans-unit>
        <trans-unit id="eb1cef34e0771ae508dd63618b6d7ebc545d708d" translate="yes" xml:space="preserve">
          <source>when this tutorial was written. It has now been split off with &lt;code&gt;pp_unpack&lt;/code&gt; to its own file,</source>
          <target state="translated">когда был написан этот учебник. Теперь он разделен &lt;code&gt;pp_unpack&lt;/code&gt; в отдельный файл,</target>
        </trans-unit>
        <trans-unit id="ac26161b0187ead053283bca27ee59e832cfa160" translate="yes" xml:space="preserve">
          <source>when you ask for</source>
          <target state="translated">когда вы просите</target>
        </trans-unit>
        <trans-unit id="3e5e701932ff1e08475464ba8b75ee91dc43d41c" translate="yes" xml:space="preserve">
          <source>when you intended</source>
          <target state="translated">когда ты намеревался</target>
        </trans-unit>
        <trans-unit id="6e06c432fa349d548f06ebf0f8b460c130ec25ac" translate="yes" xml:space="preserve">
          <source>when you meant</source>
          <target state="translated">когда ты имела в виду</target>
        </trans-unit>
        <trans-unit id="320723f30d494b8eb54e4b744bfd8f4219fbd71c" translate="yes" xml:space="preserve">
          <source>when you meant to say</source>
          <target state="translated">когда ты хотел сказать</target>
        </trans-unit>
        <trans-unit id="0b09f6864ed10d92f6a10d3420ae332e50823d21" translate="yes" xml:space="preserve">
          <source>when you should have said</source>
          <target state="translated">когда ты должен был сказать</target>
        </trans-unit>
        <trans-unit id="bfe41b37d5bad835ce1295749ffd97e4c9fffaac" translate="yes" xml:space="preserve">
          <source>when you should have written this:</source>
          <target state="translated">когда ты должен был написать это:</target>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="ab1c267bd23a7a2761e1a1311799eacd65a53cf8" translate="yes" xml:space="preserve">
          <source>where &quot;ENCODING&quot; must be a valid encoding name that the Encode module recognises.</source>
          <target state="translated">где &quot;ENCODING&quot; должно быть действительным кодирующим именем,которое распознает модуль &quot;Encode&quot;.</target>
        </trans-unit>
        <trans-unit id="79921b21c24aca260a03cce0d0ff464489ada261" translate="yes" xml:space="preserve">
          <source>where &quot;quant&quot; is the name of a method you're using to quantify the noun &quot;piece&quot; with the number $params[0].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f76ee4872ba64c6359656344e5d58fab47ab470" translate="yes" xml:space="preserve">
          <source>where $MAKE is whatever 'make' program you have configured perl to use. Use &quot;perl -V:make&quot; to find out what this is. Some extensions may not provide a testsuite (so &quot;$MAKE test&quot; may not do anything or fail), but most serious ones do.</source>
          <target state="translated">где $MAKE-это любая 'make' программа,которую вы настроили для использования perl.Используйте &quot;perl -V:make&quot;,чтобы узнать,что это такое.Некоторые расширения могут не предоставлять тестовый набор (так что &quot;$MAKE test&quot; может ничего не сделать или провалиться),но большинство серьезных расширений делают это.</target>
        </trans-unit>
        <trans-unit id="c8069144ce0898197e96d2bb7ebc0edbdaca8457" translate="yes" xml:space="preserve">
          <source>where $term is a return value of Term::ReadLine-&amp;gt;new().</source>
          <target state="translated">где $ term - это возвращаемое значение Term :: ReadLine-&amp;gt; new ().</target>
        </trans-unit>
        <trans-unit id="b9c15a20c87c2836864971183b1c442723a838ac" translate="yes" xml:space="preserve">
          <source>where $x is either less than -128 or more than 127; the &lt;code&gt;&quot;c&quot;&lt;/code&gt; format is only for encoding native operating system characters (ASCII, EBCDIC, and so on) and not for Unicode characters, so Perl behaved as if you meant</source>
          <target state="translated">где $ x меньше -128 или больше 127; &lt;code&gt;&quot;c&quot;&lt;/code&gt; формат только для кодирования символов родной операционной системы (ASCII, EBCDIC, и так далее) , а не для символов Unicode, поэтому Perl ведет себя , как если бы вы имели в виду</target>
        </trans-unit>
        <trans-unit id="5bbc43aec00d96c64d05508ffb3bbad3e39afaec" translate="yes" xml:space="preserve">
          <source>where $x is either less than 0 or more than 255. However, &lt;code&gt;U0&lt;/code&gt; -mode expects all values to fall in the interval [0, 255], so Perl behaved as if you meant:</source>
          <target state="translated">где $ x либо меньше 0, либо больше 255. Однако режим &lt;code&gt;U0&lt;/code&gt; ожидает, что все значения попадут в интервал [0, 255], поэтому Perl вел себя так, как если бы вы имели в виду:</target>
        </trans-unit>
        <trans-unit id="6d021a9d53a2a238c46b3094e97e9afb7f4e0760" translate="yes" xml:space="preserve">
          <source>where $x is either less than 0 or more than 255. However, &lt;code&gt;U0&lt;/code&gt;-mode expects all values to fall in the interval [0, 255], so Perl behaved as if you meant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bca38c6c6b0a3593705b287c03db33903d5e5f" translate="yes" xml:space="preserve">
          <source>where $x is either less than 0 or more than 255; the &lt;code&gt;&quot;C&quot;&lt;/code&gt; format is only for encoding native operating system characters (ASCII, EBCDIC, and so on) and not for Unicode characters, so Perl behaved as if you meant</source>
          <target state="translated">где $ x либо меньше 0, либо больше 255; &lt;code&gt;&quot;C&quot;&lt;/code&gt; формат только для кодирования символов родной операционной системы (ASCII, EBCDIC, и так далее) , а не для символов Unicode, поэтому Perl ведет себя , как если бы вы имели в виду</target>
        </trans-unit>
        <trans-unit id="890f9b49db55ce1098a844385610bbb13debaa4c" translate="yes" xml:space="preserve">
          <source>where 0x0400 stands for &lt;code&gt;U+0400&lt;/code&gt; , CYRILLIC CAPITAL LETTER IE WITH GRAVE.</source>
          <target state="translated">где 0x0400 означает &lt;code&gt;U+0400&lt;/code&gt; , КИРИЛИЧЕСКУЮ ЗАГЛАВНУЮ БУКВУ IE С ТЯЖЕЛЫМ.</target>
        </trans-unit>
        <trans-unit id="bb39ea280c52faaef2cf252e7f001c0325c388e7" translate="yes" xml:space="preserve">
          <source>where 0x0400 stands for &lt;code&gt;U+0400&lt;/code&gt;, CYRILLIC CAPITAL LETTER IE WITH GRAVE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825d5d6d780f8829ebcd8a7016c279905b219a90" translate="yes" xml:space="preserve">
          <source>where 7E is the hexadecimal ASCII code point for &quot;~&quot;. Here is an example of decoding such a URL in any EBCDIC code page:</source>
          <target state="translated">где 7E-шестнадцатеричный ASCII код точки для &quot;~&quot;.Пример расшифровки такого URL в любой кодовой странице EBCDIC:</target>
        </trans-unit>
        <trans-unit id="e5afb7247bda0d6286eee71fcd361efad8d3b878" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$PKGNAME&lt;/code&gt; is another regular expression that defines the legal forms for package names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4809a830fe1a3429edeff7f9faf0dee554dbec4" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$parser&lt;/code&gt; is a reference to the parser object, &lt;code&gt;$text&lt;/code&gt; is the text-string encountered, and &lt;code&gt;$ptree_node&lt;/code&gt; is a reference to the current node in the parse-tree (usually an interior-sequence object or else the top-level node of the parse-tree).</source>
          <target state="translated">где &lt;code&gt;$parser&lt;/code&gt; - это ссылка на объект анализатора, &lt;code&gt;$text&lt;/code&gt; - встречающаяся текстовая строка, а &lt;code&gt;$ptree_node&lt;/code&gt; - ссылка на текущий узел в дереве синтаксического анализа (обычно это объект внутренней последовательности или узел верхнего уровня дерево синтаксического анализа).</target>
        </trans-unit>
        <trans-unit id="d298264d5947d99205d766cae90ed2313035af45" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$parser&lt;/code&gt; is a reference to the parser object, and &lt;code&gt;$ptree&lt;/code&gt; is a reference to the parse-tree object.</source>
          <target state="translated">где &lt;code&gt;$parser&lt;/code&gt; - это ссылка на объект синтаксического анализатора, а &lt;code&gt;$ptree&lt;/code&gt; - это ссылка на объект синтаксического дерева.</target>
        </trans-unit>
        <trans-unit id="5957a8e4bc7c51d1071eb22f8fe1b48116af9153" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$parser&lt;/code&gt; is a reference to the parser object, and &lt;code&gt;$sequence&lt;/code&gt; is a reference to the interior-sequence object. [</source>
          <target state="translated">где &lt;code&gt;$parser&lt;/code&gt; - это ссылка на объект синтаксического анализатора, а &lt;code&gt;$sequence&lt;/code&gt; - ссылка на объект внутренней последовательности. [</target>
        </trans-unit>
        <trans-unit id="15d410b2ce2184b4347be136da68a7719dc0ad85" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$source&lt;/code&gt; is the filespec of the file being installed. &lt;code&gt;$target&lt;/code&gt; is where it is being installed to, and &lt;code&gt;$uninstalled&lt;/code&gt; is any shadow file that is in &lt;code&gt;@INC&lt;/code&gt; or &lt;code&gt;$ENV{PERL5LIB}&lt;/code&gt; or other standard locations, and &lt;code&gt;$pattern&lt;/code&gt; is the pattern that caused a source file to be skipped. In future more keys will be added, such as to show created directories, however this requires changes in other modules and must therefore wait.</source>
          <target state="translated">где &lt;code&gt;$source&lt;/code&gt; - это спецификация устанавливаемого файла. &lt;code&gt;$target&lt;/code&gt; - это место, куда он устанавливается, а &lt;code&gt;$uninstalled&lt;/code&gt; - это любой теневой файл, который находится в &lt;code&gt;@INC&lt;/code&gt; или &lt;code&gt;$ENV{PERL5LIB}&lt;/code&gt; или других стандартных местах, а &lt;code&gt;$pattern&lt;/code&gt; - это шаблон, по которому исходный файл был пропущен. В будущем будут добавлены дополнительные ключи, например, для отображения созданных каталогов, однако это потребует изменений в других модулях и, следовательно, должно подождать.</target>
        </trans-unit>
        <trans-unit id="a731b563e701bcb16a123ecab85071d224c107aa" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$where_to_export&lt;/code&gt; is an integer telling how far up the calling stack to export your symbols, and &lt;code&gt;@what_to_export&lt;/code&gt; is an array telling what symbols *to* export (usually this is &lt;code&gt;@_&lt;/code&gt; ). The &lt;code&gt;$package&lt;/code&gt; argument is currently unused.</source>
          <target state="translated">где &lt;code&gt;$where_to_export&lt;/code&gt; - это целое число, указывающее, насколько далеко вверх по стеку вызовов следует экспортировать ваши символы, а &lt;code&gt;@what_to_export&lt;/code&gt; - это массив , указывающий, какие символы * экспортировать * (обычно это &lt;code&gt;@_&lt;/code&gt; ). &lt;code&gt;$package&lt;/code&gt; аргумент в настоящее время не используется.</target>
        </trans-unit>
        <trans-unit id="dce597b1bf61ba99754a405ba990481dcf448258" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;$where_to_export&lt;/code&gt; is an integer telling how far up the calling stack to export your symbols, and &lt;code&gt;@what_to_export&lt;/code&gt; is an array telling what symbols *to* export (usually this is &lt;code&gt;@_&lt;/code&gt;). The &lt;code&gt;$package&lt;/code&gt; argument is currently unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e1c4094f5de010428575d8622f327516bc33ae" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;HERE&lt;/code&gt; can be replaced by other identifiers like with normal Perl HERE-docs. All details below about the typemap textual format remain valid.</source>
          <target state="translated">где &lt;code&gt;HERE&lt;/code&gt; можно заменить другими идентификаторами, как в обычных Perl-документах HERE. Все приведенные ниже сведения о текстовом формате карты типов остаются в силе.</target>
        </trans-unit>
        <trans-unit id="721c549e68ff19e2994566a74f0b393f57d254d1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;MyParser&lt;/code&gt; is some subclass of &lt;b&gt;Pod::Parser&lt;/b&gt;.</source>
          <target state="translated">где &lt;code&gt;MyParser&lt;/code&gt; - это некоторый подкласс &lt;b&gt;Pod :: Parser&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b03bee177daa8ad34db5c35f4571b92ff18e039c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SP&lt;/code&gt; is the macro that represents the local copy of the stack pointer, and &lt;code&gt;num&lt;/code&gt; is the number of elements the stack should be extended by.</source>
          <target state="translated">где &lt;code&gt;SP&lt;/code&gt; - это макрос, представляющий локальную копию указателя стека, а &lt;code&gt;num&lt;/code&gt; - количество элементов, на которые следует расширить стек.</target>
        </trans-unit>
        <trans-unit id="de39703cfc1e976397e4c498b4e76e18c8f99017" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;a&lt;/code&gt; is the</source>
          <target state="translated">где является &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afb48bc36d6a70b33cd141b99f73b7c8ea6d9b0d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;err_msg&lt;/code&gt; is an SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6950fd3c6bf4eda6d69d7afe08226888f67c407d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;function&lt;/code&gt; is the name of the function you want to memoize, or a reference to it. &lt;code&gt;memoize&lt;/code&gt; returns a reference to the new, memoized version of the function, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on a non-fatal error. At present, there are no non-fatal errors, but there might be some in the future.</source>
          <target state="translated">где &lt;code&gt;function&lt;/code&gt; - это имя функции, которую вы хотите запомнить, или ссылка на нее. &lt;code&gt;memoize&lt;/code&gt; возвращает ссылку на новую, мемоизированную версию функции или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; при нефатальной ошибке. В настоящее время нефатальных ошибок нет, но они могут быть в будущем.</target>
        </trans-unit>
        <trans-unit id="7a5a64f1351b446f2f76e340c1ebbe7f3b653197" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;function&lt;/code&gt; is the name of the function you want to memoize, or a reference to it. &lt;code&gt;memoize&lt;/code&gt; returns a reference to the new, memoized version of the function, or &lt;code&gt;undef&lt;/code&gt; on a non-fatal error. At present, there are no non-fatal errors, but there might be some in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baeb27f249365fedd4a037a93595125d9a6014e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;rho&lt;/code&gt; is the distance to the origin, and &lt;code&gt;theta&lt;/code&gt; the angle between the vector and the</source>
          <target state="translated">где &lt;code&gt;rho&lt;/code&gt; - расстояние до начала координат, а &lt;code&gt;theta&lt;/code&gt; - угол между вектором и</target>
        </trans-unit>
        <trans-unit id="865c6ca20b748c53f20376d13a4298c7b6a923a6" translate="yes" xml:space="preserve">
          <source>where FALLBACK can take any of the three values TRUE, FALSE, or UNDEF. If you do not set any FALLBACK value when using OVERLOAD, it defaults to UNDEF. FALLBACK is not used except when one or more functions using OVERLOAD have been defined. Please see &lt;a href=&quot;overload#fallback&quot;&gt;&quot;fallback&quot; in overload&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9e76180b06bd2a44ffe663c1ff849e0a103ca7" translate="yes" xml:space="preserve">
          <source>where FALLBACK can take any of the three values TRUE, FALSE, or UNDEF. If you do not set any FALLBACK value when using OVERLOAD, it defaults to UNDEF. FALLBACK is not used except when one or more functions using OVERLOAD have been defined. Please see &lt;a href=&quot;overload#fallback&quot;&gt;fallback in overload&lt;/a&gt; for more details.</source>
          <target state="translated">где FALLBACK может принимать любое из трех значений TRUE, FALSE или UNDEF. Если вы не устанавливаете значение FALLBACK при использовании OVERLOAD, по умолчанию используется UNDEF. FALLBACK не используется, кроме случаев, когда была определена одна или несколько функций, использующих OVERLOAD. Дополнительные сведения см. В разделе &amp;laquo; &lt;a href=&quot;overload#fallback&quot;&gt;Резервный вариант перегрузки&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50396b7e08b271e8034d662ba4fd67f410cb1b19" translate="yes" xml:space="preserve">
          <source>where a more complete solution would split the URL into components and apply a full s/// substitution only to the appropriate parts.</source>
          <target state="translated">где более полное решение разбило бы URL на компоненты и применило бы полную замену s///только к соответствующим частям.</target>
        </trans-unit>
        <trans-unit id="21585635f4365441aa2484d0f4019c953a7d7b86" translate="yes" xml:space="preserve">
          <source>where chr(0xff) is expected but the test fails because the result is chr(0xff). Exactly.</source>
          <target state="translated">в котором ожидается,что будет использоваться функция chr(0xff),но тест не пройдет,потому что результат будет соответствовать функции chr(0xff).Именно.</target>
        </trans-unit>
        <trans-unit id="16f78d439c89dcc67cc6d31385ff3dcec533675f" translate="yes" xml:space="preserve">
          <source>where each successive 'list add' option will push the value of add into array ref $list-&amp;gt;{'add'}. The result would be like</source>
          <target state="translated">где каждая последующая опция 'list add' будет помещать значение add в массив ref $ list -&amp;gt; {'add'}. Результат был бы похож на</target>
        </trans-unit>
        <trans-unit id="bc78225b4201f5ea13094d1b52390630480faaae" translate="yes" xml:space="preserve">
          <source>where its processing the just-executed CV. Note that before it decrements the CV's reference count, it nulls the &lt;code&gt;blk_sub.cv&lt;/code&gt;. This means that if it re-enters, the CV won't be freed twice. It also means that you can't rely on such type-specific fields having useful values after the return from &lt;code&gt;cx_popfoo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517c0898eef6d5914aa381031eb301a948ecc075" translate="yes" xml:space="preserve">
          <source>where such changes can be applied by the means of cherry-picking from blead.</source>
          <target state="translated">где такие изменения могут быть применены путем отбора вишни из отбеливателя.</target>
        </trans-unit>
        <trans-unit id="c1ba074422bf23c3944014acd8f065e730791214" translate="yes" xml:space="preserve">
          <source>where that number is the command number, and which you'd use to access with the built-in &lt;b&gt;csh&lt;/b&gt;-like history mechanism. For example, &lt;code&gt;!17&lt;/code&gt; would repeat command number 17. The depth of the angle brackets indicates the nesting depth of the debugger. You could get more than one set of brackets, for example, if you'd already at a breakpoint and then printed the result of a function call that itself has a breakpoint, or you step into an expression via &lt;code&gt;s/n/t
expression&lt;/code&gt; command.</source>
          <target state="translated">где этот номер является номером команды, и который вы использовали бы для доступа с помощью встроенного механизма истории, подобного &lt;b&gt;csh&lt;/b&gt; . Например &lt;code&gt;!17&lt;/code&gt; будет повторять команду номер 17. Глубина угловых скобок указывает глубину вложения отладчика. Вы могли бы получить больше , чем один набор скобок, например, если вы уже в контрольной точке , а затем напечатал результат вызова функции , которая сама по себе имеет контрольную точку, или вы шаг в выражении через &lt;code&gt;s/n/t expression&lt;/code&gt; команды .</target>
        </trans-unit>
        <trans-unit id="fe3cffb107c47b95f0ae454e3de2e7e1743bb5ce" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;&quot;|&quot;&lt;/code&gt; is a binary operator with an operand on the right, but no operand on the left.</source>
          <target state="translated">где &lt;code&gt;&quot;|&quot;&lt;/code&gt; - бинарный оператор с операндом справа, но без операнда слева.</target>
        </trans-unit>
        <trans-unit id="b244c23995363daf148f79037f34977ba5711e52" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;TYPEMAP&lt;/code&gt; keyword must appear in the first column of a new line.</source>
          <target state="translated">где ключевое слово &lt;code&gt;TYPEMAP&lt;/code&gt; должно появиться в первом столбце новой строки.</target>
        </trans-unit>
        <trans-unit id="764e081905d06edddf30c836b21ee0f9eb49e89c" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;minlen&lt;/code&gt; would be 3 but &lt;code&gt;minlenret&lt;/code&gt; would only be 2 as the \d is required to match but is not actually included in the matched content. This distinction is particularly important as the substitution logic uses the &lt;code&gt;minlenret&lt;/code&gt; to tell if it can do in-place substitutions (these can result in considerable speed-up).</source>
          <target state="translated">где &lt;code&gt;minlen&lt;/code&gt; будет 3, но &lt;code&gt;minlenret&lt;/code&gt; будет только 2, поскольку \ d требуется для сопоставления, но фактически не включается в сопоставленный контент. Это различие особенно важно, поскольку логика подстановки использует &lt;code&gt;minlenret&lt;/code&gt; , чтобы определить, может ли он выполнять подстановки на месте (это может привести к значительному ускорению).</target>
        </trans-unit>
        <trans-unit id="e11e55dd4712573d987efd1c0884f0c120edda61" translate="yes" xml:space="preserve">
          <source>where the Perl equivalent of &lt;code&gt;register_fatal&lt;/code&gt; and the callback it registers, &lt;code&gt;pcb1&lt;/code&gt; , might look like this</source>
          <target state="translated">где Perl-эквивалент &lt;code&gt;register_fatal&lt;/code&gt; и регистрируемый им обратный вызов &lt;code&gt;pcb1&lt;/code&gt; может выглядеть следующим образом</target>
        </trans-unit>
        <trans-unit id="61287e162f491b30e9853333796fa2220fb121cf" translate="yes" xml:space="preserve">
          <source>where the Perl equivalent of &lt;code&gt;register_fatal&lt;/code&gt; and the callback it registers, &lt;code&gt;pcb1&lt;/code&gt;, might look like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cc28c0ed6b3b975c1f8b2f5bfccf3f2b674b4a" translate="yes" xml:space="preserve">
          <source>where the first argument, an &lt;code&gt;SV*&lt;/code&gt; , must be a reference, and the second argument is a stash. The returned &lt;code&gt;SV*&lt;/code&gt; can now be used in the same way as any other SV.</source>
          <target state="translated">где первый аргумент, &lt;code&gt;SV*&lt;/code&gt; , должен быть ссылкой, а второй аргумент - тайником. Возвращенный &lt;code&gt;SV*&lt;/code&gt; теперь можно использовать так же, как и любой другой SV.</target>
        </trans-unit>
        <trans-unit id="01edd5ad17b59563e8d9b2233d38e96f6dd56aff" translate="yes" xml:space="preserve">
          <source>where the first argument, an &lt;code&gt;SV*&lt;/code&gt;, must be a reference, and the second argument is a stash. The returned &lt;code&gt;SV*&lt;/code&gt; can now be used in the same way as any other SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8f1012228e6574e355ca23612690ce9ced4433" translate="yes" xml:space="preserve">
          <source>where the format expects to process a byte (a character with a value below 256), but a higher value was provided instead. Perl uses the value modulus 256 instead, as if you had provided:</source>
          <target state="translated">где формат ожидает обработку байта (символ со значением ниже 256),но вместо этого было предоставлено более высокое значение.Perl использует вместо этого значение модуля 256,как если бы вы его предоставили:</target>
        </trans-unit>
        <trans-unit id="b51b446492bdddf5835c8b7127ee3a8fcffa16ed" translate="yes" xml:space="preserve">
          <source>where the format expects to process a sequence of bytes (character with a value below 256), but some of the characters had a higher value. Perl uses the character values modulus 256 instead, as if you had provided:</source>
          <target state="translated">где формат ожидает обработку последовательности байтов (символ со значением ниже 256),но некоторые символы имеют более высокое значение.Perl использует вместо этого символьные значения по модулю 256,как если бы вы их предоставили:</target>
        </trans-unit>
        <trans-unit id="5c49be26fe2412d08b959e58ce62ecd11e8effd9" translate="yes" xml:space="preserve">
          <source>where these arguments mean:</source>
          <target state="translated">где эти аргументы означают:</target>
        </trans-unit>
        <trans-unit id="4fe303f9adde4840e097ed0d238372b72ff5d199" translate="yes" xml:space="preserve">
          <source>where those dot files live</source>
          <target state="translated">где находятся эти точечные файлы</target>
        </trans-unit>
        <trans-unit id="00a755e878e51b6d3d95aae065147ee2272798c2" translate="yes" xml:space="preserve">
          <source>where you'd otherwise have to write</source>
          <target state="translated">где в противном случае тебе пришлось бы писать</target>
        </trans-unit>
        <trans-unit id="09c0979062616fd0606b29296df335c67d5531c0" translate="yes" xml:space="preserve">
          <source>whereupon we might see something like this, with each pair of hex digits corresponding to a byte:</source>
          <target state="translated">после чего мы можем увидеть нечто подобное,с каждой парой гекс-цифр,соответствующей байту:</target>
        </trans-unit>
        <trans-unit id="6fac826754ebef5d0de7380bb2ebdf79ac73e626" translate="yes" xml:space="preserve">
          <source>whether the contents are interpreted as a signed or unsigned number,</source>
          <target state="translated">интерпретируется ли содержание как подписанный или неподписанный номер,</target>
        </trans-unit>
        <trans-unit id="dc2033256fe72f3be5253a7be85085b830e059f5" translate="yes" xml:space="preserve">
          <source>whether the next byte is in the range 0x80 - 0xBF. If so, the parser may conclude that this file is in UTF-8, and all highbit sequences in the file should be assumed to be UTF-8. Otherwise the parser should treat the file as being in CP-1252. (A better check, and which works on EBCDIC platforms as well, is to pass a copy of the sequence to &lt;a href=&quot;utf8&quot;&gt;utf8::decode()&lt;/a&gt; which performs a full validity check on the sequence and returns TRUE if it is valid UTF-8, FALSE otherwise. This function is always pre-loaded, is fast because it is written in C, and will only get called at most once, so you don't need to avoid it out of performance concerns.) In the unlikely circumstance that the first highbit sequence in a truly non-UTF-8 file happens to appear to be UTF-8, one can cater to our heuristic (as well as any more intelligent heuristic) by prefacing that line with a comment line containing a highbit sequence that is clearly</source>
          <target state="translated">находится ли следующий байт в диапазоне 0x80 - 0xBF. Если это так, синтаксический анализатор может сделать вывод, что этот файл находится в кодировке UTF-8, и все последовательности старших битов в файле должны приниматься как UTF-8. В противном случае синтаксический анализатор должен рассматривать файл как находящийся в CP-1252. (Лучшая проверка, которая также работает на платформах EBCDIC, - передать копию последовательности в &lt;a href=&quot;utf8&quot;&gt;utf8 :: decode ()&lt;/a&gt;который выполняет полную проверку достоверности последовательности и возвращает ИСТИНА, если она является допустимой UTF-8, в противном случае - ЛОЖЬ. Эта функция всегда предварительно загружается, работает быстро, потому что написана на C, и вызывается не чаще одного раза, поэтому вам не нужно избегать ее из соображений производительности.) В маловероятных обстоятельствах, когда первая последовательность высоких битов в случае, если файл действительно не-UTF-8 выглядит как UTF-8, можно удовлетворить нашу эвристику (а также любую более интеллектуальную эвристику), предварительно поставив перед этой строкой строку комментария, содержащую последовательность высоких битов, которая явно</target>
        </trans-unit>
        <trans-unit id="13f9423890a306b627963ea70ef49e8541a4438e" translate="yes" xml:space="preserve">
          <source>whether we should try to change or remove those dot files</source>
          <target state="translated">стоит ли нам пытаться изменить или удалить эти точечные файлы.</target>
        </trans-unit>
        <trans-unit id="ed04ff4dabf1e2d4cd6b89136c2b24dec27ecca4" translate="yes" xml:space="preserve">
          <source>which</source>
          <target state="translated">which</target>
        </trans-unit>
        <trans-unit id="173b78e36735c0ab16d3f825ed52957ec9da8001" translate="yes" xml:space="preserve">
          <source>which are subdirectories of directories found in &lt;code&gt;@INC&lt;/code&gt; --</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d060cbd0fbb1156378e849bb6c04d6e687e74342" translate="yes" xml:space="preserve">
          <source>which can also be done with &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; which is made to transform one list into another:</source>
          <target state="translated">что также можно сделать с помощью &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; который предназначен для преобразования одного списка в другой:</target>
        </trans-unit>
        <trans-unit id="9771ba06168179e3c40de1fc7ee4c2de163bcd23" translate="yes" xml:space="preserve">
          <source>which can also be done with &lt;code&gt;map()&lt;/code&gt; which is made to transform one list into another:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679cb19369252215832643aae001a33e00c3edb8" translate="yes" xml:space="preserve">
          <source>which can just be converted to:</source>
          <target state="translated">в которую можно просто превратиться:</target>
        </trans-unit>
        <trans-unit id="1058597fc80ec1ae6c9468976c2082b39dc74418" translate="yes" xml:space="preserve">
          <source>which can print filenames terminated by the null character, you can say this:</source>
          <target state="translated">который может печатать имена файлов,прерванные нулевым символом,можно сказать вот что:</target>
        </trans-unit>
        <trans-unit id="0a1bf5f9e60cb26d6cb10d695574f7486a7350a5" translate="yes" xml:space="preserve">
          <source>which can work together</source>
          <target state="translated">который может работать вместе</target>
        </trans-unit>
        <trans-unit id="b281cfce8512044c5aa4af3d8f50d69b4ce2f381" translate="yes" xml:space="preserve">
          <source>which contain information about the per-op meanings of the bits in the op_private field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e6474c54d74f5e1b54fbb84567108ec9ec0be7" translate="yes" xml:space="preserve">
          <source>which contains a list of newXS() calls near the end. Removing unnecessary calls, and rerunning</source>
          <target state="translated">который содержит список вызовов newXS()в конце.Удаление ненужных вызовов и повторный запуск.</target>
        </trans-unit>
        <trans-unit id="3ba7f1a2c7d9e13feaebe2336a9a9752e948dcc6" translate="yes" xml:space="preserve">
          <source>which contains the profiling data collected during the execution.</source>
          <target state="translated">который содержит данные профилирования,собранные во время выполнения.</target>
        </trans-unit>
        <trans-unit id="209bf9b2c21856efbe58794a447fa26435ea0055" translate="yes" xml:space="preserve">
          <source>which could also be written this way, using a trick that's come to be known as the Schwartzian Transform:</source>
          <target state="translated">который также может быть написан таким образом,с использованием трюка,который стал известен как Шварцовое Преобразование:</target>
        </trans-unit>
        <trans-unit id="75ba4f37004a47ec33e2d83893fc18c49f7a2c2b" translate="yes" xml:space="preserve">
          <source>which did not load a particular DLL yet. This is why the DLLs are mapped to the shared memory region.</source>
          <target state="translated">которая еще не загрузила конкретную DLL.Вот почему DLL отображаются в разделяемую область памяти.</target>
        </trans-unit>
        <trans-unit id="7b963e7a5bc43a79a319cd65245b0963a9a74082" translate="yes" xml:space="preserve">
          <source>which does nothing, but succeeds on all the &quot;usual&quot; build targets. To do so, use</source>
          <target state="translated">который ничего не делает,но преуспевает в достижении всех &quot;обычных&quot; целей.Для этого используйте</target>
        </trans-unit>
        <trans-unit id="1e68ca264c19e5e1287272ae8a0a048239c69afc" translate="yes" xml:space="preserve">
          <source>which has a length of 43. So, the properly padded version is</source>
          <target state="translated">которая имеет длину 43.Итак,правильно подбитая версия</target>
        </trans-unit>
        <trans-unit id="97b9b7ce1f9f8564271626441b5ed04c89fe2ee5" translate="yes" xml:space="preserve">
          <source>which has the short form</source>
          <target state="translated">имеющий короткую форму</target>
        </trans-unit>
        <trans-unit id="cf2897e01293c7352f75dce51f4052d41ff51799" translate="yes" xml:space="preserve">
          <source>which includes newly-installed via &lt;code&gt;Bundle::OS2_default&lt;/code&gt; modules. Doing testing via &lt;code&gt;CPAN.pm&lt;/code&gt; is going to be painfully slow, since it statically links a new executable per XS extension.</source>
          <target state="translated">который включает недавно установленные через &lt;code&gt;Bundle::OS2_default&lt;/code&gt; модули. Тестирование через &lt;code&gt;CPAN.pm&lt;/code&gt; будет мучительно медленным, поскольку оно статически связывает новый исполняемый файл с расширением XS.</target>
        </trans-unit>
        <trans-unit id="740279f94d278254c20a1964b766588db7905a52" translate="yes" xml:space="preserve">
          <source>which interact with the memory allocator in other ways than via malloc(), realloc(), free(), calloc(), sbrk() and brk();</source>
          <target state="translated">которые взаимодействуют с аллокатором памяти иначе,чем через malloc(),realloc(),free(),calloc(),sbrk()и brk();</target>
        </trans-unit>
        <trans-unit id="27e6eae0fd902584be95e5d4c59ccdf92b2c93d3" translate="yes" xml:space="preserve">
          <source>which is Perl shorthand for the more explicitly written version:</source>
          <target state="translated">что является сокращением на Perl для более явно написанной версии:</target>
        </trans-unit>
        <trans-unit id="e2c5c74f3c46665187c755c53e173135dab99bf8" translate="yes" xml:space="preserve">
          <source>which is also expressed by this formula:</source>
          <target state="translated">что также выражается этой формулой:</target>
        </trans-unit>
        <trans-unit id="04c6ac4120301d7049af98011b0e572414db64b0" translate="yes" xml:space="preserve">
          <source>which is equivalent to</source>
          <target state="translated">что эквивалентно</target>
        </trans-unit>
        <trans-unit id="16a66c1b8256121eec60a422104c678c527a1b68" translate="yes" xml:space="preserve">
          <source>which is even the same as</source>
          <target state="translated">что даже совпадает с</target>
        </trans-unit>
        <trans-unit id="40217363f21b2e6fa15982c559837fa626b0eb67" translate="yes" xml:space="preserve">
          <source>which is exactly what we had defined for negative real numbers above. The &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; returns only one of the solutions: if you want the both, use the &lt;code&gt;root&lt;/code&gt; function.</source>
          <target state="translated">это именно то, что мы определили для отрицательных действительных чисел выше. В &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; возвращает только одно из решений: если вы хотите , оба, использовать &lt;code&gt;root&lt;/code&gt; функцию.</target>
        </trans-unit>
        <trans-unit id="04a53ce2bf2b8f46b8bc7fb7b7d5f6202cda6b7a" translate="yes" xml:space="preserve">
          <source>which is exactly what we had defined for negative real numbers above. The &lt;code&gt;sqrt&lt;/code&gt; returns only one of the solutions: if you want the both, use the &lt;code&gt;root&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41660e5f3a05c257d71cd236ed7137b3831af720" translate="yes" xml:space="preserve">
          <source>which is generated from</source>
          <target state="translated">который генерируется из</target>
        </trans-unit>
        <trans-unit id="ed4894b8ab4c596c6c6382023f8f4837da06efce" translate="yes" xml:space="preserve">
          <source>which is hard-wired to replace all occurrences of the string &lt;code&gt;&quot;Joe&quot;&lt;/code&gt; to &lt;code&gt;&quot;Jim&quot;&lt;/code&gt; . Not particularly Useful, but it is the first example and I wanted to keep it simple.</source>
          <target state="translated">который жестко запрограммирован для замены всех вхождений строки &lt;code&gt;&quot;Joe&quot;&lt;/code&gt; на &lt;code&gt;&quot;Jim&quot;&lt;/code&gt; . Не особенно полезно, но это первый пример, и я хотел, чтобы он был простым.</target>
        </trans-unit>
        <trans-unit id="a91b8e0a1bd14bcc8672dcb1bfa802fc08979c6c" translate="yes" xml:space="preserve">
          <source>which is hard-wired to replace all occurrences of the string &lt;code&gt;&quot;Joe&quot;&lt;/code&gt; to &lt;code&gt;&quot;Jim&quot;&lt;/code&gt;. Not particularly Useful, but it is the first example and I wanted to keep it simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f1633dff7d510a448e9aaeeb40cb63e6e279d1" translate="yes" xml:space="preserve">
          <source>which is not, consequently, deparsed correctly.</source>
          <target state="translated">что,следовательно,неправильно.</target>
        </trans-unit>
        <trans-unit id="d53450b0fdca8bc7a9a33283360f4cc8874d6819" translate="yes" xml:space="preserve">
          <source>which is presumably easier to read than the old way:</source>
          <target state="translated">что,предположительно,легче прочитать,чем старым способом:</target>
        </trans-unit>
        <trans-unit id="590e9b690bb3d4c0ee4fe08d74808195b747676b" translate="yes" xml:space="preserve">
          <source>which is probably not what you were expecting. Unfortunately at least one reasonably common and modern C compiler does &quot;real backward compatibility&quot; here, in AIX that is what still happens even though the rest of the AIX compiler is very happily C89.</source>
          <target state="translated">что,вероятно,не то,что вы ожидали.К сожалению,по крайней мере один достаточно распространенный и современный компилятор Си делает здесь &quot;реальную обратную совместимость&quot;,в AIX,что и происходит до сих пор,несмотря на то,что остальная часть компилятора AIX-это очень счастливый C89.</target>
        </trans-unit>
        <trans-unit id="29eb09005f5e9aeeb936021e842907d6266dcfda" translate="yes" xml:space="preserve">
          <source>which is ready to be printed.</source>
          <target state="translated">который готов к печати.</target>
        </trans-unit>
        <trans-unit id="b67e8264d8ed281cc3a88a4cee5125c080a44db5" translate="yes" xml:space="preserve">
          <source>which is the 200-ish (as of Unicode 13.0) CJK characters that aren't ideographs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457319eaa9e4f3b728ed192e5fdb2e515988f305" translate="yes" xml:space="preserve">
          <source>which is the correct answer. This example illustrates that it is important not only to match what is desired, but to reject what is not desired.</source>
          <target state="translated">что является правильным ответом.Этот пример иллюстрирует,что важно не только соответствовать тому,что желательно,но и отвергать то,что не желательно.</target>
        </trans-unit>
        <trans-unit id="73fd6fe245719ff203e7182e5c8ac2192e03ce30" translate="yes" xml:space="preserve">
          <source>which is the short form of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2a157cb124d5116a790751a46e4a73627b6581" translate="yes" xml:space="preserve">
          <source>which is true (&lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; has the regular meaning for real number, i.e. stands for the absolute value). This example explains why the norm of &lt;code&gt;z&lt;/code&gt; is noted &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt;: it extends the &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; function to complex numbers, yet is the regular &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; we know when the complex number actually has no imaginary part... This justifies</source>
          <target state="translated">что верно ( &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; имеет обычное значение для действительного числа, т.е. означает абсолютное значение). Этот пример объясняет, почему норма &lt;code&gt;z&lt;/code&gt; обозначается как &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt; : он расширяет функцию &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; до комплексных чисел, но является обычным &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; мы знаем, когда комплексное число фактически не имеет мнимой части ... Это оправдывает</target>
        </trans-unit>
        <trans-unit id="ab8183ef99ece94a69bea307cb785e6988fea368" translate="yes" xml:space="preserve">
          <source>which is true (&lt;code&gt;abs&lt;/code&gt; has the regular meaning for real number, i.e. stands for the absolute value). This example explains why the norm of &lt;code&gt;z&lt;/code&gt; is noted &lt;code&gt;abs(z)&lt;/code&gt;: it extends the &lt;code&gt;abs&lt;/code&gt; function to complex numbers, yet is the regular &lt;code&gt;abs&lt;/code&gt; we know when the complex number actually has no imaginary part... This justifies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3080d1b7e175b0f68ccca8d1ffcce6a17814f888" translate="yes" xml:space="preserve">
          <source>which is visible in other functions called from that subroutine</source>
          <target state="translated">который виден в других функциях,вызываемых из этой подпрограммы.</target>
        </trans-unit>
        <trans-unit id="f78cd391c699a6564a6185a15b2c00459cb4b5f7" translate="yes" xml:space="preserve">
          <source>which lasts until the end of that BLOCK.</source>
          <target state="translated">которая продлится до конца этого БЛОКА.</target>
        </trans-unit>
        <trans-unit id="400ae171fcca992b111ee0c9eaa8e6bbbbb647ec" translate="yes" xml:space="preserve">
          <source>which lasts until the end of that BLOCK. Note that this doesn't mean everything is an integer, merely that Perl will use integer operations for arithmetic, comparison, and bitwise operators. For example, even under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; , if you take the &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt;, you'll still get &lt;code&gt;1.4142135623731&lt;/code&gt; or so.</source>
          <target state="translated">который длится до конца этого БЛОКА. Обратите внимание, что это не означает, что все является целым числом, просто Perl будет использовать целочисленные операции для арифметических операций, сравнения и побитовых операторов. Например, даже при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; , если вы возьмете &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; , вы все равно получите &lt;code&gt;1.4142135623731&lt;/code&gt; или около того.</target>
        </trans-unit>
        <trans-unit id="f725a08ef999a54f98bdd936247bc4de35ba04fd" translate="yes" xml:space="preserve">
          <source>which lasts until the end of that BLOCK. Note that this doesn't mean everything is an integer, merely that Perl will use integer operations for arithmetic, comparison, and bitwise operators. For example, even under &lt;code&gt;use integer&lt;/code&gt;, if you take the &lt;code&gt;sqrt(2)&lt;/code&gt;, you'll still get &lt;code&gt;1.4142135623731&lt;/code&gt; or so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45a01f777cdc33148420b0a627621b88968ca28" translate="yes" xml:space="preserve">
          <source>which looks like your module is doing something wrong. Instead, you want to put the blame on the user, and say this:</source>
          <target state="translated">что похоже на то,что ваш модуль делает что-то не так.Вместо этого,вы хотите возложить вину на пользователя,и сказать это:</target>
        </trans-unit>
        <trans-unit id="910ece59a1ee7a779c7904607756d8ac6f43840e" translate="yes" xml:space="preserve">
          <source>which makes Configure to use the &lt;code&gt;nm&lt;/code&gt; tool when scanning for library symbols, which usually is not done in AIX.</source>
          <target state="translated">что заставляет Configure использовать инструмент &lt;code&gt;nm&lt;/code&gt; при сканировании символов библиотеки, что обычно не выполняется в AIX.</target>
        </trans-unit>
        <trans-unit id="2d3700f0082a2cd4c6079cbe90c96db947b50f48" translate="yes" xml:space="preserve">
          <source>which makes the intention more clear.</source>
          <target state="translated">что делает намерение более ясным.</target>
        </trans-unit>
        <trans-unit id="8cd3d9060c1ace30dd6e2d6262dfd40d2021cad0" translate="yes" xml:space="preserve">
          <source>which may be useful for debugging a program that uses &lt;code&gt;Term::ReadLine&lt;/code&gt; itself. Do not forget to detach your shell from the TTY in the window that corresponds to</source>
          <target state="translated">что может быть полезно для отладки программы, использующей сам &lt;code&gt;Term::ReadLine&lt;/code&gt; . Не забудьте отсоединить оболочку от TTY в окне, соответствующем</target>
        </trans-unit>
        <trans-unit id="7e2010dc06ea0515288724e36b214acf56509e41" translate="yes" xml:space="preserve">
          <source>which may modify the second input argument.</source>
          <target state="translated">который может изменить второй входной аргумент.</target>
        </trans-unit>
        <trans-unit id="eee2fd622722c8b192547f36dd5b9891b7a1ad1e" translate="yes" xml:space="preserve">
          <source>which means</source>
          <target state="translated">что означает</target>
        </trans-unit>
        <trans-unit id="04a52cf2a6a5e0c79d4fd67cec9d2eb15a88cc21" translate="yes" xml:space="preserve">
          <source>which outputs</source>
          <target state="translated">какие выводы</target>
        </trans-unit>
        <trans-unit id="3f62e72ff87682e720abfa0dc12f99261d01428f" translate="yes" xml:space="preserve">
          <source>which pinpoints the real problem. Finally the script can now be modified to fix the original problem by destroying the API object before the untie:</source>
          <target state="translated">что указывает на настоящую проблему.Наконец,скрипт теперь можно модифицировать,чтобы исправить исходную проблему,уничтожив объект API перед развязкой:</target>
        </trans-unit>
        <trans-unit id="ac6415ae9e2075f760e53b307b58defa828d2b3f" translate="yes" xml:space="preserve">
          <source>which prints</source>
          <target state="translated">печатающий</target>
        </trans-unit>
        <trans-unit id="bb6c88a0a4a00ee65fac2ab2a88d44234ed99c16" translate="yes" xml:space="preserve">
          <source>which prints (on my machine):</source>
          <target state="translated">который печатает (на моем автоответчике):</target>
        </trans-unit>
        <trans-unit id="c6aa678d657ea6708638daf467b4e464862338f7" translate="yes" xml:space="preserve">
          <source>which probably isn't what you intended (the &lt;code&gt;'???'&lt;/code&gt; is a sign that perl optimized away a constant value).</source>
          <target state="translated">что, вероятно, не то, что вы намеревались ( &lt;code&gt;'???'&lt;/code&gt; - это знак того, что Perl оптимизировал постоянное значение).</target>
        </trans-unit>
        <trans-unit id="3f77411f51027e18d6942d6aafcf90ba55ec2701" translate="yes" xml:space="preserve">
          <source>which produces the output (again, long lines have been wrapped here)</source>
          <target state="translated">который производит выход (опять же,здесь были обернуты длинные линии).</target>
        </trans-unit>
        <trans-unit id="bef5e7ef43fdb712239e626bd67fabf93a351f45" translate="yes" xml:space="preserve">
          <source>which produces:</source>
          <target state="translated">который производит:</target>
        </trans-unit>
        <trans-unit id="f2902720610777e0cb05329288b1b2cd5b87bdd4" translate="yes" xml:space="preserve">
          <source>which provides a new Perl interpreter for each thread, and, by default, results in no data or state information being shared between threads.</source>
          <target state="translated">который предоставляет новый интерпретатор Perl для каждого потока,и,по умолчанию,не приводит к обмену данными или информацией о состоянии между потоками.</target>
        </trans-unit>
        <trans-unit id="f92ba8d28d485765994bd16e6b0139ab94d5b990" translate="yes" xml:space="preserve">
          <source>which puts literal commas into some of the list items. Write it without commas if you don't want them to appear in your data:</source>
          <target state="translated">что ставит буквальные запятые в некоторые пункты списка.Запишите его без запятых,если вы не хотите,чтобы они появлялись в ваших данных:</target>
        </trans-unit>
        <trans-unit id="87d11dc8fa4ace81bc6cff5f401501d4f07cbd6a" translate="yes" xml:space="preserve">
          <source>which puts you into a readline interface. If &lt;code&gt;Term::ReadKey&lt;/code&gt; and either of &lt;code&gt;Term::ReadLine::Perl&lt;/code&gt; or &lt;code&gt;Term::ReadLine::Gnu&lt;/code&gt; are installed, history and command completion are supported.</source>
          <target state="translated">что переводит вас в интерфейс чтения. Если &lt;code&gt;Term::ReadKey&lt;/code&gt; и любой из &lt;code&gt;Term::ReadLine::Perl&lt;/code&gt; или &lt;code&gt;Term::ReadLine::Gnu&lt;/code&gt; установлены, история и завершение команд поддерживаются.</target>
        </trans-unit>
        <trans-unit id="6f4d24b8ce89da9965a39a4a2a60f5482730186f" translate="yes" xml:space="preserve">
          <source>which rely on special alignment which is not provided by Perl's malloc().</source>
          <target state="translated">которые основаны на специальном выравнивании,которое не обеспечивается функцией malloc()Перла.</target>
        </trans-unit>
        <trans-unit id="fdcf525abe96dbcca08ea62d672f58f208fd0fe2" translate="yes" xml:space="preserve">
          <source>which returns 'a/b/c' under Unix. Or:</source>
          <target state="translated">который возвращает 'a/b/c' под Unix.Или:</target>
        </trans-unit>
        <trans-unit id="ec1e3337a0ee7b60523959a46060f22ddce31714" translate="yes" xml:space="preserve">
          <source>which returns a string consisting of the first character from each string. Using pack, we can write</source>
          <target state="translated">которая возвращает строку,состоящую из первого символа из каждой строки.Используя пакет,мы можем написать</target>
        </trans-unit>
        <trans-unit id="3d4e654a3fe5a13b1285db512bfaad46b825adcf" translate="yes" xml:space="preserve">
          <source>which reverses the order of method call.</source>
          <target state="translated">что меняет порядок вызова метода.</target>
        </trans-unit>
        <trans-unit id="0a42738502aac554f3685b010c8c33d17b8d8a89" translate="yes" xml:space="preserve">
          <source>which runs script non-interactively, printing info on each entry into a subroutine and each executed line into the file named</source>
          <target state="translated">который запускает скрипт не интерактивно,печатая информацию по каждой записи в подпрограмме и по каждой выполняемой строке в файле с именем</target>
        </trans-unit>
        <trans-unit id="a26dc4262a5b530b9fd0491393a70987f0cb95f8" translate="yes" xml:space="preserve">
          <source>which sets the debugging packages directly. Note that &lt;code&gt;o debug 0&lt;/code&gt; turns debugging off.</source>
          <target state="translated">который устанавливает пакеты отладки напрямую. Обратите внимание, что &lt;code&gt;o debug 0&lt;/code&gt; отключает отладку.</target>
        </trans-unit>
        <trans-unit id="13c1eb00f520026b6ba1e70a18a4964822f7275f" translate="yes" xml:space="preserve">
          <source>which should be interpreted as a link to the &lt;code&gt;vertical|bar/slash&lt;/code&gt; POD page and not as a link to the &lt;code&gt;slash&lt;/code&gt; section of the &lt;code&gt;bar&lt;/code&gt; POD page with an anchor text of &lt;code&gt;vertical&lt;/code&gt; . Note that not only the anchor text will need to have formatting codes expanded, but so will the target of the link (to deal with E&amp;lt;&amp;gt; and Z&amp;lt;&amp;gt; formatting codes), and special handling of the section may be necessary depending on whether the translator wants to consider markup in sections to be significant when resolving links. See &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; for more information.</source>
          <target state="translated">которые должны интерпретироваться как ссылки на &lt;code&gt;vertical|bar/slash&lt;/code&gt; POD страницы , а не в качестве ссылки на &lt;code&gt;slash&lt;/code&gt; часть &lt;code&gt;bar&lt;/code&gt; POD страницы с якорным текстом по &lt;code&gt;vertical&lt;/code&gt; . Обратите внимание, что коды форматирования должны быть расширены не только для текста привязки, но и для целевой ссылки (для работы с кодами форматирования E &amp;lt;&amp;gt; и Z &amp;lt;&amp;gt;), и может потребоваться специальная обработка раздела в зависимости от того, переводчик хочет учитывать, что разметка в разделах важна при разрешении ссылок. См. &lt;a href=&quot;../perlpodspec&quot;&gt;Perlpodspec&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="98a00746bb67217f72bad75a07b7f4500eb2c2ed" translate="yes" xml:space="preserve">
          <source>which should be interpreted as a link to the &lt;code&gt;vertical|bar/slash&lt;/code&gt; POD page and not as a link to the &lt;code&gt;slash&lt;/code&gt; section of the &lt;code&gt;bar&lt;/code&gt; POD page with an anchor text of &lt;code&gt;vertical&lt;/code&gt;. Note that not only the anchor text will need to have formatting codes expanded, but so will the target of the link (to deal with E&amp;lt;&amp;gt; and Z&amp;lt;&amp;gt; formatting codes), and special handling of the section may be necessary depending on whether the translator wants to consider markup in sections to be significant when resolving links. See &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d18cd1d1191a0e6eb914334f14809f4e2df5fc" translate="yes" xml:space="preserve">
          <source>which shows that spaces are still possible in the code parts. Nevertheless, when working with code and conditional expressions, the extended form of regexps is almost necessary in creating and debugging regexps.</source>
          <target state="translated">что показывает,что пробелы все еще возможны в частях кода.Тем не менее,при работе с кодом и условными выражениями расширенная форма регеxps практически необходима при создании и отладке регеxps.</target>
        </trans-unit>
        <trans-unit id="c562409303f52b59b405fbd73bdc489d191355d6" translate="yes" xml:space="preserve">
          <source>which specifies that the ambient pragmas are exactly those which are in scope at the point of calling.</source>
          <target state="translated">в котором указано,что окружающие прагмы-это именно те,которые находятся в зоне действия в момент вызова.</target>
        </trans-unit>
        <trans-unit id="285a62a077847927b08a104ad47e252de996fbd4" translate="yes" xml:space="preserve">
          <source>which the parser passes to &lt;code&gt;newBINOP&lt;/code&gt; as its first argument.) Here is the relevant line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01b2a58a6fdba96f9248e9340f26dd88b40f22f" translate="yes" xml:space="preserve">
          <source>which the range operator becomes false again. It doesn't become false till the next time the range operator is evaluated. It can test the right operand and become false on the same evaluation it became true (as in &lt;b&gt;awk&lt;/b&gt;), but it still returns true once. If you don't want it to test the right operand until the next evaluation, as in &lt;b&gt;sed&lt;/b&gt;, just use three dots (&lt;code&gt;&quot;...&quot;&lt;/code&gt; ) instead of two. In all other regards, &lt;code&gt;&quot;...&quot;&lt;/code&gt; behaves just like &lt;code&gt;&quot;..&quot;&lt;/code&gt; does.</source>
          <target state="translated">что оператор диапазона снова становится ложным. Оно не становится ложным, пока не будет вычислен следующий оператор диапазона. Он может проверить правильный операнд и стать ложным при той же оценке, что он стал истинным (как в &lt;b&gt;awk&lt;/b&gt; ), но он все равно возвращает истину один раз. Если вы не хотите, чтобы он проверял правильный операнд до следующей оценки, как в &lt;b&gt;sed&lt;/b&gt; , просто используйте три точки ( &lt;code&gt;&quot;...&quot;&lt;/code&gt; ) вместо двух. Во всем остальном &lt;code&gt;&quot;...&quot;&lt;/code&gt; ведет себя так же, как &lt;code&gt;&quot;..&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf907d0fc7a8caf1a2d7daed11e03e30dfddea1" translate="yes" xml:space="preserve">
          <source>which the range operator becomes false again. It doesn't become false till the next time the range operator is evaluated. It can test the right operand and become false on the same evaluation it became true (as in &lt;b&gt;awk&lt;/b&gt;), but it still returns true once. If you don't want it to test the right operand until the next evaluation, as in &lt;b&gt;sed&lt;/b&gt;, just use three dots (&lt;code&gt;&quot;...&quot;&lt;/code&gt;) instead of two. In all other regards, &lt;code&gt;&quot;...&quot;&lt;/code&gt; behaves just like &lt;code&gt;&quot;..&quot;&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c23090ff08e0fb68830283659fa8701d911f41" translate="yes" xml:space="preserve">
          <source>which then may be given to subsequent gprof runs to accumulate data over several runs.</source>
          <target state="translated">который затем может быть передан последующим запускам gprof для накопления данных в течение нескольких запусков.</target>
        </trans-unit>
        <trans-unit id="bca1c4772ca382a02384d616fdcf653a956807fc" translate="yes" xml:space="preserve">
          <source>which understands command arguments. One of such ports is listed in &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt; under RSX. Do not forget to set variable &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc38136202aaeb79aacb17bb0b21ad3bf7c2961" translate="yes" xml:space="preserve">
          <source>which understands command arguments. One of such ports is listed in &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt; under RSX. Do not forget to set variable &lt;code&gt;&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;&lt;/code&gt; as well.</source>
          <target state="translated">который понимает аргументы команд. Один из таких портов указан в разделе &amp;laquo; &lt;a href=&quot;#Prerequisites&quot;&gt;Предварительные условия&amp;raquo; в&lt;/a&gt; разделе RSX. Не забудьте также установить переменную &lt;code&gt;&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21c794c42fe00bc826485f15f4d481419b052ebd" translate="yes" xml:space="preserve">
          <source>which uses &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; matches exactly when the one above does (verifying this yourself would be a productive exercise), but finishes in a fourth the time when used on a similar string with 1000000 &lt;code&gt;&quot;a&quot;&lt;/code&gt;s. Be aware, however, that, when this construct is followed by a quantifier, it currently triggers a warning message under the &lt;code&gt;use warnings&lt;/code&gt; pragma or &lt;b&gt;-w&lt;/b&gt; switch saying it &lt;code&gt;&quot;matches null string many times in regex&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da06cc8f27f2a4277c9d2ea18a97a8abd08b8a8d" translate="yes" xml:space="preserve">
          <source>which uses &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; matches exactly when the one above does (verifying this yourself would be a productive exercise), but finishes in a fourth the time when used on a similar string with 1000000 &lt;code&gt;a&lt;/code&gt; s. Be aware, however, that, when this construct is followed by a quantifier, it currently triggers a warning message under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or &lt;b&gt;-w&lt;/b&gt; switch saying it &lt;code&gt;&quot;matches null string many times in regex&quot;&lt;/code&gt; .</source>
          <target state="translated">который использует &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; , совпадает именно с тем, что указано выше (проверка этого самостоятельно была бы продуктивным упражнением), но завершается в четвертый раз при использовании в аналогичной строке с 1000000 &lt;code&gt;a&lt;/code&gt; с. Имейте в виде, однако, что, когда эта конструкция сопровождается квантором, в настоящее время он вызывает предупреждающее сообщение под &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; прагмы или &lt;b&gt;-w&lt;/b&gt; переключателя говоря , что это &lt;code&gt;&quot;matches null string many times in regex&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1742d6043b0a0627cfbbf796a8a4aec58b9ba1e" translate="yes" xml:space="preserve">
          <source>which will automatically coerce the actual scalar type into an IV, UV, double, or string.</source>
          <target state="translated">который автоматически принуждает фактический скалярный тип к IV,UV,double или строке.</target>
        </trans-unit>
        <trans-unit id="6fb146e9079ae4bc7011dc3190cd3e0c07fe95ee" translate="yes" xml:space="preserve">
          <source>which will call</source>
          <target state="translated">который вызовет</target>
        </trans-unit>
        <trans-unit id="a70f5704ad119ee244b693c30eb2b8ff7c442560" translate="yes" xml:space="preserve">
          <source>which will cause</source>
          <target state="translated">что повлечет за собой</target>
        </trans-unit>
        <trans-unit id="9bbdc3e288f18dbcaf878cd21b2c83f21f374e10" translate="yes" xml:space="preserve">
          <source>which will create perlXYZext.sis (290 kB -&amp;gt; 770 kB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996e600127c4217edb2f265041409c0fd1c6958" translate="yes" xml:space="preserve">
          <source>which will create perlXYZsdk.zip that can be used in another Windows system with the SDK, without having to compile Perl in that system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b448416a18c70a126915bb6ef40a53e5bb705c36" translate="yes" xml:space="preserve">
          <source>which will create the file perlXYZ.sis (the XYZ being the Perl version) which you can then install into your Symbian device: an easy way to do this is to send them via Bluetooth or infrared and just open the messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607626ffbe3fb95a065011f0e19304f91e5ce829" translate="yes" xml:space="preserve">
          <source>which will determine if more memory needs to be allocated. If so, it will call the function &lt;code&gt;sv_grow&lt;/code&gt; . Note that &lt;code&gt;SvGROW&lt;/code&gt; can only increase, not decrease, the allocated memory of an SV and that it does not automatically add space for the trailing &lt;code&gt;NUL&lt;/code&gt; byte (perl's own string functions typically do &lt;code&gt;SvGROW(sv, len + 1)&lt;/code&gt; ).</source>
          <target state="translated">который определит, нужно ли выделить больше памяти. Если это так, он вызовет функцию &lt;code&gt;sv_grow&lt;/code&gt; . Обратите внимание, что &lt;code&gt;SvGROW&lt;/code&gt; может только увеличивать, а не уменьшать выделенную память SV и что он не добавляет автоматически пространство для завершающего байта &lt;code&gt;NUL&lt;/code&gt; (собственные строковые функции Perl обычно выполняют &lt;code&gt;SvGROW(sv, len + 1)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="400ec198d8244a03b4954fa73663d06ab2ae772e" translate="yes" xml:space="preserve">
          <source>which will determine if more memory needs to be allocated. If so, it will call the function &lt;code&gt;sv_grow&lt;/code&gt;. Note that &lt;code&gt;SvGROW&lt;/code&gt; can only increase, not decrease, the allocated memory of an SV and that it does not automatically add space for the trailing &lt;code&gt;NUL&lt;/code&gt; byte (perl's own string functions typically do &lt;code&gt;SvGROW(sv, len + 1)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979ea935ff5d0f72dacbfc022d39ca4775f4154" translate="yes" xml:space="preserve">
          <source>which will do conversion from LF to CR/LF on the output, or in the environment settings (add this to your .bashrc):</source>
          <target state="translated">который сделает преобразование из LF в CR/LF на выходе,или в настройках окружения (добавьте это в ваш .bashrc):</target>
        </trans-unit>
        <trans-unit id="f602755896feed19e862deed34ab69b1cc800288" translate="yes" xml:space="preserve">
          <source>which will echo the cat command's output as it is generated, instead of waiting until the program has completed to print it out. It also checks the return value.</source>
          <target state="translated">который будет повторять вывод команды cat по мере ее генерации,вместо того,чтобы ждать,пока программа завершит распечатку.Она также проверяет возвращаемое значение.</target>
        </trans-unit>
        <trans-unit id="b50d57b41b49f3ab1ba2caaab449544638d7c8f0" translate="yes" xml:space="preserve">
          <source>which will expand the macros using cpp. Don't be scared by the results.</source>
          <target state="translated">что расширит макросы с помощью cpp.Не бойся результатов.</target>
        </trans-unit>
        <trans-unit id="9e71b54891a6848222e41887418f6d0101fb71a1" translate="yes" xml:space="preserve">
          <source>which will export Exporter's own import() method into YourModule. Everything will work as before but you won't need to include Exporter in &lt;code&gt;@YourModule::ISA&lt;/code&gt; .</source>
          <target state="translated">который экспортирует собственный метод import () Exporter в YourModule. Все будет работать, как раньше, но вам не нужно включать Exporter в &lt;code&gt;@YourModule::ISA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d50f3ea87c80c722e83aae6c319e232d884e5185" translate="yes" xml:space="preserve">
          <source>which will export Exporter's own import() method into YourModule. Everything will work as before but you won't need to include Exporter in &lt;code&gt;@YourModule::ISA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87794d0dcf9a6a672b27ff15db2b5b5df0e9109" translate="yes" xml:space="preserve">
          <source>which will match assigned characters known to be part of the Greek script.</source>
          <target state="translated">которые будут соответствовать назначенным символам,известным как часть греческого алфавита.</target>
        </trans-unit>
        <trans-unit id="b95b054f4d66abe300e2020ad56271297a5fff0f" translate="yes" xml:space="preserve">
          <source>which will override system(), exec(), &lt;code&gt;``&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open(,'...|')&lt;/a&gt;&lt;/code&gt;. With current perl you may override only system(), readpipe() - the explicit version of &lt;code&gt;``&lt;/code&gt; , and maybe exec(). The code will substitute the one-argument call to system() by &lt;code&gt;CORE::system('cmd.exe', '/c', &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;)&lt;/code&gt; .</source>
          <target state="translated">который переопределит system (), exec (), &lt;code&gt;``&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open(,'...|')&lt;/a&gt;&lt;/code&gt; . В текущем Perl вы можете переопределить только system (), readpipe () - явную версию &lt;code&gt;``&lt;/code&gt; и, возможно, exec (). Код заменит вызов system () с одним аргументом на &lt;code&gt;CORE::system('cmd.exe', '/c', &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0ce88948c7893f4c0b9fc7b441fc46e7c874487" translate="yes" xml:space="preserve">
          <source>which will override system(), exec(), &lt;code&gt;``&lt;/code&gt;, and &lt;code&gt;open(,'...|')&lt;/code&gt;. With current perl you may override only system(), readpipe() - the explicit version of &lt;code&gt;``&lt;/code&gt;, and maybe exec(). The code will substitute the one-argument call to system() by &lt;code&gt;CORE::system('cmd.exe', '/c', shift)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456a31b1679a3c242ee6fcfa550ef4cff72097d5" translate="yes" xml:space="preserve">
          <source>which will print something like this</source>
          <target state="translated">который напечатает нечто подобное</target>
        </trans-unit>
        <trans-unit id="9d9f99b15b9cecc682a88d237aaf65afdade60cb" translate="yes" xml:space="preserve">
          <source>which will pull in the crlf PerlIO layer which does LF -&amp;gt; CRLF conversion on every output generated by perl.</source>
          <target state="translated">который потянет за собой слой PerlIO crlf, который выполняет преобразование LF -&amp;gt; CRLF для каждого вывода, генерируемого perl.</target>
        </trans-unit>
        <trans-unit id="3f021bf96a0c4f48629afad5e6635345dc7b47e5" translate="yes" xml:space="preserve">
          <source>which works exactly as it does for the &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;X&lt;/code&gt; commands. Requires the &lt;code&gt;PadWalker&lt;/code&gt; module version 0.08 or higher; will warn if this isn't installed. Output is pretty-printed in the same style as for &lt;code&gt;V&lt;/code&gt; and the format is controlled by the same options.</source>
          <target state="translated">который работает точно так же, как и для команд &lt;code&gt;V&lt;/code&gt; и &lt;code&gt;X&lt;/code&gt; .Требуется модуль &lt;code&gt;PadWalker&lt;/code&gt; версии 0.08 или выше; будет предупреждать, если он не установлен. Вывод красиво напечатан в том же стиле, что и для &lt;code&gt;V&lt;/code&gt; , и формат контролируется теми же параметрами.</target>
        </trans-unit>
        <trans-unit id="11c1ab2f8d5d6cd3a60669a9963f5426c9daee0d" translate="yes" xml:space="preserve">
          <source>which would produce:</source>
          <target state="translated">который бы произвел:</target>
        </trans-unit>
        <trans-unit id="5a1c45867db7ee2d51ddbd3c9e7a13e56f64c459" translate="yes" xml:space="preserve">
          <source>which, again, is the default that you should probably never change. You cannot use this keyword on versions of perl before 5.16 to make XSUBs &lt;code&gt;static&lt;/code&gt; .</source>
          <target state="translated">что, опять же, является значением по умолчанию, которое вам, вероятно, никогда не следует менять. Вы не можете использовать это ключевое слово в версиях perl до 5.16, чтобы сделать XSUB &lt;code&gt;static&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3a45fbc8c1cd7e74a8d21b43eab61788b8cab23" translate="yes" xml:space="preserve">
          <source>which, again, is the default that you should probably never change. You cannot use this keyword on versions of perl before 5.16 to make XSUBs &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab6f6023897b5036665c5af5eeee9f611ab518c" translate="yes" xml:space="preserve">
          <source>whichever is appropriate.) Also, make sure that the DLLs for external libraries are usable with executables compiled without &lt;code&gt;-Zmtd&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d75fc0dff9af022da4a609d39c10fe2dc49a67f" translate="yes" xml:space="preserve">
          <source>whichever is appropriate.) Also, make sure that the DLLs for external libraries are usable with with executables compiled without &lt;code&gt;-Zmtd&lt;/code&gt; options.</source>
          <target state="translated">в зависимости от того, что подходит.) Также убедитесь, что библиотеки DLL для внешних библиотек можно использовать с исполняемыми &lt;code&gt;-Zmtd&lt;/code&gt; скомпилированными без параметров -Zmtd .</target>
        </trans-unit>
        <trans-unit id="cd12cc1889c218b756fa67f3cf808c22bc709576" translate="yes" xml:space="preserve">
          <source>whichsig</source>
          <target state="translated">whichsig</target>
        </trans-unit>
        <trans-unit id="2ed9a56e32475df214af03c7378f0540983aebbd" translate="yes" xml:space="preserve">
          <source>whichsig_pv</source>
          <target state="translated">whichsig_pv</target>
        </trans-unit>
        <trans-unit id="86be9c520774951aa6ad17a4612e8ccbf656c2f6" translate="yes" xml:space="preserve">
          <source>whichsig_pvn</source>
          <target state="translated">whichsig_pvn</target>
        </trans-unit>
        <trans-unit id="bd977a86d9e80bc78ac651896d180e9a9271a613" translate="yes" xml:space="preserve">
          <source>whichsig_sv</source>
          <target state="translated">whichsig_sv</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
        <trans-unit id="c755db4e16e1ebd5579bf9df24c0a9dde1dc936a" translate="yes" xml:space="preserve">
          <source>while the object methods of the class still work as designed. This is a key feature of inside-out classes.</source>
          <target state="translated">в то время как объектные методы класса все еще работают как задумано.Это ключевая особенность внутренних классов.</target>
        </trans-unit>
        <trans-unit id="e5daa18cf1bbf438222f9cb7416fc2f0b139eb61" translate="yes" xml:space="preserve">
          <source>while this is invalid:</source>
          <target state="translated">пока это недействительно:</target>
        </trans-unit>
        <trans-unit id="e6eed0680efb88fe24db39b4ed8387a84c0bfafe" translate="yes" xml:space="preserve">
          <source>white space adjacent to a non-word character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e72557ade65af451c7d7f6f0f18d03a88d82c2" translate="yes" xml:space="preserve">
          <source>whitespace</source>
          <target state="translated">whitespace</target>
        </trans-unit>
        <trans-unit id="d2f5ed52eb803c45683b5fc0aa9520f29eb7cf52" translate="yes" xml:space="preserve">
          <source>whole class</source>
          <target state="translated">целый класс</target>
        </trans-unit>
        <trans-unit id="5a8cc6fdee71abc3b1476fb220e9d1cd4edb423d" translate="yes" xml:space="preserve">
          <source>whose dot files this object represents</source>
          <target state="translated">чьи точечные файлы этот объект представляет</target>
        </trans-unit>
        <trans-unit id="3fd57b2686f4898d067d4a56c073c64e61db82bf" translate="yes" xml:space="preserve">
          <source>whose lookup failed, and naming the line number where the calling $lh-&amp;gt;maketext(</source>
          <target state="translated">чей поиск не удался, и указав номер строки, в которой вызывающий $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="10cff4034cedfb92a272cddd774b8b63e3bdad06" translate="yes" xml:space="preserve">
          <source>why</source>
          <target state="translated">why</target>
        </trans-unit>
        <trans-unit id="70bec8a9bf5ecd2e6b37316e112b3f4c615ad4d3" translate="yes" xml:space="preserve">
          <source>width</source>
          <target state="translated">width</target>
        </trans-unit>
        <trans-unit id="37d41699bdee4fcb969ca499eb0f8b82c60d59cc" translate="yes" xml:space="preserve">
          <source>will</source>
          <target state="translated">will</target>
        </trans-unit>
        <trans-unit id="9e698af09629b7ab425fc48e2a23b9a874214ff2" translate="yes" xml:space="preserve">
          <source>will all be loaded correctly by the &lt;b&gt;SelfLoader&lt;/b&gt;, and the &lt;b&gt;SelfLoader&lt;/b&gt; will ensure that the packages 'foo' and 'baz' correctly have the &lt;b&gt;SelfLoader&lt;/b&gt;&lt;code&gt;AUTOLOAD&lt;/code&gt; method when the data after &lt;code&gt;__DATA__&lt;/code&gt; is first parsed.</source>
          <target state="translated">все будет правильно загружена в &lt;b&gt;SelfLoader&lt;/b&gt; и &lt;b&gt;SelfLoader&lt;/b&gt; гарантирует , что пакеты &amp;laquo;Foo&amp;raquo; и 'Базь правильно имеют &lt;b&gt;SelfLoader &lt;/b&gt; &lt;code&gt;AUTOLOAD&lt;/code&gt; метод , когда данные после того, как &lt;code&gt;__DATA__&lt;/code&gt; сначала анализируется.</target>
        </trans-unit>
        <trans-unit id="802b42bef12951357b89ef5b2a13122fbe99ef9d" translate="yes" xml:space="preserve">
          <source>will allow calling myref() as</source>
          <target state="translated">позволит вызывать myref()как</target>
        </trans-unit>
        <trans-unit id="9f588d27875535a5a81b909a3f21a13470c6000b" translate="yes" xml:space="preserve">
          <source>will allow the user to specify an argument of the form &lt;code&gt;&quot;rsh cat file |&quot;&lt;/code&gt; , but will not work on a filename that happens to have a trailing space, while</source>
          <target state="translated">позволит пользователю указать аргумент в форме &lt;code&gt;&quot;rsh cat file |&quot;&lt;/code&gt; , но не будет работать с именем файла, в котором есть конечный пробел, а</target>
        </trans-unit>
        <trans-unit id="fa63ca9f0e0755bdf22da517506c259544730889" translate="yes" xml:space="preserve">
          <source>will allow the user to specify an argument of the form &lt;code&gt;&quot;rsh cat file |&quot;&lt;/code&gt;, but will not work on a filename that happens to have a trailing space, while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896a8bbc58c2bd4db6e58ba1e9d9306c693cc4a1" translate="yes" xml:space="preserve">
          <source>will also exclusively return the stringified form. See &lt;a href=&quot;#Stringification&quot;&gt;&quot;Stringification&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd84ef15151c715185c9415f2310209f946b6e6" translate="yes" xml:space="preserve">
          <source>will also turn on the &lt;code&gt;DEBUGGING&lt;/code&gt; compilation symbol which enables all the internal debugging code in Perl. There are a whole bunch of things you can debug with this: &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; lists them all, and the best way to find out about them is to play about with them. The most useful options are probably</source>
          <target state="translated">также &lt;code&gt;DEBUGGING&lt;/code&gt; символ компиляции DEBUGGING, который включает весь внутренний код отладки в Perl. Есть целый ряд вещей, которые вы можете отлаживать с помощью этого: &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; перечисляет их все, и лучший способ узнать о них - поиграть с ними. Наверное, самые полезные варианты</target>
        </trans-unit>
        <trans-unit id="1b4ff705741e98869e5239461b8d80b3db153b63" translate="yes" xml:space="preserve">
          <source>will always be appropriately set before</source>
          <target state="translated">всегда будет соответствующим образом настроено перед</target>
        </trans-unit>
        <trans-unit id="236b98de69a12d286878f3c3fee614ff4c44d620" translate="yes" xml:space="preserve">
          <source>will always work correctly. The &lt;code&gt;use&lt;/code&gt; will perform an automatic &lt;code&gt;$VERSION&lt;/code&gt; comparison using the floating point number given as the first term after the module name (e.g. above 1.002.003). In this case, the installed module is too old for the requested line, so you would see an error like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221e507f5d50964643dc6c83bd6b40e8a8fddc2a" translate="yes" xml:space="preserve">
          <source>will appear as the content of the element, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800502b2521db5dda562d1522427959496f11b6d" translate="yes" xml:space="preserve">
          <source>will automatically call &lt;code&gt;deflateSetDictionary&lt;/code&gt; directly after calling &lt;code&gt;deflateInit&lt;/code&gt; . The Adler32 value for the dictionary can be obtained by calling the method &lt;code&gt;$d-&amp;gt;dict_adler()&lt;/code&gt; .</source>
          <target state="translated">автоматически вызовет &lt;code&gt;deflateSetDictionary&lt;/code&gt; сразу после вызова &lt;code&gt;deflateInit&lt;/code&gt; . Значение Adler32 для словаря можно получить, вызвав метод &lt;code&gt;$d-&amp;gt;dict_adler()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac2d106304a82f8979d078a5d1a630e0bf0bbed4" translate="yes" xml:space="preserve">
          <source>will automatically call &lt;code&gt;deflateSetDictionary&lt;/code&gt; directly after calling &lt;code&gt;deflateInit&lt;/code&gt; . The Adler32 value for the dictionary can be obtained by calling the method &lt;code&gt;$d-&lt;/code&gt; dict_adler()&amp;gt;.</source>
          <target state="translated">автоматически вызовет &lt;code&gt;deflateSetDictionary&lt;/code&gt; сразу после вызова &lt;code&gt;deflateInit&lt;/code&gt; . Значение Adler32 для словаря можно получить, вызвав метод &lt;code&gt;$d-&lt;/code&gt; dict_adler ()&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="5ad1794ce988d5da967d29f31988d9b1e39c2fa6" translate="yes" xml:space="preserve">
          <source>will automatically call &lt;code&gt;deflateSetDictionary&lt;/code&gt; directly after calling &lt;code&gt;deflateInit&lt;/code&gt;. The Adler32 value for the dictionary can be obtained by calling the method &lt;code&gt;$d-&amp;gt;dict_adler()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4cadec0746e1a5ab432f127230623d5e7091d8" translate="yes" xml:space="preserve">
          <source>will automatically search in</source>
          <target state="translated">будет автоматически искать в</target>
        </trans-unit>
        <trans-unit id="047046a9e670aa4336adfdf1872082aee6bc3385" translate="yes" xml:space="preserve">
          <source>will automatically search when adding directories to @&lt;code&gt;INC&lt;/code&gt; . The elements in the list are separated by spaces. This is only useful if you have a perl library directory tree structured like the default one. See &lt;code&gt;INSTALL&lt;/code&gt; for how this works. The versioned site_perl directory was introduced in 5.005, so that is the lowest possible value.</source>
          <target state="translated">будет автоматически искать при добавлении каталогов в @ &lt;code&gt;INC&lt;/code&gt; . Элементы в списке разделены пробелами. Это полезно только в том случае, если у вас есть дерево каталогов библиотеки Perl, имеющее структуру по умолчанию. См. &lt;code&gt;INSTALL&lt;/code&gt; чтобы узнать, как это работает. Версионный каталог site_perl был введен в 5.005, так что это минимально возможное значение.</target>
        </trans-unit>
        <trans-unit id="1be9c85508caab35b73679ea35144599c7e7350e" translate="yes" xml:space="preserve">
          <source>will automatically search when adding directories to @&lt;code&gt;INC&lt;/code&gt;. The elements in the list are separated by spaces. This is only useful if you have a perl library directory tree structured like the default one. See &lt;code&gt;INSTALL&lt;/code&gt; for how this works. The versioned site_perl directory was introduced in 5.005, so that is the lowest possible value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb5ce9b5a641fecdac863d628b278ea98c6e6a" translate="yes" xml:space="preserve">
          <source>will be &quot; link&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ff54c41540566c24d6f01703b68b71c5db0b9e" translate="yes" xml:space="preserve">
          <source>will be a reference to a glob which can be treated as a perl file handle. It refers to the layer below.</source>
          <target state="translated">будет ссылкой на глобус,который можно рассматривать как ручку perl файла.Она относится к слою ниже.</target>
        </trans-unit>
        <trans-unit id="1f36a5ca854b3b31929c9a757a81400bb46baa6a" translate="yes" xml:space="preserve">
          <source>will be added to the list if not present, as will any types given in the list of</source>
          <target state="translated">будет добавлен в список,если его нет,а также любые типы,указанные в списке</target>
        </trans-unit>
        <trans-unit id="01d2f7edc347b2ba19724a9742a17654406e2533" translate="yes" xml:space="preserve">
          <source>will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee7188301caacf79b6af8dcb2c81f839071db3f" translate="yes" xml:space="preserve">
          <source>will be appropriately labeled using arrow notation. You can specify names for individual values to be dumped if you use the &lt;code&gt;Dump()&lt;/code&gt; method, or you can change the default &lt;code&gt;$VAR&lt;/code&gt; prefix to something else. See &lt;code&gt;$Data::Dumper::Varname&lt;/code&gt; and &lt;code&gt;$Data::Dumper::Terse&lt;/code&gt; below.</source>
          <target state="translated">будут соответствующим образом обозначены стрелками. Вы можете указать имена для отдельных значений, которые будут сброшены, если вы используете метод &lt;code&gt;Dump()&lt;/code&gt; , или вы можете изменить префикс &lt;code&gt;$VAR&lt;/code&gt; по умолчанию на что-то другое. Смотрите ниже &lt;code&gt;$Data::Dumper::Varname&lt;/code&gt; и &lt;code&gt;$Data::Dumper::Terse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5d33fb37764bb4ed1953600f4adf836066df187" translate="yes" xml:space="preserve">
          <source>will be assigned.</source>
          <target state="translated">будет назначен.</target>
        </trans-unit>
        <trans-unit id="4b924079b9f868588e8837d7d50c4a682e44dca9" translate="yes" xml:space="preserve">
          <source>will be associated with</source>
          <target state="translated">будет связан с</target>
        </trans-unit>
        <trans-unit id="02ae7304f1d07ef95ca9aa9e7fec2131cfb9259b" translate="yes" xml:space="preserve">
          <source>will be assumed.</source>
          <target state="translated">предполагается.</target>
        </trans-unit>
        <trans-unit id="69e74f77cfb1d64cc1f2b8b0e7553a0f92d29c07" translate="yes" xml:space="preserve">
          <source>will be assumed. In a</source>
          <target state="translated">предполагается.В</target>
        </trans-unit>
        <trans-unit id="3ffcf20d5b3d655c1147575473aace4b9819db78" translate="yes" xml:space="preserve">
          <source>will be at the start of a block, so variables may be defined in it.</source>
          <target state="translated">будет в начале блока,поэтому в нем могут быть определены переменные.</target>
        </trans-unit>
        <trans-unit id="cf4139ebee2a50a45a47c6c20c8db3e1866f4f96" translate="yes" xml:space="preserve">
          <source>will be automatically appended if no dot is present in the name. The workaround is as simple as that: since</source>
          <target state="translated">будет автоматически добавлена,если в названии нет точки.Обходной путь так же прост:поскольку</target>
        </trans-unit>
        <trans-unit id="5a46024906c3202205c9b86fbe8cd6c05e18f661" translate="yes" xml:space="preserve">
          <source>will be automatically closed.</source>
          <target state="translated">будет автоматически закрыт.</target>
        </trans-unit>
        <trans-unit id="44f5497538f2b5c2a094190f8f787c089a91ecdd" translate="yes" xml:space="preserve">
          <source>will be called, or whatever is the override, see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5391631955c2960d94bb3306b3cf823fd72eb2e" translate="yes" xml:space="preserve">
          <source>will be called, or whatever is the override, see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;.</source>
          <target state="translated">будет вызван, или что бы там ни было, см. &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39863063f526390d21b54f0437be449e32146e0d" translate="yes" xml:space="preserve">
          <source>will be evaluated by &lt;code&gt;wanted()&lt;/code&gt; .</source>
          <target state="translated">будет оцениваться &lt;code&gt;wanted()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49c84e603f0cc315494a3a65dd70828c74cf62f5" translate="yes" xml:space="preserve">
          <source>will be evaluated by &lt;code&gt;wanted()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28165e3b4da95eac8adbdc3dff70bd1aebff0f5c" translate="yes" xml:space="preserve">
          <source>will be extracted as if it were:</source>
          <target state="translated">будет извлечено,как если бы это было:</target>
        </trans-unit>
        <trans-unit id="b611847a2698bb295db4bc4d7f2ff88d3d7bfd77" translate="yes" xml:space="preserve">
          <source>will be incorrectly parsed as:</source>
          <target state="translated">будет неверно истолковано как:</target>
        </trans-unit>
        <trans-unit id="6c7777c83dbab33571eaae602d63da07c1775c05" translate="yes" xml:space="preserve">
          <source>will be interpreted DWIMically, often as a comparison against &lt;code&gt;$_&lt;/code&gt; , and may be null to generate a &lt;code&gt;default&lt;/code&gt; block.</source>
          <target state="translated">будет интерпретироваться как DWIM, часто как сравнение с &lt;code&gt;$_&lt;/code&gt; , и может иметь значение null для создания блока по &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56bf3e515d1d441ee0e9146d70e09a78643ae327" translate="yes" xml:space="preserve">
          <source>will be matched, otherwise the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a7d4b273decda8110596b43cd84682246d498f" translate="yes" xml:space="preserve">
          <source>will be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7f29cc164d0b094bc13b613b4f7ad90d505c7d" translate="yes" xml:space="preserve">
          <source>will be matched. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75321a4f0c9b87d6d48f48cc9f64b5f655545b5c" translate="yes" xml:space="preserve">
          <source>will be modified to the last $octets position at end of decode. Returns true if $terminator appears output, else returns false.</source>
          <target state="translated">будет изменена до последней позиции $octets в конце декодирования.Возвращает true,если на выходе появляется $terminator,иначе возвращает false.</target>
        </trans-unit>
        <trans-unit id="5444aae0d6bc7e881d14ae4362de10908be2d8bc" translate="yes" xml:space="preserve">
          <source>will be moved, and the buffer shortened. This hides the discarded text from any lexing code that runs later, as if the text had never appeared.</source>
          <target state="translated">будет перемещен,а буфер укорочен.Это скрывает отбракованный текст от любого лексического кода,который запускается позже,как будто текст никогда не появлялся.</target>
        </trans-unit>
        <trans-unit id="fb90a1b23ad48d9287e458757890f8e9565a8afc" translate="yes" xml:space="preserve">
          <source>will be retried. This lets you type &lt;code&gt;man debug&lt;/code&gt; or &lt;code&gt;man op&lt;/code&gt; from the debugger.</source>
          <target state="translated">будет повторена. Это позволяет вам набирать &lt;code&gt;man debug&lt;/code&gt; или &lt;code&gt;man op&lt;/code&gt; из отладчика.</target>
        </trans-unit>
        <trans-unit id="3ef44a7f700e88aec4c8b15477ecc69c13f947c3" translate="yes" xml:space="preserve">
          <source>will be returned.</source>
          <target state="translated">будет возвращена.</target>
        </trans-unit>
        <trans-unit id="25c4a5a27182872a6cb90fa147b876b2b25a6bf6" translate="yes" xml:space="preserve">
          <source>will be skipped and Perl will move onto the next regexp element. The second form is like an &lt;code&gt;'if () {} else {}'&lt;/code&gt; statement in Perl. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1970ab6c3e7f53185ec961c7b96e2bec3982ca45" translate="yes" xml:space="preserve">
          <source>will be some defined value if the open succeeds, but &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it fails;</source>
          <target state="translated">будет некоторое определенное значение, если открытие выполнено успешно, но &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если оно не удалось ;</target>
        </trans-unit>
        <trans-unit id="8f81d897072b2d575ec988457276a00117510045" translate="yes" xml:space="preserve">
          <source>will be some defined value if the open succeeds, but &lt;code&gt;undef&lt;/code&gt; if it fails;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e5f84ae9a025c95805cfbdda7aba5f2e868b56" translate="yes" xml:space="preserve">
          <source>will be treated as a boolean match because the rules say both a regex match and an explicit test on &lt;code&gt;$_&lt;/code&gt; will be treated as boolean.</source>
          <target state="translated">будет рассматриваться как логическое совпадение, потому что правила говорят, что совпадение регулярного выражения и явный тест для &lt;code&gt;$_&lt;/code&gt; будут обрабатываться как логические.</target>
        </trans-unit>
        <trans-unit id="7bdb6f7a9a73bafa81d66281077d808cd4f13be5" translate="yes" xml:space="preserve">
          <source>will be twice UTF-8 encoded. A &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; ':encoding(utf8)'&lt;/code&gt; would have avoided the bug, or explicitly opening also the</source>
          <target state="translated">будет дважды закодирован в UTF-8. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; ':encoding(utf8)'&lt;/code&gt; избежали бы ошибку, или явно открытие также</target>
        </trans-unit>
        <trans-unit id="a560936648ac4b97403233d44405d8318d395504" translate="yes" xml:space="preserve">
          <source>will be twice UTF-8 encoded. A &lt;code&gt;use open ':encoding(UTF-8)'&lt;/code&gt; would have avoided the bug, or explicitly opening also the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4475df6e379629545ed6276a569f3e2eb1ef11" translate="yes" xml:space="preserve">
          <source>will be undefined, since a recursive structure cannot be constructed using one Perl statement. You should set the &lt;code&gt;Purity&lt;/code&gt; flag to 1 to get additional statements that will correctly fill in these references. Moreover, if &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed when strictures are in effect, you need to ensure that any variables it accesses are previously declared.</source>
          <target state="translated">будет неопределенным, поскольку рекурсивная структура не может быть построена с помощью одного оператора Perl. Вы должны установить флаг &lt;code&gt;Purity&lt;/code&gt; в 1, чтобы получить дополнительные инструкции, которые будут правильно заполнять эти ссылки. Более того, если &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ed, когда действуют ограничения, вам необходимо убедиться, что все переменные, к которым он обращается, предварительно объявлены.</target>
        </trans-unit>
        <trans-unit id="8ce7f214a3e21cca55b06cd2b38ca2b2499455d4" translate="yes" xml:space="preserve">
          <source>will be undefined, since a recursive structure cannot be constructed using one Perl statement. You should set the &lt;code&gt;Purity&lt;/code&gt; flag to 1 to get additional statements that will correctly fill in these references. Moreover, if &lt;code&gt;eval&lt;/code&gt;ed when strictures are in effect, you need to ensure that any variables it accesses are previously declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee291ac39ab0e01b156565c777f946041d54d02" translate="yes" xml:space="preserve">
          <source>will be used as the handler for subsequently installed signals.</source>
          <target state="translated">будет использоваться в качестве обработчика последующих установленных сигналов.</target>
        </trans-unit>
        <trans-unit id="4d9bc2ddc4bc2a031e22465c252b6377da6be593" translate="yes" xml:space="preserve">
          <source>will be used for password.</source>
          <target state="translated">будет использован для пароля.</target>
        </trans-unit>
        <trans-unit id="189f210a322c7c2ba81e0ea9896d29ddd547e1b5" translate="yes" xml:space="preserve">
          <source>will be used for the name of the extension. If module_name is not supplied then the name of the first header file will be used, with the first character capitalized.</source>
          <target state="translated">будет использоваться для имени расширения.Если имя_модуля не указано,то будет использовано имя первого заголовочного файла с заглавными буквами.</target>
        </trans-unit>
        <trans-unit id="e9eed5428b5ca4033b733f6e4eabddbdf0bae1ff" translate="yes" xml:space="preserve">
          <source>will be used instead and the output piped through your favourite pager.</source>
          <target state="translated">будет использоваться вместо этого,а выходной трубопровод пройдет через ваш любимый пейджер.</target>
        </trans-unit>
        <trans-unit id="00ea2b0f5cc2323252a0479beca63d9f1b08fa40" translate="yes" xml:space="preserve">
          <source>will be warning free regardless of what $ref actually is.</source>
          <target state="translated">будет свободен от предупреждений,независимо от того,что $ref на самом деле.</target>
        </trans-unit>
        <trans-unit id="84d0d493e062ada8d958a287014680fe0c8e6db1" translate="yes" xml:space="preserve">
          <source>will be zero.</source>
          <target state="translated">будет ноль.</target>
        </trans-unit>
        <trans-unit id="827f71acdbb8adc150e90853e1aceebe12e59bc0" translate="yes" xml:space="preserve">
          <source>will be zero. The file descriptor may have the close-on-exec flag either set or clear; it is the responsibility of the layer that takes ownership of it to get the flag into the correct state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c5acef5fb2e47df2bf90c4d4c3a7831000cfcd" translate="yes" xml:space="preserve">
          <source>will become:</source>
          <target state="translated">станет:</target>
        </trans-unit>
        <trans-unit id="e0318a0bb7d80ff064a8678b238ad297c5e7ed6b" translate="yes" xml:space="preserve">
          <source>will both result in the proper type due to the way the overloaded math works.</source>
          <target state="translated">в результате чего оба типа будут правильными из-за того,как работает перегруженная математика.</target>
        </trans-unit>
        <trans-unit id="ed44e6c8395b95eb951ed01fb3df61dd611bca88" translate="yes" xml:space="preserve">
          <source>will build a Perl that supports dynamic loading (which requires a shared</source>
          <target state="translated">построит Perl,поддерживающий динамическую загрузку (для которой требуется разделяемый</target>
        </trans-unit>
        <trans-unit id="2287cd95ce18a71437cb52ed8b1caefedff9eaca" translate="yes" xml:space="preserve">
          <source>will call the Unix emulation library's &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; emulation, which attempts to provide emulation of the stdin, stdout, stderr in force in the parent, providing the child program uses a compatible version of the emulation library.</source>
          <target state="translated">вызовет эмуляцию &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; библиотеки эмуляции Unix , которая пытается обеспечить эмуляцию stdin, stdout, stderr, действующих в родительском элементе, при условии, что дочерняя программа использует совместимую версию библиотеки эмуляции.</target>
        </trans-unit>
        <trans-unit id="9dd319675b257f0d34e3db5d71aeabc5c8458128" translate="yes" xml:space="preserve">
          <source>will call the native command line direct and no such emulation of a child Unix program will exists. Mileage &lt;b&gt;will&lt;/b&gt; vary. (RISC OS)</source>
          <target state="translated">вызовет собственную командную строку напрямую, и такой эмуляции дочерней программы Unix не будет. Пробег &lt;b&gt;будет&lt;/b&gt; меняться. (ОС RISC)</target>
        </trans-unit>
        <trans-unit id="5562a8abf4cafe3ad9adfb9e7cbb5beff80d11ed" translate="yes" xml:space="preserve">
          <source>will cause the entire file to be slurped. For large files, it's better to loop:</source>
          <target state="translated">приведет к тому,что весь файл будет замят.Для больших файлов лучше зацикливаться:</target>
        </trans-unit>
        <trans-unit id="c184916ba1fdcc854b79c2ce8f3611570d536868" translate="yes" xml:space="preserve">
          <source>will cause the handler to be called with a similar argument list (except, of course, that &lt;code&gt;$_[2]&lt;/code&gt; will be a reference to the variable).</source>
          <target state="translated">вызовет обработчик с аналогичным списком аргументов (за исключением, конечно, того, что &lt;code&gt;$_[2]&lt;/code&gt; будет ссылкой на переменную).</target>
        </trans-unit>
        <trans-unit id="caee4713a9cdf89a7945419e9d20fb846188deb3" translate="yes" xml:space="preserve">
          <source>will compile XS code into C code by embedding the constructs necessary to let C functions manipulate Perl values and creates the glue necessary to let Perl access those functions.</source>
          <target state="translated">скомпилирует XS-код в код C путем встраивания конструкций,необходимых для того,чтобы позволить функциям C манипулировать значениями Perl,и создаст клей,необходимый для того,чтобы дать Perl доступ к этим функциям.</target>
        </trans-unit>
        <trans-unit id="bf8a15fdda50374b4163d238b2097ac33d5e0df4" translate="yes" xml:space="preserve">
          <source>will compile XS code into C code by embedding the constructs necessary to let C functions manipulate Perl values and creates the glue necessary to let Perl access those functions. The compiler uses typemaps to determine how to map C function parameters and variables to Perl values.</source>
          <target state="translated">скомпилирует XS-код в код C путем встраивания конструкций,необходимых для того,чтобы позволить функциям C манипулировать значениями Perl,и создаст клей,необходимый для того,чтобы дать Perl доступ к этим функциям.Компилятор использует типовые карты для определения того,как сопоставить параметры функций и переменные языка Си со значениями Perl.</target>
        </trans-unit>
        <trans-unit id="d62fd6ebb61189db376df4b354a4f3e4747af5de" translate="yes" xml:space="preserve">
          <source>will construct a &quot;binary&quot; stream regardless of the platform defaults, but then enable UTF-8 translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958cf42d40b9694a262fb0dd1a956ccae7aeee61" translate="yes" xml:space="preserve">
          <source>will construct a &quot;binary&quot; stream, but then enable UTF-8 translation.</source>
          <target state="translated">построит &quot;двоичный&quot; поток,но затем включит трансляцию UTF-8.</target>
        </trans-unit>
        <trans-unit id="ca2af336688d1e8d5e00a2d443084fd9b744a776" translate="yes" xml:space="preserve">
          <source>will correctly push BLUE onto the top of the stack.</source>
          <target state="translated">будет правильно нажимать BLUE на верхнюю часть стека.</target>
        </trans-unit>
        <trans-unit id="ff1d4f6ecbef028562f10ecf8ba054ec728c45eb" translate="yes" xml:space="preserve">
          <source>will create the file &quot;FOO.BAT&quot;. Note &quot;pl2bat&quot; strips any .pl suffix and adds a .bat suffix to the generated file.</source>
          <target state="translated">создаст файл &quot;FOO.BAT&quot;.Обратите внимание,что &quot;pl2bat&quot; удаляет любой .pl суффикс и добавляет .bat суффикс к сгенерированному файлу.</target>
        </trans-unit>
        <trans-unit id="d9d73e9ce730e824d01662cbda4e3da1fcf3537f" translate="yes" xml:space="preserve">
          <source>will do an implicit</source>
          <target state="translated">будет делать подразумеваемый</target>
        </trans-unit>
        <trans-unit id="abce4a07e1007ee8dd7654b319b0cda84bc64efd" translate="yes" xml:space="preserve">
          <source>will do it for you.</source>
          <target state="translated">сделает это за тебя.</target>
        </trans-unit>
        <trans-unit id="7108818138127d16c4094725bba30a3d913149fe" translate="yes" xml:space="preserve">
          <source>will do what you mean (fail if stuff is empty)</source>
          <target state="translated">сделает то,что ты имеешь в виду (провалится,если вещи будут пустыми).</target>
        </trans-unit>
        <trans-unit id="066b5eeba4c2198d50173831282c3c44664d4d50" translate="yes" xml:space="preserve">
          <source>will effectively become</source>
          <target state="translated">фактически станет</target>
        </trans-unit>
        <trans-unit id="7b01657f6df9723f80897f0a01fd87afb4d0fa02" translate="yes" xml:space="preserve">
          <source>will extract and format the documentation from any file in the current directory, any Perl module installed on the system, or any of the standard documentation pages, such as this one. Use &lt;code&gt;perldoc &amp;lt;name&amp;gt;&lt;/code&gt; to get information on any of the utilities described in this document.</source>
          <target state="translated">извлечет и отформатирует документацию из любого файла в текущем каталоге, любого модуля Perl, установленного в системе, или любой из стандартных страниц документации, например этой. Используйте &lt;code&gt;perldoc &amp;lt;name&amp;gt;&lt;/code&gt; , чтобы получить информацию о любой из утилит, описанных в этом документе.</target>
        </trans-unit>
        <trans-unit id="915564ffa096011256f1ddfb99671491100c6813" translate="yes" xml:space="preserve">
          <source>will fail, since Test.pm considers the second argument to be a regex! The best bet is to use the one-argument form:</source>
          <target state="translated">провалится,так как Test.pm считает,что второй аргумент-это регекс! Лучше всего использовать однопараметрическую форму:</target>
        </trans-unit>
        <trans-unit id="dca2bf48d13d76f15d7665e7936c9aade6522f0c" translate="yes" xml:space="preserve">
          <source>will first prepend &lt;code&gt;3&lt;/code&gt; onto the front of &lt;code&gt;@INC&lt;/code&gt;, then prepend &lt;code&gt;2&lt;/code&gt;, and then prepend &lt;code&gt;1&lt;/code&gt;. The result is that &lt;code&gt;@INC&lt;/code&gt; begins with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2e76667ea527c705ec1c1441371cd94ab891b0" translate="yes" xml:space="preserve">
          <source>will first use the &lt;a href=&quot;lib&quot;&gt;lib&lt;/a&gt; pragma to prepend &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;@INC&lt;/code&gt;, then it will prepend &lt;code&gt;2&lt;/code&gt;, then it will prepend &lt;code&gt;3&lt;/code&gt;, resulting in an &lt;code&gt;@INC&lt;/code&gt; that begins with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212fc5e54752a78ba3b78f936f759ccf3eed955c" translate="yes" xml:space="preserve">
          <source>will generate or as a reference to a hash.</source>
          <target state="translated">будет генерировать или как ссылка на хэш.</target>
        </trans-unit>
        <trans-unit id="2a53f1b0c5018113eb37388423f971ca2d0e17a9" translate="yes" xml:space="preserve">
          <source>will give the same result with or without &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; The power operator &lt;code&gt;**&lt;/code&gt; is also not affected, so that 2 ** .5 is always the square root of 2. Now, it so happens that the pre- and post- increment and decrement operators, ++ and --, are not affected by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; either. Some may rightly consider this to be a bug -- but at least it's a long-standing one.</source>
          <target state="translated">даст тот же результат с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; или без него ; Оператор мощности &lt;code&gt;**&lt;/code&gt; также не затрагивается, так что 2 ** .5 всегда является квадратным корнем из 2. Так случилось, что операторы пре- и пост-инкремента и декремента, ++ и -, не являются зависит от &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; либо. Некоторые могут справедливо посчитать это ошибкой, но, по крайней мере, она существует давно.</target>
        </trans-unit>
        <trans-unit id="02abd8e5d1214af9cc4030606e16213cf01f104e" translate="yes" xml:space="preserve">
          <source>will give the same result with or without &lt;code&gt;use integer;&lt;/code&gt; The power operator &lt;code&gt;**&lt;/code&gt; is also not affected, so that 2 ** .5 is always the square root of 2. Now, it so happens that the pre- and post- increment and decrement operators, ++ and --, are not affected by &lt;code&gt;use integer;&lt;/code&gt; either. Some may rightly consider this to be a bug -- but at least it's a long-standing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e522bd0030bde0cd245c6a6a2088de240b790d1c" translate="yes" xml:space="preserve">
          <source>will have exactly the opposite restrictions.</source>
          <target state="translated">будут иметь прямо противоположные ограничения.</target>
        </trans-unit>
        <trans-unit id="76cbd3657c221b93aeeaf5ae962bd011f97b5f9f" translate="yes" xml:space="preserve">
          <source>will have exactly the opposite restrictions. (However, some shells support the syntax &lt;code&gt;perl your_program.pl &amp;lt;( rsh cat file )&lt;/code&gt;, which produces a filename that can be opened normally.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911e01951fb3b7f75048f4c14389ccff0d911ab7" translate="yes" xml:space="preserve">
          <source>will have the same effect. This construct is</source>
          <target state="translated">будет иметь тот же эффект.Эта конструкция</target>
        </trans-unit>
        <trans-unit id="027d9dd767a399ed29c2f093303b12c4fc85e09e" translate="yes" xml:space="preserve">
          <source>will have their leading dashes stripped.</source>
          <target state="translated">будут разобраны их ведущие штрихи.</target>
        </trans-unit>
        <trans-unit id="2194c108734d216b207d2d189e6b066bdc993596" translate="yes" xml:space="preserve">
          <source>will have to specify the installation directories as these most probably have changed since perl itself has been installed. They will have to do this by calling</source>
          <target state="translated">придется указать каталоги установки,так как они,скорее всего,изменились с момента установки самого perl.Они должны будут сделать это,позвонив</target>
        </trans-unit>
        <trans-unit id="fd5c38ed8c7727c38022b12bfd4163d2940b7d68" translate="yes" xml:space="preserve">
          <source>will hold.</source>
          <target state="translated">выдержит.</target>
        </trans-unit>
        <trans-unit id="cbda0dd99d938557f490efeb2ffa5530b4ef022d" translate="yes" xml:space="preserve">
          <source>will in most computers print 0, not 1, because even such simple numbers as 0.6 and 0.2 cannot be presented exactly by floating-point numbers. What you think in the above as 'three' is really more like 2.9999999999999995559.</source>
          <target state="translated">в большинстве компьютеров выведет 0,а не 1,потому что даже такие простые числа,как 0.6 и 0.2 не могут быть точно представлены числами с плавающей точкой.То,что вы думаете,как 'три',на самом деле больше похоже на 2.99999999999995559.</target>
        </trans-unit>
        <trans-unit id="0b96340c4517d8e5916a24e5c0c58c099ab880e5" translate="yes" xml:space="preserve">
          <source>will initially increment &lt;code&gt;$cnt&lt;/code&gt; up to 8; then during backtracking, its value will be unwound back to 4, which is the value assigned to &lt;code&gt;$res&lt;/code&gt; . At the end of the regex execution, $cnt will be wound back to its initial value of 0.</source>
          <target state="translated">изначально увеличивает &lt;code&gt;$cnt&lt;/code&gt; до 8; затем во время поиска с возвратом его значение будет восстановлено до 4, что является значением, присвоенным &lt;code&gt;$res&lt;/code&gt; . В конце выполнения регулярного выражения $ cnt будет возвращено к исходному значению 0.</target>
        </trans-unit>
        <trans-unit id="285865a2cbeddc4341b4ed732966759c44ff328e" translate="yes" xml:space="preserve">
          <source>will initially increment &lt;code&gt;$cnt&lt;/code&gt; up to 8; then during backtracking, its value will be unwound back to 4, which is the value assigned to &lt;code&gt;$res&lt;/code&gt;. At the end of the regex execution, &lt;code&gt;$cnt&lt;/code&gt; will be wound back to its initial value of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482fd60cac120fdf28a98539580c1dc1bf947239" translate="yes" xml:space="preserve">
          <source>will invoke &lt;code&gt;ExtUtils::Embed&lt;/code&gt; functions while building your application.</source>
          <target state="translated">вызовет функции &lt;code&gt;ExtUtils::Embed&lt;/code&gt; при сборке вашего приложения.</target>
        </trans-unit>
        <trans-unit id="ec31983ab84cf33f76bb7f28f95cd8a45d78dd13" translate="yes" xml:space="preserve">
          <source>will it apply the &lt;code&gt;Bent&lt;/code&gt; attribute to the variable.</source>
          <target state="translated">будет ли он применять к переменной атрибут &lt;code&gt;Bent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdb47b66626fed7da3a69fabf094bf802562db6c" translate="yes" xml:space="preserve">
          <source>will just extract the &quot;USAGE&quot; section; some of the utilities will automatically call</source>
          <target state="translated">просто извлечет секцию &quot;USAGE&quot;;некоторые утилиты будут автоматически вызываться</target>
        </trans-unit>
        <trans-unit id="be6de1408397f34ac967e76e8f03f5647f72bce4" translate="yes" xml:space="preserve">
          <source>will load MODULE only if CONDITION evaluates to true. The above statement has no effect unless &lt;code&gt;CONDITION&lt;/code&gt; is true. If the CONDITION does evaluate to true, then the above line has the same effect as:</source>
          <target state="translated">будет загружать MODULE, только если CONDITION истинно. Приведенное выше утверждение не действует, если &lt;code&gt;CONDITION&lt;/code&gt; не истинно. Если УСЛОВИЕ действительно истинно, то приведенная выше строка имеет тот же эффект, что и:</target>
        </trans-unit>
        <trans-unit id="417947d63110228931cd8773ca1769b0152ef181" translate="yes" xml:space="preserve">
          <source>will lock the tied file. &lt;code&gt;MODE&lt;/code&gt; has the same meaning as the second argument to the Perl built-in &lt;code&gt;&lt;a href=&quot;../functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; function; for example &lt;code&gt;LOCK_SH&lt;/code&gt; or &lt;code&gt;LOCK_EX | LOCK_NB&lt;/code&gt; . (These constants are provided by the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Fcntl ':flock'&lt;/code&gt; declaration.)</source>
          <target state="translated">заблокирует связанный файл. &lt;code&gt;MODE&lt;/code&gt; имеет то же значение, что и второй аргумент встроенной в Perl функции &lt;code&gt;&lt;a href=&quot;../functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; ; например &lt;code&gt;LOCK_SH&lt;/code&gt; или &lt;code&gt;LOCK_EX | LOCK_NB&lt;/code&gt; . (Эти константы предоставляются объявлением &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Fcntl ':flock'&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="6117fea4004807a86bb9e2bc24240fa85f9a4d9a" translate="yes" xml:space="preserve">
          <source>will lock the tied file. &lt;code&gt;MODE&lt;/code&gt; has the same meaning as the second argument to the Perl built-in &lt;code&gt;flock&lt;/code&gt; function; for example &lt;code&gt;LOCK_SH&lt;/code&gt; or &lt;code&gt;LOCK_EX | LOCK_NB&lt;/code&gt;. (These constants are provided by the &lt;code&gt;use Fcntl ':flock'&lt;/code&gt; declaration.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde5332cf051e296efcfa60b991d8b50c9c48011" translate="yes" xml:space="preserve">
          <source>will look like this:</source>
          <target state="translated">будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="9e385389da5f12d892ae543d3886ffd128ec573e" translate="yes" xml:space="preserve">
          <source>will match &quot;foo&quot; using the locale's rules for case-insensitive matching, but the &lt;code&gt;/l&lt;/code&gt; does not affect how the &lt;code&gt;\U&lt;/code&gt; operates. Most likely you want both of them to use locale rules. To do this, instead compile the regular expression within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . This both implicitly adds the &lt;code&gt;/l&lt;/code&gt; , and applies locale rules to the &lt;code&gt;\U&lt;/code&gt; . The lesson is to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , and not &lt;code&gt;/l&lt;/code&gt; explicitly.</source>
          <target state="translated">будет соответствовать &amp;laquo;Foo&amp;raquo; , используя правила локали для регистронезависимого согласования, но &lt;code&gt;/l&lt;/code&gt; не влияет , как &lt;code&gt;\U&lt;/code&gt; работает. Скорее всего, вы хотите, чтобы они оба использовали правила локали. Для этого вместо этого скомпилируйте регулярное выражение в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . Это и неявно добавляет &lt;code&gt;/l&lt;/code&gt; , и применяет региональные правила к &lt;code&gt;\U&lt;/code&gt; . Урок состоит в том, чтобы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , а не &lt;code&gt;/l&lt;/code&gt; явно.</target>
        </trans-unit>
        <trans-unit id="d739bc2509a1b3d9f597cd5bbab08f36e734ef53" translate="yes" xml:space="preserve">
          <source>will match &quot;foo&quot; using the locale's rules for case-insensitive matching, but the &lt;code&gt;/l&lt;/code&gt; does not affect how the &lt;code&gt;\U&lt;/code&gt; operates. Most likely you want both of them to use locale rules. To do this, instead compile the regular expression within the scope of &lt;code&gt;use locale&lt;/code&gt;. This both implicitly adds the &lt;code&gt;/l&lt;/code&gt;, and applies locale rules to the &lt;code&gt;\U&lt;/code&gt;. The lesson is to &lt;code&gt;use locale&lt;/code&gt;, and not &lt;code&gt;/l&lt;/code&gt; explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109f68c2b8ad8f0d77ed465628f16e2a2c2e7277" translate="yes" xml:space="preserve">
          <source>will match &lt;code&gt;\x8e&lt;/code&gt; , even though &lt;code&gt;\x89&lt;/code&gt; is &quot;i&quot; and &lt;code&gt;\x91 &lt;/code&gt; is &quot;j&quot;, and &lt;code&gt;\x8e&lt;/code&gt; is a gap character, from the alphabetic viewpoint.</source>
          <target state="translated">будет соответствовать &lt;code&gt;\x8e&lt;/code&gt; , даже если &lt;code&gt;\x89&lt;/code&gt; - это &amp;laquo;i&amp;raquo;, а &lt;code&gt;\x91 &lt;/code&gt; - &amp;laquo;j&amp;raquo;, а &lt;code&gt;\x8e&lt;/code&gt; - это символ пробела с точки зрения алфавита.</target>
        </trans-unit>
        <trans-unit id="2b2b762b39aff3794056e6340056828aa00cc7fc" translate="yes" xml:space="preserve">
          <source>will match &lt;code&gt;\x8e&lt;/code&gt;, even though &lt;code&gt;\x89&lt;/code&gt; is &quot;i&quot; and &lt;code&gt;\x91 &lt;/code&gt; is &quot;j&quot;, and &lt;code&gt;\x8e&lt;/code&gt; is a gap character, from the alphabetic viewpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a6766448c16d38bfe8dff80f09487335928909" translate="yes" xml:space="preserve">
          <source>will match &lt;code&gt;blah&lt;/code&gt; in any case, some spaces, and an exact (</source>
          <target state="translated">в любом случае будет соответствовать &lt;code&gt;blah&lt;/code&gt; , некоторым пробелам и точному (</target>
        </trans-unit>
        <trans-unit id="7d850ee28348441c8fb351f520b588b1ffa9761a" translate="yes" xml:space="preserve">
          <source>will match the filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3ef3a495124b2a0e6f942ca1a68028e5634cba" translate="yes" xml:space="preserve">
          <source>will match, and &lt;code&gt;$1&lt;/code&gt; will be &lt;code&gt;AB&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; will be &lt;code&gt;&quot;B&quot;&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt; will not be set. If another branch in the inner parentheses was matched, such as in the string 'ACDE', then the &lt;code&gt;&quot;D&quot;&lt;/code&gt; and &lt;code&gt;&quot;E&quot;&lt;/code&gt; would have to be matched as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b19d9e504a210ea89daa1807562b0478767084f" translate="yes" xml:space="preserve">
          <source>will match, and &lt;code&gt;$1&lt;/code&gt; will be &lt;code&gt;AB&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; will be &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; will not be set. If another branch in the inner parentheses was matched, such as in the string 'ACDE', then the &lt;code&gt;D&lt;/code&gt; and &lt;code&gt;E&lt;/code&gt; would have to be matched as well.</source>
          <target state="translated">будет соответствовать, и &lt;code&gt;$1&lt;/code&gt; будет &lt;code&gt;AB&lt;/code&gt; , а &lt;code&gt;$2&lt;/code&gt; будет &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; не будет установлено. Если была сопоставлена ​​другая ветвь во внутренних круглых скобках, например, в строке &amp;laquo;ACDE&amp;raquo;, то &lt;code&gt;D&lt;/code&gt; и &lt;code&gt;E&lt;/code&gt; также должны быть сопоставлены.</target>
        </trans-unit>
        <trans-unit id="db2173f99c15aec604a37b03bb19ad87c2e9686f" translate="yes" xml:space="preserve">
          <source>will modify $u2 as well as $u1, because both variables are references to the same array. Had &lt;code&gt;getusers&lt;/code&gt; not been memoized, $u1 and $u2 would have referred to different arrays.</source>
          <target state="translated">изменит $ u2, а также $ u1, потому что обе переменные являются ссылками на один и тот же массив. Если бы пользователи &lt;code&gt;getusers&lt;/code&gt; не были мемоизированы, $ u1 и $ u2 ссылались бы на разные массивы.</target>
        </trans-unit>
        <trans-unit id="56a0e2c0e3a6bfe2b40c936f6d822ddccc889e47" translate="yes" xml:space="preserve">
          <source>will neither assign 42 to $x</source>
          <target state="translated">не будет присваивать 42 к $x</target>
        </trans-unit>
        <trans-unit id="9edcb2b7ab077ed29ec9d28bcba6b5e91ef13ffe" translate="yes" xml:space="preserve">
          <source>will never be accessed. Additionally, the existence of</source>
          <target state="translated">никогда не будет доступен.Кроме того,существование</target>
        </trans-unit>
        <trans-unit id="bd8807e68761819a553cf78efa78fb8b26c500c5" translate="yes" xml:space="preserve">
          <source>will never match, as the &lt;code&gt;a++&lt;/code&gt; will gobble up all the &lt;code&gt;&quot;a&quot;&lt;/code&gt;'s in the string and won't leave any for the remaining part of the pattern. This feature can be extremely useful to give perl hints about where it shouldn't backtrack. For instance, the typical &quot;match a double-quoted string&quot; problem can be most efficiently performed when written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524ef249301f2929ce4307d365e5fa52cb183591" translate="yes" xml:space="preserve">
          <source>will never match, as the &lt;code&gt;a++&lt;/code&gt; will gobble up all the &lt;code&gt;a&lt;/code&gt; 's in the string and won't leave any for the remaining part of the pattern. This feature can be extremely useful to give perl hints about where it shouldn't backtrack. For instance, the typical &quot;match a double-quoted string&quot; problem can be most efficiently performed when written as:</source>
          <target state="translated">никогда не будет совпадать, поскольку &lt;code&gt;a++&lt;/code&gt; сожрет все &lt;code&gt;a&lt;/code&gt; в строке и не оставит ничего для оставшейся части шаблона. Эта функция может быть чрезвычайно полезной для подсказок Perl о том, где не следует возвращаться. Например, типичная задача &amp;laquo;сопоставить строку с двойными кавычками&amp;raquo; может быть наиболее эффективно решена, если записать ее как</target>
        </trans-unit>
        <trans-unit id="cf101365c53e8f42c5b08ca87943df667dc3b58c" translate="yes" xml:space="preserve">
          <source>will not affect</source>
          <target state="translated">не повлияет</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
