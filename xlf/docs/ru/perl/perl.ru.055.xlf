<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="49b0c6a17d4f130bfec02b6faa0add21c28561e6" translate="yes" xml:space="preserve">
          <source>Spaces in the argument delimit distinct patterns, so &lt;code&gt;glob('*.exe *.dll')&lt;/code&gt; globs all filenames that end in &lt;code&gt;.exe&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt;. If you want to put in literal spaces in the glob pattern, you can escape them with either double quotes, or backslashes. e.g. &lt;code&gt;glob('c:/&quot;Program Files&quot;/*/*.dll')&lt;/code&gt;, or &lt;code&gt;glob('c:/Program\ Files/*/*.dll')&lt;/code&gt;. The argument is tokenized using &lt;code&gt;Text::ParseWords::parse_line()&lt;/code&gt;, so see &lt;a href=&quot;Text::ParseWords&quot;&gt;Text::ParseWords&lt;/a&gt; for details of the quoting rules used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a8df9b760336178fca425339ec1c7e542a2463" translate="yes" xml:space="preserve">
          <source>Spain</source>
          <target state="translated">Spain</target>
        </trans-unit>
        <trans-unit id="39b253a2d834caa9ad3a83fa215c9eabff3effb2" translate="yes" xml:space="preserve">
          <source>Speaking of debugging, there are several pragmas available to control and debug regexps in Perl. We have already encountered one pragma in the previous section, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval';&lt;/code&gt; , that allows variable interpolation and code expressions to coexist in a regexp. The other pragmas are</source>
          <target state="translated">Говоря об отладке, есть несколько прагм, доступных для управления и отладки регулярных выражений в Perl. Мы уже встречали одну прагму в предыдущем разделе, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval';&lt;/code&gt; , что позволяет интерполяции переменных и кодовым выражениям сосуществовать в регулярном выражении. Другие прагмы</target>
        </trans-unit>
        <trans-unit id="0bc7408574e69956819d40445cf53d374170785f" translate="yes" xml:space="preserve">
          <source>Speaking of debugging, there are several pragmas available to control and debug regexps in Perl. We have already encountered one pragma in the previous section, &lt;code&gt;use re 'eval';&lt;/code&gt;, that allows variable interpolation and code expressions to coexist in a regexp. The other pragmas are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdd144975003eba8959b061eba84041ab9e203b" translate="yes" xml:space="preserve">
          <source>Speaking of the build directory. Do I have to clean it up myself?</source>
          <target state="translated">Кстати,о каталоге сборки.Мне что,самому его убирать?</target>
        </trans-unit>
        <trans-unit id="cf16c389cb12320d4c2b7cc5db763c0d5676df4a" translate="yes" xml:space="preserve">
          <source>Speaking of things like &lt;code&gt;@{$AoA[$i]}&lt;/code&gt; , the following are actually the same thing:</source>
          <target state="translated">Говоря о таких вещах, как &lt;code&gt;@{$AoA[$i]}&lt;/code&gt; , на самом деле это одно и то же:</target>
        </trans-unit>
        <trans-unit id="83aa40d82b5ec161297d7a176f14d055b800dde4" translate="yes" xml:space="preserve">
          <source>Speaking of things like &lt;code&gt;@{$AoA[$i]}&lt;/code&gt;, the following are actually the same thing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942078ca2d04f25545a316c123a392c4d5d339fd" translate="yes" xml:space="preserve">
          <source>Special</source>
          <target state="translated">Special</target>
        </trans-unit>
        <trans-unit id="735223734da1211964b616a8067d85971e38faaf" translate="yes" xml:space="preserve">
          <source>Special &lt;code&gt;make test&lt;/code&gt; targets</source>
          <target state="translated">Мишени для &lt;code&gt;make test&lt;/code&gt; специальных марок</target>
        </trans-unit>
        <trans-unit id="fdfdc56af4901b065f0b9e0022efafcd50dad6b5" translate="yes" xml:space="preserve">
          <source>Special Backtracking Control Verbs</source>
          <target state="translated">Специальные глаголы управления обратным движением</target>
        </trans-unit>
        <trans-unit id="59f265692e8532f3f9f4cf8098a358d626fbb2eb" translate="yes" xml:space="preserve">
          <source>Special Cases</source>
          <target state="translated">Специальные случаи</target>
        </trans-unit>
        <trans-unit id="c09831be5235393e990f8ebc035a5453fef09355" translate="yes" xml:space="preserve">
          <source>Special Characters Inside a Bracketed Character Class</source>
          <target state="translated">Специальные символы Внутри класса символов в квадратных скобках</target>
        </trans-unit>
        <trans-unit id="076a0893de022e884b65708a98aa1abe56ee52c6" translate="yes" xml:space="preserve">
          <source>Special Keys for &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt;</source>
          <target state="translated">Специальные клавиши для &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd43bdf2a69d1a862223b1bbefa15cce4dedd0cb" translate="yes" xml:space="preserve">
          <source>Special Keys for &lt;code&gt;use overload&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bc7b98edc6763e9d6c0abf8b4fa80886e2046f" translate="yes" xml:space="preserve">
          <source>Special Keys for use overload</source>
          <target state="translated">Специальные ключи для использования при перегрузке</target>
        </trans-unit>
        <trans-unit id="749ad8df41c6024cc71b56ff395f77ccf401c88e" translate="yes" xml:space="preserve">
          <source>Special Literals</source>
          <target state="translated">Специальные буквы</target>
        </trans-unit>
        <trans-unit id="d4cb1cbcc64290386b7c11a130ff81a51320cc9f" translate="yes" xml:space="preserve">
          <source>Special Patterns</source>
          <target state="translated">Специальные модели</target>
        </trans-unit>
        <trans-unit id="f4d1e4b7e421f179bd6711768af6fd760a8db942" translate="yes" xml:space="preserve">
          <source>Special Topics</source>
          <target state="translated">Специальные темы</target>
        </trans-unit>
        <trans-unit id="93e61da05b321c91a757c91aeb83a231cf936002" translate="yes" xml:space="preserve">
          <source>Special behaviors for OS X</source>
          <target state="translated">Специальное поведение для OS X</target>
        </trans-unit>
        <trans-unit id="e0e39ed69d2c670390ee8a8802b8ef63f9291065" translate="yes" xml:space="preserve">
          <source>Special floating point: infinity (Inf) and not-a-number (NaN)</source>
          <target state="translated">Специальная плавающая запятая:бесконечность (Inf)и не-число (NaN)</target>
        </trans-unit>
        <trans-unit id="ca393fa33bfec26b8152f3f8b37c3b963f3cd851" translate="yes" xml:space="preserve">
          <source>Special make test targets</source>
          <target state="translated">Специальные цели тестирования</target>
        </trans-unit>
        <trans-unit id="3bc242af481a6d0584675ca62d67c528336abb44" translate="yes" xml:space="preserve">
          <source>Special note should be made of the return values for a few properties:</source>
          <target state="translated">Следует обратить особое внимание на возвращаемые значения для нескольких свойств:</target>
        </trans-unit>
        <trans-unit id="b129e56f9be43046b321c79a90495916b0276970" translate="yes" xml:space="preserve">
          <source>Special package variables when using &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;. Because of this specialness &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; don't need to be declared (using &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our()&lt;/a&gt;&lt;/code&gt;) even when using the &lt;code&gt;strict 'vars'&lt;/code&gt; pragma. Don't lexicalize them with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $a&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $b&lt;/code&gt; if you want to be able to use them in the &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; comparison block or function.</source>
          <target state="translated">Специальные переменные пакета при использовании &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/sort&quot;&gt;Sort&lt;/a&gt; . Из-за этой особенности &lt;code&gt;$a&lt;/code&gt; и &lt;code&gt;$b&lt;/code&gt; не нужно объявлять (с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our()&lt;/a&gt;&lt;/code&gt; ) даже при использовании &lt;code&gt;strict 'vars'&lt;/code&gt; . Не лексизируйте их с помощью &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $a&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $b&lt;/code&gt; если вы хотите использовать их в блоке или функции сравнения &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11283dda6b65d5275c4aa3ef39c12903730f96b2" translate="yes" xml:space="preserve">
          <source>Special package variables when using &lt;code&gt;sort()&lt;/code&gt;, see &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt;. Because of this specialness &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; don't need to be declared (using &lt;code&gt;use vars&lt;/code&gt;, or &lt;code&gt;our()&lt;/code&gt;) even when using the &lt;code&gt;strict 'vars'&lt;/code&gt; pragma. Don't lexicalize them with &lt;code&gt;my $a&lt;/code&gt; or &lt;code&gt;my $b&lt;/code&gt; if you want to be able to use them in the &lt;code&gt;sort()&lt;/code&gt; comparison block or function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c400e57824d764b6a1f1b8ed067b982b5491dad3" translate="yes" xml:space="preserve">
          <source>Special regop that is used by &lt;code&gt;re_intuit_start()&lt;/code&gt; to check if a pattern can match at a certain position. For instance if the regex engine knows that the pattern must start with a 'Z' then it can scan the string until it finds one and then launch the regex engine from there. The routine that handles this is called &lt;code&gt;find_by_class()&lt;/code&gt; . Sometimes this field points at a regop embedded in the program, and sometimes it points at an independent synthetic regop that has been constructed by the optimiser.</source>
          <target state="translated">Специальный regop, который используется &lt;code&gt;re_intuit_start()&lt;/code&gt; чтобы проверить, может ли шаблон совпадать в определенной позиции. Например, если механизм регулярных выражений знает, что шаблон должен начинаться с буквы &amp;laquo;Z&amp;raquo;, он может сканировать строку, пока не найдет ее, а затем запустить оттуда механизм регулярных выражений. Подпрограмма, которая обрабатывает это, называется &lt;code&gt;find_by_class()&lt;/code&gt; . Иногда это поле указывает на регистр, встроенный в программу, а иногда - на независимый синтетический регистр, созданный оптимизатором.</target>
        </trans-unit>
        <trans-unit id="52f092c6d31813604bca533dbc8c71a0c669a0b7" translate="yes" xml:space="preserve">
          <source>Special regop that is used by &lt;code&gt;re_intuit_start()&lt;/code&gt; to check if a pattern can match at a certain position. For instance if the regex engine knows that the pattern must start with a 'Z' then it can scan the string until it finds one and then launch the regex engine from there. The routine that handles this is called &lt;code&gt;find_by_class()&lt;/code&gt;. Sometimes this field points at a regop embedded in the program, and sometimes it points at an independent synthetic regop that has been constructed by the optimiser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c69507b8821a1ac319bfe089337d432b752233" translate="yes" xml:space="preserve">
          <source>Special thanks to Craig Berry and Peter Prymmer (for VMS portability help), Randy Kobes (for Win32 portability help), Clinton Pierce and Autrijus Tang (for heroic eleventh-hour Win32 testing above and beyond the call of duty), Michael G Schwern (for testing advice), and the rest of the CPAN testers (for testing generally).</source>
          <target state="translated">Особая благодарность Крейгу Берри и Питеру Прайммеру (за помощь в портативности VMS),Рэнди Кобесу (за помощь в портативности Win32),Клинтону Пирсу и Аустриюсу Тангу (за героическое одиннадцатичасовое тестирование Win32 сверх и сверх обязанности),Михаэлю Г.Шверну (за совет по тестированию),а также остальным CPAN-тестерам (за тестирование в целом).</target>
        </trans-unit>
        <trans-unit id="5543458d832e80fa74fffef1fb3a6e0c964fd937" translate="yes" xml:space="preserve">
          <source>Special thanks to Jarkko Hietaniemi, the 5.8.0 pumpking, for including this module in the core and for his patient and helpful guidance during the integration process.</source>
          <target state="translated">Особая благодарность Jarkko Hietaniemi,насос 5.8.0,за включение этого модуля в ядро,а также за его пациента и полезное руководство в процессе интеграции.</target>
        </trans-unit>
        <trans-unit id="bdc349ae3de267bae2e06e8394305bd25b3d697e" translate="yes" xml:space="preserve">
          <source>Special thanks to Tels for suggesting several speed and memory optimizations.</source>
          <target state="translated">Особая благодарность Tels за предложение нескольких оптимизаций скорости и памяти.</target>
        </trans-unit>
        <trans-unit id="58c72ff51f409e740d18b159d1db36db70f1453a" translate="yes" xml:space="preserve">
          <source>Special thanks to the following people who assisted in the creation of the document.</source>
          <target state="translated">Особая благодарность выражается следующим лицам,оказавшим содействие в создании документа.</target>
        </trans-unit>
        <trans-unit id="b9982eff3f0e28f25e92903f06ecf866a5e7dab5" translate="yes" xml:space="preserve">
          <source>Special variables that have side effects when you access them or assign to them. For example, in Perl, changing elements of the &lt;code&gt;%ENV&lt;/code&gt; array also changes the corresponding environment variables that subprocesses will use. Reading the &lt;code&gt;$!&lt;/code&gt; variable gives you the current system error number or message.</source>
          <target state="translated">Специальные переменные, которые имеют побочные эффекты при обращении к ним или назначении им. Например, в Perl изменение элементов массива &lt;code&gt;%ENV&lt;/code&gt; также изменяет соответствующие переменные среды, которые будут использовать подпроцессы. Читая &lt;code&gt;$!&lt;/code&gt; переменная дает вам номер текущей системной ошибки или сообщение.</target>
        </trans-unit>
        <trans-unit id="100bcda8aa4f874878478525651d3bbff5ff7492" translate="yes" xml:space="preserve">
          <source>Specialised Import Lists</source>
          <target state="translated">Специализированные импортные списки</target>
        </trans-unit>
        <trans-unit id="7b09828591f2a4848f0494348259138540610a11" translate="yes" xml:space="preserve">
          <source>Specific (mis)features of OS/2 port</source>
          <target state="translated">Конкретные (неправильные)особенности порта OS/2</target>
        </trans-unit>
        <trans-unit id="f1dec8c277f6ad361d73048827b65d45acdb1217" translate="yes" xml:space="preserve">
          <source>Specific features of the Cygwin port</source>
          <target state="translated">Особенности порта Cygwin</target>
        </trans-unit>
        <trans-unit id="686482526f9ca64e951de751df199a7ac0b21959" translate="yes" xml:space="preserve">
          <source>Specific for EMX port. Gives the directory part of the location for</source>
          <target state="translated">Специально для EMX-порта.Дает директорную часть местоположения для</target>
        </trans-unit>
        <trans-unit id="8719eacadd757c4d532ec01e84ca717f26242d45" translate="yes" xml:space="preserve">
          <source>Specific for EMX port. Should have the form</source>
          <target state="translated">Специально для EMX-порта.Должен иметь форму</target>
        </trans-unit>
        <trans-unit id="57a0519d586edded6d90f93d7b49b9ce56048c1e" translate="yes" xml:space="preserve">
          <source>Specific for EMX port. Since</source>
          <target state="translated">Специально для EMX-порта.С</target>
        </trans-unit>
        <trans-unit id="3f69d6ce7ad07d5935103bd51d3ea2a5f16d4ee9" translate="yes" xml:space="preserve">
          <source>Specific for EMX port. Since &lt;a href=&quot;http://man.he.net/man3/flock&quot;&gt;flock(3)&lt;/a&gt; is present in EMX, but is not functional, it is emulated by perl. To disable the emulations, set environment variable &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17684874cc7718b5fa207627bf38a956b3362a43" translate="yes" xml:space="preserve">
          <source>Specific for EMX port. Used as storage place for temporary files.</source>
          <target state="translated">Специально для EMX-порта.Используется как место хранения временных файлов.</target>
        </trans-unit>
        <trans-unit id="e8a7871f78fa47c54d3b07594f2afe06c4064c9a" translate="yes" xml:space="preserve">
          <source>Specific types of access to files that can be requested via the &lt;code&gt;$uAccess&lt;/code&gt; argument to &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59751d539130b16033ff7290507022cfe789faf" translate="yes" xml:space="preserve">
          <source>Specifically, notice that the formatting codes are present and unescaped in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee5fb071a0f4fc5995dbb8fab061746ab818f7e" translate="yes" xml:space="preserve">
          <source>Specifically, we read pathnames one at a time from the input array, and store the results in an output array (results) in the same order. If statfs fails, the element pushed onto the return array is the value of errno after the failure. If statfs succeeds, though, the value pushed onto the return array is a reference to a hash containing some of the information in the statfs structure.</source>
          <target state="translated">В частности,из входного массива по очереди читаем патнамы,а результаты сохраняем в выходном массиве (результаты)в том же порядке.Если statfs не удается,то элемент,нажимаемый на возвращаемый массив,является значением errno после сбоя.Однако в случае успеха statfs,значение,вынесенное в массив возврата,является ссылкой на хэш,содержащий некоторую информацию в структуре statfs.</target>
        </trans-unit>
        <trans-unit id="eda3fdece3884b319c275582d4e0949e974b3c68" translate="yes" xml:space="preserve">
          <source>Specifically: Turning on this option will disable the heuristics for seeing only files with Perl-like extensions, omitting subdirectories that are numeric but do</source>
          <target state="translated">А именно:Включение этой опции отключит эвристику для просмотра только файлов с Perl--подобными расширениями,пропустив подкаталоги,которые являются числовыми,но не имеют значения</target>
        </trans-unit>
        <trans-unit id="ed81a4faa05daf1c1be51b7b8fa82d019bf30684" translate="yes" xml:space="preserve">
          <source>Specification for CPAN distribution metadata</source>
          <target state="translated">Спецификация метаданных распределения CPAN</target>
        </trans-unit>
        <trans-unit id="dffd2f13d0f19c68e6d18b2ad7656bd3be03e49e" translate="yes" xml:space="preserve">
          <source>Specified allowed version number formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9358b554d9001e9e29d42fe71cb2423f6e13d1fd" translate="yes" xml:space="preserve">
          <source>Specified line by line via &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt; or &lt;a href=&quot;#-E-commandline&quot;&gt;-E&lt;/a&gt; switches on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a4072f8995fd4faf63509594cc45d51dcda62a" translate="yes" xml:space="preserve">
          <source>Specified line by line via &lt;b&gt;-e&lt;/b&gt; or &lt;b&gt;-E&lt;/b&gt; switches on the command line.</source>
          <target state="translated">Указывается построчно с помощью переключателей &lt;b&gt;-e&lt;/b&gt; или &lt;b&gt;-E&lt;/b&gt; в командной строке.</target>
        </trans-unit>
        <trans-unit id="acc937be340e9018f067e36d4fbe600f0ca7a48d" translate="yes" xml:space="preserve">
          <source>Specifies a TAP::Harness subclass to be used in place of TAP::Harness.</source>
          <target state="translated">Указание подкласса TAP::Harness,который будет использоваться вместо TAP::Harness.</target>
        </trans-unit>
        <trans-unit id="2ccb38b1ea1946cfb54e7b524ba85568b166e308" translate="yes" xml:space="preserve">
          <source>Specifies a name to be used for the extension, e.g., -n RPC::DCE</source>
          <target state="translated">Указывает имя,которое будет использоваться для расширения,например,-n RPC::DCE</target>
        </trans-unit>
        <trans-unit id="fb10437a9b9ee94fe2ef27d29d4fd6290157541f" translate="yes" xml:space="preserve">
          <source>Specifies an encoding to store lexicon entries, instead of utf8-strings. If set to &lt;code&gt;locale&lt;/code&gt; , the encoding from the current locale setting is used. Implies a true value for &lt;code&gt;Decode&lt;/code&gt; .</source>
          <target state="translated">Задает кодировку для хранения словарных статей вместо строк utf8. Если установлен &lt;code&gt;locale&lt;/code&gt; , используется кодировка из текущего языкового стандарта. Подразумевает истинное значение для &lt;code&gt;Decode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b02361353aebba65f1252053ca8da3ec24a84ab" translate="yes" xml:space="preserve">
          <source>Specifies an encoding to store lexicon entries, instead of utf8-strings. If set to &lt;code&gt;locale&lt;/code&gt;, the encoding from the current locale setting is used. Implies a true value for &lt;code&gt;Decode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5288f1281b330410c08afae34819d7cfc53b87f4" translate="yes" xml:space="preserve">
          <source>Specifies any additional arguments to pass to the compiler. Should be given as a list reference containing the arguments individually, or if this is not possible, as a string containing all the arguments together.</source>
          <target state="translated">Указание любых дополнительных аргументов для передачи компилятору.Должна быть дана как ссылка на список,содержащий аргументы по отдельности,или,если это невозможно,как строка,содержащая все аргументы вместе.</target>
        </trans-unit>
        <trans-unit id="8c0fc5c465acc07c545f1645a7b4737064b57885" translate="yes" xml:space="preserve">
          <source>Specifies any additional directories in which to search for header files. May be given as a string indicating a single directory, or as a list reference indicating multiple directories.</source>
          <target state="translated">Указание дополнительных каталогов для поиска заголовочных файлов.Может быть задано в виде строки,указывающей на один каталог,или в виде ссылки на список,указывающий на несколько каталогов.</target>
        </trans-unit>
        <trans-unit id="df5f877cdfce163f364b76c3bfab4e6c5095d6d8" translate="yes" xml:space="preserve">
          <source>Specifies file structure for file to be transferred.</source>
          <target state="translated">Определяет структуру файла для передачи.</target>
        </trans-unit>
        <trans-unit id="087e5ef636ea46b335e961f7299045a135d4c08f" translate="yes" xml:space="preserve">
          <source>Specifies how much effort bzip2 should take before resorting to a slower fallback compression algorithm.</source>
          <target state="translated">Указывает,сколько усилий должен приложить bzip2,прежде чем прибегнуть к более медленному алгоритму обратного сжатия.</target>
        </trans-unit>
        <trans-unit id="98ed6b009cf98007a6f6d9bd7e33d610c98ad8ec" translate="yes" xml:space="preserve">
          <source>Specifies one or more directories to search for the input file if it was not supplied with an absolute path. Each directory path in the given list should be separated by a ':' on Unix (';' on MSWin32 and DOS).</source>
          <target state="translated">Указание одного или нескольких каталогов для поиска входного файла,если он не поставляется с абсолютным путем.Каждый путь к каталогу в данном списке должен быть разделен знаком ':' на Unix (';' на MSWin32 и DOS).</target>
        </trans-unit>
        <trans-unit id="8dd4c4abae664fff706848263f7e2a14f71871c3" translate="yes" xml:space="preserve">
          <source>Specifies source mappings for Tangut ideographs and components. This data file also includes informative radical-stroke values that are used internally by Unicode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e97bcf5fbd96ebc76bb798faacc45cc0f7deca3" translate="yes" xml:space="preserve">
          <source>Specifies source material for Nushu characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9774b42720c2ff28dbc21e628ebcd3703ef058" translate="yes" xml:space="preserve">
          <source>Specifies that the source file is a C++ source file and sets appropriate compiler flags</source>
          <target state="translated">Указывает,что исходный файл является C++исходным файлом,и устанавливает соответствующие флаги компилятора.</target>
        </trans-unit>
        <trans-unit id="752f5b793296a2436f0f638671fc26add2789004" translate="yes" xml:space="preserve">
          <source>Specifies that this distribution shall not be processed at all.</source>
          <target state="translated">Указывает,что это распределение вообще не должно обрабатываться.</target>
        </trans-unit>
        <trans-unit id="27c19b2359d6f4ac0335e1401df42879661c8cd1" translate="yes" xml:space="preserve">
          <source>Specifies the directory to use for the temporary directory. The temporary directory name is derived from an internal template.</source>
          <target state="translated">Указание каталога для использования во временном каталоге.Имя временного каталога берется из внутреннего шаблона.</target>
        </trans-unit>
        <trans-unit id="69c1bcd4ebd70c8615309d5b9b715199cd57859f" translate="yes" xml:space="preserve">
          <source>Specifies the encoding you are converting from. Unlike &lt;b&gt;iconv&lt;/b&gt;, this option can be omitted. In such cases, the current locale is used.</source>
          <target state="translated">Задает кодировку, из которой выполняется преобразование. В отличие от &lt;b&gt;iconv&lt;/b&gt; , этот параметр можно не указывать. В таких случаях используется текущий языковой стандарт.</target>
        </trans-unit>
        <trans-unit id="b6aabb58f01ed0bc266ebcb530fd5e3060867e4c" translate="yes" xml:space="preserve">
          <source>Specifies the encoding you are converting to. Unlike &lt;b&gt;iconv&lt;/b&gt;, this option can be omitted. In such cases, the current locale is used.</source>
          <target state="translated">Задает кодировку, в которую вы конвертируете. В отличие от &lt;b&gt;iconv&lt;/b&gt; , этот параметр можно не указывать. В таких случаях используется текущий языковой стандарт.</target>
        </trans-unit>
        <trans-unit id="bc14cf57cc1d526c9df38cf39a2a5e11891e51ad" translate="yes" xml:space="preserve">
          <source>Specifies the extension of the module's loadable object. For example:</source>
          <target state="translated">Задает расширение загружаемого объекта модуля.Например:</target>
        </trans-unit>
        <trans-unit id="62350db256aee74b2119a37a32d38d1a559bd3c6" translate="yes" xml:space="preserve">
          <source>Specifies the method or subroutine to use when printing error messages about POD syntax. The supplied method/subroutine</source>
          <target state="translated">Указывает метод или подпрограмму для использования при печати сообщений об ошибках синтаксиса POD.Поставляемый метод/подпрограмма</target>
        </trans-unit>
        <trans-unit id="8490adfe21694bc6560acb4c4b017183f5259a5a" translate="yes" xml:space="preserve">
          <source>Specifies the name of the Perl module that will be created by linking. On platforms that need to do prelinking (Win32, OS/2, etc.) this is a required parameter.</source>
          <target state="translated">Указывает имя модуля Perl,который будет создан путем линковки.На платформах,которые должны делать предварительную линковку (Win32,OS/2 и т.д.)это обязательный параметр.</target>
        </trans-unit>
        <trans-unit id="f6fab30529e40665f8d0178ef7752b76fb583aec" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output executable file to create. Otherwise the &lt;code&gt;exe_file()&lt;/code&gt; method will be consulted, passing it the name of the first entry in &lt;code&gt;objects&lt;/code&gt; .</source>
          <target state="translated">Задает имя создаваемого выходного исполняемого файла. В противном случае будет &lt;code&gt;exe_file()&lt;/code&gt; метод exe_file () , передавая ему имя первой записи в &lt;code&gt;objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15de15454ec9b8a4605521f63e575015b98bd2c4" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output executable file to create. Otherwise the &lt;code&gt;exe_file()&lt;/code&gt; method will be consulted, passing it the name of the first entry in &lt;code&gt;objects&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712c7b0a7198fb19bf2fcbbf1b68671ab3789d42" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output file to create. Otherwise the &lt;code&gt;object_file()&lt;/code&gt; method will be consulted, passing it the name of the &lt;code&gt;source&lt;/code&gt; file.</source>
          <target state="translated">Задает имя создаваемого выходного файла. В противном случае будет &lt;code&gt;object_file()&lt;/code&gt; метод object_file () , передавая ему имя &lt;code&gt;source&lt;/code&gt; файла.</target>
        </trans-unit>
        <trans-unit id="0ea5fb9dc13c7dfd946c4f0ec1f502d959136293" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output file to generate. If no file is specified, output will be written to standard output.</source>
          <target state="translated">Указывает имя генерируемого выходного файла.Если файл не указан,вывод будет записан в стандартный выходной файл.</target>
        </trans-unit>
        <trans-unit id="95eb37279bd4905df986dc0709bc7910f0b3037c" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output library file to create. Otherwise the &lt;code&gt;lib_file()&lt;/code&gt; method will be consulted, passing it the name of the first entry in &lt;code&gt;objects&lt;/code&gt; .</source>
          <target state="translated">Задает имя создаваемого файла выходной библиотеки. В противном случае будет использоваться метод &lt;code&gt;lib_file()&lt;/code&gt; , передавая ему имя первой записи в &lt;code&gt;objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef72e21940c27171a6511a580792ff08d2fefffd" translate="yes" xml:space="preserve">
          <source>Specifies the name of the output library file to create. Otherwise the &lt;code&gt;lib_file()&lt;/code&gt; method will be consulted, passing it the name of the first entry in &lt;code&gt;objects&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc8b469ff5b98736322a31c19a8ffad03de9557" translate="yes" xml:space="preserve">
          <source>Specifies the string that will be prefixed to every line of the output. Empty string by default.</source>
          <target state="translated">Определяет строку,которая будет префиксом к каждой строке вывода.Пустая строка по умолчанию.</target>
        </trans-unit>
        <trans-unit id="969aa343df55e9a403d592d5b7e666d694e7c272" translate="yes" xml:space="preserve">
          <source>Specifies transfer mode (stream, block or compressed) for file to be transferred.</source>
          <target state="translated">Определяет режим передачи (поток,блок или сжатие)для передаваемого файла.</target>
        </trans-unit>
        <trans-unit id="cc7f9fc804bc9d91b61a85b96105c59f7689d5aa" translate="yes" xml:space="preserve">
          <source>Specifies what to do with symbolic links whose target doesn't exist. If true and a code reference, will be called with the symbolic link name and the directory it lives in as arguments. Otherwise, if true and warnings are on, a warning of the form &lt;code&gt;&quot;symbolic_link_name is a dangling symbolic link\n&quot;&lt;/code&gt; will be issued. If false, the dangling symbolic link will be silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aea723a83b432e8b220dab2e656f549c707e4d" translate="yes" xml:space="preserve">
          <source>Specifies which version of the &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; should be used as the format of the &lt;code&gt;provides&lt;/code&gt; output. Currently only '1.4' and '2' are supported (and their format is identical). This may change in the future as the definition of &lt;code&gt;provides&lt;/code&gt; changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e50a3555457e006ff9201a0e994fbe18d143981" translate="yes" xml:space="preserve">
          <source>Specify Perl version requirements with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Укажите требования к версии Perl с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b40cf4bd5d43a9f1abad87e39cbbacc3be8422d6" translate="yes" xml:space="preserve">
          <source>Specify Perl version requirements with &lt;code&gt;use&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51af544190f4d9e1d2d6358a5fcd6745e16f2552" translate="yes" xml:space="preserve">
          <source>Specify SHELL if needed - not done on Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a389cd0788a594b00d81ac38b0d5b58f982bb23" translate="yes" xml:space="preserve">
          <source>Specify a collation strength of level 1 to ignore case and diacritics, only looking at the basic character.</source>
          <target state="translated">Укажите силу сопоставления 1-го уровня,чтобы игнорировать регистр и диакритические знаки,глядя только на основного персонажа.</target>
        </trans-unit>
        <trans-unit id="fd9decfe42c6333527f5da43637561403cd51753" translate="yes" xml:space="preserve">
          <source>Specify a prefix which should be removed from the Perl function names, e.g., -p sec_rgy_ This sets up the XS &lt;b&gt;PREFIX&lt;/b&gt; keyword and removes the prefix from functions that are autoloaded via the &lt;code&gt;constant()&lt;/code&gt; mechanism.</source>
          <target state="translated">Укажите префикс, который следует удалить из имен функций Perl, например, -p sec_gery_. Это устанавливает ключевое слово XS &lt;b&gt;PREFIX&lt;/b&gt; и удаляет префикс из функций, которые автоматически загружаются с помощью механизма &lt;code&gt;constant()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c37cb69f6acc79919a59db7bb047596246ded37" translate="yes" xml:space="preserve">
          <source>Specify a section to include in the output. See &lt;a href=&quot;pod/parser#SECTION-SPECIFICATIONS&quot;&gt;SECTION SPECIFICATIONS in Pod::Parser&lt;/a&gt; for the format to use for</source>
          <target state="translated">Укажите раздел, который нужно включить в вывод. См. &lt;a href=&quot;pod/parser#SECTION-SPECIFICATIONS&quot;&gt;СПЕЦИФИКАЦИИ РАЗДЕЛА в Pod :: Parser,&lt;/a&gt; чтобы узнать о формате, который будет использоваться для</target>
        </trans-unit>
        <trans-unit id="c842e0100e27043e97262bc2a56a8695e0228b4b" translate="yes" xml:space="preserve">
          <source>Specify a version number for this extension. This version number is added to the templates. The default is 0.01, or 0.00_01 if &lt;code&gt;-B&lt;/code&gt; is specified. The version specified should be numeric.</source>
          <target state="translated">Укажите номер версии для этого расширения. Этот номер версии добавлен в шаблоны. По умолчанию 0,01 или 0,00_01, если указан &lt;code&gt;-B&lt;/code&gt; . Указанная версия должна быть числовой.</target>
        </trans-unit>
        <trans-unit id="e7f58f2c2dcff1260c061c4b22f076c9afef1f52" translate="yes" xml:space="preserve">
          <source>Specify content is binary</source>
          <target state="translated">Укажите содержание является двоичным</target>
        </trans-unit>
        <trans-unit id="196ff6b62a23b7ba506c7490495c47cea5d35955" translate="yes" xml:space="preserve">
          <source>Specify in seconds how long to run the command before it is killed with SIG_KILL (9), which effectively terminates it and all of its children (direct or indirect).</source>
          <target state="translated">Укажите в секундах,сколько времени нужно для выполнения команды перед ее уничтожением с помощью SIG_KILL (9),которая эффективно уничтожает ее и всех ее дочерних элементов (прямых или косвенных).</target>
        </trans-unit>
        <trans-unit id="e42f9f14e720a274b615a5fad1a17e292745c606" translate="yes" xml:space="preserve">
          <source>Specify pre-requisites in Makefile.PL or Build.PL</source>
          <target state="translated">Укажите предварительные требования в Makefile.PL или Build.PL.</target>
        </trans-unit>
        <trans-unit id="1a3e3b8941c020b4dead165334a6a7f6f39e0c5c" translate="yes" xml:space="preserve">
          <source>Specify replacement for groff</source>
          <target state="translated">Укажите замену для гроффа</target>
        </trans-unit>
        <trans-unit id="82792121ccf914c52ccf31c689a51331bdf9896b" translate="yes" xml:space="preserve">
          <source>Specify some text that will be passed into the &lt;code&gt;STDIN&lt;/code&gt; of the executed program.</source>
          <target state="translated">Укажите текст, который будет передан в &lt;code&gt;STDIN&lt;/code&gt; исполняемой программы.</target>
        </trans-unit>
        <trans-unit id="e4f8120097eb5801ad49966dad7112d6c8bcad54" translate="yes" xml:space="preserve">
          <source>Specify stream encoding. This is the normal way to deal with encoded text, not by calling low-level functions.</source>
          <target state="translated">Укажите кодировку потока.Это обычный способ работы с кодированным текстом,а не вызов низкоуровневых функций.</target>
        </trans-unit>
        <trans-unit id="8473cee86e4b03ee43a6c19c0f0dc45619e13394" translate="yes" xml:space="preserve">
          <source>Specify the HTML file to create. Output goes to STDOUT if no outfile is specified.</source>
          <target state="translated">Укажите создаваемый HTML-файл.Выводится STDOUT,если исходный файл не указан.</target>
        </trans-unit>
        <trans-unit id="2deadb9e68c32c96f8a837b13d5dc23a9778d417" translate="yes" xml:space="preserve">
          <source>Specify the URL of a cascading style sheet. Also disables all HTML/CSS &lt;code&gt;style&lt;/code&gt; attributes that are output by default (to avoid conflicts).</source>
          <target state="translated">Укажите URL-адрес каскадной таблицы стилей. Также отключает все атрибуты &lt;code&gt;style&lt;/code&gt; HTML / CSS , которые выводятся по умолчанию (во избежание конфликтов).</target>
        </trans-unit>
        <trans-unit id="4aa99f54409387b7146f47653777c920418ff10b" translate="yes" xml:space="preserve">
          <source>Specify the URL of cascading style sheet to link from resulting HTML file. Default is none style sheet.</source>
          <target state="translated">Укажите URL каскадной таблицы стилей для ссылки из полученного HTML-файла.По умолчанию нет таблицы стилей.</target>
        </trans-unit>
        <trans-unit id="9afcf7f83edb719a030bfbfd6d7f5c91cf7f8d6b" translate="yes" xml:space="preserve">
          <source>Specify the base directory for finding library pods.</source>
          <target state="translated">Укажите базовый каталог для поиска стручков библиотек.</target>
        </trans-unit>
        <trans-unit id="44291a4ec495223a1da4f1839ae4e831f5a3c791" translate="yes" xml:space="preserve">
          <source>Specify the base directory for finding library pods. Default is the current working directory.</source>
          <target state="translated">Укажите базовый каталог для поиска стручков библиотек.По умолчанию это текущая рабочая директория.</target>
        </trans-unit>
        <trans-unit id="5753e538bcef55bd82135ab9b921c4428299f2cd" translate="yes" xml:space="preserve">
          <source>Specify the encoding for implicit byte-string upgrading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5534a64aa32340e65ed43e45968b60d705f9fc" translate="yes" xml:space="preserve">
          <source>Specify the internal type that the constant() mechanism uses for macros. The default is IV (signed integer). Currently all macros found during the header scanning process will be assumed to have this type. Future versions of &lt;code&gt;h2xs&lt;/code&gt; may gain the ability to make educated guesses.</source>
          <target state="translated">Укажите внутренний тип, который механизм constant () использует для макросов. Значение по умолчанию - IV (целое число со знаком). В настоящее время предполагается, что все макросы, обнаруженные в процессе сканирования заголовка, имеют этот тип. Будущие версии &lt;code&gt;h2xs&lt;/code&gt; могут получить способность делать обоснованные предположения.</target>
        </trans-unit>
        <trans-unit id="a20b2619004bea1e14f0e7f2949d240b1952dd51" translate="yes" xml:space="preserve">
          <source>Specify the number of 100K blocks bzip2 uses during compression.</source>
          <target state="translated">Укажите количество блоков по 100К,используемых bzip2 во время сжатия.</target>
        </trans-unit>
        <trans-unit id="1d869ecbc9c626d4a96da51d8e392c8fcdb22cdc" translate="yes" xml:space="preserve">
          <source>Specify the pod file to convert. Input is taken from STDIN if no infile is specified.</source>
          <target state="translated">Укажите файл под,который нужно конвертировать.Ввод берется из STDIN,если файл не указан.</target>
        </trans-unit>
        <trans-unit id="2bed91a5a620b4aae10dcfd8cbca6e35a0ef51dd" translate="yes" xml:space="preserve">
          <source>Specify the targets for testing.</source>
          <target state="translated">Укажите цели для тестирования.</target>
        </trans-unit>
        <trans-unit id="21bb885000d067ff7c549508e4dd3407f52920a2" translate="yes" xml:space="preserve">
          <source>Specify the title of the resulting HTML file.</source>
          <target state="translated">Укажите название полученного HTML-файла.</target>
        </trans-unit>
        <trans-unit id="46f23c724776424563c656a058b3155bcce7e71b" translate="yes" xml:space="preserve">
          <source>Specify version requirements for other Perl modules in the pre-requisites in your Makefile.PL or Build.PL.</source>
          <target state="translated">Укажите требования к версии для других Perl-модулей в предварительных требованиях в Makefile.PL или Build.PL.</target>
        </trans-unit>
        <trans-unit id="8bd129aeb5d58a2d4cd81a32d015c916c4dfff29" translate="yes" xml:space="preserve">
          <source>Specify which directory is used for storing cache. Default directory is the current working directory.</source>
          <target state="translated">Укажите,какой каталог используется для хранения кэша.Каталог по умолчанию-текущий рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="c06413cd34d05ffad8b760e0ccbb2a8039560c0e" translate="yes" xml:space="preserve">
          <source>Specify which subdirectories of the podroot contain pod files whose HTML converted forms can be linked to in cross references.</source>
          <target state="translated">Укажите,в каких подкаталогах подрута содержатся файлы под,на которые можно ссылаться в перекрестных ссылках на HTML преобразованные формы.</target>
        </trans-unit>
        <trans-unit id="4ed9289cec9db507a9bd1e2cf8a443192d39f482" translate="yes" xml:space="preserve">
          <source>Specify which subdirectories of the podroot contain pod files whose HTML converted forms can be linked-to in cross-references.</source>
          <target state="translated">Укажите,в каких подкаталогах podroot находятся файлы pod,на которые в перекрестных ссылках можно ссылаться в форме,преобразованной в HTML.</target>
        </trans-unit>
        <trans-unit id="08ce00bfc35270a0506d4be19cf439c32891aca2" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;flags&lt;/code&gt; can further restrict what is allowed and not warned on, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddb0fa6b996bdc82d7ed351288c14ade48e2fbe" translate="yes" xml:space="preserve">
          <source>Specifying I/O layers in MODE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda870361643b1e3b5ceca1a143c1054b6477609" translate="yes" xml:space="preserve">
          <source>Specifying VERSION as a literal of the form v5.6.1 should generally be avoided, because it leads to misleading error messages under earlier versions of Perl (that is, prior to 5.6.0) that do not support this syntax. The equivalent numeric version should be used instead.</source>
          <target state="translated">Как правило,следует избегать указания VERSION как литерала формы v5.6.1,так как это приводит к вводящим в заблуждение сообщениям об ошибках в более ранних версиях Perl (т.е.до 5.6.0),которые не поддерживают этот синтаксис.Вместо этого следует использовать эквивалентную цифровую версию.</target>
        </trans-unit>
        <trans-unit id="4cc4c6ab0a0e40b55ad8e487edeab38628dd47f2" translate="yes" xml:space="preserve">
          <source>Specifying VERSION as a literal of the form v5.6.1 should generally be avoided, because it leads to misleading error messages under earlier versions of Perl that do not support this syntax. The equivalent numeric version should be used instead.</source>
          <target state="translated">Как правило,следует избегать указания VERSION как литерала формы v5.6.1,так как это приводит к вводящим в заблуждение сообщениям об ошибках в более ранних версиях Perl,которые не поддерживают этот синтаксис.Вместо этого следует использовать эквивалентную цифровую версию.</target>
        </trans-unit>
        <trans-unit id="b76a85ec03f0c93fc5652cb698781d576e230edd" translate="yes" xml:space="preserve">
          <source>Specifying VERSION as a numeric argument of the form 5.024001 should generally be avoided as older less readable syntax compared to v5.24.1. Before perl 5.8.0 (released in 2002), the more verbose numeric form was the only supported syntax, which is why you might see it in older code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa5c6fcdba9772c2f949fa78c3312ba8e176e5c" translate="yes" xml:space="preserve">
          <source>Specifying VERSION as a numeric argument of the form 5.024001 should generally be avoided as older less readable syntax compared to v5.24.1. Before perl 5.8.0 released in 2002 the more verbose numeric form was the only supported syntax, which is why you might see it in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105a66a84ae1308320a2e6185af2d7c0f4640974" translate="yes" xml:space="preserve">
          <source>Specifying Values</source>
          <target state="translated">Указание значений</target>
        </trans-unit>
        <trans-unit id="6ddacaf845437713514dee82096d8d2996a0782a" translate="yes" xml:space="preserve">
          <source>Specifying a compatibility version higher than the version of perl you are using to run h2xs will have no effect. If unspecified h2xs will default to compatibility with the version of perl you are using to run h2xs.</source>
          <target state="translated">Указание версии совместимости выше версии perl,которую вы используете для запуска h2xs,не будет иметь никакого эффекта.Если неуказанные h2xs будут по умолчанию совместимы с версией perl,которую вы используете для запуска h2xs.</target>
        </trans-unit>
        <trans-unit id="b9ac38be3885e820db907e52feea151509c97c14" translate="yes" xml:space="preserve">
          <source>Specifying a negative flag after the caret is an error, as the flag is redundant.</source>
          <target state="translated">Указание отрицательного флага после каретты является ошибкой,так как флаг является избыточным.</target>
        </trans-unit>
        <trans-unit id="fcb93594508dd14f6f183606eef58af67f897bab" translate="yes" xml:space="preserve">
          <source>Specifying a negative index position greater than the number of items in the queue adds the list to the head of the queue.</source>
          <target state="translated">Указание отрицательной позиции индекса больше,чем количество элементов в очереди добавляет список в заголовок очереди.</target>
        </trans-unit>
        <trans-unit id="0428551388a304fda9da2ce393b07c826bf5874b" translate="yes" xml:space="preserve">
          <source>Specifying a rule to allow tests to run in parallel does not make the run in parallel. You still need specify the number of parallel &lt;code&gt;jobs&lt;/code&gt; in your Harness object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ae5b52602873edfea60de35a979b3a17659ea0" translate="yes" xml:space="preserve">
          <source>Specifying a rule to allow tests to run in parallel does not make them run in parallel. You still need specify the number of parallel &lt;code&gt;jobs&lt;/code&gt; in your Harness object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e80e764794a3f53d9bd22d3f4959b3c3e8e8c0" translate="yes" xml:space="preserve">
          <source>Specifying an index position greater than the number of items in the queue just adds the list to the end.</source>
          <target state="translated">Указание позиции индекса,превышающей количество элементов в очереди,просто добавляет список в конец.</target>
        </trans-unit>
        <trans-unit id="9c224eb1496ab5698ab91d2a22838e04eaf02d0d" translate="yes" xml:space="preserve">
          <source>Specifying an index position greater than the number of items in the queue results in &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or an empty list being returned.</source>
          <target state="translated">Если указать позицию индекса, превышающую количество элементов в очереди , возвращается &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; или пустой список.</target>
        </trans-unit>
        <trans-unit id="16018fb283b08c865834aaa6b2e024c776590ab5" translate="yes" xml:space="preserve">
          <source>Specifying an index position greater than the number of items in the queue results in &lt;code&gt;undef&lt;/code&gt; or an empty list being returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fcdf16424ed34965445319ec725af2d142641e" translate="yes" xml:space="preserve">
          <source>Specifying mode and filename as a single argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b369061e994be9b95b9b52fd041d04e9eccbbae" translate="yes" xml:space="preserve">
          <source>Specifying sub-versions such as the &lt;code&gt;0&lt;/code&gt; in &lt;code&gt;5.14.0&lt;/code&gt; in feature bundles has no effect. Feature bundles are guaranteed to be the same for all sub-versions.</source>
          <target state="translated">Указание &lt;code&gt;5.14.0&lt;/code&gt; таких как &lt;code&gt;0&lt;/code&gt; в 5.14.0, в пакетах функций не имеет никакого эффекта. Пакеты функций гарантированно будут одинаковыми для всех подверсий.</target>
        </trans-unit>
        <trans-unit id="79a6f96c957e7feef1314dc46564cc00f5833bc6" translate="yes" xml:space="preserve">
          <source>Specifying the &quot;udp&quot; protocol causes the ping() method to send a udp packet to the remote host's echo port. If the echoed packet is received from the remote host and the received packet contains the same data as the packet that was sent, the remote host is considered reachable. This protocol does not require any special privileges. It should be borne in mind that, for a udp ping, a host will be reported as unreachable if it is not running the appropriate echo service. For Unix-like systems see</source>
          <target state="translated">Указание протокола &quot;udp&quot; приводит к тому,что метод ping()посылает udp-пакет на эхо-порт удаленного хоста.Если эхо-пакет получен от удаленного хоста и полученный пакет содержит те же данные,что и пакет,который был отправлен,то удаленный хост считается доступным.Этот протокол не требует никаких специальных привилегий.Следует помнить,что для udp ping,хост будет считаться недоступным,если он не запустил соответствующую эхо-службу.Для Unix-подобных систем см.</target>
        </trans-unit>
        <trans-unit id="a43e4d18241d23c364eb62d107e205d919850575" translate="yes" xml:space="preserve">
          <source>Specifying the &quot;udp&quot; protocol causes the ping() method to send a udp packet to the remote host's echo port. If the echoed packet is received from the remote host and the received packet contains the same data as the packet that was sent, the remote host is considered reachable. This protocol does not require any special privileges. It should be borne in mind that, for a udp ping, a host will be reported as unreachable if it is not running the appropriate echo service. For Unix-like systems see &lt;a href=&quot;http://man.he.net/man8/inetd&quot;&gt;inetd(8)&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2819720e6a0b64709090cd36c99161c9c51d2535" translate="yes" xml:space="preserve">
          <source>Specifying the G_DISCARD flag with</source>
          <target state="translated">Указание флага G_DISCARD с помощью кнопки</target>
        </trans-unit>
        <trans-unit id="2d2cb022bc3d26bd1407c4aa787d5e46e1ad4c3b" translate="yes" xml:space="preserve">
          <source>Speed</source>
          <target state="translated">Speed</target>
        </trans-unit>
        <trans-unit id="40e5809be52d66c56af4f3807fbc74465fe77f2b" translate="yes" xml:space="preserve">
          <source>Spherical coordinates,</source>
          <target state="translated">Сферические координаты,</target>
        </trans-unit>
        <trans-unit id="0bce309883c4786c8f96950f6206dff26186fc2b" translate="yes" xml:space="preserve">
          <source>Split a directory specification into the components.</source>
          <target state="translated">Разделите спецификацию каталога на компоненты.</target>
        </trans-unit>
        <trans-unit id="0e9eed69886886b90fb3afa01fba40f13ff4d0a7" translate="yes" xml:space="preserve">
          <source>Split a package for autoloading</source>
          <target state="translated">Разделите пакет для автозагрузки</target>
        </trans-unit>
        <trans-unit id="5a8f5f6aec0e05c9fd24b5a8ca47f652c1c2ceaf" translate="yes" xml:space="preserve">
          <source>Split loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a230284c2746978c6d208e00f352e0d6fb5d918" translate="yes" xml:space="preserve">
          <source>Split out from Safe module version 1, named opcode tags and other changes added by Tim Bunce.</source>
          <target state="translated">Отделите от Safe модуля версию 1,названные опкодовые теги и другие изменения,добавленные Тимом Бансом.</target>
        </trans-unit>
        <trans-unit id="273ddbe310d23df41c94915a842b407f242c4749" translate="yes" xml:space="preserve">
          <source>Splits a path in to volume, directory, and filename portions. On systems with no concept of volume, returns '' for volume.</source>
          <target state="translated">Разделяет путь на части тома,каталога и имени файла.На системах без понятия тома возвращает '' для тома.</target>
        </trans-unit>
        <trans-unit id="334895ed21abe595a625b2f1658f99e01bbe8d40" translate="yes" xml:space="preserve">
          <source>Splits a path into volume, directory, and filename portions.</source>
          <target state="translated">Разбивает путь на части тома,каталога и имени файла.</target>
        </trans-unit>
        <trans-unit id="9683042273a4ecd00e523d0bde1551fc4f8c1380" translate="yes" xml:space="preserve">
          <source>Splits a path into volume, directory, and filename portions. Assumes that the last file is a path unless the path ends in '\\', '\\.', '\\..' or $no_file is true. On Win32 this means that $no_file true makes this return ( $volume, $path, '' ).</source>
          <target state="translated">Разбивает путь на части тома,каталога и имени файла.Предположительно,последний файл-это путь,если он не заканчивается на '\\','\\.','\\...' или $no_file is true.На Win32 это означает,что $no_file true возвращает это значение($ volume,$path,'').</target>
        </trans-unit>
        <trans-unit id="86fed3cc24e2d19645e7064b9a14b47a5f182fe6" translate="yes" xml:space="preserve">
          <source>Splits a path into volume, directory, and filename portions. On systems with no concept of volume, returns '' for volume.</source>
          <target state="translated">Разбивает путь на части тома,каталога и имени файла.На системах без понятия тома возвращает '' для тома.</target>
        </trans-unit>
        <trans-unit id="5d39c4c6b066b235387ae82c04d47c7856f6398b" translate="yes" xml:space="preserve">
          <source>Splits the string EXPR into a list of strings and returns the list in list context, or the size of the list in scalar context.</source>
          <target state="translated">Разделяет строку EXPR на список строк и возвращает список в контексте списка,или размер списка в контексте скаляра.</target>
        </trans-unit>
        <trans-unit id="2936a94e1d47596e4e39d9256be18597c3aa4179" translate="yes" xml:space="preserve">
          <source>Splits the string EXPR into a list of strings and returns the list in list context, or the size of the list in scalar context. (Prior to Perl 5.11, it also overwrote &lt;code&gt;@_&lt;/code&gt; with the list in void and scalar context. If you target old perls, beware.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250f996321b0ccf8a0a091d8ad8d1f0defcbee6b" translate="yes" xml:space="preserve">
          <source>Splitting up a program text into &lt;b&gt;tokens&lt;/b&gt;. Also known as &amp;ldquo;lexing&amp;rdquo;, in which case you get &amp;ldquo;lexemes&amp;rdquo; instead of tokens.</source>
          <target state="translated">Разбиение текста программы на &lt;b&gt;токены&lt;/b&gt; . Также известен как &amp;laquo;лексирование&amp;raquo;, и в этом случае вы получаете &amp;laquo;лексемы&amp;raquo; вместо токенов.</target>
        </trans-unit>
        <trans-unit id="ff729dbb2771278d79c384030e9caa881a4db264" translate="yes" xml:space="preserve">
          <source>Spool to system printer on close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fc00753787683a6ac1541ee8a68b3aa017c6a5" translate="yes" xml:space="preserve">
          <source>Spurious text after =pod / =cut</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44359690bcaf314432bdd57278be918c222c6a77" translate="yes" xml:space="preserve">
          <source>Square Brackets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785ca9526809c90e3417966be7d5844fd2a0c5c8" translate="yes" xml:space="preserve">
          <source>Stability</source>
          <target state="translated">Stability</target>
        </trans-unit>
        <trans-unit id="dab8825d9ab14cb0ae9c8c35a6b41109eb0231a8" translate="yes" xml:space="preserve">
          <source>Stabilized</source>
          <target state="translated">Stabilized</target>
        </trans-unit>
        <trans-unit id="699cbcfa1d2de31b511ffab2c2a0ef9730993e7e" translate="yes" xml:space="preserve">
          <source>Stable CPAN modules</source>
          <target state="translated">Стабильные CPAN модули</target>
        </trans-unit>
        <trans-unit id="0c37e4671699616f1b661a8adda9cc25f7e7c380" translate="yes" xml:space="preserve">
          <source>Stable modules should maintain backwards compatibility</source>
          <target state="translated">Стабильные модули должны поддерживать обратную совместимость</target>
        </trans-unit>
        <trans-unit id="e59f32f5132f95bd8522cf0423d93b2b074371e3" translate="yes" xml:space="preserve">
          <source>Stack Manipulation Macros</source>
          <target state="translated">Макросы манипулирования стеком</target>
        </trans-unit>
        <trans-unit id="d3f19bccf79868f3c579b95c4b4aa5c3173cdfc2" translate="yes" xml:space="preserve">
          <source>Stack Overflow is a free question-and-answer site for programmers. It's not focussed solely on Perl, but it does have an active group of users who do their best to help people with their Perl programming questions.</source>
          <target state="translated">Stack Overflow-бесплатный сайт вопросов и ответов для программистов.Он не сфокусирован исключительно на Perl,но у него есть активная группа пользователей,которые делают все возможное,чтобы помочь людям с их вопросами по программированию на Perl.</target>
        </trans-unit>
        <trans-unit id="79c0915aad1c8e4662635799d017c78213056099" translate="yes" xml:space="preserve">
          <source>Stack Trace formatting</source>
          <target state="translated">Форматирование трассировки стека</target>
        </trans-unit>
        <trans-unit id="bed6dbd7b4c6ff7ccd34126ec3ad733b680488ca" translate="yes" xml:space="preserve">
          <source>Stack backtrace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbdf4bd83f4cf97cb14bdbe17601c9d4a7b9b2b" translate="yes" xml:space="preserve">
          <source>Stack marker variable for the XSUB. See &lt;code&gt;&lt;a href=&quot;#dMARK&quot;&gt;&quot;dMARK&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32c5432806926c51af3a6d722094d1b8498ee67" translate="yes" xml:space="preserve">
          <source>Stack marker variable for the XSUB. See &lt;code&gt;dMARK&lt;/code&gt; .</source>
          <target state="translated">Переменная маркера стека для XSUB. См. &lt;code&gt;dMARK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abb5c52ccc52723cd1612e07bb13d70407d8e476" translate="yes" xml:space="preserve">
          <source>Stack pointer. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;code&gt;dSP&lt;/code&gt; and &lt;code&gt;SPAGAIN&lt;/code&gt; .</source>
          <target state="translated">Указатель стека. Обычно этим занимается &lt;code&gt;xsubpp&lt;/code&gt; . Смотрите &lt;code&gt;dSP&lt;/code&gt; и &lt;code&gt;SPAGAIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f089b00d917131a98e897f79444313cdb238edf" translate="yes" xml:space="preserve">
          <source>Stack pointer. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#dSP&quot;&gt;&quot;dSP&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;SPAGAIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeeffb91b556017b0569617dac90bb982af82c6" translate="yes" xml:space="preserve">
          <source>Stack size discussion: &lt;a href=&quot;http://www.perlmonks.org/?node_id=532956&quot;&gt;http://www.perlmonks.org/?node_id=532956&lt;/a&gt;</source>
          <target state="translated">Обсуждение размера стека: &lt;a href=&quot;http://www.perlmonks.org/?node_id=532956&quot;&gt;http://www.perlmonks.org/?node_id=532956&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="154b31259cd2c2ec7e9e63fa8a80cdb8ccfd16a7" translate="yes" xml:space="preserve">
          <source>Stack size discussion: &lt;a href=&quot;https://www.perlmonks.org/?node_id=532956&quot;&gt;https://www.perlmonks.org/?node_id=532956&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249f056b552dcec0dec16b7eed3b2513cf1351f3" translate="yes" xml:space="preserve">
          <source>Stacks</source>
          <target state="translated">Stacks</target>
        </trans-unit>
        <trans-unit id="5972ab200f32099d27f68650121e9738cdd0e0dc" translate="yes" xml:space="preserve">
          <source>Standard Exports</source>
          <target state="translated">Стандартный экспорт</target>
        </trans-unit>
        <trans-unit id="615e5b98a32ea52bb60f7df7a2666749db3e59ab" translate="yes" xml:space="preserve">
          <source>Standard I/O functions via VMS extensions</source>
          <target state="translated">Стандартные функции ввода/вывода через расширения ЗИС</target>
        </trans-unit>
        <trans-unit id="eba63c181dd248d4b5bba8f0065bbb50178505fc" translate="yes" xml:space="preserve">
          <source>Standard Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc014247a90e3e9471cd43027f6ed1dd5022323" translate="yes" xml:space="preserve">
          <source>Standard Modules</source>
          <target state="translated">Стандартные модули</target>
        </trans-unit>
        <trans-unit id="c9c684d7aa085e9385f19a731c50f29d333142bb" translate="yes" xml:space="preserve">
          <source>Standard TAP formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb1fc559ce28778664dae993a8bd3c9c1e13c04" translate="yes" xml:space="preserve">
          <source>Standard codes for country identification</source>
          <target state="translated">Стандартные коды для идентификации страны</target>
        </trans-unit>
        <trans-unit id="60f2260734e540712fc0b3a84eed77018b10ca66" translate="yes" xml:space="preserve">
          <source>Standard codes for currency identification</source>
          <target state="translated">Стандартные коды для идентификации валюты</target>
        </trans-unit>
        <trans-unit id="b5deda2e5280ead9cecc60bbf30d177abf9ec4ea" translate="yes" xml:space="preserve">
          <source>Standard codes for language extension identification</source>
          <target state="translated">Стандартные коды для идентификации расширения языка</target>
        </trans-unit>
        <trans-unit id="f2ee3631bc2f34f1c73413a9d2061ce03c5ab44f" translate="yes" xml:space="preserve">
          <source>Standard codes for language identification</source>
          <target state="translated">Стандартные коды для языковой идентификации</target>
        </trans-unit>
        <trans-unit id="10a16afeaf36afe90baa03b4e90894540cc06be0" translate="yes" xml:space="preserve">
          <source>Standard codes for language variation identification</source>
          <target state="translated">Стандартные коды для идентификации языковых вариаций</target>
        </trans-unit>
        <trans-unit id="b1589d1520251236f9eb362681e4874ce8c5e9ee" translate="yes" xml:space="preserve">
          <source>Standard codes for script identification</source>
          <target state="translated">Стандартные коды для скриптовой идентификации</target>
        </trans-unit>
        <trans-unit id="5d6d11511a070bcf17fa4eb2391ebf6e7a493c05" translate="yes" xml:space="preserve">
          <source>Standard modules with VMS-specific differences</source>
          <target state="translated">Стандартные модули со специфическими для VMS различиями</target>
        </trans-unit>
        <trans-unit id="de92c20ac3781f514b3f3e2c2c6d7cf3cd1b6af8" translate="yes" xml:space="preserve">
          <source>Standard, bundled modules are all expected to behave in a well-defined manner with respect to namespace pollution because they use the Exporter module. See their own documentation for details.</source>
          <target state="translated">Ожидается,что все стандартные модули в комплекте будут вести себя четко определенным образом в отношении загрязнения пространства имён,поскольку они используют модуль Exporter.Подробности см.в их собственной документации.</target>
        </trans-unit>
        <trans-unit id="06d642894968e30a189e062bc83886c6edaae47c" translate="yes" xml:space="preserve">
          <source>StandardizedVariants.html</source>
          <target state="translated">StandardizedVariants.html</target>
        </trans-unit>
        <trans-unit id="8e0bc2ae4e7dee6efa427af24dac0f51946576f0" translate="yes" xml:space="preserve">
          <source>StandardizedVariants.txt</source>
          <target state="translated">StandardizedVariants.txt</target>
        </trans-unit>
        <trans-unit id="8f1eb352b92791858ba92c3002eb4f33fe75c02e" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Create if none&quot;. If the requested file does not exist, then it is created and then opened. This is the default if &lt;code&gt;GENERIC_WRITE&lt;/code&gt; access has been requested or if &lt;code&gt;&quot;t&quot;&lt;/code&gt; or &lt;code&gt;&quot;n&quot;&lt;/code&gt; was specified. Contrast with &lt;code&gt;&quot;e&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822e0e0d7c446c8fe35f0a8dc97579be22addccb" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Existing file only&quot;. If the requested file does not exist, then nothing is opened and the &lt;code&gt;createFile&lt;/code&gt; call fails. This is the default unless &lt;code&gt;GENERIC_WRITE&lt;/code&gt; access has been requested or &lt;code&gt;&quot;t&quot;&lt;/code&gt; or &lt;code&gt;&quot;n&quot;&lt;/code&gt; was specified. Contrast with &lt;code&gt;&quot;c&quot;&lt;/code&gt;. Can't be used with &lt;code&gt;&quot;n&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652ad6f84c10dfa8eb50a6eccca9974ed76fa82f" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Keep if exists&quot;. If the requested file exists, then it is opened. This is the default unless &lt;code&gt;GENERIC_WRITE&lt;/code&gt; access has been requested but &lt;code&gt;GENERIC_READ&lt;/code&gt; access has not been requested. Contrast with &lt;code&gt;&quot;t&quot;&lt;/code&gt; and &lt;code&gt;&quot;n&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97906deb67c16b9ab59b8c8cd40f5544710588f" translate="yes" xml:space="preserve">
          <source>Stands for &quot;New file only&quot;. If the requested file exists, then it is not opened and the &lt;code&gt;createFile&lt;/code&gt; call fails. Contrast with &lt;code&gt;&quot;k&quot;&lt;/code&gt; and &lt;code&gt;&quot;t&quot;&lt;/code&gt;. Can't be used with &lt;code&gt;&quot;e&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a514e0a0fb34443686dd34171dc3a164f90121" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Query access&quot;. This is really a no-op since you always have query access when you open a file. You can specify &lt;code&gt;&quot;q&quot;&lt;/code&gt; to document that you plan to query the file [or device, etc.]. This is especially helpful when you don't want read nor write access since something like &lt;code&gt;&quot;q&quot;&lt;/code&gt; or &lt;code&gt;&quot;q ke&quot;&lt;/code&gt; may be easier to understand than just &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;&quot;ke&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca1e430d40009621884ba6704cb12fdbd5a5f0a" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Read access&quot;. Sets the &lt;code&gt;GENERIC_READ&lt;/code&gt; bit(s) in the &lt;code&gt;$uAccess&lt;/code&gt; that is passed to &lt;code&gt;CreateFile&lt;/code&gt;. This is the default access if the &lt;code&gt;$svAccess&lt;/code&gt; parameter is missing [or if it is &lt;code&gt;undef&lt;/code&gt; and &lt;code&gt;$rvhvOptions&lt;/code&gt; doesn't specify an &lt;code&gt;&quot;Access&quot;&lt;/code&gt; option].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7a0d1e7c51667204657dcea2b802a67f1a4440" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Truncate if exists&quot;. If the requested file exists, then it is truncated to zero length and then opened. This is the default if &lt;code&gt;GENERIC_WRITE&lt;/code&gt; access has been requested and &lt;code&gt;GENERIC_READ&lt;/code&gt; access has not been requested. Contrast with &lt;code&gt;&quot;k&quot;&lt;/code&gt; and &lt;code&gt;&quot;n&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481c6b37648dd19153bdddeac4cc38f4916dae94" translate="yes" xml:space="preserve">
          <source>Stands for &quot;Write access&quot;. Sets the &lt;code&gt;GENERIC_WRITE&lt;/code&gt; bit(s) in the &lt;code&gt;$uAccess&lt;/code&gt; that is passed to &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07142f93c49bc59a674f3cf54cfc45c16742e4f3" translate="yes" xml:space="preserve">
          <source>Stands for &amp;ldquo;Database Management&amp;rdquo; routines, a set of routines that emulate an &lt;b&gt;associative array&lt;/b&gt; using disk files. The routines use a dynamic hashing scheme to locate any entry with only two disk accesses. DBM files allow a Perl program to keep a persistent &lt;b&gt;hash&lt;/b&gt; across multiple invocations. You can &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; your hash variables to various DBM implementations.</source>
          <target state="translated">Обозначает процедуры &amp;laquo;Управление базой данных&amp;raquo;, набор процедур, которые имитируют &lt;b&gt;ассоциативный массив&lt;/b&gt; с использованием файлов на диске. Подпрограммы используют схему динамического хеширования, чтобы найти любую запись, имеющую только два доступа к диску. Файлы DBM позволяют программе Perl сохранять постоянный &lt;b&gt;хэш при&lt;/b&gt; нескольких вызовах. Вы можете &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; свои хеш-переменные с различными реализациями DBM.</target>
        </trans-unit>
        <trans-unit id="1a775e3592f8bbe5e3864eeff5292ad588cc2550" translate="yes" xml:space="preserve">
          <source>Stands for &amp;ldquo;Database Management&amp;rdquo; routines, a set of routines that emulate an &lt;b&gt;associative array&lt;/b&gt; using disk files. The routines use a dynamic hashing scheme to locate any entry with only two disk accesses. DBM files allow a Perl program to keep a persistent &lt;b&gt;hash&lt;/b&gt; across multiple invocations. You can &lt;code&gt;tie&lt;/code&gt; your hash variables to various DBM implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912db97dd4f77a0ec4611c2eb6976e694df9c91d" translate="yes" xml:space="preserve">
          <source>Start by familiarizing yourself with &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;. &lt;a href=&quot;TAP::Parser::SourceHandler::RawTAP&quot;&gt;TAP::Parser::SourceHandler::RawTAP&lt;/a&gt; is the easiest sub-class to use as an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dfbc7a4324027580845858a63c6abfc58480ed" translate="yes" xml:space="preserve">
          <source>Start iPKGui. Install the packages &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;coreutils&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ab44220e1cd65314352df58f468e908b8005a5" translate="yes" xml:space="preserve">
          <source>Start logging each disk request in a buffer internal to the disk device driver of size &lt;code&gt;$uLogBufferSize&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e3debe4cf1141c3184e11a9dc572fab1423447" translate="yes" xml:space="preserve">
          <source>Start position and no-match optimisations</source>
          <target state="translated">Оптимизация стартового положения и отсутствие несоответствий</target>
        </trans-unit>
        <trans-unit id="db76cc0f3f883ec9a2ed91694d94f4588b9f7245" translate="yes" xml:space="preserve">
          <source>Start up an interval timer: after a certain time, a signal ($which) arrives, and more signals may keep arriving at certain intervals. To disable an &quot;itimer&quot;, use &lt;code&gt;$floating_seconds&lt;/code&gt; of zero. If the &lt;code&gt;$interval_floating_seconds&lt;/code&gt; is set to zero (or unspecified), the timer is disabled &lt;b&gt;after&lt;/b&gt; the next delivered signal.</source>
          <target state="translated">Запустите интервальный таймер: через определенное время поступает сигнал ($ which), и через определенные интервалы может поступать больше сигналов. Чтобы отключить &amp;laquo;itimer&amp;raquo;, используйте нулевое значение &lt;code&gt;$floating_seconds&lt;/code&gt; float_seconds . Если &lt;code&gt;$interval_floating_seconds&lt;/code&gt; установлен в ноль (или не указан), таймер отключается &lt;b&gt;после&lt;/b&gt; следующего доставленного сигнала.</target>
        </trans-unit>
        <trans-unit id="06610ff85775ebe35f7b8f21af74dc2942b66fd2" translate="yes" xml:space="preserve">
          <source>Start using Devel::PPPort for XS projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc3261b7747ff88ddb552066307bdb160a93102" translate="yes" xml:space="preserve">
          <source>Start with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf54d336f01982c7f36b58a5973054d7f918d05e" translate="yes" xml:space="preserve">
          <source>Start with a dummy run of h2xs:</source>
          <target state="translated">Начните с манекена из h2xs:</target>
        </trans-unit>
        <trans-unit id="8d112be587c3b58ec2b08ad08b5f28537f049d9b" translate="yes" xml:space="preserve">
          <source>Start with single-step on.</source>
          <target state="translated">Начни с одного шага.</target>
        </trans-unit>
        <trans-unit id="8332767a94ccaf8b2674f5e407c13b8594261e03" translate="yes" xml:space="preserve">
          <source>Start with the first letter in the string 'a'.</source>
          <target state="translated">Начните с первой буквы в строке 'a'.</target>
        </trans-unit>
        <trans-unit id="be46870dc50c93db69a63c772d7b331eea2b204f" translate="yes" xml:space="preserve">
          <source>Start with the first letter in the string 't'.</source>
          <target state="translated">Начните с первой буквы в строке 't'.</target>
        </trans-unit>
        <trans-unit id="e5189aa41c41bf90fef351656e01e6473fbaf249" translate="yes" xml:space="preserve">
          <source>Start your Perl program</source>
          <target state="translated">Запустите программу Perl</target>
        </trans-unit>
        <trans-unit id="9f05ee38f1d8c4b639d2c05f6f7cb39a8f63ba62" translate="yes" xml:space="preserve">
          <source>Start-tokens from Pod::Simple::PullParser</source>
          <target state="translated">Старт-токены из Под::Простые::PullParser</target>
        </trans-unit>
        <trans-unit id="bba3dd50f7eb62963e78abd741a6ecb84d7e0e92" translate="yes" xml:space="preserve">
          <source>Starting From Scratch</source>
          <target state="translated">Начиная с царапин</target>
        </trans-unit>
        <trans-unit id="d9722acfd050423d2f793d245909513d9f792a51" translate="yes" xml:space="preserve">
          <source>Starting OS/2 (and DOS) programs under Perl</source>
          <target state="translated">Запуск программ OS/2 (и DOS)под Perl</target>
        </trans-unit>
        <trans-unit id="6a454cb163d40a3be765256333ed856099e340c6" translate="yes" xml:space="preserve">
          <source>Starting Perl in the VMS debugger may change the program execution profile in a way that such problems are not reproduced.</source>
          <target state="translated">Запуск Perl в отладчике VMS может изменить профиль выполнения программы таким образом,что подобные проблемы не будут воспроизведены.</target>
        </trans-unit>
        <trans-unit id="61b2b3d56b228f00035d9baf98e67307d761a53f" translate="yes" xml:space="preserve">
          <source>Starting Perl programs under AmigaOS</source>
          <target state="translated">Запуск программ на Perl под AmigaOS</target>
        </trans-unit>
        <trans-unit id="0aee4d40c0b8d064ab00858293dabb8236e2cf55" translate="yes" xml:space="preserve">
          <source>Starting Perl programs under AmigaOS 4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c712909317e062b2443119b81f61884099ac7f3f" translate="yes" xml:space="preserve">
          <source>Starting Perl programs under OS/2 (and DOS and...)</source>
          <target state="translated">Запуск программ на Perl под OS/2 (и DOS и...).</target>
        </trans-unit>
        <trans-unit id="653f89b4c2f41c0d0134c806e923d3709fc205d1" translate="yes" xml:space="preserve">
          <source>Starting from IO::Zlib version 1.02, IO::Zlib can also use an external</source>
          <target state="translated">Начиная с IO::Zlib версии 1.02,IO::Zlib также может использовать внешний</target>
        </trans-unit>
        <trans-unit id="a508a2e273548a63bb5c0b07719e420fe300b9fd" translate="yes" xml:space="preserve">
          <source>Starting from OS/400 V5R2 the IBM Visual Age compiler is supported on OS/400 PASE, so it is possible to build Perl natively on OS/400. The easier way, however, is to compile in AIX, as just described.</source>
          <target state="translated">Начиная с OS/400 V5R2 компилятор IBM Visual Age поддерживается на OS/400 PASE,поэтому можно собирать Perl нативно на OS/400.Проще,однако,скомпилировать в AIX,как только что было описано.</target>
        </trans-unit>
        <trans-unit id="5e473385f5209d49f3d6236a23d69b61072e12c5" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.10.1 (well, 5.10.0, but it didn't work right), you can say</source>
          <target state="translated">Начиная с Perl 5.10.1 (ну,5.10.0,но это не сработало правильно),можно сказать.</target>
        </trans-unit>
        <trans-unit id="213483245e12096ac5558b413cc608887022de0d" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.6 Perl has had some level of multibyte character support. Perl 5.8 or later is recommended. Supported multibyte character repertoires include Unicode, and legacy encodings through the Encode module. See &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;, &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;, and &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">Начиная с Perl 5.6 Perl имеет некоторый уровень поддержки многобайтовых символов. Рекомендуется Perl 5.8 или новее. Поддерживаемые репертуары многобайтовых символов включают Unicode и устаревшие кодировки через модуль Encode. См. &lt;a href=&quot;perluniintro&quot;&gt;Perluniintro&lt;/a&gt; , &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; и &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3401e5a549f724e4569e770d48d8137b822e30b" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.7.2 (and consequently 5.8.x / 5.10.x / 5.12.x) and AIX 4.3 or newer Perl uses the AIX native dynamic loading interface in the so called runtime linking mode instead of the emulated interface that was used in Perl releases 5.6.1 and earlier or, for AIX releases 4.2 and earlier. This change does break backward compatibility with compiled modules from earlier Perl releases. The change was made to make Perl more compliant with other applications like Apache/mod_perl which are using the AIX native interface. This change also enables the use of C++ code with static constructors and destructors in Perl extensions, which was not possible using the emulated interface.</source>
          <target state="translated">Начиная с версии Perl 5.7.2 (и,следовательно,5.8.x/5.10.x/5.12.x)и AIX 4.3 или более новой версии Perl использует собственный интерфейс динамической загрузки AIX в так называемом режиме runtime link вместо эмулированного интерфейса,который использовался в версии Perl 5.6.1 и более ранних версиях или,для версии AIX 4.2 и более ранних версиях.Это изменение нарушает обратную совместимость с скомпилированными модулями из более ранних версий Perl.Изменение было сделано для того,чтобы сделать Perl более совместимым с другими приложениями,такими как Apache/mod_perl,использующими родной интерфейс AIX.Это изменение также позволяет использовать C++код со статическими конструкторами и деструкторами в расширениях Perl,что было невозможно при использовании эмулируемого интерфейса.</target>
        </trans-unit>
        <trans-unit id="25d510ae8cee14025ed8b7521c9e7b4803c6e585" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8 Filter::Util::Call (the core part of the Source Filters distribution) is part of the standard Perl distribution. Also included is a friendlier interface called Filter::Simple, by Damian Conway.</source>
          <target state="translated">Начиная с версии Perl 5.8 Фильтр::Util::Call (основная часть распределения Фильтров-источников)является частью стандартного распределения Perl.Также в него включен более дружественный интерфейс,называемый Filter::Simple,по Дэмиану Конвей.</target>
        </trans-unit>
        <trans-unit id="84131be03444ffa9bfcdc4607ace523b2b4abf69" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8 you can use the standard module Encode to translate from EBCDIC to Latin-1 code points. Encode knows about more EBCDIC character sets than Perl can currently be compiled to run on.</source>
          <target state="translated">Начиная с версии Perl 5.8 вы можете использовать стандартный модуль Encode для перевода с EBCDIC на латиницу-1 кодовых точек.Encode знает о большем количестве наборов символов EBCDIC,чем Perl,который в настоящее время может быть скомпилирован для работы на нем.</target>
        </trans-unit>
        <trans-unit id="b494835e5e76badb9fdcdcf6ee9b4a757213c9dc" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8, a source filter module, &lt;code&gt;Switch&lt;/code&gt; , can also be used to get switch and case. Its use is now discouraged, because it's not fully compatible with the native switch of Perl 5.10, and because, as it's implemented as a source filter, it doesn't always work as intended when complex syntax is involved.</source>
          <target state="translated">Начиная с Perl 5.8, для получения переключателя и корпуса также можно использовать модуль фильтра источника &lt;code&gt;Switch&lt;/code&gt; . Его использование сейчас не рекомендуется, потому что он не полностью совместим со встроенным переключателем Perl 5.10 и потому, что, поскольку он реализован как фильтр источника, он не всегда работает должным образом при использовании сложного синтаксиса.</target>
        </trans-unit>
        <trans-unit id="d155ec5cb50db186fa8a14b8502428201e840a22" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8, a source filter module, &lt;code&gt;Switch&lt;/code&gt;, can also be used to get switch and case. Its use is now discouraged, because it's not fully compatible with the native switch of Perl 5.10, and because, as it's implemented as a source filter, it doesn't always work as intended when complex syntax is involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f4302390c39dc69e8bb4ae56d84681737deb52" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8, in C/C++ level Perl knows how to wrap system/library interfaces that have thread-aware versions (e.g. getpwent_r()) into frontend macros (e.g. getpwent()) that correctly handle the multithreaded interaction with the Perl interpreter. This will happen transparently, the only thing you need to do is to instantiate a Perl interpreter.</source>
          <target state="translated">Начиная с версии Perl 5.8,на уровне Си/Си++Perl знает,как обернуть системные/библиотечные интерфейсы,которые имеют потоковые версии (например,getpwent_r())во внешние макросы (например,getpwent()),которые корректно обрабатывают многопотоковое взаимодействие с интерпретатором Perl.Это будет происходить прозрачно,единственное,что вам нужно сделать-это инстанцировать интерпретатор Perl.</target>
        </trans-unit>
        <trans-unit id="d0ecdc5671ad43a21bb3ba4b49951928dc27fb67" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8.1 different runs of Perl will have different ordering of hash keys. The change was done for greater security, see &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt;. This means that different runs of Perl will have different Data::Dumper outputs if the data contains hashes. If you need to have identical Data::Dumper outputs from different runs of Perl, use the environment variable PERL_HASH_SEED, see &lt;a href=&quot;../perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED in perlrun&lt;/a&gt;. Using this restores the old (platform-specific) ordering: an even prettier solution might be to use the &lt;code&gt;Sortkeys&lt;/code&gt; filter of Data::Dumper.</source>
          <target state="translated">Начиная с Perl 5.8.1, разные версии Perl будут иметь разный порядок хэш-ключей. Изменение было сделано для большей безопасности, см. &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Атаки на алгоритмическую сложность в perlsec&lt;/a&gt; . Это означает, что разные прогоны Perl будут иметь разные выходные данные Data :: Dumper, если данные содержат хэши. Если вам нужно иметь одинаковые выходные данные Data :: Dumper из разных запусков Perl, используйте переменную среды PERL_HASH_SEED, см. &lt;a href=&quot;../perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED в perlrun&lt;/a&gt; . Это восстанавливает старый (зависящий от платформы) порядок: еще более красивым решением может быть использование фильтра &lt;code&gt;Sortkeys&lt;/code&gt; для Data :: Dumper.</target>
        </trans-unit>
        <trans-unit id="f68deda9f44fedf246c9591657da44f835e61c6d" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.8.1 different runs of Perl will have different ordering of hash keys. The change was done for greater security, see &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;&quot;Algorithmic Complexity Attacks&quot; in perlsec&lt;/a&gt;. This means that different runs of Perl will have different Data::Dumper outputs if the data contains hashes. If you need to have identical Data::Dumper outputs from different runs of Perl, use the environment variable PERL_HASH_SEED, see &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;&quot;PERL_HASH_SEED&quot; in perlrun&lt;/a&gt;. Using this restores the old (platform-specific) ordering: an even prettier solution might be to use the &lt;code&gt;Sortkeys&lt;/code&gt; filter of Data::Dumper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b73ef5c7c43845a94f049a96a2982af7951ff5" translate="yes" xml:space="preserve">
          <source>Starting from Perl 5.9.4 the following extra flags are added:</source>
          <target state="translated">Начиная с версии Perl 5.9.4 добавляются следующие дополнительные флаги:</target>
        </trans-unit>
        <trans-unit id="d0f3b9a37d935e7c453cae03a9fc889658a8b375" translate="yes" xml:space="preserve">
          <source>Starting from Perl v5.6.0, Perl has had the capacity to handle Unicode natively. Perl v5.8.0, however, is the first recommended release for serious Unicode work. The maintenance release 5.6.1 fixed many of the problems of the initial Unicode implementation, but for example regular expressions still do not work with Unicode in 5.6.1. Perl v5.14.0 is the first release where Unicode support is (almost) seamlessly integrable without some gotchas (the exception being some differences in &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;, and that is fixed starting in Perl 5.16.0). To enable this seamless support, you should &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; (which is automatically selected if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher). See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. (5.14 also fixes a number of bugs and departures from the Unicode standard.)</source>
          <target state="translated">Начиная с Perl v5.6.0, Perl имеет возможность обрабатывать Unicode изначально. Perl v5.8.0, однако, является первым рекомендуемым выпуском для серьезной работы с Unicode. В служебном выпуске 5.6.1 исправлены многие проблемы первоначальной реализации Unicode, но, например, регулярные выражения по-прежнему не работают с Unicode в 5.6.1. Perl v5.14.0 - это первый выпуск, в котором поддержка Unicode (почти) легко интегрируется без каких-либо ошибок (за исключением некоторых различий в &lt;a href=&quot;functions/quotemeta&quot;&gt;кавычках&lt;/a&gt; , и это исправлено, начиная с Perl 5.16.0). Чтобы включить эту бесшовную поддержку, вы должны &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; (которая автоматически выбирается, если вы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; или выше). См. &lt;a href=&quot;feature&quot;&gt;Особенность&lt;/a&gt;. (5.14 также исправляет ряд ошибок и отклонений от стандарта Unicode.)</target>
        </trans-unit>
        <trans-unit id="df97b58d295ae07b3c7e368fabefa9c327ce3a5a" translate="yes" xml:space="preserve">
          <source>Starting from Perl v5.6.0, Perl has had the capacity to handle Unicode natively. Perl v5.8.0, however, is the first recommended release for serious Unicode work. The maintenance release 5.6.1 fixed many of the problems of the initial Unicode implementation, but for example regular expressions still do not work with Unicode in 5.6.1. Perl v5.14.0 is the first release where Unicode support is (almost) seamlessly integrable without some gotchas. (There are a few exceptions. Firstly, some differences in &lt;a href=&quot;perlfunc#quotemeta&quot;&gt;quotemeta&lt;/a&gt; were fixed starting in Perl 5.16.0. Secondly, some differences in &lt;a href=&quot;perlop#Range-Operators&quot;&gt;the range operator&lt;/a&gt; were fixed starting in Perl 5.26.0. Thirdly, some differences in &lt;a href=&quot;perlfunc#split&quot;&gt;split&lt;/a&gt; were fixed started in Perl 5.28.0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416a20fa36c19a41cf13089d9b7e6cda76a07463" translate="yes" xml:space="preserve">
          <source>Starting from perl 5.7.1 perl uses the Solaris malloc, since the perl malloc breaks when dealing with more than 2GB of memory, and the Solaris malloc also seems to be faster.</source>
          <target state="translated">Начиная с perl 5.7.1 perl используется Solaris malloc,так как при работе с более чем 2 ГБ памяти,perl malloc ломается,а Solaris malloc,похоже,также работает быстрее.</target>
        </trans-unit>
        <trans-unit id="e6f60ae2145b9aa31e782db73fe39a61dbb6b373" translate="yes" xml:space="preserve">
          <source>Starting from the beginning of the input string, each 8-tuple of characters is converted to 1 character of output. With format &lt;code&gt;b&lt;/code&gt; , the first character of the 8-tuple determines the least-significant bit of a character; with format &lt;code&gt;B&lt;/code&gt; , it determines the most-significant bit of a character.</source>
          <target state="translated">Начиная с начала входной строки, каждый кортеж из 8 символов преобразуется в 1 символ вывода. В формате &lt;code&gt;b&lt;/code&gt; первый символ кортежа из 8 определяет младший бит символа; с форматом &lt;code&gt;B&lt;/code&gt; он определяет самый старший бит символа.</target>
        </trans-unit>
        <trans-unit id="924f79553c56797f30f757475a664dc8c52550ae" translate="yes" xml:space="preserve">
          <source>Starting from the beginning of the input string, each 8-tuple of characters is converted to 1 character of output. With format &lt;code&gt;b&lt;/code&gt;, the first character of the 8-tuple determines the least-significant bit of a character; with format &lt;code&gt;B&lt;/code&gt;, it determines the most-significant bit of a character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a530103a351aa6cda54d5b0c4c2b630750302d" translate="yes" xml:space="preserve">
          <source>Starting from the beginning of the template to &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;, each pair of characters is converted to 1 character of output. With format &lt;code&gt;h&lt;/code&gt;, the first character of the pair determines the least-significant nybble of the output character; with format &lt;code&gt;H&lt;/code&gt;, it determines the most-significant nybble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca54402551e7931f104cb3acd73bb3d87fc7a43" translate="yes" xml:space="preserve">
          <source>Starting from the beginning of the template to pack(), each pair of characters is converted to 1 character of output. With format &lt;code&gt;h&lt;/code&gt; , the first character of the pair determines the least-significant nybble of the output character; with format &lt;code&gt;H&lt;/code&gt; , it determines the most-significant nybble.</source>
          <target state="translated">Начиная с начала шаблона до pack (), каждая пара символов преобразуется в 1 символ вывода. В формате &lt;code&gt;h&lt;/code&gt; первый символ пары определяет младший младший байт выходного символа; в формате &lt;code&gt;H&lt;/code&gt; определяет наиболее значимый ниббл.</target>
        </trans-unit>
        <trans-unit id="e0719e57793beb804762734f954a0430e8236ad0" translate="yes" xml:space="preserve">
          <source>Starting from the top, this says &lt;code&gt;$b&lt;/code&gt; is an SV. The scalar is an IV, which is capable of holding an integer or reference value. It has the &lt;code&gt;ROK&lt;/code&gt; flag set, meaning it is a reference (rather than an integer or string). Notice that Dump follows the reference and shows us what &lt;code&gt;$b&lt;/code&gt; was referencing. We see the same &lt;code&gt;$a&lt;/code&gt; that we found in the previous example.</source>
          <target state="translated">Начиная сверху, это говорит о том, что &lt;code&gt;$b&lt;/code&gt; - SV. Скаляр - это IV, который может содержать целое или ссылочное значение. У него установлен флаг &lt;code&gt;ROK&lt;/code&gt; , что означает, что это ссылка (а не целое число или строка). Обратите внимание, что Dump следует по ссылке и показывает нам, на что ссылается &lt;code&gt;$b&lt;/code&gt; . Мы видим тот же &lt;code&gt;$a&lt;/code&gt; который мы нашли в предыдущем примере.</target>
        </trans-unit>
        <trans-unit id="0542c0de06c1b01762ccd40a6fe67b90b3556cde" translate="yes" xml:space="preserve">
          <source>Starting from version 5.8, Perl uses a builtin translation layer for text-mode files. This replaces the efficient well-tested EMX layer by some code which should be best characterized as a &quot;quick hack&quot;.</source>
          <target state="translated">Начиная с версии 5.8,Perl использует встроенный слой перевода для текстовых файлов.Он заменяет эффективный,хорошо проверенный слой EMX на некоторый код,который лучше всего характеризовать как &quot;быстрый взлом&quot;.</target>
        </trans-unit>
        <trans-unit id="889838782f9044eb1988a4e66547d5f47a179ecb" translate="yes" xml:space="preserve">
          <source>Starting in 5.28, changing locales on threaded builds is supported on systems that offer thread-safe locale functions. These include POSIX 2008 systems and Windows starting with Visual Studio 2005, and this module will work properly in such situations. However, on threaded builds on Windows prior to Visual Studio 2015, retrieving the items &lt;code&gt;CRNCYSTR&lt;/code&gt; and &lt;code&gt;THOUSEP&lt;/code&gt; can result in a race with a thread that has converted to use the global locale. It is quite uncommon for a thread to have done this. It would be possible to construct a workaround for this; patches welcome: see &lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;&quot;switch_to_global_locale&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52cca7c60b1d846e7ee0624e6dbe1baa1d2c524" translate="yes" xml:space="preserve">
          <source>Starting in 5.32, the Name, Name Aliases, and Named Sequences properties are allowed to be matched. They are considered to be a single combination property, just as has long been the case for &lt;code&gt;\N{}&lt;/code&gt;. Loose matching doesn't work in exactly the same way for these as it does for the values of other properties. The rules are given in &lt;a href=&quot;https://www.unicode.org/reports/tr44/tr44-24.html#UAX44-LM2&quot;&gt;https://www.unicode.org/reports/tr44/tr44-24.html#UAX44-LM2&lt;/a&gt;. As a result, Perl doesn't try loose matching for you, like it does in other properties. All letters in names are uppercase, but you can add &lt;code&gt;(?i)&lt;/code&gt; to your subpattern to ignore case. If you're uncertain where a blank is, you can use &lt;code&gt; ?&lt;/code&gt; in your subpattern. No character name contains an underscore, so don't bother trying to match one. The use of hyphens is particularly problematic; refer to the above link. But note that, as of Unicode 13.0, the only script in modern usage which has weirdnesses with these is Tibetan; also the two Korean characters U+116C HANGUL JUNGSEONG OE and U+1180 HANGUL JUNGSEONG O-E. Unicode makes no promises to not add hyphen-problematic names in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac77222ae2e654fdac46266902dcc915cb8e811b" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.12.0, &lt;code&gt;\N&lt;/code&gt; also can have an additional meaning (only) in patterns, namely to match a non-newline character. (This is short for &lt;code&gt;[^\n]&lt;/code&gt;, and like &lt;code&gt;.&lt;/code&gt; but is not affected by the &lt;code&gt;/s&lt;/code&gt; regex modifier.)</source>
          <target state="translated">Начиная с Perl 5.12.0, &lt;code&gt;\N&lt;/code&gt; также может иметь дополнительное значение (только) в шаблонах, а именно совпадение с символом, отличным от новой строки. (Это сокращение для &lt;code&gt;[^\n]&lt;/code&gt; , и , как и &lt;code&gt;.&lt;/code&gt; , Но не влияет на &lt;code&gt;/s&lt;/code&gt; регулярным выражением модификатором.)</target>
        </trans-unit>
        <trans-unit id="2859a2d886c0e9aec6c1de9465ceff2207dfb72a" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14 (and partially in Perl 5.12), just put a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; near the beginning of your program. Within its lexical scope you shouldn't have this problem. It also is automatically enabled under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature ':5.12'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; or using &lt;code&gt;-E&lt;/code&gt; on the command line for Perl 5.12 or higher.</source>
          <target state="translated">Начиная с Perl 5.14 (и частично с Perl 5.12), просто поместите функцию &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; в начало вашей программы. В пределах его лексической области у вас не должно быть этой проблемы. Он также автоматически включается при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature ':5.12'&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; или с помощью &lt;code&gt;-E&lt;/code&gt; в командной строке для Perl 5.12 или выше.</target>
        </trans-unit>
        <trans-unit id="df8245894479d7975ceddeb310b62137ac0e64fe" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14 (and partially in Perl 5.12), just put a &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; near the beginning of your program. Within its lexical scope you shouldn't have this problem. It also is automatically enabled under &lt;code&gt;use feature ':5.12'&lt;/code&gt; or &lt;code&gt;use v5.12&lt;/code&gt; or using &lt;code&gt;-E&lt;/code&gt; on the command line for Perl 5.12 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b056d808ccaa125ddd8cb5bd3248f668c64c977" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14, a &lt;code&gt;&quot;^&quot;&lt;/code&gt; (caret or circumflex accent) immediately after the &lt;code&gt;&quot;?&quot;&lt;/code&gt; is a shorthand equivalent to &lt;code&gt;d-imnsx&lt;/code&gt;. Any positive flags (except &lt;code&gt;&quot;d&quot;&lt;/code&gt;) may follow the caret, so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2dad99d1883b55d274e9ecc2470180f982e800" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14, a &lt;code&gt;&quot;^&quot;&lt;/code&gt; (caret or circumflex accent) immediately after the &lt;code&gt;&quot;?&quot;&lt;/code&gt; is a shorthand equivalent to &lt;code&gt;d-imnsx&lt;/code&gt;. Flags (except &lt;code&gt;&quot;d&quot;&lt;/code&gt;) may follow the caret to override it. But a minus sign is not legal with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8902a856b5fd88514da38f6d1ea437cef45dc91" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14, a &lt;code&gt;&quot;^&quot;&lt;/code&gt; (caret or circumflex accent) immediately after the &lt;code&gt;&quot;?&quot;&lt;/code&gt; is a shorthand equivalent to &lt;code&gt;d-imsx&lt;/code&gt; . Any positive flags (except &lt;code&gt;&quot;d&quot;&lt;/code&gt; ) may follow the caret, so</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&quot;^&quot;&lt;/code&gt; (знак вставки или циркумфлекс) сразу после &lt;code&gt;&quot;?&quot;&lt;/code&gt; является сокращенным эквивалентом &lt;code&gt;d-imsx&lt;/code&gt; . Любые положительные флаги (кроме &lt;code&gt;&quot;d&quot;&lt;/code&gt; ) могут следовать за кареткой, поэтому</target>
        </trans-unit>
        <trans-unit id="dd982f589d8e87c6c46ce3117db1a952a4a3a29e" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14, a &lt;code&gt;&quot;^&quot;&lt;/code&gt; (caret or circumflex accent) immediately after the &lt;code&gt;&quot;?&quot;&lt;/code&gt; is a shorthand equivalent to &lt;code&gt;d-imsx&lt;/code&gt; . Flags (except &lt;code&gt;&quot;d&quot;&lt;/code&gt; ) may follow the caret to override it. But a minus sign is not legal with it.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&quot;^&quot;&lt;/code&gt; (знак вставки или циркумфлекс) сразу после &lt;code&gt;&quot;?&quot;&lt;/code&gt; является сокращенным эквивалентом &lt;code&gt;d-imsx&lt;/code&gt; . Флаги (кроме &lt;code&gt;&quot;d&quot;&lt;/code&gt; ) могут следовать за кареткой, чтобы переопределить ее. Но знак минус с ним недопустим.</target>
        </trans-unit>
        <trans-unit id="f8764da9a2d4e197710fd50d36bbe6c6ef6a3ac9" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.14.0, regular expressions compiled within the scope of &lt;code&gt;unicode_strings&lt;/code&gt; use Unicode rules even when executed or compiled into larger regular expressions outside the scope.</source>
          <target state="translated">Начиная с Perl 5.14.0, регулярные выражения, скомпилированные в рамках &lt;code&gt;unicode_strings&lt;/code&gt; , используют правила Unicode, даже когда выполняются или скомпилированы в более крупные регулярные выражения за пределами области видимости.</target>
        </trans-unit>
        <trans-unit id="69cd047e088fdbefa20b4fff4c70feeb8034d880" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.16.0, consistent quoting rules are used within the scope of &lt;code&gt;unicode_strings&lt;/code&gt; , as described in &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;. Prior to that, or outside its scope, no code points above 127 are quoted in UTF-8 encoded strings, but in byte encoded strings, code points between 128-255 are always quoted.</source>
          <target state="translated">Начиная с Perl 5.16.0, совместимые со ссылкой правила используются в рамках &lt;code&gt;unicode_strings&lt;/code&gt; , как описано в &lt;a href=&quot;functions/quotemeta&quot;&gt;QuoteMeta&lt;/a&gt; . До этого или за пределами его области в строках с кодировкой UTF-8 не указывались кодовые точки выше 127, но в строках с байтовой кодировкой всегда указывались кодовые точки между 128&amp;ndash;255.</target>
        </trans-unit>
        <trans-unit id="18d82ac8aba251c121572f60699a2bf12308e978" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.16.0, consistent quoting rules are used within the scope of &lt;code&gt;unicode_strings&lt;/code&gt;, as described in &lt;a href=&quot;perlfunc#quotemeta&quot;&gt;&quot;quotemeta&quot; in perlfunc&lt;/a&gt;. Prior to that, or outside its scope, no code points above 127 are quoted in UTF-8 encoded strings, but in byte encoded strings, code points between 128-255 are always quoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399f06c020d8cd6de2c45e4ca951de47d9647e70" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.18, there are non-obvious Unicode rules under &lt;code&gt;/i&lt;/code&gt; that can match variably, but which you might not think could. For example, the substring &lt;code&gt;&quot;ss&quot;&lt;/code&gt; can match the single character LATIN SMALL LETTER SHARP S. Here's a complete list of the current ones affecting ASCII characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8e157579b8bab3ccd61e698c935bfec29a8f08" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.20, a hash slice operation with the % symbol is a variant of slice operation returning a list of key/value pairs rather than just values:</source>
          <target state="translated">Начиная с версии Perl 5.20,операция хэш-фрагмента с символом % является вариантом операции фрагментации,возвращающим список пар ключ/значение,а не только значения:</target>
        </trans-unit>
        <trans-unit id="39e60469d5cdf9ceb960a075ac6c5b92f2cc1e99" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.26.0, the range operator on strings treats their lengths consistently within the scope of &lt;code&gt;unicode_strings&lt;/code&gt;. Prior to that, or outside its scope, it could produce strings whose length in characters exceeded that of the right-hand side, where the right-hand side took up more bytes than the correct range endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c411e4acf4de658ce7555b24fb1288a04a3bbeb3" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, it is a fatal error to try to complement a string containing a character with an ordinal value above 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fa44c6c3c091efdcacc965773935ea7f947644" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, it is illegal for bit operators, like &lt;code&gt;~&lt;/code&gt;, to operate on strings containing code points above 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b2f43207fbc6b0a71ca28ad690738fd985132" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, it is now easy to detect strings that aren't script runs. Simply enclose just about any pattern like either of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e29afd35da622d839a7f0cbd5ae88b8a5f51e23" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, on multi-threaded perls compiled on systems that implement POSIX 2008 thread-safe locale operations, this function doesn't actually call the system &lt;code&gt;setlocale&lt;/code&gt;. Instead those thread-safe operations are used to emulate the &lt;code&gt;setlocale&lt;/code&gt; function, but in a thread-safe manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebaa36867a4be778f15993a9a2db66338883da5" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, this module is available even on systems that lack a native &lt;code&gt;nl_langinfo&lt;/code&gt;. On such systems, it uses various methods to construct what that function, if present, would return. But there are potential glitches. These are the items that could be different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e1eb3f09fae3aaaa4cf7976dd6db42da82227a" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28, this pragma may be used in &lt;a href=&quot;threads&quot;&gt;multi-threaded&lt;/a&gt; applications on systems that have thread-safe locale ability. Some caveats apply, see &lt;a href=&quot;#Multi-threaded&quot;&gt;&quot;Multi-threaded&quot;&lt;/a&gt; below. On systems without this capability, or in earlier Perls, do NOT use this pragma in scripts that have multiple &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; active. The locale in these cases is not local to a single thread. Another thread may change the locale at any time, which could cause at a minimum that a given thread is operating in a locale it isn't expecting to be in. On some platforms, segfaults can also occur. The locale change need not be explicit; some operations cause perl to change the locale itself. You are vulnerable simply by having done a &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af6703d45f3b80a1d7fa23b6e6ecb6c4049fc60" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.28.0, the &lt;code&gt;split&lt;/code&gt; function with a pattern specified as a string containing a single space handles whitespace characters consistently within the scope of &lt;code&gt;unicode_strings&lt;/code&gt;. Prior to that, or outside its scope, characters that are whitespace according to Unicode rules but not according to ASCII rules were treated as field contents rather than field separators when they appear in byte-encoded strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7e78b35743da5e79f86d77337042b624f1dcf2" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.30, it is possible to do something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c1f2502a54e1fd7e5f8ea0c68c3e31e84a505f" translate="yes" xml:space="preserve">
          <source>Starting in Perl 5.32, you can specify a character by its name in regular expression patterns using &lt;code&gt;\p{name=...}&lt;/code&gt;. This is in addition to the longstanding method of using &lt;code&gt;\N{...}&lt;/code&gt;. The following summarizes the differences between these two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013197011e87f7e0633670e8b800c1024b759400" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.16 in a very limited way, and more generally in v5.22, you can restrict which category or categories are enabled by this particular instance of the pragma by adding parameters to it. For example,</source>
          <target state="translated">Начиная с версии Perl v5.16 в очень ограниченном виде,и в более общем плане в версии v5.22,вы можете ограничить,какие категории или категории включены в данном конкретном примере прагмы,добавив в него параметры.Например,</target>
        </trans-unit>
        <trans-unit id="d7be757a62548668bef82e6fa7932eb10efddb3b" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.16, Perl adopted a Unicode-defined strategy for quoting non-ASCII characters; the quoting of ASCII characters is unchanged.</source>
          <target state="translated">Начиная с версии Perl v5.16,в Perl принята стратегия цитирования символов,не относящихся к ASCII;цитирование символов ASCII не изменяется.</target>
        </trans-unit>
        <trans-unit id="a75aca801899de40f1e5f4fc3d561cb6af7bcdc4" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.16, any occurrence of &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; sequences in a double-quotish string automatically loads this module with arguments &lt;code&gt;:full&lt;/code&gt; and &lt;code&gt;:short&lt;/code&gt; (described below) if it hasn't already been loaded with different arguments, in order to compile the named Unicode character into position in the string. Prior to v5.16, an explicit &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; was required to enable this usage. (However, prior to v5.16, the form &lt;code&gt;&quot;use
charnames ();&quot;&lt;/code&gt; did not enable &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt;.)</source>
          <target state="translated">Начиная с Perl v5.16, любое вхождение последовательностей &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; в строку, &lt;i&gt;заключенную&lt;/i&gt; в двойные кавычки, автоматически загружает этот модуль с аргументами &lt;code&gt;:full&lt;/code&gt; и &lt;code&gt;:short&lt;/code&gt; (описано ниже), если он еще не был загружен с другими аргументами, в чтобы скомпилировать именованный символ Unicode в позицию в строке. До версии 5.16 для включения этого использования требовалось явное &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; . (Однако до версии 5.16 форма &lt;code&gt;&quot;use charnames ();&quot;&lt;/code&gt; не &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; \ N { &lt;i&gt;CHARNAME&lt;/i&gt; } .)</target>
        </trans-unit>
        <trans-unit id="2febf15cd94e7fcad788accee9fc2d94365a32bb" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.16, any occurrence of &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; sequences in a double-quotish string automatically loads this module with arguments &lt;code&gt;:full&lt;/code&gt; and &lt;code&gt;:short&lt;/code&gt; (described below) if it hasn't already been loaded with different arguments, in order to compile the named Unicode character into position in the string. Prior to v5.16, an explicit &lt;code&gt;use charnames&lt;/code&gt; was required to enable this usage. (However, prior to v5.16, the form &lt;code&gt;&quot;use charnames ();&quot;&lt;/code&gt; did not enable &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608b1e70a82457592a3e840a3bb2cb2b40f918ad" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.20, UTF-8 locales are supported in Perl, except &lt;code&gt;LC_COLLATE&lt;/code&gt; is only partially supported; collation support is improved in Perl v5.26 to a level that may be sufficient for your needs (see &lt;a href=&quot;#Category-LC_COLLATE%3A-Collation%3A-Text-Comparisons-and-Sorting&quot;&gt;&quot;Category &lt;code&gt;LC_COLLATE&lt;/code&gt;: Collation: Text Comparisons and Sorting&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc88b853a6a300ebebd43ce48839b53ca6b33945" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.20, UTF-8 locales are supported in Perl, except for &lt;code&gt;LC_COLLATE&lt;/code&gt; (use &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; instead). If you have Perl v5.16 or v5.18 and can't upgrade, you can use</source>
          <target state="translated">Начиная с Perl v5.20, в Perl поддерживаются локали UTF-8, за исключением &lt;code&gt;LC_COLLATE&lt;/code&gt; ( вместо этого используйте &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; ). Если у вас установлен Perl v5.16 или v5.18 и вы не можете выполнить обновление, вы можете использовать</target>
        </trans-unit>
        <trans-unit id="24c20bca7982b6c0163573088c845daca9bc60e3" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.22, this applies to ranges in bracketed character classes. If you say, for example, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[\N{U+20}-\N{U+7F}]/&lt;/a&gt;&lt;/code&gt;, it means the characters &lt;code&gt;\N{U+20}&lt;/code&gt; , &lt;code&gt;\N{U+21}&lt;/code&gt; , ..., &lt;code&gt;\N{U+7F}&lt;/code&gt; . This range is all the printable characters that the ASCII character set contains.</source>
          <target state="translated">Начиная с Perl v5.22, это применяется к диапазонам в классах символов в квадратных скобках. Если вы скажете, например, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[\N{U+20}-\N{U+7F}]/&lt;/a&gt;&lt;/code&gt; , это означает символы &lt;code&gt;\N{U+20}&lt;/code&gt; , &lt;code&gt;\N{U+21}&lt;/code&gt; , .. ., &lt;code&gt;\N{U+7F}&lt;/code&gt; . Этот диапазон - все печатаемые символы, содержащиеся в наборе символов ASCII.</target>
        </trans-unit>
        <trans-unit id="b54e661a1090defa2b2777581232122fccb99a2a" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.22, this applies to ranges in bracketed character classes. If you say, for example, &lt;code&gt;qr/[\N{U+20}-\N{U+7F}]/&lt;/code&gt;, it means the characters &lt;code&gt;\N{U+20}&lt;/code&gt;, &lt;code&gt;\N{U+21}&lt;/code&gt;, ..., &lt;code&gt;\N{U+7F}&lt;/code&gt;. This range is all the printable characters that the ASCII character set contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23b660058cb3ee939b11052749bad9b7526e31f" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.22, this is trivially changeable to work portably on both ASCII and EBCDIC platforms.</source>
          <target state="translated">Начиная с версии Perl v5.22,она тривиально меняется для работы в портативном режиме как на ASCII,так и на EBCDIC платформах.</target>
        </trans-unit>
        <trans-unit id="78b643b4bf49444d908712fc4608ad821a201d28" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.26, if the modifier has a second &lt;code&gt;&quot;x&quot;&lt;/code&gt; within it, it does everything that a single &lt;code&gt;/x&lt;/code&gt; does, but additionally non-backslashed SPACE and TAB characters within bracketed character classes are also generally ignored, and hence can be added to make the classes more readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d25eddbb4ffae5919e515185604e4ce1f21281" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.26, specifying &lt;code&gt;/xx&lt;/code&gt; changes the square-bracketed portions of a pattern to ignore tabs and space characters unless they are escaped by preceding them with a backslash. So, we could write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f981605ccbb39cb3202cced83d909060decc021" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.30, Perl detects Turkic locales by their behaviour, and seamlessly handles both types; previously only the non-Turkic one was supported. The name of the locale is ignored, if your system has a &lt;code&gt;tr_TR.UTF-8&lt;/code&gt; locale and it doesn't behave like a Turkic locale, perl will treat it like a non-Turkic locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad33022de79501f8101617222266c778da37687" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.32, an alternative to &lt;code&gt;\N{...}&lt;/code&gt; for full names is available, and that is to say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e38118c6920f78946e8d31e17cb36ad4ee8bf0e" translate="yes" xml:space="preserve">
          <source>Starting in Perl v5.8.6 (&lt;code&gt;Encode&lt;/code&gt; version 2.0.1),</source>
          <target state="translated">Начиная с Perl v5.8.6 ( &lt;code&gt;Encode&lt;/code&gt; версия 2.0.1),</target>
        </trans-unit>
        <trans-unit id="474e1944b6ecbc8a507bc2e01a2a550b04aa62eb" translate="yes" xml:space="preserve">
          <source>Starting in Unicode 6.1 and Perl v5.16, Unicode defines many abbreviations and names that were formerly Perl extensions, and some additional ones that Perl did not previously accept. The list is getting too long to reproduce here, but you can get the complete list from the Unicode web site: &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/NameAliases.txt&quot;&gt;http://www.unicode.org/Public/UNIDATA/NameAliases.txt&lt;/a&gt;.</source>
          <target state="translated">Начиная с Unicode 6.1 и Perl v5.16, Unicode определяет множество сокращений и имен, которые ранее были расширениями Perl, а также некоторые дополнительные, которые Perl ранее не принимал. Список становится слишком длинным, чтобы воспроизвести его здесь, но вы можете получить полный список на веб-сайте Unicode: &lt;a href=&quot;http://www.unicode.org/Public/UNIDATA/NameAliases.txt&quot;&gt;http://www.unicode.org/Public/UNIDATA/NameAliases.txt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ed0dc1ff9e9044e5149578e2503104831b9063" translate="yes" xml:space="preserve">
          <source>Starting in perl v5.30, wildcards are allowed in Unicode property values. See &lt;a href=&quot;perlunicode#Wildcards-in-Property-Values&quot;&gt;&quot;Wildcards in Property Values&quot; in perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b155d3280c20b781dad3393cccf04005ee9e4a0f" translate="yes" xml:space="preserve">
          <source>Starting in the 5.9.x development version of perl you can &lt;code&gt;use re Debug =&amp;gt; 'PARSE'&lt;/code&gt; to see some trace information about the parse process. We will start with some simple patterns and build up to more complex patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818df47ef2f0fcf2a87de97f12babb967ed1fcfb" translate="yes" xml:space="preserve">
          <source>Starting in v5.20, Perl supports UTF-8 locales for &lt;code&gt;LC_CTYPE&lt;/code&gt; , but otherwise Perl only supports single-byte locales, such as the ISO 8859 series. This means that wide character locales, for example for Asian languages, are not well-supported. (If the platform has the capability for Perl to detect such a locale, starting in Perl v5.22, &lt;a href=&quot;warnings#Category-Hierarchy&quot;&gt;Perl will warn, default enabled&lt;/a&gt;, using the &lt;code&gt;locale&lt;/code&gt; warning category, whenever such a locale is switched into.) The UTF-8 locale support is actually a superset of POSIX locales, because it is really full Unicode behavior as if no &lt;code&gt;LC_CTYPE&lt;/code&gt; locale were in effect at all (except for tainting; see &lt;a href=&quot;#SECURITY&quot;&gt;SECURITY&lt;/a&gt;). POSIX locales, even UTF-8 ones, are lacking certain concepts in Unicode, such as the idea that changing the case of a character could expand to be more than one character. Perl in a UTF-8 locale, will give you that expansion. Prior to v5.20, Perl treated a UTF-8 locale on some platforms like an ISO 8859-1 one, with some restrictions, and on other platforms more like the &quot;C&quot; locale. For releases v5.16 and v5.18, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale 'not_characters&lt;/code&gt; could be used as a workaround for this (see &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode and UTF-8&lt;/a&gt;).</source>
          <target state="translated">Начиная с v5.20, Perl поддерживает локали UTF-8 для &lt;code&gt;LC_CTYPE&lt;/code&gt; , но в остальном Perl поддерживает только однобайтовые локали, такие как серия ISO 8859. Это означает, что языковые стандарты для широких символов, например для азиатских языков, не поддерживаются должным образом. (Если платформа имеет возможность для Perl обнаруживать такую ​​локаль, начиная с Perl v5.22, &lt;a href=&quot;warnings#Category-Hierarchy&quot;&gt;Perl будет предупреждать, по умолчанию включен&lt;/a&gt; , используя категорию предупреждения &lt;code&gt;locale&lt;/code&gt; , всякий раз, когда такая локаль переключается на такой языковой стандарт.) Поддержка локали UTF-8 на самом деле является надмножеством локалей POSIX, потому что это действительно полное поведение Unicode, как если бы локаль &lt;code&gt;LC_CTYPE&lt;/code&gt; вообще не действовала (за исключением заражения; см. &lt;a href=&quot;#SECURITY&quot;&gt;БЕЗОПАСНОСТЬ&lt;/a&gt;). В локали POSIX, даже в UTF-8, отсутствуют определенные концепции Unicode, такие как идея о том, что изменение регистра символа может расширяться до более чем одного символа. Perl в локали UTF-8 предоставит вам такое расширение. До версии 5.20 Perl обрабатывал локаль UTF-8 на некоторых платформах, например, ISO 8859-1, с некоторыми ограничениями, а на других платформах больше походило на локаль &quot;C&quot;. Для выпусков v5.16 и v5.18 в качестве обходного пути можно &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale 'not_characters&lt;/code&gt; (см. &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode и UTF-8&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="abf931cf0a232d610a20a5327eae490434a5d7a8" translate="yes" xml:space="preserve">
          <source>Starting in v5.20, Perl supports UTF-8 locales for &lt;code&gt;LC_CTYPE&lt;/code&gt;, but otherwise Perl only supports single-byte locales, such as the ISO 8859 series. This means that wide character locales, for example for Asian languages, are not well-supported. Use of these locales may cause core dumps. If the platform has the capability for Perl to detect such a locale, starting in Perl v5.22, &lt;a href=&quot;warnings#Category-Hierarchy&quot;&gt;Perl will warn, default enabled&lt;/a&gt;, using the &lt;code&gt;locale&lt;/code&gt; warning category, whenever such a locale is switched into. The UTF-8 locale support is actually a superset of POSIX locales, because it is really full Unicode behavior as if no &lt;code&gt;LC_CTYPE&lt;/code&gt; locale were in effect at all (except for tainting; see &lt;a href=&quot;#SECURITY&quot;&gt;&quot;SECURITY&quot;&lt;/a&gt;). POSIX locales, even UTF-8 ones, are lacking certain concepts in Unicode, such as the idea that changing the case of a character could expand to be more than one character. Perl in a UTF-8 locale, will give you that expansion. Prior to v5.20, Perl treated a UTF-8 locale on some platforms like an ISO 8859-1 one, with some restrictions, and on other platforms more like the &quot;C&quot; locale. For releases v5.16 and v5.18, &lt;code&gt;use locale 'not_characters&lt;/code&gt; could be used as a workaround for this (see &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;&quot;Unicode and UTF-8&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0b3fbd50ff716e496a38d1dbfc0634c6a5772b" translate="yes" xml:space="preserve">
          <source>Starting in v5.20, Perl uses full Unicode rules if the locale is UTF-8. Otherwise, there is a deficiency in this scheme, which is that case changes that cross the 255/256 boundary are not well-defined. For example, the lower case of LATIN CAPITAL LETTER SHARP S (U+1E9E) in Unicode rules is U+00DF (on ASCII platforms). But under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (prior to v5.20 or not a UTF-8 locale), the lower case of U+1E9E is itself, because 0xDF may not be LATIN SMALL LETTER SHARP S in the current locale, and Perl has no way of knowing if that character even exists in the locale, much less what code point it is. Perl returns a result that is above 255 (almost always the input character unchanged, for all instances (and there aren't many) where the 255/256 boundary would otherwise be crossed; and starting in v5.22, it raises a &lt;a href=&quot;perldiag#Can't-do-%25s(%22%25s%22)-on-non-UTF-8-locale%3b-resolved-to-%22%25s%22.&quot;&gt;locale&lt;/a&gt; warning.</source>
          <target state="translated">Начиная с версии 5.20, Perl использует полные правила Unicode, если языковой стандарт - UTF-8. В противном случае в этой схеме есть недостаток, заключающийся в том, что изменения случая, пересекающие границу 255/256, не являются четко определенными. Например, строчная латинская прописная буква SHARP S (U + 1E9E) в правилах Unicode - это U + 00DF (на платформах ASCII). Но при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (до версии 5.20 или не является локалью UTF-8), нижний регистр U + 1E9E является самим собой, потому что 0xDF может не быть LATIN SMALL LETTER SHARP S в текущей локали, и Perl не имеет возможности узнать, является ли этот символ даже существует в локали, не говоря уже о том, какой это код. Perl возвращает результат, превышающий 255 (почти всегда входной символ неизменен, для всех экземпляров (а их немного), где граница 255/256 в противном случае была бы пересечена; и начиная с v5.22, он вызывает предупреждение &lt;a href=&quot;perldiag#Can't-do-%25s(%22%25s%22)-on-non-UTF-8-locale%3b-resolved-to-%22%25s%22.&quot;&gt;локали&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf1eee1ccf148c85a77132cb28b023038cea490f" translate="yes" xml:space="preserve">
          <source>Starting in v5.20, Perl uses full Unicode rules if the locale is UTF-8. Otherwise, there is a deficiency in this scheme, which is that case changes that cross the 255/256 boundary are not well-defined. For example, the lower case of LATIN CAPITAL LETTER SHARP S (U+1E9E) in Unicode rules is U+00DF (on ASCII platforms). But under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (prior to v5.20 or not a UTF-8 locale), the lower case of U+1E9E is itself, because 0xDF may not be LATIN SMALL LETTER SHARP S in the current locale, and Perl has no way of knowing if that character even exists in the locale, much less what code point it is. Perl returns a result that is above 255 (almost always the input character unchanged, for all instances (and there aren't many) where the 255/256 boundary would otherwise be crossed; and starting in v5.22, it raises a &lt;a href=&quot;../perldiag#Can't-do-%25s(%22%25s%22)-on-non-UTF-8-locale%3b-resolved-to-%22%25s%22.&quot;&gt;locale&lt;/a&gt; warning.</source>
          <target state="translated">Начиная с версии 5.20, Perl использует полные правила Unicode, если языковой стандарт - UTF-8. В противном случае в этой схеме есть недостаток, заключающийся в том, что изменения случая, пересекающие границу 255/256, не являются четко определенными. Например, строчная латинская прописная буква SHARP S (U + 1E9E) в правилах Unicode - это U + 00DF (на платформах ASCII). Но при &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (до версии 5.20 или не является локалью UTF-8), нижний регистр U + 1E9E является самим собой, потому что 0xDF может не быть LATIN SMALL LETTER SHARP S в текущей локали, и Perl не имеет возможности узнать, является ли этот символ даже существует в локали, не говоря уже о том, какой это код. Perl возвращает результат, превышающий 255 (почти всегда входной символ неизменен, для всех экземпляров (а их немного), где граница 255/256 в противном случае была бы пересечена; и начиная с v5.22, он вызывает предупреждение &lt;a href=&quot;../perldiag#Can't-do-%25s(%22%25s%22)-on-non-UTF-8-locale%3b-resolved-to-%22%25s%22.&quot;&gt;локали&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc33dddc57e009befe8b624c019e0d98b1679536" translate="yes" xml:space="preserve">
          <source>Starting in v5.20, Perl uses full Unicode rules if the locale is UTF-8. Otherwise, there is a deficiency in this scheme, which is that case changes that cross the 255/256 boundary are not well-defined. For example, the lower case of LATIN CAPITAL LETTER SHARP S (U+1E9E) in Unicode rules is U+00DF (on ASCII platforms). But under &lt;code&gt;use locale&lt;/code&gt; (prior to v5.20 or not a UTF-8 locale), the lower case of U+1E9E is itself, because 0xDF may not be LATIN SMALL LETTER SHARP S in the current locale, and Perl has no way of knowing if that character even exists in the locale, much less what code point it is. Perl returns a result that is above 255 (almost always the input character unchanged), for all instances (and there aren't many) where the 255/256 boundary would otherwise be crossed; and starting in v5.22, it raises a &lt;a href=&quot;perldiag#Can%27t-do-%25s%28%22%25s%22%29-on-non-UTF-8-locale%3B-resolved-to-%22%25s%22.&quot;&gt;locale&lt;/a&gt; warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c762f587a88d06d3ee0d5c6c5c66f9e2aa3c2b6" translate="yes" xml:space="preserve">
          <source>Starting in v5.22, Perl will by default warn when switching into a locale that redefines any ASCII printable character (plus &lt;code&gt;\t&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; ) into a different class than expected. This is likely to happen on modern locales only on EBCDIC platforms, where, for example, a CCSID 0037 locale on a CCSID 1047 machine moves &lt;code&gt;&quot;[&quot;&lt;/code&gt; , but it can happen on ASCII platforms with the ISO 646 and other 7-bit locales that are essentially obsolete. Things may still work, depending on what features of Perl are used by the program. For example, in the example from above where &lt;code&gt;&quot;|&quot;&lt;/code&gt; becomes a &lt;code&gt;\w&lt;/code&gt; , and there are no regular expressions where this matters, the program may still work properly. The warning lists all the characters that it can determine could be adversely affected.</source>
          <target state="translated">Начиная с v5.22, Perl по умолчанию будет предупреждать при переключении на локаль, которая переопределяет любой печатный символ ASCII (плюс &lt;code&gt;\t&lt;/code&gt; и &lt;code&gt;\n&lt;/code&gt; ) в другой класс, чем ожидалось. Это, вероятно, произойдет в современных локали только на платформах EBCDIC, где, например, локаль CCSID 0037 на машине CCSID 1047 перемещается &lt;code&gt;&quot;[&quot;&lt;/code&gt; , но это может произойти на платформах ASCII с ISO 646 и другими 7-битными языковыми стандартами, которые по существу устарели. Все может по-прежнему работать, в зависимости от того, какие функции Perl используются программой. Например, в приведенном выше примере, где &lt;code&gt;&quot;|&quot;&lt;/code&gt; становится &lt;code&gt;\w&lt;/code&gt; , и нет регулярных выражений, где это имеет значение, программа может работать правильно. В предупреждении перечислены все символы, которые, по его мнению, могут быть повреждены.</target>
        </trans-unit>
        <trans-unit id="045ba6195cde654f0e61c6b886bb35824c0a5a9a" translate="yes" xml:space="preserve">
          <source>Starting in v5.22, Perl will by default warn when switching into a locale that redefines any ASCII printable character (plus &lt;code&gt;\t&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt;) into a different class than expected. This is likely to happen on modern locales only on EBCDIC platforms, where, for example, a CCSID 0037 locale on a CCSID 1047 machine moves &lt;code&gt;&quot;[&quot;&lt;/code&gt;, but it can happen on ASCII platforms with the ISO 646 and other 7-bit locales that are essentially obsolete. Things may still work, depending on what features of Perl are used by the program. For example, in the example from above where &lt;code&gt;&quot;|&quot;&lt;/code&gt; becomes a &lt;code&gt;\w&lt;/code&gt;, and there are no regular expressions where this matters, the program may still work properly. The warning lists all the characters that it can determine could be adversely affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ce7d231c27d2be8f1b1d8928ca5c39bf4aed51" translate="yes" xml:space="preserve">
          <source>Starting in v5.22, you can use Unicode code points as the end points of regular expression pattern character ranges, and the range will include all Unicode code points that lie between those end points, inclusive.</source>
          <target state="translated">Начиная с версии v5.22,в качестве конечных точек диапазонов символов регулярного выражения можно использовать точки кода Юникода,а диапазон будет включать все точки кода Юникода,лежащие между этими конечными точками,включительно.</target>
        </trans-unit>
        <trans-unit id="6a0d77e9e3a9155e3031928b6e984c64d451ee78" translate="yes" xml:space="preserve">
          <source>Starting in v5.32, you can also use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd5e5803935bbb6537a6c17faa83c7fdd9ffba0" translate="yes" xml:space="preserve">
          <source>Starting in v5.8.6, the encoding name may be &lt;code&gt;:locale&lt;/code&gt; . This means that the encoding is taken from the current locale, and not hard-coded by the pragma. Since a script really can only be encoded in exactly one encoding, this option is dangerous. It makes sense only if the script itself is written in ASCII, and all the possible locales that will be in use when the script is executed are supersets of ASCII. That means that the script itself doesn't get changed, but the I/O handles have the specified encoding added, and the operations like &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; use that encoding.</source>
          <target state="translated">Начиная с v5.8.6, имя кодировки может быть &lt;code&gt;:locale&lt;/code&gt; . Это означает, что кодировка берется из текущей локали, а не жестко запрограммирована директивой pragma. Поскольку сценарий действительно может быть закодирован только в одной кодировке, этот вариант опасен. Это имеет смысл только в том случае, если сам сценарий написан в ASCII, и все возможные локали, которые будут использоваться при выполнении сценария, являются надмножествами ASCII. Это означает, что сам скрипт не изменяется, но к дескрипторам ввода-вывода добавлена ​​указанная кодировка, и такие операции, как &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; , используют эту кодировку.</target>
        </trans-unit>
        <trans-unit id="8cbc9aa4d02eb518e769236727e93c4edd075393" translate="yes" xml:space="preserve">
          <source>Starting in v5.8.6, the encoding name may be &lt;code&gt;:locale&lt;/code&gt;. This means that the encoding is taken from the current locale, and not hard-coded by the pragma. Since a script really can only be encoded in exactly one encoding, this option is dangerous. It makes sense only if the script itself is written in ASCII, and all the possible locales that will be in use when the script is executed are supersets of ASCII. That means that the script itself doesn't get changed, but the I/O handles have the specified encoding added, and the operations like &lt;code&gt;chr&lt;/code&gt; and &lt;code&gt;ord&lt;/code&gt; use that encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8eb72d81f87d6a7a0f9e91198c8aa2adc48dbed" translate="yes" xml:space="preserve">
          <source>Starting in version 5.21.2, perls built with the experimental define &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; add an extra boolean flag for each op, &lt;code&gt;op_moresib&lt;/code&gt; . When not set, this indicates that this is the last op in an &lt;code&gt;OpSIBLING&lt;/code&gt; chain. This frees up the &lt;code&gt;op_sibling&lt;/code&gt; field on the last sibling to point back to the parent op. Under this build, that field is also renamed &lt;code&gt;op_sibparent&lt;/code&gt; to reflect its joint role. The macro &lt;code&gt;OpSIBLING(o)&lt;/code&gt; wraps this special behaviour, and always returns NULL on the last sibling. With this build the &lt;code&gt;op_parent(o)&lt;/code&gt; function can be used to find the parent of any op. Thus for forward compatibility, you should always use the &lt;code&gt;OpSIBLING(o)&lt;/code&gt; macro rather than accessing &lt;code&gt;op_sibling&lt;/code&gt; directly.</source>
          <target state="translated">Начиная с версии 5.21.2, perls, созданный с помощью экспериментального определения &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; , добавляет дополнительный логический флаг для каждой операции &lt;code&gt;op_moresib&lt;/code&gt; . Если не установлен, это означает, что это последняя &lt;code&gt;OpSIBLING&lt;/code&gt; цепочке OpSIBLING . Это освобождает поле &lt;code&gt;op_sibling&lt;/code&gt; на последнем брате, чтобы указать обратно на родительскую операцию. В этой сборке это поле также переименовано в &lt;code&gt;op_sibparent&lt;/code&gt; , чтобы отразить его совместную роль. Макрос &lt;code&gt;OpSIBLING(o)&lt;/code&gt; завершает это специальное поведение и всегда возвращает NULL для последнего родственника. В этой сборке &lt;code&gt;op_parent(o)&lt;/code&gt; можно использовать для поиска родителя любого op. Таким образом, для прямой совместимости вы всегда должны использовать &lt;code&gt;OpSIBLING(o)&lt;/code&gt; макрос вместо &lt;code&gt;op_sibling&lt;/code&gt; доступа к op_sibling .</target>
        </trans-unit>
        <trans-unit id="fee6bf661a5a6cbe9e9f6e7dc3357f58ab23b1f3" translate="yes" xml:space="preserve">
          <source>Starting in version 5.21.2, perls built with the experimental define &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; add an extra boolean flag for each op, &lt;code&gt;op_moresib&lt;/code&gt;. When not set, this indicates that this is the last op in an &lt;code&gt;OpSIBLING&lt;/code&gt; chain. This frees up the &lt;code&gt;op_sibling&lt;/code&gt; field on the last sibling to point back to the parent op. Under this build, that field is also renamed &lt;code&gt;op_sibparent&lt;/code&gt; to reflect its joint role. The macro &lt;code&gt;OpSIBLING(o)&lt;/code&gt; wraps this special behaviour, and always returns NULL on the last sibling. With this build the &lt;code&gt;op_parent(o)&lt;/code&gt; function can be used to find the parent of any op. Thus for forward compatibility, you should always use the &lt;code&gt;OpSIBLING(o)&lt;/code&gt; macro rather than accessing &lt;code&gt;op_sibling&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6641cb9032ef109574e28893d667801fcaa3e2c6" translate="yes" xml:space="preserve">
          <source>Starting with 2.10, the special module name &lt;code&gt;Unicode&lt;/code&gt; refers to the version of the Unicode Character Database bundled with Perl.</source>
          <target state="translated">Начиная с 2.10, специальное имя модуля &lt;code&gt;Unicode&lt;/code&gt; относится к версии базы данных символов Unicode, поставляемой вместе с Perl.</target>
        </trans-unit>
        <trans-unit id="aca846c8be32988d259af2e704c9972784ca9b87" translate="yes" xml:space="preserve">
          <source>Starting with AutoLoader 5.73, you can call the &lt;code&gt;AutoLoader::autoload_sub&lt;/code&gt; function with the fully-qualified name of the function to load from its</source>
          <target state="translated">Начиная с AutoLoader 5.73, вы можете вызывать функцию &lt;code&gt;AutoLoader::autoload_sub&lt;/code&gt; с полным именем функции, загружаемой из ее</target>
        </trans-unit>
        <trans-unit id="fe6dc30d7e458c682ee2ffab73f38deab13b705d" translate="yes" xml:space="preserve">
          <source>Starting with ExtUtils::ParseXS version 3.13_01 (comes with perl 5.16 and better), it is rather easy to share typemap code between multiple CPAN distributions. The general idea is to share it as a module that offers a certain API and have the dependent modules declare that as a built-time requirement and import the typemap into the XS. An example of such a typemap-sharing module on CPAN is &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; . Two steps to getting that module's typemaps available in your code:</source>
          <target state="translated">Начиная с ExtUtils :: ParseXS версии 3.13_01 (поставляется с Perl 5.16 и выше), довольно легко обмениваться кодом карты типов между несколькими дистрибутивами CPAN. Общая идея состоит в том, чтобы поделиться им как модулем, который предлагает определенный API, и чтобы зависимые модули объявляли это как требование встроенного времени и импортируют карту типов в XS. Примером такого модуля совместного использования карт типов в CPAN является &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; . Два шага, чтобы получить доступ к типам этого модуля в вашем коде:</target>
        </trans-unit>
        <trans-unit id="c7a9329439741d22826499b7e8ccc62b257e0036" translate="yes" xml:space="preserve">
          <source>Starting with ExtUtils::ParseXS version 3.13_01 (comes with perl 5.16 and better), it is rather easy to share typemap code between multiple CPAN distributions. The general idea is to share it as a module that offers a certain API and have the dependent modules declare that as a built-time requirement and import the typemap into the XS. An example of such a typemap-sharing module on CPAN is &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt;. Two steps to getting that module's typemaps available in your code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f964cabb5662a6c495bdc0c921d6b311abc6ad4" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.10, &lt;a href=&quot;Time::Piece&quot;&gt;Time::Piece&lt;/a&gt; and &lt;a href=&quot;Time::Seconds&quot;&gt;Time::Seconds&lt;/a&gt; are part of the standard distribution, so you might think that you could do something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9212af4220a7c7e6998749dd4723a25f0d7eab4" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.10, &lt;a href=&quot;time/piece&quot;&gt;Time::Piece&lt;/a&gt; and &lt;a href=&quot;time/seconds&quot;&gt;Time::Seconds&lt;/a&gt; are part of the standard distribution, so you might think that you could do something like this:</source>
          <target state="translated">Начиная с Perl 5.10, &lt;a href=&quot;time/piece&quot;&gt;Time :: Piece&lt;/a&gt; и &lt;a href=&quot;time/seconds&quot;&gt;Time :: Seconds&lt;/a&gt; являются частью стандартного дистрибутива, поэтому вы можете подумать, что можете сделать что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="97eea9254558fb3fd8f17c44c41b369b3648d850" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.10.0, integer and floating-point formats, along with the &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; formats and &lt;code&gt;()&lt;/code&gt; groups, may all be followed by the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; endianness modifiers to respectively enforce big- or little-endian byte-order. These modifiers are especially useful given how &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; , and &lt;code&gt;V&lt;/code&gt; don't cover signed integers, 64-bit integers, or floating-point values.</source>
          <target state="translated">Начиная с Perl 5.10.0, целочисленные форматы и форматы с плавающей запятой, а также форматы &lt;code&gt;p&lt;/code&gt; и &lt;code&gt;P&lt;/code&gt; и группы &lt;code&gt;()&lt;/code&gt; могут сопровождаться модификаторами &lt;code&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&lt;/code&gt; endianness, соответственно, для обеспечения порядка байтов с прямым или обратным порядком байтов. Эти модификаторы особенно полезны, учитывая, что &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; и &lt;code&gt;V&lt;/code&gt; не охватывают целые числа со знаком, 64-битные целые числа или значения с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="91887288c16197195e2b34bfb5cb24e865412909" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.10.0, integer and floating-point formats, along with the &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; formats and &lt;code&gt;()&lt;/code&gt; groups, may all be followed by the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; endianness modifiers to respectively enforce big- or little-endian byte-order. These modifiers are especially useful given how &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt;, and &lt;code&gt;V&lt;/code&gt; don't cover signed integers, 64-bit integers, or floating-point values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee36782903bc57420ba5e155b45524572f22583" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.12, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; can handle dates past 03:14:08 January 19, 2038, when a 32-bit based time would overflow. You still might get a warning on a 32-bit &lt;code&gt;perl&lt;/code&gt; :</source>
          <target state="translated">Начиная с Perl 5.12, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; могут обрабатывать даты после 03:14:08 19 января 2038 г., когда 32-битное время будет переполняться. Вы все равно можете получить предупреждение на 32-битном &lt;code&gt;perl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="06064bcbd3db9848f0c8a7c119116ec7dded2dac" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.12, &lt;code&gt;localtime&lt;/code&gt; and &lt;code&gt;gmtime&lt;/code&gt; can handle dates past 03:14:08 January 19, 2038, when a 32-bit based time would overflow. You still might get a warning on a 32-bit &lt;code&gt;perl&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3547c4def41d12fec193f972e11bcb976215d4c4" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.12, an additional integer parameter will be passed. It will be zero if &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; is called without parameter; &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; is given a filehandle as a parameter, e.g. &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FH)&lt;/a&gt;&lt;/code&gt;; and &lt;code&gt;2&lt;/code&gt; in the very special case that the tied filehandle is &lt;code&gt;ARGV&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; is called with an empty parameter list, e.g. &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Начиная с Perl 5.12, будет передаваться дополнительный целочисленный параметр. Он будет равен нулю, если &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; вызывается без параметра; &lt;code&gt;1&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; задан дескриптор файла в качестве параметра, например &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FH)&lt;/a&gt;&lt;/code&gt; ; и &lt;code&gt;2&lt;/code&gt; в очень частном случае, когда связанный дескриптор файла - это &lt;code&gt;ARGV&lt;/code&gt; , а &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; вызывается с пустым списком параметров, например &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052780286d8ffb3a2e7d500cfc57d223e2ef8ffc" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.12, an additional integer parameter will be passed. It will be zero if &lt;code&gt;eof&lt;/code&gt; is called without parameter; &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;eof&lt;/code&gt; is given a filehandle as a parameter, e.g. &lt;code&gt;eof(FH)&lt;/code&gt;; and &lt;code&gt;2&lt;/code&gt; in the very special case that the tied filehandle is &lt;code&gt;ARGV&lt;/code&gt; and &lt;code&gt;eof&lt;/code&gt; is called with an empty parameter list, e.g. &lt;code&gt;eof()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3385173ff54b55e840ed45e4ab6e0da31d97fba8" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14 a parent will not wait() automatically for any child that has been signalled with &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; to avoid a deadlock in case the child is blocking on I/O and never receives the signal.</source>
          <target state="translated">Начиная с Perl 5.14, родительский элемент не будет автоматически ждать () для любого дочернего элемента, о котором было сообщено с помощью &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; чтобы избежать тупиковой ситуации в случае, если дочерний элемент блокирует ввод-вывод и никогда не получает сигнал.</target>
        </trans-unit>
        <trans-unit id="2f071da8b4fbf9d03d4174f4254c8ac70323e8cb" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14 a parent will not wait() automatically for any child that has been signalled with &lt;code&gt;kill('TERM', ...)&lt;/code&gt; to avoid a deadlock in case the child is blocking on I/O and never receives the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90de3712cf0c49e19f3e9d37735c0e97d4b521ae" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; может принимать скалярный EXPR, который должен содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; считается экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="818e24d28a7aaf2cbc1a6702710734a070d06698" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; может принимать скалярный EXPR, который должен содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; считается экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="72fa5cd516760576150d0418affb48e1abda4a5b" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must contain a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; могут принимать скалярное выражение EXPR, которое должно содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="e2b92aff600824b9c22651f1e75f3d65c35db8ae" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="07bb8994fa6804d1b79f779661eabab22fa4d596" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="10642e156a8402673021a377c62441722a9d8a63" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="5169411fd5bf69d929b67dfac03c2c64e43db230" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can take scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; может принимать скалярный EXPR, который должен содержать ссылку на массив, не получивший разрешения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="7439a015aa95224d62eb3bbca9a133f540e69f0f" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="23e76a783b752b5dc19b6f3c4b3d934de488d5e6" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; могут принимать скалярное выражение EXPR, которое должно содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="47398b3574f050221d9d55302c39ea94e67781b9" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must contain a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; могут принимать скалярное выражение EXPR, которое должно содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="fac0b7eb35a23345be196afebeca8562c183fce3" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="427fc5d0e35cec380d803ece997f22ba459e7c3c" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="a0a12ea19c52c77b676bcf9fb786b8629096b3dc" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="a3217cf42c0331e4a0cfa6eb7dd493042a8c7e44" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can take scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; может принимать скалярный EXPR, который должен содержать ссылку на массив, не получивший разрешения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="d0f153998e2fa782a330b974d3d6a495fc8735ee" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; может принимать скалярное выражение EXPR, которое должно содержать ссылку на массив без благословения. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="e3eb26fa45077fda36157e3c2cd25a74327fbf5e" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; can take a scalar EXPR, which must hold a reference to an unblessed hash or array. The argument will be dereferenced automatically. This aspect of &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; is considered highly experimental. The exact behaviour may change in a future version of Perl.</source>
          <target state="translated">Начиная с Perl 5.14, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; могут принимать скалярное выражение EXPR, которое должно содержать ссылку на неблаженный хэш или массив. Аргумент будет автоматически разыменован. Этот аспект &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; считается в высшей степени экспериментальным. Точное поведение может измениться в будущей версии Perl.</target>
        </trans-unit>
        <trans-unit id="de83fa8042912e9f6ddf571cde7008f435d64f25" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a5d1f49a9fb5c5245141f7dfc7c9150a868c0e" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#keys-HASH&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99313bdb1dd7941c61f4079e6582dd0df5ded04d" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#pop-ARRAY&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05abb4efe9535e153e305c31af2507782337868" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b401da5a4481ae0700b1ffba5e3e1def6bf593b" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#shift-ARRAY&quot;&gt;&lt;code&gt;shift&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ee1f2fd5baa405873ebfdb113cbcd1a850a5c7" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#splice-ARRAY%2COFFSET%2CLENGTH%2CLIST&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04cd81960709d263997df907683fe183f516f9c" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#unshift-ARRAY%2CLIST&quot;&gt;&lt;code&gt;unshift&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dbf87d17e9cfc89d47e4dceb5bb03787d175d3" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.14, an experimental feature allowed &lt;a href=&quot;#values-HASH&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; to take a scalar expression. This experiment has been deemed unsuccessful, and was removed as of Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84114b43a4e1c51016947fa39587027a5c42b337" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.16, you can embed typemaps into your XS code instead of or in addition to typemaps in a separate file. Multiple such embedded typemaps will be processed in order of appearance in the XS code and like local typemap files take precedence over the default typemap, the embedded typemaps may overwrite previous definitions of TYPEMAP, INPUT, and OUTPUT stanzas. The syntax for embedded typemaps is</source>
          <target state="translated">Начиная с версии Perl 5.16,вы можете встраивать карты типов в код XS вместо или в дополнение к картам типов в отдельном файле.Многочисленные такие встроенные карты типов будут обработаны в порядке появления в коде XS,и,как и локальные файлы карты типов имеют приоритет над картой типов по умолчанию,встроенные карты типов могут перезаписывать предыдущие определения TYPEMAP,INPUT и OUTPUT-стенз.Синтаксис для встроенных типовых карт таков.</target>
        </trans-unit>
        <trans-unit id="ead2268f227644c92e6fae21c9b2bbc1c3977d01" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.8, a macro framework has been defined to allow static data to be safely stored in XS modules that will be accessed from a multi-threaded Perl.</source>
          <target state="translated">Начиная с Perl 5.8,был определен макрофреймворк,позволяющий безопасно хранить статические данные в модулях XS,доступ к которым будет осуществляться с многопоточного Perl.</target>
        </trans-unit>
        <trans-unit id="83f897274d9417a81431b1cfc87771e6f6b3c937" translate="yes" xml:space="preserve">
          <source>Starting with Perl 5.8.1 strict is strict about its restrictions: if unknown restrictions are used, the strict pragma will abort with</source>
          <target state="translated">Начиная с версии Perl 5.8.1,строгие ограничения:если используются неизвестные ограничения,то строгая прагма прерывается с помощью</target>
        </trans-unit>
        <trans-unit id="4c86c42abf281eff02c433a98ecba5908f6fea66" translate="yes" xml:space="preserve">
          <source>Starting with Solaris 8, perl5.00503 (or higher) is supplied with the operating system, so you might not even need to build a newer version of perl at all. The Sun-supplied version is installed in /usr/perl5 with</source>
          <target state="translated">Начиная с Solaris 8,perl5.00503 (или выше)поставляется в комплекте с операционной системой,так что,возможно,вам даже не понадобится собирать более новую версию perl вообще.Версия,поставляемая в комплекте с Sun,устанавливается в /usr/perl5 с</target>
        </trans-unit>
        <trans-unit id="070cbbea94d8e9dec2f41e08f125528dd6a6e9b2" translate="yes" xml:space="preserve">
          <source>Starting with Tiger (Mac OS X 10.4), Apple shipped broken locale files for the eu_ES locale (Basque-Spain). In previous releases of Perl, this resulted in failures in the</source>
          <target state="translated">Начиная с Tiger (Mac OS X 10.4),Apple поставляла сломанные файлы локали eu_ES (Basque-Spain).В предыдущих релизах Perl это приводило к сбоям в работе с</target>
        </trans-unit>
        <trans-unit id="0811928afaca739fa817229f5f4a0d0397bc7c2a" translate="yes" xml:space="preserve">
          <source>Starting with release 1.23_03, Scalar-List-Util is &lt;b&gt;always&lt;/b&gt; using the XS implementation, but for backwards compatibility, we still ship the &lt;code&gt;List::Util::XS&lt;/code&gt; module which just loads &lt;code&gt;List::Util&lt;/code&gt; .</source>
          <target state="translated">Начиная с версии 1.23_03, Scalar-List-Util &lt;b&gt;всегда&lt;/b&gt; использует реализацию XS, но для обратной совместимости мы по-прежнему поставляем модуль &lt;code&gt;List::Util::XS&lt;/code&gt; который просто загружает &lt;code&gt;List::Util&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd623545d3ee1fd614905389b9ae3f566a5c0eda" translate="yes" xml:space="preserve">
          <source>Starting with release 1.23_03, Scalar-List-Util is &lt;b&gt;always&lt;/b&gt; using the XS implementation, but for backwards compatibility, we still ship the &lt;code&gt;List::Util::XS&lt;/code&gt; module which just loads &lt;code&gt;List::Util&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f31afb43ed5a01839f8ddc750e5dd35f48c3a6c" translate="yes" xml:space="preserve">
          <source>Starting with this section, we will be discussing Perl's set of</source>
          <target state="translated">Начиная с этого раздела,мы будем обсуждать набор Perl's</target>
        </trans-unit>
        <trans-unit id="351709654314c24c7e4828574de12d19b419fe3b" translate="yes" xml:space="preserve">
          <source>Starting with version 2, the specification document is part of the CPAN-Meta distribution and will be published on CPAN as &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a60279d2b084f61a9ca16d8326eb786bc2e1ba" translate="yes" xml:space="preserve">
          <source>Starting with version 2.x, Berkeley DB has internal support for locking. The companion module to this one, &lt;a href=&quot;https://metacpan.org/pod/BerkeleyDB&quot;&gt;BerkeleyDB&lt;/a&gt;, provides an interface to this locking functionality. If you are serious about locking Berkeley DB databases, I strongly recommend using &lt;a href=&quot;https://metacpan.org/pod/BerkeleyDB&quot;&gt;BerkeleyDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef231992030ec09e2d04d1b4b88e1196c802a84" translate="yes" xml:space="preserve">
          <source>Starting with version 2.x, Berkeley DB has internal support for locking. The companion module to this one, &lt;b&gt;BerkeleyDB&lt;/b&gt;, provides an interface to this locking functionality. If you are serious about locking Berkeley DB databases, I strongly recommend using &lt;b&gt;BerkeleyDB&lt;/b&gt;.</source>
          <target state="translated">Начиная с версии 2.x, Berkeley DB имеет внутреннюю поддержку блокировки. Дополнительный модуль к этому, &lt;b&gt;BerkeleyDB&lt;/b&gt; , предоставляет интерфейс для этой функции блокировки. Если вы серьезно относитесь к блокировке баз данных Berkeley DB, я настоятельно рекомендую использовать &lt;b&gt;BerkeleyDB&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b0ddaaadcc9b4e10884d35d5140782f71785a028" translate="yes" xml:space="preserve">
          <source>Starts a try block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;&quot;Exception Handling&quot; in perlguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6299a2f62ed0797f2e4ca75150d013801fc49f" translate="yes" xml:space="preserve">
          <source>Starts a try block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">Запускает блок попытки. См. Раздел &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Обработка исключений в perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79ce33706ca0540aaf9d8ed291d64bf45fad0cd4" translate="yes" xml:space="preserve">
          <source>Startup</source>
          <target state="translated">Startup</target>
        </trans-unit>
        <trans-unit id="6991439e4716de488447c6e2c2f9b1970b90a8e3" translate="yes" xml:space="preserve">
          <source>Stashes and Globs</source>
          <target state="translated">Тайники и глобусы</target>
        </trans-unit>
        <trans-unit id="d798831840bb11ab5bf25cf6beacc1e88e0ccd5f" translate="yes" xml:space="preserve">
          <source>State Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf91ec4328cf0ba3defd8522962fa33e41a1740" translate="yes" xml:space="preserve">
          <source>State storage for the &lt;code&gt;prove&lt;/code&gt; command.</source>
          <target state="translated">Хранилище состояний для команды &lt;code&gt;prove&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed2cb72d0aaac69d6842c67515cf3bf802a6b33a" translate="yes" xml:space="preserve">
          <source>Statement Modifiers</source>
          <target state="translated">Поправки к отчету</target>
        </trans-unit>
        <trans-unit id="92fe71f129a3152d601e68e5cf094d2e72591e9b" translate="yes" xml:space="preserve">
          <source>Statement unlikely to be reached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddbc09b1ca4e7855762d5787c6c0d7a3595a8af" translate="yes" xml:space="preserve">
          <source>Static Linking of a new Perl Binary</source>
          <target state="translated">Статическая связь нового двоичного Perl.</target>
        </trans-unit>
        <trans-unit id="3c5f15db40f98d51818ecdf0034d37509667528b" translate="yes" xml:space="preserve">
          <source>Static functions might not be visible for the backtrace.</source>
          <target state="translated">Статические функции могут быть не видны для обратной связи.</target>
        </trans-unit>
        <trans-unit id="8f8ab9355e9f77bfc04d09779d25ce6944605b91" translate="yes" xml:space="preserve">
          <source>Statistics about downloads are truncated by size and period simultaneously.</source>
          <target state="translated">Статистика по скачиванию усечена по размеру и периоду одновременно.</target>
        </trans-unit>
        <trans-unit id="5b62492ca830ebc3f7a3384ab3714a073b9f3f35" translate="yes" xml:space="preserve">
          <source>Statistics about downloads are truncated by size and period simultaneously. Setting this to zero or negative disables download statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5610cd01f9a3d6080e798d67334a100aa1573c90" translate="yes" xml:space="preserve">
          <source>Status 1 overrides status 2. If you want unambiguous results, call &lt;b&gt;podchecker&lt;/b&gt; with one single argument only.</source>
          <target state="translated">Статус 1 имеет приоритет над статусом 2. Если вы хотите получить однозначные результаты, вызовите &lt;b&gt;podchecker только&lt;/b&gt; с одним аргументом.</target>
        </trans-unit>
        <trans-unit id="187236d960db5eb4ad8363cf8f2f9b1ddb6ac5e1" translate="yes" xml:space="preserve">
          <source>Stdio class buffering options.</source>
          <target state="translated">Опции буферизации Stdio класса.</target>
        </trans-unit>
        <trans-unit id="60a9d23beb62cbe40cee43c7f38898ee6c1f97c7" translate="yes" xml:space="preserve">
          <source>Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</source>
          <target state="translated">Штеффен Мюллер &amp;lt;smueller@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d59ce5418f2072a961fa75b41a54fbc928b69c82" translate="yes" xml:space="preserve">
          <source>Steffen Mueller &lt;code&gt;&amp;lt;smueller@cpan.org&lt;/code&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c982c59dd847ba297d8467bd252ba58dd872a85c" translate="yes" xml:space="preserve">
          <source>Steffen Mueller, &amp;lt;smueller@cpan.org&amp;gt;</source>
          <target state="translated">Штеффен Мюллер, &amp;lt;smueller@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="67aeabbbe7f975f118f5118824dfb5a83bb31c11" translate="yes" xml:space="preserve">
          <source>Step-by-step: Distributing your module</source>
          <target state="translated">Шаг за шагом:Распространение вашего модуля</target>
        </trans-unit>
        <trans-unit id="1a565c4552b2edcc3b1a58d76fe5018ccb0e6a32" translate="yes" xml:space="preserve">
          <source>Step-by-step: Making the module</source>
          <target state="translated">Шаг за шагом:Создание модуля</target>
        </trans-unit>
        <trans-unit id="481a4d002beceae3935eab8245f4c76879540359" translate="yes" xml:space="preserve">
          <source>Step-by-step: Preparing the ground</source>
          <target state="translated">Шаг за шагом:Подготовка почвы</target>
        </trans-unit>
        <trans-unit id="80427e23cbb5abd94ca5e55445014873b52c64b8" translate="yes" xml:space="preserve">
          <source>Stephen McCamant &amp;lt;smcc@CSUA.Berkeley.EDU&amp;gt;, based on an earlier version by Malcolm Beattie &amp;lt;mbeattie@sable.ox.ac.uk&amp;gt;, with contributions from Gisle Aas, James Duncan, Albert Dvornik, Robin Houston, Dave Mitchell, Hugo van der Sanden, Gurusamy Sarathy, Nick Ing-Simmons, and Rafael Garcia-Suarez.</source>
          <target state="translated">Стивен МакКамант &amp;lt;smcc@CSUA.Berkeley.EDU&amp;gt;, основанный на более ранней версии Малкольма Битти &amp;lt;mbeattie@sable.ox.ac.uk&amp;gt;, при участии Жизл Аас, Джеймса Дункана, Альберта Дворника, Робина Хьюстона, Дэйва Митчелла, Хуго ван дер Санден, Гурусами Сарати, Ник Инг-Симмонс и Рафаэль Гарсиа-Суарес.</target>
        </trans-unit>
        <trans-unit id="6a244b340bceacb4b7643a7f28401322b0f43369" translate="yes" xml:space="preserve">
          <source>Stephen McCamant, &amp;lt;smcc@CSUA.Berkeley.EDU&amp;gt;.</source>
          <target state="translated">Стивен Маккамант, &amp;lt;smcc@CSUA.Berkeley.EDU&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="406bdac466755debe16970475ad1ba98d0b486e3" translate="yes" xml:space="preserve">
          <source>Stepping through code</source>
          <target state="translated">Пошаговый просмотр кода</target>
        </trans-unit>
        <trans-unit id="f13a1be70942b94ceb5c4947f5cad9efec256df0" translate="yes" xml:space="preserve">
          <source>Steps through the program a line at a time, without descending into functions.</source>
          <target state="translated">Проходит через программу по строке за раз,не опускаясь в функции.</target>
        </trans-unit>
        <trans-unit id="67e08e5dee051e0626b0f262d208037e870d3ac2" translate="yes" xml:space="preserve">
          <source>Steps through the program a line at a time.</source>
          <target state="translated">Проходит через программу по очереди.</target>
        </trans-unit>
        <trans-unit id="44dfc13e25f20c2b72056096edf2fa584b23e680" translate="yes" xml:space="preserve">
          <source>Steve Grazzini &amp;lt;steve.grazzini@grantstreet.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18c11d1612cf243a4188b75a5a32a4030b759d2" translate="yes" xml:space="preserve">
          <source>Steve Hay &amp;lt;</source>
          <target state="translated">Стив Хэй &amp;lt;</target>
        </trans-unit>
        <trans-unit id="378237399a39a01265203b3e7167eea75f75c0c4" translate="yes" xml:space="preserve">
          <source>Steve Hay &amp;lt;steve.m.hay@googlemail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fe4c0fd5295a5323e60434a55f5b50b8297659" translate="yes" xml:space="preserve">
          <source>Steve Lembark goes through the details in his YAPC::NA 2009 talk &quot;Perly Linked Lists&quot; ( &lt;a href=&quot;http://www.slideshare.net/lembark/perly-linked-lists&quot;&gt;http://www.slideshare.net/lembark/perly-linked-lists&lt;/a&gt; ), although you can just use his &lt;a href=&quot;LinkedList::Single&quot;&gt;LinkedList::Single&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d16db78589f14f29e83bbd762e7ffb3c9579828" translate="yes" xml:space="preserve">
          <source>Steve Lembark goes through the details in his YAPC::NA 2009 talk &quot;Perly Linked Lists&quot; ( &lt;a href=&quot;http://www.slideshare.net/lembark/perly-linked-lists&quot;&gt;http://www.slideshare.net/lembark/perly-linked-lists&lt;/a&gt; ), although you can just use his &lt;a href=&quot;http://search.cpan.org/perldoc/LinkedList::Single&quot;&gt;LinkedList::Single&lt;/a&gt; module.</source>
          <target state="translated">Стив Лембарк подробно рассматривает детали в своем выступлении на YAPC :: NA 2009 &amp;laquo;Perly Linked Lists&amp;raquo; ( &lt;a href=&quot;http://www.slideshare.net/lembark/perly-linked-lists&quot;&gt;http://www.slideshare.net/lembark/perly-linked-lists&lt;/a&gt; ), хотя вы можете просто использовать его модуль &lt;a href=&quot;http://search.cpan.org/perldoc/LinkedList::Single&quot;&gt;LinkedList :: Single&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09652192134371fdefcd293d5003ff83e32ed6ed" translate="yes" xml:space="preserve">
          <source>Steve Peters &amp;lt;steve@fisharerojo.org&amp;gt;</source>
          <target state="translated">Стив Питерс &amp;lt;steve@fisharerojo.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7d6ea163d8063bfc57b0256f3178b768eac364c1" translate="yes" xml:space="preserve">
          <source>Steve Purkis</source>
          <target state="translated">Стив Пёркис</target>
        </trans-unit>
        <trans-unit id="9efb7766602083380f01f9cadb6f278fbfabf5e5" translate="yes" xml:space="preserve">
          <source>Steve Purkis &amp;lt;spurkis@cpan.org&amp;gt;</source>
          <target state="translated">Стив Пуркис &amp;lt;spurkis@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2200943829d703ee08a178c2eb1eee2c0a806988" translate="yes" xml:space="preserve">
          <source>Steve Purkis.</source>
          <target state="translated">Стив Пёркис.</target>
        </trans-unit>
        <trans-unit id="270c172269bbb0672801106f89223f66575337c6" translate="yes" xml:space="preserve">
          <source>Steven McDougall &amp;lt;swmcd@world.std.com&amp;gt; for his help and patience with re-writing this manpage.</source>
          <target state="translated">Стивену Макдугаллу &amp;lt;swmcd@world.std.com&amp;gt; за его помощь и терпение при переписывании этой справочной страницы.</target>
        </trans-unit>
        <trans-unit id="3a70ee5e8fb61558310f5b5e31b73a3d007c0de0" translate="yes" xml:space="preserve">
          <source>Still another problem is that this approach can lead to two code points meaning the same character. Thus in a Greek locale, both U+03A7 and U+00D7 are GREEK CAPITAL LETTER CHI.</source>
          <target state="translated">Еще одна проблема заключается в том,что такой подход может привести к двум точкам кода,означающим один и тот же символ.Таким образом,в греческой локали и U+03A7,и U+00D7 являются GREEK CAPITAL LETTER CHI.</target>
        </trans-unit>
        <trans-unit id="8328b23c2df12839f29c28c4eca38fd0aaace45d" translate="yes" xml:space="preserve">
          <source>Still another use is to maintain visual space between &lt;code&gt;=item&lt;/code&gt; lines. If you specify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f032a03c23ac64e26ed67dff94c5b968b51897fa" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548ad6711bf4d2c2e72ae86a234fd3904bec68fd" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.05</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42108b0060916a9925408d666ac09829728230ed" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c382741891bd1d6f7e460709510a9d80509ec7fa" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee45fe089bcfb256a94238e7233dca4c3a45655" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0f25affc6234202644d5b637ab1fbe92fe3712" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6880cdcd0506151ea51b1d4e727ce16ab7512631" translate="yes" xml:space="preserve">
          <source>Still broken as of version: 0.373</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3165fead8117026ccedeeae5459ce4da4396860" translate="yes" xml:space="preserve">
          <source>Still broken in version: 0.052</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3eea18c3547245e8ba9bb10ace527c065a868d" translate="yes" xml:space="preserve">
          <source>Still in Settings, in Channel Update, select Beta Channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa5a1bd92d7066216395c95a296195ffe2e0f16" translate="yes" xml:space="preserve">
          <source>Stolen from File::Path::Expand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6682620d81182203397e365b84fecf9cd43d1829" translate="yes" xml:space="preserve">
          <source>Stop logging each disk request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bc7a84f86b7c98bba879166a64bc5b045625fd" translate="yes" xml:space="preserve">
          <source>Stops running tests as &quot;TODO&quot; tests. This method is fatal if called without a preceding &lt;code&gt;todo_start&lt;/code&gt; method call.</source>
          <target state="translated">Прекращает выполнение тестов как тестов TODO. Этот метод является фатальным, если вызывается без предшествующего &lt;code&gt;todo_start&lt;/code&gt; метода todo_start .</target>
        </trans-unit>
        <trans-unit id="45b0f8b6273dfd6e7997a4038c99b48d40e17dae" translate="yes" xml:space="preserve">
          <source>Storable</source>
          <target state="translated">Storable</target>
        </trans-unit>
        <trans-unit id="46f9f6e335231e1456d3ba18bd5a505213eb74c6" translate="yes" xml:space="preserve">
          <source>Storable - persistence for Perl data structures</source>
          <target state="translated">Хранение-стойкость для структур данных Perl</target>
        </trans-unit>
        <trans-unit id="1630856d50b3ec9af87960aa33400ccd3dc094bd" translate="yes" xml:space="preserve">
          <source>Storable has now been changed to write out and read in a file header with information about the size of integers. It's impossible to detect whether an old file being read in was written with 32 or 64 bit integers (they have the same header) so it's impossible to automatically switch to a correct backwards compatibility mode. Hence this Storable defaults to the new, correct behaviour.</source>
          <target state="translated">Теперь Storable изменена на запись и чтение в заголовке файла с информацией о размере целых чисел.Невозможно определить,был ли старый читаемый файл записан с 32 или 64-битными целыми числами (они имеют один и тот же заголовок),поэтому невозможно автоматически переключиться в правильный режим обратной совместимости.Следовательно,по умолчанию Storable устанавливает новое,корректное поведение.</target>
        </trans-unit>
        <trans-unit id="714a2ccbafbac0389af167e01df326cf6b8a78ff" translate="yes" xml:space="preserve">
          <source>Storable magic</source>
          <target state="translated">Хранимое волшебство</target>
        </trans-unit>
        <trans-unit id="dfd98121663ee3170e7a7e6a0d89a8a9dfe033b8" translate="yes" xml:space="preserve">
          <source>Storable now has experimental support for storing regular expressions, but there are significant limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7182df5560db2bb6b5167976e453bb5798e3130f" translate="yes" xml:space="preserve">
          <source>Storable provides you with a &lt;code&gt;dclone&lt;/code&gt; interface which does not create that intermediary scalar but instead freezes the structure in some internal memory space and then immediately thaws it out.</source>
          <target state="translated">Storable предоставляет вам интерфейс &lt;code&gt;dclone&lt;/code&gt; , который не создает этот промежуточный скаляр, а вместо этого замораживает структуру в некотором пространстве внутренней памяти, а затем немедленно размораживает ее.</target>
        </trans-unit>
        <trans-unit id="70fb12ce1748ed7f4a137be836ce41aa365bbd68" translate="yes" xml:space="preserve">
          <source>Storable uses the &quot;exception&quot; paradigm, in that it does not try to workaround failures: if something bad happens, an exception is generated from the caller's perspective (see &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and &lt;code&gt;croak()&lt;/code&gt; ). Use eval {} to trap those exceptions.</source>
          <target state="translated">Storable использует парадигму &amp;laquo;исключения&amp;raquo; в том смысле, что он не пытается обходить сбои: если происходит что-то плохое, с точки зрения вызывающего генерируется исключение (см. &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and &lt;code&gt;croak()&lt;/code&gt; ). Используйте eval {}, чтобы перехватить эти исключения.</target>
        </trans-unit>
        <trans-unit id="efb225f838cb012d7da5a2492afd60f053bbc61a" translate="yes" xml:space="preserve">
          <source>Storable uses the &quot;exception&quot; paradigm, in that it does not try to workaround failures: if something bad happens, an exception is generated from the caller's perspective (see &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and &lt;code&gt;croak()&lt;/code&gt;). Use eval {} to trap those exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531ca0b8b45f41c9f0b1aa246372790831675baa" translate="yes" xml:space="preserve">
          <source>Storable was written by Raphael Manfredi</source>
          <target state="translated">Storable был написан Рафаэлем Манфреди.</target>
        </trans-unit>
        <trans-unit id="2f13ce5cb38e462f6f7f68a313f75016b704439f" translate="yes" xml:space="preserve">
          <source>Storable will throw an exception if a frozen regular expression cannot be thawed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e864254e3dece2f3614748bd8acc66ad85caaa" translate="yes" xml:space="preserve">
          <source>Storable writes a file header which contains the sizes of various C language types for the C compiler that built Storable (when not writing in network order), and will refuse to load files written by a Storable not on the same (or compatible) architecture. This check and a check on machine byteorder is needed because the size of various fields in the file are given by the sizes of the C language types, and so files written on different architectures are incompatible. This is done for increased speed. (When writing in network order, all fields are written out as standard lengths, which allows full interworking, but takes longer to read and write)</source>
          <target state="translated">Storable записывает заголовок файла,который содержит размеры различных типов языка Си для компилятора C,построившего Storable (когда запись производится не в сетевом порядке),и откажется загружать файлы,написанные Storable не на той же (или совместимой)архитектуре.Эта проверка и проверка на машинном байтранжере нужна,так как размер различных полей в файле задается размерами языковых типов Си,и поэтому файлы,написанные на разных архитектурах,несовместимы.Это делается для большей скорости.(При записи в сетевом порядке все поля записываются в виде стандартных длин,что позволяет полностью взаимодействовать,но требует больше времени на чтение и запись).</target>
        </trans-unit>
        <trans-unit id="fcaa72ed14ae844e5cba322adeff102b58e7d72e" translate="yes" xml:space="preserve">
          <source>Store (method 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4150d3a5cc43231c993765dececd1a150bb52a3d" translate="yes" xml:space="preserve">
          <source>Store Memoized data in Storable database</source>
          <target state="translated">Хранение запоминаемых данных в базе данных Storable</target>
        </trans-unit>
        <trans-unit id="92a651d3dc16aed75ba857e2f774b7e083ba7965" translate="yes" xml:space="preserve">
          <source>Store and re-use state information about distributions between CPAN.pm sessions?</source>
          <target state="translated">Хранить и повторно использовать информацию о состоянии распределения между сессиями CPAN.pm?</target>
        </trans-unit>
        <trans-unit id="2c71530924851d1b8827aef4994b16eb515c4e61" translate="yes" xml:space="preserve">
          <source>Store data</source>
          <target state="translated">Дата хранения</target>
        </trans-unit>
        <trans-unit id="b25c722ad4f1fce5bbbe8fc35b0030d7d69ef919" translate="yes" xml:space="preserve">
          <source>Store datum</source>
          <target state="translated">Хранить данные</target>
        </trans-unit>
        <trans-unit id="8f37eea7a30e3775bbbbb580f43dfdd3bec41576" translate="yes" xml:space="preserve">
          <source>Store the results of a test.</source>
          <target state="translated">Хранить результаты теста.</target>
        </trans-unit>
        <trans-unit id="389cd56c2ab90c83d09e93be1e21e43d82460448" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;$value&lt;/code&gt; in the gzip OS header field. A number between 0 and 255 is valid.</source>
          <target state="translated">Сохраняет &lt;code&gt;$value&lt;/code&gt; в поле заголовка ОС gzip. Допустимое число от 0 до 255.</target>
        </trans-unit>
        <trans-unit id="b39d714bdc1e95f53f0e2222e4e3c3755001f302" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;val&lt;/code&gt; in a hash. The hash key is specified as &lt;code&gt;key&lt;/code&gt; . The &lt;code&gt;hash&lt;/code&gt; parameter is the precomputed hash value; if it is zero then Perl will compute it. The return value is the new hash entry so created. It will be NULL if the operation failed or if the value did not need to be actually stored within the hash (as in the case of tied hashes). Otherwise the contents of the return value can be accessed using the &lt;code&gt;He?&lt;/code&gt; macros described here. Note that the caller is responsible for suitably incrementing the reference count of &lt;code&gt;val&lt;/code&gt; before the call, and decrementing it if the function returned NULL. Effectively a successful hv_store_ent takes ownership of one reference to &lt;code&gt;val&lt;/code&gt; . This is usually what you want; a newly created SV has a reference count of one, so if all your code does is create SVs then store them in a hash, hv_store will own the only reference to the new SV, and your code doesn't need to do anything further to tidy up. Note that hv_store_ent only reads the &lt;code&gt;key&lt;/code&gt; ; unlike &lt;code&gt;val&lt;/code&gt; it does not take ownership of it, so maintaining the correct reference count on &lt;code&gt;key&lt;/code&gt; is entirely the caller's responsibility. hv_store is not implemented as a call to hv_store_ent, and does not create a temporary SV for the key, so if your key data is not already in SV form then use hv_store in preference to hv_store_ent.</source>
          <target state="translated">Сохраняет &lt;code&gt;val&lt;/code&gt; в хэше. Хэш-ключ указан как &lt;code&gt;key&lt;/code&gt; . Параметр &lt;code&gt;hash&lt;/code&gt; - это предварительно вычисленное значение хеш-функции; если он равен нулю, Perl вычислит его. Возвращаемое значение - это созданная таким образом новая запись хэша. Он будет NULL, если операция завершилась неудачно или значение не нужно было фактически хранить в хэше (как в случае связанных хешей). В противном случае к содержимому возвращаемого значения можно будет получить доступ с помощью &lt;code&gt;He?&lt;/code&gt; макросы описаны здесь. Обратите внимание, что вызывающая сторона отвечает за соответствующее увеличение счетчика ссылок &lt;code&gt;val&lt;/code&gt; перед вызовом и уменьшение его, если функция вернула NULL. Фактически успешный hv_store_ent становится владельцем одной ссылки на &lt;code&gt;val&lt;/code&gt; . Обычно это то, что вы хотите; вновь созданный SV имеет счетчик ссылок, равный единице, поэтому, если весь ваш код создает SV, а затем сохраняет их в хэше, hv_store будет владеть единственной ссылкой на новый SV, и вашему коду не нужно делать что-либо еще для прибраться. Обратите внимание, что hv_store_ent только читает &lt;code&gt;key&lt;/code&gt; ; в отличие от &lt;code&gt;val&lt;/code&gt; , он не получает права собственности на него, поэтому поддержание правильного счетчика ссылок на &lt;code&gt;key&lt;/code&gt; полностью является обязанностью вызывающего объекта. hv_store не реализован как вызов hv_store_ent и не создает временный SV для ключа, поэтому, если ваши данные ключа еще не находятся в форме SV, используйте hv_store вместо hv_store_ent.</target>
        </trans-unit>
        <trans-unit id="1d4914da783cf76bac012d3e2b02900b8208b54e" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;val&lt;/code&gt; in a hash. The hash key is specified as &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;hash&lt;/code&gt; parameter is the precomputed hash value; if it is zero then Perl will compute it. The return value is the new hash entry so created. It will be &lt;code&gt;NULL&lt;/code&gt; if the operation failed or if the value did not need to be actually stored within the hash (as in the case of tied hashes). Otherwise the contents of the return value can be accessed using the &lt;code&gt;He?&lt;/code&gt; macros described here. Note that the caller is responsible for suitably incrementing the reference count of &lt;code&gt;val&lt;/code&gt; before the call, and decrementing it if the function returned NULL. Effectively a successful &lt;code&gt;hv_store_ent&lt;/code&gt; takes ownership of one reference to &lt;code&gt;val&lt;/code&gt;. This is usually what you want; a newly created SV has a reference count of one, so if all your code does is create SVs then store them in a hash, &lt;code&gt;hv_store&lt;/code&gt; will own the only reference to the new SV, and your code doesn't need to do anything further to tidy up. Note that &lt;code&gt;hv_store_ent&lt;/code&gt; only reads the &lt;code&gt;key&lt;/code&gt;; unlike &lt;code&gt;val&lt;/code&gt; it does not take ownership of it, so maintaining the correct reference count on &lt;code&gt;key&lt;/code&gt; is entirely the caller's responsibility. The reason it does not take ownership, is that &lt;code&gt;key&lt;/code&gt; is not used after this function returns, and so can be freed immediately. &lt;code&gt;hv_store&lt;/code&gt; is not implemented as a call to &lt;code&gt;hv_store_ent&lt;/code&gt;, and does not create a temporary SV for the key, so if your key data is not already in SV form then use &lt;code&gt;hv_store&lt;/code&gt; in preference to &lt;code&gt;hv_store_ent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e853791e7f610503cb4ac62aa2d38d07104bcbf" translate="yes" xml:space="preserve">
          <source>Stores a value, associated with a key, in the cop hints hash</source>
          <target state="translated">Хранит значение,связанное с ключом,в хэше подсказок копа.</target>
        </trans-unit>
        <trans-unit id="e4608cb007876dc9a320a4e730182bf778f713b9" translate="yes" xml:space="preserve">
          <source>Stores a value, associated with a key, in the cop hints hash &lt;code&gt;cophh&lt;/code&gt;, and returns the modified hash. The returned hash pointer is in general not the same as the hash pointer that was passed in. The input hash is consumed by the function, and the pointer to it must not be subsequently used. Use &lt;a href=&quot;#cophh_copy&quot;&gt;&quot;cophh_copy&quot;&lt;/a&gt; if you need both hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0142d462eb02b96cf9082ac295203e85636940" translate="yes" xml:space="preserve">
          <source>Stores all unambiguous truncations of each element of LIST as keys in the associative array referenced by &lt;code&gt;$hashref&lt;/code&gt; . The values are the original list elements.</source>
          <target state="translated">Сохраняет все однозначные усечения каждого элемента LIST в качестве ключей в ассоциативном массиве, на который ссылается &lt;code&gt;$hashref&lt;/code&gt; . Значения являются исходными элементами списка.</target>
        </trans-unit>
        <trans-unit id="c2253242048c2f74667f3a23355d9505c38b27fe" translate="yes" xml:space="preserve">
          <source>Stores all unambiguous truncations of each element of LIST as keys in the associative array referenced by &lt;code&gt;$hashref&lt;/code&gt;. The values are the original list elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236561c990b7cd479ccb52f08cd5fac9306b818" translate="yes" xml:space="preserve">
          <source>Stores an SV in a hash. The hash key is specified as &lt;code&gt;key&lt;/code&gt; and the absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;hash&lt;/code&gt; parameter is the precomputed hash value; if it is zero then Perl will compute it.</source>
          <target state="translated">Хранит SV в хэше. Хэш-ключ указан как &lt;code&gt;key&lt;/code&gt; а абсолютное значение &lt;code&gt;klen&lt;/code&gt; - это длина ключа. Если &lt;code&gt;klen&lt;/code&gt; отрицательный, предполагается, что ключ находится в кодировке UTF-8 Unicode. Параметр &lt;code&gt;hash&lt;/code&gt; - это предварительно вычисленное значение хеш-функции; если он равен нулю, Perl вычислит его.</target>
        </trans-unit>
        <trans-unit id="d6c29a0065e8b044a53af0ddb9dc3214fa041cf5" translate="yes" xml:space="preserve">
          <source>Stores an SV in an array. The array index is specified as &lt;code&gt;key&lt;/code&gt; . The return value will be NULL if the operation failed or if the value did not need to be actually stored within the array (as in the case of tied arrays). Otherwise, it can be dereferenced to get the &lt;code&gt;SV*&lt;/code&gt; that was stored there (= &lt;code&gt;val&lt;/code&gt; )).</source>
          <target state="translated">Сохраняет SV в массиве. Индекс массива указан как &lt;code&gt;key&lt;/code&gt; . Возвращаемое значение будет NULL, если операция завершилась неудачно или значение не нужно было фактически хранить в массиве (как в случае связанных массивов). В противном случае его можно разыменовать, чтобы получить сохраненный там &lt;code&gt;SV*&lt;/code&gt; (= &lt;code&gt;val&lt;/code&gt; )).</target>
        </trans-unit>
        <trans-unit id="76dd68cc1b2cbd70a2c8fe63742bb4f5c0c8d0f4" translate="yes" xml:space="preserve">
          <source>Stores an SV in an array. The array index is specified as &lt;code&gt;key&lt;/code&gt;. The return value will be &lt;code&gt;NULL&lt;/code&gt; if the operation failed or if the value did not need to be actually stored within the array (as in the case of tied arrays). Otherwise, it can be dereferenced to get the &lt;code&gt;SV*&lt;/code&gt; that was stored there (= &lt;code&gt;val&lt;/code&gt;)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7401a972574f8c1665c02fe0802590c81677bf55" translate="yes" xml:space="preserve">
          <source>Stores an alias to a variable in a hash instead of copying the value.</source>
          <target state="translated">Хранит псевдоним в переменной в хэше вместо копирования значения.</target>
        </trans-unit>
        <trans-unit id="9f6711f9c55cd1025cf538a50470266deb723a43" translate="yes" xml:space="preserve">
          <source>Stores results for later output, all together.</source>
          <target state="translated">Сохраняет результаты для последующего вывода,все вместе.</target>
        </trans-unit>
        <trans-unit id="ced5e829ffc1318c3116b905b84107c1f3b72848" translate="yes" xml:space="preserve">
          <source>Stores the contents of &lt;code&gt;$comment&lt;/code&gt; in the COMMENT field in the gzip header. By default, no comment field is written to the gzip file.</source>
          <target state="translated">Сохраняет содержимое &lt;code&gt;$comment&lt;/code&gt; в поле COMMENT в заголовке gzip. По умолчанию в файл gzip не записывается поле для комментариев.</target>
        </trans-unit>
        <trans-unit id="26843a54a3aa3332ec1baa3fb76f8c537a96c327" translate="yes" xml:space="preserve">
          <source>Stores the contents of &lt;code&gt;$comment&lt;/code&gt; in the Central File Header of the zip file.</source>
          <target state="translated">Сохраняет содержимое &lt;code&gt;$comment&lt;/code&gt; в центральном заголовке файла zip-архива.</target>
        </trans-unit>
        <trans-unit id="f6d27852fc3f996b193528d04367b82db064d418" translate="yes" xml:space="preserve">
          <source>Stores the contents of &lt;code&gt;$comment&lt;/code&gt; in the End of Central Directory record of the zip file.</source>
          <target state="translated">Сохраняет содержимое &lt;code&gt;$comment&lt;/code&gt; в записи &amp;laquo;Конец центрального каталога&amp;raquo; zip-файла.</target>
        </trans-unit>
        <trans-unit id="24042b8640feee28c4f2a0aafea788776423cdd1" translate="yes" xml:space="preserve">
          <source>Stores the contents of &lt;code&gt;$string&lt;/code&gt; in the gzip NAME header field. If &lt;code&gt;Name&lt;/code&gt; is not specified, no gzip NAME field will be created.</source>
          <target state="translated">Сохраняет содержимое &lt;code&gt;$string&lt;/code&gt; в поле заголовка gzip NAME. Если &lt;code&gt;Name&lt;/code&gt; не указано, поле ИМЯ gzip не будет создано.</target>
        </trans-unit>
        <trans-unit id="1023c335a52babfe2f8c4a04c4f2766471fa8387" translate="yes" xml:space="preserve">
          <source>Stores the contents of &lt;code&gt;$string&lt;/code&gt; in the zip filename header field.</source>
          <target state="translated">Сохраняет содержимое &lt;code&gt;$string&lt;/code&gt; в поле заголовка файла zip-архива.</target>
        </trans-unit>
        <trans-unit id="51541d8a3d93b2d48a376cb2252ed37ed72421ab" translate="yes" xml:space="preserve">
          <source>Stores the key/value pair in the database.</source>
          <target state="translated">Хранит пару ключ/значение в базе данных.</target>
        </trans-unit>
        <trans-unit id="ab093d23324af52293488a603b3cc3854b181a9e" translate="yes" xml:space="preserve">
          <source>Stores the pad name (which may be null) at the given index, freeing any existing pad name in that slot.</source>
          <target state="translated">Хранит имя колодки (которое может быть нулевым)в данном индексе,освобождая любое существующее имя колодки в этом слоте.</target>
        </trans-unit>
        <trans-unit id="9d70a29a0f92ba96f998b27b0c51d6b21ce2123e" translate="yes" xml:space="preserve">
          <source>Stores the string &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; stringifies to. The Perl engine for example stores &lt;code&gt;(?^:eek)&lt;/code&gt; in the case of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/eek/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Сохраняет строку &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; преобразуется в. Например, движок Perl сохраняет &lt;code&gt;(?^:eek)&lt;/code&gt; в случае &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/eek/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bba419efdc2f7f861e8ccd4110f43bd3fa7e32d3" translate="yes" xml:space="preserve">
          <source>Stores the string &lt;code&gt;qr//&lt;/code&gt; stringifies to. The Perl engine for example stores &lt;code&gt;(?^:eek)&lt;/code&gt; in the case of &lt;code&gt;qr/eek/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30082107d90ca21e79e8350f2001678a7dc4b25b" translate="yes" xml:space="preserve">
          <source>Storing data canonically that contains large hashes can be significantly slower than storing the same data normally, as temporary arrays to hold the keys for each hash have to be allocated, populated, sorted and freed. Some tests have shown a halving of the speed of storing -- the exact penalty will depend on the complexity of your data. There is no slowdown on retrieval.</source>
          <target state="translated">Хранение данных канонически,содержащих большие хэши,может быть значительно медленнее,чем хранение тех же данных обычно,так как временные массивы для хранения ключей для каждого хэша должны быть распределены,заполнены,отсортированы и освобождены.Некоторые тесты показали снижение скорости хранения вдвое-точное наказание будет зависеть от сложности ваших данных.Замедления при извлечении нет.</target>
        </trans-unit>
        <trans-unit id="2ccce2de5e8ad98636ec0480f8c1e95cb4123766" translate="yes" xml:space="preserve">
          <source>Storing numbers</source>
          <target state="translated">Хранение номеров</target>
        </trans-unit>
        <trans-unit id="408286a7232f91f660936da7835bac0e8863fd20" translate="yes" xml:space="preserve">
          <source>Storing options values in a hash</source>
          <target state="translated">Хранение значений опционов в хэше</target>
        </trans-unit>
        <trans-unit id="5ca11c09231ed950fa4ac2095c30a18383eebf81" translate="yes" xml:space="preserve">
          <source>Storing pre-compiled regexps in an array &lt;code&gt;@compiled&lt;/code&gt; allows us to simply loop through the regexps without any recompilation, thus gaining flexibility without sacrificing speed.</source>
          <target state="translated">Сохранение предварительно скомпилированных регулярных выражений в массиве &lt;code&gt;@compiled&lt;/code&gt; позволяет нам просто перебирать регулярные выражения без какой-либо перекомпиляции, что обеспечивает гибкость без ущерба для скорости.</target>
        </trans-unit>
        <trans-unit id="3e08b2cdc880eca3b63a251507ea23ebf665def8" translate="yes" xml:space="preserve">
          <source>Straightaway we can see that the number of times each line has been called is identical to the &lt;code&gt;Devel::SmallProf&lt;/code&gt; output, and the sequence is only very slightly different based on the ordering of the amount of time each line took to execute, &lt;code&gt;if ( $debug ) { &lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $message = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; , for example. The differences in the actual times recorded might be in the algorithm used internally, or it could be due to system resource limitations or contention.</source>
          <target state="translated">Сразу видно, что количество &lt;code&gt;Devel::SmallProf&lt;/code&gt; каждой строки идентично выводу Devel :: SmallProf , а последовательность лишь очень немного отличается в зависимости от порядка количества времени, которое потребовалось для выполнения каждой строки, &lt;code&gt;if ( $debug ) { &lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $message = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; , например. Различия в фактическом записанном времени могут быть связаны с внутренним алгоритмом, или это может быть связано с ограничениями ресурсов системы или конфликтом.</target>
        </trans-unit>
        <trans-unit id="b0bd17b455e668c15c8b3e94cf9e6f3076ea19b7" translate="yes" xml:space="preserve">
          <source>Straightaway we can see that the number of times each line has been called is identical to the &lt;code&gt;Devel::SmallProf&lt;/code&gt; output, and the sequence is only very slightly different based on the ordering of the amount of time each line took to execute, &lt;code&gt;if ( $debug ) { &lt;/code&gt; and &lt;code&gt;my $message = shift;&lt;/code&gt;, for example. The differences in the actual times recorded might be in the algorithm used internally, or it could be due to system resource limitations or contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5060e04f34c62382f4c8552c1d1cf9f000d47b" translate="yes" xml:space="preserve">
          <source>Strategies for Storing Callback Context Information</source>
          <target state="translated">Стратегии хранения обратного вызова Контекстная информация</target>
        </trans-unit>
        <trans-unit id="85d8ba9bfe62936890930b5c6a10433e149d003f" translate="yes" xml:space="preserve">
          <source>Stratus OpenVOS (17.0 or later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813265ea56803a78f3b7159d5fee7e20c7133600" translate="yes" xml:space="preserve">
          <source>Stratus Technologies on the web at &lt;a href=&quot;http://www.stratus.com&quot;&gt;http://www.stratus.com&lt;/a&gt;</source>
          <target state="translated">Stratus Technologies в Интернете по адресу &lt;a href=&quot;http://www.stratus.com&quot;&gt;http://www.stratus.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e27222dd34cc6a5684f257f4f56510f3e78b139" translate="yes" xml:space="preserve">
          <source>Stratus VOS / OpenVOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e8d1a4aa1f448e22fd91f660943bf3fb47ccc9" translate="yes" xml:space="preserve">
          <source>Stratus VOS 15.1, &lt;a href=&quot;http://stratadoc.stratus.com/vos/15.1.1/r502-01/wwhelp/wwhimpl/js/html/wwhelp.htm?context=r502-01&amp;amp;file=ch5r502-01bi.html&quot;&gt;http://stratadoc.stratus.com/vos/15.1.1/r502-01/wwhelp/wwhimpl/js/html/wwhelp.htm?context=r502-01&amp;amp;file=ch5r502-01bi.html&lt;/a&gt;</source>
          <target state="translated">Stratus VOS 15.1, &lt;a href=&quot;http://stratadoc.stratus.com/vos/15.1.1/r502-01/wwhelp/wwhimpl/js/html/wwhelp.htm?context=r502-01&amp;amp;file=ch5r502-01bi.html&quot;&gt;http://stratadoc.stratus.com/vos/15.1.1/r502-01/wwhelp/wwhimpl/js/html/wwhelp.htm?context=r502-01&amp;amp;file=ch5r502-01bi.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6dac5050cc8d5226a232897b98c67a79066b8e3a" translate="yes" xml:space="preserve">
          <source>Stream TAP from a Perl executable</source>
          <target state="translated">Поток TAP из исполняемого файла на Perl</target>
        </trans-unit>
        <trans-unit id="411adcb2712346800a739adfeb9ade95333b1abf" translate="yes" xml:space="preserve">
          <source>Stream TAP from a text file.</source>
          <target state="translated">Поток TAP из текстового файла.</target>
        </trans-unit>
        <trans-unit id="5517c94f54c087e37e9e39887df00a0c39d682fc" translate="yes" xml:space="preserve">
          <source>Stream TAP from an IO::Handle or a GLOB.</source>
          <target state="translated">Поток TAP от IO::Handle или GLOB.</target>
        </trans-unit>
        <trans-unit id="aa321b146ad904dc93d6b1334004656dc82f28d4" translate="yes" xml:space="preserve">
          <source>Stream format with carriage-return terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf344468bbe5af0df1f27ec4b813e688b7db58d7" translate="yes" xml:space="preserve">
          <source>Stream format with line-feed terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044591cd59e9b7c9396655ff7bb64423112f9b95" translate="yes" xml:space="preserve">
          <source>Stream output from an executable TAP source</source>
          <target state="translated">Потоковый вывод от исполняемого источника TAP</target>
        </trans-unit>
        <trans-unit id="137d2933966619b13837102be962efe1a1067d69" translate="yes" xml:space="preserve">
          <source>Stream output from raw TAP in a scalar/array ref.</source>
          <target state="translated">Поток выходного сигнала от необработанного TAP в скаляре/массиве Ref.</target>
        </trans-unit>
        <trans-unit id="1e8325521df6e6903ede77955f9bf1a333363aed" translate="yes" xml:space="preserve">
          <source>Streaming</source>
          <target state="translated">Streaming</target>
        </trans-unit>
        <trans-unit id="79d9a52c246461dc0594d29507cd94db89e5088f" translate="yes" xml:space="preserve">
          <source>Stricter rules help to find typos and other errors. Perhaps you didn't even intend a range here, if the &lt;code&gt;&quot;-&quot;&lt;/code&gt; was meant to be some other character, or should have been escaped (like &lt;code&gt;&quot;\-&quot;&lt;/code&gt; ). If you did intend a range, the one that was used is not portable between ASCII and EBCDIC platforms, and doesn't have an obvious meaning to a casual reader.</source>
          <target state="translated">Более строгие правила помогают находить опечатки и другие ошибки. Возможно, вы даже не предполагали здесь диапазон, если &lt;code&gt;&quot;-&quot;&lt;/code&gt; должен был быть каким-то другим символом или должен был быть экранирован (например, &lt;code&gt;&quot;\-&quot;&lt;/code&gt; ). Если вы намеревались использовать диапазон, то тот, который использовался, не переносится между платформами ASCII и EBCDIC и не имеет очевидного значения для обычного читателя.</target>
        </trans-unit>
        <trans-unit id="5396990d692459cc4babef519081fd255b847e8f" translate="yes" xml:space="preserve">
          <source>Stricter rules help to find typos and other errors. Perhaps you didn't even intend a range here, if the &lt;code&gt;&quot;-&quot;&lt;/code&gt; was meant to be some other character, or should have been escaped (like &lt;code&gt;&quot;\-&quot;&lt;/code&gt;). If you did intend a range, the one that was used is not portable between ASCII and EBCDIC platforms, and doesn't have an obvious meaning to a casual reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eda0deef3d3835356e2633ac9dde47a16b13b5d" translate="yes" xml:space="preserve">
          <source>Stricter rules help to find typos and other errors. You included a range, and at least one of the end points is a decimal digit. Under the stricter rules, when this happens, both end points should be digits in the same group of 10 consecutive digits.</source>
          <target state="translated">Более строгие правила помогают находить опечатки и другие ошибки.Вы включили диапазон,и хотя бы одна из конечных точек является десятичной цифрой.По более строгим правилам,когда это происходит,обе конечные точки должны быть цифрами в одной группе из 10 последовательных цифр.</target>
        </trans-unit>
        <trans-unit id="8871c27b11e121bdab37c41ce307e123e5948970" translate="yes" xml:space="preserve">
          <source>Strictly speaking, MIME header encoding documented in RFC 2047 is more of encapsulation than encoding. However, their support in modern world is imperative so they are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0650e0c020aef4abbfbd4bda604f404ed598e991" translate="yes" xml:space="preserve">
          <source>Strictly speaking, a program that munches up another program and spits out yet another file containing the program in a &amp;ldquo;more executable&amp;rdquo; form, typically containing native machine instructions. The</source>
          <target state="translated">Строго говоря, программа, которая поглощает другую программу и выдает еще один файл, содержащий программу в &amp;laquo;более исполняемой&amp;raquo; форме, обычно содержащий машинные инструкции. В</target>
        </trans-unit>
        <trans-unit id="19287d999efabb7aed57bbe8e78bb9475aab4690" translate="yes" xml:space="preserve">
          <source>Strictly speaking, a program that reads a second program and does what the second program says directly without turning the program into a different form first, which is what &lt;b&gt;compilers&lt;/b&gt; do. Perl is not an interpreter by this definition, because it contains a kind of compiler that takes a program and turns it into a more executable form (&lt;b&gt;syntax trees&lt;/b&gt;) within the</source>
          <target state="translated">Строго говоря, программа, которая читает вторую программу и делает то, что вторая программа говорит напрямую, без преобразования сначала программы в другую форму, что и делают &lt;b&gt;компиляторы&lt;/b&gt; . Согласно этому определению Perl не является интерпретатором, потому что он содержит своего рода компилятор, который принимает программу и превращает ее в более исполняемую форму ( &lt;b&gt;синтаксические деревья&lt;/b&gt; ) в пределах</target>
        </trans-unit>
        <trans-unit id="a6fde2b9f7e959d871c8af08462a6492339f7057" translate="yes" xml:space="preserve">
          <source>Strictly speaking, nothing. Stylistically speaking, it's not a good way to write maintainable code. Perl has several operators for running external commands. Backticks are one; they collect the output from the command for use in your program. The &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; function is another; it doesn't do this.</source>
          <target state="translated">Собственно говоря, ничего. С точки зрения стилистики, это плохой способ писать поддерживаемый код. В Perl есть несколько операторов для запуска внешних команд. Обратные кавычки - одно; они собирают вывод команды для использования в вашей программе. &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; функция другой; он этого не делает.</target>
        </trans-unit>
        <trans-unit id="3c8ebada708fb113d97be17e44dc95013a97d6cf" translate="yes" xml:space="preserve">
          <source>Strictly speaking, nothing. Stylistically speaking, it's not a good way to write maintainable code. Perl has several operators for running external commands. Backticks are one; they collect the output from the command for use in your program. The &lt;code&gt;system&lt;/code&gt; function is another; it doesn't do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ea50d3a212d751dc75823785ce8d3fc481176b" translate="yes" xml:space="preserve">
          <source>Strictly speaking, the year should be specified in a form consistent with &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;, i.e. the offset from 1900. In order to make the interpretation of the year easier for humans, however, who are more accustomed to seeing years as two-digit or four-digit values, the following conventions are followed:</source>
          <target state="translated">Строго говоря, год следует указывать в форме, соответствующей &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; , т. Е. Смещению от 1900 года. Однако, чтобы облегчить интерпретацию года для людей, которые более привыкли рассматривать годы как двузначные или четырехзначные значения, соблюдаются следующие соглашения:</target>
        </trans-unit>
        <trans-unit id="23a6b2fb53b29ab8753d41951749465184e362aa" translate="yes" xml:space="preserve">
          <source>Strictly speaking, the year should be specified in a form consistent with &lt;code&gt;localtime()&lt;/code&gt;, i.e. the offset from 1900. In order to make the interpretation of the year easier for humans, however, who are more accustomed to seeing years as two-digit or four-digit values, the following conventions are followed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4b8f90e8599772141d5d74184d3678eb652f81" translate="yes" xml:space="preserve">
          <source>Strictly, the shell&amp;rsquo;s &lt;code&gt;*&lt;/code&gt; character, which will match a &amp;ldquo;glob&amp;rdquo; of characters when you&amp;rsquo;re trying to generate a list of filenames. Loosely, the act of using globs and similar symbols to do pattern matching. See also &lt;b&gt;fileglob&lt;/b&gt; and &lt;b&gt;typeglob&lt;/b&gt;.</source>
          <target state="translated">Строго говоря, символ оболочки &lt;code&gt;*&lt;/code&gt; , который будет соответствовать &amp;laquo;группе&amp;raquo; символов, когда вы пытаетесь сгенерировать список имён файлов. Грубо говоря, использование глобусов и подобных символов для сопоставления с образцом. См. Также &lt;b&gt;fileglob&lt;/b&gt; и &lt;b&gt;typeglob&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="158127f06e6da3362607fa7cbbba756efc7019b1" translate="yes" xml:space="preserve">
          <source>Strictness and warnings</source>
          <target state="translated">Строгость и предупреждения</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="516c0f4e3c92a494342e3cb25a961d2360643bc2" translate="yes" xml:space="preserve">
          <source>String &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;LC_NUMERIC&lt;/code&gt;</source>
          <target state="translated">String &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;LC_NUMERIC&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13d19fb185a642a2881088ab8e929269f84edb68" translate="yes" xml:space="preserve">
          <source>String &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;LC_NUMERIC&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322644ec18f089375fd934ccac0ee29b7bf9401a" translate="yes" xml:space="preserve">
          <source>String Collation</source>
          <target state="translated">Строковая связь</target>
        </trans-unit>
        <trans-unit id="40837ec372cc75f0a51393ed930c1fe017719b97" translate="yes" xml:space="preserve">
          <source>String Equivalence</source>
          <target state="translated">Эквивалентность струн</target>
        </trans-unit>
        <trans-unit id="c0852fa4a49f9a7f054796351af22423733e0ae5" translate="yes" xml:space="preserve">
          <source>String Lengths</source>
          <target state="translated">Длины струн</target>
        </trans-unit>
        <trans-unit id="b231adac90ed5af6e5723df56d210bfd345958ac" translate="yes" xml:space="preserve">
          <source>String Processing, Language Text Processing, Parsing, and Searching</source>
          <target state="translated">Обработка строки,обработка текста языка,парсинг и поиск</target>
        </trans-unit>
        <trans-unit id="a76a0b86b2d8c7c2af26080ae08b76bef9730da0" translate="yes" xml:space="preserve">
          <source>String comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f618ca662dfcc3b16eb26b3a99e8a37d3fd5c229" translate="yes" xml:space="preserve">
          <source>String constants that would normally evaluate to 0 or 1 are warned about.</source>
          <target state="translated">Строковые константы,которые обычно оцениваются до 0 или 1,предупреждаются.</target>
        </trans-unit>
        <trans-unit id="6104084e70872a799af75c0c3b3e9c680e29b421" translate="yes" xml:space="preserve">
          <source>String conversion</source>
          <target state="translated">Преобразование струны</target>
        </trans-unit>
        <trans-unit id="8dc84df0bc8f7e36bf6046d5ceb68a3cfd06dca6" translate="yes" xml:space="preserve">
          <source>String conversion methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ce711ae430e00ec658d92f901bfb5ff64ae114" translate="yes" xml:space="preserve">
          <source>String eval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597fe8909ca1928228ff982d52d105d13e058f8b" translate="yes" xml:space="preserve">
          <source>String eval and LC_NUMERIC</source>
          <target state="translated">Строковая оценка и LC_NUMERIC</target>
        </trans-unit>
        <trans-unit id="4941134ab361827bee0789e57907295ac43600ee" translate="yes" xml:space="preserve">
          <source>String for the package. If the package does not have a &lt;code&gt;$VERSION&lt;/code&gt;, this field must be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860dceea01893fc71bff8d83982d93e598606a4e" translate="yes" xml:space="preserve">
          <source>String handling functions, for the most part, continue to operate in terms of characters. &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt;, for example, returns the number of characters in a string, just as before. But that number no longer is necessarily the same as the number of bytes in the string (there may be more bytes than characters). The other such functions include &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функции обработки строк по большей части продолжают работать с символами. &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; , например, как и раньше, возвращает количество символов в строке. Но это число больше не обязательно совпадает с количеством байтов в строке (байтов может быть больше, чем символов). Другие такие функции включают &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="401ccffa7eab02269ca231a09dc9fc080d0ef44e" translate="yes" xml:space="preserve">
          <source>String handling functions, for the most part, continue to operate in terms of characters. &lt;code&gt;length()&lt;/code&gt;, for example, returns the number of characters in a string, just as before. But that number no longer is necessarily the same as the number of bytes in the string (there may be more bytes than characters). The other such functions include &lt;code&gt;chop()&lt;/code&gt;, &lt;code&gt;chomp()&lt;/code&gt;, &lt;code&gt;substr()&lt;/code&gt;, &lt;code&gt;pos()&lt;/code&gt;, &lt;code&gt;index()&lt;/code&gt;, &lt;code&gt;rindex()&lt;/code&gt;, &lt;code&gt;sort()&lt;/code&gt;, &lt;code&gt;sprintf()&lt;/code&gt;, and &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93394b81d59344078a9850ad4f758f0f59ea42a4" translate="yes" xml:space="preserve">
          <source>String holding augmented version of second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c329814ec2d3d4971e2511c74b3273f40003742e" translate="yes" xml:space="preserve">
          <source>String interpolation with case-mapping, as in, say, &lt;code&gt;$dest =
&quot;C:\U$name.$ext&quot;&lt;/code&gt; , may produce dangerous results if a bogus &lt;code&gt;LC_CTYPE&lt;/code&gt; case-mapping table is in effect.</source>
          <target state="translated">Строковая интерполяция с преобразованием регистра, например, &lt;code&gt;$dest = &quot;C:\U$name.$ext&quot;&lt;/code&gt; , может привести к опасным результатам, если действует фиктивная таблица преобразования регистра &lt;code&gt;LC_CTYPE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd79a2810365d4fde650c3f3ecb48c64b7bd3d40" translate="yes" xml:space="preserve">
          <source>String interpolation with case-mapping, as in, say, &lt;code&gt;$dest = &quot;C:\U$name.$ext&quot;&lt;/code&gt;, may produce dangerous results if a bogus &lt;code&gt;LC_CTYPE&lt;/code&gt; case-mapping table is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6780b9a46b265648d17e144b69c48ee74770992" translate="yes" xml:space="preserve">
          <source>String literals are usually delimited by either single or double quotes. They work much like quotes in the standard Unix shells: double-quoted string literals are subject to backslash and variable substitution; single-quoted strings are not (except for &lt;code&gt;\'&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt; ). The usual C-style backslash rules apply for making characters such as newline, tab, etc., as well as some more exotic forms. See &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt; for a list.</source>
          <target state="translated">Строковые литералы обычно разделяются одинарными или двойными кавычками. Они работают так же, как кавычки в стандартных оболочках Unix: строковые литералы в двойных кавычках подвергаются обратной косой черте и замене переменных; Строки в одинарных кавычках - нет (кроме &lt;code&gt;\'&lt;/code&gt; и &lt;code&gt;\\&lt;/code&gt; ). Обычные правила обратной косой черты в стиле C применяются для создания символов, таких как новая строка, табуляция и т. Д., А также некоторых более экзотических форм. См &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote и Quote подобных операторов в perlop&lt;/a&gt; для списка.</target>
        </trans-unit>
        <trans-unit id="13732576251fc8d08b8cf385b7308ea1c12b8efc" translate="yes" xml:space="preserve">
          <source>String literals are usually delimited by either single or double quotes. They work much like quotes in the standard Unix shells: double-quoted string literals are subject to backslash and variable substitution; single-quoted strings are not (except for &lt;code&gt;\'&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt;). The usual C-style backslash rules apply for making characters such as newline, tab, etc., as well as some more exotic forms. See &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;&quot;Quote and Quote-like Operators&quot; in perlop&lt;/a&gt; for a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0fe980f60efc7c1f918b95be4503588f28be99" translate="yes" xml:space="preserve">
          <source>String needing checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3051b99c9691d2719f0563e333076fae287e689" translate="yes" xml:space="preserve">
          <source>String needing escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b011a78c96a9c16cf6436848fa3f565de97986a2" translate="yes" xml:space="preserve">
          <source>String of options to pass to xsubpp. This might include &lt;code&gt;-C++&lt;/code&gt; or &lt;code&gt;-extern&lt;/code&gt; . Do not include typemaps here; the TYPEMAP parameter exists for that purpose.</source>
          <target state="translated">Строка параметров для передачи в xsubpp. Это может включать &lt;code&gt;-C++&lt;/code&gt; или &lt;code&gt;-extern&lt;/code&gt; . Не включайте сюда карты типов; для этой цели существует параметр TYPEMAP.</target>
        </trans-unit>
        <trans-unit id="01cf92ed42a8c75a1838e0a5762b33f6a2b55111" translate="yes" xml:space="preserve">
          <source>String of options to pass to xsubpp. This might include &lt;code&gt;-C++&lt;/code&gt; or &lt;code&gt;-extern&lt;/code&gt;. Do not include typemaps here; the TYPEMAP parameter exists for that purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fec62342425ec8f81ce629d9250491168e3f930" translate="yes" xml:space="preserve">
          <source>String overloaded objects are compared &lt;b&gt;as strings&lt;/b&gt; (or in &lt;code&gt;cmp_ok()&lt;/code&gt; 's case, strings or numbers as appropriate to the comparison op). This prevents Test::More from piercing an object's interface allowing better blackbox testing. So if a function starts returning overloaded objects instead of bare strings your tests won't notice the difference. This is good.</source>
          <target state="translated">Перегруженные строковые объекты сравниваются &lt;b&gt;как строки&lt;/b&gt; (или, в случае &lt;code&gt;cmp_ok()&lt;/code&gt; , строки или числа, в зависимости от операции сравнения). Это предотвращает проникновение Test :: More в интерфейс объекта, что позволяет улучшить тестирование черного ящика. Поэтому, если функция начинает возвращать перегруженные объекты вместо простых строк, ваши тесты не заметят разницы. Это хорошо.</target>
        </trans-unit>
        <trans-unit id="fa1a43b0163b121a327b4a58480c5d680c5b9558" translate="yes" xml:space="preserve">
          <source>String overloaded objects are compared &lt;b&gt;as strings&lt;/b&gt; (or in &lt;code&gt;cmp_ok()&lt;/code&gt;'s case, strings or numbers as appropriate to the comparison op). This prevents Test::More from piercing an object's interface allowing better blackbox testing. So if a function starts returning overloaded objects instead of bare strings your tests won't notice the difference. This is good.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f00ebea06538bbe227ded196b24216fa175546f" translate="yes" xml:space="preserve">
          <source>String that will be included in the compiler call command line between the arguments INC and OPTIMIZE.</source>
          <target state="translated">Строка,которая будет включена в командную строку вызова компилятора между аргументами INC и OPTIMIZE.</target>
        </trans-unit>
        <trans-unit id="6e526f1a740ace9291b3849106bb71fe9922d6d7" translate="yes" xml:space="preserve">
          <source>String to (long) integer translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set &lt;code&gt;$!&lt;/code&gt; (&lt;code&gt;$ERRNO&lt;/code&gt; ) to indicate a translation error, so clear &lt;code&gt;$!&lt;/code&gt; before calling &lt;code&gt;strtol&lt;/code&gt; . However, non-POSIX systems may not check for overflow, and therefore will never set &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">Преобразование строки в (длинное) целое число. Возвращает проанализированное число и количество символов в не проанализированной части строки. Действительно POSIX-совместимые системы устанавливают &lt;code&gt;$!&lt;/code&gt; ( &lt;code&gt;$ERRNO&lt;/code&gt; ), чтобы указать на ошибку перевода, поэтому очистите &lt;code&gt;$!&lt;/code&gt; перед вызовом &lt;code&gt;strtol&lt;/code&gt; . Однако системы, не относящиеся к POSIX, могут не проверять переполнение и поэтому никогда не будут устанавливать &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e3afd2c721e94e17632288572aff18f68920d41" translate="yes" xml:space="preserve">
          <source>String to (long) integer translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set &lt;code&gt;$!&lt;/code&gt; (&lt;code&gt;$ERRNO&lt;/code&gt;) to indicate a translation error, so clear &lt;code&gt;$!&lt;/code&gt; before calling &lt;code&gt;strtol&lt;/code&gt;. However, non-POSIX systems may not check for overflow, and therefore will never set &lt;code&gt;$!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ad43047bd965bdc4d07f5ce2456ad0a02b96c7" translate="yes" xml:space="preserve">
          <source>String to double translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set &lt;code&gt;$!&lt;/code&gt; (&lt;code&gt;$ERRNO&lt;/code&gt; ) to indicate a translation error, so clear &lt;code&gt;$!&lt;/code&gt; before calling &lt;code&gt;strtod&lt;/code&gt; . However, non-POSIX systems may not check for overflow, and therefore will never set &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">Строка для двойного перевода. Возвращает проанализированное число и количество символов в не проанализированной части строки. Действительно POSIX-совместимые системы устанавливают &lt;code&gt;$!&lt;/code&gt; ( &lt;code&gt;$ERRNO&lt;/code&gt; ), чтобы указать на ошибку перевода, поэтому очистите &lt;code&gt;$!&lt;/code&gt; перед вызовом &lt;code&gt;strtod&lt;/code&gt; . Однако системы, не относящиеся к POSIX, могут не проверять переполнение и поэтому никогда не будут устанавливать &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8676f880462f433f166d907d612c3e8919af6de" translate="yes" xml:space="preserve">
          <source>String to double translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set &lt;code&gt;$!&lt;/code&gt; (&lt;code&gt;$ERRNO&lt;/code&gt;) to indicate a translation error, so clear &lt;code&gt;$!&lt;/code&gt; before calling &lt;code&gt;strtod&lt;/code&gt;. However, non-POSIX systems may not check for overflow, and therefore will never set &lt;code&gt;$!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f0eaf01673564e0319c5f3bfbb5d8942bb1f18" translate="yes" xml:space="preserve">
          <source>String to prepend to the &lt;code&gt;file&lt;/code&gt; field of the resulting output. This defaults to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e6cc14bde5be0fa13f9402d856fc2a265b21a7" translate="yes" xml:space="preserve">
          <source>String to unsigned (long) integer translation. &lt;code&gt;strtoul()&lt;/code&gt; is identical to &lt;code&gt;strtol()&lt;/code&gt; except that &lt;code&gt;strtoul()&lt;/code&gt; only parses unsigned integers. See &lt;a href=&quot;#strtol&quot;&gt;&quot;strtol&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abcfc7dcb04cc4aa0bcda4543317ca564702847" translate="yes" xml:space="preserve">
          <source>String to unsigned (long) integer translation. &lt;code&gt;strtoul()&lt;/code&gt; is identical to &lt;code&gt;strtol()&lt;/code&gt; except that &lt;code&gt;strtoul()&lt;/code&gt; only parses unsigned integers. See &lt;a href=&quot;#strtol&quot;&gt;strtol&lt;/a&gt; for details.</source>
          <target state="translated">Преобразование строки в беззнаковое (длинное) целое число. &lt;code&gt;strtoul()&lt;/code&gt; идентичен &lt;code&gt;strtol()&lt;/code&gt; за исключением того, что &lt;code&gt;strtoul()&lt;/code&gt; анализирует только целые числа без знака. Подробнее см. &lt;a href=&quot;#strtol&quot;&gt;Strtol&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ad6f48bf54709b2ba69a1fce32b7638601bfac7" translate="yes" xml:space="preserve">
          <source>String transformation. Returns the transformed string.</source>
          <target state="translated">Трансформация струн.Возвращает преобразованную строку.</target>
        </trans-unit>
        <trans-unit id="3093f7beb97882dcb9a98d3b5be7d4560e5f5ef4" translate="yes" xml:space="preserve">
          <source>String, numeric, boolean, and regexp conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095d3b7d7b51ca9267c55a71d96ee740ce9ed714" translate="yes" xml:space="preserve">
          <source>String-To-Number Conversions</source>
          <target state="translated">Преобразование строк в числа</target>
        </trans-unit>
        <trans-unit id="5942152bba6334b38f5af4b68fa787f8c4338bf1" translate="yes" xml:space="preserve">
          <source>String.</source>
          <target state="translated">String.</target>
        </trans-unit>
        <trans-unit id="89f0c9a299c3800ad98959c29c190d1bc9de23ac" translate="yes" xml:space="preserve">
          <source>String. An arbitrary sequence of characters. It is valid for the argument to start with &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; .</source>
          <target state="translated">Строка. Произвольная последовательность символов. Аргумент может начинаться с &lt;code&gt;-&lt;/code&gt; или &lt;code&gt;--&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81f30cf5068f2f28c67e584c10005d36bbd46507" translate="yes" xml:space="preserve">
          <source>String. An arbitrary sequence of characters. It is valid for the argument to start with &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6805d3a9d242376321929e78e5ba39e0634fbb9" translate="yes" xml:space="preserve">
          <source>Stringification</source>
          <target state="translated">Stringification</target>
        </trans-unit>
        <trans-unit id="fafc0f2cb3777e3c850edce9bbb0624fb76d8e93" translate="yes" xml:space="preserve">
          <source>Stringification also destroys arrays.</source>
          <target state="translated">Стрингование также уничтожает массивы.</target>
        </trans-unit>
        <trans-unit id="a96e53fa801a030d61d0b0afb131453e4a3a7511" translate="yes" xml:space="preserve">
          <source>Stringified perl data structures, suitable for both printing and &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Строковые структуры данных Perl, подходящие как для печати, так и для &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22b2c8519d7e0bf7d3dd8b66c9c7ae4d2bf2a17f" translate="yes" xml:space="preserve">
          <source>Stringified perl data structures, suitable for both printing and &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bad8926562843b707945e86b277e1f637dc69d2" translate="yes" xml:space="preserve">
          <source>Stringify dumps the data inside the object.</source>
          <target state="translated">Строка сбрасывает данные внутри объекта.</target>
        </trans-unit>
        <trans-unit id="242a6a36753d3e416e5262c8b767349bc289b912" translate="yes" xml:space="preserve">
          <source>Strings created with &lt;a href=&quot;#vec-EXPR%2COFFSET%2CBITS&quot;&gt;&lt;code&gt;vec&lt;/code&gt;&lt;/a&gt; can also be manipulated with the logical operators &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt;. These operators will assume a bit vector operation is desired when both operands are strings. See &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;&quot;Bitwise String Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cca40b8e6ab951533c16fbbdd8e8eeb9f0e6f8" translate="yes" xml:space="preserve">
          <source>Strings created with &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; can also be manipulated with the logical operators &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt; . These operators will assume a bit vector operation is desired when both operands are strings. See &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Строками, созданными с помощью &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; , также можно управлять с помощью логических операторов &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;~&lt;/code&gt; . Эти операторы предполагают, что операция с битовым вектором желательна, когда оба операнда являются строками. См. Раздел &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Побитовые строковые операторы в perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc0a2fc8d4082ea8e735316dde8d1811abffaf90" translate="yes" xml:space="preserve">
          <source>Strings created with &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; can also be manipulated with the logical operators &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt; . These operators will assume a bit vector operation is desired when both operands are strings. See &lt;a href=&quot;../perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Строками, созданными с помощью &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; , также можно управлять с помощью логических операторов &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;~&lt;/code&gt; . Эти операторы предполагают, что операция с битовым вектором желательна, когда оба операнда являются строками. См. Раздел &lt;a href=&quot;../perlop#Bitwise-String-Operators&quot;&gt;Побитовые строковые операторы в perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7e8a6f87a8a42268a64c6a11af8887059d5680" translate="yes" xml:space="preserve">
          <source>Strings of multiple sub- and superscripts are not recognized as numbers. You can use either of the compatibility decompositions in Unicode::Normalize to change these into digits, and then call &lt;code&gt;num&lt;/code&gt; on the result.</source>
          <target state="translated">Строки, состоящие из нескольких нижних и верхних индексов, не распознаются как числа. Вы можете использовать любую из декомпозиций совместимости в Unicode :: Normalize, чтобы преобразовать их в цифры, а затем вызвать &lt;code&gt;num&lt;/code&gt; для результата.</target>
        </trans-unit>
        <trans-unit id="fe482813a109ae5d2d22da9c6e84cc6ce253ee7f" translate="yes" xml:space="preserve">
          <source>Strings with code points over 0xFF may not be mapped into in-memory file handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaa3eb6eac6d4efb6574a9ba9018939acd1f8cf" translate="yes" xml:space="preserve">
          <source>Strings--including hash keys--and regular expression patterns may contain characters that have ordinal values larger than 255.</source>
          <target state="translated">Строки-включая хэш-клавиши-и шаблоны регулярных выражений могут содержать символы с порядковыми значениями,превышающими 255.</target>
        </trans-unit>
        <trans-unit id="d6348b5c86af8ba2c83c3a187e28bfcf9f1d038b" translate="yes" xml:space="preserve">
          <source>Stripping Perl Binaries on Cygwin</source>
          <target state="translated">Стриптиз Perl Binaries на Cygwin</target>
        </trans-unit>
        <trans-unit id="f9141f854e0e233503d419a0cf18d9153715c039" translate="yes" xml:space="preserve">
          <source>Strongly object-oriented and fully-featured with a long development history and a large community and addon ecosystem. It is excellent for large and complex applications, where you have full control over the server.</source>
          <target state="translated">Сильно объектно-ориентированная и полнофункциональная,с длительной историей развития и большой экосистемой сообществ и аддонов.Отлично подходит для больших и сложных приложений,где у вас есть полный контроль над сервером.</target>
        </trans-unit>
        <trans-unit id="0a7ad50fa5faede1ac1a8e9d617b83a136f3b36c" translate="yes" xml:space="preserve">
          <source>Strongly object-oriented and minimal, built for speed and intended as a toolkit for building micro web apps, custom frameworks or for tieing together existing Plack-compatible web applications with one central dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92faa1dc48e3fe73a6fc4858913998fc576077e6" translate="yes" xml:space="preserve">
          <source>Strtod</source>
          <target state="translated">Strtod</target>
        </trans-unit>
        <trans-unit id="2bb3001dd42d6db227fc38ef7fd440ba6f9787f9" translate="yes" xml:space="preserve">
          <source>Strtol</source>
          <target state="translated">Strtol</target>
        </trans-unit>
        <trans-unit id="aaac07ac9b1f9026b0065ac193b055defc924b2e" translate="yes" xml:space="preserve">
          <source>Strtoul</source>
          <target state="translated">Strtoul</target>
        </trans-unit>
        <trans-unit id="4e5f4595501ae7d455e886e191bc02eb4a97eb9d" translate="yes" xml:space="preserve">
          <source>StructCopy</source>
          <target state="translated">StructCopy</target>
        </trans-unit>
        <trans-unit id="f23a884e110f1886cdc16e896ca93598233740f9" translate="yes" xml:space="preserve">
          <source>Structs are required to be aligned to the maximum alignment required by the fields - which for native types is for usually equivalent to sizeof() of the field</source>
          <target state="translated">Структуры должны быть выровнены до максимального выравнивания,требуемого полями-для нативных типов это обычно эквивалентно sizeof()поля</target>
        </trans-unit>
        <trans-unit id="eb761c94903285d6515bd20e9cd52538249ae83b" translate="yes" xml:space="preserve">
          <source>Structure of a Regexp Program</source>
          <target state="translated">Структура регэкспресс-программы</target>
        </trans-unit>
        <trans-unit id="a5c0ab1b864f9236f0a013c0c90f92ca429edfd8" translate="yes" xml:space="preserve">
          <source>Structure your modules so they are all located under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd40698b4bb94e939846994c9f9741e198f30bc1" translate="yes" xml:space="preserve">
          <source>Structured data retrieval of perl -V output</source>
          <target state="translated">Структурированное извлечение данных на выходе perl -V</target>
        </trans-unit>
        <trans-unit id="3e4953dd11e72439867b2ad528b4c6dad15a7661" translate="yes" xml:space="preserve">
          <source>Stub found while resolving method &quot;%s&quot; overloading &quot;%s&quot; in package &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ce54f7f99cf2cca6626a2de77f397b8065d514" translate="yes" xml:space="preserve">
          <source>Stub that provides thread hook for perl_destruct when there are no threads.</source>
          <target state="translated">Петля,которая обеспечивает резьбовое соединение для perl_detruct при отсутствии резьбы.</target>
        </trans-unit>
        <trans-unit id="d8d7cb9c0bd0e5d2e8d74ffc3881bd4b4fc1400b" translate="yes" xml:space="preserve">
          <source>Stubs for Deleted Documents</source>
          <target state="translated">Клейма для удаленных документов</target>
        </trans-unit>
        <trans-unit id="4d7dabe926bb346f9396e40dca4282529b230cab" translate="yes" xml:space="preserve">
          <source>Stuff here is really low-priority to optimize, since it is far better to implement the operation in the low-level math library directly, possible even using a call to the native lib.</source>
          <target state="translated">Приоритет оптимизации здесь действительно низок,так как гораздо лучше реализовать операцию в низкоуровневой математической библиотеке напрямую,что возможно даже при использовании вызова родной библиотеки.</target>
        </trans-unit>
        <trans-unit id="2869e1f287c823d9d113fb739c0f867918c01e7c" translate="yes" xml:space="preserve">
          <source>Stuffit Expander</source>
          <target state="translated">Экспандер вещей</target>
        </trans-unit>
        <trans-unit id="99a0efc6cfd85d8ff2732a6718140f822cb90472" translate="yes" xml:space="preserve">
          <source>Style</source>
          <target state="translated">Style</target>
        </trans-unit>
        <trans-unit id="454122721f6b63e2ec36cf3779d6bbadd2e22140" translate="yes" xml:space="preserve">
          <source>Sub::Util</source>
          <target state="translated">Sub::Util</target>
        </trans-unit>
        <trans-unit id="200e883b1bf91bd7e7b1892b6781abbb8731b040" translate="yes" xml:space="preserve">
          <source>Sub::Util - A selection of utility subroutines for subs and CODE references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4fae33d407351a21e057015a8cfce97b1d1d2a" translate="yes" xml:space="preserve">
          <source>Subclass</source>
          <target state="translated">Subclass</target>
        </trans-unit>
        <trans-unit id="1a337fcb31e5829e1a600e170299e1eed7692c3f" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; and customize your parser by setting the &lt;code&gt;grammar_class&lt;/code&gt; parameter. See &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e337d12e7f0f9db812cc8b4bb46be2d64cb670" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; and register your new result type/class with the default &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a598fbe728e9996509df163e945962ae7a4ffed0" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt; itself and implement your own &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; creation logic. Then you'll need to customize the class used by your parser by setting the &lt;code&gt;result_factory_class&lt;/code&gt; parameter. See &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873c1d3b114c3c8ca9fa8263d71c270acec87256" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;parser/grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; and customize your parser by setting the &lt;code&gt;grammar_class&lt;/code&gt; parameter. See &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt; for more details.</source>
          <target state="translated">Подкласс &lt;a href=&quot;parser/grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt; и настройте свой парсер, установив параметр &lt;code&gt;grammar_class&lt;/code&gt; . Смотрите &lt;a href=&quot;#new&quot;&gt;новые&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="a88a43bb409ce5ce1ef29fd247b1a667d1a95af9" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; and register your new result type/class with the default &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">Подкласс &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; и зарегистрируйте новый тип / класс результата с помощью &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory по умолчанию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9c1095f48c3aca9e5b044be2e9f7d4aebd28ac4" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt; itself and implement your own &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; creation logic. Then you'll need to customize the class used by your parser by setting the &lt;code&gt;result_factory_class&lt;/code&gt; parameter. See &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt; for more details.</source>
          <target state="translated">Подкласс &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt; и реализует собственную логику создания &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Затем вам нужно будет настроить класс, используемый вашим парсером, установив параметр &lt;code&gt;result_factory_class&lt;/code&gt; . Смотрите &lt;a href=&quot;#new&quot;&gt;новые&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="e73f017d1b2756188610b88957a8f09f27806cab" translate="yes" xml:space="preserve">
          <source>Subclass implementations of this method may wish to invoke the &lt;b&gt;nested()&lt;/b&gt; method of &lt;code&gt;$pod_seq&lt;/code&gt; to see if it is nested inside some other interior-sequence (and if so, which kind).</source>
          <target state="translated">Подкласс реализация этого метода , возможно , пожелает вызвать &lt;b&gt;вложенный ()&lt;/b&gt; метод от &lt;code&gt;$pod_seq&lt;/code&gt; , чтобы увидеть , если он вложен в какой - либо другой внутренней последовательности (и если да, то какой вид).</target>
        </trans-unit>
        <trans-unit id="64bde9a828bba22dd63e418d48e0703d9c34544f" translate="yes" xml:space="preserve">
          <source>Subclass it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206092a8f1bccf21dc1a96fb2aecc7852ff2c2b3" translate="yes" xml:space="preserve">
          <source>Subclass off of ExtUtils::MM_Any</source>
          <target state="translated">Подкласс вне ExtUtils::MM_Any</target>
        </trans-unit>
        <trans-unit id="c726c3176746b961b1da7788108e104c74c302c2" translate="yes" xml:space="preserve">
          <source>Subclasses will add methods, and will also inherit these methods:</source>
          <target state="translated">Подклассы будут добавлять методы,а также наследуют эти методы:</target>
        </trans-unit>
        <trans-unit id="f3e2eeeafa90ba07510736c79555f75b3f2683f2" translate="yes" xml:space="preserve">
          <source>Subclassing Math::BigInt</source>
          <target state="translated">Математика подкласса:::Большой.</target>
        </trans-unit>
        <trans-unit id="7a1cf3add6a7e4a2dd149344bc26ee4f53a43b6c" translate="yes" xml:space="preserve">
          <source>Subject to include with the message. You will be prompted if you don't supply one on the command line.</source>
          <target state="translated">Тема для включения в сообщение.Вам будет предложено,если вы не предоставите его в командной строке.</target>
        </trans-unit>
        <trans-unit id="514a69c7cb010ea0bf9f49cd1b452991b8b8c5f5" translate="yes" xml:space="preserve">
          <source>Subject to include with the report. You will be prompted if you don't supply one on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dacf65959849884a011f36f76a04eebea94c5ea" translate="yes" xml:space="preserve">
          <source>Submit</source>
          <target state="translated">Submit</target>
        </trans-unit>
        <trans-unit id="403bc0e6094ca81cdc2ca6f64a247c639431d231" translate="yes" xml:space="preserve">
          <source>Submit all messages/phrases/etc. to translators.</source>
          <target state="translated">Отправляйте все сообщения/фразы/и т.д.переводчикам.</target>
        </trans-unit>
        <trans-unit id="0d2e3edd3ad42a3c825fac56543a9ba6ed29f070" translate="yes" xml:space="preserve">
          <source>Submit as command file on close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740057b8189ca179a92f1c0babad5e8319eb10b8" translate="yes" xml:space="preserve">
          <source>Submitting patches</source>
          <target state="translated">Представление патчей</target>
        </trans-unit>
        <trans-unit id="c9a1540fce9398b2881e3e765d38647cec10bf30" translate="yes" xml:space="preserve">
          <source>Subprocesses started with open use a minimal popen() routine and therefore they do not return pids usable with waitpid etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5792d60bcabce4e99c77d69a1b0a93002b6b2c75" translate="yes" xml:space="preserve">
          <source>Subroutine &quot;%s&quot; will not stay shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800547d773f13c68fa4495c8910007398137cdb8" translate="yes" xml:space="preserve">
          <source>Subroutine &quot;&amp;amp;%s&quot; is not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b29109439b3ee3e3ad4d67ea3d37066e59b15da" translate="yes" xml:space="preserve">
          <source>Subroutine %s redefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ef2c6312acb93997fc9533ac9d5fab3c547483" translate="yes" xml:space="preserve">
          <source>Subroutine Attributes</source>
          <target state="translated">Атрибуты подпрограммы</target>
        </trans-unit>
        <trans-unit id="e505b9988266048dcf61fcc7b04326e41ac00577" translate="yes" xml:space="preserve">
          <source>Subroutine References as Methods</source>
          <target state="translated">Подпрограмма Ссылки как методы</target>
        </trans-unit>
        <trans-unit id="e0c81de6298b00147539fb1fd776b06104ff3a1b" translate="yes" xml:space="preserve">
          <source>Subroutine Stubs</source>
          <target state="translated">Шлейфы подпрограммы</target>
        </trans-unit>
        <trans-unit id="a522560a592f55d1244a49a61ccbec20e0f1bdb4" translate="yes" xml:space="preserve">
          <source>Subroutine attributes must come before the signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17d78c0715b7cc40ffcc13047f5c03c7076ce7e" translate="yes" xml:space="preserve">
          <source>Subroutine call to a named capture group. Equivalent to &lt;code&gt;(?&amp;amp;&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c6bab1119398dcc6fbf96d66f3ef433c36e56" translate="yes" xml:space="preserve">
          <source>Subroutine call to a named capture group. Equivalent to &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt;.</source>
          <target state="translated">Вызов подпрограммы к названной группе захвата. Эквивалентен &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2db8d18b231e5da42e906ca30c0b2a5d6ae6ff13" translate="yes" xml:space="preserve">
          <source>Subroutine calls and lookups of individual array elements arise often enough that it gets cumbersome to use method 2. As a form of syntactic sugar, the examples for method 2 may be written:</source>
          <target state="translated">Вызовы подпрограмм и поиск отдельных элементов массива происходят достаточно часто,что затрудняет использование метода 2.В качестве формы синтаксического сахара можно записать примеры для метода 2:</target>
        </trans-unit>
        <trans-unit id="2a4b563566baea0b906bb1fd2aafe77f5b8f15d9" translate="yes" xml:space="preserve">
          <source>Subroutine declarations and definitions may optionally have attribute lists associated with them. (Variable &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declarations also may, but see the warning below.) Perl handles these declarations by passing some information about the call site and the thing being declared along with the attribute list to this module. In particular, the first example above is equivalent to the following:</source>
          <target state="translated">Объявления и определения подпрограмм могут дополнительно иметь связанные с ними списки атрибутов. (Переменные &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; объявления тоже могут, но см. Предупреждение ниже.) Perl обрабатывает эти объявления, передавая некоторую информацию о сайте вызова и объявляемом объекте вместе со списком атрибутов в этот модуль. В частности, первый приведенный выше пример эквивалентен следующему:</target>
        </trans-unit>
        <trans-unit id="1073836739fed365f30def4568eabbaf570bbb96" translate="yes" xml:space="preserve">
          <source>Subroutine declarations and definitions may optionally have attribute lists associated with them. (Variable &lt;code&gt;my&lt;/code&gt; declarations also may, but see the warning below.) Perl handles these declarations by passing some information about the call site and the thing being declared along with the attribute list to this module. In particular, the first example above is equivalent to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1033729ecd127028ccf3e2aa66d4fd8f486f7da3" translate="yes" xml:space="preserve">
          <source>Subroutine defined.</source>
          <target state="translated">Подпрограмма определена.</target>
        </trans-unit>
        <trans-unit id="d9339f9cd00dee3efa9f7f46ee1ed9f5d6e327f1" translate="yes" xml:space="preserve">
          <source>Subroutine definitions (and declarations, for that matter) need not necessarily be situated in the package whose symbol table they occupy. You can define a subroutine outside its package by explicitly qualifying the name of the subroutine:</source>
          <target state="translated">Подпрограммные определения (и,соответственно,декларации)не обязательно должны располагаться в пакете,таблицу символов которого они занимают.Вы можете определить подпрограмму вне пакета,явно уточнив имя подпрограммы:</target>
        </trans-unit>
        <trans-unit id="e9df428b17a930b0722f07795c93f287fd3afdec" translate="yes" xml:space="preserve">
          <source>Subroutine or method call.</source>
          <target state="translated">Подпрограмма или вызов метода.</target>
        </trans-unit>
        <trans-unit id="69c680037a9b95df2742cb6788f31ebc24c5c06b" translate="yes" xml:space="preserve">
          <source>Subroutine references are the simplest case. When the inclusion system walks through &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; and encounters a subroutine, this subroutine gets called with two parameters, the first a reference to itself, and the second the name of the file to be included (e.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e848b12ba1771594d7f90740383f312abe841d15" translate="yes" xml:space="preserve">
          <source>Subroutine references are the simplest case. When the inclusion system walks through @INC and encounters a subroutine, this subroutine gets called with two parameters, the first a reference to itself, and the second the name of the file to be included (e.g., &quot;</source>
          <target state="translated">Ссылки на подпрограммы-самый простой случай.Когда система включения проходит через @INC и сталкивается с подпрограммой,эта подпрограмма вызывается с двумя параметрами,первый-ссылка на себя,а второй-имя файла,который должен быть включен (например,&quot;</target>
        </trans-unit>
        <trans-unit id="b392dcb7d8c01390614814ebacd1c58485fdcd21" translate="yes" xml:space="preserve">
          <source>Subroutines</source>
          <target state="translated">Subroutines</target>
        </trans-unit>
        <trans-unit id="3a9c9397dc48823cce2af70d8aec97a4fb827cbd" translate="yes" xml:space="preserve">
          <source>Subroutines can also return values:</source>
          <target state="translated">Подпрограммы также могут возвращать значения:</target>
        </trans-unit>
        <trans-unit id="7cbe2412d3dda1f0b9872899595b0870846f911a" translate="yes" xml:space="preserve">
          <source>Subroutines declarations can also be loaded up with the &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; statement or both loaded and imported into your namespace with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details on this.</source>
          <target state="translated">Объявления подпрограмм также могут быть загружены с помощью оператора &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или загружены и импортированы в ваше пространство имен с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; оператора use . См. Подробности в &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9413cb94cc1864a97b409cf3b7e7117c8f53d17" translate="yes" xml:space="preserve">
          <source>Subroutines declarations can also be loaded up with the &lt;code&gt;require&lt;/code&gt; statement or both loaded and imported into your namespace with a &lt;code&gt;use&lt;/code&gt; statement. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b365b15ba275665842a040de4aa6dff221b841" translate="yes" xml:space="preserve">
          <source>Subroutines in multiple packages within the same file are supported - but you should note that this requires exporting the &lt;code&gt;SelfLoader::AUTOLOAD&lt;/code&gt; to every package which requires it. This is done automatically by the &lt;b&gt;SelfLoader&lt;/b&gt; when it first loads the subs into the cache, but you should really specify it in the initialization before the &lt;code&gt;__DATA__&lt;/code&gt; by putting a 'use SelfLoader' statement in each package.</source>
          <target state="translated">Подпрограммы в нескольких пакетах в одном файле поддерживаются, но вы должны заметить, что для этого требуется экспортировать &lt;code&gt;SelfLoader::AUTOLOAD&lt;/code&gt; в каждый пакет, который этого требует. Это выполняется автоматически &lt;b&gt;SelfLoader,&lt;/b&gt; когда он впервые загружает подпрограммы в кеш, но вы действительно должны указать это при инициализации перед &lt;code&gt;__DATA__&lt;/code&gt; , поместив оператор 'use SelfLoader' в каждый пакет.</target>
        </trans-unit>
        <trans-unit id="908bce63fd3bee1510a99f3549ad888c8938e948" translate="yes" xml:space="preserve">
          <source>Subroutines may be called recursively. If a subroutine is called using the &lt;code&gt;&amp;amp;&lt;/code&gt; form, the argument list is optional, and if omitted, no &lt;code&gt;@_&lt;/code&gt; array is set up for the subroutine: the &lt;code&gt;@_&lt;/code&gt; array at the time of the call is visible to subroutine instead. This is an efficiency mechanism that new users may wish to avoid.</source>
          <target state="translated">Подпрограммы могут вызываться рекурсивно. Если функция вызывается с использованием &lt;code&gt;&amp;amp;&lt;/code&gt; формы, список аргументов не является обязательным, и если опущено, &lt;code&gt;@_&lt;/code&gt; массив настроен на подпрограмму: &lt;code&gt;@_&lt;/code&gt; массив в момент вызова видна подпрограмма вместо этого. Это эффективный механизм, которого новые пользователи, возможно, захотят избежать.</target>
        </trans-unit>
        <trans-unit id="cda2b08c81beb1e8e27be40c69e142c7b306247c" translate="yes" xml:space="preserve">
          <source>Subroutines used with ExtUtils::ParseXS</source>
          <target state="translated">Подпрограммы,используемые с ExtUtils::ParseXS</target>
        </trans-unit>
        <trans-unit id="3f753412893b86e74de31ef62203854e630f7671" translate="yes" xml:space="preserve">
          <source>Subroutines whose names are in all upper case are reserved to the Perl core, as are modules whose names are in all lower case. A subroutine in all capitals is a loosely-held convention meaning it will be called indirectly by the run-time system itself, usually due to a triggered event. Subroutines whose name start with a left parenthesis are also reserved the same way. The following is a list of some subroutines that currently do special, pre-defined things.</source>
          <target state="translated">Подпрограммы,имена которых во всех верхних регистрах зарезервированы для ядра Perl,так же как и модули,имена которых во всех нижних регистрах.Подпрограмма во всех заглавных буквах-это свободно удерживаемая конвенция,означающая,что она будет вызвана косвенно самой системой исполнения,обычно из-за сработавшего события.Подпрограммы,имена которых начинаются с левой скобки,также зарезервированы таким же образом.Ниже приведен список некоторых подпрограмм,которые в настоящее время делают специальные,заранее определенные вещи.</target>
        </trans-unit>
        <trans-unit id="bd995cb059355e488a61a605eadaa870990fb34e" translate="yes" xml:space="preserve">
          <source>Subscribe to perl5-porters, follow the patches and try and understand them; don't be afraid to ask if there's a portion you're not clear on - who knows, you may unearth a bug in the patch...</source>
          <target state="translated">Подпишитесь на perl5-порталы,следуйте патчам и постарайтесь их понять;не бойтесь спросить,есть ли часть,которую вы не поняли-кто знает,вы можете раскопать жучок в патче...</target>
        </trans-unit>
        <trans-unit id="93d9b06a27141e76f1c5da56e07d3f537a49d789" translate="yes" xml:space="preserve">
          <source>Subscribe/Unsubscribe</source>
          <target state="translated">Subscribe/Unsubscribe</target>
        </trans-unit>
        <trans-unit id="a9be04fdf20dd61cb8df7236630151f2b739230f" translate="yes" xml:space="preserve">
          <source>Subscribers to perl5-porters (the porters themselves) come in several flavours. Some are quiet curious lurkers, who rarely pitch in and instead watch the ongoing development to ensure they're forewarned of new changes or features in Perl. Some are representatives of vendors, who are there to make sure that Perl continues to compile and work on their platforms. Some patch any reported bug that they know how to fix, some are actively patching their pet area (threads, Win32, the regexp -engine), while others seem to do nothing but complain. In other words, it's your usual mix of technical people.</source>
          <target state="translated">Абоненты perl5-портов (сами носильщики)приходят в нескольких вариантах.Некоторые из них-тихие любопытные шпионы,которые редко вмешиваются и вместо этого следят за текущим развитием,чтобы быть уверенными в том,что их предупреждают о новых изменениях или особенностях Perl.Некоторые являются представителями вендоров,которые находятся там,чтобы убедиться,что Perl продолжает компилироваться и работать на их платформах.Некоторые патчи сообщают об ошибках,которые они умеют исправлять,некоторые активно патчуют свою домашнюю область (потоки,Win32,регэкспо-двигатель),в то время как другие,кажется,ничего не делают,кроме как жалуются.Другими словами,это ваш обычный микс технических специалистов.</target>
        </trans-unit>
        <trans-unit id="4ce7140689363704a8ba85b5261797d063cdadf8" translate="yes" xml:space="preserve">
          <source>Subscripts</source>
          <target state="translated">Subscripts</target>
        </trans-unit>
        <trans-unit id="6555f256c06dba45d12ae5b008404f7426193f59" translate="yes" xml:space="preserve">
          <source>Substantial contributions by Sean Burke &amp;lt;sburke@cpan.org&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972581919796c696d3887a640cd0abc4a9d6fe2f" translate="yes" xml:space="preserve">
          <source>Substitute &lt;code&gt;mmk&lt;/code&gt; for &lt;code&gt;mms&lt;/code&gt; above if you're using MMK.</source>
          <target state="translated">Замените &lt;code&gt;mmk&lt;/code&gt; на &lt;code&gt;mms&lt;/code&gt; выше, если вы используете MMK.</target>
        </trans-unit>
        <trans-unit id="dbc00d62cb7997a305b625c77616bced61d7a767" translate="yes" xml:space="preserve">
          <source>Substitution loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014d5a9e6f1c5bae7a50cda20695fb756eee0cc0" translate="yes" xml:space="preserve">
          <source>Substitution of &lt;code&gt;BEGIN { add_100() }&lt;/code&gt; block with:</source>
          <target state="translated">Замена блока &lt;code&gt;BEGIN { add_100() }&lt;/code&gt; на:</target>
        </trans-unit>
        <trans-unit id="6aa080c65a0705bf8b85bd864e5d55d3b8ce1d38" translate="yes" xml:space="preserve">
          <source>Substitution pattern not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618ea16f2fe1c5efd77bdfb863d15430e39ab7d9" translate="yes" xml:space="preserve">
          <source>Substitution replacement not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821f56dfe7408535081734d464b6578d0a9340e7" translate="yes" xml:space="preserve">
          <source>Substitution-specific modifiers described in</source>
          <target state="translated">Замещающие специфические модификаторы,описанные в</target>
        </trans-unit>
        <trans-unit id="748640ee60ffaf08dbf9cf2300dfb0ab8b09456a" translate="yes" xml:space="preserve">
          <source>Substitution-specific modifiers described in &lt;a href=&quot;perlop#s%2FPATTERN%2FREPLACEMENT%2Fmsixpodualngcer&quot;&gt;&quot;s/PATTERN/REPLACEMENT/msixpodualngcer&quot; in perlop&lt;/a&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85608dfc0000ff615c1dec302e3be9c2df7837d" translate="yes" xml:space="preserve">
          <source>Substitutions are made with $col and $row in the output string with the following sprintf() line formats:</source>
          <target state="translated">Замена производится с помощью $col и $row в строке вывода со следующими форматами строк sprintf():</target>
        </trans-unit>
        <trans-unit id="e9a34939ee76bec97fd549a9a6b322c326e9dbba" translate="yes" xml:space="preserve">
          <source>Substring data about strings that must appear in the final match. This is currently only used internally by Perl's engine, but might be used in the future for all engines for optimisations.</source>
          <target state="translated">Подстрока данных о строках,которые должны появиться в финальном матче.В настоящее время они используются только внутри Perl-движка,но в будущем могут быть использованы для всех движков для оптимизации.</target>
        </trans-unit>
        <trans-unit id="16f77c4705ec7e98c86e25e92de290785b8aa469" translate="yes" xml:space="preserve">
          <source>Subtest implementation is more sane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292ec7a4b6c6d463da3dc2a73e0168876180e17" translate="yes" xml:space="preserve">
          <source>Subtest indentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288c9b632547ccefc043ed0814e269fb40d46750" translate="yes" xml:space="preserve">
          <source>Subtests make use of this hub to route events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de3a6f2fafae521ea8d2aedc747771ba7ff68a0" translate="yes" xml:space="preserve">
          <source>Subtests were released in Test::More 0.94, which came with Perl 5.12.0. Subtests did not implicitly call &lt;code&gt;done_testing()&lt;/code&gt; until 0.96; the first Perl with that fix was Perl 5.14.0 with 0.98.</source>
          <target state="translated">Подтесты были выпущены в Test :: More 0.94, поставляемом с Perl 5.12.0. Подтесты не вызывали неявно &lt;code&gt;done_testing()&lt;/code&gt; до версии 0.96; первым Perl с этим исправлением был Perl 5.14.0 с 0.98.</target>
        </trans-unit>
        <trans-unit id="da70c837fb111755e855b0a137562f112a4e55e2" translate="yes" xml:space="preserve">
          <source>Subtle interdependencies between test programs can mask problems - for example an earlier test may neglect to remove a temporary file that affects the behaviour of a later test. To find this kind of problem I use the --shuffle and --reverse options to run my tests in random or reversed order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a773e71238655167a41521fa50857f3f27293a6" translate="yes" xml:space="preserve">
          <source>Subtleties of this behavior may be platform-dependent and may change in the future.</source>
          <target state="translated">Тонкости такого поведения могут быть платформенно-зависимыми и могут измениться в будущем.</target>
        </trans-unit>
        <trans-unit id="ae5f61e523ef194692c08eae320b323a03f8bb9b" translate="yes" xml:space="preserve">
          <source>Subtract</source>
          <target state="translated">Subtract</target>
        </trans-unit>
        <trans-unit id="532674971418925bf881a12b4532f1662a1e9a91" translate="yes" xml:space="preserve">
          <source>Subtracts $y from $x and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c757fe97bd3bdc11456c873d4a95f5772e2115" translate="yes" xml:space="preserve">
          <source>Success results contain:</source>
          <target state="translated">Результаты успеха содержат:</target>
        </trans-unit>
        <trans-unit id="f918892a0be28ec22ae2148c6c8b20e089383319" translate="yes" xml:space="preserve">
          <source>Successes</source>
          <target state="translated">Successes</target>
        </trans-unit>
        <trans-unit id="9f13946904481800a60a2508acdf81d63816cbc9" translate="yes" xml:space="preserve">
          <source>Successfully tested means that all &quot;make test&quot; runs finish with a result of 100% OK. All tests were conducted with -Duseshrplib set.</source>
          <target state="translated">Успешное тестирование означает,что все прогоны &quot;сделай тест&quot; заканчиваются с результатом 100% OK.Все тесты проводились с набором -Dushrplib.</target>
        </trans-unit>
        <trans-unit id="acd9d5af15f64c17e2970ba3b3a2889b142e6fb0" translate="yes" xml:space="preserve">
          <source>Such QP strings can be decoded with:</source>
          <target state="translated">Такие QP строки можно декодировать:</target>
        </trans-unit>
        <trans-unit id="9bd751ae4548def6edde9b711d0020609ff568b3" translate="yes" xml:space="preserve">
          <source>Such code no longer has the desired effect, for two reasons. Firstly, the use of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; means that the sorting algorithm is not changed until runtime, by which time it's too late to have any effect. Secondly, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort::current&lt;/a&gt;&lt;/code&gt; is also called at run-time, when in fact the compile-time value of &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort::current&lt;/a&gt;&lt;/code&gt; is the one that matters.</source>
          <target state="translated">Такой код больше не дает желаемого эффекта по двум причинам. Во-первых, использование &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; означает, что алгоритм сортировки не изменяется до времени выполнения, и к этому времени уже слишком поздно оказывать какое-либо влияние. Во-вторых, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort::current&lt;/a&gt;&lt;/code&gt; также вызывается во время выполнения, когда на самом деле значение &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort::current&lt;/a&gt;&lt;/code&gt; во время компиляции имеет значение.</target>
        </trans-unit>
        <trans-unit id="142ef3d73b12a657e355c82858c85c2cd7a23472" translate="yes" xml:space="preserve">
          <source>Such code no longer has the desired effect, for two reasons. Firstly, the use of &lt;code&gt;eval()&lt;/code&gt; means that the sorting algorithm is not changed until runtime, by which time it's too late to have any effect. Secondly, &lt;code&gt;sort::current&lt;/code&gt; is also called at run-time, when in fact the compile-time value of &lt;code&gt;sort::current&lt;/code&gt; is the one that matters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ef159fceda5830f0aa82ac39ad009b226aeb52" translate="yes" xml:space="preserve">
          <source>Such combinations can include alternatives, leading to a problem of choice: if we match a regular expression &lt;code&gt;a|ab&lt;/code&gt; against &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , will it match substring &lt;code&gt;&quot;a&quot;&lt;/code&gt; or &lt;code&gt;&quot;ab&quot;&lt;/code&gt; ? One way to describe which substring is actually matched is the concept of backtracking (see &lt;a href=&quot;#Backtracking&quot;&gt;Backtracking&lt;/a&gt;). However, this description is too low-level and makes you think in terms of a particular implementation.</source>
          <target state="translated">Такие комбинации могут включать альтернативы, что приводит к проблеме выбора: если мы сопоставим регулярное выражение &lt;code&gt;a|ab&lt;/code&gt; с &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , будет ли оно соответствовать подстроке &lt;code&gt;&quot;a&quot;&lt;/code&gt; или &lt;code&gt;&quot;ab&quot;&lt;/code&gt; ? Один из способов описать, какая подстрока действительно соответствует, - это концепция поиска с возвратом (см. &lt;a href=&quot;#Backtracking&quot;&gt;Отслеживание с возвратом&lt;/a&gt; ). Однако это описание слишком низкое и заставляет задуматься о конкретной реализации.</target>
        </trans-unit>
        <trans-unit id="3a0a0250134ad0585c52e578d2c27b8e55bf21c1" translate="yes" xml:space="preserve">
          <source>Such combinations can include alternatives, leading to a problem of choice: if we match a regular expression &lt;code&gt;a|ab&lt;/code&gt; against &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, will it match substring &lt;code&gt;&quot;a&quot;&lt;/code&gt; or &lt;code&gt;&quot;ab&quot;&lt;/code&gt;? One way to describe which substring is actually matched is the concept of backtracking (see &lt;a href=&quot;#Backtracking&quot;&gt;&quot;Backtracking&quot;&lt;/a&gt;). However, this description is too low-level and makes you think in terms of a particular implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d1b0795c68a81e9549d343de87babe2d5446e2" translate="yes" xml:space="preserve">
          <source>Such commands are explained in the &quot;&lt;a href=&quot;#Formatting-Codes&quot;&gt;Formatting Codes&lt;/a&gt;&quot; section, below.</source>
          <target state="translated">Такие команды объясняются в разделе &amp;laquo; &lt;a href=&quot;#Formatting-Codes&quot;&gt;Коды форматирования&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="610620ff68fcfedc9e4625433127c1fd73d100c6" translate="yes" xml:space="preserve">
          <source>Such constructs are quite frequently used, both because older versions of Perl had no official &lt;code&gt;switch&lt;/code&gt; statement, and also because the new version described immediately below remains experimental and can sometimes be confusing.</source>
          <target state="translated">Такие конструкции используются довольно часто как потому, что в более старых версиях Perl не было официального оператора &lt;code&gt;switch&lt;/code&gt; , так и потому, что новая версия, описанная непосредственно ниже, остается экспериментальной и иногда может сбивать с толку.</target>
        </trans-unit>
        <trans-unit id="ea3348659ce40b97978cb89e7a2d2a3c12e7d561" translate="yes" xml:space="preserve">
          <source>Such dangers are not peculiar to the locale system: any aspect of an application's environment which may be modified maliciously presents similar challenges. Similarly, they are not specific to Perl: any programming language that allows you to write programs that take account of their environment exposes you to these issues.</source>
          <target state="translated">Такие опасности не свойственны локальной системе:любой аспект среды приложения,который может быть злонамеренно модифицирован,представляет схожие проблемы.Точно так же они не специфичны для Perl:любой язык программирования,позволяющий писать программы,учитывающие их окружение,подвергает вас этим проблемам.</target>
        </trans-unit>
        <trans-unit id="92e64e08c8f255e5e8a21829e9acd359d7cc7e25" translate="yes" xml:space="preserve">
          <source>Such literals are accepted by both &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; for doing a version check. Note that using the v-strings for IPv4 addresses is not portable unless you also use the inet_aton()/inet_ntoa() routines of the Socket package.</source>
          <target state="translated">Такие литералы принимаются как &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; для проверки версии. Обратите внимание, что использование v-строк для адресов IPv4 непереносимо, если вы также не используете подпрограммы inet_aton () / inet_ntoa () пакета Socket.</target>
        </trans-unit>
        <trans-unit id="b3ece4d85f65108445ce8ad183c4acd13b1bae15" translate="yes" xml:space="preserve">
          <source>Such literals are accepted by both &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt; for doing a version check. Note that using the v-strings for IPv4 addresses is not portable unless you also use the inet_aton()/inet_ntoa() routines of the Socket package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45d151cfb183e258e5e363109f24149b1db62ae" translate="yes" xml:space="preserve">
          <source>Such modules should</source>
          <target state="translated">Такие модули должны</target>
        </trans-unit>
        <trans-unit id="7aa5a2112d8e6f60d9221533518e8ad273984dab" translate="yes" xml:space="preserve">
          <source>Such things aside, you can see that a lot can be achieved with a modest amount of code.</source>
          <target state="translated">Если отбросить такие вещи в сторону,то можно заметить,что многого можно добиться с помощью скромного количества кода.</target>
        </trans-unit>
        <trans-unit id="3f289da124b245076253fddcae953c824b46fb88" translate="yes" xml:space="preserve">
          <source>Suggestion for disuse:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88beb5e8792960b693418a1e821caf3667e2978e" translate="yes" xml:space="preserve">
          <source>Sum of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="625d4a750d30cd6f4ad0513fdf02b0a356847795" translate="yes" xml:space="preserve">
          <source>Summary Results</source>
          <target state="translated">Итоговые результаты</target>
        </trans-unit>
        <trans-unit id="090f5890d90dd32f61ec60eddd99730f85a15bf5" translate="yes" xml:space="preserve">
          <source>Summary about the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d8f92a0739a61061673d891b1afa8db3bbc87d" translate="yes" xml:space="preserve">
          <source>Summary methods</source>
          <target state="translated">Общие методы</target>
        </trans-unit>
        <trans-unit id="bbeaa09c87f3637cdf1095b67ab5a263e83c735c" translate="yes" xml:space="preserve">
          <source>Summary of Option Specifications</source>
          <target state="translated">Резюме спецификаций опций</target>
        </trans-unit>
        <trans-unit id="90bd8a629095e4d3e067b9ee655f4a7aef77fe44" translate="yes" xml:space="preserve">
          <source>Summary: &lt;code&gt;Configure ... -Dusecbacktrace&lt;/code&gt; and installing the Developer Tools would be good.</source>
          <target state="translated">Резюме: &lt;code&gt;Configure ... -Dusecbacktrace&lt;/code&gt; и установить Developer Tools было бы хорошо.</target>
        </trans-unit>
        <trans-unit id="fac6a1b8f230cdc10fcc15f1e97d9ef7d5b8d095" translate="yes" xml:space="preserve">
          <source>Summary: &lt;code&gt;Configure ... -Dusecbacktrace&lt;/code&gt; and you need &lt;code&gt;-lbfd&lt;/code&gt; .</source>
          <target state="translated">Резюме: &lt;code&gt;Configure ... -Dusecbacktrace&lt;/code&gt; и вам понадобится &lt;code&gt;-lbfd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="667597966182758709a808e416e091ee04e5a076" translate="yes" xml:space="preserve">
          <source>Summary: &lt;code&gt;Configure ... -Dusecbacktrace&lt;/code&gt; and you need &lt;code&gt;-lbfd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4dd97ceb3548f78756cbaa9fdb900f6de48597" translate="yes" xml:space="preserve">
          <source>Summing up, Perl numeric values can store only those numbers which have a finite decimal expansion or a &quot;short&quot; binary expansion.</source>
          <target state="translated">Суммируя,числовые значения на Perl могут хранить только те числа,которые имеют конечное десятичное или &quot;короткое&quot; двоичное разложение.</target>
        </trans-unit>
        <trans-unit id="a30c74d272f700d25fc5ffc72319faf190f9cd38" translate="yes" xml:space="preserve">
          <source>Sun Microsystems has released a port of their Sun Studio compilers for Linux. As of May 2019, the last stable release took place on 2017, and one can buy support contracts for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2aaceda628f6be2c51aa728019480822a4776e" translate="yes" xml:space="preserve">
          <source>Sun Microsystems has released a port of their Sun Studio compilers for Linux. As of November 2005, only an alpha version has been released. Until a release of these compilers is made, support for compiling Perl with these compiler experimental.</source>
          <target state="translated">Sun Microsystems выпустила порт своих компиляторов Sun Studio для Linux.По состоянию на ноябрь 2005 года была выпущена только альфа-версия.Пока не будет выпущен релиз этих компиляторов,поддержка компиляции Perl с помощью этих компиляторов является экспериментальной.</target>
        </trans-unit>
        <trans-unit id="c878825d39958359a72cd8a76c4798d5c63452e1" translate="yes" xml:space="preserve">
          <source>Sun and GNU make</source>
          <target state="translated">Sun и GNU марка</target>
        </trans-unit>
        <trans-unit id="718d79465fef1629218681af768f2453685f48a1" translate="yes" xml:space="preserve">
          <source>Sun's C Compiler</source>
          <target state="translated">Солнечный компилятор С</target>
        </trans-unit>
        <trans-unit id="6195b0f6879010bbee2ff42c95d1331cc047feb8" translate="yes" xml:space="preserve">
          <source>SunOS 4.x</source>
          <target state="translated">SunOS 4.x</target>
        </trans-unit>
        <trans-unit id="0887ccabfd110aa623b91de64a05467ad2ff0b37" translate="yes" xml:space="preserve">
          <source>Supersede.</source>
          <target state="translated">Supersede.</target>
        </trans-unit>
        <trans-unit id="e16d86479fe3fa44742384e85cda27574322cbc3" translate="yes" xml:space="preserve">
          <source>Supply a comparison function to sort() (described in &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;):</source>
          <target state="translated">Предоставьте функцию сравнения для sort () (описанную в &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="1abf49bb15ef4ea8e1f725a8e57c7d302079a707" translate="yes" xml:space="preserve">
          <source>Supply a comparison function to sort() (described in &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de415e5d5000869495451db35dc93df656397ea8" translate="yes" xml:space="preserve">
          <source>Supply a password. If this token is present, the auto-login process will supply the specified string if the remote server requires a password as part of the login process.</source>
          <target state="translated">Поставьте пароль.Если эта маркерная строка присутствует,то процесс автологина предоставит указанную строку,если удаленному серверу требуется пароль в рамках процесса входа в систему.</target>
        </trans-unit>
        <trans-unit id="2b5e575cc764d4329007cce80f84811dda7921d8" translate="yes" xml:space="preserve">
          <source>Supply an additional account password. If this token is present, the auto-login process will supply the specified string if the remote server requires an additional account password.</source>
          <target state="translated">Поставьте дополнительный пароль учетной записи.Если эта маркерная строка присутствует,то процесс автологина поставит указанную строку,если удаленному серверу требуется дополнительный пароль учетной записи.</target>
        </trans-unit>
        <trans-unit id="63bb1d0a1fc152b9571b2b05084b5b7573c0a7dc" translate="yes" xml:space="preserve">
          <source>Supply object methods for I/O handles</source>
          <target state="translated">Методы объекта поставки для ручек ввода/вывода</target>
        </trans-unit>
        <trans-unit id="e754d6f0995eab7526c2995e6dd29fc5213bbe9f" translate="yes" xml:space="preserve">
          <source>Supply object methods for directory handles</source>
          <target state="translated">Поставлять объектные методы для каталоговых дескрипторов</target>
        </trans-unit>
        <trans-unit id="9f22ffa5d56d4c5cfa232e27b220356c8959032d" translate="yes" xml:space="preserve">
          <source>Supply object methods for filehandles</source>
          <target state="translated">Объектные методы поставки для файловых ручек</target>
        </trans-unit>
        <trans-unit id="b2a77c0ef03836a7333e41ce4f0c7055106ac057" translate="yes" xml:space="preserve">
          <source>Supply object methods for pipes</source>
          <target state="translated">Объектные методы поставок для труб</target>
        </trans-unit>
        <trans-unit id="24f8675a681a3fcf0a19ce2f457ac46639a461cc" translate="yes" xml:space="preserve">
          <source>Supply seek based methods for I/O objects</source>
          <target state="translated">Методы поиска поставщиков для объектов ввода/вывода</target>
        </trans-unit>
        <trans-unit id="4577ee52f9d606e12ad2fa9f7ea83ec15081ff52" translate="yes" xml:space="preserve">
          <source>Supplying a count to the</source>
          <target state="translated">Полагая,что</target>
        </trans-unit>
        <trans-unit id="9256abeb61b0e9c2634b93f868b22e3b6be3e559" translate="yes" xml:space="preserve">
          <source>Support for 64-bit Windows added in 5.8 (ActiveState Corp).</source>
          <target state="translated">В 5.8 добавлена поддержка 64-битной Windows (ActiveState Corp).</target>
        </trans-unit>
        <trans-unit id="832ef41556695f42d002862c25aa7f6927ea5c9c" translate="yes" xml:space="preserve">
          <source>Support for 64-bit addressing is experimental: some aspects of Perl may be omitted or buggy. Note the messages output by</source>
          <target state="translated">Поддержка 64-битной адресации является экспериментальной:некоторые аспекты Perl могут быть опущены или содержать ошибки.Обратите внимание на сообщения,выводимые</target>
        </trans-unit>
        <trans-unit id="dfd649a90bcb497a90c270b395e1aca8e9f13d5a" translate="yes" xml:space="preserve">
          <source>Support for Inside-Out Classes</source>
          <target state="translated">Поддержка внутренних классов</target>
        </trans-unit>
        <trans-unit id="a6e9ff56bd571fa57e267af64d661fa73e5d1898" translate="yes" xml:space="preserve">
          <source>Support for NO_COLOR was added in Term::ANSIColor 5.01.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74542dacfa191bd88d61863d9855931e106e4c3" translate="yes" xml:space="preserve">
          <source>Support for PERL_OBJECT was added in 5.005 (ActiveState Tool Corp).</source>
          <target state="translated">В 5.005 была добавлена поддержка PERL_OBJECT (ActiveState Tool Corp).</target>
        </trans-unit>
        <trans-unit id="aa9a9b9bea1d915cddc6e189a212373757505afc" translate="yes" xml:space="preserve">
          <source>Support for calling Test::Builder-&amp;gt;note is minimal. It's implemented as an empty stub, so modules that use it will not crash but the calls are not recorded for testing purposes like the others. Patches welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4152d06f964d8c8500926a55fcc080decb5f3944" translate="yes" xml:space="preserve">
          <source>Support for code 3 (italic) is rare and therefore not mentioned in that table. It is not believed to be fully supported by any of the terminals listed, although it's displayed as green in the Linux console, but it is reportedly supported by urxvt.</source>
          <target state="translated">Поддержка кода 3 (курсив)встречается редко и поэтому не упоминается в этой таблице.Считается,что он не полностью поддерживается ни одним из перечисленных терминалов,хотя в консоли Linux он отображается зеленым цветом,но,как сообщается,поддерживается urxvt.</target>
        </trans-unit>
        <trans-unit id="d13a3104d38bfebd2d8edefc71bb43ed89c25719" translate="yes" xml:space="preserve">
          <source>Support for colors 16 through 256 (the &lt;code&gt;ansi&lt;/code&gt; , &lt;code&gt;rgb&lt;/code&gt; , and &lt;code&gt;grey&lt;/code&gt; colors), the &lt;code&gt;:constants256&lt;/code&gt; import tag, the coloralias() function, and support for the ANSI_COLORS_ALIASES environment variable were added in Term::ANSIColor 4.00, included in Perl 5.17.8.</source>
          <target state="translated">В Term :: ANSIColor 4.00, включенном в Perl 5.17, была добавлена поддержка цветов с 16 по 256 (цвета &lt;code&gt;ansi&lt;/code&gt; , &lt;code&gt;rgb&lt;/code&gt; и &lt;code&gt;grey&lt;/code&gt; ), тег импорта &lt;code&gt;:constants256&lt;/code&gt; , функция coloralias () и поддержка переменной среды ANSI_COLORS_ALIASES. 8.</target>
        </trans-unit>
        <trans-unit id="21899951038dc28e07a818ac9d52e61c8083b56f" translate="yes" xml:space="preserve">
          <source>Support for colors 16 through 256 (the &lt;code&gt;ansi&lt;/code&gt;, &lt;code&gt;rgb&lt;/code&gt;, and &lt;code&gt;grey&lt;/code&gt; colors), the &lt;code&gt;:constants256&lt;/code&gt; import tag, the coloralias() function, and support for the ANSI_COLORS_ALIASES environment variable were added in Term::ANSIColor 4.00, included in Perl 5.17.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d79655477c957d3ded48d250eed51bd3ecf8ff" translate="yes" xml:space="preserve">
          <source>Support for colors 8 through 15 (the &lt;code&gt;bright_&lt;/code&gt; variants) was added in Term::ANSIColor 3.00, included in Perl 5.13.3.</source>
          <target state="translated">Поддержка цветов с 8 по 15 ( варианты &lt;code&gt;bright_&lt;/code&gt; ) была добавлена ​​в Term :: ANSIColor 3.00, включенном в Perl 5.13.3.</target>
        </trans-unit>
        <trans-unit id="3520e7db85802558bb1d2a5a7277d73d6dd7678b" translate="yes" xml:space="preserve">
          <source>Support for concurrent interpreters and the fork() emulation was implemented by ActiveState, with funding from Microsoft Corporation.</source>
          <target state="translated">Поддержка параллельных интерпретаторов и эмуляции fork()была реализована компанией ActiveState при финансовой поддержке корпорации Microsoft.</target>
        </trans-unit>
        <trans-unit id="46d9a08c8fe0a5fa65df6f50206b3d6f86276cea" translate="yes" xml:space="preserve">
          <source>Support for dark was added in Term::ANSIColor 1.08, included in Perl 5.8.4.</source>
          <target state="translated">В Term::ANSIColor 1.08 добавлена поддержка темного цвета,включенная в Perl 5.8.4.</target>
        </trans-unit>
        <trans-unit id="13c3f3679453dc21cf99ba9668b08821dc7c3536" translate="yes" xml:space="preserve">
          <source>Support for external gzip added by Jarkko Hietaniemi &amp;lt;</source>
          <target state="translated">Поддержка внешнего gzip добавлена ​​Яркко Хиетаниеми &amp;lt;</target>
        </trans-unit>
        <trans-unit id="c1d15c06235a8f38ea6479c09486fef84b83b91c" translate="yes" xml:space="preserve">
          <source>Support for fork() emulation was added in 5.6 (ActiveState Tool Corp).</source>
          <target state="translated">Поддержка эмуляции fork()была добавлена в 5.6 (ActiveState Tool Corp).</target>
        </trans-unit>
        <trans-unit id="4da419edd1ac30a4a7b7cbe60b1ff8e03675397f" translate="yes" xml:space="preserve">
          <source>Support for globally overriding glob() (GSAR 3-JUN-98)</source>
          <target state="translated">Поддержка глобальной переопределяющей функции Glob()(GSAR 3-JUN-98)</target>
        </trans-unit>
        <trans-unit id="52d4e9ac29525e6d8e33903392c09e0782a71a40" translate="yes" xml:space="preserve">
          <source>Support for italic was added in Term::ANSIColor 3.02, included in Perl 5.17.1.</source>
          <target state="translated">Добавлена поддержка курсива в Term::ANSIColor 3.02,включенная в Perl 5.17.1.</target>
        </trans-unit>
        <trans-unit id="5e61014798c019e10930e4b0e0ccb8e127ac816a" translate="yes" xml:space="preserve">
          <source>Support for output other than TAP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fee3b6033badb5f9d6b2ad7b4bd90ed22c35a68" translate="yes" xml:space="preserve">
          <source>Support for swapping real and effective user and group IDs is incomplete. On WinNT Cygwin provides &lt;code&gt;setuid()&lt;/code&gt; , &lt;code&gt;seteuid()&lt;/code&gt; , &lt;code&gt;setgid()&lt;/code&gt; and &lt;code&gt;setegid()&lt;/code&gt; . However, additional Cygwin calls for manipulating WinNT access tokens and security contexts are required.</source>
          <target state="translated">Поддержка обмена реальных и эффективных идентификаторов пользователей и групп не завершена. В WinNT Cygwin предоставляет &lt;code&gt;setuid()&lt;/code&gt; , &lt;code&gt;seteuid()&lt;/code&gt; , &lt;code&gt;setgid()&lt;/code&gt; и &lt;code&gt;setegid()&lt;/code&gt; . Однако требуются дополнительные вызовы Cygwin для управления токенами доступа WinNT и контекстами безопасности.</target>
        </trans-unit>
        <trans-unit id="5bb747be5ba781647f7ee9e1b01af00ae6891e82" translate="yes" xml:space="preserve">
          <source>Support for swapping real and effective user and group IDs is incomplete. On WinNT Cygwin provides &lt;code&gt;setuid()&lt;/code&gt;, &lt;code&gt;seteuid()&lt;/code&gt;, &lt;code&gt;setgid()&lt;/code&gt; and &lt;code&gt;setegid()&lt;/code&gt;. However, additional Cygwin calls for manipulating WinNT access tokens and security contexts are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112d45f23a800f84de37770824448a89f7d793b8" translate="yes" xml:space="preserve">
          <source>Support for this module is provided via the datetime@perl.org email list. See &lt;a href=&quot;http://lists.perl.org/&quot;&gt;http://lists.perl.org/&lt;/a&gt; for more details.</source>
          <target state="translated">Поддержка этого модуля осуществляется через список адресов электронной почты datetime@perl.org. См. &lt;a href=&quot;http://lists.perl.org/&quot;&gt;Http://lists.perl.org/&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b5dad507bd8d5ed70d50a2dce7e70ae220730928" translate="yes" xml:space="preserve">
          <source>Support for threading/forking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b47c288b94e063b5e848ebb4c141831f2f842b" translate="yes" xml:space="preserve">
          <source>Support for threads extends beyond the code in this module (i.e.,</source>
          <target state="translated">Поддержка потоков выходит за рамки кода в данном модуле (т.е,</target>
        </trans-unit>
        <trans-unit id="21dd6f486b02b193ff80841db50fc3fa27133663" translate="yes" xml:space="preserve">
          <source>Support for true color (the &lt;code&gt;rNNNgNNNbNNN&lt;/code&gt; and &lt;code&gt;on_rNNNgNNNbNNN&lt;/code&gt; attributes), defining aliases in terms of other aliases, and aliases mapping to multiple attributes instead of only a single attribute was added in Term::ANSIColor 5.00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebd54c9803d67645a6bec6e8a530fc77962d822" translate="yes" xml:space="preserve">
          <source>Supported Colors</source>
          <target state="translated">Поддерживаемые цвета</target>
        </trans-unit>
        <trans-unit id="a65b7f12a991185f44b505808bc867e90d749e20" translate="yes" xml:space="preserve">
          <source>Supported Compilers</source>
          <target state="translated">Поддерживаемые составители</target>
        </trans-unit>
        <trans-unit id="e86357f3df6067cf4701809cd469c16322e01a41" translate="yes" xml:space="preserve">
          <source>Supported Encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c494dc50dd3ab8063517ff409c4657b627cea738" translate="yes" xml:space="preserve">
          <source>Supported Perl API, sorted by version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="translated">Поддерживаемые платформы</target>
        </trans-unit>
        <trans-unit id="49b953a7424bb44dd08394b0aeda11553bb12089" translate="yes" xml:space="preserve">
          <source>Supported Platforms (Perl 5.8)</source>
          <target state="translated">Поддерживаемые платформы (Раздел 5.8)</target>
        </trans-unit>
        <trans-unit id="b1429d26115432e6f40c246dd70a7c60030a0632" translate="yes" xml:space="preserve">
          <source>Supported are: &lt;code&gt;build_requires_install_policy&lt;/code&gt; , &lt;code&gt;check_sigs&lt;/code&gt; , &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;make_install_make_command&lt;/code&gt; , &lt;code&gt;prefer_installer&lt;/code&gt; , &lt;code&gt;test_report&lt;/code&gt; . Please report as a bug when you need another one supported.</source>
          <target state="translated">Поддерживаются: &lt;code&gt;build_requires_install_policy&lt;/code&gt; , &lt;code&gt;check_sigs&lt;/code&gt; , &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;make_install_make_command&lt;/code&gt; , &lt;code&gt;prefer_installer&lt;/code&gt; , &lt;code&gt;test_report&lt;/code&gt; . Пожалуйста, сообщите об ошибке, если вам понадобится поддержка другого.</target>
        </trans-unit>
        <trans-unit id="a300efed490ba967b52cf87f5ed3078c87e2e5f8" translate="yes" xml:space="preserve">
          <source>Supported arguments are the same as for &lt;code&gt;tempfile&lt;/code&gt;: UNLINK (defaulting to true), DIR, EXLOCK and SUFFIX. Additionally, the filename template is specified using the TEMPLATE option. The OPEN option is not supported (the file is always opened).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef4367afdb333ca61c98475adcf339702a0de4a" translate="yes" xml:space="preserve">
          <source>Supported arguments are the same as for C</source>
          <target state="translated">Поддерживаемые аргументы такие же,как и для C</target>
        </trans-unit>
        <trans-unit id="fea58cf8a3651927bfad6193b75319d8c2af260d" translate="yes" xml:space="preserve">
          <source>Supported operators include &amp;lt; (less than), &amp;lt;= (less than or equal), &amp;gt; (greater than), &amp;gt;= (greater than or equal), == (equal), and != (not equal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee30f240e3b0641c58b8ea19a5ce4e73c13514" translate="yes" xml:space="preserve">
          <source>Supported versions of Perl</source>
          <target state="translated">Поддерживаемые версии Perl</target>
        </trans-unit>
        <trans-unit id="16d6bd14e545e871010e04ca5850bc1f495fe10f" translate="yes" xml:space="preserve">
          <source>Supporting CLICOLOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc8693c1249e9f6a0e8cf33a70dea32c26fa53d" translate="yes" xml:space="preserve">
          <source>Supports the same options as the &lt;code&gt;tempdir&lt;/code&gt; function. Note that directories created with this method default to CLEANUP =&amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab85bed1d3b1a215699ee5c1c8be8f331ffab56" translate="yes" xml:space="preserve">
          <source>Supports the same options as the C</source>
          <target state="translated">Поддерживает те же опции,что и C</target>
        </trans-unit>
        <trans-unit id="68a10bfa60258c2bbfe38e9f1a7ff60f4694f8f6" translate="yes" xml:space="preserve">
          <source>Suppose instead, that if no matching &quot;/endpara&quot; tag is found, the &quot;/para&quot; tag refers only to the immediately following paragraph:</source>
          <target state="translated">Предположим вместо этого,что если тег &quot;/endpara&quot; не найден,то тег &quot;/para&quot; относится только к непосредственному следующему параграфу:</target>
        </trans-unit>
        <trans-unit id="4a2e98ea3f847f379e1d62458409b455691002c8" translate="yes" xml:space="preserve">
          <source>Suppose that for some strange reason we need a wrapper around the standard C library function &lt;code&gt;fputs()&lt;/code&gt; . This is all we need:</source>
          <target state="translated">Предположим, что по какой-то странной причине нам нужна оболочка для стандартной библиотечной функции C &lt;code&gt;fputs()&lt;/code&gt; . Это все, что нам нужно:</target>
        </trans-unit>
        <trans-unit id="cc6556ba8db25d3e88bccf33270c985ae50ea100" translate="yes" xml:space="preserve">
          <source>Suppose that for some strange reason we need a wrapper around the standard C library function &lt;code&gt;fputs()&lt;/code&gt;. This is all we need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9713a66e131c3277390fd2e0a638134463da779" translate="yes" xml:space="preserve">
          <source>Suppose that in the previous example functions pointers for multiply(), divide(), add(), subtract() are kept in a global C array &lt;code&gt;fp[]&lt;/code&gt; with offsets being &lt;code&gt;multiply_off&lt;/code&gt; , &lt;code&gt;divide_off&lt;/code&gt; , &lt;code&gt;add_off&lt;/code&gt; , &lt;code&gt;subtract_off&lt;/code&gt; . Then one can use</source>
          <target state="translated">Предположим, что в предыдущем примере указатели функций для multiply (), div (), add (), subtract () хранятся в глобальном C-массиве &lt;code&gt;fp[]&lt;/code&gt; со смещениями &lt;code&gt;multiply_off&lt;/code&gt; , &lt;code&gt;divide_off&lt;/code&gt; , &lt;code&gt;add_off&lt;/code&gt; , &lt;code&gt;subtract_off&lt;/code&gt; . Тогда можно использовать</target>
        </trans-unit>
        <trans-unit id="ea8ab19bf86289ef6108d40f927555e5f4e3c590" translate="yes" xml:space="preserve">
          <source>Suppose that in the previous example functions pointers for multiply(), divide(), add(), subtract() are kept in a global C array &lt;code&gt;fp[]&lt;/code&gt; with offsets being &lt;code&gt;multiply_off&lt;/code&gt;, &lt;code&gt;divide_off&lt;/code&gt;, &lt;code&gt;add_off&lt;/code&gt;, &lt;code&gt;subtract_off&lt;/code&gt;. Then one can use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b728cf8454bb8ebd395d51ef450a37f61ee3df" translate="yes" xml:space="preserve">
          <source>Suppose that we want to enable a new RE escape-sequence &lt;code&gt;\Y|&lt;/code&gt; which matches at a boundary between whitespace characters and non-whitespace characters. Note that &lt;code&gt;(?=\S)(?&amp;lt;!\S)|(?!\S)(?&amp;lt;=\S)&lt;/code&gt; matches exactly at these positions, so we want to have each &lt;code&gt;\Y|&lt;/code&gt; in the place of the more complicated version. We can create a module &lt;code&gt;customre&lt;/code&gt; to do this:</source>
          <target state="translated">Предположим, что мы хотим включить новую escape-последовательность RE &lt;code&gt;\Y|&lt;/code&gt; который соответствует границе между пробельными символами и непробельными символами. Обратите внимание, что &lt;code&gt;(?=\S)(?&amp;lt;!\S)|(?!\S)(?&amp;lt;=\S)&lt;/code&gt; соответствует точно в этих позициях, поэтому мы хотим, чтобы каждый &lt;code&gt;\Y|&lt;/code&gt; вместо более сложной версии. Для этого мы можем создать модуль &lt;code&gt;customre&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5ab2eaff078de5c28b462a36a77339cffbb8f320" translate="yes" xml:space="preserve">
          <source>Suppose that you have some C files implementing some functionality, and the corresponding header files. How to create an extension which makes this functionality accessible in Perl? The example below assumes that the header files are</source>
          <target state="translated">Предположим,что у вас есть несколько C-файлов,реализующих некоторый функционал,и соответствующие заголовочные файлы.Как создать расширение,делающее эту функциональность доступной на Perl? В примере ниже предполагается,что заголовочные файлы-это</target>
        </trans-unit>
        <trans-unit id="0a98ed263af8d4ba63e18dadba6d2dc4eec20053" translate="yes" xml:space="preserve">
          <source>Suppose we wrote the following string to a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38ce69c0f981610bad14796ceb31eadf517ce86" translate="yes" xml:space="preserve">
          <source>Suppose you want to create an object which is accessible as both an array reference and a hash reference.</source>
          <target state="translated">Предположим,вы хотите создать объект,доступный как в виде ссылки на массив,так и в виде ссылки на хэш.</target>
        </trans-unit>
        <trans-unit id="abacd026fc80e9051241fe69f59c13539803bbd4" translate="yes" xml:space="preserve">
          <source>Suppose you want to match all of consecutive pairs of digits in a string like &quot;1122a44&quot; and stop matching when you encounter non-digits. You want to match &lt;code&gt;11&lt;/code&gt; and &lt;code&gt;22&lt;/code&gt; but the letter &amp;lt;a&amp;gt; shows up between &lt;code&gt;22&lt;/code&gt; and &lt;code&gt;44&lt;/code&gt; and you want to stop at &lt;code&gt;a&lt;/code&gt; . Simply matching pairs of digits skips over the &lt;code&gt;a&lt;/code&gt; and still matches &lt;code&gt;44&lt;/code&gt; .</source>
          <target state="translated">Предположим, вы хотите сопоставить все последовательные пары цифр в строке типа &amp;laquo;1122a44&amp;raquo; и прекратить сопоставление, когда вы встретите нецифровые символы. Вы хотите сопоставить &lt;code&gt;11&lt;/code&gt; и &lt;code&gt;22&lt;/code&gt; , но буква &amp;lt;a&amp;gt; появляется между &lt;code&gt;22&lt;/code&gt; и &lt;code&gt;44&lt;/code&gt; , и вы хотите остановиться на &lt;code&gt;a&lt;/code&gt; . Простое совпадение пар цифр пропускает &lt;code&gt;a&lt;/code&gt; и все равно соответствует &lt;code&gt;44&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43b6b33a52cb0c2ab7e4d2d5a81bdf49073103dc" translate="yes" xml:space="preserve">
          <source>Suppose you want to match all of consecutive pairs of digits in a string like &quot;1122a44&quot; and stop matching when you encounter non-digits. You want to match &lt;code&gt;11&lt;/code&gt; and &lt;code&gt;22&lt;/code&gt; but the letter &lt;code&gt;a&lt;/code&gt; shows up between &lt;code&gt;22&lt;/code&gt; and &lt;code&gt;44&lt;/code&gt; and you want to stop at &lt;code&gt;a&lt;/code&gt;. Simply matching pairs of digits skips over the &lt;code&gt;a&lt;/code&gt; and still matches &lt;code&gt;44&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc722b9b16484d706d6ab120abc391e667f22c8" translate="yes" xml:space="preserve">
          <source>Suppose you wanted &lt;code&gt;ARGUMENTS&lt;/code&gt; to be an empty list,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f46adab557fd8dab8b4b0b09a159b2654c69a5" translate="yes" xml:space="preserve">
          <source>Suppose you wanted to match only the allocated characters, not the raw block ranges: in other words, you want to remove the unassigned characters:</source>
          <target state="translated">Предположим,вы хотите сопоставить только выделенные символы,а не диапазоны необработанных блоков:другими словами,вы хотите удалить неназначенные символы:</target>
        </trans-unit>
        <trans-unit id="7282725934a73028b4873e419044ca1541b7ef81" translate="yes" xml:space="preserve">
          <source>Suppose your function looks like this:</source>
          <target state="translated">Предположим,твоя функция выглядит так:</target>
        </trans-unit>
        <trans-unit id="3cdc33b87c0a24861f5653d7a4749ecf4d10599b" translate="yes" xml:space="preserve">
          <source>Suppress statically defined functions from the profile.</source>
          <target state="translated">Подавление статически определенных функций из профиля.</target>
        </trans-unit>
        <trans-unit id="f000eea4b15966462d081470a0dbb8675e040042" translate="yes" xml:space="preserve">
          <source>Suppress the verbose descriptions in the profile.</source>
          <target state="translated">Подавите многословные описания в профиле.</target>
        </trans-unit>
        <trans-unit id="b1d411f9454876226deea65132d8958b5f310ebd" translate="yes" xml:space="preserve">
          <source>Suppresses echoing of input data on the screen as it is entered on the keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4ca7a4b62d0d93f13a11c00e6e1ef2ac15f93d" translate="yes" xml:space="preserve">
          <source>Suppressing Lines Where All Fields Are Void</source>
          <target state="translated">Подавление линий,где все поля пусты.</target>
        </trans-unit>
        <trans-unit id="f8a4d33a75006d37aaaa326a12ea28f45b06e609" translate="yes" xml:space="preserve">
          <source>Suppressing all output.</source>
          <target state="translated">Подавление всей мощности.</target>
        </trans-unit>
        <trans-unit id="4db0aec339465e45f71592f3d61d3b7d5519b564" translate="yes" xml:space="preserve">
          <source>Suppressing everything but the tests summary.</source>
          <target state="translated">Подавление всего,кроме результатов анализов.</target>
        </trans-unit>
        <trans-unit id="3118002fe0231bc240b745efda50a51f4811af55" translate="yes" xml:space="preserve">
          <source>Suppressing some test output (mostly failures while tests are running).</source>
          <target state="translated">Подавление некоторых тестовых выходных данных (в основном,сбоев во время выполнения тестов).</target>
        </trans-unit>
        <trans-unit id="2f0421f55fddacae44a5e70879884253681983a3" translate="yes" xml:space="preserve">
          <source>Surprisingly, &lt;code&gt;decode&lt;/code&gt; will ignore these flags and so treat all input values as governed by the &lt;code&gt;utf8&lt;/code&gt; flag. If it is disabled, this allows you to decode ISO-8859-1- and ASCII-encoded strings, as both strict subsets of Unicode. If it is enabled, you can correctly decode UTF-8 encoded strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf2f474284f3bb3469459a5f2e282c817445e0a" translate="yes" xml:space="preserve">
          <source>Surprisingly, the following dangerous-looking construct will actually work out fine:</source>
          <target state="translated">Удивительно,но следующие опасные конструкции на самом деле сработают:</target>
        </trans-unit>
        <trans-unit id="89de18d6062f8f62c80480423d64e1771fc8ce04" translate="yes" xml:space="preserve">
          <source>Surprisingly, the routines to be called are named &lt;code&gt;freeze&lt;/code&gt; and &lt;code&gt;thaw&lt;/code&gt; . If you wish to send out the frozen scalar to another machine, use &lt;code&gt;nfreeze&lt;/code&gt; instead to get a portable image.</source>
          <target state="translated">Удивительно, но вызываемые процедуры называются &lt;code&gt;freeze&lt;/code&gt; и &lt;code&gt;thaw&lt;/code&gt; . Если вы хотите отправить замороженный скаляр на другую машину, используйте вместо этого &lt;code&gt;nfreeze&lt;/code&gt; , чтобы получить переносимый образ.</target>
        </trans-unit>
        <trans-unit id="38b1f8d5199fc680c670a3cdffbc331409087673" translate="yes" xml:space="preserve">
          <source>Surprisingly, the routines to be called are named &lt;code&gt;freeze&lt;/code&gt; and &lt;code&gt;thaw&lt;/code&gt;. If you wish to send out the frozen scalar to another machine, use &lt;code&gt;nfreeze&lt;/code&gt; instead to get a portable image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a047875b873f6d1d398e86dbb7108d34705540" translate="yes" xml:space="preserve">
          <source>Surrogate Pairs</source>
          <target state="translated">Суррогатные пары</target>
        </trans-unit>
        <trans-unit id="07a0eab00168ce9bedc809f5ad8c9eb56cbd1edb" translate="yes" xml:space="preserve">
          <source>Surrogate pairs were born when the Unicode Consortium finally admitted that 16 bits were not big enough to hold all the world's character repertoires. But they already made UCS-2 16-bit. What do we do?</source>
          <target state="translated">Суррогатные пары родились,когда консорциум &quot;Юникод&quot; наконец признал,что 16 бит недостаточно велики,чтобы вместить весь мировой репертуар персонажей.Но они уже сделали UCS-2 16-битным.Что же нам делать?</target>
        </trans-unit>
        <trans-unit id="1eaaa69a37b20a485ea6f0e51d7a77d119e19f29" translate="yes" xml:space="preserve">
          <source>Surrogates are code points set aside to encode the &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; range of Unicode code points in pairs of 16-bit units. The</source>
          <target state="translated">Суррогаты - это кодовые точки, выделенные для кодирования диапазона &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; кодовых точек Unicode парами из 16-битных единиц. В</target>
        </trans-unit>
        <trans-unit id="856dbe523b5bc18c3ac9b4ef67ed5a73d664d082" translate="yes" xml:space="preserve">
          <source>Surrogates have no meaning in Unicode outside their use in pairs to represent other code points. However, Perl allows them to be represented individually internally, for example by saying &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0xD801)&lt;/a&gt;&lt;/code&gt;, so that all code points, not just those valid for open interchange, are representable. Unicode does define semantics for them, such as their &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;Cs&quot;&lt;/code&gt; . But because their use is somewhat dangerous, Perl will warn (using the warning category &lt;code&gt;&quot;surrogate&quot;&lt;/code&gt; , which is a sub-category of &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; ) if an attempt is made to do things like take the lower case of one, or match case-insensitively, or to output them. (But don't try this on Perls before 5.14.)</source>
          <target state="translated">Суррогаты не имеют значения в Юникоде, за исключением того, что они используются парами для представления других кодовых точек. Однако Perl позволяет представлять их индивидуально внутри, например, говоря &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0xD801)&lt;/a&gt;&lt;/code&gt; , так что все кодовые точки, а не только те, которые допустимы для открытого обмена, могут быть представлены. Unicode действительно определяет для них семантику, например, их &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;&quot;Cs&quot;&lt;/code&gt; . Но поскольку их использование несколько опасно, Perl будет предупреждать (используя категорию предупреждений &lt;code&gt;&quot;surrogate&quot;&lt;/code&gt; , которая является подкатегорией &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; ), если будет предпринята попытка сделать что-то вроде взятия единицы в нижнем регистре или совпадения регистра -нечувствительно, или выводить их. (Но не пробуйте это на Perls до 5.14.)</target>
        </trans-unit>
        <trans-unit id="7e4f255eb9d4da0b778db2cbd0767cd7435fa252" translate="yes" xml:space="preserve">
          <source>Surrogates have no meaning in Unicode outside their use in pairs to represent other code points. However, Perl allows them to be represented individually internally, for example by saying &lt;code&gt;chr(0xD801)&lt;/code&gt;, so that all code points, not just those valid for open interchange, are representable. Unicode does define semantics for them, such as their &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;Cs&quot;&lt;/code&gt;. But because their use is somewhat dangerous, Perl will warn (using the warning category &lt;code&gt;&quot;surrogate&quot;&lt;/code&gt;, which is a sub-category of &lt;code&gt;&quot;utf8&quot;&lt;/code&gt;) if an attempt is made to do things like take the lower case of one, or match case-insensitively, or to output them. (But don't try this on Perls before 5.14.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540da7a8cd172c1838160d487b9d7ef0924efc97" translate="yes" xml:space="preserve">
          <source>Suspicious Warnings on Cygwin</source>
          <target state="translated">Подозрительные предупреждения о Сигвине.</target>
        </trans-unit>
        <trans-unit id="ade7a22fa4aa1143e2d2d4f40f65a94eb90d8572" translate="yes" xml:space="preserve">
          <source>SvAMAGIC_off</source>
          <target state="translated">SvAMAGIC_off</target>
        </trans-unit>
        <trans-unit id="9b9fa0e67675873845864411f1905f615bc33d13" translate="yes" xml:space="preserve">
          <source>SvAMAGIC_on</source>
          <target state="translated">SvAMAGIC_on</target>
        </trans-unit>
        <trans-unit id="2425fee0a45344518684d0c9b14dde2323fe9de7" translate="yes" xml:space="preserve">
          <source>SvCUR</source>
          <target state="translated">SvCUR</target>
        </trans-unit>
        <trans-unit id="6058a9ad780b864ec71080d419dca4d99c96b0e6" translate="yes" xml:space="preserve">
          <source>SvCUR_set</source>
          <target state="translated">SvCUR_set</target>
        </trans-unit>
        <trans-unit id="661476f7df6dbc01af035711108e0d1500868903" translate="yes" xml:space="preserve">
          <source>SvEND</source>
          <target state="translated">SvEND</target>
        </trans-unit>
        <trans-unit id="e59e241299dce8584448d13053a18ac8814b51ab" translate="yes" xml:space="preserve">
          <source>SvGAMAGIC</source>
          <target state="translated">SvGAMAGIC</target>
        </trans-unit>
        <trans-unit id="aebf3d2208b03126421cfebdd2654ea2db0a30f7" translate="yes" xml:space="preserve">
          <source>SvGETMAGIC</source>
          <target state="translated">SvGETMAGIC</target>
        </trans-unit>
        <trans-unit id="4ddf923c756d56139db1069ad97f7b8f40e70f94" translate="yes" xml:space="preserve">
          <source>SvGROW</source>
          <target state="translated">SvGROW</target>
        </trans-unit>
        <trans-unit id="abfa953c1fed37e05526c0219c09e917f51bbd9e" translate="yes" xml:space="preserve">
          <source>SvIOK</source>
          <target state="translated">SvIOK</target>
        </trans-unit>
        <trans-unit id="c0e62457bc773af183a3e1d8cda75a5f3adbaf1c" translate="yes" xml:space="preserve">
          <source>SvIOK_UV</source>
          <target state="translated">SvIOK_UV</target>
        </trans-unit>
        <trans-unit id="cfbeae889fea001d8bb1a161c1f0da0c7af2b5f7" translate="yes" xml:space="preserve">
          <source>SvIOK_notUV</source>
          <target state="translated">SvIOK_notUV</target>
        </trans-unit>
        <trans-unit id="8f0272bd6fc26a005d760d2fea687329b0e4a68c" translate="yes" xml:space="preserve">
          <source>SvIOK_off</source>
          <target state="translated">SvIOK_off</target>
        </trans-unit>
        <trans-unit id="34a30cb8e77826bc36fe6388f6c8eb39936d73d8" translate="yes" xml:space="preserve">
          <source>SvIOK_on</source>
          <target state="translated">SvIOK_on</target>
        </trans-unit>
        <trans-unit id="eed3c603a946c2dcc8e9ac46fa3cd88ac634ee17" translate="yes" xml:space="preserve">
          <source>SvIOK_only</source>
          <target state="translated">SvIOK_only</target>
        </trans-unit>
        <trans-unit id="13e3f4df7cd8f72b57259101aa3948f2204a9335" translate="yes" xml:space="preserve">
          <source>SvIOK_only_UV</source>
          <target state="translated">SvIOK_only_UV</target>
        </trans-unit>
        <trans-unit id="45a18c6bb3b31a95939140770d9eaf87b85c8af4" translate="yes" xml:space="preserve">
          <source>SvIOKp</source>
          <target state="translated">SvIOKp</target>
        </trans-unit>
        <trans-unit id="e58c0b91b4f10ba7ea023ead483916f688590254" translate="yes" xml:space="preserve">
          <source>SvIV</source>
          <target state="translated">SvIV</target>
        </trans-unit>
        <trans-unit id="1e1cd0c78512c809bc8f82ce5a88755a660fc1dd" translate="yes" xml:space="preserve">
          <source>SvIV()</source>
          <target state="translated">SvIV()</target>
        </trans-unit>
        <trans-unit id="e3f836b31a83cc11f5f8cc34d3ffa47690b79351" translate="yes" xml:space="preserve">
          <source>SvIVX</source>
          <target state="translated">SvIVX</target>
        </trans-unit>
        <trans-unit id="a7e83f79d851aa05c23e8e127c1c0104d7becb61" translate="yes" xml:space="preserve">
          <source>SvIV_nomg</source>
          <target state="translated">SvIV_nomg</target>
        </trans-unit>
        <trans-unit id="d54d9f546b2a3ee3896c8e62f21916b605c8749e" translate="yes" xml:space="preserve">
          <source>SvIV_set</source>
          <target state="translated">SvIV_set</target>
        </trans-unit>
        <trans-unit id="d0e6c181ed31a5825fe2aba5e86b6714622736fc" translate="yes" xml:space="preserve">
          <source>SvIVx</source>
          <target state="translated">SvIVx</target>
        </trans-unit>
        <trans-unit id="bfb611e82edc20e454e089941049df596bb71192" translate="yes" xml:space="preserve">
          <source>SvIsCOW</source>
          <target state="translated">SvIsCOW</target>
        </trans-unit>
        <trans-unit id="9aecfe6c9cbba3f5b8ffdf25297fd019b7b2eaf2" translate="yes" xml:space="preserve">
          <source>SvIsCOW_shared_hash</source>
          <target state="translated">SvIsCOW_shared_hash</target>
        </trans-unit>
        <trans-unit id="80a0475edeea5c18e06234c9d64a8fcc2e3f6c39" translate="yes" xml:space="preserve">
          <source>SvLEN</source>
          <target state="translated">SvLEN</target>
        </trans-unit>
        <trans-unit id="556d85f2a0063cc9ba584af5e853a1ceb2f6783d" translate="yes" xml:space="preserve">
          <source>SvLEN_set</source>
          <target state="translated">SvLEN_set</target>
        </trans-unit>
        <trans-unit id="97aec17efc79908cfbaf02941eae143d8b976a42" translate="yes" xml:space="preserve">
          <source>SvLOCK</source>
          <target state="translated">SvLOCK</target>
        </trans-unit>
        <trans-unit id="84cc200fa83f3f6ed106b0dd44cb7c16363e0435" translate="yes" xml:space="preserve">
          <source>SvMAGIC_set</source>
          <target state="translated">SvMAGIC_set</target>
        </trans-unit>
        <trans-unit id="d379abe0c8da0cf1e20d037eb2f8185f062b9489" translate="yes" xml:space="preserve">
          <source>SvNIOK</source>
          <target state="translated">SvNIOK</target>
        </trans-unit>
        <trans-unit id="fb4f99f52267211a93dc9edb5e96013ebf799d8e" translate="yes" xml:space="preserve">
          <source>SvNIOK_off</source>
          <target state="translated">SvNIOK_off</target>
        </trans-unit>
        <trans-unit id="defaa8b9a1718665f488a28ac6a6a046a710c0d6" translate="yes" xml:space="preserve">
          <source>SvNIOKp</source>
          <target state="translated">SvNIOKp</target>
        </trans-unit>
        <trans-unit id="ca25134015aee24be79876d35dd93a74df11c721" translate="yes" xml:space="preserve">
          <source>SvNOK</source>
          <target state="translated">SvNOK</target>
        </trans-unit>
        <trans-unit id="baaa77e5fd0bf7672f89eaeb72acc5efa6ff8b0c" translate="yes" xml:space="preserve">
          <source>SvNOK_off</source>
          <target state="translated">SvNOK_off</target>
        </trans-unit>
        <trans-unit id="dd1f88650a4a7b063453463c4580f0b16fabe2d4" translate="yes" xml:space="preserve">
          <source>SvNOK_on</source>
          <target state="translated">SvNOK_on</target>
        </trans-unit>
        <trans-unit id="1b8500076baeb528cecf476027ad962a134be104" translate="yes" xml:space="preserve">
          <source>SvNOK_only</source>
          <target state="translated">SvNOK_only</target>
        </trans-unit>
        <trans-unit id="df8a270b374b63fb7ad234036190cb6d9599dc79" translate="yes" xml:space="preserve">
          <source>SvNOKp</source>
          <target state="translated">SvNOKp</target>
        </trans-unit>
        <trans-unit id="17482a420e00ffd25f7122c8a4e97ab029e48c16" translate="yes" xml:space="preserve">
          <source>SvNV</source>
          <target state="translated">SvNV</target>
        </trans-unit>
        <trans-unit id="dbc4878fd112ac06a09fc11cde47bb125aee2c3f" translate="yes" xml:space="preserve">
          <source>SvNV()</source>
          <target state="translated">SvNV()</target>
        </trans-unit>
        <trans-unit id="f62717e28cc640cdf47f8dd6ee4c879eb42bea28" translate="yes" xml:space="preserve">
          <source>SvNVX</source>
          <target state="translated">SvNVX</target>
        </trans-unit>
        <trans-unit id="dd86bbe5ae725800fcf2d56c703e0a31d42e3a42" translate="yes" xml:space="preserve">
          <source>SvNV_nomg</source>
          <target state="translated">SvNV_nomg</target>
        </trans-unit>
        <trans-unit id="c026cc4a3dbd70507f3a01baf8b04c8414942781" translate="yes" xml:space="preserve">
          <source>SvNV_set</source>
          <target state="translated">SvNV_set</target>
        </trans-unit>
        <trans-unit id="6a541df7bd973627ec28ca14270b2c53a16dac8e" translate="yes" xml:space="preserve">
          <source>SvNVx</source>
          <target state="translated">SvNVx</target>
        </trans-unit>
        <trans-unit id="020d091cc2310c06e45f2bc3d53eba7c49731b6d" translate="yes" xml:space="preserve">
          <source>SvOK</source>
          <target state="translated">SvOK</target>
        </trans-unit>
        <trans-unit id="0580de03ad05ae223672bac31eca2ff976a459f8" translate="yes" xml:space="preserve">
          <source>SvOOK</source>
          <target state="translated">SvOOK</target>
        </trans-unit>
        <trans-unit id="4dde88ed106842ab159cd28a6c4d036172ee28c7" translate="yes" xml:space="preserve">
          <source>SvOOK_offset</source>
          <target state="translated">SvOOK_offset</target>
        </trans-unit>
        <trans-unit id="b4ad9d1f5c7f6646cd2710f7f7da0b899e3a96cb" translate="yes" xml:space="preserve">
          <source>SvPOK</source>
          <target state="translated">SvPOK</target>
        </trans-unit>
        <trans-unit id="5654f39dee44eae829fb8b496682a50f0982a5e7" translate="yes" xml:space="preserve">
          <source>SvPOK_off</source>
          <target state="translated">SvPOK_off</target>
        </trans-unit>
        <trans-unit id="3fc674f1095783934e3ac6f2709bc63b02d7430c" translate="yes" xml:space="preserve">
          <source>SvPOK_on</source>
          <target state="translated">SvPOK_on</target>
        </trans-unit>
        <trans-unit id="63cf7f854220f91309bc16c8b83e2c3a33c8ab02" translate="yes" xml:space="preserve">
          <source>SvPOK_only</source>
          <target state="translated">SvPOK_only</target>
        </trans-unit>
        <trans-unit id="6181decd9d199af54afc923b0ff0ebf390a6d7b4" translate="yes" xml:space="preserve">
          <source>SvPOK_only_UTF8</source>
          <target state="translated">SvPOK_only_UTF8</target>
        </trans-unit>
        <trans-unit id="1f6818d473538e1037ae99abfd3928b6194d55f4" translate="yes" xml:space="preserve">
          <source>SvPOKp</source>
          <target state="translated">SvPOKp</target>
        </trans-unit>
        <trans-unit id="7565784ec8ed0b2a10e7ce11934bff895f7866ad" translate="yes" xml:space="preserve">
          <source>SvPV</source>
          <target state="translated">SvPV</target>
        </trans-unit>
        <trans-unit id="935c09deb58ecb63d6891adc1aabec93c4c8a5b7" translate="yes" xml:space="preserve">
          <source>SvPV()</source>
          <target state="translated">SvPV()</target>
        </trans-unit>
        <trans-unit id="bf9de3c1167813342adaabc11e3c1b95d085aee2" translate="yes" xml:space="preserve">
          <source>SvPVCLEAR</source>
          <target state="translated">SvPVCLEAR</target>
        </trans-unit>
        <trans-unit id="441e4866b0c8dfdb41e2b081d770159832861536" translate="yes" xml:space="preserve">
          <source>SvPVX</source>
          <target state="translated">SvPVX</target>
        </trans-unit>
        <trans-unit id="bb779035a6b5212f5bc497064139d582eac78761" translate="yes" xml:space="preserve">
          <source>SvPV_force</source>
          <target state="translated">SvPV_force</target>
        </trans-unit>
        <trans-unit id="a371ca6a1e78ccac0de2a78800f60864935747e1" translate="yes" xml:space="preserve">
          <source>SvPV_force_nomg</source>
          <target state="translated">SvPV_force_nomg</target>
        </trans-unit>
        <trans-unit id="e460005b105a2b7bfd76b6a69fac89cf40b7f1d9" translate="yes" xml:space="preserve">
          <source>SvPV_nolen</source>
          <target state="translated">SvPV_nolen</target>
        </trans-unit>
        <trans-unit id="ee503ff4f441fd072927bc4adf1a3b2b61c96eb8" translate="yes" xml:space="preserve">
          <source>SvPV_nomg</source>
          <target state="translated">SvPV_nomg</target>
        </trans-unit>
        <trans-unit id="7dc0def922bcc926f6b2a0768c4dc6365edb9c39" translate="yes" xml:space="preserve">
          <source>SvPV_nomg_nolen</source>
          <target state="translated">SvPV_nomg_nolen</target>
        </trans-unit>
        <trans-unit id="b294767f00b4898e2955e33a91d5667698462a42" translate="yes" xml:space="preserve">
          <source>SvPV_set</source>
          <target state="translated">SvPV_set</target>
        </trans-unit>
        <trans-unit id="8dfe9329a5a7e9cb118b1baf10944b5ae534ec2e" translate="yes" xml:space="preserve">
          <source>SvPVbyte</source>
          <target state="translated">SvPVbyte</target>
        </trans-unit>
        <trans-unit id="a42257f4844c980ccf0e6066f8db9f6f15894819" translate="yes" xml:space="preserve">
          <source>SvPVbyte_force</source>
          <target state="translated">SvPVbyte_force</target>
        </trans-unit>
        <trans-unit id="37adc1f4cfd7a587db4e891abb49367190445337" translate="yes" xml:space="preserve">
          <source>SvPVbyte_nolen</source>
          <target state="translated">SvPVbyte_nolen</target>
        </trans-unit>
        <trans-unit id="7923345fa2b2955faca8c97835509b73e61c0f71" translate="yes" xml:space="preserve">
          <source>SvPVbyte_nomg</source>
          <target state="translated">SvPVbyte_nomg</target>
        </trans-unit>
        <trans-unit id="7dabdc96dfd70ff777704e95caf484a1bbd67626" translate="yes" xml:space="preserve">
          <source>SvPVbyte_or_null</source>
          <target state="translated">SvPVbyte_or_null</target>
        </trans-unit>
        <trans-unit id="6f473eaded3b18d22bd0cfbd398f1d3838819074" translate="yes" xml:space="preserve">
          <source>SvPVbyte_or_null_nomg</source>
          <target state="translated">SvPVbyte_or_null_nomg</target>
        </trans-unit>
        <trans-unit id="00286cef8b77db9493694652d7e00120622a74fd" translate="yes" xml:space="preserve">
          <source>SvPVbytex</source>
          <target state="translated">SvPVbytex</target>
        </trans-unit>
        <trans-unit id="fed8330e0b39b1ac7a27526d358e6d7bd6a90609" translate="yes" xml:space="preserve">
          <source>SvPVbytex_force</source>
          <target state="translated">SvPVbytex_force</target>
        </trans-unit>
        <trans-unit id="b302138ff008911538b45179c44f73ff2f15910d" translate="yes" xml:space="preserve">
          <source>SvPVutf8</source>
          <target state="translated">SvPVutf8</target>
        </trans-unit>
        <trans-unit id="a8de8e18c45d70ca0a2ee1f75e6737824757551e" translate="yes" xml:space="preserve">
          <source>SvPVutf8_force</source>
          <target state="translated">SvPVutf8_force</target>
        </trans-unit>
        <trans-unit id="34b12f7ac99c5d36b41f8c87cb93ef246cef0211" translate="yes" xml:space="preserve">
          <source>SvPVutf8_nolen</source>
          <target state="translated">SvPVutf8_nolen</target>
        </trans-unit>
        <trans-unit id="423ddab605b2202c3b3c7cf1a6aab74e87847180" translate="yes" xml:space="preserve">
          <source>SvPVutf8_nomg</source>
          <target state="translated">SvPVutf8_nomg</target>
        </trans-unit>
        <trans-unit id="4266cc27f9fcb29ce91587ace651e07d810d65b5" translate="yes" xml:space="preserve">
          <source>SvPVutf8_or_null</source>
          <target state="translated">SvPVutf8_or_null</target>
        </trans-unit>
        <trans-unit id="d92f3b72d1647089e88a44d2515cd6a801386b09" translate="yes" xml:space="preserve">
          <source>SvPVutf8_or_null_nomg</source>
          <target state="translated">SvPVutf8_or_null_nomg</target>
        </trans-unit>
        <trans-unit id="35823de756974d226740f00e5c68a6481e4ed0de" translate="yes" xml:space="preserve">
          <source>SvPVutf8x</source>
          <target state="translated">SvPVutf8x</target>
        </trans-unit>
        <trans-unit id="7def8a7e5746a1d922bd31c60d3cb8a70d51aa60" translate="yes" xml:space="preserve">
          <source>SvPVutf8x_force</source>
          <target state="translated">SvPVutf8x_force</target>
        </trans-unit>
        <trans-unit id="6b594f1f8b6cd1295001275a5c619bad5200c1fb" translate="yes" xml:space="preserve">
          <source>SvPVx</source>
          <target state="translated">SvPVx</target>
        </trans-unit>
        <trans-unit id="4fa947438e302d4c0cfa0fd091b866be1356e841" translate="yes" xml:space="preserve">
          <source>SvREADONLY</source>
          <target state="translated">SvREADONLY</target>
        </trans-unit>
        <trans-unit id="be79d366d9292bb9353ad47fa578f3ba4c51d644" translate="yes" xml:space="preserve">
          <source>SvREADONLY(THING, [, $value])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76ee936f6a9d9874c72ac97c2ae38c0ac457002" translate="yes" xml:space="preserve">
          <source>SvREADONLY_off</source>
          <target state="translated">SvREADONLY_off</target>
        </trans-unit>
        <trans-unit id="ebbbefde1cfff96f373b3af6c19695b6b47fe85c" translate="yes" xml:space="preserve">
          <source>SvREADONLY_on</source>
          <target state="translated">SvREADONLY_on</target>
        </trans-unit>
        <trans-unit id="41356e74473a3c2dd231981a54cbf8916dae6a6f" translate="yes" xml:space="preserve">
          <source>SvREFCNT</source>
          <target state="translated">SvREFCNT</target>
        </trans-unit>
        <trans-unit id="e21722a974d6353587902b5def5af30f86188580" translate="yes" xml:space="preserve">
          <source>SvREFCNT(THING [, $value])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbc1bf9563ab155051e035e471f156eba22dc15" translate="yes" xml:space="preserve">
          <source>SvREFCNT_dec</source>
          <target state="translated">SvREFCNT_dec</target>
        </trans-unit>
        <trans-unit id="6d3d7d60ea55b7e2400d8e3c957adb22ceec857f" translate="yes" xml:space="preserve">
          <source>SvREFCNT_dec_NN</source>
          <target state="translated">SvREFCNT_dec_NN</target>
        </trans-unit>
        <trans-unit id="d6d6cfefd8cf7744542e901404792f234eef8a87" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc</source>
          <target state="translated">SvREFCNT_inc</target>
        </trans-unit>
        <trans-unit id="b1c71741a55c44f3cf76f940293fd4e4067b6c8c" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_NN</source>
          <target state="translated">SvREFCNT_inc_NN</target>
        </trans-unit>
        <trans-unit id="6e813ab000508b7b24df3398011a2c9c250e9d3d" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_simple</source>
          <target state="translated">SvREFCNT_inc_simple</target>
        </trans-unit>
        <trans-unit id="67b0407bf6132cb27ed090533a37abfe3f7d17e7" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_simple_NN</source>
          <target state="translated">SvREFCNT_inc_simple_NN</target>
        </trans-unit>
        <trans-unit id="355f655fe4c86d54f671992d7a810ce7e8512bc2" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_simple_void</source>
          <target state="translated">SvREFCNT_inc_simple_void</target>
        </trans-unit>
        <trans-unit id="822614c7d4b2a58a9282398c20eb02c49458d68d" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_simple_void_NN</source>
          <target state="translated">SvREFCNT_inc_simple_void_NN</target>
        </trans-unit>
        <trans-unit id="c6f050b18183b6e90800a93ea7e82b46868d707f" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_void</source>
          <target state="translated">SvREFCNT_inc_void</target>
        </trans-unit>
        <trans-unit id="149f6e6626b6f4ebd70bdf3a3eb889b7ec93bdf3" translate="yes" xml:space="preserve">
          <source>SvREFCNT_inc_void_NN</source>
          <target state="translated">SvREFCNT_inc_void_NN</target>
        </trans-unit>
        <trans-unit id="3889ade1aec07364b71e18598417719a90402368" translate="yes" xml:space="preserve">
          <source>SvROK</source>
          <target state="translated">SvROK</target>
        </trans-unit>
        <trans-unit id="b4e270c3ae40052ec524acd38a350e379d3010aa" translate="yes" xml:space="preserve">
          <source>SvROK_off</source>
          <target state="translated">SvROK_off</target>
        </trans-unit>
        <trans-unit id="c7a1d36a4bff0e8c7571cf20c8d6a3df05ea6d45" translate="yes" xml:space="preserve">
          <source>SvROK_on</source>
          <target state="translated">SvROK_on</target>
        </trans-unit>
        <trans-unit id="3551ff814d3508fe0494321baf0b08462a5951a1" translate="yes" xml:space="preserve">
          <source>SvRV</source>
          <target state="translated">SvRV</target>
        </trans-unit>
        <trans-unit id="98657f4eb633c067b2f4bbd96111ec20385af83f" translate="yes" xml:space="preserve">
          <source>SvRV_set</source>
          <target state="translated">SvRV_set</target>
        </trans-unit>
        <trans-unit id="5231d45a15ed6a1e96e1c7adf65310a112ccdb14" translate="yes" xml:space="preserve">
          <source>SvRX</source>
          <target state="translated">SvRX</target>
        </trans-unit>
        <trans-unit id="8bf53e27da8805a20511f9e414f46c9a92c3fe7c" translate="yes" xml:space="preserve">
          <source>SvRXOK</source>
          <target state="translated">SvRXOK</target>
        </trans-unit>
        <trans-unit id="6ce588dbb5a26b48845042b1fed998c7094f41b9" translate="yes" xml:space="preserve">
          <source>SvSETMAGIC</source>
          <target state="translated">SvSETMAGIC</target>
        </trans-unit>
        <trans-unit id="03b9e565f8509ce2cdd182d158dca6b07c40361c" translate="yes" xml:space="preserve">
          <source>SvSHARE</source>
          <target state="translated">SvSHARE</target>
        </trans-unit>
        <trans-unit id="663202fcb6a07de7521aee49ad200856328f670e" translate="yes" xml:space="preserve">
          <source>SvSTASH</source>
          <target state="translated">SvSTASH</target>
        </trans-unit>
        <trans-unit id="1e4dda9ea59b23608fcebfdab0f78b8414975f4b" translate="yes" xml:space="preserve">
          <source>SvSTASH_set</source>
          <target state="translated">SvSTASH_set</target>
        </trans-unit>
        <trans-unit id="55f331b95bad8451772b832cb2896cd13d8a62bf" translate="yes" xml:space="preserve">
          <source>SvSetMagicSV</source>
          <target state="translated">SvSetMagicSV</target>
        </trans-unit>
        <trans-unit id="a2363fa9b8d5575fdee7b5f5137de002a0d7fbd7" translate="yes" xml:space="preserve">
          <source>SvSetMagicSV_nosteal</source>
          <target state="translated">SvSetMagicSV_nosteal</target>
        </trans-unit>
        <trans-unit id="a870c5f5f765c31be19cc225270f373bf2a19609" translate="yes" xml:space="preserve">
          <source>SvSetSV</source>
          <target state="translated">SvSetSV</target>
        </trans-unit>
        <trans-unit id="0a56b40c972eb03057e49afb45a5f79c3b3c850c" translate="yes" xml:space="preserve">
          <source>SvSetSV_nosteal</source>
          <target state="translated">SvSetSV_nosteal</target>
        </trans-unit>
        <trans-unit id="3757c6ffdf931a1f2a0babe56b6b7bcfa87d7dcd" translate="yes" xml:space="preserve">
          <source>SvTAINT</source>
          <target state="translated">SvTAINT</target>
        </trans-unit>
        <trans-unit id="b132d1a6ca07d23104de48a3a5b9b9e288757452" translate="yes" xml:space="preserve">
          <source>SvTAINTED</source>
          <target state="translated">SvTAINTED</target>
        </trans-unit>
        <trans-unit id="da48b96bbbd0a5ec83161761506d58ef29de8d6a" translate="yes" xml:space="preserve">
          <source>SvTAINTED_off</source>
          <target state="translated">SvTAINTED_off</target>
        </trans-unit>
        <trans-unit id="e468ae6914e87cdb2b57113711db192dcf342f4e" translate="yes" xml:space="preserve">
          <source>SvTAINTED_on</source>
          <target state="translated">SvTAINTED_on</target>
        </trans-unit>
        <trans-unit id="0daba26132d99fae2f657acc44a21ff8e035bd1a" translate="yes" xml:space="preserve">
          <source>SvTHINKFIRST</source>
          <target state="translated">SvTHINKFIRST</target>
        </trans-unit>
        <trans-unit id="d644182b7fecca2e84a27663743f7d7d1731110e" translate="yes" xml:space="preserve">
          <source>SvTHINKFIRST sometimes produces false positives. In those cases sv_force_normal does nothing.</source>
          <target state="translated">SvTHINKFIRST иногда производит ложные срабатывания.В этих случаях sv_force_normal ничего не делает.</target>
        </trans-unit>
        <trans-unit id="2b4f8344aad95fbd47f327c9ffb82473442fdc07" translate="yes" xml:space="preserve">
          <source>SvTRUE</source>
          <target state="translated">SvTRUE</target>
        </trans-unit>
        <trans-unit id="5591dda75f8cb8334b1aa5f7592580f0e1465a90" translate="yes" xml:space="preserve">
          <source>SvTRUE_nomg</source>
          <target state="translated">SvTRUE_nomg</target>
        </trans-unit>
        <trans-unit id="ef07939a32727e62f23ab3bf8294ee0ae227b03b" translate="yes" xml:space="preserve">
          <source>SvTRUEx</source>
          <target state="translated">SvTRUEx</target>
        </trans-unit>
        <trans-unit id="d0b53af1ac0ffb7024eea6f6ecb8a708b9c38980" translate="yes" xml:space="preserve">
          <source>SvTYPE</source>
          <target state="translated">SvTYPE</target>
        </trans-unit>
        <trans-unit id="b775bed176614e9a49e8732c4986d2b2525760f8" translate="yes" xml:space="preserve">
          <source>SvUNLOCK</source>
          <target state="translated">SvUNLOCK</target>
        </trans-unit>
        <trans-unit id="54b59fb943f1a8c6fc241231137d882737d769f5" translate="yes" xml:space="preserve">
          <source>SvUOK</source>
          <target state="translated">SvUOK</target>
        </trans-unit>
        <trans-unit id="a5569c2ff8aba92fd99ba9b2df30c443b34a6f1f" translate="yes" xml:space="preserve">
          <source>SvUPGRADE</source>
          <target state="translated">SvUPGRADE</target>
        </trans-unit>
        <trans-unit id="4cd670c5feb308ed3b15e5b58b2f681b4c5bb579" translate="yes" xml:space="preserve">
          <source>SvUTF8</source>
          <target state="translated">SvUTF8</target>
        </trans-unit>
        <trans-unit id="12aa020f8a66c3e1d0a998e5c7796999c4211ab4" translate="yes" xml:space="preserve">
          <source>SvUTF8_off</source>
          <target state="translated">SvUTF8_off</target>
        </trans-unit>
        <trans-unit id="31712c4817da7a521357a0236b626c9b62700a5d" translate="yes" xml:space="preserve">
          <source>SvUTF8_on</source>
          <target state="translated">SvUTF8_on</target>
        </trans-unit>
        <trans-unit id="97e374818598ae8696854ce66ebfe26153cf81d6" translate="yes" xml:space="preserve">
          <source>SvUV</source>
          <target state="translated">SvUV</target>
        </trans-unit>
        <trans-unit id="1c39bfc4cdacb7f60ffec9b7097060595b0abf27" translate="yes" xml:space="preserve">
          <source>SvUVX</source>
          <target state="translated">SvUVX</target>
        </trans-unit>
        <trans-unit id="cf7246c4c0c7e22abb4930c099853bf5a86af5d1" translate="yes" xml:space="preserve">
          <source>SvUVXx</source>
          <target state="translated">SvUVXx</target>
        </trans-unit>
        <trans-unit id="37b28974a3152d2c3de1c657d9b3df720c807e0b" translate="yes" xml:space="preserve">
          <source>SvUV_nomg</source>
          <target state="translated">SvUV_nomg</target>
        </trans-unit>
        <trans-unit id="728d716b7fe1f957388320e1810e447969265d9c" translate="yes" xml:space="preserve">
          <source>SvUV_set</source>
          <target state="translated">SvUV_set</target>
        </trans-unit>
        <trans-unit id="f0070f4312b6d3c4e9753ebbebd42cc576a21cc7" translate="yes" xml:space="preserve">
          <source>SvUVx</source>
          <target state="translated">SvUVx</target>
        </trans-unit>
        <trans-unit id="2b2c80bf0f6f562d3d900c990060affb4cc3cdbb" translate="yes" xml:space="preserve">
          <source>SvVOK</source>
          <target state="translated">SvVOK</target>
        </trans-unit>
        <trans-unit id="72ddd2b619af6d6a73febf80f7fcad22495498cd" translate="yes" xml:space="preserve">
          <source>Sweden</source>
          <target state="translated">Sweden</target>
        </trans-unit>
        <trans-unit id="d1e609cdf540975b2ef838162ca1765da2f782c9" translate="yes" xml:space="preserve">
          <source>Switch (?(condition)... contains too many branches in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388b56e3569a3c2f26662f9bd0bad1aef19a414d" translate="yes" xml:space="preserve">
          <source>Switch (?(condition)... not terminated in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d140830d04307683300b42c263a4bad9b2b05e6" translate="yes" xml:space="preserve">
          <source>Switch Statements</source>
          <target state="translated">Выписки о переключении</target>
        </trans-unit>
        <trans-unit id="81f3afb94b79b127f4ba3f323efbf6b5702494d6" translate="yes" xml:space="preserve">
          <source>Switch condition not recognized in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd9a48c2b8a06497ad155d8fb2e22e3efb40ec2" translate="yes" xml:space="preserve">
          <source>Switch off optimizations.</source>
          <target state="translated">Выключите оптимизацию.</target>
        </trans-unit>
        <trans-unit id="3bb7fa365adb6d9413c8c9a8c7435723660691af" translate="yes" xml:space="preserve">
          <source>Switch to viewing a different file or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; statement. If</source>
          <target state="translated">Переключитесь на просмотр другого файла или оператора &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="d701d90d00f98c308677ac71f008ef2cd2b1b580" translate="yes" xml:space="preserve">
          <source>Switch to viewing a different file or &lt;code&gt;eval&lt;/code&gt; statement. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc7caf5e748552e870fbdf8c7d017c5fa6cf84c" translate="yes" xml:space="preserve">
          <source>Switched to JSON serialization from YAML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941726dc5468b689bfb5334269ab159c8c5ac044" translate="yes" xml:space="preserve">
          <source>Switches On the &quot;#!&quot; Line</source>
          <target state="translated">Включает &quot;#!&quot; Линия</target>
        </trans-unit>
        <trans-unit id="22865b749e47c4f80690e8fbf02747aa53e87248" translate="yes" xml:space="preserve">
          <source>Switches include:</source>
          <target state="translated">Переключатели включают в себя:</target>
        </trans-unit>
        <trans-unit id="1a104dee1272b5ea48fa02cf2cd55d0cf5980bda" translate="yes" xml:space="preserve">
          <source>Switches which take an argument don't care whether there is a space between the switch and the argument. If unspecified switches are found on the command-line, the user will be warned that an unknown option was given.</source>
          <target state="translated">Переключатели,которые принимают аргумент,не заботятся о том,есть ли пробел между переключателем и аргументом.Если в командной строке будут найдены неуказанные переключатели,пользователь будет предупрежден о том,что была задана неизвестная опция.</target>
        </trans-unit>
        <trans-unit id="88a10266365bec895433e46eaf4bb0d9f4319fa6" translate="yes" xml:space="preserve">
          <source>Switching in a loop</source>
          <target state="translated">Переключение в контуре</target>
        </trans-unit>
        <trans-unit id="77dcd849e550afec3c83d38fcc8cbc72c058f4db" translate="yes" xml:space="preserve">
          <source>Switzerland</source>
          <target state="translated">Switzerland</target>
        </trans-unit>
        <trans-unit id="c4833a3fbcd559394f2c58d1f54c950e1415a542" translate="yes" xml:space="preserve">
          <source>Sx is an interface to the Athena widget set which comes with X, but again it appears not to be much used nowadays.</source>
          <target state="translated">Sx-это интерфейс к набору виджетов Athena,который поставляется с X,но опять же,кажется,что в настоящее время он мало используется.</target>
        </trans-unit>
        <trans-unit id="cd32c48fcfdab7a133c532cff3d2d0c939be7f22" translate="yes" xml:space="preserve">
          <source>Symbian</source>
          <target state="translated">Symbian</target>
        </trans-unit>
        <trans-unit id="899b34f07ea283295bd5ac5271424c60aff58966" translate="yes" xml:space="preserve">
          <source>Symbian (Series 60 v3, 3.2 and 5 - what else?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="6f23f00b2c5559251a269c3e95612a03f0fa5304" translate="yes" xml:space="preserve">
          <source>Symbol - manipulate Perl symbols and their names</source>
          <target state="translated">Символ-манипулируйте символами Perl и их названиями.</target>
        </trans-unit>
        <trans-unit id="e2434de5e406913ebf6a3ac33e80e10d4a315aea" translate="yes" xml:space="preserve">
          <source>Symbol Encodings</source>
          <target state="translated">Символ Кодировка</target>
        </trans-unit>
        <trans-unit id="d794fc2c3b0c30f40edbe0d808d2368ffeb21d98" translate="yes" xml:space="preserve">
          <source>Symbol Tables</source>
          <target state="translated">Символ Таблицы</target>
        </trans-unit>
        <trans-unit id="4b05d7078c77af4d667a4898e87b6c3188ae4b11" translate="yes" xml:space="preserve">
          <source>Symbolic Calculator</source>
          <target state="translated">Символический калькулятор</target>
        </trans-unit>
        <trans-unit id="37008620b710f26771f72ef684d0d762ce0c312d" translate="yes" xml:space="preserve">
          <source>Symbolic Links</source>
          <target state="translated">Символические ссылки</target>
        </trans-unit>
        <trans-unit id="d0a9fa28cc57e07ecbedf349e28f66a417dbd550" translate="yes" xml:space="preserve">
          <source>Symbolic Unary Operators</source>
          <target state="translated">Символические Унарные операторы</target>
        </trans-unit>
        <trans-unit id="c85b29041363945d0d38e6dd76ab2012cab61284" translate="yes" xml:space="preserve">
          <source>Symbolic links will be replicated in the destination directory. If &lt;b&gt;-l&lt;/b&gt; is not specified, then links are skipped over.</source>
          <target state="translated">Символические ссылки будут скопированы в целевой каталог. Если &lt;b&gt;-l&lt;/b&gt; не указан, ссылки пропускаются.</target>
        </trans-unit>
        <trans-unit id="5740fe00b50befc25ecdbfe2ce1dcb268f365ae5" translate="yes" xml:space="preserve">
          <source>Symbolic methods</source>
          <target state="translated">Символические методы</target>
        </trans-unit>
        <trans-unit id="2ed5a46b240bca78e1ebda87bbf53e151430ff41" translate="yes" xml:space="preserve">
          <source>Symbolic references</source>
          <target state="translated">Символические ссылки</target>
        </trans-unit>
        <trans-unit id="11ea83f8147883e582553aebb48729beba5bdaf1" translate="yes" xml:space="preserve">
          <source>Symbolic references are forbidden under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; pragma. They are not true references and consequently are not reference-counted or garbage-collected.</source>
          <target state="translated">Символические ссылки запрещены в соответствии с директивой &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Они не являются истинными ссылками и, следовательно, не подлежат подсчету ссылок или сборке мусора.</target>
        </trans-unit>
        <trans-unit id="af9f81a30b480e3a5214ee12ab8f0ac2f3b093d2" translate="yes" xml:space="preserve">
          <source>Symbolic references are forbidden under the &lt;code&gt;use strict&lt;/code&gt; pragma. They are not true references and consequently are not reference-counted or garbage-collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3d231a255923086dc7e82179bb6e9c216f886c" translate="yes" xml:space="preserve">
          <source>Symbolic references are names of variables or other objects, just as a symbolic link in a Unix filesystem contains merely the name of a file. The &lt;code&gt;*glob&lt;/code&gt; notation is something of a symbolic reference. (Symbolic references are sometimes called &quot;soft references&quot;, but please don't call them that; references are confusing enough without useless synonyms.)</source>
          <target state="translated">Символьные ссылки - это имена переменных или других объектов, точно так же, как символическая ссылка в файловой системе Unix содержит просто имя файла. &lt;code&gt;*glob&lt;/code&gt; обозначение нечто символической ссылки. (Символические ссылки иногда называют &amp;laquo;мягкими ссылками&amp;raquo;, но, пожалуйста, не называйте их так; ссылки достаточно запутывают без бесполезных синонимов.)</target>
        </trans-unit>
        <trans-unit id="7eb647835a30e5a1bbf74157fa14f494b596a5c9" translate="yes" xml:space="preserve">
          <source>Symbols representing the concepts &amp;ldquo;and&amp;rdquo;, &amp;ldquo;or&amp;rdquo;, &amp;ldquo;xor&amp;rdquo;, and &amp;ldquo;not&amp;rdquo;.</source>
          <target state="translated">Символы, представляющие понятия &amp;laquo;и&amp;raquo;, &amp;laquo;или&amp;raquo;, &amp;laquo;xor&amp;raquo; и &amp;laquo;не&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="bc32943d7841b88a1cf40309071785aab7d4e9d1" translate="yes" xml:space="preserve">
          <source>Synchronization and control</source>
          <target state="translated">Синхронизация и управление</target>
        </trans-unit>
        <trans-unit id="3cea5373055c1ded68843107ad2f2e539bd093c5" translate="yes" xml:space="preserve">
          <source>Synology manufactures a vast number of Network Attached Storage (NAS) devices that are very popular in large organisations as well as small businesses and homes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6877f381ee0675d5bd925a8ea887b401ae7a51" translate="yes" xml:space="preserve">
          <source>Synonymous options (like both the short and long forms) are separated by a comma and a space on the same &lt;code&gt;=item&lt;/code&gt; line, or optionally listed as their own item with a reference to the canonical name. For example, since &lt;b&gt;--section&lt;/b&gt; can also be written as &lt;b&gt;-s&lt;/b&gt;, the above would be:</source>
          <target state="translated">Синонимичные параметры (например, краткая и длинная формы) разделяются запятой и пробелом в одной строке &lt;code&gt;=item&lt;/code&gt; или, при необходимости, указываются как отдельный элемент со ссылкой на каноническое имя. Например, поскольку &lt;b&gt;--section&lt;/b&gt; также можно записать как &lt;b&gt;-s&lt;/b&gt; , приведенное выше будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="fcbf093f7bdc572a445b9a43606c7f7a83836b33" translate="yes" xml:space="preserve">
          <source>Synonyms for &lt;code&gt;recipient&lt;/code&gt; .</source>
          <target state="translated">Синонимы к &lt;code&gt;recipient&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79fdd2d4dec4b005410dc78b4fc5a2b54509cf1c" translate="yes" xml:space="preserve">
          <source>Synonyms for &lt;code&gt;recipient&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="af5f0a5e089ff24df87876664a300fc1d94de87c" translate="yes" xml:space="preserve">
          <source>Synopsis:</source>
          <target state="translated">Synopsis:</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="69c40972b3eb05b16c311ef5e1e2135fa3fd9faa" translate="yes" xml:space="preserve">
          <source>Syntax error in (?[...]) in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb07c71de4335da146595d32e9320b5a8140d2f2" translate="yes" xml:space="preserve">
          <source>Syntax error in =encoding directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90738f5d4b2229f3a4c124484c36b1275df5262" translate="yes" xml:space="preserve">
          <source>Syntax for invoking shar, tar and zip differs from that for Unix.</source>
          <target state="translated">Синтаксис для вызова шар,смол и молнии отличается от синтаксиса для Unix.</target>
        </trans-unit>
        <trans-unit id="7d8c7607abfe852f9a6ad8648332314d9917e637" translate="yes" xml:space="preserve">
          <source>Syntax of Attribute Lists</source>
          <target state="translated">Синтаксис атрибутивных списков</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="be3351180e2a37f5c7ceb3ef2e3724ddf7a09419" translate="yes" xml:space="preserve">
          <source>Syohei YOSHIDA &amp;lt;syohex@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0785d5c2121b7134c4af7c65680f001acb76a92c" translate="yes" xml:space="preserve">
          <source>Sys$Library</source>
          <target state="translated">Sys$Library</target>
        </trans-unit>
        <trans-unit id="65fb3d73b0b7d628e2887a67776fd305bc37b9e6" translate="yes" xml:space="preserve">
          <source>Sys$Share</source>
          <target state="translated">Sys$Share</target>
        </trans-unit>
        <trans-unit id="dbb39438e97d2bc740ddc791cb728708fa6deab2" translate="yes" xml:space="preserve">
          <source>Sys$System:</source>
          <target state="translated">Sys$System:</target>
        </trans-unit>
        <trans-unit id="48fee1621e8e0fbac3a51bb7b722933258b770f4" translate="yes" xml:space="preserve">
          <source>Sys::Hostname</source>
          <target state="translated">Sys::Hostname</target>
        </trans-unit>
        <trans-unit id="2e415aac42b72faad3c72367e40e8717dbc66b3c" translate="yes" xml:space="preserve">
          <source>Sys::Hostname - Try every conceivable way to get hostname</source>
          <target state="translated">Sys::Имя хоста-Попробуйте все возможные способы получить имя хоста.</target>
        </trans-unit>
        <trans-unit id="c1e878d92efc49a2e4d7c74bab56ecb4df79e136" translate="yes" xml:space="preserve">
          <source>Sys::Syslog</source>
          <target state="translated">Sys::Syslog</target>
        </trans-unit>
        <trans-unit id="d0e7c26b96f1913c444745d08172cdce4e0c92fa" translate="yes" xml:space="preserve">
          <source>Sys::Syslog - Perl interface to the UNIX syslog(3) calls</source>
          <target state="translated">Sys::Syslog-Perl интерфейс к вызовам UNIX syslog(3)</target>
        </trans-unit>
        <trans-unit id="70083380e8efc0c90f74c992ef02124b7c1f9076" translate="yes" xml:space="preserve">
          <source>Sys::Syslog::Win32</source>
          <target state="translated">Sys::Syslog::Win32</target>
        </trans-unit>
        <trans-unit id="cfe74b88debb47d505f4b0c08319f0ca059d43ec" translate="yes" xml:space="preserve">
          <source>Sys::Syslog::Win32 - Win32 support for Sys::Syslog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c9e6fce8c27f1db38faca8727f60ffbd03b1df" translate="yes" xml:space="preserve">
          <source>SysV IPC</source>
          <target state="translated">SysV IPC</target>
        </trans-unit>
        <trans-unit id="b769fe98988d4570b7169913197897773fb46367" translate="yes" xml:space="preserve">
          <source>SysV Msg IPC object class</source>
          <target state="translated">SysV Msg объектный класс IPC</target>
        </trans-unit>
        <trans-unit id="1b5cd833684b7ef6a59dab44ff94b295bccc40b4" translate="yes" xml:space="preserve">
          <source>SysV Semaphore IPC object class</source>
          <target state="translated">SysV Semaphore IPC объектный класс</target>
        </trans-unit>
        <trans-unit id="71c44529ecac23b5c9809ec7a57f43fadf59d867" translate="yes" xml:space="preserve">
          <source>SysV Shared Memory IPC object class</source>
          <target state="translated">Объектный класс IPC общей памяти SysV</target>
        </trans-unit>
        <trans-unit id="40f6355398d4cc8e6d990f10eb780e3725d4416e" translate="yes" xml:space="preserve">
          <source>Syscall returns whatever value returned by the system call it calls. If the system call fails, &lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;-1&lt;/code&gt; and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). Note that some system calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45e7e358eb9351a96a4b4d44c0db473a81b0bd0" translate="yes" xml:space="preserve">
          <source>Syscall returns whatever value returned by the system call it calls. If the system call fails, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; (errno). Note that some system calls</source>
          <target state="translated">Системный вызов возвращает любое значение, возвращаемое системным вызовом, который он вызывает. В случае сбоя системного вызова &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; и устанавливает &lt;code&gt;$!&lt;/code&gt; (эррно). Обратите внимание, что некоторые системные вызовы</target>
        </trans-unit>
        <trans-unit id="e0b761d47162708932873aa746a0b31a4af21afe" translate="yes" xml:space="preserve">
          <source>Syscall returns whatever value returned by the system call it calls. If the system call fails, &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; (errno). Note that some system calls</source>
          <target state="translated">Системный вызов возвращает любое значение, возвращаемое системным вызовом, который он вызывает. В случае сбоя системного вызова &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; и устанавливает &lt;code&gt;$!&lt;/code&gt; (эррно). Обратите внимание, что некоторые системные вызовы</target>
        </trans-unit>
        <trans-unit id="53aa71666c5046c70bdb9cfa19d05f3e5e2dbe70" translate="yes" xml:space="preserve">
          <source>Syslogging with Perl</source>
          <target state="translated">Установление контактов с Перлом</target>
        </trans-unit>
        <trans-unit id="b9c23727af44d87276c73142b1bbc56acfa2ff99" translate="yes" xml:space="preserve">
          <source>Sysroot.U</source>
          <target state="translated">Sysroot.U</target>
        </trans-unit>
        <trans-unit id="80c0b230762f1b4764b9bec6b3b1ff958262b7bd" translate="yes" xml:space="preserve">
          <source>System CPU Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286ad58c359f169cf560ed965ca49713b4161be5" translate="yes" xml:space="preserve">
          <source>System Interaction</source>
          <target state="translated">Взаимодействие с системой</target>
        </trans-unit>
        <trans-unit id="a5f5e2adb8b84a09a3496b92bfc8ae6f7818b5f8" translate="yes" xml:space="preserve">
          <source>System Resources</source>
          <target state="translated">Системные ресурсы</target>
        </trans-unit>
        <trans-unit id="12920688fafa23a0e3538825316e84488141b30c" translate="yes" xml:space="preserve">
          <source>System Specifics</source>
          <target state="translated">Системные особенности</target>
        </trans-unit>
        <trans-unit id="d6112adb659d79581ddf0b5cc4c94caed341f770" translate="yes" xml:space="preserve">
          <source>System V %s is not implemented on this machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80f9799bbc3cebb5501e8db9a2d073ae25632e" translate="yes" xml:space="preserve">
          <source>System V IPC constants and system calls</source>
          <target state="translated">Системные V IPC константы и системные вызовы</target>
        </trans-unit>
        <trans-unit id="c4b08ad7296a6185b44d15785cd2e71597984993" translate="yes" xml:space="preserve">
          <source>System V interprocess communication functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16956db37d0c77a530acbdbc4b5059785173084f" translate="yes" xml:space="preserve">
          <source>System calls accept either &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; as the path separator. However, many command-line utilities of DOS vintage treat &lt;code&gt;/&lt;/code&gt; as the option prefix, so may get confused by filenames containing &lt;code&gt;/&lt;/code&gt;. Aside from calling any external programs, &lt;code&gt;/&lt;/code&gt; will work just fine, and probably better, as it is more consistent with popular usage, and avoids the problem of remembering what to backwhack and what not to.</source>
          <target state="translated">Системные вызовы принимают в качестве разделителя пути либо &lt;code&gt;/&lt;/code&gt; , либо &lt;code&gt;\&lt;/code&gt; . Однако многие утилиты командной строки DOS vintage рассматривают &lt;code&gt;/&lt;/code&gt; как префикс параметра, поэтому могут запутаться в именах файлов, содержащих &lt;code&gt;/&lt;/code&gt; . Помимо вызова каких-либо внешних программ, &lt;code&gt;/&lt;/code&gt; будет работать нормально и, вероятно, лучше, поскольку он более соответствует популярному использованию и позволяет избежать проблемы с запоминанием того, что нужно отбивать, а что нет.</target>
        </trans-unit>
        <trans-unit id="4f24e94ced298a298739ba1339ef795f85bd6541" translate="yes" xml:space="preserve">
          <source>System calls at compile time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007271cb98a5608fe64c06188e43289d61f1c7bd" translate="yes" xml:space="preserve">
          <source>System calls return -1 on error (setting ERRNO with the reason) and (usually) 0 on success. If the return value is -1 this typemap returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If the return value is not -1, this typemap translates a 0 (perl false) to &quot;0 but true&quot; (which is perl true) or returns the value itself, to indicate that the command succeeded.</source>
          <target state="translated">Системные вызовы возвращают -1 в случае ошибки (установка ERRNO с указанием причины) и (обычно) 0 в случае успеха. Если возвращаемое значение -1, эта карта типов возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Если возвращаемое значение не равно -1, эта карта типов переводит 0 (perl false) в &amp;laquo;0 but true&amp;raquo; (что perl true) или возвращает само значение, чтобы указать, что команда выполнена успешно.</target>
        </trans-unit>
        <trans-unit id="2359b820aa0452b65508553cdd45209d3b858de3" translate="yes" xml:space="preserve">
          <source>System calls return -1 on error (setting ERRNO with the reason) and (usually) 0 on success. If the return value is -1 this typemap returns &lt;code&gt;undef&lt;/code&gt;. If the return value is not -1, this typemap translates a 0 (perl false) to &quot;0 but true&quot; (which is perl true) or returns the value itself, to indicate that the command succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb78d5fbb36025d1ade73acf0ec1dc017253b7c6" translate="yes" xml:space="preserve">
          <source>System calls such as link(), unlink(), rename(), etc. return nonzero for success, not 0. (system(), however, returns zero for success.)</source>
          <target state="translated">Системные вызовы,такие как link(),unlink(),rename()и т.д.возвращают ненулевое значение для успеха,а не 0.(system(),однако,возвращает ноль для успеха).</target>
        </trans-unit>
        <trans-unit id="a5bfc62972086e83c2f9e4d6647ba3081448737b" translate="yes" xml:space="preserve">
          <source>System errno constants</source>
          <target state="translated">Системные эррно-константы</target>
        </trans-unit>
        <trans-unit id="0464247110efd6dc873ab7d03699ac46391aa089" translate="yes" xml:space="preserve">
          <source>SystemV Interprocess Communications:</source>
          <target state="translated">Межпроцессные коммуникации SystemV:</target>
        </trans-unit>
        <trans-unit id="a183fb872a859df2f57021c9ab88f775bce8ce4c" translate="yes" xml:space="preserve">
          <source>Systems that don't use GDBM compatibilty for ndbm support will be using a platform specific library, possibly inherited from BSD systems, where it may or may not be safe to use an untrusted file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae914465ea54a3f354cb49e4c193a3ffe266b8f" translate="yes" xml:space="preserve">
          <source>Systems that don't use GDBM compatibilty for old dbm support will be using a platform specific library, possibly inherited from BSD systems, where it may or may not be safe to use an untrusted file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="5217808996f069ddbc219ab5febe206f9d89f653" translate="yes" xml:space="preserve">
          <source>T2_KEEP_TEMPDIR=0</source>
          <target state="translated">T2_KEEP_TEMPDIR=0</target>
        </trans-unit>
        <trans-unit id="463b5addcced0fba1581ac4edc4526052505db59" translate="yes" xml:space="preserve">
          <source>T2_TEMPDIR_TEMPLATE='test2-XXXXXX'</source>
          <target state="translated">T2_TEMPDIR_TEMPLATE='test2-XXXXXX'</target>
        </trans-unit>
        <trans-unit id="a4394edb00669dc4429b903f672c10ae13c95e90" translate="yes" xml:space="preserve">
          <source>TABLE</source>
          <target state="translated">TABLE</target>
        </trans-unit>
        <trans-unit id="9f94efb44fe911a9e20566c2b4f9e9743238c25c" translate="yes" xml:space="preserve">
          <source>TABLE OF CONTENTS</source>
          <target state="translated">ОГЛАВЛЕНИЕ</target>
        </trans-unit>
        <trans-unit id="3b4df05d703541d151d3e3628328bb8fd532308b" translate="yes" xml:space="preserve">
          <source>TAP GRAMMAR</source>
          <target state="translated">TAP GRAMMAR</target>
        </trans-unit>
        <trans-unit id="1920029d62435d8577df2572dd0096bfaff76178" translate="yes" xml:space="preserve">
          <source>TAP pragma token.</source>
          <target state="translated">TAP прагматический жетон.</target>
        </trans-unit>
        <trans-unit id="a6ad0c7cbda3b41f87bebc3eecd396afa503fee6" translate="yes" xml:space="preserve">
          <source>TAP syntax version token.</source>
          <target state="translated">Токен версии синтаксиса TAP.</target>
        </trans-unit>
        <trans-unit id="3876ffd2c762f78e88b10fd7b5ed6b67ff853ed5" translate="yes" xml:space="preserve">
          <source>TAP::Base</source>
          <target state="translated">TAP::Base</target>
        </trans-unit>
        <trans-unit id="9b1c8b8b7e60c2d2e7b147def758851a2032505c" translate="yes" xml:space="preserve">
          <source>TAP::Base - Base class that provides common functionality to &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; and &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393bbdfe5b0291f7582e0a00a859897a43f52662" translate="yes" xml:space="preserve">
          <source>TAP::Base - Base class that provides common functionality to &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; and &lt;a href=&quot;harness&quot;&gt;TAP::Harness&lt;/a&gt;</source>
          <target state="translated">TAP :: Base - базовый класс, который обеспечивает общие функции для &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; и &lt;a href=&quot;harness&quot;&gt;TAP :: Harness&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="863c519a681845de61f18ccf2d91ed2bae4b3a87" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Base</source>
          <target state="translated">TAP::Formatter::Base</target>
        </trans-unit>
        <trans-unit id="2219301c0e6ab7a0cac653627940a66913b4e00c" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Base - Base class for harness output delegates</source>
          <target state="translated">СПД::Формат::База-Базовый класс для делегатов выхода жгута</target>
        </trans-unit>
        <trans-unit id="737a5324c5901c02f42ad717687b54b1dafd7c3b" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Color</source>
          <target state="translated">TAP::Formatter::Color</target>
        </trans-unit>
        <trans-unit id="83dc9a13e5e40b4cace713c5d42771d2b5bb47e0" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Color - Run Perl test scripts with color</source>
          <target state="translated">ТЭП::Формат::Цвет-запустить тестовые скрипты на Perl с цветом</target>
        </trans-unit>
        <trans-unit id="de057ff7c6b5e40851d3c50d32e9750e339c5926" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console</source>
          <target state="translated">TAP::Formatter::Console</target>
        </trans-unit>
        <trans-unit id="e5caa85b06270fe34451b375ee12674e638dd733" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console - Harness output delegate for default console output</source>
          <target state="translated">TAP::Формат::Консоль-делегат выхода Harness для вывода на консоль по умолчанию</target>
        </trans-unit>
        <trans-unit id="01b7c503e4f8a4af70b89b685b263fa99a7779a7" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console::ParallelSession</source>
          <target state="translated">TAP::Formatter::Console::ParallelSession</target>
        </trans-unit>
        <trans-unit id="db7bd0c049621f91358c7128fbd5472680ec6d31" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console::ParallelSession - Harness output delegate for parallel console output</source>
          <target state="translated">TAP::Формат::Консоль::ParallelSession-Делегат вывода Harness для параллельного консольного вывода</target>
        </trans-unit>
        <trans-unit id="e10aa0877a249858e704e343610555a15b6331f0" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console::Session</source>
          <target state="translated">TAP::Formatter::Console::Session</target>
        </trans-unit>
        <trans-unit id="617e83a9b0bba0c6a87c6403d55512035b5d4331" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Console::Session - Harness output delegate for default console output</source>
          <target state="translated">TAP::Формат::Консоль::Сессия-делегат выхода Harness для вывода консоли по умолчанию</target>
        </trans-unit>
        <trans-unit id="ebcc51d604eabcfa523d96f91dc1b0eb51dccb7d" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::File</source>
          <target state="translated">TAP::Formatter::File</target>
        </trans-unit>
        <trans-unit id="ce9e5131d6998f180ee6abe8bad4643f869cfb3d" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::File - Harness output delegate for file output</source>
          <target state="translated">TAP::Формат::Файл-Делегирование вывода для вывода файла</target>
        </trans-unit>
        <trans-unit id="5a53ebb59dd4ba13f5939d6a9f81cddf3e1c6f45" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::File::Session</source>
          <target state="translated">TAP::Formatter::File::Session</target>
        </trans-unit>
        <trans-unit id="360d8f026e4e5483612bf0275831836f9ffb249f" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::File::Session - Harness output delegate for file output</source>
          <target state="translated">TAP::Формат::Файл::Сессия-делегат выхода Harness для вывода файла</target>
        </trans-unit>
        <trans-unit id="46af53bbf8c7eee3da8d825fcace74fe474d232b" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Session</source>
          <target state="translated">TAP::Formatter::Session</target>
        </trans-unit>
        <trans-unit id="c2df33c30bd450c40b146c186ea09c6cab11e56c" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Session - Abstract base class for harness output delegate</source>
          <target state="translated">СПД::Формат::Сессия-Абстрактный базовый класс для делегата выхода жгута</target>
        </trans-unit>
        <trans-unit id="93ebad31adfaf596a987126afe3d7a3f18d93c05" translate="yes" xml:space="preserve">
          <source>TAP::Harness</source>
          <target state="translated">TAP::Harness</target>
        </trans-unit>
        <trans-unit id="b7d5d266f7a8edc064e0b8c710521d51a2bc894a" translate="yes" xml:space="preserve">
          <source>TAP::Harness - Run test scripts with statistics</source>
          <target state="translated">TAP::Harness-запустить тестовые скрипты со статистикой</target>
        </trans-unit>
        <trans-unit id="a28a3f4d3229f49494c71baca96520e2ecfb6ce6" translate="yes" xml:space="preserve">
          <source>TAP::Harness::Env</source>
          <target state="translated">TAP::Harness::Env</target>
        </trans-unit>
        <trans-unit id="91f28a5a62ef8f799cd7525ba0b5759ca2448d9c" translate="yes" xml:space="preserve">
          <source>TAP::Harness::Env - Parsing harness related environmental variables where appropriate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a70a46bfa38bc1216fe94cb04afcea34c7e8685" translate="yes" xml:space="preserve">
          <source>TAP::Object</source>
          <target state="translated">TAP::Object</target>
        </trans-unit>
        <trans-unit id="f09e3a92ac29a0ecd8a4f02097d67c9251bfb4fd" translate="yes" xml:space="preserve">
          <source>TAP::Object - Base class that provides common functionality to all &lt;code&gt;TAP::*&lt;/code&gt; modules</source>
          <target state="translated">TAP :: Object - Базовый класс, который обеспечивает общие функции для всех модулей &lt;code&gt;TAP::*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73c55e213830c688e72c24e7e2dc38927a8f526e" translate="yes" xml:space="preserve">
          <source>TAP::Parser</source>
          <target state="translated">TAP::Parser</target>
        </trans-unit>
        <trans-unit id="f762f998d40c617b51b08688208676705b948fa6" translate="yes" xml:space="preserve">
          <source>TAP::Parser - Parse &lt;a href=&quot;Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f07ed865105b4fe8e06f2ed0ef74d2249f0ce1b" translate="yes" xml:space="preserve">
          <source>TAP::Parser - Parse &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="translated">TAP :: Parser - Разобрать вывод &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="947140d84d6dc3586ce66227c8fbf3b5502269bb" translate="yes" xml:space="preserve">
          <source>TAP::Parser also supports callbacks; bailout, comment, plan, test, unknown, version and yaml are called for the corresponding TAP result types, ALL is called for all results, ELSE is called for all results for which a named callback is not installed and EOF is called once at the end of each TAP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a216f40bfe5d8c4e9f480503b3353a997f25d9e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Aggregator</source>
          <target state="translated">TAP::Parser::Aggregator</target>
        </trans-unit>
        <trans-unit id="29967243373ff3c2847efa03292cf1394ade91bf" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Aggregator - Aggregate TAP::Parser results</source>
          <target state="translated">TAP::Парсер::Агрегатор-Агрегировать результаты TAP::Парсер</target>
        </trans-unit>
        <trans-unit id="ea252a87adf45624e0915f082cf3a171691e2b87" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Grammar</source>
          <target state="translated">TAP::Parser::Grammar</target>
        </trans-unit>
        <trans-unit id="99d73c9149822b89f098465b0ef15b6e5e432ba4" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Grammar - A grammar for the Test Anything Protocol.</source>
          <target state="translated">TAP::Парсер::Грамматика-грамматика для протокола Test Anything.</target>
        </trans-unit>
        <trans-unit id="f66dcc18cf605bab72f282216bf437fafae85c73" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator</source>
          <target state="translated">TAP::Parser::Iterator</target>
        </trans-unit>
        <trans-unit id="d222e4542e0f93a9f4cabc8a65b724fcc86515cd" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator - Base class for TAP source iterators</source>
          <target state="translated">TAP::Parser::Iterator-Базовый класс для итераторов источника TAP</target>
        </trans-unit>
        <trans-unit id="599e631b6f320b3fc47ee504d90a3e175b821f4e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Array</source>
          <target state="translated">TAP::Parser::Iterator::Array</target>
        </trans-unit>
        <trans-unit id="8849b72265bccd1154b20c5bcfd79b6177e1d979" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Array - Iterator for array-based TAP sources</source>
          <target state="translated">TAP::Parser::Iterator::Array-Iterator для источников TAP на основе массива</target>
        </trans-unit>
        <trans-unit id="8afb640018f748c7abac8e508f78557fe8689509" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Process</source>
          <target state="translated">TAP::Parser::Iterator::Process</target>
        </trans-unit>
        <trans-unit id="ef61fd1ef2ee2ba4a706833aed0bb08fe84a24ba" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Process - Iterator for process-based TAP sources</source>
          <target state="translated">TAP::Парсер::Итератор::Процесс-Итератор для процессных TAP источников</target>
        </trans-unit>
        <trans-unit id="c97751b26f9e6df1ee3c0a7feabeda4e0d9102c3" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Stream</source>
          <target state="translated">TAP::Parser::Iterator::Stream</target>
        </trans-unit>
        <trans-unit id="be38f68275dc99a67c8ac1d8cfd48bb032de4d4a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Stream - Iterator for filehandle-based TAP sources</source>
          <target state="translated">TAP::Parser::Iterator::Stream-Iterator для TAP-источников,основанных на файловых дескрипторах</target>
        </trans-unit>
        <trans-unit id="d89bed7b6f6d5d165f751cac2ac0a13e2dd7f697" translate="yes" xml:space="preserve">
          <source>TAP::Parser::IteratorFactory</source>
          <target state="translated">TAP::Parser::IteratorFactory</target>
        </trans-unit>
        <trans-unit id="8d39f8677b4d63ea3260e5507a930c994a438d70" translate="yes" xml:space="preserve">
          <source>TAP::Parser::IteratorFactory - Figures out which SourceHandler objects to use for a given Source</source>
          <target state="translated">TAP::Parser::IteratorFactory-Выясняет,какие объекты SourceHandler использовать для данного источника.</target>
        </trans-unit>
        <trans-unit id="6f50fafc730902e3aa24fa13c0c429b89a2cc1ff" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Multiplexer</source>
          <target state="translated">TAP::Parser::Multiplexer</target>
        </trans-unit>
        <trans-unit id="2da48d5d830b8cd9138d15d18237febc28e0b498" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Multiplexer - Multiplex multiple TAP::Parsers</source>
          <target state="translated">TAP::Парсер::Мультиплексор-Мультиплексный мультиплексный мультиплексор TAP::Парсер</target>
        </trans-unit>
        <trans-unit id="3c077c3ce874909f47ae77cbcca2c04344198e5b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result</source>
          <target state="translated">TAP::Parser::Result</target>
        </trans-unit>
        <trans-unit id="a422082a9e255b156b40569483bd6f50f2d5a284" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result - Base class for TAP::Parser output objects</source>
          <target state="translated">TAP::Parser::Результат-Базовый класс для объектов вывода TAP::Parser</target>
        </trans-unit>
        <trans-unit id="03b8058105031bc1095218a7667a2ea1b2512b1e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Bailout</source>
          <target state="translated">TAP::Parser::Result::Bailout</target>
        </trans-unit>
        <trans-unit id="00f4b677e9dddb24581e9ed004b7470cf77a617e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Bailout - Bailout result token.</source>
          <target state="translated">TAP::Парсер::Результат::Спасение-маркер результата спасения.</target>
        </trans-unit>
        <trans-unit id="afba56eaac641feaac3daf9f840411e87ecf1e14" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Comment</source>
          <target state="translated">TAP::Parser::Result::Comment</target>
        </trans-unit>
        <trans-unit id="15ac19d49aebc2fdbf7a430ac512a0c55bc03548" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Comment - Comment result token.</source>
          <target state="translated">TAP::Парсер::Результат::Комментарий-Комментарий маркера результата.</target>
        </trans-unit>
        <trans-unit id="8028e0720d8ec37d7287bdb1bc7450078b0bf251" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Plan</source>
          <target state="translated">TAP::Parser::Result::Plan</target>
        </trans-unit>
        <trans-unit id="4383859286c921d76add9716628e055668e9e51d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Plan - Plan result token.</source>
          <target state="translated">TAP::Парсер::Результат::План-Запланировать маркер результата.</target>
        </trans-unit>
        <trans-unit id="f69e80305022a26d3e2f7acc2b0ed1b953372499" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Pragma</source>
          <target state="translated">TAP::Parser::Result::Pragma</target>
        </trans-unit>
        <trans-unit id="14e0c88ebea6563cf55ee8c08b3b9ed300f0d20c" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Pragma - TAP pragma token.</source>
          <target state="translated">TAP::Парсер::Результат::Прагма-TAP прагматический жетон.</target>
        </trans-unit>
        <trans-unit id="2c91344b1f933a9487eebefc220df8812b008445" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Test</source>
          <target state="translated">TAP::Parser::Result::Test</target>
        </trans-unit>
        <trans-unit id="edc9dae5ee4fae6dd91f0295f192573a8fb6a01a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Test - Test result token.</source>
          <target state="translated">TAP::Парсер::Результат::Тест-маркер результата теста.</target>
        </trans-unit>
        <trans-unit id="44c345b7d9dc9992b3e410debbb02b0d29d66e79" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Unknown</source>
          <target state="translated">TAP::Parser::Result::Unknown</target>
        </trans-unit>
        <trans-unit id="2943117d9510c588ee4451eb94edacf47000ab69" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Unknown - Unknown result token.</source>
          <target state="translated">TAP::Парсер::Результат::Неизвестно-Токен неизвестного результата.</target>
        </trans-unit>
        <trans-unit id="c6da177c03a14aa64f029674caca24adf3980051" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Version</source>
          <target state="translated">TAP::Parser::Result::Version</target>
        </trans-unit>
        <trans-unit id="57883e95518fac69c11831c9fff6d78815a22b85" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Version - TAP syntax version token.</source>
          <target state="translated">TAP::Parser::Результат::Версия-токен версии синтаксиса TAP.</target>
        </trans-unit>
        <trans-unit id="0f318e8c966222dedab8b0415294cae97d5f4f64" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::YAML</source>
          <target state="translated">TAP::Parser::Result::YAML</target>
        </trans-unit>
        <trans-unit id="68efbf9d5d727c77c2280206016668c939f6f897" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::YAML - YAML result token.</source>
          <target state="translated">TAP::Парсер::Результат::YAML-YAML маркер результата.</target>
        </trans-unit>
        <trans-unit id="1a3c6d732b12248b1b6d9e14cf320584eb0a7af0" translate="yes" xml:space="preserve">
          <source>TAP::Parser::ResultFactory</source>
          <target state="translated">TAP::Parser::ResultFactory</target>
        </trans-unit>
        <trans-unit id="4f51e316d0426f94634c75bc33e9099d8d304e39" translate="yes" xml:space="preserve">
          <source>TAP::Parser::ResultFactory - Factory for creating TAP::Parser output objects</source>
          <target state="translated">TAP::Парсер::РезультатФабрика-Фабрика для создания TAP::Объекты вывода парсера</target>
        </trans-unit>
        <trans-unit id="50d7a126914ae0138b7bdc512d9ccd5a5d77784d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler</source>
          <target state="translated">TAP::Parser::Scheduler</target>
        </trans-unit>
        <trans-unit id="6da57a5308e690ad2cdb39023741e3d016f8b96b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler - Schedule tests during parallel testing</source>
          <target state="translated">TAP::Парсер::Планировщик-Расписание тестов при параллельном тестировании</target>
        </trans-unit>
        <trans-unit id="81a373608790f502b94224968ea5fc04bfbb7622" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Job</source>
          <target state="translated">TAP::Parser::Scheduler::Job</target>
        </trans-unit>
        <trans-unit id="657d2fb895dc4c666b37510d12e2199629196955" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Job - A single testing job.</source>
          <target state="translated">TAP::Парсер::Планировщик::Работа-одно тестовое задание.</target>
        </trans-unit>
        <trans-unit id="5f18e879edab289da9e626ab0da6617557a360e9" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Spinner</source>
          <target state="translated">TAP::Parser::Scheduler::Spinner</target>
        </trans-unit>
        <trans-unit id="73c0394de64be963748b5ce71edfd4ac21a6b40d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Spinner - A no-op job.</source>
          <target state="translated">Планировщик::Спиннер-безработный.</target>
        </trans-unit>
        <trans-unit id="223a37f35fb2a759c5993cb7f97ef9683ee5bef9" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Source</source>
          <target state="translated">TAP::Parser::Source</target>
        </trans-unit>
        <trans-unit id="ba1432bca02f36d9b7eb2dec89d208a92989961b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Source - a TAP source &amp;amp; meta data about it</source>
          <target state="translated">TAP :: Parser :: Source - источник TAP и метаданные о нем</target>
        </trans-unit>
        <trans-unit id="b88d422ffa232da21769ecf23f36c9215fb7316d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler</source>
          <target state="translated">TAP::Parser::SourceHandler</target>
        </trans-unit>
        <trans-unit id="7a11e510cbf8229cb9deefa589961e1880c0ef0c" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler - Base class for different TAP source handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567fb9a0760765f024156fd52b7260852fb83a9f" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Executable</source>
          <target state="translated">TAP::Parser::SourceHandler::Executable</target>
        </trans-unit>
        <trans-unit id="def5a816ec0112a978d703f8596c8df1a84fd5e0" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Executable - Stream output from an executable TAP source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7855e6a236f3f1bba1561cccffbc0253a8b41c1a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::File</source>
          <target state="translated">TAP::Parser::SourceHandler::File</target>
        </trans-unit>
        <trans-unit id="c84a46ff700384567f810cc0dbe5e4d5b91c8613" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::File - Stream TAP from a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75757e90ca350dfe386979f74159d3e72435290" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Handle</source>
          <target state="translated">TAP::Parser::SourceHandler::Handle</target>
        </trans-unit>
        <trans-unit id="b6f0bcffb30af38c06936b6bf1545dd5a83277c1" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Handle - Stream TAP from an IO::Handle or a GLOB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4545cce101afaf68b0bd75f8cbbb180c6b160964" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Perl</source>
          <target state="translated">TAP::Parser::SourceHandler::Perl</target>
        </trans-unit>
        <trans-unit id="04e054f8c028c674d2c9287cae69082bbf9ce520" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Perl - Stream TAP from a Perl executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849652a7b8f5b288e476708d89c71b634dc488c2" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::RawTAP</source>
          <target state="translated">TAP::Parser::SourceHandler::RawTAP</target>
        </trans-unit>
        <trans-unit id="7fe676e21d00db4b7e1f5adc9ab5a7fc5c10349f" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::RawTAP - Stream output from raw TAP in a scalar/array ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75366f8757d0c89dc67745e9e30ae921835fc92" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Reader</source>
          <target state="translated">TAP::Parser::YAMLish::Reader</target>
        </trans-unit>
        <trans-unit id="92a795f40e2bb73376fc045a4635f6fcf7d6a7de" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Reader - Read YAMLish data from iterator</source>
          <target state="translated">TAP::Парсер::YAMLish::Читатель-Чтение данных YAMLish из итератора</target>
        </trans-unit>
        <trans-unit id="08d78eef616ac71669e623449566134b1c6d4b77" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Writer</source>
          <target state="translated">TAP::Parser::YAMLish::Writer</target>
        </trans-unit>
        <trans-unit id="662f33223b14be1ce958a19abee31b207588ba54" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Writer - Write YAMLish data</source>
          <target state="translated">TAP::Парсер::YAMLish::Writer-Write YAMLish data</target>
        </trans-unit>
        <trans-unit id="5b754807c6604c3c6635f1f0f60d367a6cffd283" translate="yes" xml:space="preserve">
          <source>TAPx Developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4682dfeedc4e9ca5c57ef7dd969ecc22339454" translate="yes" xml:space="preserve">
          <source>TARG</source>
          <target state="translated">TARG</target>
        </trans-unit>
        <trans-unit id="f762108ca727f0bcd961fc7467c248887dfa70dc" translate="yes" xml:space="preserve">
          <source>TARGET</source>
          <target state="translated">TARGET</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
