<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="27da418dc7160824d1f1cea0c0a27285c46f89f4" translate="yes" xml:space="preserve">
          <source>Looks like this:</source>
          <target state="translated">Похоже на то:</target>
        </trans-unit>
        <trans-unit id="3ccb11078ce15c4dd0a5f138c01c353d8c2f4351" translate="yes" xml:space="preserve">
          <source>Looks up ACCOUNT on SYSTEM and returns the domain name the SID and the SID type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3ed7a3dfb53ef1d6f3759b748f942473d585fb" translate="yes" xml:space="preserve">
          <source>Looks up SID on SYSTEM and returns the account name, domain name, and the SID type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4835cdf08a9f25eb81b07f89910dd3550584f529" translate="yes" xml:space="preserve">
          <source>Looks up the definition of a given &quot;DOS&quot; device name, yielding the active Windows NT native device name along with any currently dormant definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150d86722bc6a43c75ceadbe33863f7ae1a8f8cf" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position</source>
          <target state="translated">Выглядит тип лексической переменной на позиции</target>
        </trans-unit>
        <trans-unit id="998c8ddbb7e6740fa96f3b9ca124537de52289c1" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position &lt;code&gt;po&lt;/code&gt; in the currently-compiling pad. If the variable is typed, the stash of the class to which it is typed is returned. If not, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dba7dbb2ccc77afc11256e6171420abb3f68326" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt; . If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="translated">Найдите и верните ссылку на запись для &lt;code&gt;MACHINE&lt;/code&gt; . Если указан &lt;code&gt;LOGIN&lt;/code&gt; , то возвращенная запись будет иметь указанный логин. Если &lt;code&gt;LOGIN&lt;/code&gt; не указан, то будет возвращена первая запись в файле .netrc для &lt;code&gt;MACHINE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65d5fef357946c73156ad1815637c8d7d629904a" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt;. If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27af5395111fe3fb113c2e3d566816c9450bb06" translate="yes" xml:space="preserve">
          <source>Lookup for connect()</source>
          <target state="translated">Поиск connect()</target>
        </trans-unit>
        <trans-unit id="cfef537fd2855cc3dbc568fc189f69bf8fa670d8" translate="yes" xml:space="preserve">
          <source>Loop Control</source>
          <target state="translated">Управление циклом</target>
        </trans-unit>
        <trans-unit id="4394b7785cf8e6687ab901e849d752a278fd046b" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt; , since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="translated">Операторы управления циклом не работают в &lt;code&gt;if&lt;/code&gt; или &lt;code&gt;unless&lt;/code&gt; , поскольку они не являются циклами. Однако вы можете удвоить скобы, чтобы сделать их такими.</target>
        </trans-unit>
        <trans-unit id="48c6bd9b37d87812f90fc0d2ca6f3d53c5a09810" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt;, since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5406a6fab87283992041afaf3d98b63358ce87" translate="yes" xml:space="preserve">
          <source>Losing Overloading</source>
          <target state="translated">Потерянная перегрузка</target>
        </trans-unit>
        <trans-unit id="255b929d8a79cd2d34f3195e7105f962e8ff4cfe" translate="yes" xml:space="preserve">
          <source>Loss of information</source>
          <target state="translated">Потеря информации</target>
        </trans-unit>
        <trans-unit id="0af71f661f40a0d4f6c6a167f0b101bbfc974cb4" translate="yes" xml:space="preserve">
          <source>Lost precision when %s %f by 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc0d37079134dcffb425a52ede17bc5bc48e470" translate="yes" xml:space="preserve">
          <source>Lots of junk will go past as gdb reads in the relevant source files and libraries, and then:</source>
          <target state="translated">Много барахла будет проходить мимо,пока gdb читает в соответствующих файлах исходников и библиотеках,а затем:</target>
        </trans-unit>
        <trans-unit id="cbf5af644412cf3c7e29c07a134f4f07b457d268" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;Pod::Man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085dc9408c5b1c58693c372e333c4354a4cec51f" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="translated">Большая часть этой документации дублируется из &lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab1f1ddd535328223bedffdfeaa44f30147b00a6" translate="yes" xml:space="preserve">
          <source>Lots. See</source>
          <target state="translated">Много.См..</target>
        </trans-unit>
        <trans-unit id="05699eeb34507ef8b7729483cad54f68e5da82dd" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to bzip2 compression library</source>
          <target state="translated">Низкоуровневый интерфейс к библиотеке сжатия bzip2</target>
        </trans-unit>
        <trans-unit id="daa6640df64c8d3fd04d48a86e9c6104202745fc" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to zlib compression library</source>
          <target state="translated">Низкоуровневый интерфейс к библиотеке сжатия zlib</target>
        </trans-unit>
        <trans-unit id="a0c4ed2cdac85f3556324d12104692afb5867488" translate="yes" xml:space="preserve">
          <source>Low-level File Opens via sysopen</source>
          <target state="translated">Низкоуровневый файл Открывается через sysopen</target>
        </trans-unit>
        <trans-unit id="bbbd1cb27a00deeb8c66f6ae061bb29e0862f1bd" translate="yes" xml:space="preserve">
          <source>Low-level access to Win32 system API calls for files/dirs.</source>
          <target state="translated">Низкоуровневый доступ к системному API Win32 вызывает файлы/дисплеи.</target>
        </trans-unit>
        <trans-unit id="e8c85a684a62b80d06983e6e12e35335310bc09b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt; , etc.</source>
          <target state="translated">Низкоуровневый уровень, который вызывает &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;lseek&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="7f89e9304454a9ca27d4f058ae1ff5cae7d7d44b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c868659706d4acf0f9a3d5d20af059cb10c22a" translate="yes" xml:space="preserve">
          <source>Low-level socket functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf8ce4a5f4a2b06b346bb8ef9b168681a52fab2" translate="yes" xml:space="preserve">
          <source>Lowercase_Letter</source>
          <target state="translated">Lowercase_Letter</target>
        </trans-unit>
        <trans-unit id="a99d83c11e02cb19d312201ee35e6930d1ab9ee1" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name list.</source>
          <target state="translated">Снижает количество ссылок в списке имен колодок.</target>
        </trans-unit>
        <trans-unit id="1b905a464c50eff889d1fabd4387275f0c86db4f" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name.</source>
          <target state="translated">Снижает количество ссылок на название площадки.</target>
        </trans-unit>
        <trans-unit id="64d41b1df2cdae534f1fdacc800338a809f214c6" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()).</source>
          <target state="translated">Низкоуровневый слой,обеспечивающий основные операции PerlIO с точки зрения вызовов числовых файловых дескрипторов UNIX/POSIX (open(),read(),write(),lseek(),close()).</target>
        </trans-unit>
        <trans-unit id="46baacdecc30fd8131a5c1a06a482d538e74c4c5" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()). It is used even on non-Unix architectures, and most other layers operate on top of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f76153b489235de1b7ba0a13f749867749dbd1e" translate="yes" xml:space="preserve">
          <source>Lukas Eklund &amp;lt;leklund@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b73d35c25cb2d87aaa9bb21b4aedfa85686027" translate="yes" xml:space="preserve">
          <source>Luther Huffman, lutherh@stratcom.com, Strategic Computer Solutions, Inc.</source>
          <target state="translated">Лютер Хаффман,lutherh@stratcom.com,Strategic Computer Solutions,Inc.</target>
        </trans-unit>
        <trans-unit id="992354f36023a64134d9045affe474e73e18db31" translate="yes" xml:space="preserve">
          <source>Luvverly! and to fix this we declare all variables explicitly and now our script looks like this:</source>
          <target state="translated">Luvverly! и чтобы это исправить,мы объявляем все переменные явно,и теперь наш скрипт выглядит так:</target>
        </trans-unit>
        <trans-unit id="dc6aa5975bc24ec633f5fcc8f9ccf2766d7ad7e9" translate="yes" xml:space="preserve">
          <source>Lvalue casts</source>
          <target state="translated">слепки по стоимости</target>
        </trans-unit>
        <trans-unit id="c819825aaf49d2c99e8f8f2add24599bfbddb1a0" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines</source>
          <target state="translated">подпрограммы стоимости</target>
        </trans-unit>
        <trans-unit id="a77fcba977d5eb923b72725f6d5dc4fe49dee064" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines are convenient, but you have to keep in mind that, when used with objects, they may violate encapsulation. A normal mutator can check the supplied argument before setting the attribute it is protecting, an lvalue subroutine cannot. If you require any special processing when storing and retrieving the values, consider using the CPAN module Sentinel or something similar.</source>
          <target state="translated">Подпрограммы значений удобны,но следует помнить,что при использовании с объектами они могут нарушать инкапсуляцию.Обычный мутатор может проверить поставленный аргумент перед установкой атрибута,который он защищает,а подпрограмма lvalue не может.Если вам требуется какая-либо специальная обработка при хранении и извлечении значений,подумайте об использовании модуля CPAN Sentinel или чего-то подобного.</target>
        </trans-unit>
        <trans-unit id="01157c3907a273e426b801b96bad325cfefca606" translate="yes" xml:space="preserve">
          <source>Lzma (method 14)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53448a46968767fc3dc24857326ec00bf716b8a2" translate="yes" xml:space="preserve">
          <source>Lzma Compression Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="c716084845f60944f0ccfd3046e9665113c093b0" translate="yes" xml:space="preserve">
          <source>MAGIC</source>
          <target state="translated">MAGIC</target>
        </trans-unit>
        <trans-unit id="9bc0ed9c361a62773b779bac20ca83bc337097db" translate="yes" xml:space="preserve">
          <source>MAGICXS</source>
          <target state="translated">MAGICXS</target>
        </trans-unit>
        <trans-unit id="15c8cbe6eb1479a64e132c9d7a73db9ce6a8aab3" translate="yes" xml:space="preserve">
          <source>MAILING LIST</source>
          <target state="translated">ОСНОВНОЙ ПЕРЕЧЕНЬ</target>
        </trans-unit>
        <trans-unit id="b3b45a6a598ee27528bae4158cd460e7b0cab066" translate="yes" xml:space="preserve">
          <source>MAIN API EXPORTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f672ec1a25cdbb81af49b4e2e09eb665a197b037" translate="yes" xml:space="preserve">
          <source>MAIN METHODS</source>
          <target state="translated">ОСНОВНЫЕ МЕТОДЫ</target>
        </trans-unit>
        <trans-unit id="7bee61cc4b2ff6ceaa5bf2c847f0465ac92786f6" translate="yes" xml:space="preserve">
          <source>MAIN SEARCH METHODS</source>
          <target state="translated">ОСНОВНЫЕ МЕТОДЫ ПОИСКА</target>
        </trans-unit>
        <trans-unit id="b2bcf80339bb8c2f5b627482d7224ef03323abc9" translate="yes" xml:space="preserve">
          <source>MAINTAINER</source>
          <target state="translated">MAINTAINER</target>
        </trans-unit>
        <trans-unit id="572378cf179c50ade4591b0f42a539fe3de5c4ba" translate="yes" xml:space="preserve">
          <source>MAINTAINERS</source>
          <target state="translated">MAINTAINERS</target>
        </trans-unit>
        <trans-unit id="a573378dd124c5aff03b74a9a4dee3c0207dd14a" translate="yes" xml:space="preserve">
          <source>MAINTENANCE AND SUPPORT</source>
          <target state="translated">ТЕХНИЧЕСКОЕ ОБСЛУЖИВАНИЕ И ПОДДЕРЖКА</target>
        </trans-unit>
        <trans-unit id="381f8b8847a78b52a5c355f7a396ec94cdfb3fe2" translate="yes" xml:space="preserve">
          <source>MAINTENANCE BRANCHES</source>
          <target state="translated">РЕМОНТНЫЕ ФИЛИАЛЫ</target>
        </trans-unit>
        <trans-unit id="5f4395a75c71fe04b6156d6290da65a27f17e138" translate="yes" xml:space="preserve">
          <source>MAKE</source>
          <target state="translated">MAKE</target>
        </trans-unit>
        <trans-unit id="0124d424fb4888dc5f53bb1ef59aaa8406bebab8" translate="yes" xml:space="preserve">
          <source>MAKE ASSERTIONS -&amp;gt; SEND EVENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c08604e5e552ec9e9c63c71fc8f4ef53453d1a" translate="yes" xml:space="preserve">
          <source>MAKE ON CYGWIN</source>
          <target state="translated">УДАР НА ЦИГВИНЕ</target>
        </trans-unit>
        <trans-unit id="1f0292102c8114ed4accdb4b3187dd3355fe606e" translate="yes" xml:space="preserve">
          <source>MAKE PROBLEMS.</source>
          <target state="translated">ПРОБЛЕМЫ УПРАВЛЕНИЯ.</target>
        </trans-unit>
        <trans-unit id="606cfc5f8f22b0f666e90c16494ce8cfe5172b45" translate="yes" xml:space="preserve">
          <source>MAKE TEST</source>
          <target state="translated">ПРОБНЫЙ ТЕСТ</target>
        </trans-unit>
        <trans-unit id="4197ed452e3e67bf334841bde4210f984cf23e44" translate="yes" xml:space="preserve">
          <source>MAKEAPERL</source>
          <target state="translated">MAKEAPERL</target>
        </trans-unit>
        <trans-unit id="df6262932ccb109dce90e30936b4e6b9e6d0d4c2" translate="yes" xml:space="preserve">
          <source>MAKEFILE_OLD</source>
          <target state="translated">MAKEFILE_OLD</target>
        </trans-unit>
        <trans-unit id="d33b61e914eef018d44c2af2392dd8a8bb3f0814" translate="yes" xml:space="preserve">
          <source>MAKEMAKER: path to the MakeMaker module.</source>
          <target state="translated">MAKEMAKER:путь к модулю MakeMaker.</target>
        </trans-unit>
        <trans-unit id="fba0fd0dd60434c9d108881cdd60c2cfbd09f893" translate="yes" xml:space="preserve">
          <source>MAN PAGES</source>
          <target state="translated">ЧЕЛОВЕЧЕСКИЕ ПАГИ</target>
        </trans-unit>
        <trans-unit id="c64d5c48751d39c885c4bcdfb24a588e7e222136" translate="yes" xml:space="preserve">
          <source>MAN1PODS</source>
          <target state="translated">MAN1PODS</target>
        </trans-unit>
        <trans-unit id="c7fb89700825cc5dfcebfd44326a8eec88015a73" translate="yes" xml:space="preserve">
          <source>MAN3PODS</source>
          <target state="translated">MAN3PODS</target>
        </trans-unit>
        <trans-unit id="41d43d8ceb08d1444c2cfb5b56c19af1bc2840bf" translate="yes" xml:space="preserve">
          <source>MANAGING FORMATTERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae61f13c66eb261147f9d4b1d89a27b5c697890" translate="yes" xml:space="preserve">
          <source>MANIFEST</source>
          <target state="translated">MANIFEST</target>
        </trans-unit>
        <trans-unit id="ee43e9094077d72c1da72a9a91b89d3593977bf3" translate="yes" xml:space="preserve">
          <source>MANIFEST ON CYGWIN</source>
          <target state="translated">ПРОЯВЛЯТЬСЯ НА ЦИГВИНЕ</target>
        </trans-unit>
        <trans-unit id="99aec53b52aee7fd41e057b43112a2b07b20b1fa" translate="yes" xml:space="preserve">
          <source>MANIFEST.SKIP</source>
          <target state="translated">MANIFEST.SKIP</target>
        </trans-unit>
        <trans-unit id="93ba9a2acb7ece879d6eae4b3780b55ff65e53c6" translate="yes" xml:space="preserve">
          <source>MANIFEST.bak</source>
          <target state="translated">MANIFEST.bak</target>
        </trans-unit>
        <trans-unit id="71154a1d58b708083b1b8a9a53cc03dfaac27380" translate="yes" xml:space="preserve">
          <source>MAP DATA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="209ca025362fc9c148579a1bf701af6d3fbee6d2" translate="yes" xml:space="preserve">
          <source>MAP_TARGET</source>
          <target state="translated">MAP_TARGET</target>
        </trans-unit>
        <trans-unit id="20b7a63446bb07c65998bdd386758cc1d4e47490" translate="yes" xml:space="preserve">
          <source>MARK</source>
          <target state="translated">MARK</target>
        </trans-unit>
        <trans-unit id="ce71241b2af9817fe6f961964423ded83b2b2446" translate="yes" xml:space="preserve">
          <source>MATCH</source>
          <target state="translated">MATCH</target>
        </trans-unit>
        <trans-unit id="34a4dfce34585d297b90edd353506556851a5017" translate="yes" xml:space="preserve">
          <source>MATH</source>
          <target state="translated">MATH</target>
        </trans-unit>
        <trans-unit id="72a965b84fe5d8bf2c44aadc341ef716b1bb9f90" translate="yes" xml:space="preserve">
          <source>MATH LIBRARY</source>
          <target state="translated">МАТЕМАТИЧЕСКАЯ БИБЛИОТЕКА</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="792fd2692b3061f3e55fd6e6d06b2216b2041c0f" translate="yes" xml:space="preserve">
          <source>MAXCOMPLEN is the maximum length of a filename component (the part between two backslashes) on this file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68525ad751f8a1d932458c4c58a214bdf0b30e9" translate="yes" xml:space="preserve">
          <source>MEDIUM</source>
          <target state="translated">MEDIUM</target>
        </trans-unit>
        <trans-unit id="f4b1c471ce1efbe25d7232b293140a21b7fea826" translate="yes" xml:space="preserve">
          <source>MEMORY</source>
          <target state="translated">MEMORY</target>
        </trans-unit>
        <trans-unit id="cdf5b879eba064baae0d94237dbf7820fdcbb018" translate="yes" xml:space="preserve">
          <source>MEMORY DEBUGGERS</source>
          <target state="translated">ОТЛАДЧИКИ ПАМЯТИ</target>
        </trans-unit>
        <trans-unit id="e31b925235cc3be7fd5e0670fdc195273a9cff6f" translate="yes" xml:space="preserve">
          <source>MEMORY STORE</source>
          <target state="translated">ПАМЯТНАЯ ИСТОРИЯ</target>
        </trans-unit>
        <trans-unit id="4c1e46b92295867a7e3aedb69823f567f1577697" translate="yes" xml:space="preserve">
          <source>MERGE STRATEGIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3e8367fd77b35795f6a4515a82e2821f81990d" translate="yes" xml:space="preserve">
          <source>MESSAGE-SPEC</source>
          <target state="translated">MESSAGE-SPEC</target>
        </trans-unit>
        <trans-unit id="c459b150dd079f2662d2dc95f57ad127cc7aa8df" translate="yes" xml:space="preserve">
          <source>META CHARACTERS</source>
          <target state="translated">МЕТА-СИМВОЛЫ</target>
        </trans-unit>
        <trans-unit id="e3b3cae38e87b40132568c5a00d9fdb4dbf0d028" translate="yes" xml:space="preserve">
          <source>META Concerns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0396a803e296b3603471fd9fe995f4d3b469448" translate="yes" xml:space="preserve">
          <source>META-KEY RESTRICTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6da301633ce81aa21cac64ffb95d87c6894995" translate="yes" xml:space="preserve">
          <source>META.json</source>
          <target state="translated">META.json</target>
        </trans-unit>
        <trans-unit id="3b7f8f92275828b66b32cb6c6aeb61e73c1d7587" translate="yes" xml:space="preserve">
          <source>META.yml</source>
          <target state="translated">META.yml</target>
        </trans-unit>
        <trans-unit id="b763622141e2fabeb07a88720f777618ff14ff8f" translate="yes" xml:space="preserve">
          <source>META_ADD</source>
          <target state="translated">META_ADD</target>
        </trans-unit>
        <trans-unit id="ffea654c220d2875e7a864f30439535466d152eb" translate="yes" xml:space="preserve">
          <source>META_MERGE</source>
          <target state="translated">META_MERGE</target>
        </trans-unit>
        <trans-unit id="296be0aba5c6db10945a86505a9c35adbc0a5da7" translate="yes" xml:space="preserve">
          <source>METHOD CALLING</source>
          <target state="translated">МЕТОДСКИЙ ЗВОНОК</target>
        </trans-unit>
        <trans-unit id="7541f2ddbea83515621139a06393c2c41632b2df" translate="yes" xml:space="preserve">
          <source>METHODS</source>
          <target state="translated">METHODS</target>
        </trans-unit>
        <trans-unit id="7347dda2b461e7f991ef3bb4cbeac4cccce22688" translate="yes" xml:space="preserve">
          <source>METHODS AND FIELDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb215be859943e6d7b15dec190189887d7849cd" translate="yes" xml:space="preserve">
          <source>METHODS FOR PARSING AND PROCESSING</source>
          <target state="translated">МЕТОДЫ АНАЛИЗА И ОБРАБОТКИ</target>
        </trans-unit>
        <trans-unit id="e6e31389588ce3a302e9399908d50ba1bc9b2ff6" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MAY IMPLEMENT OR OVERRIDE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab46e61362be7095bd0ecea299cf9afde867e32c" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MUST IMPLEMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac1668d54ba3469d07436c3cb4d6c63921e8439" translate="yes" xml:space="preserve">
          <source>MILLIONS OF MACROS</source>
          <target state="translated">МИЛЛИОНЫ МАКРОСОВ</target>
        </trans-unit>
        <trans-unit id="8c54fa1663ec8e58feaa0f76d0ad16806f96497d" translate="yes" xml:space="preserve">
          <source>MIME 'B' and 'Q' header encoding</source>
          <target state="translated">MIME 'B' и 'Q' кодировка заголовков</target>
        </trans-unit>
        <trans-unit id="f0186eb413ae0fe1b04a58826d46062c8207cd98" translate="yes" xml:space="preserve">
          <source>MIME (Multipurpose Internet Mail Extensions)</source>
          <target state="translated">MIME (Multipurpose Internet Mail Extensions-Многоцелевые расширения электронной почты Интернета)</target>
        </trans-unit>
        <trans-unit id="448dc4536185fa521763a707f1aaa251c78a81e2" translate="yes" xml:space="preserve">
          <source>MIME encoding for an unstructured email header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced61424802296ffb38430fa8f0fab4da3883207" translate="yes" xml:space="preserve">
          <source>MIME::Base64</source>
          <target state="translated">MIME::Base64</target>
        </trans-unit>
        <trans-unit id="7fe3ea65bc04a88102c03df5c340d4e7c1520d18" translate="yes" xml:space="preserve">
          <source>MIME::Base64 - Encoding and decoding of base64 strings</source>
          <target state="translated">MIME::Base64-кодирование и декодирование строк base64</target>
        </trans-unit>
        <trans-unit id="7ffae17f904a8de9b8c01b15e74d1504ffbc2043" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint</source>
          <target state="translated">MIME::QuotedPrint</target>
        </trans-unit>
        <trans-unit id="65095920906e9bf0fe024eb72fdfbbe098341dd5" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint - Encoding and decoding of quoted-printable strings</source>
          <target state="translated">MIME::QuotedPrint-кодирование и декодирование строк для печати в кавычках</target>
        </trans-unit>
        <trans-unit id="7f1f9a719a9f150e508497c923f92b8123e37935" translate="yes" xml:space="preserve">
          <source>MIME_ENCODING</source>
          <target state="translated">MIME_ENCODING</target>
        </trans-unit>
        <trans-unit id="79b8daea186e0e9dd2d8665c8e357ddbbf0a21c4" translate="yes" xml:space="preserve">
          <source>MIN_PERL_VERSION</source>
          <target state="translated">MIN_PERL_VERSION</target>
        </trans-unit>
        <trans-unit id="8d9cb354f1b92318e37511c8328e0bfc3a396a31" translate="yes" xml:space="preserve">
          <source>MISC</source>
          <target state="translated">MISC</target>
        </trans-unit>
        <trans-unit id="fbc28147d7dae55d07ef20379522673d2cd4aff7" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS</source>
          <target state="translated">MISCELLANEOUS</target>
        </trans-unit>
        <trans-unit id="0e2957d871def6ecf380e593a975af27f56d18ea" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS TRICKS</source>
          <target state="translated">РАЗЛИЧНЫЕ ТРЮКИ</target>
        </trans-unit>
        <trans-unit id="8727bad0374de5d99b1e6473dee31baa8ae41493" translate="yes" xml:space="preserve">
          <source>MKTEMP FUNCTIONS</source>
          <target state="translated">ФУНКЦИИ MKTEMP</target>
        </trans-unit>
        <trans-unit id="38de91e68bd653a65240e9601577373f8b2878b4" translate="yes" xml:space="preserve">
          <source>MM_REVISION: ExtUtils::MakeMaker version control revision (for backwards compat)</source>
          <target state="translated">MM_REVISION:ExtUtils::MakeMaker version control revision (для обратного компата)</target>
        </trans-unit>
        <trans-unit id="065dc1eef187bb989bef804cda0869075be856b3" translate="yes" xml:space="preserve">
          <source>MM_VERSION: ExtUtils::MakeMaker Version</source>
          <target state="translated">ММ_ВЕРСИЯ:Расширения::Версия MakeMaker</target>
        </trans-unit>
        <trans-unit id="b630876e2ee4a66e53ca42c0024ca639bccd9170" translate="yes" xml:space="preserve">
          <source>MM_VMS_REVISION is for backwards compatibility before MM_VMS had a $VERSION.</source>
          <target state="translated">MM_VMS_REVISION предназначена для обратной совместимости до того,как MM_VMS имел $VERSION.</target>
        </trans-unit>
        <trans-unit id="5a5019b6901ec4e0159788b99019a468b1278f03" translate="yes" xml:space="preserve">
          <source>MODE</source>
          <target state="translated">MODE</target>
        </trans-unit>
        <trans-unit id="11d727b07a2ef2f226c24b7b3ca7ffbcc8a440f3" translate="yes" xml:space="preserve">
          <source>MODIFICATION HISTORY</source>
          <target state="translated">ИСТОРИЯ ИЗМЕНЕНИЙ</target>
        </trans-unit>
        <trans-unit id="3506eba054bea9f2aa92527050cd8aa61b12595f" translate="yes" xml:space="preserve">
          <source>MODIFY_</source>
          <target state="translated">MODIFY_</target>
        </trans-unit>
        <trans-unit id="66bffe2295ae671e5d45439c77216938c792414b" translate="yes" xml:space="preserve">
          <source>MODULE</source>
          <target state="translated">MODULE</target>
        </trans-unit>
        <trans-unit id="a3e25a142bc9338d99e21ddb92754631acdb233f" translate="yes" xml:space="preserve">
          <source>MODULENAME is the Perl module name, e.g. Devel::SelfStubber, NOT 'Devel/SelfStubber' or 'Devel/SelfStubber.pm'.</source>
          <target state="translated">МОДУЛЬНАМИ-это имя модуля Perl,например Devel::SelfStubber,а не 'Devel/SelfStubber' или 'Devel/SelfStubber.pm'.</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="630e8cd715da84adcb106243940c860db346e2eb" translate="yes" xml:space="preserve">
          <source>MODULES USED</source>
          <target state="translated">ИСПОЛЬЗОВАННЫЕ МОДУЛИ</target>
        </trans-unit>
        <trans-unit id="b3c85e8affa5446d487b201bbc63d337d6d7f54d" translate="yes" xml:space="preserve">
          <source>MOD[=bar,baz]</source>
          <target state="translated">MOD[=bar,baz]</target>
        </trans-unit>
        <trans-unit id="c47b9589ffc380689e211aa66dac2ba8473cc24a" translate="yes" xml:space="preserve">
          <source>MONO CASE then sort data (for non-digits, non-underscore)</source>
          <target state="translated">MONO CASE затем сортирует данные (для нецифровых,не подпадающих под обесценение).</target>
        </trans-unit>
        <trans-unit id="b537891a9c0b5c8f4e6ee16a9ec71caca75f6730" translate="yes" xml:space="preserve">
          <source>MORAL</source>
          <target state="translated">MORAL</target>
        </trans-unit>
        <trans-unit id="2c624e5265a05c5d2c6e21783801e9896aa0132f" translate="yes" xml:space="preserve">
          <source>MORE</source>
          <target state="translated">MORE</target>
        </trans-unit>
        <trans-unit id="bc4fc594140fde77e059ad4498ad554e3cbee3e9" translate="yes" xml:space="preserve">
          <source>MORE ELABORATE RECORDS</source>
          <target state="translated">БОЛЕЕ ПОДРОБНЫЕ ОТЧЁТЫ</target>
        </trans-unit>
        <trans-unit id="64bf6c143dc817670181bbd264688b3acbcd5d5a" translate="yes" xml:space="preserve">
          <source>MORE EXAMPLES</source>
          <target state="translated">БОЛЬШИЕ ЭКЗАМПЛИ</target>
        </trans-unit>
        <trans-unit id="9ad9881a7f17afaec8c4ae609d85b1187596ee5b" translate="yes" xml:space="preserve">
          <source>MORE INFORMATION</source>
          <target state="translated">ДОПОЛНИТЕЛЬНЫЕ СВЕДЕНИЯ</target>
        </trans-unit>
        <trans-unit id="76991e71012a76451fe2a0cc0849f44f697181ec" translate="yes" xml:space="preserve">
          <source>MORE READING FOR GUTS HACKERS</source>
          <target state="translated">БОЛЬШЕ ИНФОРМАЦИИ ДЛЯ ХАКЕРОВ</target>
        </trans-unit>
        <trans-unit id="e7fd50abbfbafe75448c31d50672233d0a7980c6" translate="yes" xml:space="preserve">
          <source>MOREMAGIC</source>
          <target state="translated">MOREMAGIC</target>
        </trans-unit>
        <trans-unit id="abdd28bdcd2ff588ed4391e2849b71273a64ab04" translate="yes" xml:space="preserve">
          <source>MRO Functions</source>
          <target state="translated">функции MRO</target>
        </trans-unit>
        <trans-unit id="b105d95acedcd0df5c653c0e1be8aac0aa3534a5" translate="yes" xml:space="preserve">
          <source>MS-DOS</source>
          <target state="translated">MS-DOS</target>
        </trans-unit>
        <trans-unit id="304ff724cf80bd1102c4a52a83e37a5a11d51edf" translate="yes" xml:space="preserve">
          <source>MSG_BCAST, MSG_OOB, MSG_TRUNC, ...</source>
          <target state="translated">MSG_BCAST,MSG_OOB,MSG_TRUNC,...</target>
        </trans-unit>
        <trans-unit id="95ed316aead6f0a90227220b98ed2c6a72173129" translate="yes" xml:space="preserve">
          <source>MSWin32 case-tolerance depends on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Since XP FS_CASE_SENSITIVE is effectively disabled for the NT subsubsystem. See &lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt; Default: 1</source>
          <target state="translated">Допуск к регистру в MSWin32 зависит от GetVolumeInformation () $ ouFsFlags == FS_CASE_SENSITIVE, что указывает на важность регистра при сравнении спецификаций файлов. Поскольку XP FS_CASE_SENSITIVE эффективно отключена для подсистемы NT. См. &lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;Http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt; По умолчанию: 1</target>
        </trans-unit>
        <trans-unit id="46b420891abbe816108b89b151663fa05cb3b237" translate="yes" xml:space="preserve">
          <source>MULTI-OCTET CHARACTER SETS</source>
          <target state="translated">НАБОРЫ СИМВОЛОВ МУЛЬТИОКЕТА</target>
        </trans-unit>
        <trans-unit id="1157801a76643907eaa464d8d8b432b909f3f592" translate="yes" xml:space="preserve">
          <source>MULTICALL</source>
          <target state="translated">MULTICALL</target>
        </trans-unit>
        <trans-unit id="410655851813ae42e29a8af5e0c4bbe60816fe96" translate="yes" xml:space="preserve">
          <source>MULTITHREADED APPLICATIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112f1bc5464cbf86ad8abc28805d58542d252dc7" translate="yes" xml:space="preserve">
          <source>MUST decode</source>
          <target state="translated">ОБЯЗАННОЕ декодирование</target>
        </trans-unit>
        <trans-unit id="f3f97d4e65bbf8e05b9d2003dabed48039672a9b" translate="yes" xml:space="preserve">
          <source>MUST return the octet sequence representing</source>
          <target state="translated">ДОЛЖЕН возвращать октетную последовательность,представляющую собой</target>
        </trans-unit>
        <trans-unit id="f37495c410f3672ad3b7e5f75ff69fe1801eda14" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the IANA charset name of the encoding.</source>
          <target state="translated">ДОЛЖЕН возвращать строку,представляющую собой имя кодового набора IANA.</target>
        </trans-unit>
        <trans-unit id="df44e8bf9f5bb85b1c861873578524b02eaca16a" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the canonical name of the encoding.</source>
          <target state="translated">ДОЛЖЕН возвращать строку,представляющую каноническое имя кодировки.</target>
        </trans-unit>
        <trans-unit id="4a6d2a5fac9fc009e8ef2c66dccfa9c0e7765210" translate="yes" xml:space="preserve">
          <source>MUST return the string that</source>
          <target state="translated">ДОЛЖЕН возвращать строку,которая</target>
        </trans-unit>
        <trans-unit id="d2008ef579d429eb9f21f1dee25cb60d820de1c0" translate="yes" xml:space="preserve">
          <source>MUTATION</source>
          <target state="translated">MUTATION</target>
        </trans-unit>
        <trans-unit id="bcbdfcff47f36a4bd295e8dcb4203d07f1343372" translate="yes" xml:space="preserve">
          <source>MYEXTLIB</source>
          <target state="translated">MYEXTLIB</target>
        </trans-unit>
        <trans-unit id="8a1a4fa060cab0b9420887b26bf1330d0275e0dd" translate="yes" xml:space="preserve">
          <source>MYMETA.json</source>
          <target state="translated">MYMETA.json</target>
        </trans-unit>
        <trans-unit id="2f5e6a42d1d484cbbde0efe806d130305e765ea2" translate="yes" xml:space="preserve">
          <source>MYMETA.yml</source>
          <target state="translated">MYMETA.yml</target>
        </trans-unit>
        <trans-unit id="c83e0148da9329e1a74fae48edd72325f87db2ab" translate="yes" xml:space="preserve">
          <source>MY_CXT</source>
          <target state="translated">MY_CXT</target>
        </trans-unit>
        <trans-unit id="c92b11ff7ab5a4c5fd081db7883c7b3a71c6ef70" translate="yes" xml:space="preserve">
          <source>MY_CXT REFERENCE</source>
          <target state="translated">ССЫЛКА НА MY_CXT</target>
        </trans-unit>
        <trans-unit id="71c4b4f77dd6aa81ae33d939a92a8e29b5de3e34" translate="yes" xml:space="preserve">
          <source>MY_CXT_CLONE</source>
          <target state="translated">MY_CXT_CLONE</target>
        </trans-unit>
        <trans-unit id="8f9145c9f6a580d204ffb3a2156f8854c633e0db" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT</source>
          <target state="translated">MY_CXT_INIT</target>
        </trans-unit>
        <trans-unit id="b0c38180ec37e61376fb7d95221d9077a44d5cc9" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT_INTERP(my_perl)</source>
          <target state="translated">MY_CXT_INIT_INTERP(my_perl)</target>
        </trans-unit>
        <trans-unit id="8d47e1fdc3a026db13eae6a6b125df6ba8c7928c" translate="yes" xml:space="preserve">
          <source>MY_CXT_KEY</source>
          <target state="translated">MY_CXT_KEY</target>
        </trans-unit>
        <trans-unit id="61ad4287cd41e2e97ad96a7d5cba5a661af2c472" translate="yes" xml:space="preserve">
          <source>MY_LIB_DIR defaults to '.' if not present.</source>
          <target state="translated">MY_LIB_DIR по умолчанию '...',если нет.</target>
        </trans-unit>
        <trans-unit id="9790a85a1a9e58a2ddd68bd085adb9c931b1b046" translate="yes" xml:space="preserve">
          <source>Mac OS 9 and earlier used &lt;code&gt;:&lt;/code&gt; as a path separator instead of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Mac OS 9 и более ранние версии использовались &lt;code&gt;:&lt;/code&gt; в качестве разделителя пути вместо &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208982d7e71273ee9421bf88e0b53b6ad837f35" translate="yes" xml:space="preserve">
          <source>Mac OS X 10.5 &quot;Leopard&quot; and above do not require the 'u' variant.</source>
          <target state="translated">Mac OS X 10.5 &quot;Leopard&quot; и выше не требуют варианта &quot;u&quot;.</target>
        </trans-unit>
        <trans-unit id="27e0400e4107eec8c9b3ecfab19987f0725198d4" translate="yes" xml:space="preserve">
          <source>Mac OS X documentation on syslog, &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</source>
          <target state="translated">Документация по системному журналу Mac OS X, &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4c0bf3f7dab7b087f55de5614ca5cbaddeea9b9" translate="yes" xml:space="preserve">
          <source>Mac OS X ships with a dynamically-loaded libperl, but the default for this release is to compile a static libperl. The reason for this is pre-binding. Dynamic libraries can be pre-bound to a specific address in memory in order to decrease load time. To do this, one needs to be aware of the location and size of all previously-loaded libraries. Apple collects this information as part of their overall OS build process, and thus has easy access to it when building Perl, but ordinary users would need to go to a great deal of effort to obtain the information needed for pre-binding.</source>
          <target state="translated">Mac OS X поставляется с динамически загружаемой libperl,но по умолчанию в этом выпуске компилируется статический libperl.Причина этого-предварительная привязка.Динамические библиотеки могут быть предварительно привязаны к определенному адресу в памяти для уменьшения времени загрузки.Для этого необходимо знать расположение и размер всех ранее загруженных библиотек.Apple собирает эту информацию как часть общего процесса сборки ОС,и,таким образом,имеет легкий доступ к ней при сборке Perl,но обычным пользователям придется приложить немало усилий,чтобы получить информацию,необходимую для предварительной привязки.</target>
        </trans-unit>
        <trans-unit id="0343b2a40016db738fa670b19df9f47fc227d16f" translate="yes" xml:space="preserve">
          <source>Mac OS X.</source>
          <target state="translated">Mac OS X.</target>
        </trans-unit>
        <trans-unit id="05365d617a6f81e5ccef6d039b61942e2b328dfe" translate="yes" xml:space="preserve">
          <source>MacOS's epoch is midnight January 1st, 1904. VMS's is midnight, November 17th, 1858, but vmsperl emulates the Unix epoch so it's not a problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546928a146336cd7f40c7bb8263ae0c9584726db" translate="yes" xml:space="preserve">
          <source>Macintosh encodings don't seem to be registered in such entities as IANA. &quot;Canonical&quot; names in Encode are based upon Apple's Tech Note 1150. See &lt;a href=&quot;http://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e813bad999ce5a75f4490c8ed14ec07ab9d63a2d" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list explicitly exporting the symbols.</source>
          <target state="translated">Макро,чтобы объявить XSUB и его список параметров C,явно экспортируя символы.</target>
        </trans-unit>
        <trans-unit id="3f0040307b52caa52d747905fa724ed6b830cee4" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list without exporting the symbols. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; and generally preferable over exporting the XSUB symbols unnecessarily.</source>
          <target state="translated">Макрос для объявления XSUB и его списка параметров C без экспорта символов. Это обрабатывается &lt;code&gt;xsubpp&lt;/code&gt; и обычно предпочтительнее без надобности экспортировать символы XSUB.</target>
        </trans-unit>
        <trans-unit id="1376083aeef8a0b2b3a5461de74e71c6974c467b" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; . It is the same as using the more explicit XS_EXTERNAL macro.</source>
          <target state="translated">Макрос для объявления XSUB и его списка параметров C. Этим занимается &lt;code&gt;xsubpp&lt;/code&gt; . Это то же самое, что и использование более явного макроса XS_EXTERNAL.</target>
        </trans-unit>
        <trans-unit id="e18a81f50de73a3bc24953bde393f35d1ef8d9ce" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt;. It is the same as using the more explicit &lt;code&gt;XS_EXTERNAL&lt;/code&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aea32d1102862e7b6b0c8089588079d1bf46bd9" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's $VERSION variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;The VERSIONCHECK: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">Макрос для проверки того, что переменная $ VERSION модуля &lt;code&gt;XS_VERSION&lt;/code&gt; переменной XS_VERSION модуля XS . Обычно это автоматически выполняется &lt;code&gt;xsubpp&lt;/code&gt; . См &lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;. VERSIONCHECK: ключевое слово в perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7597f0d069d4377113f05c6161af543ea57a3c7" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's &lt;code&gt;$VERSION&lt;/code&gt; variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3A-Keyword&quot;&gt;&quot;The VERSIONCHECK: Keyword&quot; in perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fb64fe6d247cc13c8ba2ecc02f6b2d75c4b93f" translate="yes" xml:space="preserve">
          <source>Macro to verify that the perl api version an XS module has been compiled against matches the api version of the perl interpreter it's being loaded into.</source>
          <target state="translated">Macro для проверки того,что версия perl api,в которую был скомпилирован модуль XS,совпадает с версией api интерпретатора perl,в который он загружается.</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="8f66f4521e615face2c94f9f782a4b88e0deefae" translate="yes" xml:space="preserve">
          <source>Macros that have string constants and their arguments as substrings of the string constants</source>
          <target state="translated">Макросы,имеющие строковые константы и их аргументы в качестве подстрок строковых констант</target>
        </trans-unit>
        <trans-unit id="25a3c890eb4b69b9115b7b04758963775564c7b0" translate="yes" xml:space="preserve">
          <source>Made 'dynamic_config' mandatory to reduce confusion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696a489ce86f443d3bd7f260f57fe68b0f5e0740" translate="yes" xml:space="preserve">
          <source>Magic Autogeneration</source>
          <target state="translated">Волшебная Автогенерация</target>
        </trans-unit>
        <trans-unit id="5b951438b2b5824d83645ebbc34942743d54e18e" translate="yes" xml:space="preserve">
          <source>Magic Variables</source>
          <target state="translated">Волшебные Переменные</target>
        </trans-unit>
        <trans-unit id="88fd65fe2e12d0229bfa9aa8c0f337c8c7a34525" translate="yes" xml:space="preserve">
          <source>Magic Virtual Tables</source>
          <target state="translated">Волшебные виртуальные таблицы</target>
        </trans-unit>
        <trans-unit id="2de64b7079eac3534ed35bf9a982a56cf8fb08a0" translate="yes" xml:space="preserve">
          <source>Magic autogeneration increases the potential for inadvertently creating self-referential structures. Currently Perl will not free self-referential structures until cycles are explicitly broken. For example,</source>
          <target state="translated">Волшебная автогенерация увеличивает потенциал для непреднамеренного создания самопредпочтительных структур.В настоящее время Perl не будет освобождать самопреференциальные структуры до тех пор,пока циклы не будут явно нарушены.Например,</target>
        </trans-unit>
        <trans-unit id="2e0ebd98fa5e6d797bebdd2c2d2dbacb085a7bcb" translate="yes" xml:space="preserve">
          <source>Magic constants</source>
          <target state="translated">Магические константы</target>
        </trans-unit>
        <trans-unit id="9331d05bb9a05caf542c2c62dec84da956dc266b" translate="yes" xml:space="preserve">
          <source>Magical Functions</source>
          <target state="translated">Магические функции</target>
        </trans-unit>
        <trans-unit id="680b5ac69f610dca4407e4b841e7311dee05c4d1" translate="yes" xml:space="preserve">
          <source>Magical list constants are not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc605047ccd6740cec0a34132f6861a236ee5db" translate="yes" xml:space="preserve">
          <source>Magical values and references can be made into constants at compile time, allowing for way cool stuff like this. (These error numbers aren't totally portable, alas.)</source>
          <target state="translated">Магические значения и ссылки могут быть преобразованы в константы во время компиляции,что позволяет делать такие крутые вещи.(Эти номера ошибок,увы,не совсем переносятся).</target>
        </trans-unit>
        <trans-unit id="df66650e348a506121860cd76f075780d1c6aedd" translate="yes" xml:space="preserve">
          <source>Mail and Usenet News</source>
          <target state="translated">Новости электронной почты и Usenet</target>
        </trans-unit>
        <trans-unit id="c9124b10840a3572bd767d51874576c37a45a513" translate="yes" xml:space="preserve">
          <source>MailList.U</source>
          <target state="translated">MailList.U</target>
        </trans-unit>
        <trans-unit id="56482927c5fda76aa41942ba11941327d4620c99" translate="yes" xml:space="preserve">
          <source>Mailing Lists and Newsgroups</source>
          <target state="translated">Списки рассылки и группы новостей</target>
        </trans-unit>
        <trans-unit id="d2a1123e6461654a07e49c2ea0e3f5b116e7bf06" translate="yes" xml:space="preserve">
          <source>Mailing list</source>
          <target state="translated">Список рассылки</target>
        </trans-unit>
        <trans-unit id="d50c2a333e418a4af64720c969c0846d34975a97" translate="yes" xml:space="preserve">
          <source>Mailing list for Perl on OS/390</source>
          <target state="translated">Список рассылки для Perl на OS/390</target>
        </trans-unit>
        <trans-unit id="8422598c648ad701facadb193807fe8a68e5374e" translate="yes" xml:space="preserve">
          <source>Mailing list: cpan-testers-discuss@perl.org</source>
          <target state="translated">Список рассылки:cpan-testers-discuss@perl.org</target>
        </trans-unit>
        <trans-unit id="34f27bf89d43b27b257ba6f69d1461ec437f5745" translate="yes" xml:space="preserve">
          <source>Main Perl library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42a6ff891c095b97c9c8d1876b99ab388267a2b" translate="yes" xml:space="preserve">
          <source>Mainly listed here to shut up the pitiful screams of the pod coverage tests. They keep me awake at night.</source>
          <target state="translated">Главным образом перечисленные здесь,чтобы заткнуть жалкие крики стручкового покрытия тестов.Они не дают мне заснуть ночью.</target>
        </trans-unit>
        <trans-unit id="5bb034a4bb66b7bb5137187d878df13fb04beae4" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories and base-level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a025894cae9180557ea2537add4f6943dbc4f8b" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories from installation.</source>
          <target state="translated">В основном используется для исключения из установки административных каталогов контроля версий.</target>
        </trans-unit>
        <trans-unit id="af2040fc4cdf263d0853758e669e36927b733e94" translate="yes" xml:space="preserve">
          <source>Maintain Round Trip Integrity</source>
          <target state="translated">Сохранять целостность при транспортировке туда и обратно</target>
        </trans-unit>
        <trans-unit id="6cc92c03b00f2d20d0dd8de351bcdf848cd97ae9" translate="yes" xml:space="preserve">
          <source>Maintained by Ken Williams &amp;lt;KWILLIAMS@cpan.org&amp;gt;</source>
          <target state="translated">Поддержкой занимается Кен Уильямс &amp;lt;KWILLIAMS@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="809e72cee268c819612dba25360f847662fc4877" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern</source>
          <target state="translated">Под руководством Михаэля Г.Швера.</target>
        </trans-unit>
        <trans-unit id="3d8d67b0bc713d08e1431289fef2c4da24e0a6d9" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; .</source>
          <target state="translated">Поддерживается Майклом Дж. Шверном &lt;code&gt;schwern@pobox.com&lt;/code&gt; в пакете ExtUtils-MakeMaker и, как отдельный пакет CPAN, Рэнди &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8d07256ae5a012857da9cd78f0221bd4cddaeb8" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fabc766fc2d9f0543a1727cc606d915b6b064d9" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@gmail.com&amp;lt;gt&amp;gt;, 2014-.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471bc1c750a06353374af1e53ce3ea6cd2e96c5b" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@online.no&amp;gt; 2011-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e8214c4bf741c76a84a61b0611d2148c0182fd" translate="yes" xml:space="preserve">
          <source>Maintained by:</source>
          <target state="translated">Поддерживается:</target>
        </trans-unit>
        <trans-unit id="0fb7ae643e6e22eda1f0c20766a595198d76696b" translate="yes" xml:space="preserve">
          <source>Maintained since 1996 by The Perl Porters &amp;lt;</source>
          <target state="translated">Поддерживается с 1996 года компанией Perl Porters &amp;lt;</target>
        </trans-unit>
        <trans-unit id="643bbd5f57059016b08fdfc7624d83297d263211" translate="yes" xml:space="preserve">
          <source>Maintainer note:</source>
          <target state="translated">Записка о хранении:</target>
        </trans-unit>
        <trans-unit id="8a3300746df857e116a8c0e1c6dce416561209ca" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;. Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">Сопровождение выпуска CPAN - Штеффен Мюллер &amp;lt;smueller@cpan.org&amp;gt;. Свяжитесь с ним, если возникнут технические трудности с упаковкой модуля CPAN.</target>
        </trans-unit>
        <trans-unit id="430b90ac2c360a8a68d16871970bc138c6d2cbdd" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller (smueller@cpan.org). Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">Хранителем релиза CPAN является Штеффен Мюллер (smueller@cpan.org).Обратитесь к нему с техническими проблемами,связанными с упаковкой модуля CPAN.</target>
        </trans-unit>
        <trans-unit id="b4afb7f985f5bfec03da261851d526768b0a7bd1" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release: Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</source>
          <target state="translated">Сопровождающий релиз CPAN: Штеффен Мюллер &amp;lt;smueller@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="53ca95cbad19caeb958b071a4ed842e8b82f2816" translate="yes" xml:space="preserve">
          <source>Maintainer: Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;.</source>
          <target state="translated">Сопровождающий: Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="619bd6770e2cd62e7bc43b49020d0710c816e356" translate="yes" xml:space="preserve">
          <source>Maintainer: The Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">Сопровождающий: Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="2a2a346bb89ad48931388628d64c4379a03e9c7a" translate="yes" xml:space="preserve">
          <source>Maintainers.pl</source>
          <target state="translated">Maintainers.pl</target>
        </trans-unit>
        <trans-unit id="82aa676cb87f65983d0f9f426c9258e2f5ab0e48" translate="yes" xml:space="preserve">
          <source>Maintainers.pm</source>
          <target state="translated">Maintainers.pm</target>
        </trans-unit>
        <trans-unit id="9c61980ffa7774c0d3835c4f170771e00a8354d6" translate="yes" xml:space="preserve">
          <source>Maintaining a bundle definition file means keeping track of two things: dependencies and interactivity. CPAN.pm sometimes fails on calculating dependencies because not all modules define all MakeMaker attributes correctly, so a bundle definition file should specify prerequisites as early as possible. On the other hand, it's annoying that so many distributions need some interactive configuring. So what you can try to accomplish in your private bundle file is to have the packages that need to be configured early in the file and the gentle ones later, so you can go out for coffee after a few minutes and leave CPAN.pm to churn away unattended.</source>
          <target state="translated">Ведение архива определения пакета означает отслеживать две вещи:зависимости и интерактивность.CPAN.pm иногда не справляется с вычислением зависимостей,потому что не все модули определяют все атрибуты MakeMaker правильно,поэтому файл определения пакета должен указать предпосылки как можно раньше.С другой стороны,раздражает то,что так много дистрибутивов нуждаются в интерактивной настройке.Так что то,что вы можете попытаться сделать в вашем частном файле пакета должно иметь пакеты,которые должны быть настроены раньше в файле и нежные позже,так что вы можете пойти на кофе через несколько минут и оставить CPAN.pm,чтобы отбросить без присмотра.</target>
        </trans-unit>
        <trans-unit id="683b0250521f89ab5a7d8609ffca71e78293a058" translate="yes" xml:space="preserve">
          <source>Maintaining a persistent interpreter</source>
          <target state="translated">Поддержание постоянного переводчика</target>
        </trans-unit>
        <trans-unit id="e88a9990f5d2ac06c40799dcdbc0bd3efadf5b36" translate="yes" xml:space="preserve">
          <source>Maintaining multiple interpreter instances</source>
          <target state="translated">Сохранение нескольких экземпляров переводчика</target>
        </trans-unit>
        <trans-unit id="b029f6d7dda6875610cf345a0d379a80456960cd" translate="yes" xml:space="preserve">
          <source>Maintaining the urllist parameter</source>
          <target state="translated">Поддержание параметра urllist</target>
        </trans-unit>
        <trans-unit id="6f70b10eb8a3bbc7f2d0b2c546e6531ac6d2bbc3" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by cperl &lt;a href=&quot;http://perl11.org/cperl&quot;&gt;http://perl11.org/cperl&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb8b463e1c71f307f7fc72628792a15f4e1bd31" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by the perl5-porters</source>
          <target state="translated">Обслуживание теперь осуществляется с помощью perl5-портов.</target>
        </trans-unit>
        <trans-unit id="181c04cdf23fecb3236b336490e5b2cafa1a0b7f" translate="yes" xml:space="preserve">
          <source>Maintenance versions should only be altered to add critical bug fixes, see &lt;a href=&quot;perlpolicy&quot;&gt;perlpolicy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed12a7152f7b0abf838c20d65d39c62ba0a8766" translate="yes" xml:space="preserve">
          <source>Makamaka Hannyaharamitu, &amp;lt;makamaka[at]cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94431ee22f05f141107f9355ed3127d0f0c4d5a" translate="yes" xml:space="preserve">
          <source>Make</source>
          <target state="translated">Make</target>
        </trans-unit>
        <trans-unit id="890209e34ccf3fc03b7d07817868a97cdbfea649" translate="yes" xml:space="preserve">
          <source>Make Rule 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7128fd2836e77abc7fc2fd97115996dd6b6b258" translate="yes" xml:space="preserve">
          <source>Make Rule 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eff5d74d7ffc64b3c7d9b1b09aff266f1e0a57" translate="yes" xml:space="preserve">
          <source>Make a bootstrap file for use by DynaLoader</source>
          <target state="translated">Сделайте загрузочный файл для использования DynaLoader.</target>
        </trans-unit>
        <trans-unit id="1b789b62a7dc7a41add071dab3e403c719b4a9f2" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9fad7783334940c292ba0169f35e46fcaae627" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">Сделайте легкий обратный вызов. См. &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;ОБЛЕГЧЕННЫЕ ОТВЕТЫ в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cb6efc54c38064ba236700f9dcc12b0629e07ff" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15e6a07de5aec5f1e96a02e428c35fecd418678" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4827e6585683095f4c0885205596b5426a5ef3" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b212bd484216f27062e119a0984e12eb2f1ca4b" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">Создайте новый объект &lt;a href=&quot;parser/grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt; и верните его. Принимает любые аргументы.</target>
        </trans-unit>
        <trans-unit id="d5ad132f57df20c380d03727edf6efc89d530812" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">Создайте новый объект &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt; и верните его. Принимает любые аргументы.</target>
        </trans-unit>
        <trans-unit id="fa28fa8c90cb86c9b3f8c83899652b5dd29ba4e0" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="translated">Создайте новый объект &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result,&lt;/a&gt; используя &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory анализатора&lt;/a&gt; , и верните его. Принимает любые аргументы.</target>
        </trans-unit>
        <trans-unit id="3a0cb5edb690cd6db709e001b8158abfba90d3f9" translate="yes" xml:space="preserve">
          <source>Make a new parser and display formatter session. Typically used and/or overridden in subclasses.</source>
          <target state="translated">Сделайте новый синтаксический анализатор и сеанс форматирования дисплея.Обычно используется и/или переопределяется в подклассах.</target>
        </trans-unit>
        <trans-unit id="f4f6bf31d70d3b5261f262791889974009fba962" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash</source>
          <target state="translated">Сделайте и верните полную копию хэша подсказок копа.</target>
        </trans-unit>
        <trans-unit id="ad04abc96b9c23f58bf05411355a885d67609d70" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash &lt;code&gt;cophh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b886b01d91d82d72977b5c37dc6c5f47e7167a8" translate="yes" xml:space="preserve">
          <source>Make bsd_glob() return an error (GLOB_NOSPACE) when the pattern expands to a size bigger than the system constant &lt;code&gt;ARG_MAX&lt;/code&gt; (usually found in limits.h). If your system does not define this constant, bsd_glob() uses &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; or &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; where available (in that order). You can inspect these values using the standard &lt;code&gt;POSIX&lt;/code&gt; extension.</source>
          <target state="translated">Заставить bsd_glob () возвращать ошибку (GLOB_NOSPACE), когда шаблон расширяется до размера, превышающего системную константу &lt;code&gt;ARG_MAX&lt;/code&gt; (обычно находится в limits.h). Если ваша система не определяет эту константу, bsd_glob () использует &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; или &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; , где это возможно (в указанном порядке). Вы можете проверить эти значения, используя стандартное расширение &lt;code&gt;POSIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08523af5b76fef9eaed2b77615eb4a213597d67b" translate="yes" xml:space="preserve">
          <source>Make functions faster by trading space for time</source>
          <target state="translated">Сделайте функции быстрее,торгуя пространством для времени</target>
        </trans-unit>
        <trans-unit id="6103567e9e837abb5d1943da6a6814ed98577b8b" translate="yes" xml:space="preserve">
          <source>Make pattern matching case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b434c4028abbf501b87f9ee8429bc6772c12c60" translate="yes" xml:space="preserve">
          <source>Make perl executable and create a symlink for libperl:</source>
          <target state="translated">Сделайте исполняемый файл на perl и создайте сим-ссылку для libperl:</target>
        </trans-unit>
        <trans-unit id="cb00e29cd519edaa5436add62cd37675b6854ffa" translate="yes" xml:space="preserve">
          <source>Make some changes, build perl and test your changes, then commit them to your local branch. Then push your local branch to a remote smoke-me branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c4fd59ea8eb511f1da67cfee226b250f7a4749" translate="yes" xml:space="preserve">
          <source>Make sure &lt;a href=&quot;#gethostbyname-NAME&quot;&gt;&lt;code&gt;gethostbyname&lt;/code&gt;&lt;/a&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631c39697ec2fc47f9fdac3b73868b5eac8535e4" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">Убедитесь, что &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; вызывается в СКАЛЯРНОМ контексте и что его возвращаемое значение проверяется на предмет определения.</target>
        </trans-unit>
        <trans-unit id="1af92bfd9067c908f166333d8740f6095af6a588" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">Убедитесь, что &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; вызывается в СКАЛЯРНОМ контексте и что его возвращаемое значение проверяется на предмет определения.</target>
        </trans-unit>
        <trans-unit id="9aee806c3df793514446c4364ffe009cca7c0176" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt; .</source>
          <target state="translated">Убедитесь, что &lt;code&gt;CPAN.pm&lt;/code&gt; может загружать файлы с CPAN. В противном случае вам может потребоваться вручную установить &lt;code&gt;Net::FTP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ab54a8b3ec25f60b45ddf50dac5e3bb5f61317d" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90bf5e032808a1790937eefc282a0216577eb91" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt; , like this</source>
          <target state="translated">Убедитесь, что каталог &lt;b&gt;над&lt;/b&gt; каталогом с man-страницами находится в нашем &lt;code&gt;MANPATH&lt;/code&gt; , например</target>
        </trans-unit>
        <trans-unit id="a8decd758e6ca0f6998ca613347958cb822b733d" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt;, like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d62a68cc52f846e8b7cd7e34bad20513f656424" translate="yes" xml:space="preserve">
          <source>Make sure that the installed modules are actually installed in the location of the new Perl, and are not inherited from entries of @INC given for inheritance from the older versions of Perl: set &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; to redirect the new version of Perl to a new location, and copy the installed files to this new location. Redo the tests to make sure that the versions of modules inherited from older versions of Perl are not needed.</source>
          <target state="translated">Убедитесь, что установленные модули действительно установлены в том месте, где находится новый Perl, и не унаследованы от записей @INC, предоставленных для наследования от более старых версий Perl: установите &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; , чтобы перенаправить новую версию Perl в новое место, и скопируйте установленные файлы в это новое место. Повторите тесты, чтобы убедиться, что версии модулей, унаследованные от более старых версий Perl, не нужны.</target>
        </trans-unit>
        <trans-unit id="8e40ae3a79feffa50f9360f35cfc29b12c2563ad" translate="yes" xml:space="preserve">
          <source>Make sure that you &lt;code&gt;make realclean&lt;/code&gt; in your copy of Perl to remove any build artifacts, or you may get a confusing result.</source>
          <target state="translated">Убедитесь, что вы &lt;code&gt;make realclean&lt;/code&gt; в своей копии Perl, чтобы удалить любые артефакты сборки, иначе вы можете получить запутанный результат.</target>
        </trans-unit>
        <trans-unit id="c48620eee0813f53db06b1d13fb05c7d0b30ec92" translate="yes" xml:space="preserve">
          <source>Make sure that your module has a license, and that the full text of it is included in the distribution (unless it's a common one and the terms of the license don't require you to include it).</source>
          <target state="translated">Убедитесь,что у вашего модуля есть лицензия,и что полный текст лицензии включен в дистрибутив (если только он не является общим и условия лицензии не требуют его включения в дистрибутив).</target>
        </trans-unit>
        <trans-unit id="b4b22689c7f11757036113b227d7cdc8128156e0" translate="yes" xml:space="preserve">
          <source>Make sure the commit message describes your change in a single sentence. For example, &quot;Fixed spelling errors in perlhack.pod&quot;.</source>
          <target state="translated">Убедитесь,что сообщение о фиксации описывает ваше изменение в одном предложении.Например,&quot;Исправлены орфографические ошибки в perlhack.pod&quot;.</target>
        </trans-unit>
        <trans-unit id="31c004e759b68f9d5539083901242f08c624a89b" translate="yes" xml:space="preserve">
          <source>Make sure the newlines for the modules are in Mac format, not Unix format. If they are not then you might have decompressed them incorrectly. Check your decompression and unpacking utilities settings to make sure they are translating text files properly.</source>
          <target state="translated">Убедитесь,что новые строки для модулей выполнены в формате Mac,а не Unix.Если их нет,то,возможно,вы распаковали их неправильно.Проверьте настройки утилит для распаковки и распаковки,чтобы убедиться,что они правильно переводят текстовые файлы.</target>
        </trans-unit>
        <trans-unit id="0da095bfcf60a5da0d5078d4fb200d212838fa47" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt; , if the thing you're patching is covered by Perl's test suite).</source>
          <target state="translated">Убедитесь, что исправление не перевернуто (первый аргумент diff обычно является исходным файлом, второй аргумент - измененным файлом). Убедитесь, что вы протестировали свой патч, применив его с помощью &lt;code&gt;git am&lt;/code&gt; или программы &lt;code&gt;patch&lt;/code&gt; прежде чем отправлять его в путь. Постарайтесь следовать тому же стилю, что и код, который вы пытаетесь исправить. Убедитесь, что ваш патч действительно работает ( &lt;code&gt;make test&lt;/code&gt; , если то, что вы патчите, покрывается набором тестов Perl).</target>
        </trans-unit>
        <trans-unit id="bda29a86fe66e1909a0c4600719933cf688a2cb2" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt;, if the thing you're patching is covered by Perl's test suite).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe3ef49c50e09399f8e7e0ae50f650120ed9ba3" translate="yes" xml:space="preserve">
          <source>Make sure the path to the build directory does not contain spaces. The build usually works in this circumstance, but some tests will fail.</source>
          <target state="translated">Убедитесь,что путь к каталогу сборки не содержит пробелов.Обычно сборка работает в этих условиях,но некоторые тесты будут неудачными.</target>
        </trans-unit>
        <trans-unit id="b12b8debe1b2db03630198cf21bf4b854e3bc2a9" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;&quot;Method Invocation&quot; in perlobj&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25e9d6769a32bda0cb16adea51fc9a9577bd44e" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;Method Invocation in perlobj&lt;/a&gt;.</source>
          <target state="translated">Обязательно прочитайте о создании модулей в &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; и об опасностях косвенных объектов в &amp;laquo; &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;Вызов метода&amp;raquo; в perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83ed513e31fceec21b34e65bf0ccb8e2f135bfc2" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a GNU make &quot;GNUmakefile&quot; or dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the gmake and dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bbcc12fd16263e19bc5318e960269249316b2e" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="translated">Убедитесь,что вы находитесь в подкаталоге &quot;win32&quot; под топ-уровнем perl.Этот каталог содержит &quot;Makefile&quot;,который будет работать с версиями nmake,поставляемыми с Visual C++или Windows SDK,и dmake &quot;makefile.mk&quot;,который будет работать для всех поддерживаемых компиляторов.По умолчанию в dmake makefile настроена сборка с использованием MinGW/gcc.</target>
        </trans-unit>
        <trans-unit id="b578a0bba566a5e009cf7a1e8f93afb16265f4fa" translate="yes" xml:space="preserve">
          <source>Make sure you choose an appropriate name for your module early on. This will help people find and remember your module, and make programming with your module more intuitive.</source>
          <target state="translated">Убедитесь,что вы выбрали подходящее название для вашего модуля на ранней стадии.Это поможет людям найти и запомнить ваш модуль,а также сделает программирование с помощью вашего модуля более интуитивным.</target>
        </trans-unit>
        <trans-unit id="b8dca7eb87954059e67d6baf9d117854dccfc284" translate="yes" xml:space="preserve">
          <source>Make sure you have MMS (from Digital) or the freeware MMK ( available from MadGoat at &lt;a href=&quot;http://www.madgoat.com&quot;&gt;http://www.madgoat.com&lt;/a&gt; ). Then type this to create the DESCRIP.MMS for the module:</source>
          <target state="translated">Убедитесь, что у вас есть MMS (от Digital) или бесплатная MMK (доступная от MadGoat на &lt;a href=&quot;http://www.madgoat.com&quot;&gt;http://www.madgoat.com&lt;/a&gt; ). Затем введите это, чтобы создать DESCRIP.MMS для модуля:</target>
        </trans-unit>
        <trans-unit id="41203b5dff78423d936ef4a4e1c0f8291555b765" translate="yes" xml:space="preserve">
          <source>Make sure you have a good commit message. See &lt;a href=&quot;perlhack#Commit-message&quot;&gt;&quot;Commit message&quot; in perlhack&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bcb550cc19143c5e8dd91291c0c6d1da90642e" translate="yes" xml:space="preserve">
          <source>Make sure you have the appropriate permissions to install the module in your Perl 5 library directory. Often, you'll need to be root.</source>
          <target state="translated">Убедитесь,что у вас есть соответствующие права на установку модуля в каталоге библиотеки Perl 5.Часто вам понадобится быть корневым пользователем.</target>
        </trans-unit>
        <trans-unit id="8c6288609b67d4900e3a7acdb0708c647b7ddea0" translate="yes" xml:space="preserve">
          <source>Make sure you use a tab and not spaces on the lines beginning with &quot;$(AR)&quot; and &quot;$(RANLIB)&quot;. Make will not function properly if you use spaces. It has also been reported that the &quot;cr&quot; argument to $(AR) is unnecessary on Win32 systems.</source>
          <target state="translated">Убедитесь,что вы используете закладку,а не пробелы на строках,начинающихся с &quot;$(AR)&quot; и &quot;$(RANLIB)&quot;.Make не будет работать правильно,если вы используете пробелы.Также сообщалось,что аргумент &quot;cr&quot; в $(AR)не нужен на Win32 системах.</target>
        </trans-unit>
        <trans-unit id="6aa0752b0b4c6627413012df0488bf1ad6b435f3" translate="yes" xml:space="preserve">
          <source>Make sure your PATH includes the compiler (/opt/SUNWspro/bin/ if you're using Sun's compiler) as well as /usr/ccs/bin/ to pick up the other development tools (such as make, ar, as, and ld). Make sure your path either doesn't include /usr/ucb or that it includes it after the compiler and compiler tools and other standard Solaris directories. You definitely don't want /usr/ucb/cc.</source>
          <target state="translated">Убедитесь,что ваш PATH включает компилятор (/opt/SUNWspro/bin/,если вы используете компилятор Sun),а также /usr/ccs/bin/,чтобы подобрать другие инструменты разработки (такие как make,ar,as и ld).Убедитесь,что ваш путь либо не включает /usr/ucb,либо что он включает его после инструментов компилятора и компилятора и других стандартных каталогов Solaris.Вам определенно не нужен /usr/ucb/cc.</target>
        </trans-unit>
        <trans-unit id="da98ff8151fcc7f9259493c3bc630b4f6abd18b6" translate="yes" xml:space="preserve">
          <source>Make sure your gcc is good for &lt;code&gt;-Zomf&lt;/code&gt; linking: run &lt;code&gt;omflibs&lt;/code&gt; script in</source>
          <target state="translated">Убедитесь, что ваш gcc подходит для связывания &lt;code&gt;-Zomf&lt;/code&gt; : запустите скрипт &lt;code&gt;omflibs&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="a248163580a9e29ef4a7312495856815f271337b" translate="yes" xml:space="preserve">
          <source>Make the first argument a copy of the second, then delete the original. The target SV physically takes over ownership of the body of the source SV and inherits its flags; however, the target keeps any magic it owns, and any magic in the source is discarded. Note that this is a rather specialist SV copying operation; most of the time you'll want to use &lt;code&gt;sv_setsv&lt;/code&gt; or one of its many macro front-ends.</source>
          <target state="translated">Сделайте первый аргумент копией второго, затем удалите оригинал. Целевой SV физически принимает на себя владение телом исходного SV и наследует его флаги; однако цель сохраняет любую магию, которой она владеет, а любая магия в источнике сбрасывается. Обратите внимание, что это довольно специализированная операция копирования SV; большую часть времени вы захотите использовать &lt;code&gt;sv_setsv&lt;/code&gt; или один из его многочисленных внешних интерфейсов макросов.</target>
        </trans-unit>
        <trans-unit id="f4bb5d8584647cb5cbfe371da2ee93cc6742e08f" translate="yes" xml:space="preserve">
          <source>Make the most of the opportunity.</source>
          <target state="translated">Максимально используйте эту возможность.</target>
        </trans-unit>
        <trans-unit id="0aff0a17d7bda6c607f6b94065807887a26ea78b" translate="yes" xml:space="preserve">
          <source>Make the specified modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a3a748935c5363a3cfdc69fbfc39c4592f4900" translate="yes" xml:space="preserve">
          <source>Make the string $content be the content for the file named $file.</source>
          <target state="translated">Сделайте строку $content содержимым файла с именем $file.</target>
        </trans-unit>
        <trans-unit id="b14a5a45500c708bfc2adecf45938f8ddfc95c0a" translate="yes" xml:space="preserve">
          <source>Make updating the '1..42' string unnecessary. Or make sure that you update it.</source>
          <target state="translated">Сделайте ненужным обновление строки '1..42'.Или убедитесь,что вы ее обновили.</target>
        </trans-unit>
        <trans-unit id="fec86bec8c09394515f33cb2e0c1c11e1bbbc3fc" translate="yes" xml:space="preserve">
          <source>Make your change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596d9cf2b55f30476a38bd041bc47cf1626a134d" translate="yes" xml:space="preserve">
          <source>Make your module use the Test::Tester::Capture object instead of the Test::Builder one. How to do this depends on your module but assuming that your module holds the Test::Builder object in $Test and that all your test routines access it through $Test then providing a function something like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951e86d639f2ed613d02f1c077ce05396f017abb" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;INSTALL_BASE in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="translated">MakeMaker (начиная с версии 6.31) и Module :: Build (начиная с версии 0.28) могут устанавливаться в одни и те же места с использованием концепции &amp;laquo;install_base&amp;raquo;. Подробнее см. &lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;INSTALL_BASE в ExtUtils :: MakeMaker&lt;/a&gt; . Чтобы установить MM и MB в одно и то же место, просто установите INSTALL_BASE в MM и &lt;code&gt;--install_base&lt;/code&gt; в MB в одно и то же место.</target>
        </trans-unit>
        <trans-unit id="5c9d90bcb0e3741266cfc2e63ed8d7436fe1c84f" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;ExtUtils::MakeMaker#INSTALL_BASE&quot;&gt;&quot;INSTALL_BASE&quot; in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57976a42f4d4f108960d3047b05d9b0bd7410ad" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;../test/harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="translated">MakeMaker также проверяет наличие файлов, соответствующих glob (&quot;t / *. T&quot;). Он выполнит все соответствующие файлы в алфавитном порядке через модуль &lt;a href=&quot;../test/harness&quot;&gt;Test :: Harness&lt;/a&gt; с правильно установленными переключателями &lt;code&gt;-I&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="181073f157ed87afd7d4a36cdc4890d3df65a53c" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4d9ecb21fe83e2ef44aa02cc6eba3ee3c63cf7" translate="yes" xml:space="preserve">
          <source>MakeMaker also honors the MAKE environment variable. This parameter takes precedence.</source>
          <target state="translated">MakeMaker также чтит переменную окружения MAKE.Этот параметр имеет приоритет.</target>
        </trans-unit>
        <trans-unit id="6ce95146fa946e6764eac19b0f7702edb2af3abd" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. For example...</source>
          <target state="translated">MakeMaker может запускать программы для генерации файлов во время сборки.По умолчанию любой файл с именем *.PL (за исключением Makefile.PL и Build.PL)в каталоге верхнего уровня будет считаться программой на Perl и запускаться,передавая в качестве аргумента свое собственное базовое имя.Например.</target>
        </trans-unit>
        <trans-unit id="0b27f17fb6be8902dd15dc474df4292373ebba16" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. This basename is actually a build target, and there is an intention, but not a requirement, that the *.PL file make the file passed to to as an argument. For example...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a59e2381035838e81553acd07a6dbd71a643d2" translate="yes" xml:space="preserve">
          <source>MakeMaker checks for the existence of a file named</source>
          <target state="translated">MakeMaker проверяет наличие файла с именем</target>
        </trans-unit>
        <trans-unit id="7e46986c8cad84d029006573feccd2e12b58af53" translate="yes" xml:space="preserve">
          <source>MakeMaker comes with a default MANIFEST.SKIP to avoid things like version control directories and backup files. Specifying your own will override this default.</source>
          <target state="translated">MakeMaker поставляется с MANIFEST.SKIP по умолчанию,чтобы избежать таких вещей,как каталоги контроля версий и файлы резервного копирования.Указание своих собственных переопределит это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="9177c899e90b4ecb1a9e016234bba13b638eedd6" translate="yes" xml:space="preserve">
          <source>MakeMaker gives you much more freedom than needed to configure internal variables and get different results. It is worth mentioning that make(1) also lets you configure most of the variables that are used in the Makefile. But in the majority of situations this will not be necessary, and should only be done if the author of a package recommends it (or you know what you're doing).</source>
          <target state="translated">MakeMaker дает вам гораздо больше свободы,чем нужно для настройки внутренних переменных и получения различных результатов.Стоит отметить,что make(1)также позволяет настроить большинство переменных,которые используются в Makefile.Но в большинстве ситуаций в этом нет необходимости,и это следует делать только в том случае,если автор пакета рекомендует это (или вы знаете,что делаете).</target>
        </trans-unit>
        <trans-unit id="666dfa9a2df2803aca52ee89b75129726d38981a" translate="yes" xml:space="preserve">
          <source>MakeMaker modules are installed using this simple mantra</source>
          <target state="translated">Модули MakeMaker устанавливаются с помощью этой простой мантры</target>
        </trans-unit>
        <trans-unit id="6eebe1cd37eee2ec321b36b14411ecc5f97674e6" translate="yes" xml:space="preserve">
          <source>MakeMaker needs to know, or to guess, where certain things are located. Especially INST_LIB and INST_ARCHLIB (where to put the files during the make(1) run), PERL_LIB and PERL_ARCHLIB (where to read existing modules from), and PERL_INC (header files and &lt;code&gt;libperl*.*&lt;/code&gt;).</source>
          <target state="translated">MakeMaker необходимо знать или угадывать, где расположены определенные объекты. В особенности INST_LIB и INST_ARCHLIB (куда поместить файлы во время выполнения make (1)), PERL_LIB и PERL_ARCHLIB (откуда читать существующие модули) и PERL_INC (файлы заголовков и &lt;code&gt;libperl*.*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1794fe2317715149406a57e4edb43a113c75b0e3" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (real)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c459908262333c218dd37bde4b33c42a42bd948" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (simplified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955e1b765c6718c7db11e68ac1240b76cf36838e" translate="yes" xml:space="preserve">
          <source>MakeMaker will figure out if an extension contains linkable code anywhere down the directory tree, and will set this variable accordingly, but you can speed it up a very little bit if you define this boolean variable yourself.</source>
          <target state="translated">MakeMaker выяснит,содержит ли расширение компоновочный код где-нибудь в дереве каталогов,и установит эту переменную соответствующим образом,но вы можете немного ускорить ее,если определите эту булевую переменную самостоятельно.</target>
        </trans-unit>
        <trans-unit id="4bbacb6ac277a541e0abc4615218907895ae391a" translate="yes" xml:space="preserve">
          <source>MakeMaker will turn it into an array with one element.</source>
          <target state="translated">MakeMaker превратит его в массив с одним элементом.</target>
        </trans-unit>
        <trans-unit id="e6de50a7c31889077966d7620ec5db61a68c67cc" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt; , but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt; ). They are simply &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="translated">MakeMaker.pm использует информацию об архитектуре из Config.pm. Кроме того, он оценивает файлы подсказок для конкретной архитектуры в каталоге &lt;code&gt;hints/&lt;/code&gt; . Ожидается, что файлы подсказок будут названы так же, как их аналоги в &lt;code&gt;PERL_SRC/hints&lt;/code&gt; , но с расширением имени файла &lt;code&gt;.pl&lt;/code&gt; (например, &lt;code&gt;next_3_2.pl&lt;/code&gt; ). Они просто &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ред MakeMaker в рамках подпрограммы WriteMakefile (), и может быть использован для выполнения команд, а также включать в себя специальные переменные. Правила, по которым выбирается файл подсказок, такие же, как в Configure.</target>
        </trans-unit>
        <trans-unit id="85ffcac06be8bba3c10e447c47204872c6672f8a" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt;, but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt;). They are simply &lt;code&gt;eval&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c" translate="yes" xml:space="preserve">
          <source>Makefile</source>
          <target state="translated">Makefile</target>
        </trans-unit>
        <trans-unit id="a6a4139b0f32af1594c237ebe008acaf8217f505" translate="yes" xml:space="preserve">
          <source>Makefile.PL</source>
          <target state="translated">Makefile.PL</target>
        </trans-unit>
        <trans-unit id="7b63f64a9d58c97e157e981bc21fc3592f84d63a" translate="yes" xml:space="preserve">
          <source>Makefile.SH</source>
          <target state="translated">Makefile.SH</target>
        </trans-unit>
        <trans-unit id="7703506e8273da38efd2a8cfe539dd5151c3f507" translate="yes" xml:space="preserve">
          <source>Makefile.aperl</source>
          <target state="translated">Makefile.aperl</target>
        </trans-unit>
        <trans-unit id="c9fdff62ddc7b582d9333af8bb3618798e22507b" translate="yes" xml:space="preserve">
          <source>Makefile.ce</source>
          <target state="translated">Makefile.ce</target>
        </trans-unit>
        <trans-unit id="f59062c8b44c1bb393273cea0b6483c724adc359" translate="yes" xml:space="preserve">
          <source>Makes LZMA compression a lot slower, but a small compression gain.</source>
          <target state="translated">Делает сжатие LZMA намного медленнее,но с небольшим приростом сжатия.</target>
        </trans-unit>
        <trans-unit id="42141d0e6f7cf55bf1aa53a30a2f72e384ff774e" translate="yes" xml:space="preserve">
          <source>Makes a deep copy of the object.</source>
          <target state="translated">Делает глубокую копию объекта.</target>
        </trans-unit>
        <trans-unit id="1ff909c4c06b83ac514fd30202e92170c2be88e6" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt; , a make, and a make test in that directory.</source>
          <target state="translated">Сначала создает каталог distdir и запускает &lt;code&gt;perl Makefile.PL&lt;/code&gt; , make и make test в этом каталоге.</target>
        </trans-unit>
        <trans-unit id="8128104f9c2607926a021874ef102e7bc1c7d502" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt;, a make, and a make test in that directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0126aa7337111c40fd3d8ee768267099e88c4e18" translate="yes" xml:space="preserve">
          <source>Makes an idhash from the argument, which must be a hash.</source>
          <target state="translated">Сделает идхэш из аргумента,который,должно быть,и есть хэш.</target>
        </trans-unit>
        <trans-unit id="0c2559af9d3a61aae60ee275b6a01f1105ed29e6" translate="yes" xml:space="preserve">
          <source>Makes files exist, with current timestamp</source>
          <target state="translated">Делает файлы существующими,с текущей меткой времени</target>
        </trans-unit>
        <trans-unit id="277c90e53937992c5799a554ef17ea6240ac0378" translate="yes" xml:space="preserve">
          <source>Makes sure at run time that the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number. Default is true.</source>
          <target state="translated">&lt;code&gt;.xs&lt;/code&gt; время выполнения проверяет, что объектный файл (полученный из файла .xs ) и файлы &lt;code&gt;.pm&lt;/code&gt; имеют одинаковый номер версии. По умолчанию верно.</target>
        </trans-unit>
        <trans-unit id="53d81221f3002a7a58139dee2348d32bcaf0b4e5" translate="yes" xml:space="preserve">
          <source>Makes the entry in the table completely ignorable; i.e. as if the weights were zero at all level.</source>
          <target state="translated">Делает запись в таблице совершенно невежественной,т.е.как будто веса на всем уровне равны нулю.</target>
        </trans-unit>
        <trans-unit id="6ce592c7c5a83ac8509be2294340cdf6b4e97842" translate="yes" xml:space="preserve">
          <source>Makes the thread unjoinable, and causes any eventual return value to be discarded. When the program exits, any detached threads that are still running are silently terminated.</source>
          <target state="translated">Делает резьбу неприсоединяемой и приводит к отбраковке любого возможного возвратного значения.При выходе программы все отсоединенные потоки,которые все еще выполняются,бесшумно завершаются.</target>
        </trans-unit>
        <trans-unit id="5a6eb05f63da2ef0fda20fc271a95dd2522c3f73" translate="yes" xml:space="preserve">
          <source>Maketext and gettext have a notable difference: gettext is in C, accessible thru C library calls, whereas Maketext is in Perl, and really can't work without a Perl interpreter (although I suppose something like it could be written for C). Accidents of history (and not necessarily lucky ones) have made C++ the most common language for the implementation of applications like word processors, Web browsers, and even many in-house applications like custom query systems. Current conditions make it somewhat unlikely that the next one of any of these kinds of applications will be written in Perl, albeit clearly more for reasons of custom and inertia than out of consideration of what is the right tool for the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1346f72588900d324cb2f158adbed7a88d53077" translate="yes" xml:space="preserve">
          <source>Making</source>
          <target state="translated">Making</target>
        </trans-unit>
        <trans-unit id="c20d8b723d9ceaa1b7e38a56a86d1d8e27a837d5" translate="yes" xml:space="preserve">
          <source>Making Perl on AmigaOS</source>
          <target state="translated">Сделать Perl на AmigaOS</target>
        </trans-unit>
        <trans-unit id="4fbad71d4049f75dae54b6a49e4082e7c3867bbe" translate="yes" xml:space="preserve">
          <source>Making References</source>
          <target state="translated">Создание ссылок</target>
        </trans-unit>
        <trans-unit id="b3d460b24ff971356f57aa8043b7e5b49b73273b" translate="yes" xml:space="preserve">
          <source>Making a human-readable string out of an address</source>
          <target state="translated">Создание читаемой человеком строки из адреса</target>
        </trans-unit>
        <trans-unit id="ec8a39930df65d8d70bb72152bc2ebfcb5ef6f12" translate="yes" xml:space="preserve">
          <source>Making a system call for each byte you want to read is not very efficient (to put it mildly) but is the simplest to explain and works reasonably well.</source>
          <target state="translated">Сделать системный вызов для каждого байта,который вы хотите прочитать,не очень эффективно (мягко говоря),но является самым простым для объяснения и работает достаточно хорошо.</target>
        </trans-unit>
        <trans-unit id="6bc23e8c3bea5e39366cc40e690baa6e822bc4b0" translate="yes" xml:space="preserve">
          <source>Making executables with a custom collection of statically loaded extensions</source>
          <target state="translated">Создание исполняемых файлов с пользовательской коллекцией статически загруженных расширений</target>
        </trans-unit>
        <trans-unit id="cebf6e10212157e6416340db92e3bf9d920a30bf" translate="yes" xml:space="preserve">
          <source>Making executables with a custom search-paths</source>
          <target state="translated">Создание исполняемых файлов с помощью настраиваемых путей поиска</target>
        </trans-unit>
        <trans-unit id="a0f26bb1828a797c6495fc430a1532f4f3524259" translate="yes" xml:space="preserve">
          <source>Making things worse is that UTF-8 support was a later addition to the regex engine (as it was to perl) and this necessarily made things a lot more complicated. Obviously it is easier to design a regex engine with Unicode support in mind from the beginning than it is to retrofit it to one that wasn't.</source>
          <target state="translated">Хуже всего то,что поддержка UTF-8 была позже дополнением к регекс-движку (как это было с perl),и это обязательно все усложнило.Очевидно,что проще спроектировать регекс-движок с поддержкой Unicode с самого начала,чем модернизировать его до такого,каким он не был.</target>
        </trans-unit>
        <trans-unit id="a78f322195b8416c4ac155ecbbc78299380d03d5" translate="yes" xml:space="preserve">
          <source>Making up your own directives breaks compatibility with other Pod formatters, in a way that using &quot;=for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf00c544b1ffc6b4c5073f7dd35eacd07c2aa8d1" translate="yes" xml:space="preserve">
          <source>Making your module threadsafe</source>
          <target state="translated">Сделайте ваш модуль безопасным для резьбы</target>
        </trans-unit>
        <trans-unit id="24e9d209d23730e356bf6cdf6439fa711205639d" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</source>
          <target state="translated">Малкольм Битти, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b41df4a623efa0a4562a894886ab9c56b063a3e" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Reini Urban &lt;code&gt;rurban@cpan.org&lt;/code&gt;</source>
          <target state="translated">Малкольм Битти, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Рейни Урбан &lt;code&gt;rurban@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19631f035a3084a6fe635dc5c4bba7828f7afbd3" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, mbeattie@sable.ox.ac.uk.</source>
          <target state="translated">Малкольм Битти,mbeattie@sable.ox.ac.uk.</target>
        </trans-unit>
        <trans-unit id="a0e351e0c684eaf1740f72fcfc804df5ea2bda20" translate="yes" xml:space="preserve">
          <source>Malformed PERLLIB_PREFIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bfcc7f20890119ba5507d8e4b227db1bf7b616" translate="yes" xml:space="preserve">
          <source>Malformed UTF-16 surrogate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d7492febbbbb102be4a6084b9574c6324cf62a" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8</source>
          <target state="translated">некорректный UTF-8</target>
        </trans-unit>
        <trans-unit id="840809324950f1542de4d0696f6aa6d5b081a4b2" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 character%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86646a5e724c4c0935d99ba9fa1363951791303" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 returned by \N{%s} immediately after '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3629da68a2c9e61eb2ed5a9305a630d15d03a5fd" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c75c74bdc6a4b14a7b5100d51b32e10dbf5f347" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in '%c' format in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cc49e1e61c18146c03f559c55b4b5ca3c7443d" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe2537af48af16788aae98b0417a1713098f07e" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceeeccb5dcd41d822277f4b9a9a892eb9541d0a" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791860e6c4e8eb2c20a1be93f5c34476ec1a52b9" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c467b1ea34859e334a2f3c6542838d86881fb" translate="yes" xml:space="preserve">
          <source>Malformed prototype for %s: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0e8bc778fcc6e629304edc324bee00f7f54935" translate="yes" xml:space="preserve">
          <source>Malloc Issues with perl on Solaris.</source>
          <target state="translated">Malloc Issues with perl on Solaris.</target>
        </trans-unit>
        <trans-unit id="118d45651d8f268c43f0d79ab0bbae66d29235b4" translate="yes" xml:space="preserve">
          <source>Malloc in Irix</source>
          <target state="translated">Маллок в Ирикс</target>
        </trans-unit>
        <trans-unit id="25b61228c020a688cfd6c5a06fa24fca08bfdf7b" translate="yes" xml:space="preserve">
          <source>Manage .packlist files</source>
          <target state="translated">Управление файлами .packlist</target>
        </trans-unit>
        <trans-unit id="35931f68fb7263b16c5ab46a487b802fec9cd2f9" translate="yes" xml:space="preserve">
          <source>Managing Unknown Symbols</source>
          <target state="translated">Управление неизвестными символами</target>
        </trans-unit>
        <trans-unit id="a55abc0bd6c1b774adb064c2106381d9bf863837" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: Either &lt;code&gt;typemap =&amp;gt; $another_typemap_obj&lt;/code&gt; or &lt;code&gt;file =&amp;gt; $path_to_typemap_file&lt;/code&gt; but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce16d065fa0516da01a691954a3b7eedd61a0753" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;ctype&lt;/code&gt; of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aaf34da96668087981ecd9c92610d9f0dca398" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to find the &lt;code&gt;xstype&lt;/code&gt;. To wit, the following pieces of code are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99b477f4c3ec9d1fec66aced41b9bbadd1b95f7" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to resolve the &lt;code&gt;xstype&lt;/code&gt;. (See above for an example.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f5d715eb57168bf68f55ea9554b6cf192f682a" translate="yes" xml:space="preserve">
          <source>Mandatory parameter follows optional parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f195c5450e541e2f347f3f01dadb29f21cee9c" translate="yes" xml:space="preserve">
          <source>Mandatory section; should be a comma-separated list of programs or functions documented by this POD page, such as:</source>
          <target state="translated">Обязательный раздел;должен представлять собой разделенный запятыми список программ или функций,документированных данной страницей POD,например:</target>
        </trans-unit>
        <trans-unit id="95b5420abf959d7eeb8c5172873e22e522cf809a" translate="yes" xml:space="preserve">
          <source>Manipulate @INC at compile time</source>
          <target state="translated">Манипулировать @INC во время компиляции</target>
        </trans-unit>
        <trans-unit id="95363fed4c5c92c85bfefb937ad574a5059a5ae7" translate="yes" xml:space="preserve">
          <source>Manipulate Perl symbols and their names</source>
          <target state="translated">Манипулируйте символами Perl и их именами</target>
        </trans-unit>
        <trans-unit id="a8c36443cbda2a6067ad5c937b50ce063c2df504" translate="yes" xml:space="preserve">
          <source>Manipulate threads in Perl (for old code only)</source>
          <target state="translated">Манипулировать потоками на Perl (только для старого кода)</target>
        </trans-unit>
        <trans-unit id="8a33f921aa98603ac2e48c7701dc159e3e29d6c1" translate="yes" xml:space="preserve">
          <source>Manipulating Opsets</source>
          <target state="translated">Манипулирующие наборы</target>
        </trans-unit>
        <trans-unit id="2b13545245f98ef36404c536b49d9995e39a33e1" translate="yes" xml:space="preserve">
          <source>Manpages</source>
          <target state="translated">Manpages</target>
        </trans-unit>
        <trans-unit id="9f704bb02675db15a09798f0c1baac9cf37ee338" translate="yes" xml:space="preserve">
          <source>Manpages for Perl and utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b4a6c33e94dc77d759627b76f10310db491611" translate="yes" xml:space="preserve">
          <source>Manpages for Perl modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5bfd7444f7b80d647fb722cd55c67b0650aba4" translate="yes" xml:space="preserve">
          <source>Manpages for Perl on AmigaOS</source>
          <target state="translated">Менеджеры для Perl на AmigaOS</target>
        </trans-unit>
        <trans-unit id="d013bfb63d4447b01e40780ba1cecae093576e1b" translate="yes" xml:space="preserve">
          <source>Manual Pages</source>
          <target state="translated">Ручные страницы</target>
        </trans-unit>
        <trans-unit id="9cec485eab07667ef580f14404756c7cdf469fd8" translate="yes" xml:space="preserve">
          <source>Manual binary installation</source>
          <target state="translated">Ручная двоичная установка</target>
        </trans-unit>
        <trans-unit id="572276926686cc7cc3f5283d7ffd30b0fe5dbb1a" translate="yes" xml:space="preserve">
          <source>Manual page indexers are often extremely picky about the format of this section, so don't put anything in it except this line. Every program or function documented by this POD page should be listed, separated by a comma and a space. For a Perl module, just give the module name. A single dash, and only a single dash, should separate the list of programs or functions from the description. Do not use any markup such as C&amp;lt;&amp;gt; or B&amp;lt;&amp;gt; anywhere in this line. Functions should not be qualified with &lt;code&gt;()&lt;/code&gt; or the like. The description should ideally fit on a single line, even if a man program replaces the dash with a few tabs.</source>
          <target state="translated">Индексаторы страниц вручную часто очень разборчивы в отношении формата этого раздела, поэтому не помещайте в него ничего, кроме этой строки. Каждая программа или функция, задокументированная на этой странице POD, должна быть указана через запятую и пробел. Для модуля Perl просто укажите имя модуля. Одно тире и только одно тире должно отделять список программ или функций от описания. Не используйте в этой строке разметку, например C &amp;lt;&amp;gt; или B &amp;lt;&amp;gt;. Функции не следует указывать с помощью &lt;code&gt;()&lt;/code&gt; и т.п. Описание должно идеально помещаться в одну строку, даже если программа man заменяет тире несколькими табуляциями.</target>
        </trans-unit>
        <trans-unit id="00b4c0e2070e1a2565707d57c993afbbae4c0c2e" translate="yes" xml:space="preserve">
          <source>Manual: FAQs</source>
          <target state="translated">Руководство:Часто задаваемые вопросы</target>
        </trans-unit>
        <trans-unit id="db75f57bcc4f9ed3d56d92896abd677a771bded6" translate="yes" xml:space="preserve">
          <source>Manual: Overview</source>
          <target state="translated">Руководство:Обзор</target>
        </trans-unit>
        <trans-unit id="950d94e419183f62360b7a18d309980db9dca27b" translate="yes" xml:space="preserve">
          <source>Manual: Tutorials</source>
          <target state="translated">Руководство:Учебники</target>
        </trans-unit>
        <trans-unit id="ac0e5ddc596dea92cba4c0e2c3555f39d4f7c5f0" translate="yes" xml:space="preserve">
          <source>Manually put</source>
          <target state="translated">ручной ввод</target>
        </trans-unit>
        <trans-unit id="4fddc764751f961b3d597ce52116c4021c09dadd" translate="yes" xml:space="preserve">
          <source>Manually setting hints from within your program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84207b4c45d8ef84a1d774f5c8bf8efd5fcd50a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="translated">Многие подпрограммы &lt;code&gt;AUTOLOAD&lt;/code&gt; загружают определение для запрошенной подпрограммы с помощью eval (), а затем выполняют эту подпрограмму с помощью специальной формы goto (), которая стирает кадр стека подпрограммы &lt;code&gt;AUTOLOAD&lt;/code&gt; без следа. (См., Например, исходный код стандартного модуля, &lt;a href=&quot;autoloader&quot;&gt;описанного&lt;/a&gt; в AutoLoader .) Но подпрограмма &lt;code&gt;AUTOLOAD&lt;/code&gt; может также просто имитировать подпрограмму и никогда не определять ее. Например, давайте представим, что функция, которая не была определена, должна просто вызывать &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; с этими аргументами. Все, что вам нужно сделать, это:</target>
        </trans-unit>
        <trans-unit id="1a7290a6ed663a7c77bc4c6109fa00f035bb42d3" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;system&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077443aca86ab6f4e2738e61b48baa6af4d5929a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;TAP::*&lt;/code&gt; classes have a</source>
          <target state="translated">Многие классы &lt;code&gt;TAP::*&lt;/code&gt; имеют</target>
        </trans-unit>
        <trans-unit id="ff6afc71dae16e6a2fa7c473b44e2b45df859fad" translate="yes" xml:space="preserve">
          <source>Many Test2 developers and users lurk on &lt;a href=&quot;irc://irc.perl.org/#perl-qa&quot;&gt;irc://irc.perl.org/#perl-qa&lt;/a&gt; and &lt;a href=&quot;irc://irc.perl.org/#toolchain&quot;&gt;irc://irc.perl.org/#toolchain&lt;/a&gt;. We also have a slack team that can be joined by anyone with an &lt;code&gt;@cpan.org&lt;/code&gt; email address &lt;a href=&quot;https://perl-test2.slack.com/&quot;&gt;https://perl-test2.slack.com/&lt;/a&gt; If you do not have an &lt;code&gt;@cpan.org&lt;/code&gt; email you can ask for a slack invite by emailing Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7697e7d09f9c98694e67e6f7f7b568fc62b09264" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases%28%29&quot;&gt;&quot;prop_aliases()&quot;&lt;/a&gt; (except if a property has both a complete mapping, and a binary &lt;code&gt;Y&lt;/code&gt;/&lt;code&gt;N&lt;/code&gt; mapping, then specifying the property name prefixed by &lt;code&gt;&quot;is&quot;&lt;/code&gt; causes the binary one to be returned). The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;perluniprops#Properties-accessible-through-Unicode%3A%3AUCD&quot;&gt;&quot;Properties accessible through Unicode::UCD&quot; in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a6d0011c1051ce0333abc0265080896a481453" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases()&lt;/a&gt;. The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;Properties accessible through Unicode::UCD in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="translated">Многие свойства Unicode имеют более одного имени (или псевдонима). &lt;code&gt;prop_invmap&lt;/code&gt; понимает все это, включая расширения Perl для них. Неоднозначности разрешаются, как описано выше для &lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases ()&lt;/a&gt; . Внутреннее свойство Perl Perl_Decimal_Digit, описанное ниже, также принимается. Если имя свойства неизвестно, возвращается пустой список. См. &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;Свойства, доступные через Unicode :: UCD в perluniprops,&lt;/a&gt; где описаны свойства, приемлемые в качестве входных данных для этой функции.</target>
        </trans-unit>
        <trans-unit id="33c4abda8cada5094d54134f3094015df454f077" translate="yes" xml:space="preserve">
          <source>Many applications contain some Perl code that could be reused.</source>
          <target state="translated">Многие приложения содержат некоторый Perl-код,который может быть использован повторно.</target>
        </trans-unit>
        <trans-unit id="48c7aff02ac4959c101106add7455533fff396df" translate="yes" xml:space="preserve">
          <source>Many built-in functions may be overridden, though this should be tried only occasionally and for good reason. Typically this might be done by a package attempting to emulate missing built-in functionality on a non-Unix system.</source>
          <target state="translated">Многие встроенные функции могут быть переопределены,хотя это следует делать лишь изредка и по уважительной причине.Обычно это может быть сделано пакетом,пытающимся эмулировать отсутствующую встроенную функциональность на неUnix-системе.</target>
        </trans-unit>
        <trans-unit id="294c60617a28cb2d00c28e138e9bdc873720df06" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="translated">Многие случаи использования &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; в условном выражении могут быть записаны с использованием &lt;code&gt;any&lt;/code&gt; вместо него, поскольку это может привести к короткому замыканию после первого истинного результата.</target>
        </trans-unit>
        <trans-unit id="8f257ebd5355ea10d707c95712fc0e9530be11ec" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;grep&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53c00d79c1b4a5caf2dbf3b1b3871ad968ba47e" translate="yes" xml:space="preserve">
          <source>Many cities around the world have local Perl Mongers chapters. A Perl Mongers chapter is a local user group which typically holds regular in-person meetings, both social and technical; helps organize local conferences, workshops, and hackathons; and provides a mailing list or other continual contact method for its members to keep in touch.</source>
          <target state="translated">Во многих городах мира есть местные отделения Perl Mongers.Отдел Perl Mongers-это местная группа пользователей,которая обычно проводит регулярные личные встречи,как социальные,так и технические;помогает организовывать местные конференции,семинары и хакатоны;а также предоставляет список рассылки или другой метод постоянного контакта для своих членов,чтобы они могли поддерживать связь.</target>
        </trans-unit>
        <trans-unit id="1333a5caee67ed3743b1573e310fc69a41dedbcf" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {ar-ae} UAE Arabic; {ar-bh} Bahrain Arabic; {ar-dz} Algerian Arabic; {ar-eg} Egyptian Arabic; {ar-iq} Iraqi Arabic; {ar-jo} Jordanian Arabic; {ar-kw} Kuwait Arabic; {ar-lb} Lebanese Arabic; {ar-ly} Libyan Arabic; {ar-ma} Moroccan Arabic; {ar-om} Omani Arabic; {ar-qa} Qatari Arabic; {ar-sa} Sauda Arabic; {ar-sy} Syrian Arabic; {ar-tn} Tunisian Arabic; {ar-ye} Yemen Arabic.</source>
          <target state="translated">В разговорных средствах массовой информации многие формы являются взаимонеразборчивыми.Примечательные формы:{ar-ae}Арабский язык ОАЭ;{ар-бх}бахрейнский арабский;{ar-dz}алжирский арабский;{ар-ег}Египетский арабский;{ar-iq}иракский арабский;{ар-джо}иорданский арабский;{ar-kw}кувейтский арабский;{ar-lb}Ливанский арабский;{ар-ли}ливийский арабский;{ар-ма}марокканский арабский;{ар-ом}Оманский арабский;{ar-qa}катарский арабский;{ар-са}Сауда-арабский;{ар-си}сирийский арабский;{ар-тень}тунисский арабский;{ar-ye}Йеменский арабский.</target>
        </trans-unit>
        <trans-unit id="22b65de1b1ff16b769feb6a461c534e2b3b49857" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {zh-Hans} Chinese, in simplified script; {zh-Hant} Chinese, in traditional script; {zh-tw} Taiwan Chinese; {zh-cn} PRC Chinese; {zh-sg} Singapore Chinese; {zh-mo} Macau Chinese; {zh-hk} Hong Kong Chinese; {zh-guoyu} Mandarin [Putonghua/Guoyu]; {zh-hakka} Hakka [formerly &quot;i-hakka&quot;]; {zh-min} Hokkien; {zh-min-nan} Southern Hokkien; {zh-wuu} Shanghaiese; {zh-xiang} Hunanese; {zh-gan} Gan; {zh-yue} Cantonese.</source>
          <target state="translated">В разговорных средствах массовой информации многие формы являются взаимонеразборчивыми.Примечательные формы:{zh-Hans}китайский,по упрощенному шрифту;{zh-Hant}Китайский,по традиционному сценарию;{j-tw}Тайваньский китайский;{zh-cn}Китайцы из КНР;{zh-sg}сингапурский китайский;{чж-мо}Макао китайский;{ж-жк}Гонконгский китайский;{ж-гуойу}мандаринский [Путонхуа/гуойу];{ж-хакка}Хакка [ранее &quot;и-хакка&quot;];{ж-мин}Хоккиен;{zh-min-nan}Южный Хоккиен;{ж-вуу}шанхаец;{ж-сианг}Хунанес;{&quot;j-gan}Ган;{ж-юэ}Кантонский.</target>
        </trans-unit>
        <trans-unit id="453c2424198e6c72c7985d52564f33ad8ed6bde5" translate="yes" xml:space="preserve">
          <source>Many functions have some kind of reference manipulation as part of their purpose. Sometimes this is documented in terms of ownership of references, and sometimes it is (less helpfully) documented in terms of changes to reference counts. For example, the &lt;a href=&quot;perlapi#newRV_inc&quot;&gt;newRV_inc()&lt;/a&gt; function is documented to create a new RV (with reference count 1) and increment the reference count of the referent that was supplied by the caller. This is best understood as creating a new reference to the referent, which is owned by the created RV, and returning to the caller ownership of the sole reference to the RV. The &lt;a href=&quot;perlapi#newRV_noinc&quot;&gt;newRV_noinc()&lt;/a&gt; function instead does not increment the reference count of the referent, but the RV nevertheless ends up owning a reference to the referent. It is therefore implied that the caller of &lt;code&gt;newRV_noinc()&lt;/code&gt; is relinquishing a reference to the referent, making this conceptually a more complicated operation even though it does less to the data structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce036cf5b80f30684cc79c208c3479e5b4b012ed" translate="yes" xml:space="preserve">
          <source>Many good books have been written about Perl--see the section later in &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for more details.</source>
          <target state="translated">О Perl написано много хороших книг - подробнее см. Раздел &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2 далее&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="daec66bc8e44bcc2464b1a0d6c4a9145c9a7595a" translate="yes" xml:space="preserve">
          <source>Many members of the community have a Perl-related blog on this site. If you'd like to join them, you can sign up for free.</source>
          <target state="translated">У многих членов сообщества на этом сайте есть блог,связанный с Perl-ом.Если вы хотите присоединиться к ним,вы можете зарегистрироваться бесплатно.</target>
        </trans-unit>
        <trans-unit id="a71a9a58452bd2f82710c97492e2e55820847a42" translate="yes" xml:space="preserve">
          <source>Many modules are included in the Perl distribution. These are described below, and all end in</source>
          <target state="translated">Многие модули включены в дистрибутив Perl.Они описаны ниже,и все заканчиваются на</target>
        </trans-unit>
        <trans-unit id="1f04b4ad6b9470f5a4263506a665427c873dff64" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt; ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="translated">Многие модули используют &lt;code&gt;AUTOLOAD&lt;/code&gt; для подпрограмм констант, чтобы избежать необходимости компилировать и тратить память на редко используемые значения ( подробности о подпрограммах констант см. В &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; ). Вызов таких постоянных подпрограмм не оптимизируется во время компиляции, потому что они не могут быть проверены во время компиляции на постоянство.</target>
        </trans-unit>
        <trans-unit id="730337ad35302b76d62b0f02a8d67322d180f0d7" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt;ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a0e7ba88e55cf427d9e31a53ffbec21a7210c5" translate="yes" xml:space="preserve">
          <source>Many more features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd64827a8fe9cbce8371a7bcfdacc99021bfba74" translate="yes" xml:space="preserve">
          <source>Many of Perl's syntactic elements are &lt;b&gt;optional&lt;/b&gt;. Rather than requiring you to put parentheses around every function call and declare every variable, you can often leave such explicit elements off and Perl will figure out what you meant. This is known as &lt;b&gt;Do What I Mean&lt;/b&gt;, abbreviated &lt;b&gt;DWIM&lt;/b&gt;. It allows programmers to be &lt;b&gt;lazy&lt;/b&gt; and to code in a style with which they are comfortable.</source>
          <target state="translated">Многие синтаксические элементы Perl &lt;b&gt;необязательны&lt;/b&gt; . Вместо того, чтобы требовать, чтобы вы помещали круглые скобки вокруг каждого вызова функции и объявляли каждую переменную, вы часто можете не включать такие явные элементы, и Perl поймет, что вы имели в виду. Это называется &lt;b&gt;Do What I Mean&lt;/b&gt; , сокращенно &lt;b&gt;DWIM&lt;/b&gt; . Это позволяет программистам быть &lt;b&gt;ленивыми&lt;/b&gt; и &lt;b&gt;писать&lt;/b&gt; код в удобном для них стиле.</target>
        </trans-unit>
        <trans-unit id="a80a79f26d84c2cb761d54166d1d73c391965f8f" translate="yes" xml:space="preserve">
          <source>Many of the comments in the existing code ignore the possibility of EBCDIC, and may be wrong therefore, even if the code works. This is actually a tribute to the successful transparent insertion of being able to handle EBCDIC without having to change pre-existing code.</source>
          <target state="translated">Многие комментарии в существующем коде игнорируют возможность EBCDIC,и поэтому могут быть неправильными,даже если код работает.На самом деле,это дань уважения успешной прозрачной вставке возможности работать с EBCDIC без необходимости изменять уже существующий код.</target>
        </trans-unit>
        <trans-unit id="9898a42f1ac737909964257112ee94f7d9cf02b3" translate="yes" xml:space="preserve">
          <source>Many of the examples which follow will concentrate on creating an interface between Perl and the ONC+ RPC bind library functions. The rpcb_gettime() function is used to demonstrate many features of the XS language. This function has two parameters; the first is an input parameter and the second is an output parameter. The function also returns a status value.</source>
          <target state="translated">Многие из приведенных ниже примеров будут сконцентрированы на создании интерфейса между Perl и функциями связующей библиотеки ONC+RPC.Функция rpcb_gettime()используется для демонстрации многих возможностей языка XS.Эта функция имеет два параметра;первый-входной и второй-выходной.Функция также возвращает значение состояния.</target>
        </trans-unit>
        <trans-unit id="921520a4912c2671d68673bde14f85005a75001d" translate="yes" xml:space="preserve">
          <source>Many of the functions and methods listed below take a list of operators as parameters. Most operator lists can be made up of several types of element. Each element can be one of</source>
          <target state="translated">Многие функции и методы,перечисленные ниже,воспринимают список операторов в качестве параметров.Большинство списков операторов может состоять из нескольких типов элементов.Каждый элемент может быть одним из</target>
        </trans-unit>
        <trans-unit id="7ce44f55ac189a65855572d397cff0134d70bf83" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt; , a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="translated">Многие функции в этом модуле возвращают объект Benchmark или, в случае &lt;code&gt;timethese()&lt;/code&gt; , ссылку на хэш, значениями которого являются объекты Benchmark. Это полезно, если вы хотите сохранить или обработать результаты функций Benchmark.</target>
        </trans-unit>
        <trans-unit id="0de1482c88cef756f8728fbc7e608916bb4e2062" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt;, a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa695823c4cf174fe101c150852b83035705c8" translate="yes" xml:space="preserve">
          <source>Many of these fit entirely into 8 bits, using ASCII as 0-127, while specifying what 128-255 mean, and not using anything above 255. Thus, these are single-byte (or octet if you prefer) character sets. One important one (since Unicode is a superset of it) is the ISO 8859-1 character set.</source>
          <target state="translated">Многие из них полностью укладываются в 8 бит,используя ASCII как 0-127,указывая при этом,что значит 128-255,и не используя ничего выше 255.Таким образом,это однобайтовые (или октеты,если хотите)наборы символов.Одним из важных (поскольку Юникод является его суперсетью)является набор символов ISO 8859-1.</target>
        </trans-unit>
        <trans-unit id="0b3bf50d1b5911ce9e6512eaf6849f76aed2a52f" translate="yes" xml:space="preserve">
          <source>Many of these functions are not safe in a multi-threaded environment where more than one thread can be using them. In particular, functions like &lt;code&gt;getpwent()&lt;/code&gt; iterate per-process and not per-thread, so if two threads are simultaneously iterating, neither will get all the records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f3b55f18e683ceb0e20e5811ee8daf9fe6a35d" translate="yes" xml:space="preserve">
          <source>Many older Pod parsers did not accept a line consisting of spaces/tabs and then a newline as a blank line. The only lines they considered blank were lines consisting of</source>
          <target state="translated">Многие старые парсеры Pod не принимали строку,состоящую из пробелов/записей,а затем новую строку как пустую.Единственными строками,которые они считали пустыми,были строки,состоящие из</target>
        </trans-unit>
        <trans-unit id="77b79be2ba71305e951ed06673ece959275013dd" translate="yes" xml:space="preserve">
          <source>Many older Pod translators require the lines before every Pod command and after every Pod command (including &quot;=cut&quot;!) to be a blank line. Having something like this:</source>
          <target state="translated">Многие старые переводчики под требуют,чтобы строки перед каждой командой под и после каждой команды под (включая &quot;=cut&quot;!)были пустой строкой.Имея что-то подобное:</target>
        </trans-unit>
        <trans-unit id="5fdba737024348a43ba7029975783958d0026e67" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; from other values. (A simple Boolean test will not distinguish among &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt;, which are all equally false.) Note that since &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; is a valid scalar, its presence doesn't</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a404450a4f0d183d7e5d43b166d410dc6203e579" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">Многие операции возвращают &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , чтобы указать на сбой, конец файла, системную ошибку, неинициализированную переменную и другие исключительные условия. Эта функция позволяет отличать &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; от других значений. (Простой логический тест не будет различать &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , ноль, пустую строку и &lt;code&gt;&quot;0&quot;&lt;/code&gt; , которые одинаково ложны.) Обратите внимание, что, поскольку &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; является допустимым скаляром, его присутствие не</target>
        </trans-unit>
        <trans-unit id="98e1178b6db9a17ccdf3a94478a8066c1df5bc3a" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">Многие операции возвращают &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , чтобы указать на сбой, конец файла, системную ошибку, неинициализированную переменную и другие исключительные условия. Эта функция позволяет отличать &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; от других значений. (Простой логический тест не будет различать &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , ноль, пустую строку и &lt;code&gt;&quot;0&quot;&lt;/code&gt; , которые одинаково ложны.) Обратите внимание, что, поскольку &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; является допустимым скаляром, его присутствие не</target>
        </trans-unit>
        <trans-unit id="2dfa8b77d5259786f771a6e4ace0bfcdbd85aa18" translate="yes" xml:space="preserve">
          <source>Many operators can be combined with a &lt;code&gt;=&lt;/code&gt; as follows:</source>
          <target state="translated">Многие операторы можно комбинировать с a &lt;code&gt;=&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="a7edb2d97b3af3ae2394d677e142e5033e9352fd" translate="yes" xml:space="preserve">
          <source>Many operators can be overloaded for objects. See &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;.</source>
          <target state="translated">Многие операторы могут быть перегружены для объектов. Смотрите &lt;a href=&quot;overload&quot;&gt;перегрузку&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0786026e69f66286ea639842ce2404d2adc40ac" translate="yes" xml:space="preserve">
          <source>Many people contributed in one or more ways to the final beast, see the file CREDITS for an (incomplete) list. If you miss your name, please drop me a mail. Thank you!</source>
          <target state="translated">Многие люди внесли свой вклад одним или несколькими способами в создание финального зверя,смотрите файл CREDITS для (неполного)списка.Если вы пропустили ваше имя,пожалуйста,отправьте мне письмо.Спасибо!</target>
        </trans-unit>
        <trans-unit id="3cd694c993c7766c158f0bde0cae8406dd835121" translate="yes" xml:space="preserve">
          <source>Many people enter the CPAN shell by running the &lt;a href=&quot;cpan&quot;&gt;cpan&lt;/a&gt; utility program which is installed in the same directory as perl itself. So if you have this directory in your PATH variable (or some equivalent in your operating system) then typing &lt;code&gt;cpan&lt;/code&gt; in a console window will work for you as well. Above that the utility provides several commandline shortcuts.</source>
          <target state="translated">Многие люди входят в оболочку CPAN, запустив служебную программу &lt;a href=&quot;cpan&quot;&gt;cpan,&lt;/a&gt; которая установлена ​​в том же каталоге, что и сам perl. Так что, если у вас есть этот каталог в переменной PATH (или в каком-либо эквиваленте в вашей операционной системе), то ввод &lt;code&gt;cpan&lt;/code&gt; в окне консоли также подойдет вам. Кроме того, утилита предоставляет несколько ярлыков командной строки.</target>
        </trans-unit>
        <trans-unit id="cf066e941decde490ba46743ad80acc7ad0c1d13" translate="yes" xml:space="preserve">
          <source>Many platforms, quite rightly so, will give you a core dump instead of a pony if the p happens not to be correctly aligned.</source>
          <target state="translated">На многих платформах,вполне справедливо,если p окажется неправильно выровненным,вы получите дамп ядра вместо пони.</target>
        </trans-unit>
        <trans-unit id="ad441fa89d95482888ef0338d65a9d30f90b64d7" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Alta Vista or Google.</source>
          <target state="translated">Многие популярные модули расширения C не поставляются в комплекте (по крайней мере,не полностью)из-за их размеров,волатильности или просто отсутствия времени для адекватного тестирования и настройки на множестве платформ,на которых Perl был бета-тестирован.Рекомендуется искать их на CPAN (описано ниже),или используя поисковые системы,такие как Alta Vista или Google.</target>
        </trans-unit>
        <trans-unit id="65b9676d9f89e15e127ab7753c58e60a602e2704" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Google or DuckDuckGo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd710785412d1136d5d2fe923caa1de40582889" translate="yes" xml:space="preserve">
          <source>Many porters are also active on the &lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc://irc.perl.org/#p5p&lt;/a&gt; channel. Feel free to join the channel and ask questions about hacking on the Perl core.</source>
          <target state="translated">Многие носильщики также активны на канале &lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc: //irc.perl.org/#p5p&lt;/a&gt; . Не стесняйтесь присоединиться к каналу и задавать вопросы о взломе ядра Perl.</target>
        </trans-unit>
        <trans-unit id="1b93f4b5b9979ea7052f6313958e026f6e2ea4a2" translate="yes" xml:space="preserve">
          <source>Many regular expression constructs don't work on EBCDIC platforms.</source>
          <target state="translated">Многие конструкции регулярных выражений не работают на платформах EBCDIC.</target>
        </trans-unit>
        <trans-unit id="2c09ff3401dc02f5920da9178fc87b7ee9d234ec" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt; , hence &lt;code&gt;$!&lt;/code&gt; , is meaningful only</source>
          <target state="translated">Многие системные или библиотечные вызовы устанавливают &lt;code&gt;errno&lt;/code&gt; в случае сбоя, чтобы указать причину сбоя. Они , как правило , &lt;b&gt;не&lt;/b&gt; устанавливается &lt;code&gt;errno&lt;/code&gt; к нулю , если им удастся. Это означает &lt;code&gt;errno&lt;/code&gt; , следовательно, &lt;code&gt;$!&lt;/code&gt; , имеет смысл только</target>
        </trans-unit>
        <trans-unit id="d15215c411905dc2055f214138f50c4dd6d3b024" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt;, hence &lt;code&gt;$!&lt;/code&gt;, is meaningful only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c790c1897e3e898f761b95151fd508249c16664d" translate="yes" xml:space="preserve">
          <source>Many systems (DOS, VMS ODS-2) cannot have more than one &lt;code&gt;.&lt;/code&gt; in their filenames.</source>
          <target state="translated">Многие системы (DOS, VMS ODS-2) не могут иметь более одной &lt;code&gt;.&lt;/code&gt; в их именах файлов.</target>
        </trans-unit>
        <trans-unit id="7efce1a3865da7dfdc9c988fdb8235136031c9dd" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt; , to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt; , to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="translated">Большое спасибо Флориану Рагвицу за помощь в администрировании и упаковке, Джону Тромпу за отчеты об ошибках, Джонатану Рою за отчеты об ошибках и предложения, Майклу Шверну за другие отчеты об ошибках и исправлениям, Майку Кариазо за помощь в выборе правильного решения. Do About Expiration, Джошуа Герту, Джошуа Чамасу, Джонатану Рою (снова), Марку Д. Андерсону и Эндрю Джонсону за дополнительные предложения по истечению срока, Бренту Пауэрсу за модуль Memoize :: ExpireLRU, Ариэлю Сколникову за восхитительные сообщения о Функция Фибоначчи - Диону Альмаеру за наводящие на размышления предложения о нормализаторе по умолчанию, Уолту Манковски и Курту Старсиничу за большую помощь в исследовании проблем в многопоточном Perl, Алексу Дудкевичу за сообщение об ошибке в прототипных функциях и за проверку моего патча, Тони Бассу. за множество полезных предложений,Джонатану Рою (снова) за то, что он нашел применение &lt;code&gt;unmemoize()&lt;/code&gt; , Филиппу Вердре за содержательное обсуждение &lt;code&gt;Hook::PrePostCall&lt;/code&gt; , Нату Торкингтону за совет, который я проигнорировал, Крису Нандору за совет по переносимости, &lt;code&gt;flush_cache&lt;/code&gt; Шварцу за предложение функции ' flush_cache и Дженде Криницки за то, что мир.</target>
        </trans-unit>
        <trans-unit id="08e2587ccaa6d7cfd0ff49e65ee53ee4cc5fb187" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt;, to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt;, to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="0b06a5289fc2a1842dff3a88be9b7be213a3d5b9" translate="yes" xml:space="preserve">
          <source>Map ASCII unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd0cefd9b93740b2ce288b59bbfa2506b7603b6" translate="yes" xml:space="preserve">
          <source>Map Perl operating system names to generic types</source>
          <target state="translated">Карта Perl названия операционной системы к общим типам</target>
        </trans-unit>
        <trans-unit id="7d32a75bc17a4709e9d1141d1ebfa60b6cd43879" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Карта всегда возвращает список, который может быть назначен хешу, так что элементы становятся парами ключ / значение. См. &lt;a href=&quot;../perldata&quot;&gt;Perldata&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b5dd04ccd71f6dc1b0c4b39870ec7fbae4d0141a" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Карта всегда возвращает список, который может быть назначен хешу, так что элементы становятся парами ключ / значение. См. &lt;a href=&quot;perldata&quot;&gt;Perldata&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="3a9b87b1050e7882b468c1ddc762f864cd1b3ca5" translate="yes" xml:space="preserve">
          <source>Map such a character set that consists of 94 or 96 powered by N members by adding 0x80 to each byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fa0aeb10d9944cd20c23c3471632b3053b6c36" translate="yes" xml:space="preserve">
          <source>Mapping \x00 to '@' causes too much pain everywhere.</source>
          <target state="translated">Картирование \x00 на '@' причиняет слишком много боли повсюду.</target>
        </trans-unit>
        <trans-unit id="b05d51e1bee28ea12c20512307467a2c4ee871f8" translate="yes" xml:space="preserve">
          <source>Maps certain Unicode code points to their legacy Japanese cell-phone values</source>
          <target state="translated">Карты некоторых кодов Юникода указывают на их унаследованные значения японского сотового телефона.</target>
        </trans-unit>
        <trans-unit id="67c10042685d0de63983cda038f2ff8c2785c051" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt; 's behavior under pre-5.7 Perls.</source>
          <target state="translated">Сопоставляет имена (например, &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ), такие как &quot;eacute&quot; или &quot;sol&quot;, со значением Unicode, которое обозначает каждое из них. Например, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; - 201, а &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; - 8364. Вы получаете правильное значение Unicode, независимо от используемой версии Perl, которое отличается от &lt;code&gt;%Name2character&lt;/code&gt; 's поведение на Perls до версии 5.7.</target>
        </trans-unit>
        <trans-unit id="9536673c9e3743e558f91c5129ada427b7fd5a55" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt;'s behavior under pre-5.7 Perls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2553254721ed355ac347e903abc341219f5deb" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the string that each stands for. Note that this does not include numerics (like &quot;64&quot; or &quot;x981c&quot;). Under old Perl versions (before 5.7) you get a &quot;?&quot; in place of characters whose Unicode value is over 255.</source>
          <target state="translated">Сопоставляет имена (например, &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ), такие как &quot;eacute&quot; или &quot;sol&quot;, со строкой, которую обозначает каждое из них. Обратите внимание, что это не включает числа (например, &amp;laquo;64&amp;raquo; или &amp;laquo;x981c&amp;raquo;). В старых версиях Perl (до 5.7) вы получаете знак &quot;?&quot; вместо символов, значение Unicode которых превышает 255.</target>
        </trans-unit>
        <trans-unit id="a1b78ee004c9a2fbd85f8f626a722e3fe6da6945" translate="yes" xml:space="preserve">
          <source>Maps the kRSUnicode property values to corresponding code points</source>
          <target state="translated">Связывает значения свойства kRSUnicode с соответствующими кодовыми точками</target>
        </trans-unit>
        <trans-unit id="7b909fc95f2b4e5f8d9967846d9866d42fccc70f" translate="yes" xml:space="preserve">
          <source>Marc Green, &amp;lt;marcgreen@cpan.org&amp;gt;.</source>
          <target state="translated">Марк Грин, &amp;lt;marcgreen@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="0650171f58161c1a60dbd003ef755368668ef874" translate="yes" xml:space="preserve">
          <source>March 14, 2003 (Pi day)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca9751b38a5ce5495d1bc4a93437267f7e09312" translate="yes" xml:space="preserve">
          <source>March 18th, 2000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777916db149dc5cc899516f42c23bd6b0847475c" translate="yes" xml:space="preserve">
          <source>March 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6188237b0da82f2fd62e1940dd4c6b739e5e4019" translate="yes" xml:space="preserve">
          <source>March 28th, 1997; by Hugo van der Sanden: added support for code references and the already documented 'debug' method; revamped documentation.</source>
          <target state="translated">28 марта 1997 года;Хуго ван дер Санден:добавил поддержку ссылок на код и уже документированного метода 'отладки';переработал документацию.</target>
        </trans-unit>
        <trans-unit id="719b2885e137f36b196d43363c080ddacf1c5a2e" translate="yes" xml:space="preserve">
          <source>Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</source>
          <target state="translated">Маркус Холланд-Мориц &amp;lt;mhx@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1dfd6571ab219bad3b1cec579d53f1dfc162bfba" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;</source>
          <target state="translated">Марек Рушал &amp;lt;marekr@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="264476e951a0a1cdd02faca9ecf02d9d3dd7bcf9" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, borrowing a lot of things from &lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff&lt;/a&gt; as well as other POD processing tools by Tom Christiansen, Brad Appleton and Russ Allbery.</source>
          <target state="translated">Марек Роушал &amp;lt;marekr@cpan.org&amp;gt;, позаимствовавший много вещей у &lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff,&lt;/a&gt; а также других инструментов обработки POD от Тома Кристиансена, Брэда Эпплтона и Расса Олбери.</target>
        </trans-unit>
        <trans-unit id="c079bae77060ca37ba3c2926c71f4d4859c75bac" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, heavily borrowing code from Nick Ing-Simmons' PodToHtml.</source>
          <target state="translated">Марек Рушал &amp;lt;marekr@cpan.org&amp;gt;, в значительной степени заимствовал код из PodToHtml Ника Инг-Симмонса.</target>
        </trans-unit>
        <trans-unit id="9069d6c0e29c4952ab3d16ec4d73d5cdcc560d93" translate="yes" xml:space="preserve">
          <source>Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83f3f033b2fc96f5fc9ad533bd899a9d4b6ecc0" translate="yes" xml:space="preserve">
          <source>Mark Biggar said, when asked about to drop the '+' altogether, or make only &lt;code&gt;cmp&lt;/code&gt; work:</source>
          <target state="translated">Марк Биггар сказал, когда его спросили о том, чтобы полностью отказаться от '+' или заставить работать только &lt;code&gt;cmp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41a097411cd8ebbee57a678e8ee8e205e4008c67" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich, 1996-2001.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377509d88d53597d4ff4d33c6f13c1974a06e69d" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich. Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in 2001 - 2006, and still at it in 2007.</source>
          <target state="translated">Марк Биггар, перегруженный интерфейс Ильи Захаревича. Полностью переписан Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; в 2001-2006 годах и все еще находится на нем в 2007 году.</target>
        </trans-unit>
        <trans-unit id="ac261964132320c5f1e5015540d01455408eb496" translate="yes" xml:space="preserve">
          <source>Mark Fowler &amp;lt;markf@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d300b7701521ff8a33f7b33d0188a117c431b382" translate="yes" xml:space="preserve">
          <source>Mark Jason Dominus</source>
          <target state="translated">Марк Джейсон Доминус</target>
        </trans-unit>
        <trans-unit id="450f27b0693fb0a8da6251b3b74d437c26be547d" translate="yes" xml:space="preserve">
          <source>Mark Kettenis &amp;lt;kettenis@gnu.org&amp;gt;</source>
          <target state="translated">Марк Кеттенис &amp;lt;kettenis@gnu.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="81bc652b2afe581a8637a9ead94c1a383e00b3d9" translate="yes" xml:space="preserve">
          <source>Mark Reed and Roland Giersig -- Klingon translators.</source>
          <target state="translated">Марк Рид и Роланд Гирсиг-клингонские переводчики.</target>
        </trans-unit>
        <trans-unit id="e1debb6f407e6933148527bee46b8099a40b610d" translate="yes" xml:space="preserve">
          <source>Mark Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ddbdd441714aa3b5957a06f9bf2537de77f045" translate="yes" xml:space="preserve">
          <source>Mark Stosberg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f44ec87511dcf9977a4ec17e09815c5d4e4d80" translate="yes" xml:space="preserve">
          <source>Mark all the current temporaries for reuse</source>
          <target state="translated">Отметьте все текущие временные параметры для повторного использования.</target>
        </trans-unit>
        <trans-unit id="9cd6842e0e13563dce83b0a4158f7d6424282172" translate="yes" xml:space="preserve">
          <source>Mark an object as not-readonly. Exactly what this mean depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a02aa032f48d5863f9a1d17981d5d9567c8844" translate="yes" xml:space="preserve">
          <source>Mark an object as readonly. Exactly what this means depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434c6b3d12f78673c6f025dc43bd2b5e87746cf6" translate="yes" xml:space="preserve">
          <source>Mark message &lt;code&gt;MSGNUM&lt;/code&gt; to be deleted from the remote mailbox. All messages that are marked to be deleted will be removed from the remote mailbox when the server connection closed.</source>
          <target state="translated">Отметьте сообщение &lt;code&gt;MSGNUM&lt;/code&gt; для удаления из удаленного почтового ящика. Все сообщения, помеченные для удаления, будут удалены из удаленного почтового ящика после закрытия соединения с сервером.</target>
        </trans-unit>
        <trans-unit id="3fc451fa99eddaf84abe45f817ed60d28d73925f" translate="yes" xml:space="preserve">
          <source>Mark modules as loaded or unloaded</source>
          <target state="translated">Отметьте модули как загруженные или разгруженные</target>
        </trans-unit>
        <trans-unit id="0952995ce715e0fcf16177cb607a92712143f22b" translate="yes" xml:space="preserve">
          <source>Mark places that need to be revisited with XXX (and revisit often!)</source>
          <target state="translated">Отметьте места,которые нужно пересмотреть с XXX (и часто пересматривайте!).</target>
        </trans-unit>
        <trans-unit id="f890cc48bd62c292c1b2117bad32ccde46514a4e" translate="yes" xml:space="preserve">
          <source>Mark stack</source>
          <target state="translated">Маркированный штабель</target>
        </trans-unit>
        <trans-unit id="757fbf6071a2b2fed849d8ec18f9f6866d396b4c" translate="yes" xml:space="preserve">
          <source>Mark the stream as line buffered. &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; sets the PERLIO_F_LINEBUF flag and is normally sufficient.</source>
          <target state="translated">Отметить поток как буферизованный по строке. &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; устанавливает флаг PERLIO_F_LINEBUF, и обычно этого достаточно.</target>
        </trans-unit>
        <trans-unit id="0da58592dac4b83b59b8524c503019ad8f94d0df" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ), Plover Systems co.</source>
          <target state="translated">Марк-Джейсон Доминус ( &lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ), компания Plover Systems co.</target>
        </trans-unit>
        <trans-unit id="f0e3d2177b8ac5226b97d7fae88a022b0452ed9f" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt;), Plover Systems co.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fb530910c2bcc92b57abfd9b169a4f2b074dec" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (mjd-perl-memoize+@plover.com)</source>
          <target state="translated">Марк-Джейсон Доминус (mjd-perl-memoize+@plover.com)</target>
        </trans-unit>
        <trans-unit id="5686a25e5fb2f469692e134a738a6ecc07d28f5e" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;o&lt;/code&gt; as having no further siblings and marks o as having the specified parent. See also &lt;code&gt;&lt;a href=&quot;#OpMORESIB_set&quot;&gt;&quot;OpMORESIB_set&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt;. For a higher-level interface, see &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f68109ba2dde58a98de8a29bc502b61b464f61" translate="yes" xml:space="preserve">
          <source>Marks an SV as tainted if tainting is enabled.</source>
          <target state="translated">Пометит SV как запятнанное,если запятнание включено.</target>
        </trans-unit>
        <trans-unit id="a080fe5381afacd2d95df891fcd34ffb1b062407" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. &lt;code&gt;SvTEMP()&lt;/code&gt; is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db65aa42a74dc9034cc35ce6c1faf364427ed3b" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. SvTEMP() is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_mortalcopy&lt;/code&gt; .</source>
          <target state="translated">Отмечает существующий SV как смертный. SV будет уничтожен &amp;laquo;скоро&amp;raquo; либо явным вызовом FREETMPS, либо неявным вызовом в таких местах, как границы операторов. SvTEMP () включен, что означает, что строковый буфер SV может быть &amp;laquo;украден&amp;raquo;, если этот SV скопирован. См. Также &lt;code&gt;sv_newmortal&lt;/code&gt; и &lt;code&gt;sv_mortalcopy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff643d8dde56f37f877ff7ade1da6aae5c6540db" translate="yes" xml:space="preserve">
          <source>Marks o as having no further siblings. On &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; builds, marks o as having the specified parent. See also &lt;code&gt;OpMORESIB_set&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">Отметка o как не имеющая братьев и сестер. В &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; отмечает o как имеющего указанного родителя. См. Также &lt;code&gt;OpMORESIB_set&lt;/code&gt; и &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . Для интерфейса более высокого уровня см. &lt;code&gt;op_sibling_splice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f648546860128e7a1516008b618e091f14b60522" translate="yes" xml:space="preserve">
          <source>Marks the object as taint-clean, and as such data read from it will also be considered taint-clean. Note that this is a very trusting action to take, and appropriate consideration for the data source and potential vulnerability should be kept in mind. Returns 0 on success, -1 if setting the taint-clean flag failed. (eg invalid handle)</source>
          <target state="translated">Обозначает объект как taint-clean,и в этом качестве прочитанные из него данные также будут считаться taint-clean.Обратите внимание,что это очень доверчивое действие,и следует иметь в виду соответствующий учет источника данных и потенциальной уязвимости.Возвращает 0 при успешном выполнении,-1 при неудачной установке флага taint-clean.(например,недействительная ручка)</target>
        </trans-unit>
        <trans-unit id="4a22faf92173de5f56b8198d2fcad5f9500ee814" translate="yes" xml:space="preserve">
          <source>Marks the package as loaded to perl. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">Помечает пакет как загруженный в perl. &lt;code&gt;PACKAGE&lt;/code&gt; может быть пустым словом или строкой.</target>
        </trans-unit>
        <trans-unit id="04902927b1471c77962c6cabf557af3a4b22b23b" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt; . &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">Помечает пакет как выгруженный в perl, что является полной противоположностью &lt;code&gt;mark_as_loaded&lt;/code&gt; . &lt;code&gt;PACKAGE&lt;/code&gt; может быть пустым словом или строкой.</target>
        </trans-unit>
        <trans-unit id="719514f0bc1e227795966e35c172acb7e89879e5" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt;. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1f770624b796cd596d3a67943a0c4353130d2c" translate="yes" xml:space="preserve">
          <source>Marks the variable as multiply defined, thus preventing the:</source>
          <target state="translated">Помечает переменную как определяемую умножением,тем самым предотвращая ее:</target>
        </trans-unit>
        <trans-unit id="cff46171564d3d534ef0fb1847dbfa00e48f231c" translate="yes" xml:space="preserve">
          <source>Martin J. Evans &amp;lt;mjegh@ntlworld.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85406e2038d0243edddde001716b01684f2778ce" translate="yes" xml:space="preserve">
          <source>Martin-Louis Bright &amp;lt;mlbright@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d429907f8fad8de61eed79786629c962a0844da0" translate="yes" xml:space="preserve">
          <source>Massachusetts</source>
          <target state="translated">Massachusetts</target>
        </trans-unit>
        <trans-unit id="37e5fcb1ae2486eac4310780e954d1d2153d08b1" translate="yes" xml:space="preserve">
          <source>Mastering Perl</source>
          <target state="translated">мастеринговый перл</target>
        </trans-unit>
        <trans-unit id="ea351e672a82e1244cd8779022e09f0034f5a7e1" translate="yes" xml:space="preserve">
          <source>Mastering Regular Expressions</source>
          <target state="translated">Совершенствование регулярных выражений</target>
        </trans-unit>
        <trans-unit id="22d4d02d8da4f8d133bb080e8bf0a53687196993" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b' followed by 'c'. We are on a roll and have satisfied the first group. Set $1 to 'abc'.</source>
          <target state="translated">Матч &quot;а&quot;,затем &quot;б&quot;,затем &quot;в&quot;.Мы на перекличке и удовлетворили первую группу.Установите $1 на &quot;abc&quot;.</target>
        </trans-unit>
        <trans-unit id="11c4d0b2479d50705f90c54d0532f70025aab256" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b'. So far so good.</source>
          <target state="translated">Матч &quot;а&quot;,а затем &quot;б&quot;.Пока все хорошо.</target>
        </trans-unit>
        <trans-unit id="2d4b771841aed044053e2a7426782a75fac41932" translate="yes" xml:space="preserve">
          <source>Match all subsections of &lt;code&gt;DESCRIPTION&lt;/code&gt;</source>
          <target state="translated">Соответствовать всем подразделам &lt;code&gt;DESCRIPTION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b37627cd568766a8a2fde5b6baa2adc0dd0c782" translate="yes" xml:space="preserve">
          <source>Match all top level sections but none of their subsections:</source>
          <target state="translated">Соответствует всем разделам верхнего уровня,но ни один из их подразделов:</target>
        </trans-unit>
        <trans-unit id="d0596c8f0742f8f130e5e576d30972fa9f4302b5" translate="yes" xml:space="preserve">
          <source>Match only the &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Answer&lt;/code&gt; subsections of the &lt;code&gt;DESCRIPTION&lt;/code&gt; section:</source>
          <target state="translated">Матч только &lt;code&gt;Question&lt;/code&gt; и &lt;code&gt;Answer&lt;/code&gt; подразделов &lt;code&gt;DESCRIPTION&lt;/code&gt; раздела:</target>
        </trans-unit>
        <trans-unit id="c0e7fa8eb9c5a3355dde0bfcb14e87f4ae52937c" translate="yes" xml:space="preserve">
          <source>Match the 'd'.</source>
          <target state="translated">Сопоставь с буквой &quot;Д&quot;.</target>
        </trans-unit>
        <trans-unit id="be1f5f366bde2e61ff344fc7793ee6e0a4508408" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;Comments&lt;/code&gt; subsection of</source>
          <target state="translated">Сопоставьте подраздел &quot; &lt;code&gt;Comments&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="e025337ed7c230f237c28a1acfe5d3575399196a" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;DESCRIPTION&lt;/code&gt; section but do</source>
          <target state="translated">Соответствуйте разделу &lt;code&gt;DESCRIPTION&lt;/code&gt; но сделайте</target>
        </trans-unit>
        <trans-unit id="809b44171d8c193bc9b4db448d041eca1d612988" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;NAME&lt;/code&gt; and &lt;code&gt;SYNOPSIS&lt;/code&gt; sections and all of their subsections:</source>
          <target state="translated">Сопоставьте разделы &lt;code&gt;NAME&lt;/code&gt; и &lt;code&gt;SYNOPSIS&lt;/code&gt; и все их подразделы:</target>
        </trans-unit>
        <trans-unit id="94b47b1709b60267b313ebe40e8ce16e55fa004d" translate="yes" xml:space="preserve">
          <source>Matched non-Unicode code point 0x%X against Unicode property; may not be portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89688e77597d0f0b5bc24a196b8aa4f24d28f78" translate="yes" xml:space="preserve">
          <source>Matches a character that has a non-canonical decomposition.</source>
          <target state="translated">Совпадает с персонажем,который имеет неканоническое разложение.</target>
        </trans-unit>
        <trans-unit id="a6f252d85159e471dcc7245d171fafb38fcd2b97" translate="yes" xml:space="preserve">
          <source>Matches a literal '.'. Equivalent to the Perl regular expression</source>
          <target state="translated">Совпадает с буквальным &quot;...&quot;.Эквивалент регулярному выражению Perl</target>
        </trans-unit>
        <trans-unit id="93575811859840b893fbf3a9e80a1bb8c50a691a" translate="yes" xml:space="preserve">
          <source>Matches any character that is graphic. Theoretically, this means a character that on a printer would cause ink to be used.</source>
          <target state="translated">Подходит для любого графического персонажа.Теоретически это означает символ,который на принтере приведет к использованию чернил.</target>
        </trans-unit>
        <trans-unit id="d54b8cec84523d2bbc940d4158b99d956e15f640" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;SSS...S&lt;/code&gt; (repeated as many times as necessary).</source>
          <target state="translated">Соответствует как &lt;code&gt;SSS...S&lt;/code&gt; (повторяется столько раз, сколько необходимо).</target>
        </trans-unit>
        <trans-unit id="c4ff6981c871c3a904b9e8169f3626531b5fd219" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt;.</source>
          <target state="translated">Соответствует как &lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5e1550fb89dce10a89ca6b24a5232964ff2f7b" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt;.</source>
          <target state="translated">Соответствует как &lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5723f68cdd1b82a0a16aaa3d449fb53afe9be816" translate="yes" xml:space="preserve">
          <source>Matches in the Block property have shortcuts that begin with &quot;In_&quot;. For example, &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; can be written as &lt;code&gt;\p{In_Latin1}&lt;/code&gt; . For backward compatibility, if there is no conflict with another shortcut, these may also be written as &lt;code&gt;\p{Latin1}&lt;/code&gt; or &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; . But, N.B., there are numerous such conflicting shortcuts. Use of these forms for Block is discouraged, and are flagged as such, not only because of the potential confusion as to what is meant, but also because a later release of Unicode may preempt the shortcut, and your program would no longer be correct. Use the &quot;In_&quot; form instead to avoid this, or even more clearly, use the compound form, e.g., &lt;code&gt;\p{blk:latin1}&lt;/code&gt; . See &lt;a href=&quot;perlunicode#Blocks&quot;&gt;Blocks in perlunicode&lt;/a&gt; for more information about this.</source>
          <target state="translated">У совпадений в свойстве Block есть ярлыки, которые начинаются с &amp;laquo;In_&amp;raquo;. Например, &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; можно записать как &lt;code&gt;\p{In_Latin1}&lt;/code&gt; . Для обратной совместимости, если нет конфликта с другим ярлыком, они также могут быть записаны как &lt;code&gt;\p{Latin1}&lt;/code&gt; или &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; . Но, заметьте, существует множество таких противоречивых путей. Использование этих форм для блокировки не рекомендуется, и они помечаются как таковые не только из-за потенциальной путаницы относительно того, что имеется в виду, но также потому, что более поздняя версия Unicode может вытеснить ярлык, и ваша программа больше не будет правильной. Вместо этого используйте форму &amp;laquo;In_&amp;raquo;, чтобы избежать этого, или, что еще более ясно, используйте составную форму, например, &lt;code&gt;\p{blk:latin1}&lt;/code&gt; . Видеть&lt;a href=&quot;perlunicode#Blocks&quot;&gt;Блоки в perlunicode&lt;/a&gt; для получения дополнительной информации об этом.</target>
        </trans-unit>
        <trans-unit id="dc2bbbf4e6e6201407867c19a270d77748d37bd5" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;&quot;S&quot;&lt;/code&gt; and only that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d7f5dbe400c6fc8812e001032594152a2faa28" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;S&lt;/code&gt; and only that.</source>
          <target state="translated">Соответствует лучшему совпадению для &lt;code&gt;S&lt;/code&gt; и только этого.</target>
        </trans-unit>
        <trans-unit id="099232daa21ff3b64c97abd1d81e14f11a613969" translate="yes" xml:space="preserve">
          <source>Matches zero or more characters, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">Совпадает с нулем или большим количеством символов,за исключением '/'.Эквивалент регулярному выражению Perl</target>
        </trans-unit>
        <trans-unit id="6a1984e70dd40a8e14356e78cd264d97a21884d9" translate="yes" xml:space="preserve">
          <source>Matches zero or one character, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">Совпадает с нулем или одним персонажем,за исключением '/'.Эквивалент регулярному выражению Perl</target>
        </trans-unit>
        <trans-unit id="5150558ec125a3f4852d898bf9fb73076c3ddf80" translate="yes" xml:space="preserve">
          <source>Matching</source>
          <target state="translated">Matching</target>
        </trans-unit>
        <trans-unit id="68a934788aa891939224fba053b378c53192480e" translate="yes" xml:space="preserve">
          <source>Matching Partial Keys</source>
          <target state="translated">Соответствующие частичные ключи</target>
        </trans-unit>
        <trans-unit id="5fa10e5481e42bdee7f9fef5a014c3afab8e48c3" translate="yes" xml:space="preserve">
          <source>Matching Scripts and Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b17040c55a83f3f4f7b152219e6e526f7ca9a2a" translate="yes" xml:space="preserve">
          <source>Matching any of several properties in regular expressions.</source>
          <target state="translated">Сопоставление любого из нескольких свойств в регулярных выражениях.</target>
        </trans-unit>
        <trans-unit id="deda9db8be66cd716c834c123a9cb9611817c650" translate="yes" xml:space="preserve">
          <source>Matching in list context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6220591a5ccdb9123634e1caf4ce8dc3384cfc2e" translate="yes" xml:space="preserve">
          <source>Matching operations can have various modifiers. Modifiers that relate to the interpretation of the regular expression inside are listed below. Modifiers that alter the way a regular expression is used by Perl are detailed in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt; and &lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;Gory details of parsing quoted constructs in perlop&lt;/a&gt;.</source>
          <target state="translated">Операции сопоставления могут иметь различные модификаторы. Модификаторы, относящиеся к интерпретации внутреннего регулярного выражения, перечислены ниже. Модификаторы, которые изменяют способ использования регулярного выражения в Perl, подробно описаны в &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;разделах Regexp Quote-Like Operators в perlop&lt;/a&gt; и &lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;подробностях анализа цитируемых конструкций в perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc4353fa78241930d31f3d814bb73f45e31af0a6" translate="yes" xml:space="preserve">
          <source>Matching repetitions</source>
          <target state="translated">Совпадающие повторы</target>
        </trans-unit>
        <trans-unit id="292a005613f8b511eb0b5b4a734aa7ff4e96c83f" translate="yes" xml:space="preserve">
          <source>Matching this or that</source>
          <target state="translated">Совпадая с тем или иным</target>
        </trans-unit>
        <trans-unit id="7bedce9e99b3de1dadd0cc8345ab455769b51642" translate="yes" xml:space="preserve">
          <source>Math Library</source>
          <target state="translated">математическая библиотека</target>
        </trans-unit>
        <trans-unit id="dbc9077ff7ea4f194a50599f69ee6ce9e49343a0" translate="yes" xml:space="preserve">
          <source>Math library</source>
          <target state="translated">математическая библиотека</target>
        </trans-unit>
        <trans-unit id="5dde5a34dad7754b1821ed0116c07f6b3c7c4405" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called</source>
          <target state="translated">Математика с номерами выполняется (по умолчанию)модулем с именем</target>
        </trans-unit>
        <trans-unit id="65a2121388185141d7f0caa9707912405aa48f4e" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; . This is equivalent to saying:</source>
          <target state="translated">Математика с числами выполняется (по умолчанию) модулем &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; . Это эквивалентно высказыванию:</target>
        </trans-unit>
        <trans-unit id="1d07c5c8a1e8adee66f831b9574d087918f9c747" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt;. This is equivalent to saying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f99b48efcd60261390302dfaa9e7f1788ebcc0" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called Math::BigInt::Calc. This is equivalent to saying:</source>
          <target state="translated">Математика с цифрами производится (по умолчанию)модулем Math::BigInt::Calc.Это эквивалентно изречению:</target>
        </trans-unit>
        <trans-unit id="a07cdeda4567e42eb8f69d272a000e41f1b29c0e" translate="yes" xml:space="preserve">
          <source>Math::BigFloat</source>
          <target state="translated">Math::BigFloat</target>
        </trans-unit>
        <trans-unit id="fe59e6f09a28dc58e14251546f9c9f1708a1bf4c" translate="yes" xml:space="preserve">
          <source>Math::BigFloat - Arbitrary size floating point math package</source>
          <target state="translated">Математика::BigFloat-математический пакет с плавающей точкой произвольного размера</target>
        </trans-unit>
        <trans-unit id="0764aaf5c109cb7a50fb7de2184cafba8feab350" translate="yes" xml:space="preserve">
          <source>Math::BigFloat provides support for arbitrary precision floating point. Overloading is also provided for Perl operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51b07374f8cf291c43bbc72e105d93bd0861cc4" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8c8a53ad2ae8063e325c75dd2f5dac801b81e3" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="translated">Math :: BigFloat поддерживает все методы, которые поддерживает Math :: BigInt, за исключением того, что по возможности вычисляет нецелочисленные результаты. Пожалуйста, смотрите &lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt; для полного описания каждого метода. Ниже приведены лишь самые важные отличия:</target>
        </trans-unit>
        <trans-unit id="b207eda77e8bcb4cfdb781c992961d80a17ed622" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780bc62d9e1c2da0b867ab07361ad578cdc89952" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="translated">Math :: BigFloat поддерживает как точность (округление до определенного места до или после точки), так и точность (округление до определенного количества цифр). Полную документацию, примеры и советы по этим темам см. В большом разделе о округлении в &lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b2789f47b2fa742bffb303cb5ea1d3e3348e9f0" translate="yes" xml:space="preserve">
          <source>Math::BigInt</source>
          <target state="translated">Math::BigInt</target>
        </trans-unit>
        <trans-unit id="5c0b5ec1b926593506155ef502257108ea19865c" translate="yes" xml:space="preserve">
          <source>Math::BigInt - Arbitrary size integer/float math package</source>
          <target state="translated">Математика::BigInt-Целый/плавающий математический пакет произвольного размера</target>
        </trans-unit>
        <trans-unit id="4abcb1313f3f34175afd42fcf44f38a824ea23a7" translate="yes" xml:space="preserve">
          <source>Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e145603092e31477779f0bafc7a4914f97dc56cf" translate="yes" xml:space="preserve">
          <source>Math::BigInt provides support for arbitrary precision integers. Overloading is also provided for Perl operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c99c78464ade46f8079c42dd339841ba07d8ba" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc</source>
          <target state="translated">Math::BigInt::Calc</target>
        </trans-unit>
        <trans-unit id="fb8a4bd98ced9e335bf9d9e0731551b00eb92084" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc - Pure Perl module to support Math::BigInt</source>
          <target state="translated">Математика::BigInt::Calc-Pure Perl модуль для поддержки Math::BigInt</target>
        </trans-unit>
        <trans-unit id="d0217de2885343284f5e67144b9c98117886dd87" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc inherits from Math::BigInt::Lib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eed48c0cfaa744405df7e64a828e97c7dc018c" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Математика::Большая::Калькулятор с некоторыми XS для большей скорости.</target>
        </trans-unit>
        <trans-unit id="37cc8c4470bd2dc063bf4602791a5a2898c073f2" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu</source>
          <target state="translated">Math::BigInt::CalcEmu</target>
        </trans-unit>
        <trans-unit id="bd9adb285778e576dd3a1c8d47e1303fcd5d2e82" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu - Emulate low-level math with BigInt code</source>
          <target state="translated">Математика::BigInt::CalcEmu-Эмуляция низкоуровневой математики с кодом BigInt</target>
        </trans-unit>
        <trans-unit id="a6065b7a8854e3e8b505e0d8a52c5366a086da7a" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc</source>
          <target state="translated">Math::BigInt::FastCalc</target>
        </trans-unit>
        <trans-unit id="07a7add3262d9f2bcc6e971e59caaf7ebde004ed" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Математика::BigInt::FastCalc-Математика::BigInt::Calc с некоторыми XS для большей скорости</target>
        </trans-unit>
        <trans-unit id="1f2ff58ab3e905796e4394ce75ed113142144b4e" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc inherits from Math::BigInt::Calc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4788ce129ade27059132f77e1626e6603cd2ee" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc works exactly like Math::BigInt::Calc. Numbers are stored in decimal form chopped into parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bb13328947ab5168b53e9d6a7a4bf1b2e650dc" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib</source>
          <target state="translated">Math::BigInt::Lib</target>
        </trans-unit>
        <trans-unit id="1048528123aeb8d39ba7c3b96a0179eac5a9dc21" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib - virtual parent class for Math::BigInt libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2aca3f9cc0a116b76f8d86d32d03b2be17c352" translate="yes" xml:space="preserve">
          <source>Math::BigRat</source>
          <target state="translated">Math::BigRat</target>
        </trans-unit>
        <trans-unit id="ac918a8052350ca0ef4432d06915fcf97fe7f4ff" translate="yes" xml:space="preserve">
          <source>Math::BigRat - Arbitrary big rational numbers</source>
          <target state="translated">Математика::BigRat-Произвольные большие рациональные числа</target>
        </trans-unit>
        <trans-unit id="5a51ed6183023c12205f7010c9031e0ea41bd8ab" translate="yes" xml:space="preserve">
          <source>Math::BigRat complements Math::BigInt and Math::BigFloat by providing support for arbitrary big rational numbers.</source>
          <target state="translated">Математика::BigRat дополняет Math::BigInt и Math::BigFloat,обеспечивая поддержку произвольных больших рациональных чисел.</target>
        </trans-unit>
        <trans-unit id="c80a28032631e0b53fe6cfb473619c4706043d3a" translate="yes" xml:space="preserve">
          <source>Math::Complex</source>
          <target state="translated">Math::Complex</target>
        </trans-unit>
        <trans-unit id="33bb8bb129e5a0d683c736bb8619d7d51a89c445" translate="yes" xml:space="preserve">
          <source>Math::Complex - complex numbers and associated mathematical functions</source>
          <target state="translated">Математика::Комплексные-комплексные числа и связанные с ними математические функции</target>
        </trans-unit>
        <trans-unit id="1e616d3d033099b786d6a5348898f4e4eaaef6c6" translate="yes" xml:space="preserve">
          <source>Math::Trig</source>
          <target state="translated">Math::Trig</target>
        </trans-unit>
        <trans-unit id="c69768dcbf705d5dd806188830336370c242165f" translate="yes" xml:space="preserve">
          <source>Math::Trig - trigonometric functions</source>
          <target state="translated">Математика::Триг-тригонометрические функции</target>
        </trans-unit>
        <trans-unit id="1c3decdb38e1f19ad133e95ff4746595003c9925" translate="yes" xml:space="preserve">
          <source>Mathemagic, Mutators, and Copy Constructors</source>
          <target state="translated">Математика,мутаторы и конструкторы копирования</target>
        </trans-unit>
        <trans-unit id="8edc9ac7baa876487a18001d1e0613039a5fb80e" translate="yes" xml:space="preserve">
          <source>Mathematical functions</source>
          <target state="translated">Математические функции</target>
        </trans-unit>
        <trans-unit id="418773dca64d526cfea9242d86f08af7459acfc2" translate="yes" xml:space="preserve">
          <source>Mathematical jargon for a list of &lt;b&gt;scalar values&lt;/b&gt;.</source>
          <target state="translated">Математический жаргон для списка &lt;b&gt;скалярных значений&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="aa8961350eea449561e0373a262893039189bac1" translate="yes" xml:space="preserve">
          <source>Mathematically, a mapping of each of a set of input values to a particular output value. In computers, refers to a &lt;b&gt;subroutine&lt;/b&gt; or &lt;b&gt;operator&lt;/b&gt; that returns a &lt;b&gt;value&lt;/b&gt;. It may or may not have input values (called &lt;b&gt;arguments&lt;/b&gt;).</source>
          <target state="translated">Математически это отображение каждого набора входных значений на конкретное выходное значение. В компьютерах это &lt;b&gt;подпрограмма&lt;/b&gt; или &lt;b&gt;оператор&lt;/b&gt; , возвращающий &lt;b&gt;значение&lt;/b&gt; . Он может иметь или не иметь входные значения (называемые &lt;b&gt;аргументами&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="58227b459a1ed9747b8ae17f0db465ba9897bda0" translate="yes" xml:space="preserve">
          <source>Matt Kraai</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9691065df69a421dca45239b2430dd14f8c4f5" translate="yes" xml:space="preserve">
          <source>Matt S Trout &amp;lt;mst@shadowcat.co.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08452ede2be309e7d15ec8e7c08c3981bd4285e0" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org</source>
          <target state="translated">Мэтт Сержант,matt@sergeant.org</target>
        </trans-unit>
        <trans-unit id="667478bd6904915672e26b2134308dabeb1c00d5" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org Jarkko Hietaniemi, jhi@iki.fi (while creating Time::Piece for core perl)</source>
          <target state="translated">Мэтт Сержант,matt@sergeant.org Jarkko Hietaniemi,jhi@iki.fi (при создании Time::Piece for core perl)</target>
        </trans-unit>
        <trans-unit id="a5b0f4aadc0e2c80f215b9e66188372b0c8b6032" translate="yes" xml:space="preserve">
          <source>Max Maischein &lt;code&gt; corion@cpan.org &lt;/code&gt;</source>
          <target state="translated">Макс Майшейн &lt;code&gt; corion@cpan.org &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfb7aa9e8b9c834788a3aa7abbda0d104b6ff028" translate="yes" xml:space="preserve">
          <source>Max. codesize limited to 32-bit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc25b9c27334b35a5cb78bdecefd32cc568034e" translate="yes" xml:space="preserve">
          <source>Maximal count of pending signals (%u) exceeded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6400e7876545feb6ada4a737cb20190ee5f945e" translate="yes" xml:space="preserve">
          <source>Maximize version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc823b3979073e6178e0296c0aebc017c151728" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">Максимальное значение &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; , кроме &lt;code&gt;NaN&lt;/code&gt; , когда одно из них равно NaN , возвращает другое [C99].</target>
        </trans-unit>
        <trans-unit id="e12ab395f246967e38c39d0164a8a0da4c633fb6" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d1027058fd884db456494cfd72c7b066e0129a" translate="yes" xml:space="preserve">
          <source>Maximum record size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271672ee5b929c229ec830e1084ec7061feed01f" translate="yes" xml:space="preserve">
          <source>Maximum requirements are inclusive. No version strictly greater than the given version is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650306b9428b07712d05d5e699489f15d25896b7" translate="yes" xml:space="preserve">
          <source>May 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8f71838e536df93422bf7418bcffe308e1974e" translate="yes" xml:space="preserve">
          <source>May 8, 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc54fe3511cd56aa93944ccd6c2072e2ca51d94" translate="yes" xml:space="preserve">
          <source>May also be called as a</source>
          <target state="translated">Может также называться</target>
        </trans-unit>
        <trans-unit id="76be650e3300b2492c54955a124602e50e04fd33" translate="yes" xml:space="preserve">
          <source>May be called as a class method</source>
          <target state="translated">Может быть вызван как метод класса</target>
        </trans-unit>
        <trans-unit id="373dacfb6afd2988bb2976a418753e29f34aa9dd" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt; .</source>
          <target state="translated">Может быть прерван, если процесс получит сигнал, такой как &lt;code&gt;SIGALRM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62f3ade73a821f1ea24a0f8d795c26cf1e6ce565" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2230ed94de04068bc4c024644ecc248cb32a6f12" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt; , &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt; . See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="translated">Может принимать значение &lt;code&gt;-protoypes&lt;/code&gt; , &lt;code&gt;-noprototypes&lt;/code&gt; или пустую строку. Пустая строка эквивалентна значению по умолчанию &lt;code&gt;-noprototypes&lt;/code&gt; или -noprototypes . Подробности см. В документации xsubpp. MakeMaker по умолчанию использует пустую строку.</target>
        </trans-unit>
        <trans-unit id="7fbcb527743fae7057a349e19014df074468e03d" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt;, &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt;. See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bbde05c6ed2bdfce6b99696af957752900542f" translate="yes" xml:space="preserve">
          <source>May be used to disable a filter, but is rarely needed. See &lt;a href=&quot;filter_del&quot;&gt;filter_del&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4efb207d6eec8eaeb59feea09701cb59c03617" translate="yes" xml:space="preserve">
          <source>May be used with -d to modify the first release criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8aed58dc1a5779f9d540d01df5f9836265ac5aa" translate="yes" xml:space="preserve">
          <source>May not be available if library or source was not provided when building perl. (Win32)</source>
          <target state="translated">Может быть недоступен,если при сборке perl не были предоставлены библиотека или источник.(Win32)</target>
        </trans-unit>
        <trans-unit id="21d4e632642238bf57dcc94af3549a614c826f30" translate="yes" xml:space="preserve">
          <source>May not behave as expected. Behavior depends on the C runtime library's implementation of &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt;, and the filesystem being used. The FAT filesystem typically does not support an &quot;access time&quot; field, and it may limit timestamps to a granularity of two seconds. (Win32)</source>
          <target state="translated">Может вести себя не так, как ожидалось. Поведение зависит от реализации &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; библиотекой времени выполнения C и используемой файловой системы. Файловая система FAT обычно не поддерживает поле &amp;laquo;время доступа&amp;raquo; и может ограничивать временные метки до двух секунд. (Win32)</target>
        </trans-unit>
        <trans-unit id="55f01979402408f498d72bc9013d9ad19e4f0e16" translate="yes" xml:space="preserve">
          <source>May take extra time to study SCALAR (&lt;code&gt;$_&lt;/code&gt; if unspecified) in anticipation of doing many pattern matches on the string before it is next modified. This may or may not save time, depending on the nature and number of patterns you are searching and the distribution of character frequencies in the string to be searched; you probably want to compare run times with and without it to see which is faster. Those loops that scan for many short constant strings (including the constant parts of more complex patterns) will benefit most.</source>
          <target state="translated">Может потребоваться дополнительное время для изучения SCALAR ( &lt;code&gt;$_&lt;/code&gt; если не указано) в ожидании выполнения множества сопоставлений с образцом в строке перед ее следующим изменением. Это может или не может сэкономить время, в зависимости от характера и количества шаблонов, которые вы ищете, и распределения частот символов в строке, которую нужно искать; вы, вероятно, захотите сравнить время работы с ним и без него, чтобы увидеть, что быстрее. Те циклы, которые сканируют множество коротких постоянных строк (включая постоянные части более сложных шаблонов), принесут наибольшую пользу.</target>
        </trans-unit>
        <trans-unit id="5740917ad4ecd92dc69b592bee2c126f65bf64cc" translate="yes" xml:space="preserve">
          <source>Maybe an autolocking mode?</source>
          <target state="translated">Может быть,режим автоблокировки?</target>
        </trans-unit>
        <trans-unit id="17baa904576f5c89cb04e825ade31958aeaa5cd3" translate="yes" xml:space="preserve">
          <source>Maybe simply that your function did not need to be exported in the first place. Perl has a long and not so glorious history of exporting functions that it should not have.</source>
          <target state="translated">Может быть,просто,что ваша функция не нуждается в экспорте в первую очередь.Perl имеет долгую и не очень славную историю экспорта функций,которой не должно было быть.</target>
        </trans-unit>
        <trans-unit id="0e936eae5362c54e4c8af6287c324b783d9e5c3e" translate="yes" xml:space="preserve">
          <source>McAfee Guardian</source>
          <target state="translated">Макафи Хранитель</target>
        </trans-unit>
        <trans-unit id="cde7070dd55ab5fad4aecced0aebd3d04e8674c3" translate="yes" xml:space="preserve">
          <source>Meaningless. (RISC OS)</source>
          <target state="translated">Бессмысленно.(RISC OS)</target>
        </trans-unit>
        <trans-unit id="64570578bb629125c651aed9b004e56379071150" translate="yes" xml:space="preserve">
          <source>Means that the optimizer information is all that the regular expression contains, and thus one does not need to enter the regex engine at all.</source>
          <target state="translated">Означает,что информация оптимизатора-это все,что содержит регулярное выражение,а значит,вообще не нужно входить в регрессионный движок.</target>
        </trans-unit>
        <trans-unit id="5c65173ed0ec89e479fa09fd6c0c7e73dddb4a5c" translate="yes" xml:space="preserve">
          <source>Means you can still run your old program because we didn&amp;rsquo;t break any of the features or bugs it was relying on.</source>
          <target state="translated">Это означает, что вы все еще можете запускать свою старую программу, потому что мы не сломали ни одну из функций или ошибок, на которые она полагалась.</target>
        </trans-unit>
        <trans-unit id="2c883ddc8815110562192710c7cee3da6f78c83a" translate="yes" xml:space="preserve">
          <source>Means you don&amp;rsquo;t have to pay money to get it, but the copyright on it may still belong to someone else (like Larry).</source>
          <target state="translated">Это означает, что вам не нужно платить деньги, чтобы получить его, но авторские права на него могут по-прежнему принадлежать кому-то другому (например, Ларри).</target>
        </trans-unit>
        <trans-unit id="bbf0f10f278f2fd9b8fbb27cda2cf259516fe6e6" translate="yes" xml:space="preserve">
          <source>Means you&amp;rsquo;re not in legal trouble if you give a bootleg copy of it to your friends and we find out about it. In fact, we&amp;rsquo;d rather you gave a copy to all your friends.</source>
          <target state="translated">Это означает, что у вас не будет проблем с законом, если вы дадите своим друзьям контрафактную копию, и мы узнаем об этом. На самом деле, мы бы предпочли, чтобы вы дали копию всем своим друзьям.</target>
        </trans-unit>
        <trans-unit id="b4f338c26fdb57033fabc6dbb73636186214a368" translate="yes" xml:space="preserve">
          <source>Meanwhile in script.pl:</source>
          <target state="translated">Тем временем в script.pl:</target>
        </trans-unit>
        <trans-unit id="e31c01e90d9e8d19ca2313d7b406547f59ae64e3" translate="yes" xml:space="preserve">
          <source>Meanwhile, back in the main thread, we first create a queue (line 33) and queue up all the numbers from 3 to 1000 for checking, plus a termination notice. Then all we have to do to get the ball rolling is pass the queue and the first prime to the &lt;code&gt;check_num()&lt;/code&gt; subroutine (line 34).</source>
          <target state="translated">Тем временем, вернувшись в основной поток, мы сначала создаем очередь (строка 33) и ставим в очередь все числа от 3 до 1000 для проверки, а также уведомление о завершении. Затем все, что нам нужно сделать, чтобы &lt;code&gt;check_num()&lt;/code&gt; с мертвой точки, - это передать очередь и первое простое число в подпрограмму check_num () (строка 34).</target>
        </trans-unit>
        <trans-unit id="8aa7bb99b5f3a119fade7cc10eb9fede5a084e8b" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in four forms:</source>
          <target state="translated">Между тем,специальные идентификаторы не следуют вышеперечисленным правилам,по большей части все идентификаторы в этой категории имеют особое значение,придаваемое Perl.Поскольку у них есть специальные правила разбора,они,как правило,не могут быть полностью квалифицированы.Они бывают в четырех формах:</target>
        </trans-unit>
        <trans-unit id="01b22c5ba29e5ca443c76b69d7a2fdd28452d640" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in six forms (but don't use forms 5 and 6):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a5148d83732e363f572eb9f62ae4a34ffe78f8" translate="yes" xml:space="preserve">
          <source>Mechanisms are available to help modules writers split their modules into autoloadable files. See the standard AutoLoader module described in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; and in &lt;a href=&quot;autosplit&quot;&gt;AutoSplit&lt;/a&gt;, the standard SelfLoader modules in &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt;, and the document on adding C functions to Perl code in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">Доступны механизмы, помогающие разработчикам модулей разбивать свои модули на файлы с автозагрузкой. См. Стандартный модуль &lt;a href=&quot;selfloader&quot;&gt;AutoLoader&lt;/a&gt; , описанный в &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; и &lt;a href=&quot;autosplit&quot;&gt;AutoSplit&lt;/a&gt; , стандартные модули SelfLoader в SelfLoader и документ о добавлении функций C в код Perl в &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8b192f4447d1edc034616ab7c4aca49390dec0c" translate="yes" xml:space="preserve">
          <source>Memoization is not a cure-all:</source>
          <target state="translated">Записки-это не панацея:</target>
        </trans-unit>
        <trans-unit id="e35c7de9275e303103a9cca4277120ada2fcee2d" translate="yes" xml:space="preserve">
          <source>Memoization is not magical.</source>
          <target state="translated">Записки не волшебные.</target>
        </trans-unit>
        <trans-unit id="6f890b039269df17d39e9aef284c419ab8ca6d7a" translate="yes" xml:space="preserve">
          <source>Memoize</source>
          <target state="translated">Memoize</target>
        </trans-unit>
        <trans-unit id="5f81d99ecb62730206abe574a7c1d1cbed900a6f" translate="yes" xml:space="preserve">
          <source>Memoize - Make functions faster by trading space for time</source>
          <target state="translated">Memoize-Сделайте функции быстрее,торгуя пространством для времени</target>
        </trans-unit>
        <trans-unit id="843238e6a586f32a34512ff5be6c4efe5893f4d3" translate="yes" xml:space="preserve">
          <source>Memoize would then call &lt;code&gt;function&lt;/code&gt; whenever a cached value was entirely absent or was older than ten seconds.</source>
          <target state="translated">Затем Memoize будет вызывать &lt;code&gt;function&lt;/code&gt; всякий раз, когда кешированное значение полностью отсутствует или старше десяти секунд.</target>
        </trans-unit>
        <trans-unit id="029c7227d55a1555d4ad9945591262ad934bfa62" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File</source>
          <target state="translated">Memoize::AnyDBM_File</target>
        </trans-unit>
        <trans-unit id="f7222db52a03e50045b47cd151cf03999d99b842" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for Storable use</source>
          <target state="translated">Запомнить::AnyDBM_File-клей для обеспечения EXISTS для AnyDBM_File при использовании в хранилище</target>
        </trans-unit>
        <trans-unit id="ab0d35e554a3be52fed5431a1db1dc0af18b1554" translate="yes" xml:space="preserve">
          <source>Memoize::Expire</source>
          <target state="translated">Memoize::Expire</target>
        </trans-unit>
        <trans-unit id="68da8c7a0efad73320d46b4b430e0877571aa887" translate="yes" xml:space="preserve">
          <source>Memoize::Expire - Plug-in module for automatic expiration of memoized values</source>
          <target state="translated">Запись::Expire-Подключаемый модуль для автоматического истечения срока действия запомненных значений</target>
        </trans-unit>
        <trans-unit id="0361cce2dcbb0a8d3953fc3f935563867ef2d797" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a layer of software that you can insert in between Memoize itself and whatever underlying package implements the cache. The layer presents a hash variable whose values expire whenever they get too old, have been used too often, or both. You tell &lt;code&gt;Memoize&lt;/code&gt; to use this forgetful hash as its cache instead of the default, which is an ordinary hash.</source>
          <target state="translated">Memoize :: Expire - это уровень программного обеспечения, который вы можете вставить между самим Memoize и любым базовым пакетом, реализующим кеш. Слой представляет собой хэш-переменную, значения которой истекают, когда они становятся слишком старыми, использовались слишком часто или и то, и другое. Вы говорите &lt;code&gt;Memoize&lt;/code&gt; использовать этот забывчивый хеш в качестве своего кеша вместо обычного хеша по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5ce5e44b5b097a389f35898a0295eae63ccf4c6e" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a plug-in module for Memoize. It allows the cached values for memoized functions to expire automatically. This manual assumes you are already familiar with the Memoize module. If not, you should study that manual carefully first, paying particular attention to the HASH feature.</source>
          <target state="translated">Memoize::Expire это подключаемый модуль для Memoize.Он позволяет кэшированным значениям для запоминаемых функций истекать автоматически.Данное руководство предполагает,что вы уже знакомы с модулем запоминания.Если нет,то сначала внимательно изучите это руководство,обратив особое внимание на функцию HASH.</target>
        </trans-unit>
        <trans-unit id="058ef175eeea79174423065d5def30710bbd9b3d" translate="yes" xml:space="preserve">
          <source>Memoize::Expire uses a real hash internally to store the cached data. You can use the &lt;code&gt;HASH&lt;/code&gt; option to Memoize::Expire to supply a tied hash in place of the ordinary hash that Memoize::Expire will normally use. You can use this feature to add Memoize::Expire as a layer in between a persistent disk hash and Memoize. If you do this, you get a persistent disk cache whose entries expire automatically. For example:</source>
          <target state="translated">Memoize :: Expire использует реальный хэш внутри для хранения кэшированных данных. Вы можете использовать параметр &lt;code&gt;HASH&lt;/code&gt; для Memoize :: Expire, чтобы предоставить связанный хеш вместо обычного хеша, который обычно использует Memoize :: Expire. Вы можете использовать эту функцию, чтобы добавить Memoize :: Expire в качестве слоя между постоянным хешем диска и Memoize. Если вы сделаете это, вы получите постоянный дисковый кеш, записи которого истекают автоматически. Например:</target>
        </trans-unit>
        <trans-unit id="d269b32ccc7d9c3a39d79c1bc38b7d11bdeedce9" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile</source>
          <target state="translated">Memoize::ExpireFile</target>
        </trans-unit>
        <trans-unit id="832a8b2c800fc41add4efb073f8dd0755c8d611b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile - test for Memoize expiration semantics</source>
          <target state="translated">Запомнить::ExpireFile-тест на запоминание семантики истечения срока действия</target>
        </trans-unit>
        <trans-unit id="cfe63b7749d0c4b0ed459ed8a03537e27ee0964b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest</source>
          <target state="translated">Memoize::ExpireTest</target>
        </trans-unit>
        <trans-unit id="39f28a417ca2b739bec2a2c936fff15da4323299" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest - test for Memoize expiration semantics</source>
          <target state="translated">Запомнить::ExpireTest-тест на запомнить семантику истечения срока действия</target>
        </trans-unit>
        <trans-unit id="76efc803a2cb3f46d2d6c0879436aa10ce1458f5" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File</source>
          <target state="translated">Memoize::NDBM_File</target>
        </trans-unit>
        <trans-unit id="746b4220ae70f33c450a28158673789c9a546fde" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for Storable use</source>
          <target state="translated">Запомнить::NDBM_Файл-клей для обеспечения EXISTS для NDBM_Файла для хранения.</target>
        </trans-unit>
        <trans-unit id="fd4bdbba9a5e54216d1795015c434a21a9711f86" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File</source>
          <target state="translated">Memoize::SDBM_File</target>
        </trans-unit>
        <trans-unit id="da914c13c14b27bc717bfbef4040f10310d95a2d" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for Storable use</source>
          <target state="translated">Запомнить::SDBM_Файл-клей для обеспечения EXISTS для SDBM_Файла для использования в хранилище</target>
        </trans-unit>
        <trans-unit id="21eebbc5fdb9d06943ca49fe99d3577c31994277" translate="yes" xml:space="preserve">
          <source>Memoize::Storable</source>
          <target state="translated">Memoize::Storable</target>
        </trans-unit>
        <trans-unit id="38149e962712243ad8d3efeb22a8323aef23996c" translate="yes" xml:space="preserve">
          <source>Memoize::Storable - store Memoized data in Storable database</source>
          <target state="translated">Записывать::Хранить-хранить Записанные данные в базе данных.</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="38b88ba291aedc801f0cf1ace141ae388b9947cc" translate="yes" xml:space="preserve">
          <source>Memory Allocation</source>
          <target state="translated">Выделение памяти</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">Управление памятью</target>
        </trans-unit>
        <trans-unit id="08cfd5338de5adae5d3a77de3eba507e6e489994" translate="yes" xml:space="preserve">
          <source>Memory Management and String Handling</source>
          <target state="translated">Управление памятью и обработка строк</target>
        </trans-unit>
        <trans-unit id="c9a7ab7f07e403c0ae91c30f84e4c67c80a6e037" translate="yes" xml:space="preserve">
          <source>Memory allocated by external libraries is not counted.</source>
          <target state="translated">Память,выделенная внешними библиотеками,не учитывается.</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">Распределение памяти</target>
        </trans-unit>
        <trans-unit id="ab42bb6faf1372452bd96901de22f5faa6ef497c" translate="yes" xml:space="preserve">
          <source>Memory consumption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ff314163f3b5b04d3fe92dafa744f973c3e836" translate="yes" xml:space="preserve">
          <source>Memory footprint debugging</source>
          <target state="translated">Отладка следов памяти</target>
        </trans-unit>
        <trans-unit id="f7c5b8ee1bf3d6c206de6c158ee1895b1a26d8cc" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt; , and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt; . SV logging is similar.</source>
          <target state="translated">&lt;code&gt;-Dm&lt;/code&gt; памяти в чем-то похожа на -Dm, но не зависит от &lt;code&gt;-DDEBUGGING&lt;/code&gt; и находится на более высоком уровне; все случаи использования Newx (), Renew () и Safefree () регистрируются с файлом исходного кода вызывающей стороны и номером строки (и именем функции C, если поддерживается компилятором C). Напротив, &lt;code&gt;-Dm&lt;/code&gt; находится непосредственно в точке &lt;code&gt;malloc()&lt;/code&gt; . Регистрация SV аналогична.</target>
        </trans-unit>
        <trans-unit id="7916d3e59a9fde6fdcb6cfdf74b28bd45e1783e8" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt;, and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt;. SV logging is similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c814c19b69f35d9db7c2c6ebf3d08f352fd38" translate="yes" xml:space="preserve">
          <source>Memory mapped IO</source>
          <target state="translated">Память отобразил IO</target>
        </trans-unit>
        <trans-unit id="6c6a6deece93cee8a3277158bc8df3a089d2c6dd" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;&quot;Safefree&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26466bc4a0a5892915da9639400d4d78c9148962" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;Safefree&lt;/a&gt;.</source>
          <target state="translated">Полученную таким образом память следует освобождать &lt;b&gt;ТОЛЬКО&lt;/b&gt; с помощью &lt;a href=&quot;#Safefree&quot;&gt;Safefree&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c13fdc13d6ff4f45a77804ad2cceb15673c95db3" translate="yes" xml:space="preserve">
          <source>Mercifully, most localization tasks are a matter of finding ways to translate whole phrases, generally sentences, where the context is relatively set, and where the only variation in content is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5792cd53fd5c07c6e156f110cc9bdc59c69569" translate="yes" xml:space="preserve">
          <source>Mercifully, this design decision becomes crucial only in the hairiest of inflected languages, of which Russian is by no means the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19110119cfc0a6eeba94dd28976c27677eeeaf2" translate="yes" xml:space="preserve">
          <source>Merge all &lt;code&gt;@fragments&lt;/code&gt; together. It will accept both CPAN::Meta objects and (possibly incomplete) hashrefs of metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b83c2b2bc6eb3815752c6b70aceb628db5830bb" translate="yes" xml:space="preserve">
          <source>Merged disk caches</source>
          <target state="translated">Объединенные дисковые кэши</target>
        </trans-unit>
        <trans-unit id="3bf6a951ac9a11e06dc7c59a3e9100f420a4948a" translate="yes" xml:space="preserve">
          <source>Merges a given typemap into the object. Note that a failed merge operation leaves the object in an inconsistent state so clone it if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139306e2016e825bc98a4c26d30108bdfa5d60f7" translate="yes" xml:space="preserve">
          <source>Merging CPAN Meta fragments</source>
          <target state="translated">Слияние фрагментов CPAN Meta</target>
        </trans-unit>
        <trans-unit id="2294ad7eb76da674941c37151d49f37527c0d994" translate="yes" xml:space="preserve">
          <source>Merging and Resolving Prerequisites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83dc47ddb09693487317e8066e16ecf7ac94e51" translate="yes" xml:space="preserve">
          <source>Message flag constants for send() and recv().</source>
          <target state="translated">Константы флагов сообщений для send()и recv().</target>
        </trans-unit>
        <trans-unit id="bc36800e17eaf7f803d98c577d91569b6c7f036b" translate="yes" xml:space="preserve">
          <source>Messing with Perl's Internals</source>
          <target state="translated">Взаимодействие с внутренними врачами Перла.</target>
        </trans-unit>
        <trans-unit id="b9828e06647e7ffc584e789aea4d7e68962a3966" translate="yes" xml:space="preserve">
          <source>Meta keys must be defined, and must be true when used as a boolean. Keys may not be references. You are free to stringify a reference &lt;code&gt;&quot;$ref&quot;&lt;/code&gt; for use as a key, but this package will not stringify it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884d7f1593f68104d33ecab4f4bbe9381f348cdd" translate="yes" xml:space="preserve">
          <source>MetaCPAN</source>
          <target state="translated">MetaCPAN</target>
        </trans-unit>
        <trans-unit id="d754d67910f4c2642d4f88945d3605a6a4025a42" translate="yes" xml:space="preserve">
          <source>Metacharacters</source>
          <target state="translated">Metacharacters</target>
        </trans-unit>
        <trans-unit id="44522bc3b457b440444e21774a3b6c8607931812" translate="yes" xml:space="preserve">
          <source>Metaphoric Quotations</source>
          <target state="translated">Метафорические котировки</target>
        </trans-unit>
        <trans-unit id="798b3e1c6f8b0a74eece2abb46cfe2fd57a06fe6" translate="yes" xml:space="preserve">
          <source>Method %s not permitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c86ca70f3e85fdec1d74a21fb3963c31fdcdd7f" translate="yes" xml:space="preserve">
          <source>Method Call Variations</source>
          <target state="translated">Вариации вызова метода</target>
        </trans-unit>
        <trans-unit id="d8949e17ae84d7a06765768cb82b20ae6019661d" translate="yes" xml:space="preserve">
          <source>Method Calls on Filehandles</source>
          <target state="translated">Метод Звонки в картотеку</target>
        </trans-unit>
        <trans-unit id="6fd706a5558ebea104b27041341cb1ea5fac0c06" translate="yes" xml:space="preserve">
          <source>Method Invocation</source>
          <target state="translated">Призыв к применению метода</target>
        </trans-unit>
        <trans-unit id="4f453985833ca25c15ccb8b4ce0b4ada21b9adb4" translate="yes" xml:space="preserve">
          <source>Method Names as Strings</source>
          <target state="translated">Наименования методов в виде строк</target>
        </trans-unit>
        <trans-unit id="169d21aab45387c970c5fa19ac363def6ba831e8" translate="yes" xml:space="preserve">
          <source>Method Names with a Fully Qualified Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149bc56a4796369142e80bb8e93236ae91c74251" translate="yes" xml:space="preserve">
          <source>Method Resolution Caching</source>
          <target state="translated">Разрешение метода Кэширование</target>
        </trans-unit>
        <trans-unit id="0c84198ff44a95ef84e9c8366e0d425cc63a174e" translate="yes" xml:space="preserve">
          <source>Method Resolution Order</source>
          <target state="translated">Порядок разрешения методов</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">Звонки методов</target>
        </trans-unit>
        <trans-unit id="bcdf1b1bb254fccb870b04cffc381c4e506b716b" translate="yes" xml:space="preserve">
          <source>Method calls are not influenced by prototypes either, because the function to be called is indeterminate at compile time, since the exact code called depends on inheritance.</source>
          <target state="translated">Вызовы методов также не подвержены влиянию прототипов,так как вызываемая функция при компиляции неопределенна,так как точный вызываемый код зависит от наследования.</target>
        </trans-unit>
        <trans-unit id="5c72d128e104c59ad0c3c2a4128e634028dba480" translate="yes" xml:space="preserve">
          <source>Method for operation %s not found in package %s during blessing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1f923c258569220ac20750fe41c9eb6cce3bef" translate="yes" xml:space="preserve">
          <source>Method names in the &lt;code&gt;use overload&lt;/code&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf68fe4a9ba9d42e80a08fe93064afd994243cb" translate="yes" xml:space="preserve">
          <source>Method resolution order only matters in the case of multiple inheritance. In the case of single inheritance, Perl simply looks up the inheritance chain to find a method:</source>
          <target state="translated">Порядок разрешения методов имеет значение только в случае множественного наследования.В случае одиночного наследования Perl просто просматривает цепочку наследования,чтобы найти метод:</target>
        </trans-unit>
        <trans-unit id="d67544f861de65aff5df7b6f9ed170e715ea2ab1" translate="yes" xml:space="preserve">
          <source>Method such as &lt;code&gt;ok&lt;/code&gt;, and &lt;code&gt;note&lt;/code&gt; are shortcuts for generating common 1-task events based on the old API, however they are forward compatible, and easy to use. If these meet your needs then go ahead and use them, but please check back often for alternatives that may be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cec11dfde693ed2754d2e489ae4f0bbc9cc853" translate="yes" xml:space="preserve">
          <source>Method that protects Makefile single-value constants (mainly filenames), so that make will still treat them as single values even if they inconveniently have spaces in. If the make program being used cannot achieve such protection and the given text would need it, throws an exception.</source>
          <target state="translated">Метод,защищающий однозначные константы Makefile (в основном имена файлов),так что make все равно будет относиться к ним как к однозначным значениям,даже если в них неудобно есть пробелы.Если используемая программа make не может достичь такой защиты,а данный текст будет нуждаться в ней,выбрасывает исключение.</target>
        </trans-unit>
        <trans-unit id="b801c10b1ac5aa2b998ab1658d5c860e220086a7" translate="yes" xml:space="preserve">
          <source>Method to customize MakeMaker for Win9X</source>
          <target state="translated">Метод настройки MakeMaker для Win9X</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="c9952f904ebdacb612e4e6f4d7de0226ec975738" translate="yes" xml:space="preserve">
          <source>Methods I can't really figure out where they should go yet.</source>
          <target state="translated">Методы,которые я пока не могу понять,куда они должны пойти.</target>
        </trans-unit>
        <trans-unit id="40af0f1172251b1f0d2a538bd0e00ae001b2fcaf" translate="yes" xml:space="preserve">
          <source>Methods always loaded</source>
          <target state="translated">Методы всегда загружены</target>
        </trans-unit>
        <trans-unit id="a68695b030e2ecbb7c261ec2a9c505d5cb18c649" translate="yes" xml:space="preserve">
          <source>Methods are overridden here: not dynamic_lib itself, but the utility ones that do the OS-specific work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc9c9bf62381c038cf262a1503103fafba0ddfa" translate="yes" xml:space="preserve">
          <source>Methods disallowed by the blacklist cannot be permitted by the whitelist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3492e94289b56d2304db645e851cbd229618f6f3" translate="yes" xml:space="preserve">
          <source>Methods for Collation</source>
          <target state="translated">Методы сопоставления</target>
        </trans-unit>
        <trans-unit id="dffdf0d2cd8722a265661b1c3c208de439bb95a7" translate="yes" xml:space="preserve">
          <source>Methods for Cygwin file specs</source>
          <target state="translated">Методы определения спецификаций файла Cygwin</target>
        </trans-unit>
        <trans-unit id="82ca12b02f71920ae1348327f9c5bc0dd81da215" translate="yes" xml:space="preserve">
          <source>Methods for Epoc file specs</source>
          <target state="translated">Методы определения спецификаций файлов Epoc</target>
        </trans-unit>
        <trans-unit id="68812b66a62e2047690bf9da1c3c46de5cc3d232" translate="yes" xml:space="preserve">
          <source>Methods for OS/2 file specs</source>
          <target state="translated">Методы определения спецификаций файлов OS/2</target>
        </trans-unit>
        <trans-unit id="4d421ef7bd512b00bbdb44912712ec892bca2014" translate="yes" xml:space="preserve">
          <source>Methods for Searching</source>
          <target state="translated">Методы поиска</target>
        </trans-unit>
        <trans-unit id="27e99810c06b72d2d33936fc288406b84f55b203" translate="yes" xml:space="preserve">
          <source>Methods for VMS file specs</source>
          <target state="translated">Методы определения спецификаций файлов VMS</target>
        </trans-unit>
        <trans-unit id="b9b3a715e48f22629289b2063628d2443ae0ab52" translate="yes" xml:space="preserve">
          <source>Methods for Win32 file specs</source>
          <target state="translated">Методы для спецификаций Win32 файла</target>
        </trans-unit>
        <trans-unit id="5d7bf3463f69bf3ade9275de1811133bd2e8b4a6" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications.</source>
          <target state="translated">Методы манипулирования спецификациями файлов.</target>
        </trans-unit>
        <trans-unit id="ebbba6a759fd4eaa9d94e1633b1a4e4abe7f7a45" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications. Other File::Spec modules, such as File::Spec::Mac, inherit from File::Spec::Unix and override specific methods.</source>
          <target state="translated">Методы манипулирования спецификациями файлов.Другие модули File::Spec,такие как File::Spec::Mac,наследуют от File::Spec::Unix и переопределяют специфические методы.</target>
        </trans-unit>
        <trans-unit id="7481ef085e93898eccd2d4291e104c0ca1eaac16" translate="yes" xml:space="preserve">
          <source>Methods for the adventurous</source>
          <target state="translated">Методы для искателей приключений</target>
        </trans-unit>
        <trans-unit id="8b4c41334b1f0849f43409490279c73ebfa5df79" translate="yes" xml:space="preserve">
          <source>Methods in Detail</source>
          <target state="translated">Методы в деталях</target>
        </trans-unit>
        <trans-unit id="e068233ba30d5c340de8033909e63f34a39f8d3e" translate="yes" xml:space="preserve">
          <source>Methods in the other Classes</source>
          <target state="translated">Методы в других классах</target>
        </trans-unit>
        <trans-unit id="6e829311e4b065fb2f2e0f38edceb6d95375c55c" translate="yes" xml:space="preserve">
          <source>Methods that you may find it handy to use, from routines of yours that you put in %Lexicon entries.</source>
          <target state="translated">Методы,которые вы можете найти удобными для использования,из ваших процедур,которые вы вставляете в %Lexicon записей.</target>
        </trans-unit>
        <trans-unit id="52c4361c86c7fd471a806b4c8215e5369dfc731b" translate="yes" xml:space="preserve">
          <source>Methods to do with constructing language handles.</source>
          <target state="translated">Методы построения языковых дескрипторов.</target>
        </trans-unit>
        <trans-unit id="b6f9f2fbd170ec9c9489d0e901a7e3b7214949c3" translate="yes" xml:space="preserve">
          <source>Methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">Методы переопределения поведения UN*X в ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="ab3b6636bc321fcd9f46d8689a767ed7e52e65e7" translate="yes" xml:space="preserve">
          <source>Methods used by ExtUtils::MakeMaker</source>
          <target state="translated">Методы,используемые ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="7f996e6a1460bfdcd35f19090247cb216f784336" translate="yes" xml:space="preserve">
          <source>Methods which help initialize the MakeMaker object and macros.</source>
          <target state="translated">Методы,которые помогают инициализировать объект MakeMaker и макросы.</target>
        </trans-unit>
        <trans-unit id="3e6fda3ab5c8fa6834ff71aef9c511f877f6c23d" translate="yes" xml:space="preserve">
          <source>Methods you should implement</source>
          <target state="translated">Методы,которые Вы должны внедрить</target>
        </trans-unit>
        <trans-unit id="41937b20fbe8c71d9c6c3346aff43c001aa25e33" translate="yes" xml:space="preserve">
          <source>Mexico</source>
          <target state="translated">Mexico</target>
        </trans-unit>
        <trans-unit id="bd97b56132ac0bfc7557be46520b5fd83aff153a" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the denizens of makemaker@perl.org with code from ExtUtils::MM_Unix and ExtUtils::MM_Win32.</source>
          <target state="translated">Майкл Дж. Шверн &amp;lt;schwern@pobox.com&amp;gt; и обитатели makemaker@perl.org с кодом из ExtUtils :: MM_Unix и ExtUtils :: MM_Win32.</target>
        </trans-unit>
        <trans-unit id="52068be64791a464b661dac455db8140aea835a5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the perl-qa dancers!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88af124e71f22819d4d398414f274e80611dc1ac" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; on top of code by Nick Ing-Simmons and Jeffrey Friedl.</source>
          <target state="translated">Майкл Дж. Шверн &amp;lt;schwern@pobox.com&amp;gt; поверх кода Ника Инг-Симмонса и Джеффри Фридла.</target>
        </trans-unit>
        <trans-unit id="609a8e114c05509c720089b4066abb697390e6b3" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with code from ExtUtils::MM_Unix</source>
          <target state="translated">Майкл Г. Шверн &amp;lt;schwern@pobox.com&amp;gt; с кодом из ExtUtils :: MM_Unix</target>
        </trans-unit>
        <trans-unit id="976aacead2152d3736e5ca6c6514a1e5684482c5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with much inspiration from Joshua Pritikin's Test module and lots of help from Barrie Slaymaker, Tony Bowden, blackstar.co.uk, chromatic, Fergal Daly and the perl-qa gang.</source>
          <target state="translated">Майкл Дж. Шверн &amp;lt;schwern@pobox.com&amp;gt; с большим вдохновением от тестового модуля Джошуа Притикина и большой помощью со стороны Барри Слеймейкера, Тони Боудена, blackstar.co.uk, chromatic, Фергала Дейли и банды perl-qa.</target>
        </trans-unit>
        <trans-unit id="f21627f7b936980d951472d8f3b9d11843e6ffcc" translate="yes" xml:space="preserve">
          <source>Michael G. Schwern &amp;lt;mschwern@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e8898e084b205078364468d25648e9b0ec170d" translate="yes" xml:space="preserve">
          <source>Michael Peters &amp;lt;mpeters at plusthree dot com&amp;gt;</source>
          <target state="translated">Майкл Питерс &amp;lt;mpeters at plusthree dot com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dd33a21f26a7d4f2cb826da8d8de1e33bcd542ba" translate="yes" xml:space="preserve">
          <source>Michael Schwern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5110b352c6bc056ec40bf3aebc4144eb1ae0e1d8" translate="yes" xml:space="preserve">
          <source>Michigan</source>
          <target state="translated">Michigan</target>
        </trans-unit>
        <trans-unit id="a8c99518c0df8eeda3f71152b09117cad644595c" translate="yes" xml:space="preserve">
          <source>MicroEMACS</source>
          <target state="translated">MicroEMACS</target>
        </trans-unit>
        <trans-unit id="359924accaba027302f36e848227bed8498f3885" translate="yes" xml:space="preserve">
          <source>Microsoft Platform SDK 64-bit Compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e1b99fc64b8852de8ab31bb7d1b51525551308" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a674447acfb53f080e5c7a940380d878d668e4" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2005 Express Edition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0803900f0583cc04c7c50cafeaa151ade70dcde" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2008-2019 Express/Community Edition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d286550ff77bf9e5cdb6de350a40b896ae0aa2a8" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ Toolkit 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9476515c776c7ffa5f23daf6605041d17cb39e43" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;Big5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bc8ec91b9bc1d48aec480ad01ccf1d9a2cc4f5" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-CN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a667be64853bfcf4ee2942093cec7a4847183a" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-KR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d72bfd184d60d481c76b37ef21c0a642dd30ee" translate="yes" xml:space="preserve">
          <source>Microsoft products misuse the following names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624c2711360f576ebf12a94ce042cede4b18471f" translate="yes" xml:space="preserve">
          <source>Microsoft's understanding of &lt;code&gt;Shift_JIS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46246987fa909ac6d3b3544d378e153a25558858" translate="yes" xml:space="preserve">
          <source>Microsoft-related naming mess</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb062409e93c0885568573482cc58a0d290f0ac" translate="yes" xml:space="preserve">
          <source>Midnight BSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f6e604b99e20fee4d55d99822d486186bfc9da" translate="yes" xml:space="preserve">
          <source>Might be a runaway multi-line %s string starting on line %d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d917d6d7fad51d62d22d6b5c32840fa7d5b5e8e" translate="yes" xml:space="preserve">
          <source>Migration from &lt;code&gt;DynaLoader&lt;/code&gt;</source>
          <target state="translated">Миграция с &lt;code&gt;DynaLoader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ceffec12b40d21f869eb5b84598130f16f111e6" translate="yes" xml:space="preserve">
          <source>Migration from DynaLoader</source>
          <target state="translated">Миграция из DynaLoader</target>
        </trans-unit>
        <trans-unit id="12654a571e20ea45eaec45ab50ad734768e09847" translate="yes" xml:space="preserve">
          <source>Mike Cariaso provided valuable insight into the best way to solve this problem.</source>
          <target state="translated">Майк Кариазо дал ценное представление о том,как лучше всего решить эту проблему.</target>
        </trans-unit>
        <trans-unit id="234bc19cd7be72665729799de11490c9dd83bf27" translate="yes" xml:space="preserve">
          <source>Mike Doherty &amp;lt;doherty@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039e707fb015ae5335982d49bab4f238cf134377" translate="yes" xml:space="preserve">
          <source>Mind that argv[argc] must be NULL, same as those passed to a main function in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326f115f454ad964c4545e76abb586c5dfa4774e" translate="yes" xml:space="preserve">
          <source>Mind, that any element of the array contains a complete set of arguments for the ld command. So do not specify</source>
          <target state="translated">Имейте в виду,что любой элемент массива содержит полный набор аргументов для команды ld.Поэтому не указывайте</target>
        </trans-unit>
        <trans-unit id="e509f9fc49b801b1d3cb79b36c8621b4642edef8" translate="yes" xml:space="preserve">
          <source>Minimal Set of Overloaded Operations</source>
          <target state="translated">Минимальный набор перегруженных операций</target>
        </trans-unit>
        <trans-unit id="447f6cc3c1201528e85c548d7378d0bbb259ea5f" translate="yes" xml:space="preserve">
          <source>Minimal code</source>
          <target state="translated">Минимальный код</target>
        </trans-unit>
        <trans-unit id="b9bbc06fd8287f4f714cc43f7b852676d2d7a603" translate="yes" xml:space="preserve">
          <source>Minimal patches that fix platform-specific test failures.</source>
          <target state="translated">Минимальные исправления,которые исправляют сбои при тестировании на платформе.</target>
        </trans-unit>
        <trans-unit id="9add73fb8f3d0c44a5715a5d41747422c62c935b" translate="yes" xml:space="preserve">
          <source>Minimal set of supported functions</source>
          <target state="translated">Минимальный набор поддерживаемых функций</target>
        </trans-unit>
        <trans-unit id="390af1977edf4e133548c8556281c14e4c310537" translate="yes" xml:space="preserve">
          <source>Minimal setup (looks for</source>
          <target state="translated">Минимальная настройка (ищет</target>
        </trans-unit>
        <trans-unit id="906ea91bd1c9c6378b061a822858462af43e979d" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt; ) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="translated">Минимальная длина строки (измеряется в байтах от &lt;code&gt;stringarg&lt;/code&gt; ), которая должна соответствовать; если движок достигает конца совпадения, но не достигает этой позиции в строке, он должен выйти из строя.</target>
        </trans-unit>
        <trans-unit id="be12c32ff84593686015cc2e0cb0d89d77831ed3" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt;) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5343fd4802dbdf5cd1789ee30e8d69ca6cabadc2" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">Минимум &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; , кроме &lt;code&gt;NaN&lt;/code&gt; , когда одно из них равно NaN , возвращает другое [C99].</target>
        </trans-unit>
        <trans-unit id="e0302c55180fe62d506dfe28ff33373c2560204c" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d3a57a3bd71eb3c56ac46e121c1eb2dc0a4ca8" translate="yes" xml:space="preserve">
          <source>Minimum requirements are inclusive. &lt;code&gt;$version&lt;/code&gt; is required, along with any greater version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a013cdfce3e9c596d4b9cb32825ab89339bddcd" translate="yes" xml:space="preserve">
          <source>Miniperl.Exe</source>
          <target state="translated">Miniperl.Exe</target>
        </trans-unit>
        <trans-unit id="5783432e3d972b6894919df1e5c308c82f9c7634" translate="yes" xml:space="preserve">
          <source>MirOS BSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="319c19b9e813f94557eb26c26b7b4388bfdc0145" translate="yes" xml:space="preserve">
          <source>Miscellaneous Functions</source>
          <target state="translated">Различные функции</target>
        </trans-unit>
        <trans-unit id="e9886ca0fdacee4b74dfbeeffc975d27efbdeb6b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Modules</source>
          <target state="translated">Различные модули</target>
        </trans-unit>
        <trans-unit id="99463edffe28d703da1b6e42d1ae7b9d31c1b070" translate="yes" xml:space="preserve">
          <source>Miscellaneous Things</source>
          <target state="translated">разные вещи</target>
        </trans-unit>
        <trans-unit id="7b60f144da88cbf71ee28b893333af2adba91042" translate="yes" xml:space="preserve">
          <source>Miscellaneous Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7549a52ededf0abbc51eaa6563f958964d60ea6e" translate="yes" xml:space="preserve">
          <source>Miscellaneous Utility Functions</source>
          <target state="translated">Различные функции полезности</target>
        </trans-unit>
        <trans-unit id="b1c2f1326539aaa7427ad9b1469de4ff74f87ee5" translate="yes" xml:space="preserve">
          <source>Miscellaneous commentary.</source>
          <target state="translated">Разные комментарии.</target>
        </trans-unit>
        <trans-unit id="342a5f135351fd510e40f97d2fab9f29fe7f026d" translate="yes" xml:space="preserve">
          <source>Miscellaneous constants. Used for the &lt;code&gt;$uCreate&lt;/code&gt; argument of &lt;code&gt;CreateFile&lt;/code&gt; or the &lt;code&gt;$uFromWhere&lt;/code&gt; argument of &lt;code&gt;SetFilePointer&lt;/code&gt;. Plus &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt;, which you usually won't need to check for since most routines translate it into a false value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37adce83d6fa2179beba32ceeacd3778204fcfb" translate="yes" xml:space="preserve">
          <source>Miscellaneous encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314bb4fc83d55b365225efaa4fc333e95057e960" translate="yes" xml:space="preserve">
          <source>Miscellaneous functions</source>
          <target state="translated">Различные функции</target>
        </trans-unit>
        <trans-unit id="9da774369baa717644789be36b08da5ef92ca224" translate="yes" xml:space="preserve">
          <source>Misfeatures</source>
          <target state="translated">Misfeatures</target>
        </trans-unit>
        <trans-unit id="ce60b331195543a6746d022bb20ad15f338c66de" translate="yes" xml:space="preserve">
          <source>Misplaced _ in number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95de1c6435f8743842f21d48536596257568105" translate="yes" xml:space="preserve">
          <source>Misplaced plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5c9d737a51552824a8f054a3830ede7eb73132" translate="yes" xml:space="preserve">
          <source>Missing $ on loop variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f4c05777767269c3fe2fd5ee568ca57fbd5be9" translate="yes" xml:space="preserve">
          <source>Missing ']' in prototype for %s : %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492deed501b2e8f77f0d5bf65e92ebc107c3988d" translate="yes" xml:space="preserve">
          <source>Missing argument for %n in %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d29fb503cf20ccfb86deead9f1e147184da6314" translate="yes" xml:space="preserve">
          <source>Missing argument in %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905237197bd9811f9b09e25f0763d52acfbe8f9d" translate="yes" xml:space="preserve">
          <source>Missing argument to -%c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ff0f07a4c291aedab0828071c7e5be901eca1d" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ab85b2077b61fe9a0b2696a10440f202845e30" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b7f0d0959c77816c06bcafc45fa06ad6622507" translate="yes" xml:space="preserve">
          <source>Missing braces on \o{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77272a604bbc7df55b2cbf61f879522fe8ed6ffd" translate="yes" xml:space="preserve">
          <source>Missing comma after first argument to %s function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5527cff2b5c9e125b749b05c07f90a92a547a921" translate="yes" xml:space="preserve">
          <source>Missing command in piped open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb97fb839a7785ff8deb8f6a3434e5842793e89" translate="yes" xml:space="preserve">
          <source>Missing control char name in \c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d01981943106f56a9819e6a7268d9a6454e8a9" translate="yes" xml:space="preserve">
          <source>Missing name in &quot;%s sub&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72d7995bf8862606c4717d1a2053eff2624ec07" translate="yes" xml:space="preserve">
          <source>Missing or undefined argument to %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c054b8f3d0a5a4b72b812cbfe4bb1cd415154f" translate="yes" xml:space="preserve">
          <source>Missing right brace on \%c{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b28d6622907b838faba9a35172b03ffbf93af4a" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8c9cf38694cb1369209c024da00e671eb2a06" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{} or unescaped left brace after \N</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256a6056983709743749fcd95a4f7e468cbb0a7f" translate="yes" xml:space="preserve">
          <source>Missing right curly or square bracket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6560a728cc75a6b103e706dc673d7ef4bcf29de" translate="yes" xml:space="preserve">
          <source>Mixing #define and #ifdef</source>
          <target state="translated">Смешивание #define и #ifdef</target>
        </trans-unit>
        <trans-unit id="29c40186eed76e6033a40498c6fe7f4e2e466bc7" translate="yes" xml:space="preserve">
          <source>Mixing UTF-8 and non-UTF-8 strings is tricky. Use &lt;code&gt;bytes_to_utf8&lt;/code&gt; to get a new string which is UTF-8 encoded, and then combine them.</source>
          <target state="translated">Смешивать строки UTF-8 и не-UTF-8 сложно. Используйте &lt;code&gt;bytes_to_utf8&lt;/code&gt; , чтобы получить новую строку в кодировке UTF-8, а затем объедините их.</target>
        </trans-unit>
        <trans-unit id="66bca4e0f37fde6f6d5033a86915673ed0b48f44" translate="yes" xml:space="preserve">
          <source>Mixing command line option with other arguments</source>
          <target state="translated">Смешивание опции командной строки с другими аргументами</target>
        </trans-unit>
        <trans-unit id="c85d9a78c1b4d78ca553de634935cfea419df54e" translate="yes" xml:space="preserve">
          <source>Mixing declarations and code</source>
          <target state="translated">Смешивание деклараций и кода</target>
        </trans-unit>
        <trans-unit id="191dad4eb9e454325153296d486b75e87731816d" translate="yes" xml:space="preserve">
          <source>Mixing different object types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1e7f7efdba287b74e8142b1268ce27b211ade2" translate="yes" xml:space="preserve">
          <source>Mixing it up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9355f7a3087594f002f5e9c67bfdb7357b2d09c8" translate="yes" xml:space="preserve">
          <source>Mixing signed char pointers with unsigned char pointers</source>
          <target state="translated">Смешивание подписанных угловых указателей с неподписанными угловыми указателями</target>
        </trans-unit>
        <trans-unit id="c8ded3624005b356d9a738f8bbff4c65caab09bc" translate="yes" xml:space="preserve">
          <source>MkTemp family:</source>
          <target state="translated">Семья MkTemp:</target>
        </trans-unit>
        <trans-unit id="89e86a83d22490472fadfccc84db9971217f00e2" translate="yes" xml:space="preserve">
          <source>Mkbootstrap typically gets called from an extension Makefile.</source>
          <target state="translated">Mkbootstrap обычно вызывается из расширения Makefile.</target>
        </trans-unit>
        <trans-unit id="bf642b0445fa1b197a3f404144c575c97857e845" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt; : A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="translated">Мнемоника для &lt;code&gt;(?^...)&lt;/code&gt; : Новое начало, поскольку обычное использование символа вставки - сопоставление с началом.</target>
        </trans-unit>
        <trans-unit id="7fb71ad054736a057594bb08cc0713a551c20ae5" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt;: A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58694480088720e80e9150ab4b17e65401d3e57" translate="yes" xml:space="preserve">
          <source>Mnemonic:</source>
          <target state="translated">Mnemonic:</target>
        </trans-unit>
        <trans-unit id="a4609f4e9d1567a8be9be3013a68cb5f9077d509" translate="yes" xml:space="preserve">
          <source>Mnemonic: / delimits line boundaries when quoting poetry.</source>
          <target state="translated">Мнемонический:/разделяет границы строк при цитировании поэзии.</target>
        </trans-unit>
        <trans-unit id="a17c263d1e94a797a2f907b413a2e6937babe3bd" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;%&lt;/code&gt; is page number in &lt;b&gt;nroff&lt;/b&gt;.</source>
          <target state="translated">Мнемоника: &lt;code&gt;%&lt;/code&gt; - номер страницы в &lt;b&gt;nroff&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8f7e9ef271156c4cf38cda15862d7d90c4cb37" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;'&lt;/code&gt; often follows a quoted string.</source>
          <target state="translated">Мнемоника: &lt;code&gt;'&lt;/code&gt; часто следует за строкой в ​​кавычках.</target>
        </trans-unit>
        <trans-unit id="03462936fc4d222008baee163c91bca679bcf610" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;`&lt;/code&gt; often precedes a quoted string.</source>
          <target state="translated">Мнемоника: &lt;code&gt;`&lt;/code&gt; часто предшествует строке в кавычках.</target>
        </trans-unit>
        <trans-unit id="6d89fd4acfd6e65581a03c1bccc5077a0683b53d" translate="yes" xml:space="preserve">
          <source>Mnemonic: = has horizontal lines.</source>
          <target state="translated">Мнемонический:=имеет горизонтальные линии.</target>
        </trans-unit>
        <trans-unit id="a4fee04f913df1ce7e585c0d4cb5cf688bad64b1" translate="yes" xml:space="preserve">
          <source>Mnemonic: Complement of</source>
          <target state="translated">Мнемонический:Дополнение</target>
        </trans-unit>
        <trans-unit id="00d81532eead6e059ec9226bf31a1d7bc4d3c648" translate="yes" xml:space="preserve">
          <source>Mnemonic: Extra error explanation.</source>
          <target state="translated">Мнемонический:Дополнительное объяснение ошибок.</target>
        </trans-unit>
        <trans-unit id="f3adb972eb89279dcbf38ffdb2b34cb01ac80557" translate="yes" xml:space="preserve">
          <source>Mnemonic: Is this version of perl in the right bracket?</source>
          <target state="translated">Мнемонический:Эта версия перла в правом кронштейне?</target>
        </trans-unit>
        <trans-unit id="c83fc5eabe67c53a88a66531db063afe5a8798fe" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) space</source>
          <target state="translated">Мнемонический:Перловское (оригинальное)пространство</target>
        </trans-unit>
        <trans-unit id="de5973eb3bd2f2951a919587c5a581d934fb917e" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) word.</source>
          <target state="translated">Мнемонический:(оригинальное)слово Перла.</target>
        </trans-unit>
        <trans-unit id="e3688e90b8ece4a626d04ff3f6b6b3e5cd816fdf" translate="yes" xml:space="preserve">
          <source>Mnemonic: Space, as modified by Perl. (It doesn't include the vertical tab until v5.18, which both the Posix standard and Unicode consider white space.)</source>
          <target state="translated">Мнемонический:Пространство,модифицированное Перлом.(Она не включает в себя вертикальную закладку до версии 5.18,которую и стандарт Posix,и Юникод считают пробелом).</target>
        </trans-unit>
        <trans-unit id="e034d1e8207da0718183c9081637de75a93ba2ae" translate="yes" xml:space="preserve">
          <source>Mnemonic: What just went bang?</source>
          <target state="translated">Мнемонический:Что только что стукнуло?</target>
        </trans-unit>
        <trans-unit id="1f52600a3a5911b067b3374a8879381b17ea1317" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the error &quot;at&quot;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d59c20bf5fe5e92f4fce8a028d68d9472173f0" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the syntax error &quot;at&quot;?</source>
          <target state="translated">Мнемонический:Где была синтаксическая ошибка &quot;at&quot;?</target>
        </trans-unit>
        <trans-unit id="13036ce2395db627a394493e09b57d820655a6e3" translate="yes" xml:space="preserve">
          <source>Mnemonic: [ begins subscripts.</source>
          <target state="translated">Начинается подписка.</target>
        </trans-unit>
        <trans-unit id="6478e17d9b14a75686fa2aeaa0fda7fc477e3a6c" translate="yes" xml:space="preserve">
          <source>Mnemonic: a &quot;colon&quot; in poetry is a part of a line.</source>
          <target state="translated">Мнемонический:&quot;двоеточие&quot; в поэзии-это часть строки.</target>
        </trans-unit>
        <trans-unit id="06be15525bc8ff40fc0fd75c1aede3dd3e6eca7f" translate="yes" xml:space="preserve">
          <source>Mnemonic: be positive and forward looking.</source>
          <target state="translated">Мнемонический:быть позитивным и смотреть вперед.</target>
        </trans-unit>
        <trans-unit id="45c1dcc3d237500077fd6705954bc10a0da68241" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt; .</source>
          <target state="translated">Мнемоника: брат &lt;code&gt;$^&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8016703b31a155c2a574fa23c4f3718d5f24c64b" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfbe3b8dd831a42303599b72a7a29a0dbbce16e" translate="yes" xml:space="preserve">
          <source>Mnemonic: comma (the syntactic subscript separator) is a semi-semicolon.</source>
          <target state="translated">Мнемоническая:запятая (синтаксический разделитель подстрочных индексов)-это полумесяц.</target>
        </trans-unit>
        <trans-unit id="a5e54620ad7fc3dd7f83e5824baaa97ef210abf7" translate="yes" xml:space="preserve">
          <source>Mnemonic: e</source>
          <target state="translated">Мнемонический:д</target>
        </trans-unit>
        <trans-unit id="fb1dad35694a1d1c6e8b249b4963e948af75d628" translate="yes" xml:space="preserve">
          <source>Mnemonic: he</source>
          <target state="translated">Мнемонический:он</target>
        </trans-unit>
        <trans-unit id="4f25fdfd275a765786269fb643e1c55e1a9c1820" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you came</source>
          <target state="translated">Мнемоник:это уид,который ты пришел.</target>
        </trans-unit>
        <trans-unit id="f53200593eb86ae8dd4c325941dd8eb32bcbba07" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you went</source>
          <target state="translated">Мнемоник:ты ходил на уид.</target>
        </trans-unit>
        <trans-unit id="c2560fee0f5b656addb6e58657f827dd080975cc" translate="yes" xml:space="preserve">
          <source>Mnemonic: like &lt;code&gt;&amp;amp;&lt;/code&gt; in some editors.</source>
          <target state="translated">Мнемоника: как &lt;code&gt;&amp;amp;&lt;/code&gt; в некоторых редакторах.</target>
        </trans-unit>
        <trans-unit id="0bf53d6e2ef8b1852f6e6460d639d8a6d511e87d" translate="yes" xml:space="preserve">
          <source>Mnemonic: like \digits.</source>
          <target state="translated">Мнемонический:как \digits.</target>
        </trans-unit>
        <trans-unit id="29345f5f1506a434b700483b03581bba2252ef83" translate="yes" xml:space="preserve">
          <source>Mnemonic: lines_on_page - lines_printed.</source>
          <target state="translated">Мнемонический:lines_on_page-lines_printed.</target>
        </trans-unit>
        <trans-unit id="a3b3edfce1b2a7630b3d4258477c440ecb3338e9" translate="yes" xml:space="preserve">
          <source>Mnemonic: many programs use &quot;.&quot; to mean the current line number.</source>
          <target state="translated">Мнемонический:многие программы используют &quot;...&quot; для обозначения номера текущей строки.</target>
        </trans-unit>
        <trans-unit id="de8f32b4ce704e3d490515551c6116db336ffdaf" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt; , and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="translated">Мнемоника: на самом деле нет. &lt;code&gt;\R&lt;/code&gt; был выбран потому, что PCRE уже использует &lt;code&gt;\R&lt;/code&gt; , и, что более важно, потому что Unicode рекомендует такой метасимвол регулярного выражения и предлагает &lt;code&gt;\R&lt;/code&gt; качестве его обозначения.</target>
        </trans-unit>
        <trans-unit id="2857bfcf8f813920b6e4a8a1bb14270872f38cb1" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt;, and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17515742cc5afa87aeabc73678286fa741ba5388" translate="yes" xml:space="preserve">
          <source>Mnemonic: o</source>
          <target state="translated">Мнемонический:o</target>
        </trans-unit>
        <trans-unit id="5c7eacbc6cb333f80ee9f35aec3e8dd35063c97b" translate="yes" xml:space="preserve">
          <source>Mnemonic: parentheses are used to</source>
          <target state="translated">Мнемонический:скобки используются для того,чтобы</target>
        </trans-unit>
        <trans-unit id="145851845d42b7c2837eb05551e2eb9b2cae8660" translate="yes" xml:space="preserve">
          <source>Mnemonic: points to top of page.</source>
          <target state="translated">Мнемонический:указывает на верхнюю часть страницы.</target>
        </trans-unit>
        <trans-unit id="18d03cec8eedf712bc3cc92498d0bd974ac29168" translate="yes" xml:space="preserve">
          <source>Mnemonic: related to the &lt;b&gt;-w&lt;/b&gt; switch.</source>
          <target state="translated">Мнемоника: относится к переключателю &lt;b&gt;-w&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6ff59e0f3c29d42ff6b4f1943a0cb62f85b10dbe" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">Мнемоника: то же, что и &lt;b&gt;sh&lt;/b&gt; и &lt;b&gt;ksh&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="3b46ac9389c1562addebeca3277c06599213ca1b" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as shells.</source>
          <target state="translated">Мнемонический:то же самое,что и ракушки.</target>
        </trans-unit>
        <trans-unit id="9c5494af227b04c5edebf85d05b3fe69b8e73df2" translate="yes" xml:space="preserve">
          <source>Mnemonic: similar to &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">Мнемоника: похожа на &lt;b&gt;sh&lt;/b&gt; и &lt;b&gt;ksh&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="894f0484590bcbb3b693d6aab805d5dfd400684a" translate="yes" xml:space="preserve">
          <source>Mnemonic: the (possibly) Nested parenthesis that most recently closed.</source>
          <target state="translated">Мнемоническая:(возможно)Вложенная скобка,которая совсем недавно закрылась.</target>
        </trans-unit>
        <trans-unit id="2bc5f6f15e84df55129e74766d50c6d3ec861d52" translate="yes" xml:space="preserve">
          <source>Mnemonic: underline is understood in certain operations.</source>
          <target state="translated">Мнемонический:подчёркивание понимается в определённых операциях.</target>
        </trans-unit>
        <trans-unit id="4a9ec9ee0bfa06bee48fc042c23120f429cc4720" translate="yes" xml:space="preserve">
          <source>Mnemonic: use ^V for a version object.</source>
          <target state="translated">Мнемонический:используйте ^V для объекта версии.</target>
        </trans-unit>
        <trans-unit id="06e3f9eef28e584212eb3b651afb663309c25b17" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-D&lt;/b&gt; switch.</source>
          <target state="translated">Мнемоника: значение переключателя &lt;b&gt;-D&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="8b8a29220f27a6ded73512e3ded3085fc6e23796" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-i&lt;/b&gt; switch.</source>
          <target state="translated">Мнемоника: значение переключателя &lt;b&gt;-i&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d86dda32bcccc36b30321a061a593c0839054c6b" translate="yes" xml:space="preserve">
          <source>Mnemonic: what is printed when there is a &quot;,&quot; in your print statement.</source>
          <target state="translated">Мнемонический:что печатается,когда в вашем печатном заявлении есть &quot;,&quot;.</target>
        </trans-unit>
        <trans-unit id="a2e0668e848f30f9c617ffa35513e900bc8c74ef" translate="yes" xml:space="preserve">
          <source>Mnemonic: when you want your pipes to be piping hot.</source>
          <target state="translated">Мнемонический:когда ты хочешь,чтобы твои трубы были горячими.</target>
        </trans-unit>
        <trans-unit id="83f42ef2607c96d6744ccfc26dd35c90a66a4662" translate="yes" xml:space="preserve">
          <source>Mnemonic: works in double-quoted context.</source>
          <target state="translated">Мнемоника:работает в двойных кавычках.</target>
        </trans-unit>
        <trans-unit id="c5df1d9e3c7f07b6813c1d51005b98006207f133" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt; , but it's what you get &quot;back&quot; from Perl.</source>
          <target state="translated">Мнемоника: вы устанавливаете &lt;code&gt;$\&lt;/code&gt; вместо добавления &quot;\ n&quot; в конце печати. Кроме того, это то же самое, что и &lt;code&gt;$/&lt;/code&gt; , но это то, что вы получаете &quot;обратно&quot; от Perl.</target>
        </trans-unit>
        <trans-unit id="d1e77a5dc7fffdb724bdfb2b1a696e56046f4e46" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt;, but it's what you get &quot;back&quot; from Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774459fcd854849578678b44d17052997274c5ac" translate="yes" xml:space="preserve">
          <source>Mnemonics:</source>
          <target state="translated">Mnemonics:</target>
        </trans-unit>
        <trans-unit id="cafc128f90bdc8e24af8dd2187160ad19d568274" translate="yes" xml:space="preserve">
          <source>Model =&amp;gt; $hModelFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff39ea59358932273dd96de0a90c680140ef641" translate="yes" xml:space="preserve">
          <source>Modifed values of three of the arguments passed to the function. In particular, the &lt;code&gt;XSStack&lt;/code&gt; and &lt;code&gt;InitFileCode&lt;/code&gt; attributes are modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe5ea1c0f4c46a2237b24e5b3f2887e00aa6466" translate="yes" xml:space="preserve">
          <source>Modification of a read-only value attempted</source>
          <target state="translated">Попытка изменения значения,доступного только для чтения</target>
        </trans-unit>
        <trans-unit id="5f76e7ff47044fa8dd85e924ec7a4e874884a8b4" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable array value attempted, %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d49a6e4a1e825b5489876269856cd19dd0c32a5" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable hash value attempted, %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e708f372bd6f49e75185b1eedbc1c5b10e7365" translate="yes" xml:space="preserve">
          <source>Modification time. Adjusted to mac-time on MacOS if required</source>
          <target state="translated">Время модификации.При необходимости скорректировано на время MacOS.</target>
        </trans-unit>
        <trans-unit id="405f45092d843a1d3838d8a5b8852228db0dfbb7" translate="yes" xml:space="preserve">
          <source>Modifications</source>
          <target state="translated">Modifications</target>
        </trans-unit>
        <trans-unit id="6acab8f4be86f5c68401444e88bc8209222cbc50" translate="yes" xml:space="preserve">
          <source>Modifications from the original:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15d3e35d08a4f905aca29a53f32a6a9324f7e00" translate="yes" xml:space="preserve">
          <source>Modified - 13 July 2001</source>
          <target state="translated">Изменено-13 июля 2001 года</target>
        </trans-unit>
        <trans-unit id="c28e2457b8697ed01bbb5ecba237019fd1dcb3c9" translate="yes" xml:space="preserve">
          <source>Modified - 25 June 2001</source>
          <target state="translated">Изменено-25 июня 2001 года</target>
        </trans-unit>
        <trans-unit id="d8e50120460706cd8f55da079850b9b27d5d7356" translate="yes" xml:space="preserve">
          <source>Modified - 28 May 2002</source>
          <target state="translated">Изменено-28 мая 2002 года</target>
        </trans-unit>
        <trans-unit id="32979a38ecc2f0753d6d680873cd17c8a6ba6155" translate="yes" xml:space="preserve">
          <source>Modified by Casey West, 2000-11-08, v0.59.</source>
          <target state="translated">Изменено Кейси Уэстом,2000-11-08,v0.59.</target>
        </trans-unit>
        <trans-unit id="e5f3cf35626877ebe81f40ef6a55ba3d9279e043" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 1999-03-05, v0.58.</source>
          <target state="translated">Изменено Дамианом Конвей,1999-03-05,v0.58.</target>
        </trans-unit>
        <trans-unit id="94d5fe9080184121ea2c9a038a3632538b976fe0" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 2001-09-10, v0.62.</source>
          <target state="translated">Изменено Дэмианом Конвей,2001-09-10,v0.62.</target>
        </trans-unit>
        <trans-unit id="9877a0e2ec14746d54f44a96609db5de1a2c19ac" translate="yes" xml:space="preserve">
          <source>Modified in Perl 5.10.1, 5.12.0</source>
          <target state="translated">Изменено на Perl 5.10.1,5.12.0</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="1c2e8964e53a3974ad38a662a6a136aa94d17d1a" translate="yes" xml:space="preserve">
          <source>Modifies Test::Builder internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e880a783bbd37d3dea3114db13bc60aa06662623" translate="yes" xml:space="preserve">
          <source>Modifies and queries the program's underlying locale. Users of this function should read &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;, whch provides a comprehensive discussion of Perl locale handling, knowledge of which is necessary to properly use this function. It contains &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;a section devoted to this function&lt;/a&gt;. The discussion here is merely a summary reference for &lt;code&gt;setlocale()&lt;/code&gt; . Note that Perl itself is almost entirely unaffected by the locale except within the scope of &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; . (Exceptions are listed in &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Not within the scope of use locale in perllocale&lt;/a&gt;.)</source>
          <target state="translated">Изменяет и запрашивает базовый языковой стандарт программы. Пользователи этой функции должны прочитать &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; , где подробно обсуждается обработка языковых стандартов Perl, знание которых необходимо для правильного использования этой функции. Он содержит &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;раздел, посвященный этой функции&lt;/a&gt; . Обсуждение здесь - просто сводная ссылка на &lt;code&gt;setlocale()&lt;/code&gt; . Обратите внимание, что сам Perl почти полностью не зависит от локали, за исключением области &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; . (Исключения перечислены в &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;разделе Локаль вне области применения в perllocale&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="c9b51ea52a3a827c7ad9340f3c3175b008c79459" translate="yes" xml:space="preserve">
          <source>Modifies the list of places temp directory information is looked for.</source>
          <target state="translated">Изменение списка мест,для которых ищется информация о временном каталоге.</target>
        </trans-unit>
        <trans-unit id="1d7a12e5c51dea8cde2ad6652de6b9359a21545b" translate="yes" xml:space="preserve">
          <source>Modifying and =</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1dfce837138cff453bdea39c7c4c418d1f1de3" translate="yes" xml:space="preserve">
          <source>Modifying the timestamps may not be possible at all: for example, the &lt;code&gt;noatime&lt;/code&gt; filesystem mount option may prohibit you from changing the access time timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d78ea62126eeb6ac9e086c6864dab2d0e3c3a1" translate="yes" xml:space="preserve">
          <source>Module Installation</source>
          <target state="translated">Установка модулей</target>
        </trans-unit>
        <trans-unit id="5e8ed13e4781f62782d5aa23493e665d1640aba0" translate="yes" xml:space="preserve">
          <source>Module Meta-Data (META and MYMETA)</source>
          <target state="translated">Мета-данные модуля (META и MYMETA)</target>
        </trans-unit>
        <trans-unit id="1454ab039736e265b3314e2865bba939a5971c09" translate="yes" xml:space="preserve">
          <source>Module Version Checking</source>
          <target state="translated">Проверка версии модуля</target>
        </trans-unit>
        <trans-unit id="d108ead0085bbd00f6a4bbc9931939d7eccf7683" translate="yes" xml:space="preserve">
          <source>Module Writing</source>
          <target state="translated">Написание модуля</target>
        </trans-unit>
        <trans-unit id="516af6a787a862724252123e2bd3b762619e9ffe" translate="yes" xml:space="preserve">
          <source>Module authors should carefully consider whether to rely on other modules, and which modules to rely on.</source>
          <target state="translated">Авторы модулей должны тщательно продумать,следует ли полагаться на другие модули,и на какие модули полагаться.</target>
        </trans-unit>
        <trans-unit id="8471831f64e1887291d945952d1e1daa28722f62" translate="yes" xml:space="preserve">
          <source>Module for manipulations of tar archives</source>
          <target state="translated">Модуль для манипуляций с смоляными архивами</target>
        </trans-unit>
        <trans-unit id="e65640d58920cc799b38907083a95415ef4b8a66" translate="yes" xml:space="preserve">
          <source>Module installation tools have ways of resolving unmet dependencies but to do that they need a</source>
          <target state="translated">Инструменты для установки модулей имеют способы разрешения неудовлетворенных зависимостей,но для этого им необходим</target>
        </trans-unit>
        <trans-unit id="b1ac20aedfee381805b19478ff3a953f19bfd201" translate="yes" xml:space="preserve">
          <source>Module name must be constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296ea56fdcb62556504377c9806acdeebb07b6ba" translate="yes" xml:space="preserve">
          <source>Module name required with -%c option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b521a1c525dc29431bbdbd97b08d7337321f5f4" translate="yes" xml:space="preserve">
          <source>Module tests</source>
          <target state="translated">Испытания модулей</target>
        </trans-unit>
        <trans-unit id="09c1308ed6b0c63e3397790cc4f67693af0f82c7" translate="yes" xml:space="preserve">
          <source>Module to convert pod files to HTML</source>
          <target state="translated">Модуль для преобразования файлов pod в HTML</target>
        </trans-unit>
        <trans-unit id="15ecde6b9e55280e32d99a40c501f4e2e8c2ff44" translate="yes" xml:space="preserve">
          <source>Module to test the XS typemaps distributed with perl</source>
          <target state="translated">Модуль для тестирования типовых карт XS,распределенных на perl</target>
        </trans-unit>
        <trans-unit id="b97c2d8aa7bcb68996cb4a6d31701bee24ce1615" translate="yes" xml:space="preserve">
          <source>Module use may give one of the following errors during import.</source>
          <target state="translated">Использование модуля может привести к одной из следующих ошибок при импорте.</target>
        </trans-unit>
        <trans-unit id="3674e804d761cb13678499f67d99449dc4f27a48" translate="yes" xml:space="preserve">
          <source>Module.pm</source>
          <target state="translated">Module.pm</target>
        </trans-unit>
        <trans-unit id="ab9ab41c22948665a29f42a31b28aeddb3d8a91e" translate="yes" xml:space="preserve">
          <source>Module.pod</source>
          <target state="translated">Module.pod</target>
        </trans-unit>
        <trans-unit id="ae8d8ff480dfbba731116e004a9d3f57c4bd6cdb" translate="yes" xml:space="preserve">
          <source>Module::Build</source>
          <target state="translated">Module::Build</target>
        </trans-unit>
        <trans-unit id="62fb86405abcf275344b08fc9af2288d90dc6412" translate="yes" xml:space="preserve">
          <source>Module::Build 0.28 added support for &lt;code&gt;--prefix&lt;/code&gt; which works like MakeMaker's PREFIX.</source>
          <target state="translated">В Module :: Build 0.28 добавлена ​​поддержка &lt;code&gt;--prefix&lt;/code&gt; , которая работает как PREFIX MakeMaker.</target>
        </trans-unit>
        <trans-unit id="150dc2d2e198e343abd0bea909de778fbe14be58" translate="yes" xml:space="preserve">
          <source>Module::Build design plans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d488d471a8bc496d78b2b13e521d55c3f0cdef" translate="yes" xml:space="preserve">
          <source>Module::Build is a project by Ken Williams to supplant MakeMaker. Its primary advantages are:</source>
          <target state="translated">Модуль::Build-это проект Кена Уильямса по вытеснению MakeMaker.Его основными преимуществами являются:</target>
        </trans-unit>
        <trans-unit id="6b1f0f8f3e8bc54c1732e312db2a7505d466061a" translate="yes" xml:space="preserve">
          <source>Module::Build was long the official heir apparent to MakeMaker. The rate of both its development and adoption has slowed in recent years, though, and it is unclear what the future holds for it. That said, Module::Build set the stage for</source>
          <target state="translated">Модуль::Строительство долгое время было официальным наследником,очевидным для MakeMaker.Темпы его разработки и принятия замедлились в последние годы,и неясно,какое будущее ждет его в будущем.Тем не менее,Модуль::Build заложил основу для того.</target>
        </trans-unit>
        <trans-unit id="8def62b03ff3b40aeadb216948bd496a8840b87f" translate="yes" xml:space="preserve">
          <source>Module::Build, as of 0.28, supports two ways to install to the same location as MakeMaker.</source>
          <target state="translated">Модуль::Build,начиная с версии 0.28,поддерживает два способа установки в то же самое место,что и MakeMaker.</target>
        </trans-unit>
        <trans-unit id="a1edaf280214fd94706296d20c3b0f2bfdf9eb59" translate="yes" xml:space="preserve">
          <source>Module::CoreList</source>
          <target state="translated">Module::CoreList</target>
        </trans-unit>
        <trans-unit id="c1eab53f65667256b290f34243d94d7ecdff687e" translate="yes" xml:space="preserve">
          <source>Module::CoreList - what modules shipped with versions of perl</source>
          <target state="translated">Модуль::CoreList-какие модули поставляются с версиями perl</target>
        </trans-unit>
        <trans-unit id="cf24a0df2a2fe48d90f4a8337763728341cb900f" translate="yes" xml:space="preserve">
          <source>Module::CoreList currently covers the 5.000, 5.001, 5.002, 5.003_07, 5.004, 5.004_05, 5.005, 5.005_03, 5.005_04 and 5.7.3 releases of perl.</source>
          <target state="translated">Модуль::CoreList в настоящее время охватывает релизы 5.000,5.001,5.002,5.003_07,5.004,5.004_05,5.005,5.005_03,5.005_04 и 5.7.3 perl.</target>
        </trans-unit>
        <trans-unit id="b23a69ee7bbcaf5f395d8275dba4f3efac0eee37" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;../perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreList предоставляет информацию о том, какие основные и двойные модули поставляются с каждой версией &lt;a href=&quot;../perl&quot;&gt;perl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="734252a85fe5c8339de69573b5216ab8f0aa64b1" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de86ec78c4d249d74b590b22c867ee4d58aa762e" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils</source>
          <target state="translated">Module::CoreList::Utils</target>
        </trans-unit>
        <trans-unit id="50d08dcfe907005aefae6a40958e4b055750c23b" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils - what utilities shipped with versions of perl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d96066f93fab25da99dd68aa81cda10b29454b6" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils provides information on which core and dual-life utilities shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b689d99705fdc907aba90226fb7f6ee6929e63" translate="yes" xml:space="preserve">
          <source>Module::Install</source>
          <target state="translated">Module::Install</target>
        </trans-unit>
        <trans-unit id="79bce9e07f8b204000334e6031e7ea0b0960701f" translate="yes" xml:space="preserve">
          <source>Module::Load</source>
          <target state="translated">Module::Load</target>
        </trans-unit>
        <trans-unit id="e3d85e08676b05b2e538b0685147bf01f13faa38" translate="yes" xml:space="preserve">
          <source>Module::Load - runtime require of both modules and files</source>
          <target state="translated">Модуль::Загрузка-время выполнения требует наличия как модулей,так и файлов.</target>
        </trans-unit>
        <trans-unit id="6e16ca7f251db467f65f169ccb90bd1775b9be31" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional</source>
          <target state="translated">Module::Load::Conditional</target>
        </trans-unit>
        <trans-unit id="0333daac2dc5711d6aa41b0b76a07a8abee4d3b5" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional - Looking up module information / loading at runtime</source>
          <target state="translated">Модуль::Загрузка::Условно-Поиск информации о модуле/Загрузка во время исполнения</target>
        </trans-unit>
        <trans-unit id="c96b8d051cb4352b076673e1abc0268f29fa107f" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional provides simple ways to query and possibly load any of the modules you have installed on your system during runtime.</source>
          <target state="translated">Модуль::Загрузка::Условие предоставляет простые способы запроса и,возможно,загрузки любого из модулей,установленных в вашей системе во время выполнения.</target>
        </trans-unit>
        <trans-unit id="fffd2566f2af4b448df67c2c105f5e1f1b680583" translate="yes" xml:space="preserve">
          <source>Module::Loaded</source>
          <target state="translated">Module::Loaded</target>
        </trans-unit>
        <trans-unit id="ce11901e21f211fb61728e8347b6913869d01fec" translate="yes" xml:space="preserve">
          <source>Module::Loaded - mark modules as loaded or unloaded</source>
          <target state="translated">Модуль::Загружен-отметьте модули как загруженные или выгруженные.</target>
        </trans-unit>
        <trans-unit id="bb6885dcfda6105816579eb1110d8a0af233720c" translate="yes" xml:space="preserve">
          <source>Module::Metadata</source>
          <target state="translated">Module::Metadata</target>
        </trans-unit>
        <trans-unit id="5e8e22f998099970e72ea7db019f086e11a0adef" translate="yes" xml:space="preserve">
          <source>Module::Metadata - Gather package and POD information from perl module files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e77c62a7e1cc7db95a64ce9a1c2d0f806647c6" translate="yes" xml:space="preserve">
          <source>Module::bootstrap()</source>
          <target state="translated">Module::bootstrap()</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="801dc9760f104617b6ed8b09b3bc552754857caf" translate="yes" xml:space="preserve">
          <source>Modules Used</source>
          <target state="translated">Модули Использованные</target>
        </trans-unit>
        <trans-unit id="ba45166087559a8d4da3018515bba6d0e5511862" translate="yes" xml:space="preserve">
          <source>Modules and Extensions for Perl on OS/390</source>
          <target state="translated">Модули и расширения для Perl на OS/390</target>
        </trans-unit>
        <trans-unit id="cfe4151bcba7eda23509b603930bf7ee0bf81221" translate="yes" xml:space="preserve">
          <source>Modules are installed on a case-by-case basis (as provided by the methods described in the previous section), and in the operating system. All of these paths are stored in @INC, which you can display with the one-liner</source>
          <target state="translated">Модули устанавливаются в индивидуальном порядке (как это предусмотрено методами,описанными в предыдущем разделе),а также в операционной системе.Все эти пути хранятся в @INC,который можно отобразить с помощью одного лайнера</target>
        </trans-unit>
        <trans-unit id="2c98c46b9ec45777efe9604a1088b3e507328331" translate="yes" xml:space="preserve">
          <source>Modules in the</source>
          <target state="translated">Модули в</target>
        </trans-unit>
        <trans-unit id="387c58c36e26384b5c37e68bd7e39af265275a1f" translate="yes" xml:space="preserve">
          <source>Modules know their associated Distribution objects. They always refer to the most recent official release. Developers may mark their releases as unstable development versions (by inserting an underscore into the module version number which will also be reflected in the distribution name when you run 'make dist'), so the really hottest and newest distribution is not always the default. If a module Foo circulates on CPAN in both version 1.23 and 1.23_90, CPAN.pm offers a convenient way to install version 1.23 by saying</source>
          <target state="translated">Модули знают связанные с ними объекты Распределения.Они всегда ссылаются на последний официальный релиз.Разработчики могут отмечать свои выпуски как нестабильные версии для разработки (вставляя подчеркивание в номер версии модуля,которое также будет отражено в названии дистрибутива при запуске 'make dist'),так что действительно самый горячий и новый дистрибутив не всегда является дистрибутивом по умолчанию.Если модуль Foo циркулирует на CPAN в обеих версиях 1.23 и 1.23_90,то CPAN.pm предлагает удобный способ установки версии 1.23,говоря</target>
        </trans-unit>
        <trans-unit id="5f3d6f058f458ef7f23d8ca7c1fa07e5fdffa37c" translate="yes" xml:space="preserve">
          <source>Modules not available from CPAN</source>
          <target state="translated">Модули не доступны в CPAN</target>
        </trans-unit>
        <trans-unit id="8de09ade33dff4d30d378d32e3f399e05899232c" translate="yes" xml:space="preserve">
          <source>Modules shipped as part of the Perl core live in four subdirectories. Two of these directories contain modules that live in the core, and two contain modules that can also be released separately on CPAN. Modules which can be released on cpan are known as &quot;dual-life&quot; modules.</source>
          <target state="translated">Модули,поставляемые в составе ядра Perl,живут в четырех подкаталогах.Две из этих директорий содержат модули,которые живут в ядре,и две содержат модули,которые также могут быть выпущены отдельно на CPAN.Модули,которые могут быть выпущены на cpan,известны как модули &quot;двойной жизни&quot;.</target>
        </trans-unit>
        <trans-unit id="e0e8aed9f80a1dc002e318b7643af4d7677ed672" translate="yes" xml:space="preserve">
          <source>Modules should be packaged using one of the standard packaging tools. Currently you have the choice between ExtUtils::MakeMaker and the more platform independent Module::Build, allowing modules to be installed in a consistent manner. When using ExtUtils::MakeMaker, you can use &quot;make dist&quot; to create your package. Tools exist to help you to build your module in a MakeMaker-friendly style. These include ExtUtils::ModuleMaker and h2xs. See also &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt;.</source>
          <target state="translated">Модули следует упаковывать с помощью одного из стандартных средств упаковки. В настоящее время у вас есть выбор между ExtUtils :: MakeMaker и более независимым от платформы модулем :: Build, что позволяет устанавливать модули согласованным образом. При использовании ExtUtils :: MakeMaker вы можете использовать &amp;laquo;make dist&amp;raquo; для создания вашего пакета. Существуют инструменты, которые помогут вам создать свой модуль в стиле, удобном для MakeMaker. К ним относятся ExtUtils :: ModuleMaker и h2xs. См. Также &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6eefcfbc44b095f906993d6a3ee0e852ebab6785" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba7daa98709598366c3537d2ec9862d20e4985a" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="translated">В этом могут помочь такие модули, как &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt; и &lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt; . Однако по возможности избегайте чтения всего файла сразу. Perl не вернет эту память операционной системе, пока процесс не завершится.</target>
        </trans-unit>
        <trans-unit id="8e39293c10b487ab181c13d36712d552c93decf5" translate="yes" xml:space="preserve">
          <source>Modules that calculate message digests</source>
          <target state="translated">Модули,рассчитывающие дайджесты сообщений</target>
        </trans-unit>
        <trans-unit id="c5ea83baff39996a0d7cf4b745d2c4d5aed9fdd5" translate="yes" xml:space="preserve">
          <source>Modules that provide OS-specific behaviors often need to know if the current operating system matches a more generic type of operating systems. For example, 'linux' is a type of 'Unix' operating system and so is 'freebsd'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e640dc8698a54c30ce2b25e1b3caa6b2de29019" translate="yes" xml:space="preserve">
          <source>Modules uploaded to CPAN are tested by a variety of volunteers on different platforms. These CPAN testers are notified by mail of each new upload, and reply to the list with PASS, FAIL, NA (not applicable to this platform), or UNKNOWN (unknown), along with any relevant notations.</source>
          <target state="translated">Модули,загруженные в CPAN,тестируются разными добровольцами на разных платформах.Эти CPAN-тестеры уведомляются по почте о каждой новой загрузке и отвечают в списке с PASS,FAIL,NA (не применимо к данной платформе)или UNKNOWN (неизвестно),вместе с любыми соответствующими пометками.</target>
        </trans-unit>
        <trans-unit id="9c1cf1fbeb1d4ad27fd965e462b1a6f05eea74e9" translate="yes" xml:space="preserve">
          <source>Modules which are &quot;stable&quot; should not break backwards compatibility without at least a long transition phase and a major change in version number.</source>
          <target state="translated">Модули,которые являются &quot;стабильными&quot;,не должны нарушать обратную совместимость без,по крайней мере,длительной фазы перехода и существенного изменения номера версии.</target>
        </trans-unit>
        <trans-unit id="d737814ec2d252aed0d9553090a83af593402cf6" translate="yes" xml:space="preserve">
          <source>Modules: Creation, Use, and Abuse</source>
          <target state="translated">Модули:Создание,использование и злоупотребление</target>
        </trans-unit>
        <trans-unit id="cedf0a043a8175adc7d112f8794910834f961fb1" translate="yes" xml:space="preserve">
          <source>Mohammad S Anwar &amp;lt;mohammad.anwar@yahoo.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3a7ff6bdc4145b967af70ab8f39f386ae3ec49" translate="yes" xml:space="preserve">
          <source>Mojolicious</source>
          <target state="translated">Mojolicious</target>
        </trans-unit>
        <trans-unit id="9791bc4d7273587d61fef79841bd342381f5e321" translate="yes" xml:space="preserve">
          <source>Moldova</source>
          <target state="translated">Moldova</target>
        </trans-unit>
        <trans-unit id="1946c31aeef030db495b0e13ad1403e9cb0aa7a2" translate="yes" xml:space="preserve">
          <source>Moo</source>
          <target state="translated">Moo</target>
        </trans-unit>
        <trans-unit id="9fdbf7859aefc5d1a01b970f830cbc34f4ef18a9" translate="yes" xml:space="preserve">
          <source>Moose</source>
          <target state="translated">Moose</target>
        </trans-unit>
        <trans-unit id="4bab2d8fe13fa6ab57f80098b414f0f734c5dd25" translate="yes" xml:space="preserve">
          <source>More</source>
          <target state="translated">More</target>
        </trans-unit>
        <trans-unit id="5696d6a7f215fb3987b13af506efed308c8661bb" translate="yes" xml:space="preserve">
          <source>More Pod::Simple Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e29b39da9785f5a818efe5d3fe3de6e587d533" translate="yes" xml:space="preserve">
          <source>More Problems</source>
          <target state="translated">Другие проблемы</target>
        </trans-unit>
        <trans-unit id="53057b4dfd56a329af03f74d8aab9d36470ceecf" translate="yes" xml:space="preserve">
          <source>More about XSUB arguments</source>
          <target state="translated">Подробнее об аргументах XSUB</target>
        </trans-unit>
        <trans-unit id="108f2973ee0fc68f8bd1c87f7945bdef10ce9b19" translate="yes" xml:space="preserve">
          <source>More advanced specifications for parallel vs sequence run rules</source>
          <target state="translated">Более продвинутые спецификации для правил выполнения параллельных и параллельных последовательностей</target>
        </trans-unit>
        <trans-unit id="fd4e82e5da3e4dda041a0cb49fdccc789d8158c0" translate="yes" xml:space="preserve">
          <source>More complete API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa61b2946cd3153b1a26ff99517443d74f92f4b" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a55c80ed5c83f1c889c62320fc4a034a2333c3" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="translated">В более сложных случаях потребуется написать синтаксический анализатор, возможно, с использованием модуля синтаксического анализа из CPAN, например &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp :: Grammars&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse :: RecDescent&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse :: Yapp&lt;/a&gt; , &lt;a href=&quot;text/balanced&quot;&gt;Text :: Balanced&lt;/a&gt; или &lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa :: R2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b11b4dd1cd41cf4f86d96c0b775f01a4fba8ea41" translate="yes" xml:space="preserve">
          <source>More complex data types can be constructed using references, which allow you to build lists and hashes within lists and hashes.</source>
          <target state="translated">Более сложные типы данных могут быть построены с использованием ссылок,что позволяет строить списки и хэши внутри списков и хэшей.</target>
        </trans-unit>
        <trans-unit id="4020daf37582247db604f50a3dd13402fd4a026e" translate="yes" xml:space="preserve">
          <source>More complex regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de1dce99fa44a08c2393686bc2b8372b954725" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt; .</source>
          <target state="translated">Более сложные подклассы, возможно, должны будут воспроизвести большую часть внутренней логики Math :: BigInt, если им нужно изменить более базовое поведение. Подкласс, которому нужно просто изменить вывод, должен только перегрузить &lt;code&gt;bstr()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="756589b88b61cce058613ae89757234c6572a356" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f15d6cc7c0d2273ae329858641605f6bede3c4" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3A-Keyword&quot;&gt;&quot;The INPUT: Keyword&quot;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe3042a0cc3a612b8a82908d39dc629d888d5d" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;The INPUT: Keyword&lt;/a&gt;.)</source>
          <target state="translated">Более сложные XSUB-файлы могут содержать много других разделов. Каждый раздел XSUB начинается с соответствующего ключевого слова, например INIT: или CLEANUP :. Однако первые две строки XSUB всегда содержат одни и те же данные: описания возвращаемого типа и имена функции и ее параметров. Все, что следует непосредственно за ними, считается разделом INPUT :, если явно не помечено другим ключевым словом. (См &lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;. ВХОД: Ключевое слово&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="d66d0268f9a384b521bc030afaac1581d909de98" translate="yes" xml:space="preserve">
          <source>More confusing options than you can shake a big stick at! It's not as bad as it looks and it's very useful to know more about all of it, and fun too!</source>
          <target state="translated">Больше запутанных вариантов,чем можно встряхнуть большой палкой! Это не так плохо,как кажется,и очень полезно знать обо всем этом,и весело!</target>
        </trans-unit>
        <trans-unit id="526d1ff4132ac0e34dbd3812351d44fc0c1c9026" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt; , &lt;code&gt;/u&lt;/code&gt; , and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="translated">Более подробная информация о каждом из модификаторов приводится ниже. Скорее всего, вам не нужно знать эту информацию для &lt;code&gt;/l&lt;/code&gt; , &lt;code&gt;/u&lt;/code&gt; и &lt;code&gt;/d&lt;/code&gt; , и вы можете сразу перейти к &lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/ a&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b6f6bf6105714de1c120dd3b291d9add613ebf8" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt;, and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2Fa-%28and-%2Faa%29&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d17cbfc12e087be467835457f4aeb7c6f18f60" translate="yes" xml:space="preserve">
          <source>More detailed example</source>
          <target state="translated">Более подробный пример</target>
        </trans-unit>
        <trans-unit id="f2fe550e6e93ebe700899518f39fbee8a6928544" translate="yes" xml:space="preserve">
          <source>More detailed information about Perl syntax can be found in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;.</source>
          <target state="translated">Более подробную информацию о синтаксисе Perl можно найти в &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4d020339877fe2163d2f4652ee795295ae937b6" translate="yes" xml:space="preserve">
          <source>More details on hacking the Perl core. This document focuses on lower level details such as how to write tests, compilation issues, portability, debugging, etc.</source>
          <target state="translated">Подробнее о взломе ядра Perl.Этот документ посвящен деталям более низкого уровня,таким как написание тестов,проблемы с компиляцией,переносимость,отладка и т.д.</target>
        </trans-unit>
        <trans-unit id="5f269e55bd34be0e508b0040a6ba9834ce17dd8a" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;&quot;LOCALE CATEGORIES&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bbc3f15f8c3d6fccfab2c6f797ecddb3a71815" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIES&lt;/a&gt;.</source>
          <target state="translated">Более подробная информация о категориях, используемых Perl, приведена ниже в &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;ЛОКАЛЬНЫХ КАТЕГОРИЯХ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8e3c44663c4ead5df55d85ed7952e7012ae119b" translate="yes" xml:space="preserve">
          <source>More examples of different modes in action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b102e56a8f6f1fc1426db346097f8c24db1a1b" translate="yes" xml:space="preserve">
          <source>More flags to pass to the &lt;code&gt;getaddrinfo()&lt;/code&gt; function. If not supplied, a default of &lt;code&gt;AI_ADDRCONFIG&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe7c3d7dc58312e0a715568eb7fe1648b80945e" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt; , and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt; , and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; , respectively.</source>
          <target state="translated">Более формально, &lt;code&gt;\p{Uppercase}&lt;/code&gt; соответствует любому одиночному символу, значение свойства &lt;code&gt;Uppercase&lt;/code&gt; которого равно &lt;code&gt;True&lt;/code&gt; , а &lt;code&gt;\P{Uppercase}&lt;/code&gt; соответствует любому символу, значение свойства &lt;code&gt;Uppercase&lt;/code&gt; которого равно &lt;code&gt;False&lt;/code&gt; , и они могли быть записаны как &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; и &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="950f5b581b5e9dd9bda925ea96c7e3efb17146e5" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt;, and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27451c770878f49944a4e46db9a7b7a2c5c07101" translate="yes" xml:space="preserve">
          <source>More formally, it will be false if anything has happened which makes it impossible for the test suite to pass. True otherwise.</source>
          <target state="translated">Более формально,это будет ложью,если что-то случится,что делает невозможным прохождение тестового набора.Иначе правда.</target>
        </trans-unit>
        <trans-unit id="e4f15e11fdfe41914601fd2b52ca88c4e0b2db11" translate="yes" xml:space="preserve">
          <source>More fun with &lt;code&gt;?{}&lt;/code&gt;:</source>
          <target state="translated">Больше удовольствия с &lt;code&gt;?{}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3d785a8d06f0122559b61ab5ff5e1ae77216b585" translate="yes" xml:space="preserve">
          <source>More generally, &lt;code&gt;\&lt;i&gt;nnn&lt;/i&gt;&lt;/code&gt;, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da98cf1b684d1edc72215ded0f14b15a6f1b445" translate="yes" xml:space="preserve">
          <source>More important (and less obvious) is the necessity of garbage collection. When a normal object dies, anything stored in the object body is garbage-collected by perl. With inside-out objects, Perl knows nothing about the data stored in field hashes by a class, but these must be deleted when the object goes out of scope. Thus the class must provide a &lt;code&gt;DESTROY&lt;/code&gt; method to take care of that.</source>
          <target state="translated">Более важной (и менее очевидной) является необходимость сборки мусора. Когда нормальный объект умирает, все, что хранится в теле объекта, Perl собирает мусор. В случае с объектами наизнанку Perl ничего не знает о данных, хранимых классом в хэшах полей, но они должны быть удалены, когда объект выходит за пределы области видимости. Таким образом, класс должен предоставить метод &lt;code&gt;DESTROY&lt;/code&gt; , который позаботится об этом.</target>
        </trans-unit>
        <trans-unit id="4232744f447684a298c82dce2791eb6cf2ae4bde" translate="yes" xml:space="preserve">
          <source>More importantly, you assume</source>
          <target state="translated">Более того,вы предполагаете.</target>
        </trans-unit>
        <trans-unit id="dbb4a7aa9653e873e873e3d4f83808761932aa49" translate="yes" xml:space="preserve">
          <source>More information on the terminal capabilities will be found in the termcap manpage on most Unix-like systems.</source>
          <target state="translated">Более подробную информацию о возможностях терминала можно найти в manpage терминов на большинстве Unix-подобных систем.</target>
        </trans-unit>
        <trans-unit id="aa9cc3109d4e7c580c76561d1b8bded0209caf69" translate="yes" xml:space="preserve">
          <source>More layers than just the encoding can be specified here. For example, the incantation &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; includes implicit CRLF handling.</source>
          <target state="translated">Здесь можно указать больше слоев, чем просто кодировку. Например, заклинание &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; включает неявную обработку CRLF.</target>
        </trans-unit>
        <trans-unit id="e8d55c7fe7068672e98b5466a50eadff1658752a" translate="yes" xml:space="preserve">
          <source>More likely, &lt;code&gt;$svAccess&lt;/code&gt; is a string describing the generic type of access you desire and possibly the file creation options to use. In this case, &lt;code&gt;$svAccess&lt;/code&gt; should contain zero or more characters from &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; [access desired], zero or one character each from &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; and &lt;code&gt;&quot;ce&quot;&lt;/code&gt;, and optional white space. These letters stand for, respectively, &quot;Query access&quot;, &quot;Read access&quot;, &quot;Write access&quot;, &quot;Keep if exists&quot;, &quot;Truncate if exists&quot;, &quot;New file only&quot;, &quot;Create if none&quot;, and &quot;Existing file only&quot;. Case is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d270a53a536b611473a25cb95f7037520a02f0" translate="yes" xml:space="preserve">
          <source>More matching</source>
          <target state="translated">Больше соответствия</target>
        </trans-unit>
        <trans-unit id="b707ad370452316dedfbb6479f84b90feffeb14b" translate="yes" xml:space="preserve">
          <source>More on characters, strings, and character classes</source>
          <target state="translated">Подробнее о символах,строках и классах символов</target>
        </trans-unit>
        <trans-unit id="0e20dff8fe6d2b34d7e4d4cac19464fdb760259e" translate="yes" xml:space="preserve">
          <source>More sophisticated example:</source>
          <target state="translated">Более сложный пример:</target>
        </trans-unit>
        <trans-unit id="969a983581a527717c64f4e926ceeb9fb3c1079b" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cc9a8a265ceaaf00e7a02c5fa1c3956c64ee64" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="translated">Больше функций тестирования! Когда вы перерастете Test :: Simple, посмотрите &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; . Test :: Simple на 100% совместим с &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; (т.е. вы можете просто использовать &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; вместо Test :: Simple в своих программах, и все будет по-прежнему работать).</target>
        </trans-unit>
        <trans-unit id="dca60a28cf5bfac5c3931dc141dffe59abb6ab5a" translate="yes" xml:space="preserve">
          <source>More tests.</source>
          <target state="translated">Еще тесты.</target>
        </trans-unit>
        <trans-unit id="280bbf061032f32980db94b9cf615b5506c7b962" translate="yes" xml:space="preserve">
          <source>More tests. (Stuff I didn't think of yet.)</source>
          <target state="translated">Еще тесты.(Вещи,о которых я еще не подумал.)</target>
        </trans-unit>
        <trans-unit id="6f210a3f7fd112870193ebdf353aec3e59ed0eb5" translate="yes" xml:space="preserve">
          <source>More than one argument to '%s' open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb0a049a65b7b6c69262ebd324033d41d896fe4" translate="yes" xml:space="preserve">
          <source>More than one plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0e63649914291795f2314152800444162a6954" translate="yes" xml:space="preserve">
          <source>Moreover, a third possibility may even be simpler than anything discussed above: &quot;Just require that all possible (or at least applicable) forms be provided in the call to the given language's quant method, as in:&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371109ba4b8859f3e3185200282a3a250ce94866" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt; -comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="translated">Более того, внутри &lt;code&gt;(?{BLOCK})&lt;/code&gt; , &lt;code&gt;(?# comment )&lt;/code&gt; Comment ) и &lt;code&gt;#&lt;/code&gt; -комментария в &lt;code&gt;/x&lt;/code&gt; -регулярном выражении никакая обработка не выполняется. Это первый шаг, на котором актуально наличие модификатора &lt;code&gt;/x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b50b703e8f733eb18bd373161aa2549aa4cf9d1" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt;-comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766af651754c70019b0147c9aabb389875f6513e" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="translated">Более того, в самом интерпретаторе Perl были серьезные ошибки, связанные с фатализованными предупреждениями. Сводка решенных и нерешенных проблем по состоянию на январь 2015 года приведена в &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;этой публикации perl5-porters&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eeff5d75841a1da3989f3e49cb3c5fb4a15531c1" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71781bd1796397c70432d8ed26a8fe5878ffc4aa" translate="yes" xml:space="preserve">
          <source>Moreover, users may expect this:</source>
          <target state="translated">Более того,пользователи могут ожидать этого:</target>
        </trans-unit>
        <trans-unit id="7d0005685b4ea3ed15fd588977e2973569a7d7be" translate="yes" xml:space="preserve">
          <source>Mortal references are mainly used for xVs that are placed on perl's main stack. The stack is problematic for reference tracking, because it contains a lot of xV references, but doesn't own those references: they are not counted. Currently, there are many bugs resulting from xVs being destroyed while referenced by the stack, because the stack's uncounted references aren't enough to keep the xVs alive. So when putting an (uncounted) reference on the stack, it is vitally important to ensure that there will be a counted reference to the same xV that will last at least as long as the uncounted reference. But it's also important that that counted reference be cleaned up at an appropriate time, and not unduly prolong the xV's life. For there to be a mortal reference is often the best way to satisfy this requirement, especially if the xV was created especially to be put on the stack and would otherwise be unreferenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0ec74af25710eb89dcb326b64083f39f30db7a" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="translated">Поддерживается большинство вызовов, связанных с &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; , но они могут вести себя не так, как на платформах Unix. См. Полный список в &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8bd7ca1c6bc950dfa343636c44e8a991660d9872" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;Config&lt;/code&gt; variables are determined by the &lt;code&gt;Configure&lt;/code&gt; script on platforms supported by it (which is most UNIX platforms). Some platforms have custom-made &lt;code&gt;Config&lt;/code&gt; variables, and may thus not have some of the variables described below, or may have extraneous variables specific to that particular port. See the port specific documentation in such cases.</source>
          <target state="translated">Большинство переменных &lt;code&gt;Config&lt;/code&gt; определяется сценарием &lt;code&gt;Configure&lt;/code&gt; на поддерживаемых им платформах (а это большинство платформ UNIX). Некоторые платформы имеют настраиваемые переменные &lt;code&gt;Config&lt;/code&gt; и поэтому могут не иметь некоторых из переменных, описанных ниже, или могут иметь посторонние переменные, специфичные для этого конкретного порта. В таких случаях см. Документацию по конкретному порту.</target>
        </trans-unit>
        <trans-unit id="28f2f1dbf78786489093dd79f20f32255da8bbeb" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;socket()&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb850eec5c7ca91283476032e5d18060f62e376" translate="yes" xml:space="preserve">
          <source>Most OS have a maximum command length they can execute at once. Large modules can easily generate commands well past that limit. Its necessary to split long commands up into a series of shorter commands.</source>
          <target state="translated">Большинство ОС имеют максимальную длину команды,которую они могут выполнить сразу.Большие модули могут легко генерировать команды,значительно превышающие этот предел.Это необходимо для разделения длинных команд на ряд более коротких.</target>
        </trans-unit>
        <trans-unit id="c9a73cc9d93ff9ac0d82b0de181da65c3c3f7d7f" translate="yes" xml:space="preserve">
          <source>Most Operating Systems record time as the number of seconds since a certain date. This date is the beginning of the epoch. Unix's starts at midnight January 1st, 1970 GMT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87aec58e27c477535ee7ea89c7549f2b78b3f922" translate="yes" xml:space="preserve">
          <source>Most POSIX character classes have two Unicode-style &lt;code&gt;\p&lt;/code&gt; property counterparts. (They are not official Unicode properties, but Perl extensions derived from official Unicode properties.) The table below shows the relation between POSIX character classes and these counterparts.</source>
          <target state="translated">Большинство классов символов POSIX имеют два аналога свойства &lt;code&gt;\p&lt;/code&gt; стиле Юникода . (Они не являются официальными свойствами Unicode, а являются расширениями Perl, производными от официальных свойств Unicode.) В таблице ниже показаны отношения между классами символов POSIX и этими аналогами.</target>
        </trans-unit>
        <trans-unit id="937bd5a8c80916c93da68ee3bf243ef6728b4836" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc62d968e4cf48df873bc6b26766e14aed8bb9a1" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="translated">У большинства веб-платформ Perl будет механизм для этого, при использовании платформы &lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt; это будет:</target>
        </trans-unit>
        <trans-unit id="536328dda2b64b33176fd10e64fdf2366a37e10b" translate="yes" xml:space="preserve">
          <source>Most Perl features behave in a natural way within pseudo-processes.</source>
          <target state="translated">Большинство функций Perl ведут себя естественным образом в рамках псевдо-процессов.</target>
        </trans-unit>
        <trans-unit id="cc5eff88f8f7c24acf735b42756c6ec6877ad919" translate="yes" xml:space="preserve">
          <source>Most Perl-related projects set up mailing lists for both users and contributors. If you don't see a certain project listed at &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt;, check the particular website for that project. Most mailing lists are archived at &lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/&lt;/a&gt;.</source>
          <target state="translated">В большинстве проектов, связанных с Perl, создаются списки рассылки как для пользователей, так и для участников. Если вы не видите определенный проект в списке на &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; , проверьте конкретный веб-сайт этого проекта. Большинство списков рассылки заархивировано на &lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b0a52de9bf06827eb244cce4b2303069fe873df" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; , and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt; . Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt; , &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; , and &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt; , &lt;code&gt;&quot;No&quot;&lt;/code&gt; , and &lt;code&gt;&quot;N&quot;&lt;/code&gt; . But be careful. A short form of a value for one property may not mean the same thing as the same short form for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; , but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class &lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt; . A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="translated">Большинство свойств символов Unicode имеют как минимум два синонима (или псевдонима, если хотите): короткий, который легче набирать, и более длинный, более описательный и, следовательно, более понятный. Таким образом, указанные выше свойства &lt;code&gt;&quot;L&quot;&lt;/code&gt; и &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; эквивалентны и могут использоваться взаимозаменяемо. Точно так же &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; является синонимом &amp;laquo;Верхний &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; , и мы могли бы написать &lt;code&gt;\p{Upper}&lt;/code&gt; &lt;code&gt;\p{Uppercase}&lt;/code&gt; эквивалентно как \ p {Верхний} . Кроме того, обычно существуют различные синонимы для значений, которыми может быть свойство. Для двоичных свойств &lt;code&gt;&quot;True&quot;&lt;/code&gt; имеет 3 синонима: &lt;code&gt;&quot;T&quot;&lt;/code&gt; , &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; и &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ; и &lt;code&gt;&quot;False&quot;&lt;/code&gt; соответственно имеет &lt;code&gt;&quot;F&quot;&lt;/code&gt; , &lt;code&gt;&quot;No&quot;&lt;/code&gt; и &lt;code&gt;&quot;N&quot;&lt;/code&gt; . Но будь осторожен. Краткая форма значения для одного свойства может не означать то же самое, что такая же краткая форма для другого. Таким образом, для свойства &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&quot;L&quot;&lt;/code&gt; означает &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; , а для свойства &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class &lt;/a&gt; &lt;code&gt;&quot;L&quot;&lt;/code&gt; означает &lt;code&gt;&quot;Left&quot;&lt;/code&gt; . Полный список свойств и синонимов находится в &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53043f2844348d956e6cb65224a0ae9814e3772c" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt;, and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt;. Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt;, &lt;code&gt;&quot;Yes&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Y&quot;&lt;/code&gt;; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt;, &lt;code&gt;&quot;No&quot;&lt;/code&gt;, and &lt;code&gt;&quot;N&quot;&lt;/code&gt;. But be careful. A short form of a value for one property may not mean the same thing as the short form spelled the same for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt;, but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;&lt;code&gt;Bidi_Class&lt;/code&gt;&lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt;. A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33601ec8592d8b99971745f555ad60f8af01ae0" translate="yes" xml:space="preserve">
          <source>Most Unicode properties have several synonymous names. Typically, there is at least a short name, convenient to type, and a long name that more fully describes the property, and hence is more easily understood.</source>
          <target state="translated">Большинство свойств Юникода имеют несколько синонимичных имён.Обычно существует как минимум короткое имя,удобное для ввода,и длинное имя,которое более полно описывает свойство,а значит,более понятно.</target>
        </trans-unit>
        <trans-unit id="c27a5f71254b1b3c6a849e7bef1eacb3f778bdb9" translate="yes" xml:space="preserve">
          <source>Most algorithms are only defined for strings of bytes and this method might therefore croak if the provided arguments contain chars with ordinal number above 255.</source>
          <target state="translated">Большинство алгоритмов определено только для строк байт,и поэтому этот метод может кричать,если приведенные аргументы содержат символы с порядковым номером выше 255.</target>
        </trans-unit>
        <trans-unit id="437ac38b2b73f7517fd2a5637f9c4e0ca58f6e94" translate="yes" xml:space="preserve">
          <source>Most behaviour, including environment variables and configuration, comes directly from CPAN.pm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283ae0258fda6ce570af6540f2c58627624b3cdb" translate="yes" xml:space="preserve">
          <source>Most callers of &lt;code&gt;cx_pushblock&lt;/code&gt; simply set the new args stack floor to the top of the previous stack frame, but for &lt;code&gt;CXt_LOOP_LIST&lt;/code&gt; it stores the items being iterated over on the stack, and so sets &lt;code&gt;blk_oldsp&lt;/code&gt; to the top of these items instead. Note that, contrary to its name, &lt;code&gt;blk_oldsp&lt;/code&gt; doesn't always represent the value to restore &lt;code&gt;PL_stack_sp&lt;/code&gt; to on scope exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83511857d278656d99d572ed9af8349be0ed8d8" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture.</source>
          <target state="translated">Большинство символов, которые являются метасимволами в регулярных выражениях (т. Е. Символы, которые имеют особое значение, например &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; Или &lt;code&gt;(&lt;/code&gt; ), теряют свое особое значение и могут использоваться внутри класса символов без необходимости их экранирования. Например, &lt;code&gt;[()]&lt;/code&gt; соответствует либо открывающей скобке, либо закрывающей скобке, а скобки внутри класса символов не группируются и не захватываются.</target>
        </trans-unit>
        <trans-unit id="662368a274868c093a1187793ee53785736a4eef" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture. Be aware that, unless the pattern is evaluated in single-quotish context, variable interpolation will take place before the bracketed class is parsed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f1bf80c368f3dc4a94d23cd008a9dbf44eec2" translate="yes" xml:space="preserve">
          <source>Most code should use &lt;code&gt;&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot;&lt;/a&gt;()&lt;/code&gt; rather than call this directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df73814a9b3dab0955308c1ef467807cec3d266" translate="yes" xml:space="preserve">
          <source>Most compiler backends use the following conventions: OPTIONS consists of a comma-separated list of words (no white-space). The &lt;code&gt;-v&lt;/code&gt; option usually puts the backend into verbose mode. The &lt;code&gt;-ofile&lt;/code&gt; option generates output to &lt;b&gt;file&lt;/b&gt; instead of stdout. The &lt;code&gt;-D&lt;/code&gt; option followed by various letters turns on various internal debugging flags. See the documentation for the desired backend (named &lt;code&gt;B::Backend&lt;/code&gt; for the example above) to find out about that backend.</source>
          <target state="translated">Большинство бэкэндов компилятора используют следующие соглашения: ОПЦИИ состоят из списка слов, разделенных запятыми (без пробелов). Параметр &lt;code&gt;-v&lt;/code&gt; обычно переводит серверную часть в подробный режим. Параметр &lt;code&gt;-ofile&lt;/code&gt; генерирует вывод в &lt;b&gt;файл&lt;/b&gt; вместо стандартного вывода . Параметр &lt;code&gt;-D&lt;/code&gt; , за которым следуют различные буквы, включает различные флаги внутренней отладки. См. Документацию по желаемому бэкэнду (названному &lt;code&gt;B::Backend&lt;/code&gt; в примере выше), чтобы узнать об этом бэкэнде.</target>
        </trans-unit>
        <trans-unit id="2ceb62989a1effad36bd037ec531f4c70cb866db" translate="yes" xml:space="preserve">
          <source>Most digest algorithms are byte based and for these it is not possible to add bits that are not a multiple of 8, and the add_bits() method will croak if you try.</source>
          <target state="translated">Большинство алгоритмов дайджеста основаны на байтах,и для них невозможно добавить биты,которые не кратны 8,и метод add_bits()перекроется при попытке.</target>
        </trans-unit>
        <trans-unit id="e8e0432f156912c28405beeb7541e8a07073675c" translate="yes" xml:space="preserve">
          <source>Most extensions (whether they require a C compiler or not) can be built, tested and installed with the standard mantra:</source>
          <target state="translated">Большинство расширений (независимо от того,требуется ли им компилятор Си или нет)можно собрать,протестировать и установить с помощью стандартной мантры:</target>
        </trans-unit>
        <trans-unit id="6c36d3b16152dc2e4c3eb43bb1840617dcd58c24" translate="yes" xml:space="preserve">
          <source>Most frequently called functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f7deae35b5b32265a212cc23f97fad9e01f8ca" translate="yes" xml:space="preserve">
          <source>Most functions in package CPAN are exported by default. The reason for this is that the primary use is intended for the cpan shell or for one-liners.</source>
          <target state="translated">Большинство функций в пакете CPAN экспортируется по умолчанию.Причина этого в том,что основное использование предназначено для оболочки cpan или для однослойных оболочек.</target>
        </trans-unit>
        <trans-unit id="7d52830eddc7f522e9b94c8937811fe2f95508ad" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;srand(42)&lt;/code&gt; will usually produce the same results as &lt;code&gt;srand(42.1)&lt;/code&gt;. To be safe, always pass &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5781421ac333dfdfd58bada47c5083697a175449" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">Большинство реализаций &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; принимают целое число и автоматически усекают десятичные числа. Это означает, что &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; обычно дает те же результаты, что и &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; . На всякий случай всегда передавайте &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; и целое число.</target>
        </trans-unit>
        <trans-unit id="405bded6ca944a37e6c3b479ff1de785ad3f9801" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">Большинство реализаций &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; принимают целое число и автоматически усекают десятичные числа. Это означает, что &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; обычно дает те же результаты, что и &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; . На всякий случай всегда передавайте &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; и целое число.</target>
        </trans-unit>
        <trans-unit id="5d6b5dfca3c0039899dcb7cae60483d04f370ee8" translate="yes" xml:space="preserve">
          <source>Most importantly, CPAN includes around a thousand unbundled modules, some of which require a C compiler to build. Major categories of modules are:</source>
          <target state="translated">Самое главное,CPAN включает в себя около тысячи разобранных модулей,для сборки некоторых из которых требуется компилятор Си.Основные категории модулей:</target>
        </trans-unit>
        <trans-unit id="acf589d2649f04394cc8c6cda103470ec97cfc12" translate="yes" xml:space="preserve">
          <source>Most importantly, choose modules which are as stable as possible. In order of preference:</source>
          <target state="translated">Самое главное-выбрать модули,которые максимально стабильны.В порядке предпочтения:</target>
        </trans-unit>
        <trans-unit id="2a11d2785522a93f5420fa16470f086a6da1b3ea" translate="yes" xml:space="preserve">
          <source>Most mentioned distributions are depots. H.Merijn Brand has made prebuilt gcc binaries available on &lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt; and/or &lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/&lt;/a&gt; for HP-UX 10.20 (only 32bit), HP-UX 11.00, HP-UX 11.11 (HP-UX 11i v1), and HP-UX 11.23 (HP-UX 11i v2 PA-RISC) in both 32- and 64-bit versions. For HP-UX 11.23 IPF and HP-UX 11.31 IPF depots are available too. The IPF versions do not need two versions of GNU gcc.</source>
          <target state="translated">Большинство упомянутых рассылок - это депо. Компания H.Merijn Brand сделала готовые двоичные файлы gcc, доступные на &lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt; и / или &lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/&lt;/a&gt; для HP-UX 10.20 (только 32-разрядная версия), HP -UX 11.00, HP-UX 11.11 (HP-UX 11i v1) и HP-UX 11.23 (HP-UX 11i v2 PA-RISC) как в 32-, так и в 64-битных версиях. Для HP-UX 11.23 IPF и HP-UX 11.31 IPF также доступны депо. Версии IPF не нуждаются в двух версиях GNU gcc.</target>
        </trans-unit>
        <trans-unit id="236aab386cc9ca4c5e8adffaa67e969c764a4805" translate="yes" xml:space="preserve">
          <source>Most methods you write will expect to operate on objects:</source>
          <target state="translated">Большинство методов,которые вы напишете,будут работать с объектами:</target>
        </trans-unit>
        <trans-unit id="e42995ec64ef087af8c046e70f5daf6eb0079f02" translate="yes" xml:space="preserve">
          <source>Most modern X terminal emulators support 256 colors. Known to not support those colors are aterm, rxvt, Terminal.app, and TTY/VC.</source>
          <target state="translated">Большинство современных терминальных эмуляторов X поддерживают 256 цветов.Известно,что не поддерживают эти цвета:aterm,rxvt,Terminal.app и TTY/VC.</target>
        </trans-unit>
        <trans-unit id="09fdc7d65b76d3e363653e14537a18e5aea28f56" translate="yes" xml:space="preserve">
          <source>Most modern operating systems support preemptive multitasking nowadays.</source>
          <target state="translated">Большинство современных операционных систем сегодня поддерживают упреждающую многозадачность.</target>
        </trans-unit>
        <trans-unit id="1d45edd059b4e41b42c3589d6e9743f7467d5f99" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;//i&lt;/code&gt; , &lt;code&gt;//m&lt;/code&gt; , &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="translated">Большинство модификаторов, таких как &lt;code&gt;//i&lt;/code&gt; , &lt;code&gt;//m&lt;/code&gt; , &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//x&lt;/code&gt; (или любая их комбинация), также могут быть встроены в регулярное выражение с помощью &lt;code&gt;(?i)&lt;/code&gt; , &lt;code&gt;(?m)&lt;/code&gt; , &lt;code&gt;(?s)&lt;/code&gt; и &lt;code&gt;(?x)&lt;/code&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="72e8bb708217ae322b446e074e5a34e7c96fe06c" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;/i&lt;/code&gt;, &lt;code&gt;/m&lt;/code&gt;, &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac5f91bfd266adf35f3c08ec6bb8cde72e4223" translate="yes" xml:space="preserve">
          <source>Most multi-user platforms provide basic levels of security, usually implemented at the filesystem level. Some, however, unfortunately do not. Thus the notion of user id, or &quot;home&quot; directory, or even the state of being logged-in, may be unrecognizable on many platforms. If you write programs that are security-conscious, it is usually best to know what type of system you will be running under so that you can write code explicitly for that platform (or class of platforms).</source>
          <target state="translated">Большинство многопользовательских платформ обеспечивают базовые уровни безопасности,обычно реализованные на уровне файловой системы.Некоторые,к сожалению,этого не делают.Таким образом,понятие идентификатора пользователя,или &quot;домашнего&quot; каталога,или даже состояние входа в систему может быть неузнаваемым на многих платформах.Если вы пишете программы,ориентированные на безопасность,то,как правило,лучше всего знать,под каким типом системы вы будете работать,чтобы можно было писать код явно для этой платформы (или класса платформ).</target>
        </trans-unit>
        <trans-unit id="4f6011591757af844f16df1e5c9352c7848a6ec4" translate="yes" xml:space="preserve">
          <source>Most non-EBCDIC character sets are supersets of ASCII. That is the integers 0-127 mean what ASCII says they mean. But integers 128 and above are specific to the character set.</source>
          <target state="translated">Большинство не-EBCDIC наборов символов являются суперсетами ASCII.То есть целые числа 0-127 означают то,что ASCII говорит,что они означают.Но целые числа 128 и выше специфичны для набора символов.</target>
        </trans-unit>
        <trans-unit id="51ca37247d6a69603fb3b1446157e03d96bfa6df" translate="yes" xml:space="preserve">
          <source>Most notable problems:</source>
          <target state="translated">Самые заметные проблемы:</target>
        </trans-unit>
        <trans-unit id="f57027e07ab6e59e959c6b528e3378204e633471" translate="yes" xml:space="preserve">
          <source>Most object systems share a number of common concepts. You've probably heard terms like &quot;class&quot;, &quot;object, &quot;method&quot;, and &quot;attribute&quot; before. Understanding the concepts will make it much easier to read and write object-oriented code. If you're already familiar with these terms, you should still skim this section, since it explains each concept in terms of Perl's OO implementation.</source>
          <target state="translated">Большинство объектных систем имеют ряд общих концепций.Вы,наверное,уже слышали такие термины,как &quot;класс&quot;,&quot;объект&quot;,&quot;метод&quot; и &quot;атрибут&quot;.Понимание этих понятий значительно облегчит чтение и написание объектно-ориентированного кода.Если вы уже знакомы с этими терминами,вам все равно стоит пропустить этот раздел,так как в нем каждая концепция объяснена с точки зрения реализации ООО на Perl.</target>
        </trans-unit>
        <trans-unit id="fe5befa620ff0477f0ac6ba4b4534580f30f2e1e" translate="yes" xml:space="preserve">
          <source>Most obviously, there is the necessity of retrieving the reference address of an object for each data access. It's a minor inconvenience, but it does clutter the code.</source>
          <target state="translated">Очевидно,что для каждого доступа к данным существует необходимость получения ссылочного адреса объекта.Это небольшое неудобство,но это действительно загромождает код.</target>
        </trans-unit>
        <trans-unit id="8966ee4f610a8f12b38c297e5e0e0d5c4c1631d5" translate="yes" xml:space="preserve">
          <source>Most of Params::Check's power comes from its template, which we'll discuss below:</source>
          <target state="translated">Большинство Params::Check's power происходит из его шаблона,о котором мы поговорим ниже:</target>
        </trans-unit>
        <trans-unit id="a5d752e99b47aeed7fefeb002f25a1df93361a60" translate="yes" xml:space="preserve">
          <source>Most of the &lt;code&gt;canonical names&lt;/code&gt; in Encode derive from this list so you can directly apply the string you have extracted from MIME header of mails and web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e899784ab7672ad3b74081e22274bde79fba73" translate="yes" xml:space="preserve">
          <source>Most of the code here was lifted straight from Test::Builder and then had chunks removed by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05844436a81cb2d0dbddab3388c8acb9552fbf" translate="yes" xml:space="preserve">
          <source>Most of the code here was written by Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;.</source>
          <target state="translated">Большая часть кода здесь написана Рэнди В. Симсом &amp;lt;RandyS@ThePierianSpring.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="47b295d947239a228d57f7cff4fa724418821ca3" translate="yes" xml:space="preserve">
          <source>Most of the complete Perl resides in the shareable image</source>
          <target state="translated">Большая часть полного Perl находится в разделяемом изображении.</target>
        </trans-unit>
        <trans-unit id="6e836cc0136a0b6a1e328a42911e15475ce7f8a0" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="translated">Большая часть сложности &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; функции заключается в множестве возможных значений, которые</target>
        </trans-unit>
        <trans-unit id="e8c86ea6cb467b77003f8f36467638e3bb201553" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;open&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2242570cf48131ca1026e727ff73cf14992345d6" translate="yes" xml:space="preserve">
          <source>Most of the documentation is taken from JSON::XS by Marc Lehmann</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a21567ca84f5f746c9675299dce59640ed18c1d" translate="yes" xml:space="preserve">
          <source>Most of the keywords are self-explanatory.</source>
          <target state="translated">Большинство ключевых слов понятны самим себе.</target>
        </trans-unit>
        <trans-unit id="baa8cd3bbb4c6980245c7cf3aa023db27c3acdb3" translate="yes" xml:space="preserve">
          <source>Most of the libgdbm.a functions are available through the GDBM_File interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25843b853d505c1784c9a338be9b1a848cd1212" translate="yes" xml:space="preserve">
          <source>Most of the libnet client classes allow options to be passed to the constructor, in most cases one option is called &lt;code&gt;Debug&lt;/code&gt;. Passing this option with a non-zero value will turn on a protocol trace, which will be sent to STDERR. This trace can be useful to see what commands are being sent to the remote server and what responses are being received back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31689cece88e6009d6abbf1122159fef235d148d" translate="yes" xml:space="preserve">
          <source>Most of the metacharacters aren't always special, and other characters (such as the ones delimitting the pattern) become special under various circumstances. This can be confusing and lead to unexpected results. &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; can notify you of potential pitfalls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e872c4c8b4e46b1a126dccfdf045e22c43bfe9" translate="yes" xml:space="preserve">
          <source>Most of the other Opcode functions call verify_opset automatically and will croak if given an invalid opset.</source>
          <target state="translated">Большинство других функций Opcode автоматически вызывают verify_opset и при неправильном опсете перекроется.</target>
        </trans-unit>
        <trans-unit id="7be58e4167c6f6d21daa45117bbd585a46416c25" translate="yes" xml:space="preserve">
          <source>Most of the overloadable operators map one-to-one to these keys. Exceptions, including additional overloadable operations not apparent from this hash, are included in the notes which follow. This list is subject to growth over time.</source>
          <target state="translated">Большинство перегруженных операторов сопоставляют эти клавиши один к одному.Исключения,в том числе дополнительные перегрузочные операции,не явные из этого хэша,включены в примечания,которые следуют далее.Этот список со временем может увеличиваться.</target>
        </trans-unit>
        <trans-unit id="6cede88fd0fdf454c10d7b4cebb77c726e122f53" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt; , that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; . (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Smartmatch Operator in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="translated">Большая часть возможностей исходит от неявного интеллектуального сопоставления, которое иногда может применяться. В большинстве случаев, &lt;code&gt;when(EXPR)&lt;/code&gt; рассматривается как неявное интеллектуальное соответствие &lt;code&gt;$_&lt;/code&gt; , то есть &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; . (См. &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Оператор Smartmatch в perlop&lt;/a&gt; для получения дополнительной информации о smartmatching.) Но когда</target>
        </trans-unit>
        <trans-unit id="60478a66b6d520d807ea697e7540d94eb0418ec5" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt;, that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt;. (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;&quot;Smartmatch Operator&quot; in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a01cac94bf76dedfa60add1a18fb4b2e641b31" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 15924 four-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться четырехбуквенные коды по умолчанию ISO 15924.</target>
        </trans-unit>
        <trans-unit id="1e2964ea3d337ce474ce4e845493df4592e50a50" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 3166-1 two-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться двубуквенные коды по умолчанию ISO 3166-1.</target>
        </trans-unit>
        <trans-unit id="c51fe921a01a7d85e172a82dee63cf013d880282" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 4217 three-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться трехбуквенные коды по умолчанию ISO 4217.</target>
        </trans-unit>
        <trans-unit id="ad65d964877735755761a49062026c5cbfd01a4c" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 639 two-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться двубуквенные коды по умолчанию ISO 639.</target>
        </trans-unit>
        <trans-unit id="ecfd9a8718bf7f9a8bea5531a84bc0b93eebafb4" translate="yes" xml:space="preserve">
          <source>Most of the special variables related to regular expressions are side effects. Perl sets these variables when it has a successful match, so you should check the match result before using them. For instance:</source>
          <target state="translated">Большинство специальных переменных,связанных с регулярными выражениями,являются побочными эффектами.Perl устанавливает эти переменные при успешном совпадении,поэтому перед их использованием необходимо проверить результат совпадений.Например:</target>
        </trans-unit>
        <trans-unit id="dd8324ae92ad5052d02cf97e850674cb89e9ea59" translate="yes" xml:space="preserve">
          <source>Most of the time the &lt;code&gt;POP*&lt;/code&gt; macros should be adequate; the main problem with them is that they force you to process the returned values in sequence. This may not be the most suitable way to process the values in some cases. What we want is to be able to access the stack in a random order. The &lt;code&gt;ST&lt;/code&gt; macro as used when coding an XSUB is ideal for this purpose.</source>
          <target state="translated">В большинстве случаев макросов &lt;code&gt;POP*&lt;/code&gt; должно быть достаточно; Основная проблема с ними в том, что они заставляют вас последовательно обрабатывать возвращаемые значения. В некоторых случаях это может быть не самый подходящий способ обработки значений. Мы хотим иметь доступ к стеку в случайном порядке. &lt;code&gt;ST&lt;/code&gt; макро, используемые при кодировании XSUB идеально подходят для этой цели.</target>
        </trans-unit>
        <trans-unit id="2df244eb4bef5a0bc68e79be4405c972c5f0e791" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="translated">В большинстве случаев вам не нужно делать это как веб-фреймворк, или, если вы делаете запрос, &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; или другой модуль обработает его за вас.</target>
        </trans-unit>
        <trans-unit id="48c7e054216d49d1fb2b20eca1334fe1da06b743" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;lwp&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ac7b91ccda75dc1e9e26906f34a6b74bf2fc1" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;code&gt;die&lt;/code&gt; is called with a string to use as the exception. You may either give a single non-reference operand to serve as the exception, or a list of two or more items, which will be stringified and concatenated to make the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6eb8148850007d8fa7e26443b2a04c22c7a11f" translate="yes" xml:space="preserve">
          <source>Most of the time, all this moving forward and backtracking happens quickly and searching is fast. There are some pathological regexps, however, whose execution time exponentially grows with the size of the string. A typical structure that blows up in your face is of the form</source>
          <target state="translated">Большую часть времени,все это движение вперед и назад происходит быстро,и поиск происходит быстро.Есть,однако,и патологические регеxps,время исполнения которых экспоненциально растет с размером строки.Типичная структура,которая взрывается перед вашим лицом,имеет форму</target>
        </trans-unit>
        <trans-unit id="e77fec64b4c635ea20e1b59e3b7d5f77ce28d8e0" translate="yes" xml:space="preserve">
          <source>Most of the time, output from the C routine can be handled through use of the RETVAL and OUTPUT directives. However, there are some cases where the argument stack is not already long enough to handle all the return values. An example is the POSIX tzname() call, which takes no arguments, but returns two, the local time zone's standard and summer time abbreviations.</source>
          <target state="translated">Большую часть времени выходные данные из рутины C могут быть обработаны с помощью директив RETVAL и OUTPUT.Однако,бывают случаи,когда стека аргументов уже недостаточно для обработки всех возвращаемых значений.Примером является вызов POSIX tzname(),который не принимает аргументов,но возвращает два-стандартное и летнее время локального часового пояса.</target>
        </trans-unit>
        <trans-unit id="4cf605ff0085f7cdb0263cf668764df45a3b6647" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;//m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;$&lt;/code&gt; ), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="translated">В большинстве случаев поведение по умолчанию - это то, что нужно, но &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//m&lt;/code&gt; иногда очень полезны. Если используется &lt;code&gt;//m&lt;/code&gt; , начало строки все еще может быть сопоставлено с &lt;code&gt;\A&lt;/code&gt; а конец строки может быть сопоставлен с привязкой &lt;code&gt;\Z&lt;/code&gt; (совпадает как с концом, так и с новой строкой перед, как &lt;code&gt;$&lt;/code&gt; ), и &lt;code&gt;\z&lt;/code&gt; (соответствует только концу):</target>
        </trans-unit>
        <trans-unit id="89315b4d91e89302d070cbd7a7e6cdb9cab0b050" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;/m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;'$'&lt;/code&gt;), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fd6c425f6aad23df3156037ea683dfee498467" translate="yes" xml:space="preserve">
          <source>Most of the time, the longest possible text that does not include spaces between components and which contains matching braces or brackets. because the outcome may be determined by voting based on heuristic estimators, the result is not strictly predictable. Fortunately, it's usually correct for ambiguous cases.</source>
          <target state="translated">В большинстве случаев самый длинный текст,не содержащий пробелов между компонентами и содержащий соответствующие скобки или скобки.так как результат может быть определен путем голосования на основе эвристических оценок,результат не является строго предсказуемым.К счастью,обычно он верен в неоднозначных случаях.</target>
        </trans-unit>
        <trans-unit id="b3fb5476790113a0dea04a1d528889b51b315f83" translate="yes" xml:space="preserve">
          <source>Most of the time, this warning occurs when a byte-string is concatenated with a unicode-string. There are a number of ways to solve it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faff5fae267b68e66a542eebf06c3a2fb20f6315" translate="yes" xml:space="preserve">
          <source>Most of the time, though, you'll want to be dealing with SVs internally instead of raw &lt;code&gt;char *&lt;/code&gt; strings:</source>
          <target state="translated">Однако в большинстве случаев вам нужно иметь дело с SV внутри себя, а не с необработанными строками &lt;code&gt;char *&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3da35f6fb8f67dff58b56670aaa5e754c6ece5e" translate="yes" xml:space="preserve">
          <source>Most of the time, you shouldn't care what package an object is blessed into, however, as long as it claims to inherit from that class:</source>
          <target state="translated">В большинстве случаев,однако,вас не должно волновать,в какой пакет благословен тот или иной объект,если он утверждает,что унаследовал от этого класса:</target>
        </trans-unit>
        <trans-unit id="70ed3f1e9ec3872fc596a127d78b3433084d76ac" translate="yes" xml:space="preserve">
          <source>Most of the time, you will need only a single set of angle brackets to delimit the beginning and end of formatting codes. However, sometimes you will want to put a real right angle bracket (a greater-than sign, '&amp;gt;') inside of a formatting code. This is particularly common when using a formatting code to provide a different font-type for a snippet of code. As with all things in Perl, there is more than one way to do it. One way is to simply escape the closing bracket using an &lt;code&gt;E&lt;/code&gt; code:</source>
          <target state="translated">В большинстве случаев вам понадобится только один набор угловых скобок для разграничения начала и конца кодов форматирования. Однако иногда вам может понадобиться поместить настоящую правую угловую скобку (знак &amp;laquo;больше&amp;raquo;, &amp;laquo;&amp;gt;&amp;raquo;) внутри кода форматирования. Это особенно часто встречается при использовании кода форматирования для предоставления другого типа шрифта для фрагмента кода. Как и все в Perl, есть несколько способов сделать это. Один из способов - просто выйти из закрывающей скобки с помощью кода &lt;code&gt;E&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c0c2da0623840fbe23f26b030382d27c35d7bca2" translate="yes" xml:space="preserve">
          <source>Most of the work involved in both rounding up a suitable set of candidate commits and cherry-picking those for which three votes have been cast will be done by the maint branch release manager, but anyone else is free to add other proposals if they're keen to ensure certain fixes don't get overlooked or fear they already have been.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a76b549a2e76bc9ab35aacf508ff92c207228" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;), sockets (&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt; and &lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;), and directory handles (&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt; , though it is deprecated as of 5.8.0. If deprecation warnings are in effect, it will warn of its use.</source>
          <target state="translated">Большинство из них говорят сами за себя, но &lt;code&gt;*foo{IO}&lt;/code&gt; заслуживает особого внимания. Он возвращает дескриптор ввода-вывода, используемый для дескрипторов файлов ( &lt;a href=&quot;functions/open&quot;&gt;открытых&lt;/a&gt; ), сокетов ( &lt;a href=&quot;functions/socket&quot;&gt;сокетов&lt;/a&gt; и &lt;a href=&quot;functions/socketpair&quot;&gt;пар сокетов&lt;/a&gt; ) и дескрипторов каталогов ( &lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt; ). Для совместимости с предыдущими версиями Perl &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; является синонимом &lt;code&gt;*foo{IO}&lt;/code&gt; , хотя в версии 5.8.0 он устарел. Если действуют предупреждения об устаревании, он предупредит о его использовании.</target>
        </trans-unit>
        <trans-unit id="852ae11a8260d83d3745e4dd9b3fd5be0e936389" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;), sockets (&lt;a href=&quot;perlfunc#socket&quot;&gt;&quot;socket&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#socketpair&quot;&gt;&quot;socketpair&quot; in perlfunc&lt;/a&gt;), and directory handles (&lt;a href=&quot;perlfunc#opendir&quot;&gt;&quot;opendir&quot; in perlfunc&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt;, though it is discouraged, to encourage a consistent use of one name: IO. On perls between v5.8 and v5.22, it will issue a deprecation warning, but this deprecation has since been rescinded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869a6315acbbfb1f37efec8298474bbe72ca1495" translate="yes" xml:space="preserve">
          <source>Most of these books are available online through Safari Books Online ( &lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt; ).</source>
          <target state="translated">Большинство этих книг доступны в Интернете через Интернет-версию Safari ( &lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b1e0ab2dbc899b58b14484449b9fa1ef61ed05b" translate="yes" xml:space="preserve">
          <source>Most of these examples taken from the current edition of the &amp;ldquo;Camel Book&amp;rdquo;; that is, from the 4ᵗʰ Edition of</source>
          <target state="translated">Большинство этих примеров взято из текущего издания &amp;laquo;Книги верблюдов&amp;raquo;; то есть из 4ᵗʰ издания</target>
        </trans-unit>
        <trans-unit id="24aedca2a61e00a967c1839f41c7571c0b40465f" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;&quot;Background and PERL_IMPLICIT_CONTEXT&quot; in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d786698e017d5ef7ad504f1d9efc84667a246c11" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="translated">Большинство этих макросов объясняются в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; , а некоторые из наиболее важных также объясняются в &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; . Обратите особое внимание на &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background и PERL_IMPLICIT_CONTEXT в perlguts&lt;/a&gt; для получения информации о &lt;code&gt;[pad]THX_?&lt;/code&gt; макросы.</target>
        </trans-unit>
        <trans-unit id="028b0ff743d4839b575a9715a3960dc1ea4b9750" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6321c8bc65f6128425ae15e80b31cb962b1699f" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell. Mostly its lack of &amp;amp;&amp;amp;.</source>
          <target state="translated">Большинство из них компенсируют ограничения командной оболочки Win9x / nmake. В основном это отсутствие &amp;amp;&amp;amp;.</target>
        </trans-unit>
        <trans-unit id="30b8e48b7b6d88d36a47fc7a0d1827819d55e75f" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="translated">Большинство этих подпрограмм тихо, но вежливо возвращают &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , когда они терпят неудачу, вместо того, чтобы заставить вашу программу немедленно умереть из-за неперехваченного исключения. (Собственно, некоторые из новых</target>
        </trans-unit>
        <trans-unit id="9a0bed061702626e79ddbe0cbac46eae45c7bc32" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;undef&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fac36536fdd9d69b572662cd260a78171c7378" translate="yes" xml:space="preserve">
          <source>Most of this section is also taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2deedfc22b1548df052896f1f0722aefc9eea1ec" translate="yes" xml:space="preserve">
          <source>Most often, &lt;code&gt;open&lt;/code&gt; gets invoked with three arguments: the required FILEHANDLE (usually an empty scalar variable), followed by MODE (usually a literal describing the I/O mode the filehandle will use), and then the filename that the new filehandle will refer to.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
