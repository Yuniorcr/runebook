<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="f40c24735c228769cecae3c743dcd1c13b34fed1" translate="yes" xml:space="preserve">
          <source>To summarize, this modifier provides protection for applications that don't wish to be exposed to all of Unicode. Specifying it twice gives added protection.</source>
          <target state="translated">Подводя итог,можно сказать,что этот модификатор обеспечивает защиту приложений,которые не желают подвергаться воздействию всего Юникода.Дважды указав его,вы получите дополнительную защиту.</target>
        </trans-unit>
        <trans-unit id="8b52f75bf07c40cc3e2dd50eeec591de76cf40c0" translate="yes" xml:space="preserve">
          <source>To support potentially complex type mappings, if a typemap entry used by an XSUB contains a comment like &lt;code&gt;/*scope*/&lt;/code&gt; then scoping will be automatically enabled for that XSUB.</source>
          <target state="translated">Для поддержки потенциально сложных сопоставлений типов, если запись typemap, используемая XSUB, содержит комментарий, например &lt;code&gt;/*scope*/&lt;/code&gt; , тогда для этого XSUB будет автоматически включена область видимости.</target>
        </trans-unit>
        <trans-unit id="91686b6431594592a741d6ffaa933cf36c582cbb" translate="yes" xml:space="preserve">
          <source>To support the &lt;code&gt;IO::Socket::INET&lt;/code&gt; API, the host and port information may be passed in a single string rather than as two separate arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8462b0ae01f912ec184e35a1a54c294d3db9c0b" translate="yes" xml:space="preserve">
          <source>To support these systems a dl_expandspec() function can be implemented either in the</source>
          <target state="translated">Для поддержки этих систем функция dl_expandspec()может быть реализована как в функции</target>
        </trans-unit>
        <trans-unit id="28ae7b79101a8be6ce604e7c61e718194e3e904d" translate="yes" xml:space="preserve">
          <source>To swap pairs of characters in a string (with even length) one could use several techniques. First, let's use &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;X&lt;/code&gt; to skip forward and back:</source>
          <target state="translated">Чтобы поменять местами пары символов в строке (с одинаковой длиной), можно использовать несколько приемов. Во-первых, давайте использовать &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;X&lt;/code&gt; для перехода вперед и назад:</target>
        </trans-unit>
        <trans-unit id="1051c83149c4c36730f97e1db8ce4187ba11feed" translate="yes" xml:space="preserve">
          <source>To switch back to blead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ed4dc484d91fd5d94539987c6af1829eb4d58f" translate="yes" xml:space="preserve">
          <source>To switch back to the default behaviour, use</source>
          <target state="translated">Чтобы вернуться к поведению по умолчанию,используйте</target>
        </trans-unit>
        <trans-unit id="58f194a064ccb257aaff951da440487e80ed0887" translate="yes" xml:space="preserve">
          <source>To take a closer look at how the engine does optimizations, see the section &lt;a href=&quot;#Pragmas-and-debugging&quot;&gt;&quot;Pragmas and debugging&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad4d27e66821295806e39cdf16c87b63c90f1ed" translate="yes" xml:space="preserve">
          <source>To take a closer look at how the engine does optimizations, see the section &lt;a href=&quot;#Pragmas-and-debugging&quot;&gt;Pragmas and debugging&lt;/a&gt; below.</source>
          <target state="translated">Чтобы подробнее узнать, как движок выполняет оптимизацию, см. Раздел &amp;laquo; &lt;a href=&quot;#Pragmas-and-debugging&quot;&gt;Прагмы и отладка&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="b4f5b8181a41c615c87aa14a36a9140e586c5541" translate="yes" xml:space="preserve">
          <source>To tell PerlIO to use line buffer, implement -&amp;gt;needs_lines method for your encoding object. See &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode::Encoding&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3651fac40bf38f464aae40f7d0973a874e0f3ea" translate="yes" xml:space="preserve">
          <source>To test that your code is behaving correctly and not modifying COW buffers, on systems that support</source>
          <target state="translated">Проверить,что Ваш код ведет себя корректно и не модифицирует COW буферы,на системах,поддерживающих</target>
        </trans-unit>
        <trans-unit id="9bfb4f72eb168db2a7d20587450847a727ac1bdf" translate="yes" xml:space="preserve">
          <source>To test that your code is behaving correctly and not modifying COW buffers, on systems that support &lt;a href=&quot;http://man.he.net/man2/mmap&quot;&gt;mmap(2)&lt;/a&gt; (i.e., Unix) you can configure perl with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; and it will turn buffer violations into crashes. You will find it to be marvellously slow, so you may want to skip perl's own tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce0bdd874392ab18a8e9a217e048b7e9971ae31" translate="yes" xml:space="preserve">
          <source>To test whether a variable contains tainted data, and whose use would thus trigger an &quot;Insecure dependency&quot; message, you can use the &lt;code&gt;tainted()&lt;/code&gt; function of the Scalar::Util module, available in your nearby CPAN mirror, and included in Perl starting from the release 5.8.0. Or you may be able to use the following &lt;code&gt;is_tainted()&lt;/code&gt; function.</source>
          <target state="translated">Чтобы проверить, содержит ли переменная испорченные данные и чье использование, таким образом, вызовет сообщение &amp;laquo;Небезопасная зависимость&amp;raquo;, вы можете использовать функцию &lt;code&gt;tainted()&lt;/code&gt; модуля Scalar :: Util, доступную в вашем ближайшем зеркале CPAN и включенную в Perl, начиная с из выпуска 5.8.0. Или вы можете использовать следующую &lt;code&gt;is_tainted()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="521a49c8c35183a9a627a2f63a5d516c8a7cf5ba" translate="yes" xml:space="preserve">
          <source>To the Perl program that called fork(), all this is designed to be transparent. The parent returns from the fork() with a pseudo-process ID that can be subsequently used in any process-manipulation functions; the child returns from the fork() with a value of &lt;code&gt;0&lt;/code&gt; to signify that it is the child pseudo-process.</source>
          <target state="translated">Для программы Perl, которая вызвала fork (), все это должно быть прозрачным. Родитель возвращается из fork () с идентификатором псевдопроцесса, который впоследствии может быть использован в любых функциях управления процессом; потомок возвращается из fork () со значением &lt;code&gt;0&lt;/code&gt; , что означает, что это дочерний псевдопроцесс.</target>
        </trans-unit>
        <trans-unit id="c7e05b4fcf627d6e6c4197f19ffda73a879c664a" translate="yes" xml:space="preserve">
          <source>To the best of our ability, we will attempt to fix critical issues in the two most recent stable 5.x release series. Fixes for the current release series take precedence over fixes for the previous release series.</source>
          <target state="translated">В меру своих возможностей мы постараемся исправить критические проблемы в двух последних стабильных релизах серии 5.x.Исправления для текущей серии релиза имеют приоритет над исправлениями для предыдущей серии.</target>
        </trans-unit>
        <trans-unit id="51a0f8c69bc4919eb0f20691df0fe50a577785df" translate="yes" xml:space="preserve">
          <source>To the best of our ability, we will provide &quot;critical&quot; security patches / releases for any major version of Perl whose 5.x.0 release was within the past three years. We can only commit to providing these for the most recent .y release in any 5.x.y series.</source>
          <target state="translated">В меру наших возможностей,мы будем предоставлять &quot;критические&quot; исправления/релизы безопасности для любой основной версии Perl,чей релиз 5.x.0 был в течение последних трех лет.Мы можем предоставить их только для последнего релиза .y из любой серии 5.x.y.</target>
        </trans-unit>
        <trans-unit id="0150808aeae45323caf819f2a13c1da7ff5a8491" translate="yes" xml:space="preserve">
          <source>To the extent possible under law, 唐鳳 has waived all copyright and related or neighboring rights to &lt;a href=&quot;test-use-ok&quot;&gt;Test-use-ok&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa12fa0dac95b52f8a74aca03b7455d8e9dea13" translate="yes" xml:space="preserve">
          <source>To throw away the current &lt;b&gt;process&lt;/b&gt;&amp;rsquo;s program and replace it with another, without exiting the process or relinquishing any resources held (apart from the old memory image).</source>
          <target state="translated">Чтобы выбросить программу текущего &lt;b&gt;процесса&lt;/b&gt; и заменить ее другой, не выходя из процесса или не отказываясь от любых удерживаемых ресурсов (кроме старого образа в памяти).</target>
        </trans-unit>
        <trans-unit id="f643f5e924090f3cdd5f1a59fb90c2d5e840c683" translate="yes" xml:space="preserve">
          <source>To transfer files without &amp;lt;LF&amp;gt;&amp;lt;CR&amp;gt; translation Net::FTP provides the &lt;code&gt;binary&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448a61a17f3cda496b5d3ba49da88ff7c85062ed" translate="yes" xml:space="preserve">
          <source>To transform a bit vector into a string or list of 0's and 1's, use these:</source>
          <target state="translated">Чтобы преобразовать битовый вектор в строку или список 0 и 1,используйте эти:</target>
        </trans-unit>
        <trans-unit id="52d3ead3184110f1e5fce1f1092454c6b16a6c41" translate="yes" xml:space="preserve">
          <source>To translate from and to an arbitrary text encoding, use the &lt;code&gt;:encoding&lt;/code&gt; layer. The matching of encoding names in &lt;code&gt;:encoding&lt;/code&gt; is loose: case does not matter, and many encodings have several aliases. See &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt; for details and the list of supported locales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944acb39535fd8c95944433695337f030097b9f4" translate="yes" xml:space="preserve">
          <source>To trim trailing newlines from text lines use &lt;a href=&quot;perlfunc#chomp-VARIABLE&quot;&gt;&lt;code&gt;chomp&lt;/code&gt;&lt;/a&gt;. With default settings that function looks for a trailing &lt;code&gt;\n&lt;/code&gt; character and thus trims in a portable way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6d675a384b336013b57ff889fd3d31ada57c0a" translate="yes" xml:space="preserve">
          <source>To trim trailing newlines from text lines use &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt;. With default settings that function looks for a trailing &lt;code&gt;\n&lt;/code&gt; character and thus trims in a portable way.</source>
          <target state="translated">Чтобы обрезать завершающие символы новой строки из текстовых строк, используйте &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt; . При настройках по умолчанию эта функция ищет завершающий символ &lt;code&gt;\n&lt;/code&gt; и, таким образом, выполняет обрезку переносимым способом.</target>
        </trans-unit>
        <trans-unit id="fc544de4b36caa59d370fbe1d58c57b2dd4e85a5" translate="yes" xml:space="preserve">
          <source>To try dmake's parallel mode, type &quot;dmake -P2&quot;, where 2, is the maximum number of parallel jobs you want to run. A number of things in the build process will run in parallel, but there are serialization points where you will see just 1 CPU maxed out. This is normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f27a2565b48c1f61edc1951aa27946b5ec4637" translate="yes" xml:space="preserve">
          <source>To turn a hostname into a human-readable plain IP address use getaddrinfo() to turn the hostname into a list of socket structures, then getnameinfo() on each one to make it a readable IP address again.</source>
          <target state="translated">Чтобы превратить имя хоста в читаемый человеком простой IP-адрес,используйте getaddrinfo(),чтобы превратить имя хоста в список структур сокетов,затем getnameinfo()на каждом из них,чтобы сделать его снова читаемым IP-адресом.</target>
        </trans-unit>
        <trans-unit id="f7838aca863be2066e77c33f9ec760e481423363" translate="yes" xml:space="preserve">
          <source>To turn one string representation into another by mapping each character of the source string to its corresponding character in the result string. Not to be confused with translation: for example, Greek</source>
          <target state="translated">Превратить одно строковое представление в другое путем сопоставления каждого символа исходной строки с соответствующим ему символом в строке результата.Не путать с переводом:например,Greek</target>
        </trans-unit>
        <trans-unit id="2796f222a72ab401559f8c49bff573c8aee5f84f" translate="yes" xml:space="preserve">
          <source>To unambiguously refer to the built-in form, precede the built-in name with the special package qualifier &lt;code&gt;CORE::&lt;/code&gt; . For example, saying &lt;code&gt;CORE::open()&lt;/code&gt; always refers to the built-in &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;, even if the current package has imported some other subroutine called &lt;code&gt;&amp;amp;open()&lt;/code&gt; from elsewhere. Even though it looks like a regular function call, it isn't: the CORE:: prefix in that case is part of Perl's syntax, and works for any keyword, regardless of what is in the CORE package. Taking a reference to it, that is, &lt;code&gt;\&amp;amp;CORE::open&lt;/code&gt; , only works for some keywords. See &lt;a href=&quot;core&quot;&gt;CORE&lt;/a&gt;.</source>
          <target state="translated">Чтобы однозначно ссылаться на встроенную форму, перед встроенным именем &lt;code&gt;CORE::&lt;/code&gt; специальный квалификатор пакета CORE :: . Например, выражение &lt;code&gt;CORE::open()&lt;/code&gt; всегда относится к встроенному &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; , даже если текущий пакет импортировал какую-то другую подпрограмму под названием &lt;code&gt;&amp;amp;open()&lt;/code&gt; из другого места. Несмотря на то, что это выглядит как обычный вызов функции, это не так: префикс CORE :: в этом случае является частью синтаксиса Perl и работает для любого ключевого слова, независимо от того, что находится в пакете CORE. Ссылка на него, то есть &lt;code&gt;\&amp;amp;CORE::open&lt;/code&gt; , работает только для некоторых ключевых слов. См. &lt;a href=&quot;core&quot;&gt;CORE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="734561318cece230eccec304d2226018e762ebff" translate="yes" xml:space="preserve">
          <source>To unambiguously refer to the built-in form, precede the built-in name with the special package qualifier &lt;code&gt;CORE::&lt;/code&gt;. For example, saying &lt;code&gt;CORE::open()&lt;/code&gt; always refers to the built-in &lt;code&gt;open()&lt;/code&gt;, even if the current package has imported some other subroutine called &lt;code&gt;&amp;amp;open()&lt;/code&gt; from elsewhere. Even though it looks like a regular function call, it isn't: the CORE:: prefix in that case is part of Perl's syntax, and works for any keyword, regardless of what is in the CORE package. Taking a reference to it, that is, &lt;code&gt;\&amp;amp;CORE::open&lt;/code&gt;, only works for some keywords. See &lt;a href=&quot;core&quot;&gt;CORE&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248423c43b116b150a001ee976cc646676062436" translate="yes" xml:space="preserve">
          <source>To uncompress</source>
          <target state="translated">Чтобы не сжимать</target>
        </trans-unit>
        <trans-unit id="218af45982210497e46e853ffef0192283629105" translate="yes" xml:space="preserve">
          <source>To uncompress all files in the directory &quot;/my/home&quot; that match &quot;*.txt.1950&quot; and store the compressed data in the same directory</source>
          <target state="translated">Распаковать все файлы в директории &quot;/my/home&quot;,соответствующие &quot;*.txt.1950&quot; и сохранить сжатые данные в той же директории.</target>
        </trans-unit>
        <trans-unit id="5ddcb357cfd2b7762051e66890c8b84e7d960611" translate="yes" xml:space="preserve">
          <source>To uncompress all files in the directory &quot;/my/home&quot; that match &quot;*.txt.1951&quot; and store the compressed data in the same directory</source>
          <target state="translated">Распаковать все файлы в директории &quot;/my/home&quot;,соответствующие &quot;*.txt.1951&quot; и сохранить сжатые данные в той же директории.</target>
        </trans-unit>
        <trans-unit id="0e932ba5dc24bfd784757a246bd08027f46d4625" translate="yes" xml:space="preserve">
          <source>To uncompress all files in the directory &quot;/my/home&quot; that match &quot;*.txt.Compressed&quot; and store the compressed data in the same directory</source>
          <target state="translated">Распаковать все файлы в директории &quot;/my/home&quot;,соответствующие &quot;*.txt.Compressed&quot; и сохранить сжатые данные в той же директории.</target>
        </trans-unit>
        <trans-unit id="29a087f9cfa51d4e0c2f6a475a11f449e63412aa" translate="yes" xml:space="preserve">
          <source>To uncompress all files in the directory &quot;/my/home&quot; that match &quot;*.txt.bz2&quot; and store the compressed data in the same directory</source>
          <target state="translated">Распаковать все файлы в каталоге &quot;/my/home&quot;,соответствующие &quot;*.txt.bz2&quot; и сохранить сжатые данные в том же каталоге.</target>
        </trans-unit>
        <trans-unit id="61aa1a4650d4e1d7c6939abfa456f5aeb3345d9a" translate="yes" xml:space="preserve">
          <source>To uncompress all files in the directory &quot;/my/home&quot; that match &quot;*.txt.gz&quot; and store the compressed data in the same directory</source>
          <target state="translated">Распаковать все файлы в каталоге &quot;/my/home&quot;,соответствующие &quot;*.txt.gz&quot; и сохранить сжатые данные в том же каталоге</target>
        </trans-unit>
        <trans-unit id="2754edb3f14d19ed8eebfcca373f83ac4a3282e7" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1950 data stream, set &lt;code&gt;WindowBits&lt;/code&gt; to a positive number between 8 and 15.</source>
          <target state="translated">Чтобы распаковать поток данных RFC 1950, установите &lt;code&gt;WindowBits&lt;/code&gt; на положительное число от 8 до 15.</target>
        </trans-unit>
        <trans-unit id="44083e3f2b591fd2c77505655cdb2c8f0aceb349" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1950 data stream, set &lt;code&gt;WindowBits&lt;/code&gt; to a positive number.</source>
          <target state="translated">Чтобы распаковать поток данных RFC 1950, установите &lt;code&gt;WindowBits&lt;/code&gt; на положительное число.</target>
        </trans-unit>
        <trans-unit id="ceb9d1b68954b1740a461cdcd4976b0e567a28d9" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1951 data stream, set &lt;code&gt;WindowBits&lt;/code&gt; to &lt;code&gt;-MAX_WBITS&lt;/code&gt; .</source>
          <target state="translated">Чтобы распаковать поток данных RFC 1951, установите &lt;code&gt;WindowBits&lt;/code&gt; на &lt;code&gt;-MAX_WBITS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f170e414b119e7ad18faa1ef3905d7483fe9aa7c" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1951 data stream, set &lt;code&gt;WindowBits&lt;/code&gt; to &lt;code&gt;-MAX_WBITS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e613bd86be8bd3cb751a2f5e9d0b238c337e5e" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1952 data stream (i.e. gzip), set &lt;code&gt;WindowBits&lt;/code&gt; to &lt;code&gt;WANT_GZIP&lt;/code&gt; .</source>
          <target state="translated">Чтобы распаковать поток данных RFC 1952 (например, gzip), установите &lt;code&gt;WindowBits&lt;/code&gt; на &lt;code&gt;WANT_GZIP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f4fb6ffd8b0c13548ef465f1f6d2c2d688e65fd" translate="yes" xml:space="preserve">
          <source>To uncompress an RFC 1952 data stream (i.e. gzip), set &lt;code&gt;WindowBits&lt;/code&gt; to &lt;code&gt;WANT_GZIP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfba75b19db48553fce3ae8bd422d26a25e30031" translate="yes" xml:space="preserve">
          <source>To understand that, here is a description of how we make computers grok our characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be309868d7c608c972ac92d2374d84d68bbcff87" translate="yes" xml:space="preserve">
          <source>To understand what kinds of incompatibilities one may expect, and in the rare case that the version of Perl on your machine is older than this document, see the section on &quot;Troubleshooting these Examples&quot; for more information.</source>
          <target state="translated">Чтобы понять,какие виды несовместимости можно ожидать,и в редких случаях,когда версия Perl на вашей машине старше,чем этот документ,см.раздел &quot;Устранение неполадок в этих примерах&quot; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="6b79315e2daa0488ef5b85ec7b3ded4c1bf9ff5d" translate="yes" xml:space="preserve">
          <source>To understand what the above</source>
          <target state="translated">Чтобы понять,что вышеизложенное</target>
        </trans-unit>
        <trans-unit id="84e6e80a4aa5a302f6ddaa79d242cdcf126f821b" translate="yes" xml:space="preserve">
          <source>To uppercase or lowercase several characters, one might want to use &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\U&lt;/code&gt; , which will lowercase/uppercase all characters following them, until either the end of the pattern or the next occurrence of &lt;code&gt;\E&lt;/code&gt; , whichever comes first. They provide functionality similar to what the functions &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt; provide.</source>
          <target state="translated">Для прописных или строчных нескольких символов можно использовать &lt;code&gt;\L&lt;/code&gt; или &lt;code&gt;\U&lt;/code&gt; , которые будут строчными / прописными всеми символами, следующими за ними, до конца шаблона или до следующего появления &lt;code&gt;\E&lt;/code&gt; , в зависимости от того, что наступит раньше. Они предоставляют функциональные возможности, аналогичные функциям &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21a1fe6cbffcae1c27b590bd9990080f83e9d683" translate="yes" xml:space="preserve">
          <source>To uppercase or lowercase several characters, one might want to use &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\U&lt;/code&gt;, which will lowercase/uppercase all characters following them, until either the end of the pattern or the next occurrence of &lt;code&gt;\E&lt;/code&gt;, whichever comes first. They provide functionality similar to what the functions &lt;code&gt;lc&lt;/code&gt; and &lt;code&gt;uc&lt;/code&gt; provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3b3ccd26f316b1795adeb89ffff2bedd268ce6" translate="yes" xml:space="preserve">
          <source>To use 'load_remote' or 'autoload_remote', specify at 'use'.</source>
          <target state="translated">Чтобы использовать 'load_remote' или 'autoload_remote',укажите в поле 'use'.</target>
        </trans-unit>
        <trans-unit id="8a5610b8c5bc5858528e5c0711e8cd5aeeeaeb22" translate="yes" xml:space="preserve">
          <source>To use &lt;b&gt;AutoLoader&lt;/b&gt;, the author of a module has to place the definitions of subroutines to be autoloaded after an &lt;code&gt;__END__&lt;/code&gt; token. (See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;.) The &lt;b&gt;AutoSplit&lt;/b&gt; module can then be run manually to extract the definitions into individual files</source>
          <target state="translated">Чтобы использовать &lt;b&gt;AutoLoader&lt;/b&gt; , автор модуля должен поместить определения подпрограмм для автозагрузки после токена &lt;code&gt;__END__&lt;/code&gt; . (См. &lt;a href=&quot;perldata&quot;&gt;Perldata&lt;/a&gt; .) Затем модуль &lt;b&gt;AutoSplit&lt;/b&gt; можно запустить вручную для извлечения определений в отдельные файлы.</target>
        </trans-unit>
        <trans-unit id="09401632ee7edad8ed959974db2a06c3088b608d" translate="yes" xml:space="preserve">
          <source>To use Bzip2 compression, the module &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; must be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d246c1b4a8c6fc55969eb14bc150616f75299064" translate="yes" xml:space="preserve">
          <source>To use Getopt::Long from a Perl program, you must include the following line in your Perl program:</source>
          <target state="translated">Чтобы использовать Getopt::Long от программы на Perl,вы должны включить в свою программу на Perl следующую строку:</target>
        </trans-unit>
        <trans-unit id="ca5f9362859e86ac853b5005fcaab143b5cd4fd8" translate="yes" xml:space="preserve">
          <source>To use LZMA compression, the module &lt;code&gt;IO::Compress::Lzma&lt;/code&gt; must be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dc12bf802050f20704badfc03f5cc7c4d321fc" translate="yes" xml:space="preserve">
          <source>To use Net::FTP, or any other module in the libnet distribution, through a SOCKS firewall you must create a socks-ified perl executable by compiling perl with the socks library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a708529644756357339b6bd4e7ce1cb0f6dc3ee" translate="yes" xml:space="preserve">
          <source>To use a here-document to assign an array, one line per element, you might use an approach like this:</source>
          <target state="translated">Чтобы использовать здесь-документ для назначения массива,по одной строке на элемент,можно использовать такой подход:</target>
        </trans-unit>
        <trans-unit id="d339f8f2813eea011c2650e8b1ed1fdac84e3d1c" translate="yes" xml:space="preserve">
          <source>To use a lexical subroutine from inside the subroutine itself, you must predeclare it. The &lt;code&gt;sub foo {...}&lt;/code&gt; subroutine definition syntax respects any previous &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;;&lt;/code&gt; or &lt;code&gt;state &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;;&lt;/code&gt; declaration.</source>
          <target state="translated">Чтобы использовать лексическую подпрограмму внутри самой подпрограммы, вы должны предварительно объявить ее. &lt;code&gt;sub foo {...}&lt;/code&gt; определение подпрограммы синтаксических отношения всего предыдущий &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;;&lt;/code&gt; или &lt;code&gt;state &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;;&lt;/code&gt; декларация.</target>
        </trans-unit>
        <trans-unit id="46735f54baf859d9a048ed8b3d013ded7487875d" translate="yes" xml:space="preserve">
          <source>To use adb, download the Android SDK from &lt;a href=&quot;https://developer.android.com/sdk/index.html&quot;&gt;https://developer.android.com/sdk/index.html&lt;/a&gt;. The &quot;SDK Tools Only&quot; version should suffice -- if you downloaded the ADT Bundle, you can find the sdk under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6c22616496274a8c0483ef0b81201680edefba" translate="yes" xml:space="preserve">
          <source>To use in your program as a pragma, merely invoke</source>
          <target state="translated">Чтобы использовать в вашей программе в качестве прагмы,просто вызовите</target>
        </trans-unit>
        <trans-unit id="c9702d448044d584ba0f08cf12e0416ad038a1b6" translate="yes" xml:space="preserve">
          <source>To use it more practically, you have to give the names of encodings to check (</source>
          <target state="translated">Чтобы использовать его более практично,вы должны дать имена кодировок для проверки (</target>
        </trans-unit>
        <trans-unit id="b4e86d7d6b51808534a6c222afc66338bce81e3d" translate="yes" xml:space="preserve">
          <source>To use ssh, you'll need to install and run a sshd app and set it up properly. There are several paid and free apps that do this rather easily, so you should be able to spot one on the store. Remember that Perl requires a passwordless connection, so set up a public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22588255917f935bc82a9b5e6907a6c5af5e0773" translate="yes" xml:space="preserve">
          <source>To use the OVERLOAD: keyword, create an XS function which takes three input parameters ( or use the c style '...' definition) like this:</source>
          <target state="translated">Чтобы использовать ключевое слово OVERLOAD:,создайте функцию XS,которая принимает три входных параметра(или используйте определение стиля c '...'),как это:</target>
        </trans-unit>
        <trans-unit id="2eb14825f964f456a1059f994fc559fc5aaaa465" translate="yes" xml:space="preserve">
          <source>To use the OVERLOAD: keyword, create an XS function which takes three input parameters (or use the C-style '...' definition) like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc634fc1f1bc1b5d00fde6bff6b384f2eeb3f97" translate="yes" xml:space="preserve">
          <source>To use the Perl you just installed you will need to add a new entry to your PATH environment variable: &lt;code&gt;$INST_TOP\bin&lt;/code&gt; , e.g.</source>
          <target state="translated">Чтобы использовать только что установленный Perl, вам нужно будет добавить новую запись в переменную среды PATH: &lt;code&gt;$INST_TOP\bin&lt;/code&gt; , например</target>
        </trans-unit>
        <trans-unit id="c6290d7b4a4817dd1a944f6b3cabef3b11fd0b36" translate="yes" xml:space="preserve">
          <source>To use the Perl you just installed you will need to add a new entry to your PATH environment variable: &lt;code&gt;$INST_TOP\bin&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc829cf0e8a5c97f97a31b7c617e9428478c19b" translate="yes" xml:space="preserve">
          <source>To use the forked debugger, you need to have the default display set to an X-11 Server and some environment variables set that Unix expects.</source>
          <target state="translated">Для использования вилочного отладчика необходимо,чтобы по умолчанию дисплей был установлен на X-11 Server и некоторые переменные окружения были установлены так,как ожидает Unix.</target>
        </trans-unit>
        <trans-unit id="fc207fecfdae515e813f72872e49086f5b78c28e" translate="yes" xml:space="preserve">
          <source>To use the module it is necessary to do the following:</source>
          <target state="translated">Для использования модуля необходимо сделать следующее:</target>
        </trans-unit>
        <trans-unit id="dd4bd0185af39ed243608e8976fc475a01dc61d4" translate="yes" xml:space="preserve">
          <source>To use this expiration policy, the user would say</source>
          <target state="translated">Чтобы использовать эту политику истечения срока действия,пользователь сказал бы.</target>
        </trans-unit>
        <trans-unit id="538ca1c3044001d3cfa088cc4be7d0f4954981d6" translate="yes" xml:space="preserve">
          <source>To use this method you must have the Digest::MD5 or the MD5 module installed, otherwise this method will return</source>
          <target state="translated">Чтобы использовать этот метод,у вас должен быть установлен Digest::MD5 или модуль MD5,иначе этот метод вернет</target>
        </trans-unit>
        <trans-unit id="b3ee11508a4f000324b572266622a1fcc5b08715" translate="yes" xml:space="preserve">
          <source>To use this performance boost, set the current directory via</source>
          <target state="translated">Чтобы использовать этот прирост производительности,установите текущий каталог с помощью параметра</target>
        </trans-unit>
        <trans-unit id="acb718902c4afb0dc31c479abac33d68d277ca9d" translate="yes" xml:space="preserve">
          <source>To warn with a simple string message, the &lt;a href=&quot;#warn&quot;&gt;&quot;warn&quot;&lt;/a&gt; function may be more convenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c026c273aff885d8062765e295cb0676868f0f" translate="yes" xml:space="preserve">
          <source>To warn with a simple string message, the &lt;a href=&quot;#warn&quot;&gt;warn&lt;/a&gt; function may be more convenient.</source>
          <target state="translated">Чтобы предупредить с помощью простого строкового сообщения, функция &lt;a href=&quot;#warn&quot;&gt;предупреждения&lt;/a&gt; может быть более удобной.</target>
        </trans-unit>
        <trans-unit id="be15e0c4892f05af6b92d2d4a6be1a0a5f9a6dcd" translate="yes" xml:space="preserve">
          <source>To watch the tail of a dynamically growing logfile, (from the command line):</source>
          <target state="translated">Наблюдать за хвостом динамически растущего лог-файла (из командной строки):</target>
        </trans-unit>
        <trans-unit id="a70297b48e7206cae4fcb0090dd44f6d0f3207a8" translate="yes" xml:space="preserve">
          <source>To work around this bug, surround the code with a second set of braces. This creates an inner block that defeats the &lt;code&gt;MULTICALL&lt;/code&gt; logic, and does get fresh SVs allocated each time:</source>
          <target state="translated">Чтобы обойти эту ошибку, заключите код вторым набором скобок. Это создает внутренний блок, который нарушает логику &lt;code&gt;MULTICALL&lt;/code&gt; и каждый раз получает новые SV:</target>
        </trans-unit>
        <trans-unit id="df77a0e9f9993c56d24066721ca0f8c51a0345d4" translate="yes" xml:space="preserve">
          <source>To work around this, set environment variables as part of the</source>
          <target state="translated">Чтобы обойти эту проблему,установите переменные окружения как часть</target>
        </trans-unit>
        <trans-unit id="67bc56a45c2b844733bf04f643db3f4d6359ddb1" translate="yes" xml:space="preserve">
          <source>To work with only alphanumeric sequences (including underscores), you might consider</source>
          <target state="translated">Для работы только с буквенно-цифровыми последовательностями (включая подчеркивания),вы можете рассмотреть следующие варианты</target>
        </trans-unit>
        <trans-unit id="737fcabd51bb1faacb7059e47b96e0c587be8c5f" translate="yes" xml:space="preserve">
          <source>To write a test for your new (and probably not even done) module, create a new file called</source>
          <target state="translated">Чтобы написать тест для вашего нового (и,возможно,даже не законченного)модуля,создайте новый файл с названием</target>
        </trans-unit>
        <trans-unit id="02bfda7919e7b9ec9d9ea9a01639287be236928c" translate="yes" xml:space="preserve">
          <source>To write platform-independent code, you must use &lt;code&gt;\N{&lt;i&gt;NAME&lt;/i&gt;}&lt;/code&gt; instead, like &lt;code&gt;\N{ESCAPE}&lt;/code&gt; or &lt;code&gt;\N{U+001B}&lt;/code&gt; , see &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt;.</source>
          <target state="translated">Чтобы написать независимый от платформы код, вы должны использовать вместо него &lt;code&gt;\N{&lt;i&gt;NAME&lt;/i&gt;}&lt;/code&gt; , например &lt;code&gt;\N{ESCAPE}&lt;/code&gt; или &lt;code&gt;\N{U+001B}&lt;/code&gt; , см. &lt;a href=&quot;charnames&quot;&gt;Имена символов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c88d87a2cc45115c74eeb5e575d4bb12e18a967" translate="yes" xml:space="preserve">
          <source>To write platform-independent code, you must use &lt;code&gt;\N{&lt;i&gt;NAME&lt;/i&gt;}&lt;/code&gt; instead, like &lt;code&gt;\N{ESCAPE}&lt;/code&gt; or &lt;code&gt;\N{U+001B}&lt;/code&gt;, see &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32379df686c78a3422056dcfb4c9b1da18747d64" translate="yes" xml:space="preserve">
          <source>To yield a usable Perl variable, characters that are not part of the syntax for variables are translated to underscores. For example, &lt;code&gt;--fpp-struct-&lt;a href=&quot;../functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; will set the variable &lt;code&gt;$opt_fpp_struct_return&lt;/code&gt; . Note that this variable resides in the namespace of the calling program, not necessarily &lt;code&gt;main&lt;/code&gt; . For example:</source>
          <target state="translated">Чтобы получить пригодную для использования переменную Perl, символы, не являющиеся частью синтаксиса переменных, переводятся в символы подчеркивания. Например, &lt;code&gt;--fpp-struct-&lt;a href=&quot;../functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; установит переменную &lt;code&gt;$opt_fpp_struct_return&lt;/code&gt; . Обратите внимание, что эта переменная находится в пространстве имен вызывающей программы, не обязательно в &lt;code&gt;main&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="a049b042bf8f7cb4d234fc89dd589815ab07f9de" translate="yes" xml:space="preserve">
          <source>To yield a usable Perl variable, characters that are not part of the syntax for variables are translated to underscores. For example, &lt;code&gt;--fpp-struct-return&lt;/code&gt; will set the variable &lt;code&gt;$opt_fpp_struct_return&lt;/code&gt;. Note that this variable resides in the namespace of the calling program, not necessarily &lt;code&gt;main&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2824d2ae2117d9a03cba6d58d8adc173a02e61" translate="yes" xml:space="preserve">
          <source>To%s: illegal mapping '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33224443be18843a7174975c46578d74787bc749" translate="yes" xml:space="preserve">
          <source>Tobias Brox, tobiasb@tobiasb.funcom.com</source>
          <target state="translated">Тобиас Брокс,tobiasb@tobiasb.funcom.com</target>
        </trans-unit>
        <trans-unit id="57a4f395602ffbc6392e66ae2e2c5974770b3c0a" translate="yes" xml:space="preserve">
          <source>Todo tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7a57e5883d57c428d8e15819e5060eeed56435" translate="yes" xml:space="preserve">
          <source>Together, these categories go a long way towards being able to customize a single program to run in many different locations. But there are deficiencies, so keep reading.</source>
          <target state="translated">Вместе эти категории имеют большое значение для того,чтобы иметь возможность настраивать одну программу для работы в разных местах.Но есть и недостатки,так что продолжайте читать.</target>
        </trans-unit>
        <trans-unit id="6f1eb05b47fbf56bdd9586b2ff6beeffab4ce59f" translate="yes" xml:space="preserve">
          <source>Together, these two features are intended to replace the historical &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; function, which has (at least) two bugs in it, that cannot easily be fixed without breaking existing programs:</source>
          <target state="translated">Вместе эти две функции предназначены для замены исторической функции &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , в которой есть (как минимум) две ошибки, которые нельзя легко исправить без нарушения существующих программ:</target>
        </trans-unit>
        <trans-unit id="4ce897ee72e1aab169ad26b4888dec08e507c975" translate="yes" xml:space="preserve">
          <source>Together, these two features are intended to replace the legacy string &lt;code&gt;eval&lt;/code&gt; function, which behaves problematically in some instances. They are available starting with Perl 5.16, and are enabled by default by a &lt;code&gt;use 5.16&lt;/code&gt; or higher declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751e44ad1c63d964b7e27098dbfa3f7faca67a2f" translate="yes" xml:space="preserve">
          <source>Toggle buffered status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5379fd6502d08f80951bb93415834c8443e36cd5" translate="yes" xml:space="preserve">
          <source>Toggle trace mode (see also the &lt;code&gt;AutoTrace&lt;/code&gt; option). Optional argument is the maximum number of levels to trace below the current one; anything deeper than that will be silent.</source>
          <target state="translated">Переключить режим трассировки (см. Также параметр &lt;code&gt;AutoTrace&lt;/code&gt; ). Необязательный аргумент - максимальное количество уровней для трассировки ниже текущего; все, что глубже, будет безмолвным.</target>
        </trans-unit>
        <trans-unit id="f422da5828ccca294dcf6d07ee5efb74761f28a1" translate="yes" xml:space="preserve">
          <source>Tokens from Pod::Simple::PullParser</source>
          <target state="translated">Жетоны от Pod::Simple::PullParser</target>
        </trans-unit>
        <trans-unit id="e3f27977b0cf7c5ef1db648369c2aa76bc8a767d" translate="yes" xml:space="preserve">
          <source>Tokens of an RPN expression may be separated by whitespace, but such separation is usually not required. It is required only where unseparated tokens would look like a longer token. For example, &lt;code&gt;12 34 +&lt;/code&gt; can be written as &lt;code&gt;12 34+&lt;/code&gt;, but not as &lt;code&gt;1234 +&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685cbbd2434336a1c0d592cb5e469ec23061ee59" translate="yes" xml:space="preserve">
          <source>Tom Christiansen</source>
          <target state="translated">Том Христиансен</target>
        </trans-unit>
        <trans-unit id="8be2aa955349ba9da124a5ab00db7e6f88ee861a" translate="yes" xml:space="preserve">
          <source>Tom Christiansen &amp;lt;</source>
          <target state="translated">Том Кристиансен &amp;lt;</target>
        </trans-unit>
        <trans-unit id="5ca9f204e050f14afeeca056eec19f3529541293" translate="yes" xml:space="preserve">
          <source>Tom Christiansen &amp;lt;tchrist@perl.com&amp;gt; wrote this, with occasional kibbitzing from Larry Wall and Jeffrey Friedl in the background.</source>
          <target state="translated">Это написал Том Кристиансен &amp;lt;tchrist@perl.com&amp;gt;, на заднем плане время от времени высказывались Ларри Уолл и Джеффри Фридл.</target>
        </trans-unit>
        <trans-unit id="8e134c4a6e79e76b0db622556fcf6a08eb055742" translate="yes" xml:space="preserve">
          <source>Tom Christiansen wrote the original perlfaq then expanded it with the help of Nat Torkington. brian d foy substantially edited and expanded the perlfaq. perlfaq-workers and others have also supplied feedback, patches and corrections over the years.</source>
          <target state="translated">Том Кристиансен написал оригинал perlfaq,а затем расширил его с помощью Нэт Торкингтон.Брайан д фой существенно отредактировал и расширил perlfaq.perlfaq-работники и другие также предоставили отзывы,патчи и исправления на протяжении многих лет.</target>
        </trans-unit>
        <trans-unit id="13f0322dc66b8435d53d03e97ab3bdb9a5e08c67" translate="yes" xml:space="preserve">
          <source>Tom Christiansen wrote the original version of this document. brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; wrote this version. See the individual perlfaq documents for additional copyright information.</source>
          <target state="translated">Том Кристиансен написал оригинальную версию этого документа. Брайан Д &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; написал эту версию. См. Отдельные документы perlfaq для получения дополнительной информации об авторских правах.</target>
        </trans-unit>
        <trans-unit id="594631f752605ca51961fa701a3edb58acb263cd" translate="yes" xml:space="preserve">
          <source>Tom Christiansen, &amp;lt;tchrist@perl.com&amp;gt;.</source>
          <target state="translated">Том Кристиансен, &amp;lt;tchrist@perl.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="95a03ceecd01437e5e0609dbfa8dc64983a0ce69" translate="yes" xml:space="preserve">
          <source>Tom Christiansen, with occasional vestiges of Larry Wall's original version and suggestions from the Perl Porters.</source>
          <target state="translated">Том Кристиансен,с редкими остатками оригинальной версии Ларри Уолла и предложениями от Perl Porters.</target>
        </trans-unit>
        <trans-unit id="86f2b4b3ae91b418a1683a4b91e72d3ad71dd15f" translate="yes" xml:space="preserve">
          <source>Tom Hukins &amp;lt;tom@eborcom.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e834545bca77fe29ecc8dac8de115465b8dcd679" translate="yes" xml:space="preserve">
          <source>Tom Lutz &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476ccb2f91007a71136d530d51755067de803643" translate="yes" xml:space="preserve">
          <source>Tom Phoenix, &amp;lt;</source>
          <target state="translated">Том Феникс, &amp;lt;</target>
        </trans-unit>
        <trans-unit id="0d331f4232946333d8f1366dd1d47c9f81d210b2" translate="yes" xml:space="preserve">
          <source>Tomas Doran &amp;lt;bobtfish@bobtfish.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c9ef80202c4539b6ea96fa83f4e8656550b386" translate="yes" xml:space="preserve">
          <source>Tomohiro Hosaka &amp;lt;bokutin@bokut.in&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793b4a701cfe0913d08894024037c7429f46b186" translate="yes" xml:space="preserve">
          <source>Tony Cook &amp;lt;tony@develop-help.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b01674cdd852dec165a416e0496fa965e8b91a" translate="yes" xml:space="preserve">
          <source>Too deeply nested ()-groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db6f1ae51bb58b9a4860785d43a21467f4cbb8c" translate="yes" xml:space="preserve">
          <source>Too few args to syscall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2364f2f117108b7557a903b349dc899cf3b08e9e" translate="yes" xml:space="preserve">
          <source>Too few arguments for subroutine '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba42647932e0b5434947f286f404459ce1a76e83" translate="yes" xml:space="preserve">
          <source>Too few records will be retrieved.</source>
          <target state="translated">Слишком мало записей будет найдено.</target>
        </trans-unit>
        <trans-unit id="ff02d866660d5b53534c080f1fcb0457f7d00d24" translate="yes" xml:space="preserve">
          <source>Too late for &quot;-%s&quot; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c54b58dcbc8ae188a5471b5a9ac818add3700" translate="yes" xml:space="preserve">
          <source>Too late to run %s block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e03f0741d093e7b4fe7029e12428aa7a386bc5" translate="yes" xml:space="preserve">
          <source>Too many ('s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db44b7d3a550f69ac66850f32920ad09e8328651" translate="yes" xml:space="preserve">
          <source>Too many )'s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9155bcdc24c3728c4025b090f8ec51766e724176" translate="yes" xml:space="preserve">
          <source>Too many args to syscall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f95368fd6442a537ee2dd900f3e1bb4d5350d08" translate="yes" xml:space="preserve">
          <source>Too many arguments for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4091f54a0813795be4fd20124afb6c89bed7942" translate="yes" xml:space="preserve">
          <source>Too many arguments for subroutine '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef15ae49ed8dd79937ceab5a3d6972af6ced0871" translate="yes" xml:space="preserve">
          <source>Too many nested open parens in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f85c6fbc6b17f4b329c823a126de114fb51f097" translate="yes" xml:space="preserve">
          <source>Too many will be retrieved.</source>
          <target state="translated">Слишком много будет найдено.</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="2f4169d30e0802a9d8a3d39c5549f0963dd393e1" translate="yes" xml:space="preserve">
          <source>Tools &amp;amp; SDK</source>
          <target state="translated">Инструменты и SDK</target>
        </trans-unit>
        <trans-unit id="2d26e7b7bd96209071fc6ad7cab1a93d4b45e8bf" translate="yes" xml:space="preserve">
          <source>Tools to compile Perl modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ad973010edc9e98f2f60aa9dbfdb7b904996da" translate="yes" xml:space="preserve">
          <source>Tools used by Test2 and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00a8f35172e2849241ce00e52e7b7a9a0047d25" translate="yes" xml:space="preserve">
          <source>Top of Form Processing</source>
          <target state="translated">Вершина обработки форм</target>
        </trans-unit>
        <trans-unit id="ee80479b0fa9a2d2efdf0ff5851a9a2f37c4056d" translate="yes" xml:space="preserve">
          <source>Top of form processing is handled automatically: if there is insufficient room on the current page for the formatted record, the page is advanced by writing a form feed and a special top-of-page format is used to format the new page header before the record is written. By default, the top-of-page format is the name of the filehandle with &quot;_TOP&quot; appended, or &quot;top&quot; in the current package if the former does not exist. This would be a problem with autovivified filehandles, but it may be dynamically set to the format of your choice by assigning the name to the &lt;code&gt;$^&lt;/code&gt; variable while that filehandle is selected. The number of lines remaining on the current page is in variable &lt;code&gt;$-&lt;/code&gt; , which can be set to &lt;code&gt;0&lt;/code&gt; to force a new page.</source>
          <target state="translated">Обработка начала формы выполняется автоматически: если на текущей странице недостаточно места для форматированной записи, страница продвигается вперед путем написания канала формы, и для форматирования нового заголовка страницы перед форматом используется специальный формат верхней части страницы. запись написана. По умолчанию формат верхней части страницы - это имя дескриптора файла с добавленным &amp;laquo;_TOP&amp;raquo; или &amp;laquo;верх&amp;raquo; в текущем пакете, если первый не существует. Это было бы проблемой с автоактивизированными дескрипторами файлов, но для него можно динамически задать формат по вашему выбору, присвоив имя переменной &lt;code&gt;$^&lt;/code&gt; когда этот дескриптор файла выбран. Количество строк, оставшихся на текущей странице, находится в переменной &lt;code&gt;$-&lt;/code&gt; , которая может быть установлена ​​в &lt;code&gt;0&lt;/code&gt; , чтобы принудительно открыть новую страницу.</target>
        </trans-unit>
        <trans-unit id="f10b9e66ec3cf51c0d1a7e3d006886e22937c14a" translate="yes" xml:space="preserve">
          <source>Top of form processing is handled automatically: if there is insufficient room on the current page for the formatted record, the page is advanced by writing a form feed and a special top-of-page format is used to format the new page header before the record is written. By default, the top-of-page format is the name of the filehandle with &lt;code&gt;_TOP&lt;/code&gt; appended, or &lt;code&gt;top&lt;/code&gt; in the current package if the former does not exist. This would be a problem with autovivified filehandles, but it may be dynamically set to the format of your choice by assigning the name to the &lt;a href=&quot;perlvar#%24%5E&quot;&gt;&lt;code&gt;$^&lt;/code&gt;&lt;/a&gt; variable while that filehandle is selected. The number of lines remaining on the current page is in variable &lt;a href=&quot;perlvar#%24-&quot;&gt;&lt;code&gt;$-&lt;/code&gt;&lt;/a&gt;, which can be set to &lt;code&gt;0&lt;/code&gt; to force a new page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8d0feb3edb0eff1e9ffe23486e4f54336c8d4e" translate="yes" xml:space="preserve">
          <source>Top-of-form processing is by default handled by a format with the same name as the current filehandle with &quot;_TOP&quot; concatenated to it. It's triggered at the top of each page. See &lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;.</source>
          <target state="translated">Обработка верхней части формы по умолчанию обрабатывается форматом с тем же именем, что и текущий дескриптор файла, с присоединенным к нему &amp;laquo;_TOP&amp;raquo;. Он запускается вверху каждой страницы. Смотрите &lt;a href=&quot;functions/write&quot;&gt;напишите&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58ef03b2e7b2cce794df0ce3f4e46ce888251a1d" translate="yes" xml:space="preserve">
          <source>Top-of-form processing is by default handled by a format with the same name as the current filehandle with &quot;_TOP&quot; concatenated to it. It's triggered at the top of each page. See &lt;a href=&quot;perlfunc#write&quot;&gt;&quot;write&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb98d71b2e229a477af401f7c4895167097dcb8a" translate="yes" xml:space="preserve">
          <source>TopSystemUID</source>
          <target state="translated">TopSystemUID</target>
        </trans-unit>
        <trans-unit id="f766dbf6de80a1783868b76b0ffdd16e6a94e83e" translate="yes" xml:space="preserve">
          <source>Topic branches and rewriting history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2f2b4afe1a913994b69be99455c56a7fc054ab" translate="yes" xml:space="preserve">
          <source>Torsten Schoenfeld</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855b740deb0e234d1668b8ec10c825eb8a3450f0" translate="yes" xml:space="preserve">
          <source>Total CPU (User + System) of any children processes.</source>
          <target state="translated">Общий процессор (пользователь+система)любых дочерних процессов.</target>
        </trans-unit>
        <trans-unit id="3481164ed61c4f3a7713de67224c54bcab0e71f6" translate="yes" xml:space="preserve">
          <source>Total CPU (User + System) of the main (parent) process.</source>
          <target state="translated">Общий процессор (пользователь+система)основного (родительского)процесса.</target>
        </trans-unit>
        <trans-unit id="1e2c196e8d42960075bf83565f85bd785a488f4c" translate="yes" xml:space="preserve">
          <source>Total CPU of parent and any children processes.</source>
          <target state="translated">Общий процессор родительских и любых дочерних процессов.</target>
        </trans-unit>
        <trans-unit id="32bbce2a356130ac460d0855ed4bb96cc9c277fe" translate="yes" xml:space="preserve">
          <source>Trace function calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b32a7b148f732eb014244c4bbbcbbea6216c149" translate="yes" xml:space="preserve">
          <source>Trace mode (similar to &lt;code&gt;t&lt;/code&gt; command, but can be put into &lt;code&gt;PERLDB_OPTS&lt;/code&gt; ).</source>
          <target state="translated">Режим трассировки (аналогичен команде &lt;code&gt;t&lt;/code&gt; , но может быть помещен в &lt;code&gt;PERLDB_OPTS&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="75ddac2cad68f5ef90bf266909b1cc9bff0811e0" translate="yes" xml:space="preserve">
          <source>Trace mode (similar to &lt;code&gt;t&lt;/code&gt; command, but can be put into &lt;code&gt;PERLDB_OPTS&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8c4db1a294c0162454110ac7c8472297017033" translate="yes" xml:space="preserve">
          <source>Trace through execution of &lt;code&gt;expr&lt;/code&gt; . Optional first argument is the maximum number of levels to trace below the current one; anything deeper than that will be silent. See &lt;a href=&quot;perldebguts#Frame-Listing-Output-Examples&quot;&gt;Frame Listing Output Examples in perldebguts&lt;/a&gt; for examples.</source>
          <target state="translated">Проследить выполнение &lt;code&gt;expr&lt;/code&gt; . Необязательный первый аргумент - это максимальное количество уровней для трассировки ниже текущего; все, что глубже, будет безмолвным. &lt;a href=&quot;perldebguts#Frame-Listing-Output-Examples&quot;&gt;Примеры&lt;/a&gt; см. В разделе Примеры вывода списка кадров в perldebguts .</target>
        </trans-unit>
        <trans-unit id="41581b1e8642b813163a8ffec956716ae9f8f88d" translate="yes" xml:space="preserve">
          <source>Trace through execution of &lt;code&gt;expr&lt;/code&gt;. Optional first argument is the maximum number of levels to trace below the current one; anything deeper than that will be silent. See &lt;a href=&quot;perldebguts#Frame-Listing-Output-Examples&quot;&gt;&quot;Frame Listing Output Examples&quot; in perldebguts&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b60e7167b2cc35295d61cd8ed5b383229ffbac" translate="yes" xml:space="preserve">
          <source>Trace variable used when Perl is run in debugging mode, with the &lt;b&gt;-d&lt;/b&gt; switch. This is the C variable which corresponds to Perl's $DB::trace variable. See &lt;code&gt;&lt;a href=&quot;#PL_DBsingle&quot;&gt;&quot;PL_DBsingle&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24be5dbb481a63442832782f4da3ef4f0dc024ff" translate="yes" xml:space="preserve">
          <source>Trace variable used when Perl is run in debugging mode, with the &lt;b&gt;-d&lt;/b&gt; switch. This is the C variable which corresponds to Perl's $DB::trace variable. See &lt;code&gt;PL_DBsingle&lt;/code&gt; .</source>
          <target state="translated">Переменная трассировки, используемая при запуске Perl в режиме отладки с ключом &lt;b&gt;-d&lt;/b&gt; . Это переменная C, соответствующая переменной Perl $ DB :: trace. См. &lt;code&gt;PL_DBsingle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="411aea8f76aef96f5e36c8b291c19e9ceb9466d1" translate="yes" xml:space="preserve">
          <source>Traces changes to Perl's interpreter state. You can internalize this as tracing changes to Perl's &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; variable, especially since the values for &lt;code&gt;NEWPHASE&lt;/code&gt; and &lt;code&gt;OLDPHASE&lt;/code&gt; are the strings that &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; reports.</source>
          <target state="translated">Отслеживает изменения в состоянии интерпретатора Perl. Вы можете &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; это как отслеживание изменений в переменной Perl $ {^ GLOBAL_PHASE} , особенно потому, что значения &lt;code&gt;NEWPHASE&lt;/code&gt; и &lt;code&gt;OLDPHASE&lt;/code&gt; являются строками, о &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; сообщает $ {^ GLOBAL_PHASE} .</target>
        </trans-unit>
        <trans-unit id="0786ec1507cde8f738cd5528e03a2b67d40c8c91" translate="yes" xml:space="preserve">
          <source>Traces the entry of any subroutine. Note that all of the variables refer to the subroutine that is being invoked; there is currently no way to get ahold of any information about the subroutine's</source>
          <target state="translated">Отслеживает вход любой подпрограммы.Обратите внимание,что все переменные ссылаются на вызываемую подпрограмму;в настоящее время нет возможности получить информацию о подпрограмме</target>
        </trans-unit>
        <trans-unit id="9f47af59eb569759ff1e8a42a52da14fba8b1705" translate="yes" xml:space="preserve">
          <source>Traces the execution of each opcode in the Perl runloop. This probe is fired before the opcode is executed. When the Perl debugger is enabled, the DTrace probe is fired</source>
          <target state="translated">Отслеживает выполнение каждого опкода в цикле Perl.Этот зонд выстреливает перед выполнением опкода.Когда отладчик Perl включен,запускается зонд DTrace.</target>
        </trans-unit>
        <trans-unit id="bbb01fbe6bfaaec090a44633982fb31ae18d0d39" translate="yes" xml:space="preserve">
          <source>Traces the exit of any subroutine. Note that all of the variables refer to the subroutine that is returning; there is currently no way to get ahold of any information about the subroutine's</source>
          <target state="translated">Отслеживает выход любой подпрограммы.Обратите внимание,что все переменные относятся к возвращающейся подпрограмме;в настоящее время нет возможности получить какую-либо информацию о подпрограмме</target>
        </trans-unit>
        <trans-unit id="469260e080c9b35d7ee5b388f5235f91978c75b9" translate="yes" xml:space="preserve">
          <source>Traditional form:</source>
          <target state="translated">Традиционная форма:</target>
        </trans-unit>
        <trans-unit id="0ad67b0aa9abbb10a0d4b2ca67f1c4ff5d61a0ed" translate="yes" xml:space="preserve">
          <source>Traditionally END blocks have been executed at the end of the perl_run. This causes problems for applications that never call perl_run. Since perl 5.7.2 you can specify &lt;code&gt;PL_exit_flags |= PERL_EXIT_DESTRUCT_END&lt;/code&gt; to get the new behaviour. This also enables the running of END blocks if the perl_parse fails and &lt;code&gt;perl_destruct&lt;/code&gt; will return the exit value.</source>
          <target state="translated">Традиционно блоки END выполняются в конце perl_run. Это вызывает проблемы для приложений, которые никогда не вызывают perl_run. Начиная с Perl 5.7.2, вы можете указать &lt;code&gt;PL_exit_flags |= PERL_EXIT_DESTRUCT_END&lt;/code&gt; чтобы получить новое поведение. Это также позволяет запускать блоки END в случае сбоя &lt;code&gt;perl_destruct&lt;/code&gt; и perl_destruct вернет значение выхода.</target>
        </trans-unit>
        <trans-unit id="0f62d4679a2de6656186513ec5b0145dfd0852c8" translate="yes" xml:space="preserve">
          <source>Traditionally in Perl, any use of any of the three variables &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; or &lt;code&gt;$'&lt;/code&gt; (or their &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; English&lt;/code&gt; equivalents) anywhere in the code, caused all subsequent successful pattern matches to make a copy of the matched string, in case the code might subsequently access one of those variables. This imposed a considerable performance penalty across the whole program, so generally the use of these variables has been discouraged.</source>
          <target state="translated">Традиционно в Perl, любое использование любого из трех переменных &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; или &lt;code&gt;$'&lt;/code&gt; (или их &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; English&lt;/code&gt; эквивалентов) в коде, вызванной все последующие успешные модели матчи , чтобы сделать копию совпавшей строки, в случае , код может впоследствии получить доступ к одной из этих переменных. Это привело к значительному снижению производительности всей программы, поэтому, как правило, использование этих переменных не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="b39057d081d4426f280d8e658ad98c69967c3dee" translate="yes" xml:space="preserve">
          <source>Traditionally in Perl, any use of any of the three variables &lt;code&gt;$`&lt;/code&gt;, &lt;code&gt;$&amp;amp;&lt;/code&gt; or &lt;code&gt;$'&lt;/code&gt; (or their &lt;code&gt;use English&lt;/code&gt; equivalents) anywhere in the code, caused all subsequent successful pattern matches to make a copy of the matched string, in case the code might subsequently access one of those variables. This imposed a considerable performance penalty across the whole program, so generally the use of these variables has been discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc1e4ae8cd5bdd4ef52be4cd619be47a1e80306" translate="yes" xml:space="preserve">
          <source>Traditionally the result is a string of 13 bytes: two first bytes of the salt, followed by 11 bytes from the set &lt;code&gt;[./0-9A-Za-z]&lt;/code&gt;, and only the first eight bytes of PLAINTEXT mattered. But alternative hashing schemes (like MD5), higher level security schemes (like C2), and implementations on non-Unix platforms may produce different strings.</source>
          <target state="translated">Обычно результатом является строка из 13 байтов: два первых байта соли, за которыми следуют 11 байтов из набора &lt;code&gt;[./0-9A-Za-z]&lt;/code&gt; , и только первые восемь байтов PLAINTEXT имеют значение. Но альтернативные схемы хеширования (например, MD5), схемы безопасности более высокого уровня (например, C2) и реализации на платформах, отличных от Unix, могут создавать разные строки.</target>
        </trans-unit>
        <trans-unit id="366ba2d0971221ce62e3e700bb5e4027a597313b" translate="yes" xml:space="preserve">
          <source>Traditionally, Perl has captured the value of the variable at that point and turned the subroutine into a constant eligible for inlining. In those cases where the variable can be modified elsewhere, this breaks the behavior of closures, in which the subroutine captures the variable itself, rather than its value, so future changes to the variable are reflected in the subroutine's return value.</source>
          <target state="translated">Традиционно,Perl захватил значение переменной в этот момент и превратил подпрограмму в константу,имеющую право на встраивание.В тех случаях,когда переменная может быть изменена в другом месте,это нарушает поведение замыкания,при котором подпрограмма захватывает саму переменную,а не ее значение,поэтому будущие изменения переменной отражаются в возвращаемом подпрограммой значении.</target>
        </trans-unit>
        <trans-unit id="77c289ba4e5a8332a82b92e0a687ee8832b65763" translate="yes" xml:space="preserve">
          <source>Traditionally, the Perl function &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; rounds to 0 (see &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;), and so for floating-point-like types one should follow the same semantic.</source>
          <target state="translated">Традиционно функция Perl &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; округляется до 0 (см. &lt;a href=&quot;functions/int&quot;&gt;Int&lt;/a&gt; ), поэтому для типов с плавающей запятой следует придерживаться той же семантики.</target>
        </trans-unit>
        <trans-unit id="adbc09d928775a73e398c4d99047b6c88a5a75f6" translate="yes" xml:space="preserve">
          <source>Traditionally, the Perl function &lt;code&gt;int&lt;/code&gt; rounds to 0 (see &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt;), and so for floating-point-like types one should follow the same semantic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c93accaaddf881f0426884fd5fb319c6e78ef4" translate="yes" xml:space="preserve">
          <source>Traditionally, the definition of an inside-out class contains a bare block inside which a number of lexical hashes are declared and the basic accessor methods defined, usually through &lt;code&gt;Scalar::Util::refaddr&lt;/code&gt; . Further methods may be defined outside this block. There has to be a DESTROY method and, for thread support, a CLONE method.</source>
          <target state="translated">Традиционно определение вывернутого наизнанку класса содержит пустой блок, внутри которого объявляется ряд лексических хэшей и определяются основные методы доступа, обычно через &lt;code&gt;Scalar::Util::refaddr&lt;/code&gt; . Другие методы могут быть определены вне этого блока. Должен быть метод DESTROY, а для поддержки потоков - метод CLONE.</target>
        </trans-unit>
        <trans-unit id="a7bba9f4132fe6d6098df9712bd5f009714f6811" translate="yes" xml:space="preserve">
          <source>Traditionally, the definition of an inside-out class contains a bare block inside which a number of lexical hashes are declared and the basic accessor methods defined, usually through &lt;code&gt;Scalar::Util::refaddr&lt;/code&gt;. Further methods may be defined outside this block. There has to be a DESTROY method and, for thread support, a CLONE method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e30fa719825fef87897a9b73f8c643d6e27859" translate="yes" xml:space="preserve">
          <source>Traditionally, typemaps needed to be written to a separate file, conventionally called &lt;code&gt;typemap&lt;/code&gt; in a CPAN distribution. With ExtUtils::ParseXS (the XS compiler) version 3.12 or better which comes with perl 5.16, typemaps can also be embedded directly into XS code using a HERE-doc like syntax:</source>
          <target state="translated">Традиционно карты типов нужно было записывать в отдельный файл, &lt;code&gt;typemap&lt;/code&gt; в распространении CPAN обычно называется картой типов . С ExtUtils :: ParseXS (компилятор XS) версии 3.12 или выше, который поставляется с perl 5.16, карты типов также могут быть встроены непосредственно в код XS с использованием синтаксиса, подобного HERE-doc:</target>
        </trans-unit>
        <trans-unit id="09f8c62448637990777ebfc05ef92616935bd9ae" translate="yes" xml:space="preserve">
          <source>Trailing \ in regex m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b116d15c8d0f591aea30acc14d32c8151254d15b" translate="yes" xml:space="preserve">
          <source>Transfer file in ASCII. CRLF translation will be done if required</source>
          <target state="translated">Файл передачи в ASCII.При необходимости будет выполнен перевод CRLF</target>
        </trans-unit>
        <trans-unit id="19b93b66a9a164099cf4c3e60d4b5f7a2c5a7780" translate="yes" xml:space="preserve">
          <source>Transfer file in binary mode. No transformation will be done.</source>
          <target state="translated">Передача файла в двоичном режиме.Преобразование не будет выполнено.</target>
        </trans-unit>
        <trans-unit id="71b54b146f4723aa8db4c8d0ffb0816f4aee31ad" translate="yes" xml:space="preserve">
          <source>Transforms the current application into a PM application and back. The argument true means that a real message loop is going to be served. OS2::MorphPM() returns the PM message queue handle as an integer.</source>
          <target state="translated">Преобразует текущее приложение в PM-приложение и обратно.Аргумент true означает,что будет обслуживаться реальный цикл сообщений.OS2::MorphPM()возвращает хэндл очереди сообщений PM как целое число.</target>
        </trans-unit>
        <trans-unit id="45a38a062b50bb87ecbfadb79c2d11cbaef46742" translate="yes" xml:space="preserve">
          <source>Transition notes when upgrading to Test2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab5267ee01682b79d53eef55a6ec4c6169897d2" translate="yes" xml:space="preserve">
          <source>Translate logical name DCL$PATH as a searchlist, rather than trying to &lt;code&gt;&lt;a href=&quot;../../functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; string value of &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; .</source>
          <target state="translated">Преобразуйте логическое имя DCL $ PATH как список поиска вместо того, чтобы пытаться &lt;code&gt;&lt;a href=&quot;../../functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; строковое значение &lt;code&gt;$ENV{'PATH'}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff6fe6980843b217b9b010e6374cc31ac52dccf0" translate="yes" xml:space="preserve">
          <source>Translate logical name DCL$PATH as a searchlist, rather than trying to &lt;code&gt;split&lt;/code&gt; string value of &lt;code&gt;$ENV{'PATH'}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df3684f8e1af9f3d36ff43ec1a39944ea62d252" translate="yes" xml:space="preserve">
          <source>Translates a Windows path to the corresponding cygwin path respecting the current mount points. With a second non-null argument returns an absolute path. Double-byte characters will not be translated.</source>
          <target state="translated">Переводит путь Windows на соответствующий путь cygwin с учетом текущих точек монтирования.Со вторым ненулевым аргументом возвращает абсолютный путь.Двухбайтовые символы не будут переведены.</target>
        </trans-unit>
        <trans-unit id="43c8972cdf7cbd4964f60ea0553934fab0c0bfe0" translate="yes" xml:space="preserve">
          <source>Translates a Windows pid to the corresponding cygwin pid (if any).</source>
          <target state="translated">Переводит Windows pid на соответствующий cygwin pid (если есть).</target>
        </trans-unit>
        <trans-unit id="582d5dcb01cd3d8be49a7bc9c562cc61d6d3a8c7" translate="yes" xml:space="preserve">
          <source>Translates a cygwin path to the corresponding cygwin path respecting the current mount points. With a second non-null argument returns an absolute path. Double-byte characters will not be translated.</source>
          <target state="translated">Переводит путь cygwin на соответствующий путь cygwin относительно текущих точек крепления.Со вторым ненулевым аргументом возвращает абсолютный путь.Двухбайтовые символы не будут переведены.</target>
        </trans-unit>
        <trans-unit id="d0b7e8b1f9fa64e7df02a610ac8f751cbf79794f" translate="yes" xml:space="preserve">
          <source>Translates a cygwin pid to the corresponding Windows pid (which may or may not be the same).</source>
          <target state="translated">Переводит cygwin pid на соответствующий Windows pid (который может быть или не быть одинаковым).</target>
        </trans-unit>
        <trans-unit id="3cb9f5d38a91da3cb24f8ddc9ee0b78bc3316e7d" translate="yes" xml:space="preserve">
          <source>Translates the template as before except that a directory name is specified.</source>
          <target state="translated">Переводит шаблон,как и раньше,за исключением того,что указано имя каталога.</target>
        </trans-unit>
        <trans-unit id="0e0c59b2d3a94d773b16fba8c10f9e6b9a4c8d83" translate="yes" xml:space="preserve">
          <source>Translators are available for converting Pod to various formats like plain text, HTML, man pages, and more.</source>
          <target state="translated">Доступны переводчики для преобразования Pod в различные форматы,такие как обычный текст,HTML,man-страницы и многое другое.</target>
        </trans-unit>
        <trans-unit id="3d02c52d09a4e30f9d862205070306d13e0fd4bf" translate="yes" xml:space="preserve">
          <source>Translators may request clarification of the situation in which a particular phrase is found. For example, in English we are entirely happy saying &quot;</source>
          <target state="translated">Переводчики могут попросить разъяснить ситуацию,в которой встречается та или иная фраза.Например,на английском языке мы с удовольствием скажем:&quot;</target>
        </trans-unit>
        <trans-unit id="7cec7716cf837c5d26e64202c8e48b66fd1ee111" translate="yes" xml:space="preserve">
          <source>Transliterate characters missing in encoding to &amp;amp;#NNN; where NNN is the decimal Unicode code point.</source>
          <target state="translated">Транслитерировать символы, отсутствующие в кодировке, в &amp;amp; # NNN; где NNN - десятичная кодовая точка Unicode.</target>
        </trans-unit>
        <trans-unit id="4a944de5b3bc5a013582ea0515548fdc64b85e91" translate="yes" xml:space="preserve">
          <source>Transliterate characters missing in encoding to &amp;amp;#xHHHH; where HHHH is the hexadecimal Unicode code point.</source>
          <target state="translated">Транслитерировать символы, отсутствующие в кодировке, в &amp;amp; # xHHHH; где HHHH - шестнадцатеричный код Unicode.</target>
        </trans-unit>
        <trans-unit id="7531ab4c38b927cd6bd26046089b6f931f4b9669" translate="yes" xml:space="preserve">
          <source>Transliterate characters missing in encoding to \x{HHHH} where HHHH is the hexadecimal Unicode code point.</source>
          <target state="translated">Перевести символы,отсутствующие в кодировке,на \x{HHHH},где HHHH-шестнадцатеричная точка кода в уникоде.</target>
        </trans-unit>
        <trans-unit id="41fb5a616fd328877f09027e33238e8f08b825a7" translate="yes" xml:space="preserve">
          <source>Transliterates all occurrences of the characters found (or not found if the &lt;code&gt;/c&lt;/code&gt; modifier is specified) in the search list with the positionally corresponding character in the replacement list, possibly deleting some, depending on the modifiers specified. It returns the number of characters replaced or deleted. If no string is specified via the &lt;code&gt;=~&lt;/code&gt; or &lt;code&gt;!~&lt;/code&gt; operator, the &lt;code&gt;$_&lt;/code&gt; string is transliterated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778ddecb6dcc9c5eac19efad6822ed838d8cfd37" translate="yes" xml:space="preserve">
          <source>Transliterates all occurrences of the characters found in the search list with the corresponding character in the replacement list. It returns the number of characters replaced or deleted. If no string is specified via the &lt;code&gt;=~&lt;/code&gt; or &lt;code&gt;!~&lt;/code&gt; operator, the &lt;code&gt;$_&lt;/code&gt; string is transliterated.</source>
          <target state="translated">Транслитерирует все вхождения символов, найденных в списке поиска, с соответствующим символом в списке замены. Возвращает количество замененных или удаленных символов. Если строка не указана с помощью оператора &lt;code&gt;=~&lt;/code&gt; или &lt;code&gt;!~&lt;/code&gt; , Строка &lt;code&gt;$_&lt;/code&gt; транслитерируется.</target>
        </trans-unit>
        <trans-unit id="31352bae87fe97a737e1fbb74f2d29f6b62133a0" translate="yes" xml:space="preserve">
          <source>Transliteration pattern not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70808fd22f433d5ec8e8c5f0aad4eb5242bb686" translate="yes" xml:space="preserve">
          <source>Transliteration replacement not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420a5e0771ab4a0b9e610c4b35eccba70828962b" translate="yes" xml:space="preserve">
          <source>Transparent BigInteger support for Perl</source>
          <target state="translated">Прозрачная поддержка Perl BigInteger</target>
        </trans-unit>
        <trans-unit id="7267fd5dd0f2d5cad0d4fdfbc6f406231fbc74c7" translate="yes" xml:space="preserve">
          <source>Transparent BigNumber support for Perl</source>
          <target state="translated">Прозрачная поддержка Perl BigNumber</target>
        </trans-unit>
        <trans-unit id="d53f15081d775673dd122d267a0fda505ffa50fe" translate="yes" xml:space="preserve">
          <source>Transparent BigNumber/BigRational support for Perl</source>
          <target state="translated">Прозрачный Большой Номер/Большая Рациональная поддержка для Perl</target>
        </trans-unit>
        <trans-unit id="1320fa0059bd04032c977af604f63823046e2bca" translate="yes" xml:space="preserve">
          <source>Trappable errors may be trapped using the eval operator. See &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;. In almost all cases, warnings may be selectively disabled or promoted to fatal errors using the &lt;code&gt;warnings&lt;/code&gt; pragma. See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Обнаруживаемые ошибки могут быть отловлены с помощью оператора eval. См. &lt;a href=&quot;functions/eval&quot;&gt;Eval&lt;/a&gt; . Почти во всех случаях предупреждения могут быть выборочно отключены или преобразованы в фатальные ошибки с помощью &lt;code&gt;warnings&lt;/code&gt; warnings. См. &lt;a href=&quot;warnings&quot;&gt;Предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9594e634fc8d3b1ced220c4bc1c7249b17dcfd33" translate="yes" xml:space="preserve">
          <source>Trappable errors may be trapped using the eval operator. See &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt;. In almost all cases, warnings may be selectively disabled or promoted to fatal errors using the &lt;code&gt;warnings&lt;/code&gt; pragma. See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51ac6ee368e2e9218baa833ba69372fe936aae9" translate="yes" xml:space="preserve">
          <source>Trapping $SIG {__DIE__} other than during program exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b071b49543aa19f12f2274e32fe9c1ba934844" translate="yes" xml:space="preserve">
          <source>Trapping &lt;code&gt;$SIG {__DIE__}&lt;/code&gt; other than during program exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f10d4d7cb6294c3306a64ba2969b74200be2428" translate="yes" xml:space="preserve">
          <source>Traverse a directory tree.</source>
          <target state="translated">Пройдитесь по дереву каталогов.</target>
        </trans-unit>
        <trans-unit id="b2a99160c9547d1ab75aaa55623e70b1b8573818" translate="yes" xml:space="preserve">
          <source>Treat string as multiple lines. That is, change &quot;^&quot; and &quot;$&quot; from matching the start of the string's first line and the end of its last line to matching the start and end of each line within the string.</source>
          <target state="translated">Обращайтесь к строке как к нескольким строкам.То есть,измените &quot;^&quot; и &quot;$&quot; с соответствия начала первой строки и конца последней строки на соответствие начала и конца каждой строки внутри строки.</target>
        </trans-unit>
        <trans-unit id="93fa15e2fd4bd3f0707530f7f374f8fd00c44547" translate="yes" xml:space="preserve">
          <source>Treat string as single line. That is, change &quot;.&quot; to match any character whatsoever, even a newline, which normally it would not match.</source>
          <target state="translated">Обращайтесь со строкой как с одиночной строкой.То есть заменить &quot;...&quot; на любой символ,даже на новую строку,которая обычно не совпадает.</target>
        </trans-unit>
        <trans-unit id="78e54c9da655d8dd5d453436c311823f0a02dca4" translate="yes" xml:space="preserve">
          <source>Treat the string as single line. That is, change &lt;code&gt;&quot;.&quot;&lt;/code&gt; to match any character whatsoever, even a newline, which normally it would not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ce43ffe9e36e380be02d47d4ca4755e5f762f0" translate="yes" xml:space="preserve">
          <source>Treat the string being matched against as multiple lines. That is, change &lt;code&gt;&quot;^&quot;&lt;/code&gt; and &lt;code&gt;&quot;$&quot;&lt;/code&gt; from matching the start of the string's first line and the end of its last line to matching the start and end of each line within the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d54adba605a60e729039d50fd8ece1d374030c" translate="yes" xml:space="preserve">
          <source>Treating errors reported by OS/2 API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369a3fe575602256c74f237530b2066156aadc25" translate="yes" xml:space="preserve">
          <source>Treats ARRAY as a stack by appending the values of LIST to the end of ARRAY. The length of ARRAY increases by the length of LIST. Has the same effect as</source>
          <target state="translated">Рассматривает ARRAY как стек,добавляя значения СПИСКА в конце ARRAY.Длина АРРЕЯ увеличивается на длину СПИСКА.Имеет тот же эффект,что и</target>
        </trans-unit>
        <trans-unit id="4c2b22d2044144acb2e177299ffb0546b35d1302" translate="yes" xml:space="preserve">
          <source>Treats the complete zip file/buffer as a single compressed data stream. When reading in multi-stream mode each member of the zip file/buffer will be uncompressed in turn until the end of the file/buffer is encountered.</source>
          <target state="translated">Рассматривает полный zip-файл/буфер как единый сжатый поток данных.При чтении в многопоточном режиме каждый член zip-файла/буфера будет поочередно распаковываться до тех пор,пока не встретится конец файла/буфера.</target>
        </trans-unit>
        <trans-unit id="9170df3df869288dce7be7560494463cb05b5488" translate="yes" xml:space="preserve">
          <source>Treats the return value of the code block as the condition.</source>
          <target state="translated">В качестве условия рассматривает возвращаемое значение кодового блока.</target>
        </trans-unit>
        <trans-unit id="a635e53ae97925c0c25ad3ddaf7be47457bf89eb" translate="yes" xml:space="preserve">
          <source>Treats the return value of the code block as the condition. Full syntax: &lt;code&gt;(?(?{ &lt;i&gt;code&lt;/i&gt; })&lt;i&gt;then&lt;/i&gt;|&lt;i&gt;else&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076fbc2c1d84c79c360a6aaf693ed414200277af" translate="yes" xml:space="preserve">
          <source>Treats the string in EXPR as a bit vector made up of elements of width BITS and returns the value of the element specified by OFFSET as an unsigned integer. BITS therefore specifies the number of bits that are reserved for each element in the bit vector. This must be a power of two from 1 to 32 (or 64, if your platform supports that).</source>
          <target state="translated">Рассматривает строку в EXPR как битовый вектор,состоящий из элементов ширины BITS и возвращает значение элемента,заданного OFFSET как беззнаковое целое число.Следовательно,BITS определяет количество бит,которое зарезервировано для каждого элемента в битовом векторе.Это должно быть два значения от 1 до 32 (или 64,если ваша платформа это поддерживает).</target>
        </trans-unit>
        <trans-unit id="74c726e22e1ef4f0ff5d0f342fa4b671a8d7e3e6" translate="yes" xml:space="preserve">
          <source>Tree Contents</source>
          <target state="translated">Содержание дерева</target>
        </trans-unit>
        <trans-unit id="bc924ad99a31c83efb674a21a76798fdb63e8535" translate="yes" xml:space="preserve">
          <source>Tries to &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; the given $module or $file. If it loads successfully, the test will pass. Otherwise it fails and displays the load error.</source>
          <target state="translated">Пытается &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; указанный $ module или $ file. Если он загружается успешно, тест будет пройден. В противном случае он не работает и отображает ошибку загрузки.</target>
        </trans-unit>
        <trans-unit id="9e432f6da17926a8d04f67b7c7b25438f0d2078a" translate="yes" xml:space="preserve">
          <source>Tries to &lt;code&gt;require&lt;/code&gt; the given $module or $file. If it loads successfully, the test will pass. Otherwise it fails and displays the load error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82437a05f154f78a4ae190392aa21b46338d0c97" translate="yes" xml:space="preserve">
          <source>Tries to uses &lt;a href=&quot;../../../ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt; &amp;amp; &lt;a href=&quot;../../../io/select&quot;&gt;IO::Select&lt;/a&gt; to communicate with the spawned process if they are available. Falls back onto &lt;code&gt;&lt;a href=&quot;../../../functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пытается использовать &lt;a href=&quot;../../../ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; и &lt;a href=&quot;../../../io/select&quot;&gt;IO :: Select&lt;/a&gt; для связи с порожденным процессом, если они доступны. Падение обратно на &lt;code&gt;&lt;a href=&quot;../../../functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="576659556d288e025b94f7ce5ace34cc997c7d54" translate="yes" xml:space="preserve">
          <source>Tries to uses &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; &amp;amp; &lt;a href=&quot;IO::Select&quot;&gt;IO::Select&lt;/a&gt; to communicate with the spawned process if they are available. Falls back onto &lt;code&gt;open()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0328d99f96d6b6cb2e5370be4979de91fb2ea44" translate="yes" xml:space="preserve">
          <source>Triggered by a delete from %^H, records the key to &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; .</source>
          <target state="translated">Вызывается удалением из% ^ H, записывает ключ в &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b83192144a37d41cc56666387a2897c4231e185" translate="yes" xml:space="preserve">
          <source>Triggered by a delete from &lt;code&gt;%^H&lt;/code&gt;, records the key to &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce25e5857867e6310e792d455213353087781834" translate="yes" xml:space="preserve">
          <source>Triggered by a store to %^H, records the key/value pair to &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; . It is assumed that hints aren't storing anything that would need a deep copy. Maybe we should warn if we find a reference.</source>
          <target state="translated">Запускается хранилищем в% ^ H, записывает пару ключ / значение в &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; . Предполагается, что подсказки не хранят ничего, что требовало бы глубокой копии. Может стоит предупредить, если найдем ссылку.</target>
        </trans-unit>
        <trans-unit id="d308cd2f0c07029bd86f512d81284ed366f6c445" translate="yes" xml:space="preserve">
          <source>Triggered by a store to &lt;code&gt;%^H&lt;/code&gt;, records the key/value pair to &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt;. It is assumed that hints aren't storing anything that would need a deep copy. Maybe we should warn if we find a reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e62fd5a7239de339d5bd00c0d3006bd6b133b17" translate="yes" xml:space="preserve">
          <source>Triggered by clearing %^H, resets &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; .</source>
          <target state="translated">Вызывается очисткой% ^ H, сбрасывает &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b8a309606a54a3100175b28554ebbc2c0bf40e9" translate="yes" xml:space="preserve">
          <source>Triggered by clearing &lt;code&gt;%^H&lt;/code&gt;, resets &lt;code&gt;PL_compiling.cop_hints_hash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e4c026492c440bf32166e0789393487d03b254" translate="yes" xml:space="preserve">
          <source>Trigonometric functions</source>
          <target state="translated">тригонометрические функции</target>
        </trans-unit>
        <trans-unit id="ce550b5479caa5cd0ed1b0d59ad15c9773c7bcdb" translate="yes" xml:space="preserve">
          <source>Trilogy, &lt;code&gt;In the beginning the
Universe was created. This has made a lot of people very angry and
been widely regarded as a bad move&lt;/code&gt; . Their mistake was not of this magnitude so let's forgive them.</source>
          <target state="translated">Трилогия, &lt;code&gt;In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move&lt;/code&gt; . Их ошибка не была такой большой, так что давайте простим их.</target>
        </trans-unit>
        <trans-unit id="bd5caa14d9ae02b51776bb926be345cdff071829" translate="yes" xml:space="preserve">
          <source>Trilogy, &lt;code&gt;In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move&lt;/code&gt;. Their mistake was not of this magnitude so let's forgive them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="28e5d7df36d1a6dde25f3c09a31821344957a89c" translate="yes" xml:space="preserve">
          <source>Troubleshooting these Examples</source>
          <target state="translated">Устранение неполадок в этих примерах</target>
        </trans-unit>
        <trans-unit id="95a9fcae6cc7c433c5ecb181677d9e65f088ed3c" translate="yes" xml:space="preserve">
          <source>Tru64 5.1 documentation on syslog, &lt;a href=&quot;http://h30097.www3.hp.com/docs/base_doc/DOCUMENTATION/V51_HTML/MAN/MAN3/0193____.HTM&quot;&gt;http://h30097.www3.hp.com/docs/base_doc/DOCUMENTATION/V51_HTML/MAN/MAN3/0193____.HTM&lt;/a&gt;</source>
          <target state="translated">Документация Tru64 5.1 по системному журналу, &lt;a href=&quot;http://h30097.www3.hp.com/docs/base_doc/DOCUMENTATION/V51_HTML/MAN/MAN3/0193____.HTM&quot;&gt;http://h30097.www3.hp.com/docs/base_doc/DOCUMENTATION/V51_HTML/MAN/MAN3/0193____.HTM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="048a8987b7e7ec2f729db8f1f26dbe354039d137" translate="yes" xml:space="preserve">
          <source>Tru64 documentation on syslog, &lt;a href=&quot;http://nixdoc.net/man-pages/Tru64/man3/syslog.3.html&quot;&gt;http://nixdoc.net/man-pages/Tru64/man3/syslog.3.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23888b0b14d45068fea9c016be17513c2fc8f457" translate="yes" xml:space="preserve">
          <source>True color and aliases are not supported by the constant interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2032ae3fd0b83aa79eef0ab641b287df415a0ffd" translate="yes" xml:space="preserve">
          <source>True if all testing should be halted immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9109071ad135094f2373ecd2b94d8dc48e87efa6" translate="yes" xml:space="preserve">
          <source>True if an external</source>
          <target state="translated">Верно,если внешний</target>
        </trans-unit>
        <trans-unit id="3d8c968cafa644831ebe062927600b2f8922bcb7" translate="yes" xml:space="preserve">
          <source>True if and only if the version object was created with a underscore, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a74362a5094d39f2b42a3da4ab4b28a9691928" translate="yes" xml:space="preserve">
          <source>True if on an OS where qx operator (or backticks) can redirect &lt;code&gt;STDERR&lt;/code&gt; onto &lt;code&gt;STDOUT&lt;/code&gt; .</source>
          <target state="translated">Истинно, если в ОС, где оператор qx (или обратные кавычки) может перенаправить &lt;code&gt;STDERR&lt;/code&gt; на &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93fe8e82ddc3a4dc6131ed9782aa5f9370ee777e" translate="yes" xml:space="preserve">
          <source>True if on an OS where qx operator (or backticks) can redirect &lt;code&gt;STDERR&lt;/code&gt; onto &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac2287aae7e1950a35f3972fa5317afd518e160" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;callback($hub)&lt;/code&gt; method on the event should be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69954ea7da329e8cdabdea3ecd3ac1d75fce20fd" translate="yes" xml:space="preserve">
          <source>True if the assertion passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df801d4537bfb58354fb108cdce7113cab9309ef" translate="yes" xml:space="preserve">
          <source>True if the event contains diagnostics info. This is useful because a non-verbose harness may choose to hide events that are not in this category. Some formatters may choose to send these to STDERR instead of STDOUT to ensure they are seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a8b59f97958ff045f6c01f8b83b5a2e2ebdf5c" translate="yes" xml:space="preserve">
          <source>True if the event is global in nature and should be seen by all hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd2a61baedabf880cbaef8af523d638bf533482" translate="yes" xml:space="preserve">
          <source>True if the event should be skipped by formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea7f713bb50ee451a6daabd00c2427e62cfb9f7" translate="yes" xml:space="preserve">
          <source>True if the event was buffered and not sent to the formatter independent of a parent (This should never be set when nested is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;undef&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52369ee8420cce3f1adcdcc979064876449bf33b" translate="yes" xml:space="preserve">
          <source>True if the socket is currently positioned at the urgent data mark, false otherwise.</source>
          <target state="translated">Верно,если сокет в данный момент расположен на отметке срочных данных,неверно.</target>
        </trans-unit>
        <trans-unit id="eac6f6323bc5d7181c78c2fb3ebd2b5d82dd47f8" translate="yes" xml:space="preserve">
          <source>True if the socket is currently positioned at the urgent data mark, false otherwise. If your system doesn't yet implement &lt;code&gt;sockatmark&lt;/code&gt; this will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263df4a03022b2922b4599d5befe15e4f094944e" translate="yes" xml:space="preserve">
          <source>True if the source has meta data.</source>
          <target state="translated">Верно,если у источника есть мета-данные.</target>
        </trans-unit>
        <trans-unit id="1060dac952d58237b926360d8015317b306f2cf6" translate="yes" xml:space="preserve">
          <source>True if the subtest is buffered (meaning the formatter has probably not seen them yet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead298b6e06af0e6aa6b218dfc1434b74a59946d" translate="yes" xml:space="preserve">
          <source>True if the subtest is buffered, that is all subevents render at once. If this is false it means all subevents render as they are produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4532ad71a145630727fdc99e9e7077d2ca07a8f" translate="yes" xml:space="preserve">
          <source>True if the system can really fork. This will be false for systems where fork is emulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5626c52704625d46d51a67bed3154dc66584552" translate="yes" xml:space="preserve">
          <source>True if the testing has ended. This MAY return the stack frame of the tool that ended the test, but that is not guaranteed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001c945275af8c53e929fc8bb52b9331e9fa2beb" translate="yes" xml:space="preserve">
          <source>True if this op will be the return value of an lvalue subroutine</source>
          <target state="translated">Верно,если эта опция будет возвращающим значение подпрограмм lvalue</target>
        </trans-unit>
        <trans-unit id="407715ca6f2feb3c98182b0f933855e8539ff50e" translate="yes" xml:space="preserve">
          <source>True if this system is capable of true or pseudo-fork.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5d7ce97ba71eed0cb8d5f95d0b08ebce27950e" translate="yes" xml:space="preserve">
          <source>True if this system is capable of using threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a225ab817ea7fa5d168aaeda6fa091c3d9bf26a1" translate="yes" xml:space="preserve">
          <source>True is returned if the file name begins with &lt;code&gt;drive_letter:&lt;/code&gt; , and if not, File::Spec::Unix file_name_is_absolute() is called.</source>
          <target state="translated">Истина возвращается, если имя файла начинается с &lt;code&gt;drive_letter:&lt;/code&gt; , а если нет, вызывается File :: Spec :: Unix имя_файла_is_absolute ().</target>
        </trans-unit>
        <trans-unit id="feb89466cc01669fa065abcba450c743f09dda61" translate="yes" xml:space="preserve">
          <source>True is returned if the file name begins with &lt;code&gt;drive_letter:&lt;/code&gt;, and if not, File::Spec::Unix file_name_is_absolute() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc30aa25ff3d01d64cda3e60440cb70eb23d7d54" translate="yes" xml:space="preserve">
          <source>True only if the version object is a dotted-decimal version, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714a51854b847f734d4ad3e61a135b245522aeae" translate="yes" xml:space="preserve">
          <source>True while the most recent result was a TODO. Becomes true before the TODO result is returned and stays true until just before the next non- TODO test is returned.</source>
          <target state="translated">Верно,в то время как самый последний результат был TODO.Становится верным до того,как будет возвращен результат TODO,и остается верным до тех пор,пока не будет возвращен следующий тест,не являющийся TODO.</target>
        </trans-unit>
        <trans-unit id="1aceee4ee4f49927d115b3fc82be6c512d7c286c" translate="yes" xml:space="preserve">
          <source>True/false results are never tainted.</source>
          <target state="translated">Правдивые/неправдивые результаты никогда не запятнаются.</target>
        </trans-unit>
        <trans-unit id="f8dc96e0b59ea3e8174d5b669fb89eb4295305d3" translate="yes" xml:space="preserve">
          <source>Truncate $x to an integer value.</source>
          <target state="translated">Усечь $x до целочисленного значения.</target>
        </trans-unit>
        <trans-unit id="191dfbc6a35e73fdb5087a2421ab0ece27f48615" translate="yes" xml:space="preserve">
          <source>Truncate at end-of-file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11625b03167a879105d56ac5232340fe7c1e8727" translate="yes" xml:space="preserve">
          <source>Truncate file suggested by open mode.</source>
          <target state="translated">Усеченный файл,предложенный открытым режимом.</target>
        </trans-unit>
        <trans-unit id="7b41166934a48e946fe5af0522939c8c4005a23a" translate="yes" xml:space="preserve">
          <source>Truncates the file opened on FILEHANDLE, or named by EXPR, to the specified length. Raises an exception if truncate isn't implemented on your system. Returns true if successful, &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69983876ff90a7fef773e08a772b817cd9bc808d" translate="yes" xml:space="preserve">
          <source>Truncates the file opened on FILEHANDLE, or named by EXPR, to the specified length. Raises an exception if truncate isn't implemented on your system. Returns true if successful, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error.</source>
          <target state="translated">Обрезает файл, открытый в FILEHANDLE или названный с помощью EXPR, до указанной длины. Вызывает исключение, если усечение не реализовано в вашей системе. В случае успеха возвращает true, в случае ошибки - &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6b7268dfdb3e49fbc8b9714eadb8dee9d853cfb" translate="yes" xml:space="preserve">
          <source>Truncates the file opened on FILEHANDLE, or named by EXPR, to the specified length. Raises an exception if truncate isn't implemented on your system. Returns true if successful, &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error.</source>
          <target state="translated">Обрезает файл, открытый в FILEHANDLE или названный с помощью EXPR, до указанной длины. Вызывает исключение, если усечение не реализовано в вашей системе. В случае успеха возвращает true, в случае ошибки - &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59f6a9fc2fffb15b78c0b81473cdfd56174958cf" translate="yes" xml:space="preserve">
          <source>Truncation</source>
          <target state="translated">Truncation</target>
        </trans-unit>
        <trans-unit id="2975c0f92fcae4101065548cc1a5e6bfa7744574" translate="yes" xml:space="preserve">
          <source>Truncation to same-or-shorter lengths only. (VOS)</source>
          <target state="translated">Укорачивание только на одну или более короткую длину.(VOS)</target>
        </trans-unit>
        <trans-unit id="07fcbd4e35869ee7c3769699235ad97c3caf7ea4" translate="yes" xml:space="preserve">
          <source>Truth and Falsehood</source>
          <target state="translated">Истина и Ложь</target>
        </trans-unit>
        <trans-unit id="0ea36a88c9652f7de32e4b8cdc539660f9c8bb67" translate="yes" xml:space="preserve">
          <source>Truth. (&lt;code&gt;PL_sv_yes&lt;/code&gt; ) The value is not needed (and ignored).</source>
          <target state="translated">Правда. ( &lt;code&gt;PL_sv_yes&lt;/code&gt; ) Значение не требуется (и игнорируется).</target>
        </trans-unit>
        <trans-unit id="fec0d66775a5a838fdce0113e0fc71a37b212e7d" translate="yes" xml:space="preserve">
          <source>Truth. (&lt;code&gt;PL_sv_yes&lt;/code&gt;) The value is not needed (and ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820aa128934b824418f5ca61678f5828e0a9f3f1" translate="yes" xml:space="preserve">
          <source>Try 'which ld' and 'which ld' (or try 'ar --version' and 'ld --version', which work only for the GNU tools, and will announce themselves to be such), and adjust your PATH so that you are consistently using either the native tools or the GNU tools. After fixing your PATH, you should do 'make distclean' and start all the way from running the Configure since you may have quite a confused situation.</source>
          <target state="translated">Попробуйте &quot;какой ld&quot; и &quot;какой ld&quot; (или попробуйте &quot;ar --version&quot; и &quot;ld --version&quot;,которые работают только для инструментов GNU,и объявят о себе таковыми)и скорректируйте свою PATH так,чтобы вы последовательно пользовались либо родными инструментами,либо инструментами GNU.После исправления своей PATH вам следует сделать 'make distclean' и начать все с запуска команды Configure,поскольку у вас может возникнуть довольно запутанная ситуация.</target>
        </trans-unit>
        <trans-unit id="98c21aef49a5ddf4f1e39c55f7f2477e1906d688" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;perldoc Amiga::ARexx&lt;/code&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e033ddf358a130409c1ab5546e94f94b80bcb2f" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;perldoc Amiga::Exec&lt;/code&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfec8d0f349c3c42fb9d1815573a589ac82ef522" translate="yes" xml:space="preserve">
          <source>Try and match a closing delimiter bracket. If the bracket was the same species as the last opening bracket, return the substring to that point. If the bracket was mismatched, return an error.</source>
          <target state="translated">Попробуйте подобрать закрывающуюся разделительную скобку.Если скобка была того же вида,что и последняя открывающаяся скобка,верните подложку в эту точку.Если скобка была неправильно подобрана,верните ошибку.</target>
        </trans-unit>
        <trans-unit id="3534e8ec8243f82da173a0a961f29a6061ccc5a4" translate="yes" xml:space="preserve">
          <source>Try every conceivable way to get hostname</source>
          <target state="translated">Попробуйте все возможные способы получить имя хозяина.</target>
        </trans-unit>
        <trans-unit id="dfea66ec3b5d472c8a85f9f4143d2c2a2932e7a3" translate="yes" xml:space="preserve">
          <source>Try hard not to exceed 79-columns</source>
          <target state="translated">Старайтесь не превышать 79 столбцов</target>
        </trans-unit>
        <trans-unit id="71156f6966e318bbb69b3350da865612c3413590" translate="yes" xml:space="preserve">
          <source>Try keeping around the seekpointer and go there, like this:</source>
          <target state="translated">Попробуй держаться рядом с Искателем и иди туда,вот так:</target>
        </trans-unit>
        <trans-unit id="5ab49ef558819708ac26895c52750c3610705d02" translate="yes" xml:space="preserve">
          <source>Try not to launch headlong into developing your module without spending some time thinking first. A little forethought may save you a vast amount of effort later on.</source>
          <target state="translated">Постарайтесь не запускать без промедления разработку вашего модуля,не тратя время на размышления.Немного продуманности может сэкономить вам огромное количество усилий в дальнейшем.</target>
        </trans-unit>
        <trans-unit id="66c86b400f1e32f25dbc921f7ed16eeea4ab2376" translate="yes" xml:space="preserve">
          <source>Try the &lt;a href=&quot;Net::FTP&quot;&gt;Net::FTP&lt;/a&gt;, &lt;a href=&quot;TCP::Client&quot;&gt;TCP::Client&lt;/a&gt;, and &lt;a href=&quot;Net::Telnet&quot;&gt;Net::Telnet&lt;/a&gt; modules (available from CPAN). &lt;a href=&quot;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&quot;&gt;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&lt;/a&gt; will also help for emulating the telnet protocol, but &lt;a href=&quot;Net::Telnet&quot;&gt;Net::Telnet&lt;/a&gt; is quite probably easier to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2b567df2700cceb3e59d9f8a3eb3ca3092a77c" translate="yes" xml:space="preserve">
          <source>Try the &lt;a href=&quot;net/ftp&quot;&gt;Net::FTP&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/TCP::Client&quot;&gt;TCP::Client&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Net::Telnet&quot;&gt;Net::Telnet&lt;/a&gt; modules (available from CPAN). &lt;a href=&quot;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&quot;&gt;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&lt;/a&gt; will also help for emulating the telnet protocol, but &lt;a href=&quot;http://search.cpan.org/perldoc/Net::Telnet&quot;&gt;Net::Telnet&lt;/a&gt; is quite probably easier to use.</source>
          <target state="translated">Попробуйте модули &lt;a href=&quot;net/ftp&quot;&gt;Net :: FTP&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/TCP::Client&quot;&gt;TCP :: Client&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/Net::Telnet&quot;&gt;Net :: Telnet&lt;/a&gt; (доступны на CPAN). &lt;a href=&quot;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&quot;&gt;http://www.cpan.org/scripts/netstuff/telnet.emul.shar&lt;/a&gt; также поможет имитировать протокол telnet, но &lt;a href=&quot;http://search.cpan.org/perldoc/Net::Telnet&quot;&gt;Net :: Telnet,&lt;/a&gt; вероятно, проще в использовании.</target>
        </trans-unit>
        <trans-unit id="87f2df3af873276d11f18dcdfa6067907516ef82" translate="yes" xml:space="preserve">
          <source>Try the first alternative in the first group 'abd'.</source>
          <target state="translated">Попробуйте первую альтернативу в первой группе 'абд'.</target>
        </trans-unit>
        <trans-unit id="8fdc9fd893f9837a30290ddcdb863de474cd49f7" translate="yes" xml:space="preserve">
          <source>Try the native, UDP socket then UNIX domain socket mechanisms:</source>
          <target state="translated">Попробуйте &quot;родной&quot;,UDP сокет,а затем механизмы UNIX доменных сокетов:</target>
        </trans-unit>
        <trans-unit id="6a75e271162bdc3d061e3493d3ce114d627fc256" translate="yes" xml:space="preserve">
          <source>Try the resources in &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;.</source>
          <target state="translated">Попробуйте ресурсы в &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aacef041b76d57895de9d7f5cee32482707bd3b3" translate="yes" xml:space="preserve">
          <source>Try to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict qw(...);&lt;/code&gt; ). Remember that you can add &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict qw(...);&lt;/code&gt; to individual blocks of code that need less strictness.</source>
          <target state="translated">Попробуйте &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; (или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict qw(...);&lt;/code&gt; ). Помните , что вы не можете добавить &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict qw(...);&lt;/code&gt; к отдельным блокам кода, требующим меньшей строгости.</target>
        </trans-unit>
        <trans-unit id="dbe02bedd5bb36eab5b4bbe32b7d4940cf95d2ec" translate="yes" xml:space="preserve">
          <source>Try to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings qw(...);&lt;/code&gt; ). Remember that you can add &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings qw(...);&lt;/code&gt; to individual blocks of code that need less warnings.</source>
          <target state="translated">Попробуйте &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings;&lt;/code&gt; (или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings qw(...);&lt;/code&gt; ). Помните , что вы не можете добавить &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings qw(...);&lt;/code&gt; к отдельным блокам кода, которые требуют меньше предупреждений.</target>
        </trans-unit>
        <trans-unit id="38b826b6e348509b8760d8f24eae463b23ce7bf6" translate="yes" xml:space="preserve">
          <source>Try to &lt;code&gt;use strict;&lt;/code&gt; (or &lt;code&gt;use strict qw(...);&lt;/code&gt;). Remember that you can add &lt;code&gt;no strict qw(...);&lt;/code&gt; to individual blocks of code that need less strictness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf7f5a326028f0c812e9c509d8082b45d0e5a3e" translate="yes" xml:space="preserve">
          <source>Try to &lt;code&gt;use warnings;&lt;/code&gt; (or &lt;code&gt;use warnings qw(...);&lt;/code&gt;). Remember that you can add &lt;code&gt;no warnings qw(...);&lt;/code&gt; to individual blocks of code that need less warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a50d23e31ca789a858a654feff08b918836c974" translate="yes" xml:space="preserve">
          <source>Try to color output. See &lt;a href=&quot;../tap/formatter/base#new&quot;&gt;new in TAP::Formatter::Base&lt;/a&gt;.</source>
          <target state="translated">Попробуй цветной вывод. См. &lt;a href=&quot;../tap/formatter/base#new&quot;&gt;Новое в TAP :: Formatter :: Base&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56802a31d085c41de140ede22328a67086473d5e" translate="yes" xml:space="preserve">
          <source>Try to color output. See &lt;a href=&quot;TAP::Formatter::Base#new&quot;&gt;&quot;new&quot; in TAP::Formatter::Base&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e97a54a5e20ef4c3c124d4963b017c39c1dad7b" translate="yes" xml:space="preserve">
          <source>Try to design the new module to be easy to extend and reuse.</source>
          <target state="translated">Попробуйте сконструировать новый модуль,чтобы его было легко расширять и повторно использовать.</target>
        </trans-unit>
        <trans-unit id="220ea4d529b6fa37d1fa97bbb19f2fed77ce5e5b" translate="yes" xml:space="preserve">
          <source>Try to determine name of extension being built. We begin with the name of the current directory. Since VMS filenames are case-insensitive, however, we look for a</source>
          <target state="translated">Попробуйте определить название строящегося расширения.Начнем с имени текущей директории.Поскольку имена файлов VMS не чувствительны к регистру,тем не менее,мы ищем</target>
        </trans-unit>
        <trans-unit id="909a91fc6d3b48263691b246eef6c09eb4ec3bfc" translate="yes" xml:space="preserve">
          <source>Try to determine the width of the screen and the bold and underline sequences for the terminal from termcap, and use that information in formatting the output. Output will be wrapped at two columns less than the width of your terminal device. Using this option requires that your system have a termcap file somewhere where Term::Cap can find it and requires that your system support termios. With this option, the output of &lt;b&gt;pod2text&lt;/b&gt; will contain terminal control sequences for your current terminal type.</source>
          <target state="translated">Попытайтесь определить ширину экрана и последовательности жирного и подчеркнутого шрифтов для терминала с помощью termcap и используйте эту информацию при форматировании вывода. Вывод будет заключен в два столбца меньше ширины вашего оконечного устройства. Использование этой опции требует, чтобы ваша система имела файл termcap где-нибудь, где Term :: Cap может его найти, и требует, чтобы ваша система поддерживала termios. С этой опцией вывод &lt;b&gt;pod2text&lt;/b&gt; будет содержать последовательности управления терминалом для вашего текущего типа терминала.</target>
        </trans-unit>
        <trans-unit id="08f15a05901602892a511e670ab4aa0307df4226" translate="yes" xml:space="preserve">
          <source>Try to document your code and use Pod formatting in a consistent way. Here are commonly expected conventions:</source>
          <target state="translated">Попробуйте задокументировать свой код и последовательно использовать форматирование Pod.Вот обычно ожидаемые конвенции:</target>
        </trans-unit>
        <trans-unit id="c88c728349f5a2409f402906caa2d933f74c0865" translate="yes" xml:space="preserve">
          <source>Try to match a quote or quotelike operator. If found, call &lt;code&gt;extract_quotelike&lt;/code&gt; to eat it. If &lt;code&gt;extract_quotelike&lt;/code&gt; fails, return the error it returned. Otherwise go back to step 1.</source>
          <target state="translated">Попробуйте сопоставить цитату или оператор цитаты. Если он найден, вызовите &lt;code&gt;extract_quotelike&lt;/code&gt; , чтобы съесть его. Если &lt;code&gt;extract_quotelike&lt;/code&gt; не работает, вернуть возвращенную ошибку. В противном случае вернитесь к шагу 1.</target>
        </trans-unit>
        <trans-unit id="fed009e07cf40a3bfaccb23b101b1df3951ecefd" translate="yes" xml:space="preserve">
          <source>Try to match an opening delimiter bracket. If found, call &lt;code&gt;extract_codeblock&lt;/code&gt; recursively to eat the embedded block. If the recursive call fails, return an error. Otherwise, go back to step 1.</source>
          <target state="translated">Попробуйте сопоставить открывающую скобку-ограничитель. Если найдено, рекурсивно вызовите &lt;code&gt;extract_codeblock&lt;/code&gt; , чтобы съесть встроенный блок. Если рекурсивный вызов завершился неудачно, верните ошибку. В противном случае вернитесь к шагу 1.</target>
        </trans-unit>
        <trans-unit id="1bf160ae95bc79040defdb4258d5fad8caa20a29" translate="yes" xml:space="preserve">
          <source>Try to obtain the latest version of the Windows SDK. Sometimes these packages contain a particular Windows OS version in their name, but actually work on other OS versions too. For example, the &quot;Windows Server 2003 R2 Platform SDK&quot; also runs on Windows XP SP2 and Windows 2000.</source>
          <target state="translated">Попробуйте получить последнюю версию Windows SDK.Иногда эти пакеты содержат определенную версию ОС Windows в своем названии,но на самом деле работают и на других версиях ОС.Например,&quot;Windows Server 2003 R2 Platform SDK&quot; также работает на Windows XP SP2 и Windows 2000.</target>
        </trans-unit>
        <trans-unit id="962ca701cc2570a663505435d963dc55f234f4d9" translate="yes" xml:space="preserve">
          <source>Trying to create a new child with a previous child still active (i.e., &lt;code&gt;finalize&lt;/code&gt; not called) will &lt;code&gt;croak&lt;/code&gt; .</source>
          <target state="translated">Попытка создать нового дочернего элемента с активным предыдущим дочерним элементом (т.е. &lt;code&gt;finalize&lt;/code&gt; не вызывается) приведет к &lt;code&gt;croak&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0c592184c4820418323672dd4337df40c4098b0" translate="yes" xml:space="preserve">
          <source>Trying to do too much</source>
          <target state="translated">Пытаюсь сделать слишком много</target>
        </trans-unit>
        <trans-unit id="44d272c0c6193575553012dfbe62f22573eeb82f" translate="yes" xml:space="preserve">
          <source>Trying to run a test when you have an open child will also &lt;code&gt;croak&lt;/code&gt; and cause the test suite to fail.</source>
          <target state="translated">Попытка запустить тест, когда у вас есть открытый ребенок, также будет &lt;code&gt;croak&lt;/code&gt; и вызывать сбой набора тестов.</target>
        </trans-unit>
        <trans-unit id="e1251ee8a07b3dea6c343e31961e5913e11f0ce3" translate="yes" xml:space="preserve">
          <source>Tune the internal settings for the deflate object &lt;code&gt;$d&lt;/code&gt; . This option is only available if you are running zlib 1.2.2.3 or better.</source>
          <target state="translated">Настройте внутренние параметры для объекта deflate &lt;code&gt;$d&lt;/code&gt; . Этот параметр доступен, только если вы используете zlib 1.2.2.3 или выше.</target>
        </trans-unit>
        <trans-unit id="3896985029531ee0a442a6eafffd21b16e99bab0" translate="yes" xml:space="preserve">
          <source>Tune the internal settings for the deflate object &lt;code&gt;$d&lt;/code&gt;. This option is only available if you are running zlib 1.2.2.3 or better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008eee580921a65a5e935994d388ebe43c6df0cd" translate="yes" xml:space="preserve">
          <source>Tuning the way RESOLVE_SYMLINK will works</source>
          <target state="translated">Настройка того,как будет работать RESOLVE_SYMLINK</target>
        </trans-unit>
        <trans-unit id="8c3f4c8cc5ca57e1d0107a8c0347eb3646189c97" translate="yes" xml:space="preserve">
          <source>Tunnelling &lt;code&gt;https&lt;/code&gt; over an &lt;code&gt;http&lt;/code&gt; proxy using the CONNECT method is supported. If your proxy uses &lt;code&gt;https&lt;/code&gt; itself, you can not tunnel &lt;code&gt;https&lt;/code&gt; over it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7153e6702b4ea48c7c0d01affdef0e1b39fd6dc" translate="yes" xml:space="preserve">
          <source>Turkey</source>
          <target state="translated">Turkey</target>
        </trans-unit>
        <trans-unit id="f7db0bf3a9c02aa40e34f07d8431257fcf327327" translate="yes" xml:space="preserve">
          <source>Turn =head1 directives into links pointing to the top of the HTML file.</source>
          <target state="translated">Поверните директивы =head1 в ссылки,указывающие на вершину HTML-файла.</target>
        </trans-unit>
        <trans-unit id="00eb812c53d2b2fc577cde21da51d4b0a2dbeaba" translate="yes" xml:space="preserve">
          <source>Turn IPC off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f87dc87ea378d835e56e5bfd248ea1a352c832" translate="yes" xml:space="preserve">
          <source>Turn Pod into XML</source>
          <target state="translated">Превратите Pod в XML</target>
        </trans-unit>
        <trans-unit id="8e7cc74dfcc71c13798fc4a8a0bda3cb164ed4c1" translate="yes" xml:space="preserve">
          <source>Turn Pod::Simple events into method calls</source>
          <target state="translated">Превратить Pod::Простые события в вызовы методов</target>
        </trans-unit>
        <trans-unit id="87a4a4a475f00352f77a10d3ec1fd9eee936c4ee" translate="yes" xml:space="preserve">
          <source>Turn off Apple tar's tendency to copy resource forks as &quot;._foo&quot; files.</source>
          <target state="translated">Выключите склонность Apple tar копировать запросы ресурсов как &quot;._foo&quot; файлы.</target>
        </trans-unit>
        <trans-unit id="002da87886e80eee99a8ca6dc4e3fe4cabdcf032" translate="yes" xml:space="preserve">
          <source>Turn off CPAN.pm's attempts to lock anything. You should be careful with this since you might end up with multiple scripts trying to muck in the same directory. This isn't so much of a concern if you're loading a special config with &lt;code&gt;-j&lt;/code&gt;, and that config sets up its own work directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c822c937f705b4f59deefb9b7306dfc70d6869" translate="yes" xml:space="preserve">
          <source>Turn off IPC polling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f985f0fcda86b1c258609df3d266b43ed8ce4a" translate="yes" xml:space="preserve">
          <source>Turn on IPC for threading or forking support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d8224908b27731eb611ee5800a332f08bd6efe" translate="yes" xml:space="preserve">
          <source>Turn on colour in Test::Builder::Tester</source>
          <target state="translated">Включить цвет в Тест::Строитель::Тестер</target>
        </trans-unit>
        <trans-unit id="33bdb8453820e783c9ed80ead4da0eab3e622342" translate="yes" xml:space="preserve">
          <source>Turn on cpan warnings. This checks various things, like directory permissions, and tells you about problems you might have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaaf6cc176020f3991943f2032de33eccbdb645" translate="yes" xml:space="preserve">
          <source>Turn on debugging messages.</source>
          <target state="translated">Включите отладочные сообщения.</target>
        </trans-unit>
        <trans-unit id="987617e4099bb6d10ab491d6ac24dec67dd616d3" translate="yes" xml:space="preserve">
          <source>Turn on polling. This will cull events from other processes and threads every time a context is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5afa3624933dbb94708b864157bd75149a4bc45" translate="yes" xml:space="preserve">
          <source>Turn on the UTF-8 status of an SV (the data is not changed, just the flag). Do not use frivolously.</source>
          <target state="translated">Включите UTF-8 статус SV (данные не меняются,только флаг).Не использовать фривольно.</target>
        </trans-unit>
        <trans-unit id="58ffd65543f8495b744e9f3f6c44eb3bd2d31977" translate="yes" xml:space="preserve">
          <source>Turn on the escaping of characters as described in the SPACES AND TABS section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9903e627171cb3011421fef7af4a686d6ebc3e08" translate="yes" xml:space="preserve">
          <source>Turn on/off printing of warnings. Repeating &lt;b&gt;-warnings&lt;/b&gt; increases the warning level, i.e. more warnings are printed. Currently increasing to level two causes flagging of unescaped &quot;&amp;lt;,&amp;gt;&quot; characters.</source>
          <target state="translated">Включение / выключение печати предупреждений. Повторение &lt;b&gt;предупреждений&lt;/b&gt; увеличивает уровень предупреждений, т. &lt;b&gt;Е. Печатается&lt;/b&gt; больше предупреждений. В настоящее время повышение до второго уровня вызывает пометку неэкранированных символов &amp;laquo;&amp;lt;,&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d7dd646019946f4186b2c9415767806d113e6794" translate="yes" xml:space="preserve">
          <source>Turn warnings on/off.</source>
          <target state="translated">Включить/выключить предупреждения.</target>
        </trans-unit>
        <trans-unit id="4c628137dd54154b5661d62a2c76528177ce2c0e" translate="yes" xml:space="preserve">
          <source>Turning on one of the character set flags with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re&lt;/code&gt; takes precedence over the &lt;code&gt;locale&lt;/code&gt; pragma and the 'unicode_strings' &lt;code&gt;feature&lt;/code&gt; , for regular expressions. Turning off one of these flags when it is active reverts to the behaviour specified by whatever other pragmata are in scope. For example:</source>
          <target state="translated">Включение одного из наборов символов флагов с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re&lt;/code&gt; имеет приоритет над &lt;code&gt;locale&lt;/code&gt; прагму и &amp;laquo;unicode_strings&amp;raquo; &lt;code&gt;feature&lt;/code&gt; , для регулярных выражений. Отключение одного из этих флагов, когда он активен, возвращает к поведению, заданному любыми другими прагматами в области видимости. Например:</target>
        </trans-unit>
        <trans-unit id="bab3f5ad74d31e2186209289e3cd6bd581941efe" translate="yes" xml:space="preserve">
          <source>Turning on one of the character set flags with &lt;code&gt;use re&lt;/code&gt; takes precedence over the &lt;code&gt;locale&lt;/code&gt; pragma and the 'unicode_strings' &lt;code&gt;feature&lt;/code&gt;, for regular expressions. Turning off one of these flags when it is active reverts to the behaviour specified by whatever other pragmata are in scope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dac2f62695f453fd439059f0a117cf373d1f773" translate="yes" xml:space="preserve">
          <source>Turns every &lt;code&gt;head1&lt;/code&gt; heading into a link back to the top of the page. By default, no backlinks are generated.</source>
          <target state="translated">Превращает каждый заголовок &lt;code&gt;head1&lt;/code&gt; в ссылку обратно в верхнюю часть страницы. По умолчанию обратные ссылки не создаются.</target>
        </trans-unit>
        <trans-unit id="488b4a24fda23c677bfd758dfeda4e2b3e28ea5b" translate="yes" xml:space="preserve">
          <source>Turns on all &quot;extra&quot; debugging options.</source>
          <target state="translated">Включает все &quot;дополнительные&quot; опции отладки.</target>
        </trans-unit>
        <trans-unit id="8a6abc6af101e3e68b329eb351f149732ea8c3d9" translate="yes" xml:space="preserve">
          <source>Turns on all compile related debug options.</source>
          <target state="translated">Включает все связанные с компиляцией опции отладки.</target>
        </trans-unit>
        <trans-unit id="377f42734b94211c01fa848b2645c0c159ecedcd" translate="yes" xml:space="preserve">
          <source>Turns on all execute related debug options.</source>
          <target state="translated">Включает все связанные с исполнением опции отладки.</target>
        </trans-unit>
        <trans-unit id="16cf0e466a4f6fe0b3456839377f934eda051d4e" translate="yes" xml:space="preserve">
          <source>Turns on all non-extra compile related debug options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0c3643227c9fa0f255763a21a1f9559b3e9dd1" translate="yes" xml:space="preserve">
          <source>Turns on all non-extra execute related debug options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf78d64b4c15f8d89c3f09aea595a015508f3471" translate="yes" xml:space="preserve">
          <source>Turns on autoflush, print ARGS and then restores the autoflush status of the &lt;code&gt;IO::Handle&lt;/code&gt; object. Returns the return value from print.</source>
          <target state="translated">Включает автозапуск, печатает ARGS, а затем восстанавливает статус автозапуска объекта &lt;code&gt;IO::Handle&lt;/code&gt; . Возвращает возвращаемое значение из печати.</target>
        </trans-unit>
        <trans-unit id="2d1676fcc040bdf1deeab307eee1f9a1faa4d87a" translate="yes" xml:space="preserve">
          <source>Turns on debug output related to the process of parsing the pattern.</source>
          <target state="translated">Включает отладочный вывод,связанный с процессом парсинга шаблона.</target>
        </trans-unit>
        <trans-unit id="80ae89d796a9f5474c9cf55351133039b045499c" translate="yes" xml:space="preserve">
          <source>Turns on debugging</source>
          <target state="translated">Включает отладку</target>
        </trans-unit>
        <trans-unit id="0b71618ab3c580ced56e12be5afa8ca78d10b841" translate="yes" xml:space="preserve">
          <source>Turns on debugging of the main matching loop.</source>
          <target state="translated">Включает отладку основного цикла совмещения.</target>
        </trans-unit>
        <trans-unit id="821dfaade517bc8af20717058964e6e45387b304" translate="yes" xml:space="preserve">
          <source>Turns on the magical status of an SV. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d12b512bcc17c858f7f78847cab2c7f6461efd3" translate="yes" xml:space="preserve">
          <source>Turns on the magical status of an SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Включает магический статус СВ. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5ed69f1e400ca234d376650a653b6521d5c1651" translate="yes" xml:space="preserve">
          <source>Turns the @metadata_pairs into YAML.</source>
          <target state="translated">Превращает пары @metadata_pairs в YAML.</target>
        </trans-unit>
        <trans-unit id="606c2af8d67a4d7dc7224ecdbb198b95627a3d18" translate="yes" xml:space="preserve">
          <source>Tutorial on making a new module.</source>
          <target state="translated">Учебное пособие по созданию нового модуля.</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="4106aa6fe38782986e71b6df351f9eed9adc1100" translate="yes" xml:space="preserve">
          <source>Tutorials, end-user documentation, research papers, FAQs etc are not appropriate in a module's main documentation. If you really want to write these, include them as sub-documents such as &lt;code&gt;My::Module::Tutorial&lt;/code&gt; or &lt;code&gt;My::Module::FAQ&lt;/code&gt; and provide a link in the SEE ALSO section of the main documentation.</source>
          <target state="translated">Учебники, документация для конечных пользователей, исследовательские работы, ответы на часто задаваемые вопросы и т. Д. Не подходят для основной документации модуля. Если вы действительно хотите их написать, включите их в качестве дополнительных документов, таких как &lt;code&gt;My::Module::Tutorial&lt;/code&gt; или &lt;code&gt;My::Module::FAQ&lt;/code&gt; и дайте ссылку в разделе СМОТРИ ТАКЖЕ основной документации.</target>
        </trans-unit>
        <trans-unit id="d4f6fcebc83fe08414440f2690253120c9bf99c3" translate="yes" xml:space="preserve">
          <source>Tweak the style of B::Deparse's output. The letters should follow directly after the 's', with no space or punctuation. The following options are available:</source>
          <target state="translated">Тонизируйте стиль Б::Депарса.Буквы должны следовать непосредственно за 's',без пробелов и знаков препинания.Доступны следующие варианты:</target>
        </trans-unit>
        <trans-unit id="8b77b783948e5ce8fbd237831d47a3e2aa25c8cf" translate="yes" xml:space="preserve">
          <source>Two additional extensions by Andreas Kaiser, &lt;code&gt;OS2::UPM&lt;/code&gt; , and &lt;code&gt;OS2::FTP&lt;/code&gt; , are included into &lt;code&gt;ILYAZ&lt;/code&gt; directory, mirrored on CPAN. Other OS/2-related extensions are available too.</source>
          <target state="translated">Два дополнительных расширения от Андреаса Кайзера, &lt;code&gt;OS2::UPM&lt;/code&gt; и &lt;code&gt;OS2::FTP&lt;/code&gt; , включены в каталог &lt;code&gt;ILYAZ&lt;/code&gt; , отраженный на CPAN. Также доступны другие расширения, связанные с OS / 2.</target>
        </trans-unit>
        <trans-unit id="e1e1c471607b1953c35055b694d94ae2115e7490" translate="yes" xml:space="preserve">
          <source>Two additional extensions by Andreas Kaiser, &lt;code&gt;OS2::UPM&lt;/code&gt;, and &lt;code&gt;OS2::FTP&lt;/code&gt;, are included into &lt;code&gt;ILYAZ&lt;/code&gt; directory, mirrored on CPAN. Other OS/2-related extensions are available too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225de66ed8612f5eaedcbe3517b9b8a030dd1dfb" translate="yes" xml:space="preserve">
          <source>Two additional fields &lt;code&gt;free&lt;/code&gt; , &lt;code&gt;used&lt;/code&gt; contain array references which provide per-bucket count of free and used chunks. Two other fields &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; contain array references which provide the information about the allocated size and usable size of chunks in each bucket. Again, see &lt;a href=&quot;../perldebguts#Using-%24ENV%7bPERL_DEBUG_MSTATS%7d&quot;&gt;Using $ENV{PERL_DEBUG_MSTATS} in perldebguts&lt;/a&gt; for details.</source>
          <target state="translated">Два дополнительных полей &lt;code&gt;free&lt;/code&gt; , &lt;code&gt;used&lt;/code&gt; содержат ссылки на массивы , которые обеспечивают за счет ведре-свободных и используемых кусков. Два других поля &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; содержат ссылки на массивы, которые предоставляют информацию о выделенном размере и используемом размере блоков в каждой корзине. Опять же, подробности см. В разделе &lt;a href=&quot;../perldebguts#Using-%24ENV%7bPERL_DEBUG_MSTATS%7d&quot;&gt;Использование $ ENV {PERL_DEBUG_MSTATS} в perldebguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="645e14dd280baf021efadb33e4b6285cfb158d60" translate="yes" xml:space="preserve">
          <source>Two additional fields &lt;code&gt;free&lt;/code&gt;, &lt;code&gt;used&lt;/code&gt; contain array references which provide per-bucket count of free and used chunks. Two other fields &lt;code&gt;mem_size&lt;/code&gt;, &lt;code&gt;available_size&lt;/code&gt; contain array references which provide the information about the allocated size and usable size of chunks in each bucket. Again, see &lt;a href=&quot;perldebguts#Using-%24ENV%7BPERL_DEBUG_MSTATS%7D&quot;&gt;&quot;Using $ENV{PERL_DEBUG_MSTATS}&quot; in perldebguts&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959e1dbe5c03b6bf54bd2c7c42f5c06de670abcf" translate="yes" xml:space="preserve">
          <source>Two arrays smartmatch if each element in the first array smartmatches (that is, is &quot;in&quot;) the corresponding element in the second array, recursively.</source>
          <target state="translated">Два массива smartmatch,если каждый элемент в первом массиве smartmatches (то есть &quot;in&quot;)соответствующий элемент во втором массиве,рекурсивно.</target>
        </trans-unit>
        <trans-unit id="ef9d289482c44cedd928e08a539e06da234c1ea2" translate="yes" xml:space="preserve">
          <source>Two directories</source>
          <target state="translated">Два справочника</target>
        </trans-unit>
        <trans-unit id="4932b4ce84c4a3c76d97d8ddc1677ad9583f731a" translate="yes" xml:space="preserve">
          <source>Two exceptions are fseek() and ftell(). 32-bit applications should use fseeko(3C) and ftello(3C). These will get automatically mapped to fseeko64() and ftello64().</source>
          <target state="translated">Двумя исключениями являются fseek()и ftell().32-битные приложения должны использовать fseeko(3C)и ftello(3C).Они будут автоматически отображены на fseeko64()и ftello64().</target>
        </trans-unit>
        <trans-unit id="59e6099a51676c8b357d47058d648615908e9535" translate="yes" xml:space="preserve">
          <source>Two functions are provided by</source>
          <target state="translated">Две функции обеспечиваются</target>
        </trans-unit>
        <trans-unit id="362495d14b1f3b1a8e9077a2b6d2d038307cf755" translate="yes" xml:space="preserve">
          <source>Two functions are provided to perform in-memory compression/uncompression of RFC 1950 data streams. They are called &lt;code&gt;compress&lt;/code&gt; and &lt;code&gt;uncompress&lt;/code&gt; .</source>
          <target state="translated">Предусмотрены две функции для выполнения сжатия / распаковки в памяти потоков данных RFC 1950. Их называют &lt;code&gt;compress&lt;/code&gt; и &lt;code&gt;uncompress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60a9bef4c585c40271adbc6700cd51119d598e56" translate="yes" xml:space="preserve">
          <source>Two functions are provided to perform in-memory compression/uncompression of RFC 1950 data streams. They are called &lt;code&gt;compress&lt;/code&gt; and &lt;code&gt;uncompress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fae0daa00d9847553b4c2af0e0bfcf15f43ad2" translate="yes" xml:space="preserve">
          <source>Two hexadecimal numbers separated by horizontal whitespace (space or tabular characters) denoting a range of code points to include.</source>
          <target state="translated">Два шестнадцатеричных числа,разделенных горизонтальными пробелами (пробелами или табличными символами),обозначающими диапазон кодовых точек для включения.</target>
        </trans-unit>
        <trans-unit id="7fe7068b60f3e31f3d2f257534aa6f46077e516b" translate="yes" xml:space="preserve">
          <source>Two hexadecimal numbers separated by horizontal whitespace (space or tabular characters) denoting a range of code points to include. The second number must not be smaller than the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8d21d4a74e99aae1a5fc40b83d3fff90123b23" translate="yes" xml:space="preserve">
          <source>Two nested identical markup commands have been found. Generally this does not make sense.</source>
          <target state="translated">Найдены две вложенные идентичные команды разметки.Обычно это не имеет смысла.</target>
        </trans-unit>
        <trans-unit id="5e76b53030582383f7d551a5e77c668c449dbb3b" translate="yes" xml:space="preserve">
          <source>Two of the codes specified by the standard (XTS which is reserved for testing purposes and XXX which is for transactions where no currency is involved) are omitted.</source>
          <target state="translated">Два из кодов,указанных в стандарте (XTS,который зарезервирован для тестовых целей,и XXX,который предназначен для операций,в которых отсутствует валюта),опущены.</target>
        </trans-unit>
        <trans-unit id="a1d006aec19b5d26f771c4cb3b1aa7d14cd4a562" translate="yes" xml:space="preserve">
          <source>Two or more suspects remain</source>
          <target state="translated">Двое или более подозреваемых остаются</target>
        </trans-unit>
        <trans-unit id="069f392f8b693bf3f912fa721edb551769786910" translate="yes" xml:space="preserve">
          <source>Two other &quot;encapsulation&quot; macros are the PERL_GLOBAL_STRUCT and PERL_GLOBAL_STRUCT_PRIVATE (the latter turns on the former, and the former turns on MULTIPLICITY.) The PERL_GLOBAL_STRUCT causes all the internal variables of Perl to be wrapped inside a single global struct, struct perl_vars, accessible as (globals) &amp;amp;PL_Vars or PL_VarsPtr or the function Perl_GetVars(). The PERL_GLOBAL_STRUCT_PRIVATE goes one step further, there is still a single struct (allocated in main() either from heap or from stack) but there are no global data symbols pointing to it. In either case the global struct should be initialized as the very first thing in main() using Perl_init_global_struct() and correspondingly tear it down after perl_free() using Perl_free_global_struct(), please see</source>
          <target state="translated">Два других макроса &amp;laquo;инкапсуляции&amp;raquo; - это PERL_GLOBAL_STRUCT и PERL_GLOBAL_STRUCT_PRIVATE (последний включает первый, а первый включает MULTIPLICITY.) PERL_GLOBAL_STRUCT заставляет все внутренние переменные Perl заключаться в одну глобальную структуру, доступную как struct perl_vars (глобальные переменные) &amp;amp; PL_Vars или PL_VarsPtr или функция Perl_GetVars (). PERL_GLOBAL_STRUCT_PRIVATE идет еще дальше, все еще есть одна структура (выделенная в main () либо из кучи, либо из стека), но нет глобальных символов данных, указывающих на нее. В любом случае глобальная структура должна быть инициализирована в первую очередь в main () с помощью Perl_init_global_struct () и, соответственно, разорвать ее после perl_free () с помощью Perl_free_global_struct (), см.</target>
        </trans-unit>
        <trans-unit id="9e4d897b2c15b7e4e4ca9fbaec8aab25f6b14e93" translate="yes" xml:space="preserve">
          <source>Two possible uses (besides ignoring the property) come to mind. A singleton class could be implemented this using the generic object. If necessary, an &lt;code&gt;init()&lt;/code&gt; method could die or ignore calls with actual objects (references), so only the generic object will ever exist.</source>
          <target state="translated">На ум приходят два возможных использования (помимо игнорирования свойства). Одноэлементный класс может быть реализован с помощью универсального объекта. При необходимости метод &lt;code&gt;init()&lt;/code&gt; может умереть или игнорировать вызовы с реальными объектами (ссылками), поэтому когда-либо будет существовать только общий объект.</target>
        </trans-unit>
        <trans-unit id="b02b6a9a4575d62354db7ec75686a98545f9466d" translate="yes" xml:space="preserve">
          <source>Two potentially non-obvious but traditional &lt;a href=&quot;#flock-FILEHANDLE%2COPERATION&quot;&gt;&lt;code&gt;flock&lt;/code&gt;&lt;/a&gt; semantics are that it waits indefinitely until the lock is granted, and that its locks are &lt;b&gt;merely advisory&lt;/b&gt;. Such discretionary locks are more flexible, but offer fewer guarantees. This means that programs that do not also use &lt;a href=&quot;#flock-FILEHANDLE%2COPERATION&quot;&gt;&lt;code&gt;flock&lt;/code&gt;&lt;/a&gt; may modify files locked with &lt;a href=&quot;#flock-FILEHANDLE%2COPERATION&quot;&gt;&lt;code&gt;flock&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;, your port's specific documentation, and your system-specific local manpages for details. It's best to assume traditional behavior if you're writing portable programs. (But if you're not, you should as always feel perfectly free to write for your own system's idiosyncrasies (sometimes called &quot;features&quot;). Slavish adherence to portability concerns shouldn't get in the way of your getting your job done.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70abff015732d480e204353f739476e826fe7dc6" translate="yes" xml:space="preserve">
          <source>Two potentially non-obvious but traditional &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; semantics are that it waits indefinitely until the lock is granted, and that its locks are &lt;b&gt;merely advisory&lt;/b&gt;. Such discretionary locks are more flexible, but offer fewer guarantees. This means that programs that do not also use &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; may modify files locked with &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;, your port's specific documentation, and your system-specific local manpages for details. It's best to assume traditional behavior if you're writing portable programs. (But if you're not, you should as always feel perfectly free to write for your own system's idiosyncrasies (sometimes called &quot;features&quot;). Slavish adherence to portability concerns shouldn't get in the way of your getting your job done.)</source>
          <target state="translated">Две потенциально неочевидные, но традиционные семантики &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; заключаются в том, что он бесконечно ждет, пока блокировка не будет предоставлена, и что его блокировки являются &lt;b&gt;просто рекомендательными&lt;/b&gt; . Такие дискреционные блокировки более гибкие, но предлагают меньше гарантий. Это означает, что программы, которые также не используют &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; , могут изменять файлы, заблокированные с помощью &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . См. &lt;a href=&quot;../perlport&quot;&gt;Perlport&lt;/a&gt;, документацию по вашему порту и локальные страницы руководства по вашей системе. Если вы пишете переносимые программы, лучше всего предполагать традиционное поведение. (Но если вы этого не сделаете, вы, как всегда, должны чувствовать себя совершенно свободно, чтобы писать для особенностей вашей собственной системы (иногда называемых &amp;laquo;функциями&amp;raquo;). Рабская приверженность проблемам переносимости не должна мешать вам выполнять свою работу.)</target>
        </trans-unit>
        <trans-unit id="3c9f59ec6423987c8c2fe5d0858f160205e3fc59" translate="yes" xml:space="preserve">
          <source>Two potentially non-obvious but traditional &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; semantics are that it waits indefinitely until the lock is granted, and that its locks are &lt;b&gt;merely advisory&lt;/b&gt;. Such discretionary locks are more flexible, but offer fewer guarantees. This means that programs that do not also use &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; may modify files locked with &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;, your port's specific documentation, and your system-specific local manpages for details. It's best to assume traditional behavior if you're writing portable programs. (But if you're not, you should as always feel perfectly free to write for your own system's idiosyncrasies (sometimes called &quot;features&quot;). Slavish adherence to portability concerns shouldn't get in the way of your getting your job done.)</source>
          <target state="translated">Две потенциально неочевидные, но традиционные семантики &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; заключаются в том, что он бесконечно ждет, пока блокировка не будет предоставлена, и что его блокировки являются &lt;b&gt;просто рекомендательными&lt;/b&gt; . Такие дискреционные блокировки более гибкие, но предлагают меньше гарантий. Это означает, что программы, которые также не используют &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; , могут изменять файлы, заблокированные с помощью &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . См. &lt;a href=&quot;perlport&quot;&gt;Perlport&lt;/a&gt;, документацию по вашему порту и локальные страницы руководства по вашей системе. Если вы пишете переносимые программы, лучше всего предполагать традиционное поведение. (Но если вы этого не сделаете, вы, как всегда, должны чувствовать себя совершенно свободно, чтобы писать для особенностей вашей собственной системы (иногда называемых &amp;laquo;функциями&amp;raquo;). Рабская приверженность проблемам переносимости не должна мешать вам выполнять свою работу.)</target>
        </trans-unit>
        <trans-unit id="53df84b423920613232d12c96d5eb675ef01a9db" translate="yes" xml:space="preserve">
          <source>Two potentially non-obvious but traditional flock semantics are that it waits indefinitely until the lock is granted, and that its locks are</source>
          <target state="translated">Две потенциально неочевидные,но традиционные семантики стаи заключаются в том,что она ждет неопределенно долго,пока замок не будет выдан,и что ее замки являются</target>
        </trans-unit>
        <trans-unit id="778a62aee9043b393531476babc83e7e729243c9" translate="yes" xml:space="preserve">
          <source>Two special locales are worth particular mention: &quot;C&quot; and &quot;POSIX&quot;. Currently these are effectively the same locale: the difference is mainly that the first one is defined by the C standard, the second by the POSIX standard. They define the &lt;b&gt;default locale&lt;/b&gt; in which every program starts in the absence of locale information in its environment. (The</source>
          <target state="translated">Особо следует упомянуть две специальные локали: &amp;laquo;C&amp;raquo; и &amp;laquo;POSIX&amp;raquo;. В настоящее время это фактически один и тот же языковой стандарт: разница в основном в том, что первый определяется стандартом C, а второй - стандартом POSIX. Они определяют &lt;b&gt;языковой стандарт&lt;/b&gt; по &lt;b&gt;умолчанию,&lt;/b&gt; в котором каждая программа запускается при отсутствии информации о языковом стандарте в ее среде. (The</target>
        </trans-unit>
        <trans-unit id="001ed180b265179aa35dbaf576484db20b8f3115" translate="yes" xml:space="preserve">
          <source>Two special marker lines will bracket debugging code, like this:</source>
          <target state="translated">Две специальные строки маркеров будут заключены в скобки для отладочного кода,вот так:</target>
        </trans-unit>
        <trans-unit id="fc4c89a57e0f51cea54d0e2e158fcc3083bc5fa2" translate="yes" xml:space="preserve">
          <source>Two threads both access &lt;code&gt;$x&lt;/code&gt; . Each thread can potentially be interrupted at any point, or be executed in any order. At the end, &lt;code&gt;$x&lt;/code&gt; could be 3 or 4, and both &lt;code&gt;$y&lt;/code&gt; and &lt;code&gt;$z&lt;/code&gt; could be 2 or 3.</source>
          <target state="translated">Два потока обращаются к &lt;code&gt;$x&lt;/code&gt; . Каждый поток потенциально может быть прерван в любой момент или выполнен в любом порядке. В конце, &lt;code&gt;$x&lt;/code&gt; может быть 3 или 4, а &lt;code&gt;$y&lt;/code&gt; и &lt;code&gt;$z&lt;/code&gt; могут быть 2 или 3.</target>
        </trans-unit>
        <trans-unit id="ed596ad5315f7ee111b20fc3225326599075e7d0" translate="yes" xml:space="preserve">
          <source>Two threads both access &lt;code&gt;$x&lt;/code&gt;. Each thread can potentially be interrupted at any point, or be executed in any order. At the end, &lt;code&gt;$x&lt;/code&gt; could be 3 or 4, and both &lt;code&gt;$y&lt;/code&gt; and &lt;code&gt;$z&lt;/code&gt; could be 2 or 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a040608578e9e9c915007f47fc1e5b14ac218a6c" translate="yes" xml:space="preserve">
          <source>Two ways. One is to build the module normally...</source>
          <target state="translated">Два способа.Первый-построить модуль нормально...</target>
        </trans-unit>
        <trans-unit id="aed361ca9a7b196027b5db9a2f0828216a331df8" translate="yes" xml:space="preserve">
          <source>Two's complement (bitwise not). This is equivalent to</source>
          <target state="translated">Двойное дополнение (не в точку).Это эквивалентно</target>
        </trans-unit>
        <trans-unit id="1f8bb2682169008d50215675c388c14028479675" translate="yes" xml:space="preserve">
          <source>Two's complement (bitwise not). This is equivalent to, but faster than,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9798b2ceec50b36efb45258055740cd070510f" translate="yes" xml:space="preserve">
          <source>Two-arg &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; is magic and can translate characters like &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, and &lt;code&gt;|&lt;/code&gt; in filenames, which is usually the wrong thing to do. &lt;a href=&quot;perlfunc#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt; and three-arg &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; don't have this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639570380139caf69541c926ba46013c3318dc90" translate="yes" xml:space="preserve">
          <source>Two-face References</source>
          <target state="translated">Двуличные ссылки</target>
        </trans-unit>
        <trans-unit id="ae90b2c9e3f2f4b661468b3ddaef859dd9bff8a2" translate="yes" xml:space="preserve">
          <source>Two-face Scalars</source>
          <target state="translated">Двухликие скаляры</target>
        </trans-unit>
        <trans-unit id="f60980a56996745ba95f06a5f138b8e86a98d3dd" translate="yes" xml:space="preserve">
          <source>Tye McQueen, tye@metronet.com, http://perlmonks.org/?node=tye.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47708aacd7aae4d98506843c2ea25848ad8c524c" translate="yes" xml:space="preserve">
          <source>Tying Arrays</source>
          <target state="translated">Массивы обвязки</target>
        </trans-unit>
        <trans-unit id="29fe0e127980eab253dd9684cf8924d1439a9c07" translate="yes" xml:space="preserve">
          <source>Tying Arrays by Casey West &amp;lt;</source>
          <target state="translated">Связывание массивов Кейси Уэст &amp;lt;</target>
        </trans-unit>
        <trans-unit id="1cb864932b4ba6b40040bda147b28500825da685" translate="yes" xml:space="preserve">
          <source>Tying FileHandles</source>
          <target state="translated">Свечи для перевязки</target>
        </trans-unit>
        <trans-unit id="c44951e9133e5d8875fa8e60d17eb7ca4e5ec846" translate="yes" xml:space="preserve">
          <source>Tying Hashes</source>
          <target state="translated">Связывание Хэшеса</target>
        </trans-unit>
        <trans-unit id="c124692dc36c13d6ea9eefe451091514b3053308" translate="yes" xml:space="preserve">
          <source>Tying Scalars</source>
          <target state="translated">Скаляры для обвязки</target>
        </trans-unit>
        <trans-unit id="dd441f6c670bdd175a4a06606b3ade32864a5013" translate="yes" xml:space="preserve">
          <source>Tying to an already-opened filehandle</source>
          <target state="translated">Привязка к уже открытой ручке файла</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="b987ff7b7058c91b5723d0647b696ba512fc503e" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake install&quot; (or &quot;gmake install&quot;, &quot;nmake install&quot;). This will put the newly built perl and the libraries under whatever &lt;code&gt;INST_TOP&lt;/code&gt; points to in the Makefile. It will also install the pod documentation under &lt;code&gt;$INST_TOP\$INST_VER\lib\pod&lt;/code&gt; and HTML versions of the same under &lt;code&gt;$INST_TOP\$INST_VER\lib\pod\html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622fe690390119c9b2836b529615b923c08f64da" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake install&quot; (or &quot;nmake install&quot;). This will put the newly built perl and the libraries under whatever &lt;code&gt;INST_TOP&lt;/code&gt; points to in the Makefile. It will also install the pod documentation under &lt;code&gt;$INST_TOP\$INST_VER\lib\pod&lt;/code&gt; and HTML versions of the same under &lt;code&gt;$INST_TOP\$INST_VER\lib\pod\html&lt;/code&gt; .</source>
          <target state="translated">Введите &amp;laquo;dmake install&amp;raquo; (или &amp;laquo;nmake install&amp;raquo;). Это поместит недавно созданный perl и библиотеки под все, на что указывает &lt;code&gt;INST_TOP&lt;/code&gt; в Makefile. Он также установит документацию модуля под &lt;code&gt;$INST_TOP\$INST_VER\lib\pod&lt;/code&gt; и его HTML-версии под &lt;code&gt;$INST_TOP\$INST_VER\lib\pod\html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bc4b446d209674d0e9fea7244b04c4c376a3eb5" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake test&quot; (or &quot;gmake test&quot;, &quot;nmake test&quot;). This will run most of the tests from the testsuite (many tests will be skipped).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48996994efbc36adb9197c655f8807f921339671" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake test&quot; (or &quot;nmake test&quot;). This will run most of the tests from the testsuite (many tests will be skipped).</source>
          <target state="translated">Введите &quot;dmake test&quot; (или &quot;nmake test&quot;).При этом будет запущено большинство тестов из набора (многие тесты будут пропущены).</target>
        </trans-unit>
        <trans-unit id="ce74e5125b2ce8cfe1e9037bd6ca72c9f8e02d8e" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake&quot; (&quot;gmake&quot; for GNU make, or &quot;nmake&quot; if you are using that make).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e707f55e50471f8dc7a11eb61a45491656e65c20" translate="yes" xml:space="preserve">
          <source>Type &quot;dmake&quot; (or &quot;nmake&quot; if you are using that make).</source>
          <target state="translated">Введите &quot;dmake&quot; (или &quot;nmake&quot;,если вы используете эту марку).</target>
        </trans-unit>
        <trans-unit id="817cc5b4f0c413465ec1e98078f923e58ba436f8" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;perl -v&lt;/code&gt; at the command line to find out.</source>
          <target state="translated">Введите &lt;code&gt;perl -v&lt;/code&gt; в командной строке, чтобы узнать.</target>
        </trans-unit>
        <trans-unit id="9226639af847a9b60c06b437bbd1474fd6ad1ed2" translate="yes" xml:space="preserve">
          <source>Type =&amp;gt; INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4464e66323935602a00348988e0d51aae9ab21" translate="yes" xml:space="preserve">
          <source>Type flag for I/O objects. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a91ba8a41cc959ff1b12a936c2603408f2a81" translate="yes" xml:space="preserve">
          <source>Type flag for I/O objects. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для объектов ввода-вывода. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0214e8a20ca847239102bda8ea4c8f57bc680a1d" translate="yes" xml:space="preserve">
          <source>Type flag for arrays. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115e0f5825d2a5e2437586f43a3052a4bc413be2" translate="yes" xml:space="preserve">
          <source>Type flag for arrays. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для массивов. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b619926ff72ff70acdcfb56667bc380fd10917da" translate="yes" xml:space="preserve">
          <source>Type flag for formats. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5424ebb415da653ce11cbaa80efe5caaa204e71c" translate="yes" xml:space="preserve">
          <source>Type flag for formats. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для форматов. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="862128cc96218003cbfad3b7ee14c34ad3105872" translate="yes" xml:space="preserve">
          <source>Type flag for hashes. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f3d189f9118d5a6a717d6df4d8bfc5dd5c80fb" translate="yes" xml:space="preserve">
          <source>Type flag for hashes. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для хэшей. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9baa4a58d00e83fc0bcce1af37a4d54939255e4" translate="yes" xml:space="preserve">
          <source>Type flag for regular expressions. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7697ce082ff72de4bd1f6e232aec1e708c3e949b" translate="yes" xml:space="preserve">
          <source>Type flag for regular expressions. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для регулярных выражений. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68fd7e6db2e32b4d1268770600fb508ba841fcb6" translate="yes" xml:space="preserve">
          <source>Type flag for scalars. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8842ec0ce8ceed5f394b670f4b4d43838af8af85" translate="yes" xml:space="preserve">
          <source>Type flag for scalars. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для скаляров. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc19461206b9d4e886495f08f330852592ae56f4" translate="yes" xml:space="preserve">
          <source>Type flag for scalars. See &lt;a href=&quot;perlapi#svtype&quot;&gt;&quot;svtype&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3eaa4bcf13a8b0cfd50d989093647d196bc08a" translate="yes" xml:space="preserve">
          <source>Type flag for subroutines. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6e0906867866e6b4c76c1aa73ce8fb1ddab2a4" translate="yes" xml:space="preserve">
          <source>Type flag for subroutines. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Типовой флаг для подпрограмм. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b728a87739a1b53338d9a99924f6b87621554866" translate="yes" xml:space="preserve">
          <source>Type flag for typeglobs. See &lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d98af6202cdf505f81d6de89907f306acd604bb" translate="yes" xml:space="preserve">
          <source>Type flag for typeglobs. See &lt;a href=&quot;#svtype&quot;&gt;svtype&lt;/a&gt;.</source>
          <target state="translated">Флаг типа для typeglobs. См. &lt;a href=&quot;#svtype&quot;&gt;Svtype&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b83265a2400fad6fae10ac8b63f66f6aa5168ddc" translate="yes" xml:space="preserve">
          <source>Type of arg %d to %s must be %s (not %s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33daa9fc448c1a401c5c6eb564a12a3b5b0309c7" translate="yes" xml:space="preserve">
          <source>Type of arg %d to &amp;amp;CORE::%s must be %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47d64cc94d0acfc0cdbf0b2c9dd711351e0f339" translate="yes" xml:space="preserve">
          <source>Type of first matching node.</source>
          <target state="translated">Тип первого совпадающего узла.</target>
        </trans-unit>
        <trans-unit id="82be69629fdb03e428153252cb628a3089333b85" translate="yes" xml:space="preserve">
          <source>Type-casting operator.</source>
          <target state="translated">Оператор литья по типу.</target>
        </trans-unit>
        <trans-unit id="3c6b62766a1a668fd13ee2f54c72526e46bdd675" translate="yes" xml:space="preserve">
          <source>Type-specific attribute handlers</source>
          <target state="translated">Обработчики атрибутов конкретного типа</target>
        </trans-unit>
        <trans-unit id="ee3fb11d05c90c37311491cf33008925b13b487f" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">Type:</target>
        </trans-unit>
        <trans-unit id="dacaa1ce7373acde846ee256ee267058f226c8cb" translate="yes" xml:space="preserve">
          <source>Typed lexicals</source>
          <target state="translated">Типичные лексики</target>
        </trans-unit>
        <trans-unit id="764662b450b71457a1b7dac7680a6d81b8a030c7" translate="yes" xml:space="preserve">
          <source>Typeglob Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c58169317903405f89e446350d7099fc17650c" translate="yes" xml:space="preserve">
          <source>Typeglobs and Filehandles</source>
          <target state="translated">Типеглобусы и файловые ручки</target>
        </trans-unit>
        <trans-unit id="c93af0f29f506026f9bce190608810109efe41de" translate="yes" xml:space="preserve">
          <source>Typeglobs are also a way to create a local filehandle using the local() operator. These last until their block is exited, but may be passed back. For example:</source>
          <target state="translated">Типеглобы-это также способ создать локальную файловую оболочку с помощью оператора local().Они действуют до тех пор,пока их блок не будет закрыт,но может быть передан обратно.Например:</target>
        </trans-unit>
        <trans-unit id="ce5682fe2db39004dc33d1f245a642897d0ccef1" translate="yes" xml:space="preserve">
          <source>Typeless &lt;code&gt;abs&lt;/code&gt; or &lt;code&gt;fabs&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c854e2c86ed5ebd580cf024fab8796f99c1a0f9" translate="yes" xml:space="preserve">
          <source>Types of Nodes</source>
          <target state="translated">Типы узлов</target>
        </trans-unit>
        <trans-unit id="54a79ea7d31cf3e80acf5e2ca6b3eef126289136" translate="yes" xml:space="preserve">
          <source>Typical frequently used settings:</source>
          <target state="translated">Типичные часто используемые настройки:</target>
        </trans-unit>
        <trans-unit id="19f0351a6e0b3a0f7afdab28ba608c9abfed4106" translate="yes" xml:space="preserve">
          <source>Typical names for the single object key are &lt;code&gt;__class_whatever__&lt;/code&gt;, or &lt;code&gt;$__dollars_are_rarely_used__$&lt;/code&gt; or &lt;code&gt;}ugly_brace_placement&lt;/code&gt;, or even things like &lt;code&gt;__class_md5sum(classname)__&lt;/code&gt;, to reduce the risk of clashing with real hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeee45f0582f2da790f6df23acb83c5b9ac37e5b" translate="yes" xml:space="preserve">
          <source>Typical usage is just:</source>
          <target state="translated">Типичное использование-это просто:</target>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="translated">Типичное использование:</target>
        </trans-unit>
        <trans-unit id="f0a20c31caa817cfde9a5903c8d1331d2cc5ddae" translate="yes" xml:space="preserve">
          <source>Typical use is to do range checks on &lt;code&gt;uv&lt;/code&gt; before casting:</source>
          <target state="translated">Типичное использование - проверка диапазона &lt;code&gt;uv&lt;/code&gt; перед литьем:</target>
        </trans-unit>
        <trans-unit id="0f7c555ca8af58d8be6641bce4c54e1f92594d54" translate="yes" xml:space="preserve">
          <source>Typical use of AutoSplit in the perl MakeMaker utility is via the command-line with:</source>
          <target state="translated">Типичное использование AutoSplit в утилите perl MakeMaker осуществляется через командную строку с:</target>
        </trans-unit>
        <trans-unit id="2eb42fd8be2849b836904fd8c0478452015d5021" translate="yes" xml:space="preserve">
          <source>Typically displayed in italics. Example: &quot;&lt;code&gt;F&amp;lt;.cshrc&amp;gt;&lt;/code&gt; &quot;</source>
          <target state="translated">Обычно отображается курсивом. Пример: &quot; &lt;code&gt;F&amp;lt;.cshrc&amp;gt;&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="b5d871a9c977277097fa4a829e659b06d6204d49" translate="yes" xml:space="preserve">
          <source>Typically displayed in italics. Example: &quot;&lt;code&gt;F&amp;lt;.cshrc&amp;gt;&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e392be83caed3c91eae784a95dbf70091fef0bbc" translate="yes" xml:space="preserve">
          <source>Typically only necessary for debugging and testing, if you need to dump the internals of an SV, &lt;a href=&quot;Devel::Peek&quot;&gt;Devel::Peek's&lt;/a&gt; Dump() provides more detail in a compact form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a174345584e66d867781b1452d35dc4522e5c23" translate="yes" xml:space="preserve">
          <source>Typically only necessary for debugging and testing. Don't use this flag as a marker to distinguish character and binary data, that should be decided for each variable when you write your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b14febd4050c6e9e7fff1ec1a1e04a32b2411b9" translate="yes" xml:space="preserve">
          <source>Typically render into NFD on input and NFC on output. Using NFKC or NFKD functions improves recall on searches, assuming you've already done to the same text to be searched. Note that this is about much more than just pre- combined compatibility glyphs; it also reorders marks according to their canonical combining classes and weeds out singletons.</source>
          <target state="translated">Обычно рендеринг в NFD на входе и NFC на выходе.Использование функций NFKC или NFKD улучшает отзыв при поиске,предполагая,что вы уже сделали с тем же самым текстом для поиска.Обратите внимание,что речь идет не только о предварительно комбинированных глифах совместимости,но и о переупорядочивании меток в соответствии с их каноническими комбинационными классами и сортировке синглонов.</target>
        </trans-unit>
        <trans-unit id="4aadd663fd22d97ef1413917c08e1ab3e9fe702e" translate="yes" xml:space="preserve">
          <source>Typically returns the string &lt;code&gt;at &amp;lt;FILE&amp;gt; line &amp;lt;LINE&amp;gt;&lt;/code&gt;. If &lt;code&gt;detail&lt;/code&gt; is set then its value will be returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c564109e8a3afa5be0b031d855d9ae4aa0bbb3" translate="yes" xml:space="preserve">
          <source>Typically this is used to emulate &lt;code&gt;#!&lt;/code&gt; startup on platforms that don't support &lt;code&gt;#!&lt;/code&gt; . It's also convenient when debugging a script that uses &lt;code&gt;#!&lt;/code&gt; , and is thus normally found by the shell's $PATH search mechanism.</source>
          <target state="translated">Обычно это используется для имитации &lt;code&gt;#!&lt;/code&gt; запуск на платформах, не поддерживающих &lt;code&gt;#!&lt;/code&gt; . Это также удобно при отладке сценария, в котором используется &lt;code&gt;#!&lt;/code&gt; , и поэтому обычно обнаруживается механизмом поиска $ PATH оболочки.</target>
        </trans-unit>
        <trans-unit id="0f7ce98ce055e01dae18470a5f2a3135a14234ad" translate="yes" xml:space="preserve">
          <source>Typically this is used to emulate &lt;code&gt;#!&lt;/code&gt; startup on platforms that don't support &lt;code&gt;#!&lt;/code&gt;. It's also convenient when debugging a script that uses &lt;code&gt;#!&lt;/code&gt;, and is thus normally found by the shell's $PATH search mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687058d347f26c3b9dcf0508ed2f5930b5b6fa48" translate="yes" xml:space="preserve">
          <source>Typically used to finish the deflation. Any pending output will be returned via &lt;code&gt;$out&lt;/code&gt; . &lt;code&gt;$status&lt;/code&gt; will have a value &lt;code&gt;Z_OK&lt;/code&gt; if successful.</source>
          <target state="translated">Обычно используется для завершения дефляции. Любой ожидающий результат будет возвращен через &lt;code&gt;$out&lt;/code&gt; . &lt;code&gt;$status&lt;/code&gt; случае успеха $ status будет иметь значение &lt;code&gt;Z_OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bb05899bf90c01639baa0fce37a7ffd38acaffb" translate="yes" xml:space="preserve">
          <source>Typically used to finish the deflation. Any pending output will be returned via &lt;code&gt;$out&lt;/code&gt;. &lt;code&gt;$status&lt;/code&gt; will have a value &lt;code&gt;Z_OK&lt;/code&gt; if successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a46f6fee05faa753caaabc6b43de594c708bd4" translate="yes" xml:space="preserve">
          <source>Typically used to finish the deflation. Any pending output will be written to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Обычно используется для завершения дефляции. Любой ожидающий вывод будет записан в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61eb0abe390afe612ea12baca62c7c474255a6b3" translate="yes" xml:space="preserve">
          <source>Typically used to finish the deflation. Any pending output will be written to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6622b7497b5ad854ceef3d9e6b7f39de4b5a746f" translate="yes" xml:space="preserve">
          <source>Typically will call &lt;code&gt;Fill&lt;/code&gt; and manipulate pointers (possibly via the API). &lt;code&gt;PerlIOBuf_read()&lt;/code&gt; may be suitable for derived classes which provide &quot;fast gets&quot; methods.</source>
          <target state="translated">Обычно вызывает &lt;code&gt;Fill&lt;/code&gt; и манипулирует указателями (возможно, через API). &lt;code&gt;PerlIOBuf_read()&lt;/code&gt; может быть подходящим для производных классов, которые предоставляют методы &amp;laquo;быстрого получения&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="eb1290094db39111daed12026731de41d874265c" translate="yes" xml:space="preserve">
          <source>Typically you only need to set this if you are using nonstandard prefixes and want some or all of them to have the same semantics as '--' does under normal circumstances.</source>
          <target state="translated">Обычно вам нужно установить это только в том случае,если вы используете нестандартные префиксы и хотите,чтобы некоторые или все из них имели ту же семантику,что и '--' при обычных обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="bbb5689bb894bcd45bb2427b7ffbb2ba5d9ac28a" translate="yes" xml:space="preserve">
          <source>Typically you use the &lt;code&gt;\G&lt;/code&gt; anchor with the &lt;code&gt;c&lt;/code&gt; flag when you want to try a different match if one fails, such as in a tokenizer. Jeffrey Friedl offers this example which works in 5.004 or later.</source>
          <target state="translated">Обычно вы используете привязку &lt;code&gt;\G&lt;/code&gt; с флагом &lt;code&gt;c&lt;/code&gt; , когда хотите попробовать другое совпадение в случае сбоя, например, в токенизаторе. Джеффри Фридл предлагает этот пример, который работает в версии 5.004 или более поздней.</target>
        </trans-unit>
        <trans-unit id="e42958c3877ca65db1e97bfa470cdaaff1d1e60d" translate="yes" xml:space="preserve">
          <source>Typically you use the &lt;code&gt;\G&lt;/code&gt; anchor with the &lt;code&gt;c&lt;/code&gt; modifier when you want to try a different match if one fails, such as in a tokenizer. Jeffrey Friedl offers this example which works in 5.004 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d250975c35bc29bcb347189b99facfa0b3287b6" translate="yes" xml:space="preserve">
          <source>Typically you'll want to change how TAP gets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291f2d298dd4e6053c773023592956eee5655566" translate="yes" xml:space="preserve">
          <source>Typically, Perl tests are run through this. However, anything which spits out TAP is fine. You can use this argument to specify the name of the program (and optional switches) to run your tests with:</source>
          <target state="translated">Обычно тесты на Perl проходят через это.Однако все,что выплёвывает TAP,в порядке.Вы можете использовать этот аргумент,чтобы указать имя программы (и необязательных переключателей)для запуска тестов:</target>
        </trans-unit>
        <trans-unit id="b62868c79b9e92764b29688b63eb397e1c587dcb" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;package&lt;/code&gt; statement is the first declaration in a file included in a program by one of the &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt; operators. You can switch into a package in more than one place: &lt;code&gt;package&lt;/code&gt; has no effect beyond specifying which symbol table the compiler will use for dynamic symbols for the rest of that block or until the next &lt;code&gt;package&lt;/code&gt; statement. You can refer to variables and filehandles in other packages by prefixing the identifier with the package name and a double colon: &lt;code&gt;$Package::Variable&lt;/code&gt;. If the package name is null, the &lt;code&gt;main&lt;/code&gt; package is assumed. That is, &lt;code&gt;$::sail&lt;/code&gt; is equivalent to &lt;code&gt;$main::sail&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1a3db1817e4391406ea8e4c10b938d812a2baf" translate="yes" xml:space="preserve">
          <source>Typically, a C compiler allocates 12 bytes to a &lt;code&gt;gappy_t&lt;/code&gt; variable, but requires only 8 bytes for a &lt;code&gt;dense_t&lt;/code&gt; . After investigating this further, we can draw memory maps, showing where the extra 4 bytes are hidden:</source>
          <target state="translated">Обычно компилятор C выделяет 12 байтов переменной &lt;code&gt;gappy_t&lt;/code&gt; , но требует только 8 байтов для &lt;code&gt;dense_t&lt;/code&gt; . После дальнейшего исследования мы можем нарисовать карты памяти, показывающие, где спрятаны лишние 4 байта:</target>
        </trans-unit>
        <trans-unit id="842e52cd2265b412e8f4aaf0dec34c2c2fc7c9ed" translate="yes" xml:space="preserve">
          <source>Typically, a C compiler allocates 12 bytes to a &lt;code&gt;gappy_t&lt;/code&gt; variable, but requires only 8 bytes for a &lt;code&gt;dense_t&lt;/code&gt;. After investigating this further, we can draw memory maps, showing where the extra 4 bytes are hidden:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c91d2712bb90187ca081aa74ad37d202d5e800" translate="yes" xml:space="preserve">
          <source>Typically, however, things are the other way around: the tieable class expects its arguments as a flattened list, so the attribute looks like:</source>
          <target state="translated">Обычно,однако,все происходит наоборот:связанный класс ожидает своих аргументов в виде сплющенного списка,так что атрибут выглядит как будто:</target>
        </trans-unit>
        <trans-unit id="f8985e43d2d106574f328b34641196cf266af572" translate="yes" xml:space="preserve">
          <source>Typically, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dcf9e9fce909e6d70f7fd2b928940489e6fad5" translate="yes" xml:space="preserve">
          <source>Typing &quot;buildtype d off&quot; or &quot;buildtype d&quot; at the command prompt causes the buildtype to be set to Debug type with D1 flag set.</source>
          <target state="translated">При вводе &quot;buildtype d off&quot; или &quot;buildtype d&quot; в командной строке тип сборки устанавливается в тип Debug с установленным флагом D1.</target>
        </trans-unit>
        <trans-unit id="b2c7510e598f94047792f2e34322c55a1d654ee0" translate="yes" xml:space="preserve">
          <source>Typing &quot;buildtype d on&quot; at the command prompt causes the buildtype to be set to Debug type with D2 flag set.</source>
          <target state="translated">Нажатие кнопки &quot;buildtype d on&quot; в командной строке приводит к тому,что тип сборки устанавливается в тип Debug с установленным флагом D2.</target>
        </trans-unit>
        <trans-unit id="6127511edf886df0417540a81474ffb3800e60b7" translate="yes" xml:space="preserve">
          <source>Typing &quot;buildtype r&quot; at the command prompt sets it to Release Build type.</source>
          <target state="translated">При вводе типа &quot;buildtype r&quot; в командной строке он становится типом Release Build.</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="70ae2f8ea36eac22765cdf44837146969d083d4c" translate="yes" xml:space="preserve">
          <source>U/WIN specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">U/WIN специфический подкласс ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="e87e721b92dfc3ce5a42bdc5529d628275269297" translate="yes" xml:space="preserve">
          <source>UAX #11: East Asian Width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e111693f7553557203eea396555ad20db941bc" translate="yes" xml:space="preserve">
          <source>UAX #14: Unicode Line Breaking Algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62b71447bb2670ca75d2c60404b5335b86f48a9" translate="yes" xml:space="preserve">
          <source>UAX #15: Unicode Normalization Forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fbcb66826627051473f0031e536eaa29808986" translate="yes" xml:space="preserve">
          <source>UAX #29: Unicode Text Segmentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04846c59e74a6b4b2e534cd9cb9a90b44ec543b2" translate="yes" xml:space="preserve">
          <source>UAX #44: Unicode Character Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591e272980f29149d094e061515f3a24c2416346" translate="yes" xml:space="preserve">
          <source>UC</source>
          <target state="translated">UC</target>
        </trans-unit>
        <trans-unit id="3a333ea8bebfa50b73219f11f7bf0ebbb8c9a863" translate="yes" xml:space="preserve">
          <source>UCA recommends that out-of-range values should not be ignored for security reasons. Say, &lt;code&gt;&quot;pe\x{110000}rl&quot;&lt;/code&gt; should not be equal to &lt;code&gt;&quot;perl&quot;&lt;/code&gt; . However, &lt;code&gt;U+FFFD&lt;/code&gt; is wrongly mapped to a variable collation element in DUCET for Unicode 6.0.0 to 6.2.0, that means out-of-range values will be ignored when &lt;code&gt;variable&lt;/code&gt; isn't &lt;code&gt;Non-ignorable&lt;/code&gt; .</source>
          <target state="translated">УЦА рекомендует не игнорировать значения, выходящие за пределы допустимого диапазона, по соображениям безопасности. Скажем, &lt;code&gt;&quot;pe\x{110000}rl&quot;&lt;/code&gt; не должно быть равно &lt;code&gt;&quot;perl&quot;&lt;/code&gt; . Однако &lt;code&gt;U+FFFD&lt;/code&gt; неправильно сопоставлен с элементом сопоставления переменных в DUCET для Unicode 6.0.0&amp;ndash;6.2.0, это означает, что значения вне диапазона будут игнорироваться, если &lt;code&gt;variable&lt;/code&gt; не является &lt;code&gt;Non-ignorable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="492c906fc3f312af6ae908d9ffaf994fd07f46cc" translate="yes" xml:space="preserve">
          <source>UCA recommends that out-of-range values should not be ignored for security reasons. Say, &lt;code&gt;&quot;pe\x{110000}rl&quot;&lt;/code&gt; should not be equal to &lt;code&gt;&quot;perl&quot;&lt;/code&gt;. However, &lt;code&gt;U+FFFD&lt;/code&gt; is wrongly mapped to a variable collation element in DUCET for Unicode 6.0.0 to 6.2.0, that means out-of-range values will be ignored when &lt;code&gt;variable&lt;/code&gt; isn't &lt;code&gt;Non-ignorable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cc4029c87ef2347d0792acb85d7dbc180043ff" translate="yes" xml:space="preserve">
          <source>UCA_Version</source>
          <target state="translated">UCA_Version</target>
        </trans-unit>
        <trans-unit id="e80de0851d29f92f6e9e34856bbc13a9b674c12b" translate="yes" xml:space="preserve">
          <source>UCS</source>
          <target state="translated">UCS</target>
        </trans-unit>
        <trans-unit id="c3ba710b4e9b506e4750f6e24e9eeec383e609b3" translate="yes" xml:space="preserve">
          <source>UCS-2</source>
          <target state="translated">UCS-2</target>
        </trans-unit>
        <trans-unit id="206177d23e4d5ec0abfb5c6b0df396d679742e7c" translate="yes" xml:space="preserve">
          <source>UCS-2 is a fixed-length encoding with each character taking 16 bits. It &lt;b&gt;does not&lt;/b&gt; support</source>
          <target state="translated">UCS-2 - это кодировка фиксированной длины, в которой каждый символ занимает 16 бит. Он &lt;b&gt;не&lt;/b&gt; поддерживает</target>
        </trans-unit>
        <trans-unit id="daeba9311089266fcf0acd6d54c9e56ca13a992e" translate="yes" xml:space="preserve">
          <source>UCS-2, UCS-4</source>
          <target state="translated">UCS-2,UCS-4</target>
        </trans-unit>
        <trans-unit id="e9a6f622e340090feb219eb5c94b0df756e8e486" translate="yes" xml:space="preserve">
          <source>UDP</source>
          <target state="translated">UDP</target>
        </trans-unit>
        <trans-unit id="a392dc8e430c846ca90f8e40c79fda571eef8daf" translate="yes" xml:space="preserve">
          <source>UDP datagrams are</source>
          <target state="translated">датаграммы UDP</target>
        </trans-unit>
        <trans-unit id="0b1ddbe7e9085079ee7967600cb1889fd0b548d1" translate="yes" xml:space="preserve">
          <source>UDP: Message Passing</source>
          <target state="translated">UDP:Передача сообщений</target>
        </trans-unit>
        <trans-unit id="d946adf52a4783929f122d341b29ac0fe188371c" translate="yes" xml:space="preserve">
          <source>UID</source>
          <target state="translated">UID</target>
        </trans-unit>
        <trans-unit id="6baa0c91c35738e244018a78ee06f9f0b5e589ea" translate="yes" xml:space="preserve">
          <source>UNDEF</source>
          <target state="translated">UNDEF</target>
        </trans-unit>
        <trans-unit id="bbb2722df9c1be9f9216f08d7da234a2e705e9d4" translate="yes" xml:space="preserve">
          <source>UNDERBAR</source>
          <target state="translated">UNDERBAR</target>
        </trans-unit>
        <trans-unit id="74ff590c1dac1161eec0fbaa8b7d8b3a98fff4d5" translate="yes" xml:space="preserve">
          <source>UNICODE AND SIDE EFFECTS</source>
          <target state="translated">УНИКОД И ПОБОЧНЫЕ ЭФФЕКТЫ</target>
        </trans-unit>
        <trans-unit id="0f9d971f52bdd7a74ebeb786ec5143de4c2935d5" translate="yes" xml:space="preserve">
          <source>UNICODE IN OLDER PERLS</source>
          <target state="translated">ЮНИКОД В СТАРЫХ ПЕРЛАХ</target>
        </trans-unit>
        <trans-unit id="3d51f9ce7ad6a8a131760c17f51427e8bbfb85b1" translate="yes" xml:space="preserve">
          <source>UNICODE_REPLACEMENT</source>
          <target state="translated">UNICODE_REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="94c5e5979031dbec3b6f240558b2bfaa36f46791" translate="yes" xml:space="preserve">
          <source>UNIMPLEMENTED</source>
          <target state="translated">UNIMPLEMENTED</target>
        </trans-unit>
        <trans-unit id="9392ee60535a3aa7bb3335f263044b78e27554ed" translate="yes" xml:space="preserve">
          <source>UNISTD</source>
          <target state="translated">UNISTD</target>
        </trans-unit>
        <trans-unit id="c070755890afd262edf57a1cfae99ffc017d2459" translate="yes" xml:space="preserve">
          <source>UNITCHECK</source>
          <target state="translated">UNITCHECK</target>
        </trans-unit>
        <trans-unit id="bc192a928ab3fe78a1c74cfa4d1027b44d52c868" translate="yes" xml:space="preserve">
          <source>UNIVERSAL</source>
          <target state="translated">UNIVERSAL</target>
        </trans-unit>
        <trans-unit id="1feda7e9d1b1a232e025eeb903dd53659f7b069c" translate="yes" xml:space="preserve">
          <source>UNIVERSAL - base class for ALL classes (blessed references)</source>
          <target state="translated">УНИВЕРСАЛ-базовый класс для ВСЕХ классов (благословенные ссылки)</target>
        </trans-unit>
        <trans-unit id="b23387c60700d885c584c4f2b25855ad58b48b48" translate="yes" xml:space="preserve">
          <source>UNIX and POSIX systems provide an abstract access() operating system call, which should be used to query the read, write, and execute rights. This function hides various distinct approaches in additional operating system specific security features, like Access Control Lists (ACLs)</source>
          <target state="translated">UNIX и POSIX системы обеспечивают абстрактный вызов Access()операционной системы,который должен использоваться для запроса прав на чтение,запись и выполнение.Эта функция скрывает различные различные подходы в дополнительных специфических для операционной системы функциях безопасности,таких как списки контроля доступа (Access Control Lists,ACL)</target>
        </trans-unit>
        <trans-unit id="fa0c8b9587852cbf0dc08f98bcecbaed53f1e1c0" translate="yes" xml:space="preserve">
          <source>UNIX domain sockets added by Sean Robinson &amp;lt;</source>
          <target state="translated">Доменные сокеты UNIX, добавленные Шоном Робинсоном &amp;lt;</target>
        </trans-unit>
        <trans-unit id="85db2499d39f4696e02fb26511b230add2c1b670" translate="yes" xml:space="preserve">
          <source>UNIX file permissions are based on sets of mode bits for {read,write,execute} for each {user,group,other}. By default Cygwin only tracks the Win32 read-only attribute represented as the UNIX file user write bit (files are always readable, files are executable if they have a</source>
          <target state="translated">Разрешения на использование UNIX-файлов основаны на наборах битов режима для {read,write,execute}для каждого {пользователя,группы,другого}.По умолчанию Cygwin отслеживает только Win32 атрибут read-only,представленный как бит записи пользователя UNIX файла (файлы всегда доступны для чтения,файлы являются исполняемыми,если они имеют бит</target>
        </trans-unit>
        <trans-unit id="1db53023f517a9c3a97970b2e62a29042045d3f0" translate="yes" xml:space="preserve">
          <source>UNI_TO_NATIVE</source>
          <target state="translated">UNI_TO_NATIVE</target>
        </trans-unit>
        <trans-unit id="36361e169f0479184326d85ebb47825bf51a5753" translate="yes" xml:space="preserve">
          <source>UNLIKELY</source>
          <target state="translated">UNLIKELY</target>
        </trans-unit>
        <trans-unit id="5c24b56d363871364a8198c1e16261b34c9bf761" translate="yes" xml:space="preserve">
          <source>UNLINK flag available since 0.10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265e8c38a269eb32604a5d0ed5924378784ee057" translate="yes" xml:space="preserve">
          <source>UNSHIFT this, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8f1af6e17a29d4f20f56ec6d442f59acfc755d" translate="yes" xml:space="preserve">
          <source>UNSUPPORTED</source>
          <target state="translated">UNSUPPORTED</target>
        </trans-unit>
        <trans-unit id="40cccdd49a4b2f7980664d02999aa7b9e3022b50" translate="yes" xml:space="preserve">
          <source>UNTIE by Nick Ing-Simmons &amp;lt;</source>
          <target state="translated">UNTIE, Ник Инг-Симмонс &amp;lt;</target>
        </trans-unit>
        <trans-unit id="41304503568dff57766f35c33ebaca45f5e827b2" translate="yes" xml:space="preserve">
          <source>UNTIE this</source>
          <target state="translated">ВНИМАНИЕ:</target>
        </trans-unit>
        <trans-unit id="ea518a7caeec27fa571544a1959010e8689298ab" translate="yes" xml:space="preserve">
          <source>UPGRADE SUGGESTED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bb3273c3d27a35e7a79c09d285ae651319171c" translate="yes" xml:space="preserve">
          <source>UPGRADING</source>
          <target state="translated">UPGRADING</target>
        </trans-unit>
        <trans-unit id="a6b6b187a5dabe1711e09378ba034929cf5397f3" translate="yes" xml:space="preserve">
          <source>UPSTREAM indicates where patches should go. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; implies that this hasn't been discussed for the module at hand. &lt;code&gt;blead&lt;/code&gt; indicates that the copy of the module in the blead sources is to be considered canonical, &lt;code&gt;cpan&lt;/code&gt; means that the module on CPAN is to be patched first. &lt;code&gt;first-come&lt;/code&gt; means that blead can be patched freely if it is in sync with the latest release on CPAN.</source>
          <target state="translated">UPSTREAM указывает, куда должны идти патчи. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; подразумевает, что это не обсуждалось для данного модуля. &lt;code&gt;blead&lt;/code&gt; указывает, что копия модуля в источниках blead должна считаться канонической, &lt;code&gt;cpan&lt;/code&gt; означает, что модуль на CPAN должен быть исправлен первым. &lt;code&gt;first-come&lt;/code&gt; означает, что blead может быть исправлен свободно, если он синхронизирован с последним выпуском на CPAN.</target>
        </trans-unit>
        <trans-unit id="1b193f75bbf58b38858154a6e283a021406e55fd" translate="yes" xml:space="preserve">
          <source>UPSTREAM indicates where patches should go. &lt;code&gt;undef&lt;/code&gt; implies that this hasn't been discussed for the module at hand. &lt;code&gt;blead&lt;/code&gt; indicates that the copy of the module in the blead sources is to be considered canonical, &lt;code&gt;cpan&lt;/code&gt; means that the module on CPAN is to be patched first. &lt;code&gt;first-come&lt;/code&gt; means that blead can be patched freely if it is in sync with the latest release on CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="ba5e5280eb88749f4ed2bd7802c151c1f77cb3d7" translate="yes" xml:space="preserve">
          <source>URL decoding and encoding</source>
          <target state="translated">декодирование и кодирование URL-адресов</target>
        </trans-unit>
        <trans-unit id="a2c8158547717be782e140b2ad8b3a2b5e515fe5" translate="yes" xml:space="preserve">
          <source>URL for further information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61aff325c59f0125c7432101521fe8aef2d620f8" translate="yes" xml:space="preserve">
          <source>URLS</source>
          <target state="translated">URLS</target>
        </trans-unit>
        <trans-unit id="cf3bfa9a159c5a5ddc20da1eccd6bbddbdc037e4" translate="yes" xml:space="preserve">
          <source>USAGE</source>
          <target state="translated">USAGE</target>
        </trans-unit>
        <trans-unit id="11db5afeaceeb6d5fec1a6025012faccc762da50" translate="yes" xml:space="preserve">
          <source>USAGE DETAILS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca88d77aca2d323542d2e8f12b83151e0846c19" translate="yes" xml:space="preserve">
          <source>USE EXAMPLES</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ ЭКЗАМПЛЕЙ</target>
        </trans-unit>
        <trans-unit id="48c336c391ccd32eaf0812999ba74a1243f916d3" translate="yes" xml:space="preserve">
          <source>USE Test2::Suite INSTEAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce94de210299952d4167e1951445b8720839ce7f" translate="yes" xml:space="preserve">
          <source>USEFUL</source>
          <target state="translated">USEFUL</target>
        </trans-unit>
        <trans-unit id="6eb0c61201a96afc99cbf180f1c8d93c0a9fd8c8" translate="yes" xml:space="preserve">
          <source>USER</source>
          <target state="translated">USER</target>
        </trans-unit>
        <trans-unit id="045095377d72052bacadc70846f65ba919bc72ee" translate="yes" xml:space="preserve">
          <source>USER METHODS</source>
          <target state="translated">МЕТОДЫ ПОЛЬЗОВАТЕЛЯ</target>
        </trans-unit>
        <trans-unit id="eff0e1414e1813c02157d57d3f325f32947a8413" translate="yes" xml:space="preserve">
          <source>USE_MULTI &amp;amp; USE_IMP_SYS defined and USE_ITHREADS not defined</source>
          <target state="translated">USE_MULTI и USE_IMP_SYS определены, а USE_ITHREADS не определены</target>
        </trans-unit>
        <trans-unit id="5e29b7b3b7536de15b46013805cfeb875c7a61d3" translate="yes" xml:space="preserve">
          <source>USE_MULTI, USE_ITHREADS &amp;amp; USE_IMP_SYS defined</source>
          <target state="translated">Определены USE_MULTI, USE_ITHREADS и USE_IMP_SYS</target>
        </trans-unit>
        <trans-unit id="227996d58fdfdee97220bd395f44c03336330289" translate="yes" xml:space="preserve">
          <source>USE_PERL_FLOCK</source>
          <target state="translated">USE_PERL_FLOCK</target>
        </trans-unit>
        <trans-unit id="f8104e09349c8c6000afb7fc05a4ed027d50f4e3" translate="yes" xml:space="preserve">
          <source>USE_THREADS</source>
          <target state="translated">USE_THREADS</target>
        </trans-unit>
        <trans-unit id="eeb0c37772a1b806f230c8036c163dab104d01af" translate="yes" xml:space="preserve">
          <source>USING A CONTEXT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d403f19c30d9dafcf5b6a7bb8666159dacf7697f" translate="yes" xml:space="preserve">
          <source>USING B::Deparse AS A MODULE</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ Б::Отправление как МОДУЛЬ</target>
        </trans-unit>
        <trans-unit id="2efa10816450d527d9e56d3271b7e34ea8c81a61" translate="yes" xml:space="preserve">
          <source>USING CONTEXT: THE DEBUG FILTER</source>
          <target state="translated">ИСПОЛЬЗУЯ КОНТЕКСТ:ФИЛЬТР ОТЛАДКИ</target>
        </trans-unit>
        <trans-unit id="5dc41a076ce2820059919cbbf35a7c867770cef6" translate="yes" xml:space="preserve">
          <source>USING FILTERS</source>
          <target state="translated">ФИЛЬТРЫ ДЛЯ ИСПОЛЬЗОВАНИЯ</target>
        </trans-unit>
        <trans-unit id="3d73074a3cddd39278e855bf130287734b3a28e3" translate="yes" xml:space="preserve">
          <source>USING LOCALES</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ МЕСТАКОВ</target>
        </trans-unit>
        <trans-unit id="e914e6326e1588417f534e760a668a311b7406cd" translate="yes" xml:space="preserve">
          <source>USING PERL IN OPENVOS</source>
          <target state="translated">ИСПОЛЬЗОВАНИЕ ПЕРЛАМУТРА В ОТКРЫТОМ ПРОСТРАНСТВЕ</target>
        </trans-unit>
        <trans-unit id="99eec133fe1ada053200d233f3eaa4520c2bb5fb" translate="yes" xml:space="preserve">
          <source>USING THE CONSTRUCTOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac35aec57e40ba482f8f9fa734ce439013d2f6b2" translate="yes" xml:space="preserve">
          <source>USING THE EXTERNAL GZIP</source>
          <target state="translated">ИСПОЛЬЗУЯ ВНЕШНЮЮ ЗАСТЁЖКУ</target>
        </trans-unit>
        <trans-unit id="ca105f51c68cd465fba8a30858f385516bc30dcf" translate="yes" xml:space="preserve">
          <source>USING UTF8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af50db97d3b4d2d4a30cc3bc98a5ffb4cb39ec7" translate="yes" xml:space="preserve">
          <source>USourceData.txt</source>
          <target state="translated">USourceData.txt</target>
        </trans-unit>
        <trans-unit id="d96ff9257bc1dd5af725fa01d1ac6c3c64b3d707" translate="yes" xml:space="preserve">
          <source>USourceGlyphs.pdf</source>
          <target state="translated">USourceGlyphs.pdf</target>
        </trans-unit>
        <trans-unit id="618f65101275eae124d9a7c9c7a5431c588e88d8" translate="yes" xml:space="preserve">
          <source>UTF</source>
          <target state="translated">UTF</target>
        </trans-unit>
        <trans-unit id="6b28c2250a1cbb7c8f56dfcf0dd9e06201c35f2f" translate="yes" xml:space="preserve">
          <source>UTF stands for &quot;Unicode Transformation Format&quot;. UTF-8 is an encoding of Unicode into a sequence of 8-bit byte chunks, based on ASCII and Latin-1. The length of a sequence required to represent a Unicode code point depends on the ordinal number of that code point, with larger numbers requiring more bytes. UTF-EBCDIC is like UTF-8, but based on EBCDIC. They are enough alike that often, casual usage will conflate the two terms, and use &quot;UTF-8&quot; to mean both the UTF-8 found on ASCII platforms, and the UTF-EBCDIC found on EBCDIC ones.</source>
          <target state="translated">UTF означает &quot;Unicode Transformation Format&quot;.UTF-8-это кодировка Юникода в последовательность 8-битных кусков байт,основанная на ASCII и латинице-1.Длина последовательности,необходимой для представления точки кода Юникода,зависит от порядкового номера этой точки кода,а для больших чисел требуется больше байт.UTF-EBCDIC похожа на UTF-8,но основана на EBCDIC.Они достаточно похожи,что при случайном использовании будут сливаться два термина,и использовать &quot;UTF-8&quot; для обозначения как UTF-8,найденной на ASCII платформах,так и UTF-EBCDIC,найденной на EBCDIC.</target>
        </trans-unit>
        <trans-unit id="5a9da893be5fd5fae314bea8dcdeeee12beeec4b" translate="yes" xml:space="preserve">
          <source>UTF-16</source>
          <target state="translated">UTF-16</target>
        </trans-unit>
        <trans-unit id="c965e907f9d25c517a8e5bd79aea9417a0714217" translate="yes" xml:space="preserve">
          <source>UTF-16 is almost the same as UCS-2 but it supports</source>
          <target state="translated">UTF-16 почти такая же,как и UCS-2,но она поддерживает</target>
        </trans-unit>
        <trans-unit id="6368ee0d76a2ca5c3d83c85e127ba1610670e64c" translate="yes" xml:space="preserve">
          <source>UTF-16 surrogate U+%X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5222e4ab75ba1ce305284f282ec30a73156a366c" translate="yes" xml:space="preserve">
          <source>UTF-16, UTF-16BE, UTF-16LE, Surrogates, and &lt;code&gt;BOM&lt;/code&gt; 's (Byte Order Marks)</source>
          <target state="translated">UTF-16, UTF-16BE, UTF-16LE, суррогаты и &lt;code&gt;BOM&lt;/code&gt; (метки порядка байтов)</target>
        </trans-unit>
        <trans-unit id="ca51c01ddb04a5d5f4843a1045e4eb7fa59f4fe4" translate="yes" xml:space="preserve">
          <source>UTF-16, UTF-16BE, UTF-16LE, Surrogates, and &lt;code&gt;BOM&lt;/code&gt;'s (Byte Order Marks)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a1ff59a1e826be6636526f502c21d7b7b97ead" translate="yes" xml:space="preserve">
          <source>UTF-32 (UCS-4) is a fixed-length encoding with each character taking 32 bits. Since it is 32-bit, there is no need for</source>
          <target state="translated">UTF-32 (UCS-4)-это кодировка фиксированной длины,каждый символ которой принимает 32 бита.Так как это 32-битная кодировка,то нет необходимости в</target>
        </trans-unit>
        <trans-unit id="dfd8dce020ef601007001e4289b99a7908444d8a" translate="yes" xml:space="preserve">
          <source>UTF-32, UTF-32BE, UTF-32LE</source>
          <target state="translated">УФ-32,УФ-32БЕ,УФ-32ЛЕ</target>
        </trans-unit>
        <trans-unit id="20e199acc434517cd4a6e5977a48bae6e5af47a4" translate="yes" xml:space="preserve">
          <source>UTF-7</source>
          <target state="translated">UTF-7</target>
        </trans-unit>
        <trans-unit id="4d56cb8e2ad2a50613de9fa7d9d9a0d239c1aca9" translate="yes" xml:space="preserve">
          <source>UTF-7 encoding</source>
          <target state="translated">кодирование UTF-7</target>
        </trans-unit>
        <trans-unit id="c69eadbe302e95901c2e20dc0780e1b33ffbf733" translate="yes" xml:space="preserve">
          <source>UTF-7 is a special encoding which &quot;re-encodes&quot; UTF-16BE into a 7-bit encoding. It is implemented separately by Encode::Unicode::UTF7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8308c0cebaf2cef9e02fb7f26e6c4f56ba6ce0" translate="yes" xml:space="preserve">
          <source>UTF-7 was not supported by Encode until version 1.95 because of that. But Unicode::String, a module by Gisle Aas which adds Unicode supports to non-utf8-savvy perl did support UTF-7, the UTF-7 support was added so Encode can supersede Unicode::String 100%.</source>
          <target state="translated">Из-за этого UTF-7 не поддерживалась кодировкой до версии 1.95.Но Юникод::Строка,модуль от Gisle Aas,который добавляет поддержку Юникода к неutf8-savvy perl,действительно поддерживал UTF-7,поддержка UTF-7 была добавлена,так что кодировка может заменить Юникод::Строка на 100%.</target>
        </trans-unit>
        <trans-unit id="663b90c899fa25a111067be0c22ffc64dcf581c2" translate="yes" xml:space="preserve">
          <source>UTF-8</source>
          <target state="translated">UTF-8</target>
        </trans-unit>
        <trans-unit id="e2635de14b396bd81c2a4f587434aea9cfbf99fc" translate="yes" xml:space="preserve">
          <source>UTF-8 and UTF-EBCDIC are two different encodings used to represent Unicode code points as sequences of bytes. Macros with the same names (but different definitions) in</source>
          <target state="translated">UTF-8 и UTF-EBCDIC-две разные кодировки,используемые для представления точек кода Юникода в виде последовательностей байтов.Макросы с одинаковыми именами (но с разными определениями)в</target>
        </trans-unit>
        <trans-unit id="8b4fe83acd749a66b827e068556fa7943eee22bb" translate="yes" xml:space="preserve">
          <source>UTF-8 and Unicode FAQ for Unix/Linux</source>
          <target state="translated">UTF-8 и Unicode FAQ для Unix/Linux</target>
        </trans-unit>
        <trans-unit id="79cdcb7150e1254a38f057938e6f4012fc46b08a" translate="yes" xml:space="preserve">
          <source>UTF-8 is a variable-length (1 to 4 bytes), byte-order independent encoding. In most of Perl's documentation, including elsewhere in this document, the term &quot;UTF-8&quot; means also &quot;UTF-EBCDIC&quot;. But in this section, &quot;UTF-8&quot; refers only to the encoding used on ASCII platforms. It is a superset of 7-bit US-ASCII, so anything encoded in ASCII has the identical representation when encoded in UTF-8.</source>
          <target state="translated">UTF-8-это кодировка переменной длины (от 1 до 4 байт),независимая от порядка байт.В большинстве документов на Perl,в том числе и в других местах этого документа,термин &quot;UTF-8&quot; означает также &quot;UTF-EBCDIC&quot;.Но в этом разделе &quot;UTF-8&quot; относится только к кодировке,используемой на ASCII платформах.Это суперсет из 7-битных US-ASCII,так что все,что закодировано в ASCII,имеет идентичное представление при кодировке в UTF-8.</target>
        </trans-unit>
        <trans-unit id="2d6c49b0c5ea97423fbd4064bf9d6fbd9eeb0509" translate="yes" xml:space="preserve">
          <source>UTF-8 is very structured, so many combinations of bytes are invalid. In the past, Perl tried to soldier on and make some sense of invalid combinations, but this can lead to security holes, so now, if the Perl core needs to process an invalid combination, it will either raise a fatal error, or will replace those bytes by the sequence that forms the Unicode REPLACEMENT CHARACTER, for which purpose Unicode created it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b07e44d3986db9cf7499225144a4d1d394db97" translate="yes" xml:space="preserve">
          <source>UTF-8 treats the first 128 codepoints, 0..127, the same as ASCII. They take only one byte per character. All other characters are encoded as two to four bytes using a complex scheme. Fortunately, Perl handles this for us, so we don't have to worry about this.</source>
          <target state="translated">UTF-8 обрабатывает первые 128 кодовых точек,0...127,так же,как и ASCII.Они берут только один байт на символ.Все остальные символы кодируются как два-четыре байта по сложной схеме.К счастью,Perl обрабатывает это для нас,так что нам не нужно беспокоиться об этом.</target>
        </trans-unit>
        <trans-unit id="7443ec4bd05d2044739a43a92206bcfe32f068b2" translate="yes" xml:space="preserve">
          <source>UTF-8 vs. utf8 vs. UTF8</source>
          <target state="translated">UTF-8 vs.utf8 vs.UTF8</target>
        </trans-unit>
        <trans-unit id="21357a91ac9a6238516304ecf3d0973befa29dc1" translate="yes" xml:space="preserve">
          <source>UTF-EBCDIC</source>
          <target state="translated">UTF-EBCDIC</target>
        </trans-unit>
        <trans-unit id="54206a5f5bcbb8b5ddd3ceb665085cec48ec6be8" translate="yes" xml:space="preserve">
          <source>UTF-EBCDIC is defined by &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr16&quot;&gt;Unicode Technical Report #16&lt;/a&gt;. It is defined based on CCSID 1047, not allowing for the differences for other code pages. This allows for easy interchange of text between computers running different code pages, but makes it unusable, without adaptation, for Perl on those other code pages.</source>
          <target state="translated">UTF-EBCDIC определен в &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr16&quot;&gt;техническом отчете Unicode №16&lt;/a&gt; . Он определяется на основе CCSID 1047, не учитывая различий для других кодовых страниц. Это позволяет легко обмениваться текстом между компьютерами, на которых работают разные кодовые страницы, но делает его непригодным для использования без адаптации для Perl на этих других кодовых страницах.</target>
        </trans-unit>
        <trans-unit id="d1acc50280127d54b308a40ab3c768e112572a85" translate="yes" xml:space="preserve">
          <source>UTF-EBCDIC is defined by &lt;a href=&quot;https://www.unicode.org/reports/tr16&quot;&gt;Unicode Technical Report #16&lt;/a&gt; (often referred to as just TR16). It is defined based on CCSID 1047, not allowing for the differences for other code pages. This allows for easy interchange of text between computers running different code pages, but makes it unusable, without adaptation, for Perl on those other code pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b0bbf585cedfbc65f392d0551056f49932bbd3" translate="yes" xml:space="preserve">
          <source>UTF-EBCDIC is used on EBCDIC platforms. It generally requires more bytes to represent a given code point than UTF-8 does; the largest Unicode code points take 5 bytes to represent (instead of 4 in UTF-8), and, extended for 64-bit words, it uses 14 bytes instead of 13 bytes in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae1061497efd49ee6054c0a3d6e1ce19e05e6be" translate="yes" xml:space="preserve">
          <source>UTF-EBCDIC is used on EBCDIC platforms. The largest Unicode code points take 5 bytes to represent (instead of 4 in UTF-8), and Perl extends it to a maximum of 7 bytes to encode pode points up to what can fit in a 32-bit word (instead of 13 bytes and a 64-bit word in UTF-8).</source>
          <target state="translated">UTF-EBCDIC используется на платформах EBCDIC.Самые большие точки кода Unicode для представления занимают 5 байт (вместо 4 в UTF-8),а Perl расширяет его до максимум 7 байт для кодирования точек кода до того,что может поместиться в 32-битном слове (вместо 13 байт и 64-битного слова в UTF-8).</target>
        </trans-unit>
        <trans-unit id="32e4aba336279eb247fca6069de55e692fafce3d" translate="yes" xml:space="preserve">
          <source>UTF-X</source>
          <target state="translated">UTF-X</target>
        </trans-unit>
        <trans-unit id="31c724652517aa38e02f9cc38046b12306389452" translate="yes" xml:space="preserve">
          <source>UTF8SKIP</source>
          <target state="translated">UTF8SKIP</target>
        </trans-unit>
        <trans-unit id="126afec887a4798caa07a768c2ae8b1e709d5df3" translate="yes" xml:space="preserve">
          <source>UTF8_CHK_SKIP</source>
          <target state="translated">UTF8_CHK_SKIP</target>
        </trans-unit>
        <trans-unit id="f98f9b7b4dfefa91df6e8d07ade4cdf88d2b3a4e" translate="yes" xml:space="preserve">
          <source>UTF8_IS_INVARIANT</source>
          <target state="translated">UTF8_IS_INVARIANT</target>
        </trans-unit>
        <trans-unit id="ce7018ef4c544b4117f40b9403d65042195dc6ca" translate="yes" xml:space="preserve">
          <source>UTF8_IS_NONCHAR</source>
          <target state="translated">UTF8_IS_NONCHAR</target>
        </trans-unit>
        <trans-unit id="43a7d7eb6f7a4999dcf643e96fc55bf3ed29e04b" translate="yes" xml:space="preserve">
          <source>UTF8_IS_SUPER</source>
          <target state="translated">UTF8_IS_SUPER</target>
        </trans-unit>
        <trans-unit id="41c64bb8f1a0503efaa4f02874d635fa7fb44ce4" translate="yes" xml:space="preserve">
          <source>UTF8_IS_SURROGATE</source>
          <target state="translated">UTF8_IS_SURROGATE</target>
        </trans-unit>
        <trans-unit id="45d5fa1bf0c167c3f6576cc7457645a65299cae3" translate="yes" xml:space="preserve">
          <source>UTF8_MAXBYTES</source>
          <target state="translated">UTF8_MAXBYTES</target>
        </trans-unit>
        <trans-unit id="0a897c1fa81d6a6686e912ed672c264e86acb2f9" translate="yes" xml:space="preserve">
          <source>UTF8_MAXBYTES_CASE</source>
          <target state="translated">UTF8_MAXBYTES_CASE</target>
        </trans-unit>
        <trans-unit id="8af74f37673e55aee8c36bf5b73bd668baf4075c" translate="yes" xml:space="preserve">
          <source>UTF8_SAFE_SKIP</source>
          <target state="translated">UTF8_SAFE_SKIP</target>
        </trans-unit>
        <trans-unit id="69870d763a319ff2077dd64b9f02bdfd1ad88546" translate="yes" xml:space="preserve">
          <source>UTF8_SKIP</source>
          <target state="translated">UTF8_SKIP</target>
        </trans-unit>
        <trans-unit id="17562b3d061f2f42586076a6b020ba8eb357a3ff" translate="yes" xml:space="preserve">
          <source>UTILITIES</source>
          <target state="translated">UTILITIES</target>
        </trans-unit>
        <trans-unit id="58bc809d31f639453a46636f9c8ab08c8b78bb44" translate="yes" xml:space="preserve">
          <source>UTILITY FUNCTIONS</source>
          <target state="translated">ФУНКЦИИ ПОЛЕЗНОСТИ</target>
        </trans-unit>
        <trans-unit id="0df889160bec1efd3a376bc092db51a6960809d0" translate="yes" xml:space="preserve">
          <source>UTS #10: Unicode Collation Algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876d25fb5dd30a195bda72a305a7ba4a3acfcb55" translate="yes" xml:space="preserve">
          <source>UTS #18: Unicode Regular Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd7d8b48471cc7bdfa22b6a7694cc46d2409bb0" translate="yes" xml:space="preserve">
          <source>UV</source>
          <target state="translated">UV</target>
        </trans-unit>
        <trans-unit id="b25ef34eb3a5137d61daf0def8b67fe626cd3875" translate="yes" xml:space="preserve">
          <source>UVCHR_IS_INVARIANT</source>
          <target state="translated">UVCHR_IS_INVARIANT</target>
        </trans-unit>
        <trans-unit id="626b2f1b7c0d475b14997cb2d1af0b7a04543371" translate="yes" xml:space="preserve">
          <source>UVCHR_SKIP</source>
          <target state="translated">UVCHR_SKIP</target>
        </trans-unit>
        <trans-unit id="9746ff9d4d7b1c241287393e4d9dd0cd6f1bbf03" translate="yes" xml:space="preserve">
          <source>UVX</source>
          <target state="translated">UVX</target>
        </trans-unit>
        <trans-unit id="e92904bce8026b3c1f8828b0ce882e6b081c7fb6" translate="yes" xml:space="preserve">
          <source>Uganda</source>
          <target state="translated">Uganda</target>
        </trans-unit>
        <trans-unit id="c951ec00f123510a00d1e3d9539b11b4631d4096" translate="yes" xml:space="preserve">
          <source>Ukraine</source>
          <target state="translated">Ukraine</target>
        </trans-unit>
        <trans-unit id="994023f4756ccee554f76e83b238ef8441ca987c" translate="yes" xml:space="preserve">
          <source>Ultimate control over what should be done when (actually: each time) an option is encountered on the command line can be achieved by designating a reference to a subroutine (or an anonymous subroutine) as the option destination. When GetOptions() encounters the option, it will call the subroutine with two or three arguments. The first argument is the name of the option. (Actually, it is an object that stringifies to the name of the option.) For a scalar or array destination, the second argument is the value to be stored. For a hash destination, the second argument is the key to the hash, and the third argument the value to be stored. It is up to the subroutine to store the value, or do whatever it thinks is appropriate.</source>
          <target state="translated">Конечный контроль над тем,что должно быть сделано,когда (на самом деле:каждый раз)опция встречается в командной строке,может быть достигнут путем назначения ссылки на подпрограмму (или анонимную подпрограмму)в качестве пункта назначения опции.Когда GetOptions()встречает опцию,она будет вызывать подпрограмму с двумя или тремя аргументами.Первый аргумент-имя опции.(На самом деле,это объект,который строчит имя опции.)Для скаляра или назначения массива вторым аргументом является значение,которое должно быть сохранено.Для назначения хэша вторым аргументом является ключ к хэшу,а третьим-хранимое значение.Хранить значение или делать все,что он сочтет нужным,можно только в подпрограммном обеспечении.</target>
        </trans-unit>
        <trans-unit id="3ee38d90a0334118e79056b8389ee44abc43742c" translate="yes" xml:space="preserve">
          <source>Unacceptable behavior will result in a public and clearly identified warning. A second instance of unacceptable behavior from the same individual will result in removal from the mailing list and GitHub issue tracker, for a period of one calendar month. The rationale for this is to provide an opportunity for the person to change the way they act.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd11761cf7cb6cb9a563ded422bdfc4417516b2a" translate="yes" xml:space="preserve">
          <source>Unacceptable behavior will result in a public and clearly identified warning. Repeated unacceptable behavior will result in removal from the mailing list and revocation of rights to update rt.perl.org. The first removal is for one month. Subsequent removals will double in length. After six months with no warning, a user's ban length is reset. Removals, like warnings, are public.</source>
          <target state="translated">Неприемлемое поведение приведет к публичному и четко обозначенному предупреждению.Повторное неприемлемое поведение приведет к удалению из списка рассылки и лишению прав на обновление rt.perl.org.Первое удаление-на один месяц.Последующие удаления будут длиться вдвое дольше.После шести месяцев без предупреждения длина запрета пользователя сбрасывается.Удаления,как и предупреждения,являются публичными.</target>
        </trans-unit>
        <trans-unit id="7be1c42f094036e0d5e47ba36abcce7c417f4479" translate="yes" xml:space="preserve">
          <source>Unambiguous name: &lt;code&gt;CP932&lt;/code&gt;. &lt;code&gt;IANA&lt;/code&gt; name (also used by Mozilla, and provided as an alias by Encode): &lt;code&gt;Windows-31J&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f645668eee1c03a85fb2473dd516adceaef3f2d" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;!&quot;&lt;/code&gt; performs logical negation, that is, &quot;not&quot;. See also &lt;a href=&quot;#Logical-Not&quot;&gt;&lt;code&gt;not&lt;/code&gt;&lt;/a&gt; for a lower precedence version of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8a4652f1c5950bdfb9f442db5f7ff059a9e8ff" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;!&quot;&lt;/code&gt; performs logical negation, that is, &quot;not&quot;. See also &lt;code&gt;not&lt;/code&gt; for a lower precedence version of this.</source>
          <target state="translated">Унарный &lt;code&gt;&quot;!&quot;&lt;/code&gt; выполняет логическое отрицание, то есть &amp;laquo;не&amp;raquo;. См. Также &lt;code&gt;not&lt;/code&gt; версию с более низким приоритетом.</target>
        </trans-unit>
        <trans-unit id="9a531b0100d0a01bbebb12554267e4d3655767b7" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;+&quot;&lt;/code&gt; has no effect whatsoever, even on strings. It is useful syntactically for separating a function name from a parenthesized expression that would otherwise be interpreted as the complete list of function arguments. (See examples above under &lt;a href=&quot;#Terms-and-List-Operators-%28Leftward%29&quot;&gt;&quot;Terms and List Operators (Leftward)&quot;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975143052b1e27f57ec5fcc07f42eb1c0eae9dc3" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;+&quot;&lt;/code&gt; has no effect whatsoever, even on strings. It is useful syntactically for separating a function name from a parenthesized expression that would otherwise be interpreted as the complete list of function arguments. (See examples above under &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward)&lt;/a&gt;.)</source>
          <target state="translated">Унарный &lt;code&gt;&quot;+&quot;&lt;/code&gt; вообще не действует, даже на строки. Это полезно синтаксически для отделения имени функции от выражения в скобках, которое в противном случае интерпретировалось бы как полный список аргументов функции. (См. Примеры выше в разделе &amp;laquo; &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Условия и операторы списков&amp;raquo; (слева)&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="cbc2e014fe3be3f69d01617e0a9853fb77867e55" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;-&quot;&lt;/code&gt; performs arithmetic negation if the operand is numeric, including any string that looks like a number. If the operand is an identifier, a string consisting of a minus sign concatenated with the identifier is returned. Otherwise, if the string starts with a plus or minus, a string starting with the opposite sign is returned. One effect of these rules is that &lt;code&gt;-bareword&lt;/code&gt; is equivalent to the string &lt;code&gt;&quot;-bareword&quot;&lt;/code&gt; . If, however, the string begins with a non-alphabetic character (excluding &lt;code&gt;&quot;+&quot;&lt;/code&gt; or &lt;code&gt;&quot;-&quot;&lt;/code&gt; ), Perl will attempt to convert the string to a numeric, and the arithmetic negation is performed. If the string cannot be cleanly converted to a numeric, Perl will give the warning &lt;b&gt;Argument &quot;the string&quot; isn't numeric in negation (-) at ...&lt;/b&gt;.</source>
          <target state="translated">Унарный знак &lt;code&gt;&quot;-&quot;&lt;/code&gt; выполняет арифметическое отрицание, если операнд числовой, включая любую строку, которая выглядит как число. Если операнд является идентификатором, возвращается строка, состоящая из знака минус, соединенного с идентификатором. В противном случае, если строка начинается с плюса или минуса, возвращается строка, начинающаяся с противоположного знака. Одним из следствий этих правил является то, что &lt;code&gt;-bareword&lt;/code&gt; эквивалентно строке &lt;code&gt;&quot;-bareword&quot;&lt;/code&gt; . Если, однако, строка начинается с неалфавитного символа (за исключением &lt;code&gt;&quot;+&quot;&lt;/code&gt; или &lt;code&gt;&quot;-&quot;&lt;/code&gt; ), Perl попытается преобразовать строку в числовой, и будет выполнено арифметическое отрицание. Если строка не может быть полностью преобразована в числовую, Perl выдаст предупреждение&lt;b&gt;Аргумент &amp;laquo;строка&amp;raquo; не является числовым значением в отрицании (-) в ...&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7bfdc53979623a8376c9812be313cb442d92714a" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;-&quot;&lt;/code&gt; performs arithmetic negation if the operand is numeric, including any string that looks like a number. If the operand is an identifier, a string consisting of a minus sign concatenated with the identifier is returned. Otherwise, if the string starts with a plus or minus, a string starting with the opposite sign is returned. One effect of these rules is that &lt;code&gt;-bareword&lt;/code&gt; is equivalent to the string &lt;code&gt;&quot;-bareword&quot;&lt;/code&gt;. If, however, the string begins with a non-alphabetic character (excluding &lt;code&gt;&quot;+&quot;&lt;/code&gt; or &lt;code&gt;&quot;-&quot;&lt;/code&gt;), Perl will attempt to convert the string to a numeric, and the arithmetic negation is performed. If the string cannot be cleanly converted to a numeric, Perl will give the warning &lt;b&gt;Argument &quot;the string&quot; isn't numeric in negation (-) at ...&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75765e3d8911e6ac713c74a3a1fc1d709b9ed2ea" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;\&quot;&lt;/code&gt; creates a reference to whatever follows it. See &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;. Do not confuse this behavior with the behavior of backslash within a string, although both forms do convey the notion of protecting the next thing from interpolation.</source>
          <target state="translated">Унарный &lt;code&gt;&quot;\&quot;&lt;/code&gt; создает ссылку на все, что следует за ним. См. &lt;a href=&quot;perlreftut&quot;&gt;Perlreftut&lt;/a&gt; и &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; . Не путайте это поведение с поведением обратной косой черты внутри строки, хотя обе формы действительно передают понятие защиты следующего объекта от интерполяции.</target>
        </trans-unit>
        <trans-unit id="ebbcbdaf6ef9f2a6fa62770e3fce7999d3f8a59a" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;\&quot;&lt;/code&gt; creates references. If its operand is a single sigilled thing, it creates a reference to that object. If its operand is a parenthesised list, then it creates references to the things mentioned in the list. Otherwise it puts its operand in list context, and creates a list of references to the scalars in the list provided by the operand. See &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;. Do not confuse this behavior with the behavior of backslash within a string, although both forms do convey the notion of protecting the next thing from interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a440a050a6ba4df9312abb517ec0cbc1f89e1767" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;not&quot;&lt;/code&gt; returns the logical negation of the expression to its right. It's the equivalent of &lt;code&gt;&quot;!&quot;&lt;/code&gt; except for the very low precedence.</source>
          <target state="translated">Унарное &lt;code&gt;&quot;not&quot;&lt;/code&gt; возвращает логическое отрицание выражения справа. Это эквивалент &lt;code&gt;&quot;!&quot;&lt;/code&gt; за исключением очень низкого приоритета.</target>
        </trans-unit>
        <trans-unit id="eafed7c0deddc83d38ef5898a025102a424aea2a" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;~&quot;&lt;/code&gt; performs bitwise negation, that is, 1's complement. For example, &lt;code&gt;0666 &amp;amp; ~027&lt;/code&gt; is 0640. (See also &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;&quot;Integer Arithmetic&quot;&lt;/a&gt; and &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;&quot;Bitwise String Operators&quot;&lt;/a&gt;.) Note that the width of the result is platform-dependent: &lt;code&gt;~0&lt;/code&gt; is 32 bits wide on a 32-bit platform, but 64 bits wide on a 64-bit platform, so if you are expecting a certain bit width, remember to use the &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; operator to mask off the excess bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dae9b42247425fb7e1e868bc6aec93255104f04" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;&quot;~&quot;&lt;/code&gt; performs bitwise negation, that is, 1's complement. For example, &lt;code&gt;0666 &amp;amp; ~027&lt;/code&gt; is 0640. (See also &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Integer Arithmetic&lt;/a&gt; and &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Bitwise String Operators&lt;/a&gt;.) Note that the width of the result is platform-dependent: &lt;code&gt;~0&lt;/code&gt; is 32 bits wide on a 32-bit platform, but 64 bits wide on a 64-bit platform, so if you are expecting a certain bit width, remember to use the &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; operator to mask off the excess bits.</source>
          <target state="translated">Унарный &lt;code&gt;&quot;~&quot;&lt;/code&gt; выполняет побитовое отрицание, то есть дополнение до единицы. Например, &lt;code&gt;0666 &amp;amp; ~027&lt;/code&gt; - это 0640. (См. Также &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Целочисленные арифметические&lt;/a&gt; и &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;побитовые строковые операторы&lt;/a&gt; .) Обратите внимание, что ширина результата зависит от платформы: &lt;code&gt;~0&lt;/code&gt; имеет ширину 32 бита на 32-битной платформе, но ширину 64 бита. на 64-битной платформе, поэтому, если вы ожидаете определенной разрядности, не забудьте использовать оператор &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; чтобы замаскировать лишние биты.</target>
        </trans-unit>
        <trans-unit id="121bb514c3415be69016271f5f8950c0aed3f161" translate="yes" xml:space="preserve">
          <source>Unbackslashed prototype characters have special meanings. Any unbackslashed &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; eats all remaining arguments, and forces list context. An argument represented by &lt;code&gt;$&lt;/code&gt; forces scalar context. An &lt;code&gt;&amp;amp;&lt;/code&gt; requires an anonymous subroutine, which, if passed as the first argument, does not require the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; keyword or a subsequent comma.</source>
          <target state="translated">Символы прототипа без обратной косой черты имеют особое значение. Любые символы &lt;code&gt;@&lt;/code&gt; или &lt;code&gt;%&lt;/code&gt; без обратной косой черты съедают все оставшиеся аргументы и заставляют контекст списка. Аргумент, представленный &lt;code&gt;$&lt;/code&gt; принудительно скалярный контекст. Для &lt;code&gt;&amp;amp;&lt;/code&gt; требуется анонимная подпрограмма, которая, если она передана в качестве первого аргумента, не требует &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; ключевого слова или последующей запятой.</target>
        </trans-unit>
        <trans-unit id="0f4206d3ad193e4f502eb8614314c82b73d3aac7" translate="yes" xml:space="preserve">
          <source>Unbackslashed prototype characters have special meanings. Any unbackslashed &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; eats all remaining arguments, and forces list context. An argument represented by &lt;code&gt;$&lt;/code&gt; forces scalar context. An &lt;code&gt;&amp;amp;&lt;/code&gt; requires an anonymous subroutine, which, if passed as the first argument, does not require the &lt;code&gt;sub&lt;/code&gt; keyword or a subsequent comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3738795de70b96657adef7c7eb0d0399db5d1dfd" translate="yes" xml:space="preserve">
          <source>Unbalanced context: %d more PUSHes than POPs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd301ac8b7825aca5986ed906c3a5149ebf3f404" translate="yes" xml:space="preserve">
          <source>Unbalanced saves: %d more saves than restores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20914fff1ee5340b7195287825b168d65cf279" translate="yes" xml:space="preserve">
          <source>Unbalanced scopes: %d more ENTERs than LEAVEs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353a68e15d6c873dffbe66b456319369d1b6b50f" translate="yes" xml:space="preserve">
          <source>Unbalanced string table refcount: (%d) for &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d948ff04e713e8c3958319663d10246dfd6ee946" translate="yes" xml:space="preserve">
          <source>Unbalanced tmps: %d more allocs than frees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825c40d18a2a673a59517a26d2876574d355db3e" translate="yes" xml:space="preserve">
          <source>Uncompress gzip, zip, bzip2 or lzop file/buffer</source>
          <target state="translated">Распаковать gzip,zip,bzip2 или lzop файл/буфер</target>
        </trans-unit>
        <trans-unit id="d920a6c2ef6eab3bfedd330e8191658438c99755" translate="yes" xml:space="preserve">
          <source>Uncompress gzip, zip, bzip2, xz, lzma, lzip, lzf or lzop file/buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed55ac0a8b1616e77c1e8b5f3fc823c056e7f68" translate="yes" xml:space="preserve">
          <source>Uncompress zlib-based (zip, gzip) file/buffer</source>
          <target state="translated">Распаковать zlib-файл/буфер (zip,gzip)на основе (zip,gzip)</target>
        </trans-unit>
        <trans-unit id="5566ebf8e86133343de98e57588751d94f017699" translate="yes" xml:space="preserve">
          <source>Uncompresses &lt;code&gt;$input&lt;/code&gt; and writes the uncompressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Распаковывает &lt;code&gt;$input&lt;/code&gt; и записывает несжатые данные в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28f5f3ca9546807770e11a4b5cc0101b027504cd" translate="yes" xml:space="preserve">
          <source>Uncompresses &lt;code&gt;$input&lt;/code&gt; and writes the uncompressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3241d8b84b7531f4c85af8e73c024fd4504975c7" translate="yes" xml:space="preserve">
          <source>Uncompresses &lt;code&gt;$source&lt;/code&gt; . If successful it returns the uncompressed data. Otherwise it returns</source>
          <target state="translated">Распаковывает &lt;code&gt;$source&lt;/code&gt; . В случае успеха возвращает несжатые данные. В противном случае возвращается</target>
        </trans-unit>
        <trans-unit id="3e3d7aabce04dc1ae1923e54e8345382bb871093" translate="yes" xml:space="preserve">
          <source>Uncompresses &lt;code&gt;$source&lt;/code&gt;. If successful it returns the uncompressed data. Otherwise it returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8d3226186ea01833996c8b65de3f2a8379790e" translate="yes" xml:space="preserve">
          <source>Uncompression</source>
          <target state="translated">Uncompression</target>
        </trans-unit>
        <trans-unit id="4189d548d277ce627b98749a55c3556ffc35219e" translate="yes" xml:space="preserve">
          <source>Unconditionally match a bareword or any other single character, and then go back to step 1.</source>
          <target state="translated">Безоговорочно сопоставьте пустое слово или любой другой одиночный символ,а затем вернитесь к шагу 1.</target>
        </trans-unit>
        <trans-unit id="577343970a5bf9b7cb8738f42c2797ca4589087a" translate="yes" xml:space="preserve">
          <source>Uncuddled elses and &quot;K&amp;amp;R&quot; style for indenting control constructs</source>
          <target state="translated">Uncuddled elses и стиль &quot;K&amp;amp;R&quot; для отступов управляющих конструкций</target>
        </trans-unit>
        <trans-unit id="11c11d31d108dd964ce797e5076b1d8839850791" translate="yes" xml:space="preserve">
          <source>Uncuddled elses.</source>
          <target state="translated">Необжитые Эльзы.</target>
        </trans-unit>
        <trans-unit id="5cd9e75daaa9152346601595647eb2d9696e6583" translate="yes" xml:space="preserve">
          <source>Undef if an external</source>
          <target state="translated">Необязательно,если внешний</target>
        </trans-unit>
        <trans-unit id="a6e635cf2fd6fb596c7dbe39947e67bb7ea6fa49" translate="yes" xml:space="preserve">
          <source>Undefined format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f02e6922be60fefc3ec95167f2596c8a6d252" translate="yes" xml:space="preserve">
          <source>Undefined format &quot;%s&quot; called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4edf1aebafd67a9b05c592beff7f41d45d0d8d" translate="yes" xml:space="preserve">
          <source>Undefined sort subroutine &quot;%s&quot; called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df75dc3ed124d993a3860e648584776b9c515c8" translate="yes" xml:space="preserve">
          <source>Undefined subroutine &amp;amp;%s called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b410752a7d8baa31a708ac9e0618b37a2bdd788d" translate="yes" xml:space="preserve">
          <source>Undefined subroutine &amp;amp;main::GetOptions called</source>
          <target state="translated">Неопределенная подпрограмма &amp;amp; main :: GetOptions вызвана</target>
        </trans-unit>
        <trans-unit id="547eab04e6e04e1b4edec483ca694ca7539affef" translate="yes" xml:space="preserve">
          <source>Undefined subroutine called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264796a21d9347fe1112a79c8f0b60a38d55c6c6" translate="yes" xml:space="preserve">
          <source>Undefined subroutine in sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3680cc6661c9c64f65a5465eb19c791369f48e" translate="yes" xml:space="preserve">
          <source>Undefined top format &quot;%s&quot; called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0e7464ad33c8fd897b6e1f38879e9424a6041b" translate="yes" xml:space="preserve">
          <source>Undefined value assigned to typeglob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be1ae516287ece8c814ce973af8c8cef754916c" translate="yes" xml:space="preserve">
          <source>Undefines the array. Frees the memory used by the av to store its list of scalars. If any destructors are triggered as a result, the av itself may be freed.</source>
          <target state="translated">Неопределяет массив.Освобождает память,используемую av для хранения списка скаляров.Если в результате сработают деструкторы,то может быть освобождено само av.</target>
        </trans-unit>
        <trans-unit id="54917ea2121718cf7348ee74d00c8feedc82f150" translate="yes" xml:space="preserve">
          <source>Undefines the array. The XS equivalent of &lt;code&gt;undef(@array)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270b863b48b0c13c0b01735bf826d9b654084021" translate="yes" xml:space="preserve">
          <source>Undefines the collation element as if it were unassigned in the &lt;code&gt;table&lt;/code&gt; . This reduces the size of the table. If an unassigned character appears in the string to be collated, the sort key is made from its codepoint as a single-character collation element, as it is greater than any other assigned collation elements (in the codepoint order among the unassigned characters). But, it'd be better to ignore characters unfamiliar to you and maybe never used.</source>
          <target state="translated">Отменяет определение элемента сопоставления, как если бы он не был назначен в &lt;code&gt;table&lt;/code&gt; . Это уменьшает размер таблицы. Если в строке, подлежащей сопоставлению, появляется неназначенный символ, ключ сортировки создается из его кодовой точки как односимвольного элемента сопоставления, поскольку он больше, чем любые другие назначенные элементы сопоставления (в порядке кодовых точек среди неназначенных символов). Но лучше не обращать внимания на незнакомых вам персонажей, которые, возможно, никогда не использовались.</target>
        </trans-unit>
        <trans-unit id="6c572aa720a9e02b4868a08c5ea6700924c6a793" translate="yes" xml:space="preserve">
          <source>Undefines the collation element as if it were unassigned in the &lt;code&gt;table&lt;/code&gt;. This reduces the size of the table. If an unassigned character appears in the string to be collated, the sort key is made from its codepoint as a single-character collation element, as it is greater than any other assigned collation elements (in the codepoint order among the unassigned characters). But, it'd be better to ignore characters unfamiliar to you and maybe never used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b61a323c52c38306eb024952539f4f8c5a7ffe3" translate="yes" xml:space="preserve">
          <source>Undefines the hash. The XS equivalent of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef(%hash)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Отменяет определение хеша. Эквивалент &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef(%hash)&lt;/a&gt;&lt;/code&gt; XS (% hash) .</target>
        </trans-unit>
        <trans-unit id="1e5b088250fea82ab591b0cfc87d6babcdba55fe" translate="yes" xml:space="preserve">
          <source>Undefines the hash. The XS equivalent of &lt;code&gt;undef(%hash)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21918cc87ca44856538ac74361e547848b42b7b4" translate="yes" xml:space="preserve">
          <source>Undefines the value of EXPR, which must be an lvalue. Use only on a scalar value, an array (using &lt;code&gt;@&lt;/code&gt; ), a hash (using &lt;code&gt;%&lt;/code&gt; ), a subroutine (using &lt;code&gt;&amp;amp;&lt;/code&gt; ), or a typeglob (using &lt;code&gt;*&lt;/code&gt; ). Saying &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; $hash{$key}&lt;/code&gt; will probably not do what you expect on most predefined variables or DBM list values, so don't do that; see &lt;a href=&quot;#delete&quot;&gt;delete&lt;/a&gt;. Always returns the undefined value. You can omit the EXPR, in which case nothing is undefined, but you still get an undefined value that you could, for instance, return from a subroutine, assign to a variable, or pass as a parameter. Examples:</source>
          <target state="translated">Отменяет значение EXPR, которое должно быть lvalue. Используйте только скалярное значение, массив (используя &lt;code&gt;@&lt;/code&gt; ), хэш (используя &lt;code&gt;%&lt;/code&gt; ), подпрограмму (используя &lt;code&gt;&amp;amp;&lt;/code&gt; ) или typeglob (используя &lt;code&gt;*&lt;/code&gt; ). Использование &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; $hash{$key}&lt;/code&gt; , вероятно, не приведет к тому, что вы ожидаете от большинства предопределенных переменных или значений списков DBM, поэтому не делайте этого; см. &lt;a href=&quot;#delete&quot;&gt;удалить&lt;/a&gt; . Всегда возвращает неопределенное значение. Вы можете опустить EXPR, и в этом случае ничего не будет неопределенным, но вы все равно получите неопределенное значение, которое вы можете, например, вернуть из подпрограммы, присвоить переменной или передать в качестве параметра. Примеры:</target>
        </trans-unit>
        <trans-unit id="12772c94a5d6a3598c32da79f4c1c4affc5b608e" translate="yes" xml:space="preserve">
          <source>Undefines the value of EXPR, which must be an lvalue. Use only on a scalar value, an array (using &lt;code&gt;@&lt;/code&gt; ), a hash (using &lt;code&gt;%&lt;/code&gt; ), a subroutine (using &lt;code&gt;&amp;amp;&lt;/code&gt; ), or a typeglob (using &lt;code&gt;*&lt;/code&gt; ). Saying &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt; $hash{$key}&lt;/code&gt; will probably not do what you expect on most predefined variables or DBM list values, so don't do that; see &lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt;. Always returns the undefined value. You can omit the EXPR, in which case nothing is undefined, but you still get an undefined value that you could, for instance, return from a subroutine, assign to a variable, or pass as a parameter. Examples:</source>
          <target state="translated">Отменяет значение EXPR, которое должно быть lvalue. Используйте только скалярное значение, массив (используя &lt;code&gt;@&lt;/code&gt; ), хэш (используя &lt;code&gt;%&lt;/code&gt; ), подпрограмму (используя &lt;code&gt;&amp;amp;&lt;/code&gt; ) или typeglob (используя &lt;code&gt;*&lt;/code&gt; ). Использование &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt; $hash{$key}&lt;/code&gt; , вероятно, не приведет к тому, что вы ожидаете от большинства предопределенных переменных или значений списков DBM, поэтому не делайте этого; см. &lt;a href=&quot;delete&quot;&gt;удалить&lt;/a&gt; . Всегда возвращает неопределенное значение. Вы можете опустить EXPR, и в этом случае ничего не будет неопределенным, но вы все равно получите неопределенное значение, которое вы можете, например, вернуть из подпрограммы, присвоить переменной или передать в качестве параметра. Примеры:</target>
        </trans-unit>
        <trans-unit id="638220651f84b9cd00c5941897d28ba69d79dc1a" translate="yes" xml:space="preserve">
          <source>Undefines the value of EXPR, which must be an lvalue. Use only on a scalar value, an array (using &lt;code&gt;@&lt;/code&gt;), a hash (using &lt;code&gt;%&lt;/code&gt;), a subroutine (using &lt;code&gt;&amp;amp;&lt;/code&gt;), or a typeglob (using &lt;code&gt;*&lt;/code&gt;). Saying &lt;code&gt;undef $hash{$key}&lt;/code&gt; will probably not do what you expect on most predefined variables or DBM list values, so don't do that; see &lt;a href=&quot;#delete-EXPR&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt;. Always returns the undefined value. You can omit the EXPR, in which case nothing is undefined, but you still get an undefined value that you could, for instance, return from a subroutine, assign to a variable, or pass as a parameter. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b42ea56822642513e4f112de38357bed9dd6a64" translate="yes" xml:space="preserve">
          <source>Undefining this symbol disables the PerlIO abstraction. PerlIO is now the default; it is not recommended to disable PerlIO.</source>
          <target state="translated">Неопределение этого символа отключает абстракцию PerlIO.Теперь по умолчанию используется PerlIO;не рекомендуется отключать PerlIO.</target>
        </trans-unit>
        <trans-unit id="14931b1ffe46d4f806d87924392ea8d8ba051a3f" translate="yes" xml:space="preserve">
          <source>Undefining this symbol forces Perl to be compiled statically.</source>
          <target state="translated">Неопределение этого символа заставляет Perl компилироваться статически.</target>
        </trans-unit>
        <trans-unit id="55d31ccf7c7a9061158740ae0e4ba2a4be4c51d6" translate="yes" xml:space="preserve">
          <source>Under &quot;Classic&quot; MacOS, a perl program will have the appropriate Creator and Type, so that double-clicking them will invoke the MacPerl application. Under Mac OS X, clickable apps can be made from any &lt;code&gt;#!&lt;/code&gt; script using Wil Sanchez' DropScript utility: &lt;a href=&quot;http://www.wsanchez.net/software/&quot;&gt;http://www.wsanchez.net/software/&lt;/a&gt; .</source>
          <target state="translated">В &amp;laquo;Классической&amp;raquo; MacOS программа Perl будет иметь соответствующий Создатель и Тип, так что двойной щелчок по ним будет вызывать приложение MacPerl. В Mac OS X интерактивные приложения можно создавать из любого &lt;code&gt;#!&lt;/code&gt; скрипт с использованием утилиты DropScript Уила Санчеса: &lt;a href=&quot;http://www.wsanchez.net/software/&quot;&gt;http://www.wsanchez.net/software/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7de147ca0cf42a020c2b34e4934080e8fbf00bba" translate="yes" xml:space="preserve">
          <source>Under &lt;a href=&quot;../test/harness&quot;&gt;Test::Harness&lt;/a&gt;, test number 2 would</source>
          <target state="translated">В разделе &lt;a href=&quot;../test/harness&quot;&gt;Test :: Harness&lt;/a&gt; тест номер 2 будет</target>
        </trans-unit>
        <trans-unit id="830e70bc7050b5ad58debeaf947b37217d6be21e" translate="yes" xml:space="preserve">
          <source>Under &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt;, test number 2 would</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50510298fcc80cb0b2cfe5fcb98eb1382cb9d484" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; , detection step of discontiguous contractions will be skipped.</source>
          <target state="translated">В &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; шаг обнаружения несмежных сокращений будет пропущен.</target>
        </trans-unit>
        <trans-unit id="6a769e92dc491fba4fdaa440dbac9751e38e85b4" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;(normalization =&amp;gt; undef)&lt;/code&gt;, detection step of discontiguous contractions will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1bc7be7a27894ec56a14e00f77fdf88c07658e" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;array_base&quot;&lt;/code&gt; , &lt;code&gt;$[&lt;/code&gt; no longer has any effect, and always contains 0. Assigning 0 to it is permitted, but any other value will produce an error.</source>
          <target state="translated">При не &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; , или &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature &quot;array_base&quot;&lt;/code&gt; , &lt;code&gt;$[&lt;/code&gt; больше не имеет никакого эффекта, и всегда содержит 0. Присвоение 0 ему разрешено, но любое другое значение приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="bacf555aace53131b41a0f7ef63c9e3e7d03589b" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;unicode_strings&lt;/code&gt; starting in Perl 5.12.0, Unicode rules are generally used. See &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt; for details on how this works in combination with various other pragmas.</source>
          <target state="translated">В &lt;code&gt;unicode_strings&lt;/code&gt; , начиная с Perl 5.12.0, обычно используются правила Unicode. См. Подробности о том, как это работает в сочетании с другими прагмами, см. В &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f60303853e6438f23bfd0e7253ff8d6666354a3e" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;unicode_strings&lt;/code&gt; starting in Perl 5.12.0, Unicode rules are generally used. See &lt;a href=&quot;perlfunc#lc&quot;&gt;&quot;lc&quot; in perlfunc&lt;/a&gt; for details on how this works in combination with various other pragmas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fe5caf324bcb104f1845ec70df5cb17cd45071" translate="yes" xml:space="preserve">
          <source>Under Cygwin, $^E is the same as $!. When using &lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;Win32 API Functions&lt;/a&gt;, use &lt;code&gt;Win32::GetLastError()&lt;/code&gt; to get the last Windows error.</source>
          <target state="translated">В Cygwin $ ^ E совпадает с $ !. При использовании &lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;функций Win32 API&lt;/a&gt; используйте &lt;code&gt;Win32::GetLastError()&lt;/code&gt; чтобы получить последнюю ошибку Windows.</target>
        </trans-unit>
        <trans-unit id="bf1bd7b89a19b28d20d4df86f951acf9fc393dd7" translate="yes" xml:space="preserve">
          <source>Under Cygwin, $^E is the same as $!. When using &lt;a href=&quot;win32&quot;&gt;Win32 API Functions&lt;/a&gt;, use &lt;code&gt;Win32::GetLastError()&lt;/code&gt; to get the last Windows error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08490cc0df2a509f16cddc3cf2a4ae40e649767f" translate="yes" xml:space="preserve">
          <source>Under EBCDIC platforms, &lt;code&gt;e2char($n)&lt;/code&gt; may not always be the same as &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(e2charnum($n))&lt;/a&gt;&lt;/code&gt;, and ditto for &lt;code&gt;$Name2character{$name}&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr($Name2character_number{$name})&lt;/a&gt;&lt;/code&gt;, because the strings are returned as native, and the numbers are returned as Unicode. However, for Perls starting with v5.8, &lt;code&gt;e2char($n)&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(utf8::unicode_to_native(e2charnum($n)))&lt;/a&gt;&lt;/code&gt;, and ditto for &lt;code&gt;$Name2character{$name}&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(utf8::unicode_to_native($Name2character_number{$name}))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">На платформах EBCDIC &lt;code&gt;e2char($n)&lt;/code&gt; не всегда может быть таким же, как &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(e2charnum($n))&lt;/a&gt;&lt;/code&gt; , и то же &lt;code&gt;$Name2character{$name}&lt;/code&gt; для $ Name2character {$ name} и &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr($Name2character_number{$name})&lt;/a&gt;&lt;/code&gt; , потому что возвращаются строки как родной, а числа возвращаются как Unicode. Однако для Perls, начиная с v5.8, &lt;code&gt;e2char($n)&lt;/code&gt; совпадает с &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(utf8::unicode_to_native(e2charnum($n)))&lt;/a&gt;&lt;/code&gt; , и то же &lt;code&gt;$Name2character{$name}&lt;/code&gt; для $ Name2character {$ name} и &lt;code&gt;&lt;a href=&quot;../functions/chr&quot;&gt;chr(utf8::unicode_to_native($Name2character_number{$name}))&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24801e56e20625b1799dc0d5ebdcc72e9b0dcde9" translate="yes" xml:space="preserve">
          <source>Under EBCDIC platforms, &lt;code&gt;e2char($n)&lt;/code&gt; may not always be the same as &lt;code&gt;chr(e2charnum($n))&lt;/code&gt;, and ditto for &lt;code&gt;$Name2character{$name}&lt;/code&gt; and &lt;code&gt;chr($Name2character_number{$name})&lt;/code&gt;, because the strings are returned as native, and the numbers are returned as Unicode. However, for Perls starting with v5.8, &lt;code&gt;e2char($n)&lt;/code&gt; is the same as &lt;code&gt;chr(utf8::unicode_to_native(e2charnum($n)))&lt;/code&gt;, and ditto for &lt;code&gt;$Name2character{$name}&lt;/code&gt; and &lt;code&gt;chr(utf8::unicode_to_native($Name2character_number{$name}))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc50122941a9cec999fb031245122855f9d5976" translate="yes" xml:space="preserve">
          <source>Under NFS this will use the time of the NFS server, not the time of the local machine. If there is a time synchronization problem, the NFS server and local machine will have different times. The Unix &lt;a href=&quot;http://man.he.net/man1/touch&quot;&gt;touch(1)&lt;/a&gt; command will in fact normally use this form instead of the one shown in the first example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18254acc65d18b7ddbf875f7bfc47db0d75ce39a" translate="yes" xml:space="preserve">
          <source>Under NFS this will use the time of the NFS server, not the time of the local machine. If there is a time synchronization problem, the NFS server and local machine will have different times. The Unix touch(1) command will in fact normally use this form instead of the one shown in the first example.</source>
          <target state="translated">В NFS будет использоваться время сервера NFS,а не время локальной машины.Если возникает проблема синхронизации времени,то NFS-сервер и локальная машина будут иметь разное время.Команда Unix touch(1)на самом деле обычно использует эту форму вместо формы,показанной в первом примере.</target>
        </trans-unit>
        <trans-unit id="f3924a4fe96e1e85710f171a0842dfde3423eb52" translate="yes" xml:space="preserve">
          <source>Under OS/2, &lt;code&gt;$^E&lt;/code&gt; is set to the error code of the last call to OS/2 API either via CRT, or directly from perl.</source>
          <target state="translated">В OS / 2 &lt;code&gt;$^E&lt;/code&gt; устанавливается на код ошибки последнего вызова OS / 2 API через CRT или напрямую из perl.</target>
        </trans-unit>
        <trans-unit id="19dcdc34494760727e410f497dbed91a176d6c5e" translate="yes" xml:space="preserve">
          <source>Under Perl 5.10 only, using a string eval when &lt;code&gt;autodie&lt;/code&gt; is in effect can cause the autodie behaviour to leak into the surrounding scope. This can be worked around by using a &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; autodie&lt;/code&gt; at the end of the scope to explicitly remove autodie's effects, or by avoiding the use of string eval.</source>
          <target state="translated">Только в Perl 5.10 использование строки eval во время работы &lt;code&gt;autodie&lt;/code&gt; может привести к тому, что поведение autodie проникнет в окружающую область. Это можно обойти, используя &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; autodie&lt;/code&gt; в конце области видимости, чтобы явно удалить эффекты autodie, или избегая использования строки eval.</target>
        </trans-unit>
        <trans-unit id="141394caeda9c5ad5a22f24134bab7c210cd57fb" translate="yes" xml:space="preserve">
          <source>Under Perl 5.10 only, using a string eval when &lt;code&gt;autodie&lt;/code&gt; is in effect can cause the autodie behaviour to leak into the surrounding scope. This can be worked around by using a &lt;code&gt;no autodie&lt;/code&gt; at the end of the scope to explicitly remove autodie's effects, or by avoiding the use of string eval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1824d549ede70b3449b6bc94fa47857184a96f9f" translate="yes" xml:space="preserve">
          <source>Under Perl 5.18 and later, SvREADONLY only applies to read-only variables, and, under 5.20, copy-on-write scalars can also be read-only, so the above check is incorrect. You just want:</source>
          <target state="translated">В соответствии с Perl 5.18 и более поздними версиями,SvREADONLY применяется только к переменным,доступным только для чтения,а в соответствии с 5.20 скаляры копирования на запись также могут быть доступны только для чтения,поэтому вышеприведенная проверка неверна.Вы просто хотите:</target>
        </trans-unit>
        <trans-unit id="8d107d150b9abd6d04d1d29a993fa6ea829d9209" translate="yes" xml:space="preserve">
          <source>Under Perl 5.8 only, &lt;code&gt;autodie&lt;/code&gt;</source>
          <target state="translated">Только под Perl 5.8 &lt;code&gt;autodie&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e28f5c058f0915564622ac46660d6f84c05ab318" translate="yes" xml:space="preserve">
          <source>Under Perl 5.8, the &lt;code&gt;given/when&lt;/code&gt; structure is not available, so the following structure may be used:</source>
          <target state="translated">В Perl 5.8 структура &lt;code&gt;given/when&lt;/code&gt; недоступна, поэтому можно использовать следующую структуру:</target>
        </trans-unit>
        <trans-unit id="ef993909ab6a97a91baf7e650bc7ce46f77c2516" translate="yes" xml:space="preserve">
          <source>Under QNX 6.2.0 there are still a few tests which fail. See below and hints/qnx.sh for more information.</source>
          <target state="translated">В QNX 6.2.0 есть еще несколько неудачных тестов.Смотрите ниже и подсказки/qnx.sh для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="66b5ec5cf7fb5924aee8dffa63eba13ccd60d52e" translate="yes" xml:space="preserve">
          <source>Under Unicode rules, there are a few case-insensitive matches that cross the 255/256 boundary. Except for UTF-8 locales in Perls v5.20 and later, these are disallowed under &lt;code&gt;/l&lt;/code&gt; . For example, 0xFF (on ASCII platforms) does not caselessly match the character at 0x178, &lt;code&gt;LATIN
CAPITAL LETTER Y WITH DIAERESIS&lt;/code&gt; , because 0xFF may not be &lt;code&gt;LATIN SMALL
LETTER Y WITH DIAERESIS&lt;/code&gt; in the current locale, and Perl has no way of knowing if that character even exists in the locale, much less what code point it is.</source>
          <target state="translated">Согласно правилам Unicode существует несколько совпадений без учета регистра, которые пересекают границу 255/256. За исключением локалей UTF-8 в Perls v5.20 и новее, они не разрешены в &lt;code&gt;/l&lt;/code&gt; . Например, 0xFF (на платформах ASCII) не соответствует без регистров символу в 0x178, &lt;code&gt;LATIN CAPITAL LETTER Y WITH DIAERESIS&lt;/code&gt; ЗАГЛАВНОЙ БУКВЕ Y С ДИАРЕЗОМ , потому что 0xFF может не быть &lt;code&gt;LATIN SMALL LETTER Y WITH DIAERESIS&lt;/code&gt; в текущей локали, и Perl не имеет возможности узнать, если это символ даже существует в локали, не говоря уже о том, какой это код.</target>
        </trans-unit>
        <trans-unit id="a229f317f16db87320c5e41b43cc77785168f869" translate="yes" xml:space="preserve">
          <source>Under Unicode rules, there are a few case-insensitive matches that cross the 255/256 boundary. Except for UTF-8 locales in Perls v5.20 and later, these are disallowed under &lt;code&gt;/l&lt;/code&gt;. For example, 0xFF (on ASCII platforms) does not caselessly match the character at 0x178, &lt;code&gt;LATIN CAPITAL LETTER Y WITH DIAERESIS&lt;/code&gt;, because 0xFF may not be &lt;code&gt;LATIN SMALL LETTER Y WITH DIAERESIS&lt;/code&gt; in the current locale, and Perl has no way of knowing if that character even exists in the locale, much less what code point it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666da3b151d79c3526ad94c74b4a7b5272bc4ad7" translate="yes" xml:space="preserve">
          <source>Under Unicode rules, these upper-Latin1 characters are interpreted as Unicode code points, which means they have the same semantics as Latin-1 (ISO-8859-1) and C1 controls.</source>
          <target state="translated">В соответствии с правилами Юникода,эти символы верхнего латинского алфавита 1 интерпретируются как точки кода Юникода,что означает,что они имеют ту же семантику,что и элементы управления латинского алфавита 1 (ISO-8859-1)и С1.</target>
        </trans-unit>
        <trans-unit id="15d191765263aacd2b7fcad31e78fb6cf886a85b" translate="yes" xml:space="preserve">
          <source>Under VMS this reflects the actual VMS exit status; i.e. it is the same as &lt;code&gt;$?&lt;/code&gt; when the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; is in effect.</source>
          <target state="translated">В VMS это отражает фактический статус выхода VMS; т.е. это то же самое, что и &lt;code&gt;$?&lt;/code&gt; когда действует прагма &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6482226ed3d921882dbfe662280c6e28493cbae" translate="yes" xml:space="preserve">
          <source>Under VMS this reflects the actual VMS exit status; i.e. it is the same as &lt;code&gt;$?&lt;/code&gt; when the pragma &lt;code&gt;use vmsish 'status'&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737324e93129014d33d4923a010ebe747aa167f7" translate="yes" xml:space="preserve">
          <source>Under VMS, &lt;code&gt;$^E&lt;/code&gt; provides the VMS status value from the last system error. This is more specific information about the last system error than that provided by &lt;code&gt;$!&lt;/code&gt; . This is particularly important when &lt;code&gt;$!&lt;/code&gt; is set to &lt;b&gt;EVMSERR&lt;/b&gt;.</source>
          <target state="translated">В VMS &lt;code&gt;$^E&lt;/code&gt; предоставляет значение статуса VMS из последней системной ошибки. Это более конкретная информация о последней системной ошибке, чем та, которую предоставляет &lt;code&gt;$!&lt;/code&gt; . Это особенно важно, когда &lt;code&gt;$!&lt;/code&gt; установлен на &lt;b&gt;EVMSERR&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="76dfcc4ab4ed83661a267ed44726342ca382d02d" translate="yes" xml:space="preserve">
          <source>Under VMS, &lt;code&gt;$^E&lt;/code&gt; provides the VMS status value from the last system error. This is more specific information about the last system error than that provided by &lt;code&gt;$!&lt;/code&gt;. This is particularly important when &lt;code&gt;$!&lt;/code&gt; is set to &lt;b&gt;EVMSERR&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b3f98ca540bd0c81d34840956f838255c71318" translate="yes" xml:space="preserve">
          <source>Under VMS, if there is no directory information in the $path, then the current default device and directory is used.</source>
          <target state="translated">Под VMS,если в $path нет информации о каталоге,то используется текущее устройство и каталог по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3aaae4cddb5ecef27b2c450c8cc4b4b174c7016f" translate="yes" xml:space="preserve">
          <source>Under VMS, the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; makes &lt;code&gt;$?&lt;/code&gt; reflect the actual VMS exit status, instead of the default emulation of POSIX status; see &lt;a href=&quot;perlvms#%24%3f&quot;&gt;$? in perlvms&lt;/a&gt; for details.</source>
          <target state="translated">В VMS &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; делает &lt;code&gt;$?&lt;/code&gt; отражать фактический статус выхода VMS вместо стандартной эмуляции статуса POSIX; увидеть &lt;a href=&quot;perlvms#%24%3f&quot;&gt;$? в perlvms&lt;/a&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="9fe540ff184660416cab5f62ce2d7a86b31b31b4" translate="yes" xml:space="preserve">
          <source>Under VMS, the pragma &lt;code&gt;use vmsish 'status'&lt;/code&gt; makes &lt;code&gt;$?&lt;/code&gt; reflect the actual VMS exit status, instead of the default emulation of POSIX status; see &lt;a href=&quot;perlvms#%24%3F&quot;&gt;&quot;$?&quot; in perlvms&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711e7c0754f84b5e7bda634825aa4039a4a70c54" translate="yes" xml:space="preserve">
          <source>Under Win32's &quot;test&quot; target you may use the TEST_SWITCHES and TEST_FILES environment variables to control the behaviour of</source>
          <target state="translated">Под &quot;тестовой&quot; целью Win32 вы можете использовать переменные окружения TEST_SWITCHES и TEST_FILES для управления поведением</target>
        </trans-unit>
        <trans-unit id="53c6d0758bf54648c779157ed9111dd650df9efe" translate="yes" xml:space="preserve">
          <source>Under Win32, &lt;code&gt;$^E&lt;/code&gt; always returns the last error information reported by the Win32 call &lt;code&gt;GetLastError()&lt;/code&gt; which describes the last error from within the Win32 API. Most Win32-specific code will report errors via &lt;code&gt;$^E&lt;/code&gt; . ANSI C and Unix-like calls set &lt;code&gt;errno&lt;/code&gt; and so most portable Perl code will report errors via &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">В Win32 &lt;code&gt;$^E&lt;/code&gt; всегда возвращает информацию о последней ошибке, сообщенную вызовом Win32 &lt;code&gt;GetLastError()&lt;/code&gt; который описывает последнюю ошибку из Win32 API. Большинство Win32-специфический код будет сообщать об ошибках через &lt;code&gt;$^E&lt;/code&gt; . ANSI C и Unix-подобные вызовы устанавливают &lt;code&gt;errno&lt;/code&gt; , поэтому большинство переносимых Perl-кодов будут сообщать об ошибках через &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e14095c735f4241ba86445b598120697973ed27" translate="yes" xml:space="preserve">
          <source>Under Win32, &lt;code&gt;$^E&lt;/code&gt; always returns the last error information reported by the Win32 call &lt;code&gt;GetLastError()&lt;/code&gt; which describes the last error from within the Win32 API. Most Win32-specific code will report errors via &lt;code&gt;$^E&lt;/code&gt;. ANSI C and Unix-like calls set &lt;code&gt;errno&lt;/code&gt; and so most portable Perl code will report errors via &lt;code&gt;$!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5b168779b6e4455afcf5fa22f2ddb16d807c4c" translate="yes" xml:space="preserve">
          <source>Under Windows NT, &lt;code&gt;$sPath&lt;/code&gt; can start with &lt;code&gt;&quot;//?/&quot;&lt;/code&gt; to allow the use of paths longer than &lt;code&gt;MAX_PATH&lt;/code&gt; [for UNC paths, replace the leading &lt;code&gt;&quot;//&quot;&lt;/code&gt; with &lt;code&gt;&quot;//?/UNC/&quot;&lt;/code&gt;, as in &lt;code&gt;&quot;//?/UNC/Server/Share/Dir/File.Ext&quot;&lt;/code&gt;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445377f279bee790252626a9efe4c710c5fb31ec" translate="yes" xml:space="preserve">
          <source>Under Windows and VMS the option file is named</source>
          <target state="translated">В Windows и VMS файл опций называется</target>
        </trans-unit>
        <trans-unit id="991af3b0df6455b17cae9de8484aa49771ee9333" translate="yes" xml:space="preserve">
          <source>Under a few operating systems, &lt;code&gt;$^E&lt;/code&gt; may contain a more verbose error indicator, such as in this case, &quot;CDROM tray not closed.&quot; Systems that do not support extended error messages leave &lt;code&gt;$^E&lt;/code&gt; the same as &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">В некоторых операционных системах &lt;code&gt;$^E&lt;/code&gt; может содержать более подробный индикатор ошибки, например, в данном случае &amp;laquo;Лоток CDROM не закрыт&amp;raquo;. В системах, которые не поддерживают расширенные сообщения об ошибках, &lt;code&gt;$^E&lt;/code&gt; таким же, как &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cba04bbbcd7e6b0b58cb405fffa7701c6b86b43" translate="yes" xml:space="preserve">
          <source>Under a few operating systems, &lt;code&gt;$^E&lt;/code&gt; may contain a more verbose error indicator, such as in this case, &quot;CDROM tray not closed.&quot; Systems that do not support extended error messages leave &lt;code&gt;$^E&lt;/code&gt; the same as &lt;code&gt;$!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8188d9bfb2c028e78df0c34f466ab12923ca95e" translate="yes" xml:space="preserve">
          <source>Under bignum (or bigint or bigrat), Perl will &quot;upgrade&quot; the numbers appropriately. This means that:</source>
          <target state="translated">Под бигнумом (или bigint или bigrat),Perl будет &quot;обновлять&quot; номера соответствующим образом.Это значит,что..:</target>
        </trans-unit>
        <trans-unit id="936167913e1d36052a60fe747af5e2acfb71f327" translate="yes" xml:space="preserve">
          <source>Under case-sensitive matching, these both match the same code points as &lt;code&gt;\p{General Category=Titlecase_Letter}&lt;/code&gt; (&lt;code&gt;\p{gc=&lt;a href=&quot;functions/lt&quot;&gt;lt&lt;/a&gt;}&lt;/code&gt; ). The difference is that under &lt;code&gt;/i&lt;/code&gt; caseless matching, these match the same as &lt;code&gt;\p{Cased}&lt;/code&gt; , whereas &lt;code&gt;\p{gc=&lt;a href=&quot;functions/lt&quot;&gt;lt&lt;/a&gt;}&lt;/code&gt; matches &lt;code&gt;\p{Cased_Letter&lt;/code&gt; ).</source>
          <target state="translated">При сопоставлении с учетом регистра они оба соответствуют тем же кодовым точкам, что и &lt;code&gt;\p{General Category=Titlecase_Letter}&lt;/code&gt; ( &lt;code&gt;\p{gc=&lt;a href=&quot;functions/lt&quot;&gt;lt&lt;/a&gt;}&lt;/code&gt; ). Разница в том, что при сопоставлении без регистра &lt;code&gt;/i&lt;/code&gt; они совпадают с &lt;code&gt;\p{Cased}&lt;/code&gt; , тогда как &lt;code&gt;\p{gc=&lt;a href=&quot;functions/lt&quot;&gt;lt&lt;/a&gt;}&lt;/code&gt; соответствует &lt;code&gt;\p{Cased_Letter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="16d7375a7fe76f99800381f8b36c3f7a2c76e668" translate="yes" xml:space="preserve">
          <source>Under case-sensitive matching, these both match the same code points as &lt;code&gt;\p{General Category=Titlecase_Letter}&lt;/code&gt; (&lt;code&gt;\p{gc=lt}&lt;/code&gt;). The difference is that under &lt;code&gt;/i&lt;/code&gt; caseless matching, these match the same as &lt;code&gt;\p{Cased}&lt;/code&gt;, whereas &lt;code&gt;\p{gc=lt}&lt;/code&gt; matches &lt;code&gt;\p{Cased_Letter&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58098e551f5eebaa46d0d3a19d00f14ced3f4d46" translate="yes" xml:space="preserve">
          <source>Under ithreads the optree is read only. If you want to enforce this, to check for write accesses from buggy code, compile with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_OPS&lt;/code&gt; to enable code that allocates op memory via &lt;code&gt;mmap&lt;/code&gt; , and sets it read-only when it is attached to a subroutine. Any write access to an op results in a &lt;code&gt;SIGBUS&lt;/code&gt; and abort.</source>
          <target state="translated">В ithreads optree доступен только для чтения. Если вы хотите принудительно выполнить это, чтобы проверить доступ для записи из ошибочного кода, скомпилируйте с &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_OPS&lt;/code&gt; , чтобы включить код, который выделяет операционную память через &lt;code&gt;mmap&lt;/code&gt; и устанавливает его только для чтения, когда он присоединен к подпрограмме. Любой доступ на запись к операции приводит к &lt;code&gt;SIGBUS&lt;/code&gt; и прерыванию.</target>
        </trans-unit>
        <trans-unit id="21eb1ae9bcc07ffd150bd4cea8dca0ae9a233a36" translate="yes" xml:space="preserve">
          <source>Under ithreads the optree is read only. If you want to enforce this, to check for write accesses from buggy code, compile with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_OPS&lt;/code&gt; to enable code that allocates op memory via &lt;code&gt;mmap&lt;/code&gt;, and sets it read-only when it is attached to a subroutine. Any write access to an op results in a &lt;code&gt;SIGBUS&lt;/code&gt; and abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d556cba6d79170127d0f04c67e73cd273a0ab83" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, the CV forgets about its slab (decrementing the reference count) when the root is attached. So the slab reference counting that happens when ops are freed takes care of freeing the slab. In some cases, the CV is told to forget about the slab (&lt;code&gt;cv_forget_slab&lt;/code&gt;) precisely so that the ops can survive after the CV is done away with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c5c0dce73b6a45e16e6c80203f13488d40f1dd" translate="yes" xml:space="preserve">
          <source>Under the &quot;switch&quot; feature, Perl gains the experimental keywords &lt;code&gt;given&lt;/code&gt; , &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt; . Starting from Perl 5.16, one can prefix the switch keywords with &lt;code&gt;CORE::&lt;/code&gt; to access the feature without a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; statement. The keywords &lt;code&gt;given&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt; are analogous to &lt;code&gt;switch&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; in other languages, so the code in the previous section could be rewritten as</source>
          <target state="translated">Под функцией &amp;laquo;переключения&amp;raquo; Perl получает экспериментальные ключевые слова, &lt;code&gt;given&lt;/code&gt; , &lt;code&gt;when&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;break&lt;/code&gt; . Начиная с Perl 5.16, можно добавить к ключевым словам переключателя префикс &lt;code&gt;CORE::&lt;/code&gt; для доступа к функции без &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; оператора функции . Ключевые слова &lt;code&gt;given&lt;/code&gt; и &lt;code&gt;when&lt;/code&gt; аналогичны &lt;code&gt;switch&lt;/code&gt; и &lt;code&gt;case&lt;/code&gt; на других языках, так что код в предыдущем разделе , можно переписать в виде</target>
        </trans-unit>
        <trans-unit id="429aec7265e307e4dfd4174d6cfde74d06bbb3ef" translate="yes" xml:space="preserve">
          <source>Under the &quot;switch&quot; feature, Perl gains the experimental keywords &lt;code&gt;given&lt;/code&gt;, &lt;code&gt;when&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt;. Starting from Perl 5.16, one can prefix the switch keywords with &lt;code&gt;CORE::&lt;/code&gt; to access the feature without a &lt;code&gt;use feature&lt;/code&gt; statement. The keywords &lt;code&gt;given&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt; are analogous to &lt;code&gt;switch&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; in other languages -- though &lt;code&gt;continue&lt;/code&gt; is not -- so the code in the previous section could be rewritten as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f764edcb644a2a893a6fefa3a757e31fb881f9a7" translate="yes" xml:space="preserve">
          <source>Under the &lt;a href=&quot;feature#The-%27unicode_eval%27-and-%27evalbytes%27-features&quot;&gt;&lt;code&gt;&quot;unicode_eval&quot;&lt;/code&gt; feature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcedc6c33e9a6ba46a7f82a03dd4b7c259f61b3" translate="yes" xml:space="preserve">
          <source>Under the &lt;code&gt;unicode_eval&lt;/code&gt; feature, Perl's &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; function, when passed a string, will evaluate it as a string of characters, ignoring any &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; declarations. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; exists to declare the encoding of the script, which only makes sense for a stream of bytes, not a string of characters. Source filters are forbidden, as they also really only make sense on strings of bytes. Any attempt to activate a source filter will result in an error.</source>
          <target state="translated">В рамках функции &lt;code&gt;unicode_eval&lt;/code&gt; функция Perl &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; при передаче строки будет оценивать ее как строку символов, игнорируя любые объявления &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; существует для объявления кодировки скрипта, которая имеет смысл только для потока байтов, а не для строки символов. Исходные фильтры запрещены, так как они действительно имеют смысл только для строк байтов. Любая попытка активировать исходный фильтр приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="3ed7e8de69faa9a39e5b719579b31e326e5e1ba3" translate="yes" xml:space="preserve">
          <source>Under the Mac, it depends which environment you are using. The MacPerl shell, or MPW, is much like Unix shells in its support for several quoting variants, except that it makes free use of the Mac's non-ASCII characters as control characters.</source>
          <target state="translated">Под Mac это зависит от того,какую среду вы используете.Оболочка MacPerl,или MPW,очень похожа на Unix-оболочки в своей поддержке нескольких вариантов цитирования,за исключением того,что она свободно использует не-ASCII-символы Mac в качестве управляющих символов.</target>
        </trans-unit>
        <trans-unit id="57a69bed4d30aeb2c23df15a4942d2f1bc4e9a99" translate="yes" xml:space="preserve">
          <source>Under the current implementation, the &lt;code&gt;foreach&lt;/code&gt; loop can be anywhere within the &lt;code&gt;when&lt;/code&gt; modifier's dynamic scope, but must be within the &lt;code&gt;given&lt;/code&gt; block's lexical scope. This restricted may be relaxed in a future release. See &lt;a href=&quot;#Switch-Statements&quot;&gt;Switch Statements&lt;/a&gt; below.</source>
          <target state="translated">В текущей реализации цикл &lt;code&gt;foreach&lt;/code&gt; может находиться где угодно в пределах динамической области видимости модификатора &lt;code&gt;when&lt;/code&gt; , но должен находиться в пределах лексической области видимости &lt;code&gt;given&lt;/code&gt; блока. Это ограничение может быть ослаблено в будущем выпуске. См. Раздел &amp;laquo; &lt;a href=&quot;#Switch-Statements&quot;&gt;Операторы переключения&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="c2c16149ecdeeb74ed5502e1f6dbfb7232f42a07" translate="yes" xml:space="preserve">
          <source>Under the current implementation, the &lt;code&gt;foreach&lt;/code&gt; loop can be anywhere within the &lt;code&gt;when&lt;/code&gt; modifier's dynamic scope, but must be within the &lt;code&gt;given&lt;/code&gt; block's lexical scope. This restriction may be relaxed in a future release. See &lt;a href=&quot;#Switch-Statements&quot;&gt;&quot;Switch Statements&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08f959b6899ef90dffb2ee9e0e0a8572c0a7c28" translate="yes" xml:space="preserve">
          <source>Under the hood, Perl filehandles are instances of the &lt;code&gt;IO::Handle&lt;/code&gt; or &lt;code&gt;IO::File&lt;/code&gt; class. Once you have an open filehandle, you can call methods on it. Additionally, you can call methods on the &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; , and &lt;code&gt;STDERR&lt;/code&gt; filehandles.</source>
          <target state="translated">Под капотом Perl-дескрипторы файлов являются экземплярами классов &lt;code&gt;IO::Handle&lt;/code&gt; или &lt;code&gt;IO::File&lt;/code&gt; . Если у вас есть открытый дескриптор файла, вы можете вызывать для него методы. Кроме того, вы можете вызывать методы дескрипторов файлов &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; и &lt;code&gt;STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39f4d0de021895e742d4650602144370ddd79e3a" translate="yes" xml:space="preserve">
          <source>Under the hood, Perl filehandles are instances of the &lt;code&gt;IO::Handle&lt;/code&gt; or &lt;code&gt;IO::File&lt;/code&gt; class. Once you have an open filehandle, you can call methods on it. Additionally, you can call methods on the &lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, and &lt;code&gt;STDERR&lt;/code&gt; filehandles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16abd29e91ee37c03769fcf588081b10ade9062f" translate="yes" xml:space="preserve">
          <source>Under the same license as Perl itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e7e970c4cb85f5a1a451cbbaa7bb6fdbefed11" translate="yes" xml:space="preserve">
          <source>Underlying implementation for the &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; Perl function. Note that the perl-level function is vaguely deprecated.</source>
          <target state="translated">Базовая реализация функции &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; Perl. Обратите внимание, что функция уровня perl не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="7f6fc2f81f4959a48ec9de583348cb6833131799" translate="yes" xml:space="preserve">
          <source>Underlying implementation for the &lt;code&gt;reset&lt;/code&gt; Perl function. Note that the perl-level function is vaguely deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d53a031b5fe95ac3434bee7e57607b8155a1a48" translate="yes" xml:space="preserve">
          <source>Understand References Today</source>
          <target state="translated">Понять ссылки Сегодня</target>
        </trans-unit>
        <trans-unit id="d2b515bbbe667df83c6f17f27b425a07b052435e" translate="yes" xml:space="preserve">
          <source>Understand that this removes the case-insensitivity feature of this module.</source>
          <target state="translated">Поймите,что это устраняет функцию чувствительности корпуса данного модуля.</target>
        </trans-unit>
        <trans-unit id="5dff374e163235318e5ce8f7742ec1049ed8b995" translate="yes" xml:space="preserve">
          <source>Understanding the Magic of Tied Hashes and Arrays</source>
          <target state="translated">Понимание магии завязанных гашишей и массивов</target>
        </trans-unit>
        <trans-unit id="4fad51d89f7e0dadc266115be3afc11b52bc9806" translate="yes" xml:space="preserve">
          <source>Undertake to build a new set of Perl images using VMS commands. Since VMS does dynamic loading, it's not necessary to statically link each extension into the Perl image, so this isn't the normal build path. Consequently, it hasn't really been tested, and may well be incomplete.</source>
          <target state="translated">Принять решение о создании нового набора образов Perl с помощью команд VMS.Так как VMS выполняет динамическую загрузку,нет необходимости статически связывать каждое расширение с изображением на Perl,поэтому это не обычный путь сборки.Следовательно,на самом деле он не тестировался и вполне может быть неполным.</target>
        </trans-unit>
        <trans-unit id="6b54be85a5a464cb36e53bbd5948681e9238101f" translate="yes" xml:space="preserve">
          <source>Undo various types of fakery on an SV, where fakery means &quot;more than&quot; a string: if the PV is a shared string, make a private copy; if we're a ref, stop refing; if we're a glob, downgrade to an &lt;code&gt;xpvmg&lt;/code&gt;; if we're a copy-on-write scalar, this is the on-write time when we do the copy, and is also used locally; if this is a vstring, drop the vstring magic. If &lt;code&gt;SV_COW_DROP_PV&lt;/code&gt; is set then a copy-on-write scalar drops its PV buffer (if any) and becomes &lt;code&gt;SvPOK_off&lt;/code&gt; rather than making a copy. (Used where this scalar is about to be set to some other value.) In addition, the &lt;code&gt;flags&lt;/code&gt; parameter gets passed to &lt;code&gt;sv_unref_flags()&lt;/code&gt; when unreffing. &lt;code&gt;sv_force_normal&lt;/code&gt; calls this function with flags set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58380a9a71bcafd994016d7b4cb1383592a7215e" translate="yes" xml:space="preserve">
          <source>Undo various types of fakery on an SV, where fakery means &quot;more than&quot; a string: if the PV is a shared string, make a private copy; if we're a ref, stop refing; if we're a glob, downgrade to an xpvmg; if we're a copy-on-write scalar, this is the on-write time when we do the copy, and is also used locally; if this is a vstring, drop the vstring magic. If &lt;code&gt;SV_COW_DROP_PV&lt;/code&gt; is set then a copy-on-write scalar drops its PV buffer (if any) and becomes SvPOK_off rather than making a copy. (Used where this scalar is about to be set to some other value.) In addition, the &lt;code&gt;flags&lt;/code&gt; parameter gets passed to &lt;code&gt;sv_unref_flags()&lt;/code&gt; when unreffing. &lt;code&gt;sv_force_normal&lt;/code&gt; calls this function with flags set to 0.</source>
          <target state="translated">Отмените различные типы подделки на SV, где fakery означает &amp;laquo;больше, чем&amp;raquo; строку: если PV является общей строкой, сделайте частную копию; если мы рефери, перестань реферировать; если мы глобус, перейдите на xpvmg; если мы скаляр копирования при записи, это время записи, когда мы делаем копирование, и оно также используется локально; если это vstring, отбросьте магию vstring. Если установлен &lt;code&gt;SV_COW_DROP_PV&lt;/code&gt; , то скаляр копирования при записи отбрасывает свой буфер PV (если есть) и становится SvPOK_off, а не копирует. (Используется, когда этот скаляр собирается установить на какое-то другое значение.) Кроме того, параметр &lt;code&gt;flags&lt;/code&gt; передается в &lt;code&gt;sv_unref_flags()&lt;/code&gt; при отмене ссылки. &lt;code&gt;sv_force_normal&lt;/code&gt; вызывает эту функцию с флагами, установленными в 0.</target>
        </trans-unit>
        <trans-unit id="6f1a942ff8c67eb2d1fc5bf7179e4670a0cecd7d" translate="yes" xml:space="preserve">
          <source>Undo various types of fakery on an SV: if the PV is a shared string, make a private copy; if we're a ref, stop refing; if we're a glob, downgrade to an &lt;code&gt;xpvmg&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#sv_force_normal_flags&quot;&gt;&quot;sv_force_normal_flags&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0043167da52b5a8f43ef5ef3ae847c1d205a64" translate="yes" xml:space="preserve">
          <source>Undo various types of fakery on an SV: if the PV is a shared string, make a private copy; if we're a ref, stop refing; if we're a glob, downgrade to an xpvmg. See also &lt;code&gt;sv_force_normal_flags&lt;/code&gt; .</source>
          <target state="translated">Отмените различные типы подделки на SV: если PV является общей строкой, сделайте частную копию; если мы рефери, перестань реферировать; если мы глобус, переходите на xpvmg. См. Также &lt;code&gt;sv_force_normal_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9b219af612756cb93e821fb5ae6c25750a8208b" translate="yes" xml:space="preserve">
          <source>Undocumented functions</source>
          <target state="translated">Недокументированные функции</target>
        </trans-unit>
        <trans-unit id="e41716465542db7b5229d785ccf7cc674a9a2021" translate="yes" xml:space="preserve">
          <source>Unescaped left brace in regex is illegal here in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360e841155690a571fd019b59b2e90901cd664e" translate="yes" xml:space="preserve">
          <source>Unescaped left brace in regex is passed through in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd43bbecc54b5a0f3d5534ed1867230c22e3ca4" translate="yes" xml:space="preserve">
          <source>Unescaped left braces in regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb80f3878ea015392dd87b05584ccec54611d89" translate="yes" xml:space="preserve">
          <source>Unescaped left braces in regular expressions (for 5.30)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9669238bade25c40c06b3f549ae09d7384574818" translate="yes" xml:space="preserve">
          <source>Unescaped literal '%c' in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22086bbd02aed990980d36b0db035a998bc6e3e0" translate="yes" xml:space="preserve">
          <source>Unexpected '(' with no preceding operator in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ad8043f2dbcf1dd017dcdb5209cbf492290eda" translate="yes" xml:space="preserve">
          <source>Unexpected ')' in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3baa204dcc0f34d9c04dd0cdbe5cd8bc491de0f" translate="yes" xml:space="preserve">
          <source>Unexpected ']' with no following ')' in (?[... in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceff2d23f8886ee7189841ccdf57932b12e7de9" translate="yes" xml:space="preserve">
          <source>Unexpected binary operator '%c' with no preceding operand in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fd6877eeb4ca65b2ae370712af39b9caed0a2a" translate="yes" xml:space="preserve">
          <source>Unexpected character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bb4877e7bb13d05b3e08f4eae8e3dad1e4b888" translate="yes" xml:space="preserve">
          <source>Unexpected constant lvalue entersub entry via type/targ %d:%d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d819fa6d0f62b6341c9587511dec4703500307" translate="yes" xml:space="preserve">
          <source>Unexpected exit %u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbae700354867d121187e2a50e0cc20e0e1e77b" translate="yes" xml:space="preserve">
          <source>Unexpected exit failure %d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed18284023acb946f22279a557b952faac276d4" translate="yes" xml:space="preserve">
          <source>Unfinished Tales</source>
          <target state="translated">Незаконченные сказки</target>
        </trans-unit>
        <trans-unit id="4df58040d6486eaa853729500be20c8509618322" translate="yes" xml:space="preserve">
          <source>Unfortunately it is not that difficult somehow manage to break one's Mac OS X Perl rather severely. If all else fails and you want to really, &lt;b&gt;REALLY&lt;/b&gt;, start from scratch and remove even your Apple Perl installation (which has become corrupted somehow), the following instructions should do it. &lt;b&gt;Please think twice before following these instructions: they are much like conducting brain surgery to yourself. Without anesthesia.&lt;/b&gt; We will &lt;b&gt;not&lt;/b&gt; come to fix your system if you do this.</source>
          <target state="translated">К сожалению, не так уж и сложно как-то серьезно взломать Mac OS X Perl. Если все остальное не удается, и вы действительно хотите, &lt;b&gt;ДЕЙСТВИТЕЛЬНО&lt;/b&gt; начать с нуля и удалить даже свою установку Apple Perl (которая каким-то образом была повреждена), следующие инструкции должны сделать это. &lt;b&gt;Пожалуйста, дважды подумайте, прежде чем следовать этим инструкциям: они очень похожи на операцию на головном мозге. Без анестезии. &lt;/b&gt;Мы &lt;b&gt;не&lt;/b&gt; будем исправлять вашу систему, если вы это сделаете.</target>
        </trans-unit>
        <trans-unit id="378b677974afb6ec2935fe271f0a9219fbb154a8" translate="yes" xml:space="preserve">
          <source>Unfortunately this field is basically meaningless, since many distributions are hybrids of several kinds of things, or some new thing, or subjectively different in focus depending on who's using them. Tools like Module::Build and MakeMaker will likely stop generating this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f5b94a3a1a43fcb76168bb8fa3d4bd048c2c1e" translate="yes" xml:space="preserve">
          <source>Unfortunately this is sometimes not enough, neither colour nor quotes will help you with problems involving tabs, other non-printing characters and certain kinds of problems inherent in Unicode. To deal with this, you can switch Test::Tester into a mode whereby all &quot;tricky&quot; characters are shown as \{xx}. Tricky characters are those with ASCII code less than 33 or higher than 126. This makes the output more difficult to read but much easier to find subtle differences between strings. To turn on this mode either call &lt;code&gt;show_space()&lt;/code&gt; in your test script or set the &lt;code&gt;TESTTESTERSPACE&lt;/code&gt; environment variable to be a true value. The example above would then look like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29de2b4590451aa9259989dd73cca2f011560c79" translate="yes" xml:space="preserve">
          <source>Unfortunately, I can't differentiate any further.</source>
          <target state="translated">К сожалению,я больше не могу различать.</target>
        </trans-unit>
        <trans-unit id="6e14820d498a0bc4a9f36bbc1285250e475a8eba" translate="yes" xml:space="preserve">
          <source>Unfortunately, a note cannot be used with the single argument style of &lt;code&gt;ok()&lt;/code&gt; . That is, if you try &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt;, then &lt;code&gt;Test&lt;/code&gt; will interpret this as &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt;, and probably end up testing &lt;code&gt;&lt;i&gt;arg1&lt;/i&gt; eq &lt;i&gt;arg2&lt;/i&gt;&lt;/code&gt; -- and that's not what you want!</source>
          <target state="translated">К сожалению, примечание нельзя использовать со стилем с одним аргументом &lt;code&gt;ok()&lt;/code&gt; . То есть, если вы попробуете &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt; , тогда &lt;code&gt;Test&lt;/code&gt; будет интерпретировать это как &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt; и, вероятно, закончит тестирование &lt;code&gt;&lt;i&gt;arg1&lt;/i&gt; eq &lt;i&gt;arg2&lt;/i&gt;&lt;/code&gt; - а это не то, что вам нужно!</target>
        </trans-unit>
        <trans-unit id="ef3c1b19c392ac342a5e6bd955e45b0b563788d1" translate="yes" xml:space="preserve">
          <source>Unfortunately, a note cannot be used with the single argument style of &lt;code&gt;ok()&lt;/code&gt;. That is, if you try &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;note&lt;/i&gt;)&lt;/code&gt;, then &lt;code&gt;Test&lt;/code&gt; will interpret this as &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt;, and probably end up testing &lt;code&gt;&lt;i&gt;arg1&lt;/i&gt; eq &lt;i&gt;arg2&lt;/i&gt;&lt;/code&gt; -- and that's not what you want!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed74c92d4298d9e7fcce728b69ed6f5c8ab08c5" translate="yes" xml:space="preserve">
          <source>Unfortunately, for backwards compatibility reasons, an empty &lt;code&gt;\x&lt;/code&gt; is legal outside &lt;code&gt;use re 'strict'&lt;/code&gt; and expands to a NUL character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4f5938609da571758adb22fa6ce02f230693d9" translate="yes" xml:space="preserve">
          <source>Unfortunately, interpretation of colors 0 through 7 often depends on whether the emulator supports eight colors or sixteen colors. Emulators that only support eight colors (such as the Linux console) will display colors 0 through 7 with normal brightness and ignore colors 8 through 15, treating them the same as white. Emulators that support 16 colors, such as gnome-terminal, normally display colors 0 through 7 as dim or darker versions and colors 8 through 15 as normal brightness. On such emulators, the &quot;normal&quot; white (color 7) usually is shown as pale grey, requiring bright white (15) to be used to get a real white color. Bright black usually is a dark grey color, although some terminals display it as pure black. Some sixteen-color terminal emulators also treat normal yellow (color 3) as orange or brown, and bright yellow (color 11) as yellow.</source>
          <target state="translated">К сожалению,интерпретация цветов с 0 по 7 часто зависит от того,поддерживает ли эмулятор восемь или шестнадцать цветов.Эмуляторы,поддерживающие только восемь цветов (например,консоль Linux),будут отображать цвета с 0 по 7 с нормальной яркостью и игнорировать цвета с 8 по 15,рассматривая их как белые.Эмуляторы,поддерживающие 16 цветов,такие как гном-терминал,обычно отображают цвета с 0 по 7 как затемненные или более темные версии и цвета с 8 по 15 как нормальную яркость.На таких эмуляторах &quot;нормальный&quot; белый цвет (цвет 7)обычно отображается как бледно-серый,что требует использования яркого белого (15)для получения настоящего белого цвета.Яркий черный цвет обычно является темно-серым,хотя на некоторых терминалах он отображается как чистый черный.Около шестнадцати цветных терминальных эмуляторов также рассматривают нормальный желтый (цвет 3)как оранжевый или коричневый,а ярко-желтый (цвет 11)как желтый.</target>
        </trans-unit>
        <trans-unit id="d3f96232328f4faede427c8ce3041998253135ab" translate="yes" xml:space="preserve">
          <source>Unfortunately, it may be that encodings are not &lt;code&gt;PerlIO&lt;/code&gt; -savvy. You can check to see whether your encoding is supported by &lt;code&gt;PerlIO&lt;/code&gt; by invoking the &lt;code&gt;perlio_ok&lt;/code&gt; method on it:</source>
          <target state="translated">К сожалению, может случиться так, что кодировки не &lt;code&gt;PerlIO&lt;/code&gt; PerlIO. Вы можете проверить, поддерживается ли ваша кодировка &lt;code&gt;PerlIO&lt;/code&gt; , вызвав на &lt;code&gt;perlio_ok&lt;/code&gt; метод perlio_ok :</target>
        </trans-unit>
        <trans-unit id="7a881f618a75cd78f718468efd31960bdadb828c" translate="yes" xml:space="preserve">
          <source>Unfortunately, it may be that encodings are not &lt;code&gt;PerlIO&lt;/code&gt;-savvy. You can check to see whether your encoding is supported by &lt;code&gt;PerlIO&lt;/code&gt; by invoking the &lt;code&gt;perlio_ok&lt;/code&gt; method on it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa870b38ba970158ffd4da6159a903c51d8f85af" translate="yes" xml:space="preserve">
          <source>Unfortunately, the original specification of UTF-8 leaves some room for interpretation of how many bytes of encoded output one should generate from one input Unicode character. Strictly speaking, the shortest possible sequence of UTF-8 bytes should be generated, because otherwise there is potential for an input buffer overflow at the receiving end of a UTF-8 connection. Perl always generates the shortest length UTF-8, and with warnings on, Perl will warn about non-shortest length UTF-8 along with other malformations, such as the surrogates, which are not Unicode code points valid for interchange.</source>
          <target state="translated">К сожалению,исходная спецификация UTF-8 оставляет некоторое пространство для интерпретации того,сколько байт кодированного вывода нужно сгенерировать из одного входного символа Unicode.Строго говоря,должна быть сгенерирована как можно более короткая последовательность байт UTF-8,так как в противном случае существует вероятность переполнения входного буфера на приемном конце соединения по UTF-8.Perl всегда генерирует самую короткую длину UTF-8,а при наличии предупреждений Perl будет предупреждать о не самой короткой длине UTF-8 наряду с другими пороками,такими как суррогаты,которые не являются действительными для обмена точками Юникод-кода.</target>
        </trans-unit>
        <trans-unit id="a23a8e59abb3029d4c1dd279e145008516f63183" translate="yes" xml:space="preserve">
          <source>Unfortunately, there are quite a few deficiencies with the design (and often, the implementations) of locales. Unicode was invented (see &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; for an introduction to that) in part to address these design deficiencies, and nowadays, there is a series of &quot;UTF-8 locales&quot;, based on Unicode. These are locales whose character set is Unicode, encoded in UTF-8. Starting in v5.20, Perl fully supports UTF-8 locales, except for sorting and string comparisons like &lt;code&gt;lt&lt;/code&gt; and &lt;code&gt;ge&lt;/code&gt;. Starting in v5.26, Perl can handle these reasonably as well, depending on the platform's implementation. However, for earlier releases or for better control, use &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt;. There are actually two slightly different types of UTF-8 locales: one for Turkic languages and one for everything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1170c59a72df3e22ea0a090adf0e9824ff8c0b09" translate="yes" xml:space="preserve">
          <source>Unfortunately, there are quite a few deficiencies with the design (and often, the implementations) of locales. Unicode was invented (see &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; for an introduction to that) in part to address these design deficiencies, and nowadays, there is a series of &quot;UTF-8 locales&quot;, based on Unicode. These are locales whose character set is Unicode, encoded in UTF-8. Starting in v5.20, Perl fully supports UTF-8 locales, except for sorting and string comparisons. (Use &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; for these.) Perl continues to support the old non UTF-8 locales as well. There are currently no UTF-8 locales for EBCDIC platforms.</source>
          <target state="translated">К сожалению, в дизайне (а часто и в реализации) локалей есть немало недостатков. Юникод был изобретен (см. &lt;a href=&quot;perlunitut&quot;&gt;Введение в perlunitut&lt;/a&gt; ) отчасти для устранения этих недостатков дизайна, и в настоящее время существует серия &amp;laquo;локалей UTF-8&amp;raquo;, основанных на Unicode. Это языковые стандарты, набор символов которых - Unicode, закодированный в UTF-8. Начиная с версии 5.20, Perl полностью поддерживает локали UTF-8, за исключением сортировки и сравнения строк. (Для этого используйте &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; .) Perl продолжает поддерживать старые локали, отличные от UTF-8. В настоящее время нет локалей UTF-8 для платформ EBCDIC.</target>
        </trans-unit>
        <trans-unit id="c8d518114a049f78aefe7090de8efc32eccefc83" translate="yes" xml:space="preserve">
          <source>Unfortunately, this isn't true. In perl 5.18 and earlier, AVs use &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; as a marker for indicating that an array element has not yet been initialized. Thus, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $av[0]&lt;/code&gt; would be true for the above Perl code, but false for the array generated by the XS code. In perl 5.20, storing &amp;amp;PL_sv_undef will create a read-only element, because the scalar &amp;amp;PL_sv_undef itself is stored, not a copy.</source>
          <target state="translated">К сожалению, это не так. В Perl 5.18 и ранее AV используют &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; в качестве маркера, указывающего, что элемент массива еще не инициализирован. Таким образом, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $av[0]&lt;/code&gt; будет истинным для указанного выше кода Perl, но ложным для массива, сгенерированного кодом XS. В Perl 5.20 сохранение &amp;amp; PL_sv_undef создаст элемент, доступный только для чтения, потому что сохраняется сам скаляр &amp;amp; PL_sv_undef, а не его копия.</target>
        </trans-unit>
        <trans-unit id="6aaca93722126b600c61100d9e3813a48d2917af" translate="yes" xml:space="preserve">
          <source>Unfortunately, this isn't true. In perl 5.18 and earlier, AVs use &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; as a marker for indicating that an array element has not yet been initialized. Thus, &lt;code&gt;exists $av[0]&lt;/code&gt; would be true for the above Perl code, but false for the array generated by the XS code. In perl 5.20, storing &amp;amp;PL_sv_undef will create a read-only element, because the scalar &amp;amp;PL_sv_undef itself is stored, not a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4484d276f38b1e070d2bbc67b4f47022917572dc" translate="yes" xml:space="preserve">
          <source>Unfortunately, this scheme does not work well with escape-based encodings such as ISO-2022-JP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9b09da1b70d953819b14bad175ad6e8c81c049" translate="yes" xml:space="preserve">
          <source>Unfortunately, while this &lt;code&gt;style&lt;/code&gt; variable is used to set defaults for all three directory hierarchies (core, vendor, and site), there is no guarantee that the same style is actually appropriate for all those directories. For example, $prefix might be</source>
          <target state="translated">К сожалению, хотя эта переменная &lt;code&gt;style&lt;/code&gt; используется для установки значений по умолчанию для всех трех иерархий каталогов (основная, поставщик и сайт), нет никакой гарантии, что один и тот же стиль действительно подходит для всех этих каталогов. Например, префикс $ может быть</target>
        </trans-unit>
        <trans-unit id="87c5d4faa14910842f5557a05819e468661f127e" translate="yes" xml:space="preserve">
          <source>Unfortunately, while this is true, it's still broken. All the references in @AoA refer to the</source>
          <target state="translated">К сожалению,хотя это правда,она все еще сломана.Все ссылки в @AoA относятся к</target>
        </trans-unit>
        <trans-unit id="b3033d12e8c5e48f79875dd4cf162f90c243f353" translate="yes" xml:space="preserve">
          <source>Unfortunately, you may encounter Perl modules that are not</source>
          <target state="translated">К сожалению,вы можете столкнуться с модулями Perl,которые не являются</target>
        </trans-unit>
        <trans-unit id="76435dad798e21eb71def4f2d3a46ed9708e4adf" translate="yes" xml:space="preserve">
          <source>Unget a line of text from the server.</source>
          <target state="translated">Отключите строку текста с сервера.</target>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="eb802e96fd38e5e550d19f898a4fa941c45d6b21" translate="yes" xml:space="preserve">
          <source>Unicode 7.0 changed the wording so that they are &quot;&lt;b&gt;not recommended&lt;/b&gt; for use in open interchange of Unicode text data&quot;. The 7.0 Standard goes on to say:</source>
          <target state="translated">Unicode 7.0 изменил формулировки, так что они &amp;laquo; &lt;b&gt;не рекомендуются&lt;/b&gt; для использования при открытом обмене текстовыми данными Unicode&amp;raquo;. Стандарт 7.0 далее говорит:</target>
        </trans-unit>
        <trans-unit id="8306b01ff9c220d1ce9274f85cf12d457904d299" translate="yes" xml:space="preserve">
          <source>Unicode Character Properties</source>
          <target state="translated">Свойства символов Юникода</target>
        </trans-unit>
        <trans-unit id="2a76af7c10ae9a7945dc677634ff7f287d2f0d66" translate="yes" xml:space="preserve">
          <source>Unicode Collation Algorithm</source>
          <target state="translated">Алгоритм сопоставления Unicode</target>
        </trans-unit>
        <trans-unit id="c80690d5b1494bcf7f26319a35f4cf6977eedc42" translate="yes" xml:space="preserve">
          <source>Unicode Collation Algorithm - UTS #10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8a7bf1ba1b9e4c2b07e9ad90fbd26463e5d980" translate="yes" xml:space="preserve">
          <source>Unicode Consortium</source>
          <target state="translated">Консорциум Юникод</target>
        </trans-unit>
        <trans-unit id="0eb610a39db0d61541e877f8f7d93f1d2cd4e414" translate="yes" xml:space="preserve">
          <source>Unicode Consortium &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3570b2b05ae0a63f4914d2244d9f883b9ba33c3c" translate="yes" xml:space="preserve">
          <source>Unicode Consortium &lt;a href=&quot;https://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56cce9c1325a6619b09abb29a03b2934dad13be" translate="yes" xml:space="preserve">
          <source>Unicode Encodings</source>
          <target state="translated">Юникод Кодировки</target>
        </trans-unit>
        <trans-unit id="20d826b4f354ace01634ff9215d461c1d2de2da2" translate="yes" xml:space="preserve">
          <source>Unicode FAQ</source>
          <target state="translated">Юникод FAQ</target>
        </trans-unit>
        <trans-unit id="be2c3b070e201b30c780f442801bee53720d3f02" translate="yes" xml:space="preserve">
          <source>Unicode Glossary</source>
          <target state="translated">Юникод Глоссарий</target>
        </trans-unit>
        <trans-unit id="c37be50216d5f3d38f1ea9b4becfe8758aaff3f3" translate="yes" xml:space="preserve">
          <source>Unicode I/O</source>
          <target state="translated">Юникодный ввод/вывод</target>
        </trans-unit>
        <trans-unit id="0b15b2a3ee7f250e6d79317da505977b8ac153a4" translate="yes" xml:space="preserve">
          <source>Unicode Locale Data Markup Language (LDML) - UTS #35</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f977034e8571e3a210188dcc1d8385457a8e9f6" translate="yes" xml:space="preserve">
          <source>Unicode Normalization Forms</source>
          <target state="translated">Формы нормализации Юникода</target>
        </trans-unit>
        <trans-unit id="775e22294d31686679c1488c3a4e009b588fb93a" translate="yes" xml:space="preserve">
          <source>Unicode Normalization Forms - UAX #15</source>
          <target state="translated">Формы нормализации Юникода-UAX #15</target>
        </trans-unit>
        <trans-unit id="41086ae1277eac703b49ed9c64da7c4e1e028776" translate="yes" xml:space="preserve">
          <source>Unicode Properties</source>
          <target state="translated">Свойства Юникода</target>
        </trans-unit>
        <trans-unit id="ecfb52e522a545f9d54db78a273755a7cf69910d" translate="yes" xml:space="preserve">
          <source>Unicode Recommended Reading List</source>
          <target state="translated">Рекомендуемый список для чтения в Юникоде</target>
        </trans-unit>
        <trans-unit id="3dc43797a086d2e60b97e26ddbcd0e763ba2be44" translate="yes" xml:space="preserve">
          <source>Unicode Regular Expression Support Level</source>
          <target state="translated">Уровень поддержки регулярных выражений Юникода</target>
        </trans-unit>
        <trans-unit id="47be4025952fbf3894ef86d325a9d331d9d77d10" translate="yes" xml:space="preserve">
          <source>Unicode Support</source>
          <target state="translated">Поддержка Юникода</target>
        </trans-unit>
        <trans-unit id="5477f70b1eea785630b35cd84e386522cded5715" translate="yes" xml:space="preserve">
          <source>Unicode Transformation Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3c1f4d1dbf76960cd965f0a9ee21a6e35c74bd" translate="yes" xml:space="preserve">
          <source>Unicode Useful Resources</source>
          <target state="translated">Полезные ресурсы Юникода</target>
        </trans-unit>
        <trans-unit id="0bd38e8f5dc5fab318029c6a0f6bf740c02237f9" translate="yes" xml:space="preserve">
          <source>Unicode aims to &lt;b&gt;UNI&lt;/b&gt;-fy the en-&lt;b&gt;CODE&lt;/b&gt;-ings of all the world's character sets into a single Standard. For quite a few of the various coding standards that existed when Unicode was first created, converting from each to Unicode essentially meant adding a constant to each code point in the original standard, and converting back meant just subtracting that same constant. For ASCII and ISO-8859-1, the constant is 0. For ISO-8859-5, (Cyrillic) the constant is 864; for Hebrew (ISO-8859-8), it's 1488; Thai (ISO-8859-11), 3424; and so forth. This made it easy to do the conversions, and facilitated the adoption of Unicode.</source>
          <target state="translated">Unicode цели в &lt;b&gt;UNI&lt;/b&gt; -fy на встре- &lt;b&gt;CODE&lt;/b&gt; -ings всех наборов символов мира в единый стандарт. Для довольно многих из различных стандартов кодирования, существовавших при первом создании Unicode, преобразование каждого из них в Unicode по существу означало добавление константы к каждой кодовой точке в исходном стандарте, а обратное преобразование означало просто вычитание той же константы. Для ASCII и ISO-8859-1 константа равна 0. Для ISO-8859-5 (кириллица) константа равна 864; для иврита (ISO-8859-8) это 1488 год; Тайский (ISO-8859-11), 3424; и так далее. Это упростило преобразование и способствовало принятию Unicode.</target>
        </trans-unit>
        <trans-unit id="292b5cfbcdb907b6b9b2852bab43a1e41959e1df" translate="yes" xml:space="preserve">
          <source>Unicode also defines various</source>
          <target state="translated">Юникод также определяет различные</target>
        </trans-unit>
        <trans-unit id="bfb017bed191925e52b6029168924ebfe8c5d26c" translate="yes" xml:space="preserve">
          <source>Unicode and EBCDIC</source>
          <target state="translated">Юникод и EBCDIC</target>
        </trans-unit>
        <trans-unit id="e27520c25eb75e7d79e8f990eeb1be4ae1df41df" translate="yes" xml:space="preserve">
          <source>Unicode and ISO/IEC 10646 are coordinated standards that unify almost all other modern character set standards, covering more than 80 writing systems and hundreds of languages, including all commercially-important modern languages. All characters in the largest Chinese, Japanese, and Korean dictionaries are also encoded. The standards will eventually cover almost all characters in more than 250 writing systems and thousands of languages. Unicode 1.0 was released in October 1991, and 6.0 in October 2010.</source>
          <target state="translated">Unicode и ISO/IEC 10646-это согласованные стандарты,которые объединяют почти все другие современные стандарты набора символов,охватывающие более 80 систем письма и сотни языков,включая все коммерчески значимые современные языки.Все иероглифы в крупнейших китайском,японском и корейском словарях также закодированы.Стандарты в конечном итоге охватят почти все иероглифы в более чем 250 системах письменности и тысячах языков.Юникод 1.0 был выпущен в октябре 1991 года,а 6.0-в октябре 2010 года.</target>
        </trans-unit>
        <trans-unit id="35759c0ae04781f6ce2a8261ef308a0d62267332" translate="yes" xml:space="preserve">
          <source>Unicode and Localisation Support</source>
          <target state="translated">Поддержка Юникода и локализации</target>
        </trans-unit>
        <trans-unit id="c79347889e0d28fc8f7e3b48dc5c985da6b9c2b3" translate="yes" xml:space="preserve">
          <source>Unicode and Multilingual Support in HTML, Fonts, Web Browsers and Other Applications</source>
          <target state="translated">Юникод и многоязычная поддержка в HTML,шрифтах,веб-браузерах и других приложениях</target>
        </trans-unit>
        <trans-unit id="aa0a00bb85a8ade7272b8fa2d081ab3abd746b2c" translate="yes" xml:space="preserve">
          <source>Unicode and UTF</source>
          <target state="translated">Юникод и UTF</target>
        </trans-unit>
        <trans-unit id="8e9632880dc5b73eee711bbb8acae51558160af7" translate="yes" xml:space="preserve">
          <source>Unicode and UTF-8</source>
          <target state="translated">Юникод и UTF-8</target>
        </trans-unit>
        <trans-unit id="814213da4f2b17caa9167081f902458536e3ac5c" translate="yes" xml:space="preserve">
          <source>Unicode casing is very different from ASCII casing.</source>
          <target state="translated">Корпус Unicode очень отличается от корпуса ASCII.</target>
        </trans-unit>
        <trans-unit id="3db087027c1f3fb2dafc91bf1aec8e28ed66555f" translate="yes" xml:space="preserve">
          <source>Unicode character database</source>
          <target state="translated">База данных символов Юникода</target>
        </trans-unit>
        <trans-unit id="90ce74ac0f978040e744ea5f9ee3a9fc0fdd5b56" translate="yes" xml:space="preserve">
          <source>Unicode character properties that are NOT accepted by Perl</source>
          <target state="translated">Свойства символов Юникода,которые НЕ принимаются Perl</target>
        </trans-unit>
        <trans-unit id="131ad96e9210c062a5a91bbff68adb3c52f574b9" translate="yes" xml:space="preserve">
          <source>Unicode characters are assigned to</source>
          <target state="translated">Символам Юникода присваиваются</target>
        </trans-unit>
        <trans-unit id="9cd8bdcde375ab8cc6d64998c61f22e2b1db366b" translate="yes" xml:space="preserve">
          <source>Unicode characters have a Unicode name and numeric code point (ordinal) value. Use the &lt;code&gt;\N{}&lt;/code&gt; construct to specify a character by either of these values. Certain sequences of characters also have names.</source>
          <target state="translated">У символов Юникода есть имя Юникода и числовое значение (порядковый номер). Используйте конструкцию &lt;code&gt;\N{}&lt;/code&gt; чтобы указать символ любым из этих значений. У некоторых последовательностей символов также есть имена.</target>
        </trans-unit>
        <trans-unit id="210080ef48f936087dda80492d9856fe5ec4b9bc" translate="yes" xml:space="preserve">
          <source>Unicode classes</source>
          <target state="translated">Классы Юникода</target>
        </trans-unit>
        <trans-unit id="0f01459324a40b9e6a3a0e387cbfebfba5b6c62c" translate="yes" xml:space="preserve">
          <source>Unicode code points versus EBCDIC code points</source>
          <target state="translated">точки кода Юникод против точек кода EBCDIC</target>
        </trans-unit>
        <trans-unit id="7625e9ef1dd87171eb4d5354c03dd9be33744a1d" translate="yes" xml:space="preserve">
          <source>Unicode codepoint</source>
          <target state="translated">кодовая точка Юникода</target>
        </trans-unit>
        <trans-unit id="329b02599470f15ed9e34472928160323f9fb081" translate="yes" xml:space="preserve">
          <source>Unicode coding schemes other than native utf8 are supported by Encode::Unicode, which will be autoloaded on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106885fd8f00b6d1d3909f50579c6a1e81f50c34" translate="yes" xml:space="preserve">
          <source>Unicode concept which most often is equal to uppercase, but for certain characters like the German &quot;sharp s&quot; there is a difference.</source>
          <target state="translated">Понятие Юникод,которое чаще всего равно заглавным,но для некоторых символов,таких как немецкий &quot;sharp s&quot;,есть разница.</target>
        </trans-unit>
        <trans-unit id="be2f011fe43db39f9182b02fbc6580c3cfe62024" translate="yes" xml:space="preserve">
          <source>Unicode considers many code points to be illegal, or to be avoided. Perl generally accepts them, once they have passed through any input filters that may try to exclude them. These have been discussed above (see &quot;Surrogates&quot; under UTF-16 in &lt;a href=&quot;#Unicode-Encodings&quot;&gt;&quot;Unicode Encodings&quot;&lt;/a&gt;, &lt;a href=&quot;#Noncharacter-code-points&quot;&gt;&quot;Noncharacter code points&quot;&lt;/a&gt;, and &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;Beyond Unicode code points&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49075f8dbc705f2f67ea7272b64074e286787f2" translate="yes" xml:space="preserve">
          <source>Unicode defines a fourth boundary type, accessible through the &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt; module.</source>
          <target state="translated">Unicode определяет четвертый тип границы, доступный через модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode :: LineBreak&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07aa50c4f0010de0db76a15f32c4e153b24a7275" translate="yes" xml:space="preserve">
          <source>Unicode defines all its properties in the compound form, so all single-form properties are Perl extensions. Most of these are just synonyms for the Unicode ones, but some are genuine extensions, including several that are in the compound form. And quite a few of these are actually recommended by Unicode (in &lt;a href=&quot;http://www.unicode.org/reports/tr18&quot;&gt;http://www.unicode.org/reports/tr18&lt;/a&gt;).</source>
          <target state="translated">Unicode определяет все свои свойства в составной форме, поэтому все свойства единой формы являются расширениями Perl. Большинство из них - просто синонимы для Unicode, но некоторые из них являются настоящими расширениями, в том числе некоторые, которые находятся в составной форме. И довольно много из них действительно рекомендовано Unicode ( &lt;a href=&quot;http://www.unicode.org/reports/tr18&quot;&gt;http://www.unicode.org/reports/tr18&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="83740583eabf50f236d63ef1d8d25274281fb0cf" translate="yes" xml:space="preserve">
          <source>Unicode defines all its properties in the compound form, so all single-form properties are Perl extensions. Most of these are just synonyms for the Unicode ones, but some are genuine extensions, including several that are in the compound form. And quite a few of these are actually recommended by Unicode (in &lt;a href=&quot;https://www.unicode.org/reports/tr18&quot;&gt;https://www.unicode.org/reports/tr18&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8557c4367cf0c9f30d95a470ee521928d669fb7c" translate="yes" xml:space="preserve">
          <source>Unicode defines characters like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; or &lt;code&gt;GREEK
SMALL LETTER ALPHA&lt;/code&gt; and unique numbers for the characters, in this case 0x0041 and 0x03B1, respectively. These unique numbers are called</source>
          <target state="translated">Unicode определяет такие символы, как &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; или ГРЕЧЕСКАЯ СТРОЧНАЯ &lt;code&gt;GREEK SMALL LETTER ALPHA&lt;/code&gt; и уникальные числа для символов, в данном случае 0x0041 и 0x03B1 соответственно. Эти уникальные номера называются</target>
        </trans-unit>
        <trans-unit id="acaff2c7ef0e4ff533eb55c7b82bb8cb537cf6b5" translate="yes" xml:space="preserve">
          <source>Unicode does define several other decimal--and numeric--characters besides the familiar 0 to 9, such as the Arabic and Indic digits. Perl does not support string-to-number conversion for digits other than ASCII &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; (and ASCII &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;f&lt;/code&gt; for hexadecimal). To get safe conversions from any Unicode string, use &lt;a href=&quot;Unicode::UCD#num%28%29&quot;&gt;&quot;num()&quot; in Unicode::UCD&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66287c5bc6e75d359bae32c20cfc35103e105bf3" translate="yes" xml:space="preserve">
          <source>Unicode does define several other decimal--and numeric--characters besides the familiar 0 to 9, such as the Arabic and Indic digits. Perl does not support string-to-number conversion for digits other than ASCII &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; (and ASCII &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;f&lt;/code&gt; for hexadecimal). To get safe conversions from any Unicode string, use &lt;a href=&quot;unicode/ucd#num()&quot;&gt;num() in Unicode::UCD&lt;/a&gt;.</source>
          <target state="translated">Unicode определяет несколько других десятичных и числовых символов, помимо знакомых от 0 до 9, таких как арабские и индийские цифры. Perl не поддерживает преобразование строки в число для цифр, отличных от ASCII от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;9&lt;/code&gt; (и ASCII от &lt;code&gt;a&lt;/code&gt; до &lt;code&gt;f&lt;/code&gt; для шестнадцатеричных). Чтобы получить безопасные преобразования из любой строки Unicode, используйте &lt;a href=&quot;unicode/ucd#num()&quot;&gt;num () в Unicode :: UCD&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0b4309884526bd11fe1ab30cc9fc6ed43648809" translate="yes" xml:space="preserve">
          <source>Unicode form that is useful when comparing strings regardless of case, as certain characters have complex one-to-many case mappings. Primarily a variant of lowercase.</source>
          <target state="translated">Юникодовая форма,которая полезна при сравнении строк вне зависимости от регистра,так как некоторые символы имеют сложное отображение от одного до нескольких регистров.В основном это вариант строчного кода.</target>
        </trans-unit>
        <trans-unit id="71079ed61722f43474765527d68998144c7665d4" translate="yes" xml:space="preserve">
          <source>Unicode furnishes the &lt;code&gt;Age&lt;/code&gt; property from which this is derived. The problem with Age is that a strict interpretation of it (which Perl takes) has it matching the precise release a code point's meaning is introduced in. Thus &lt;code&gt;U+0041&lt;/code&gt; would match only 1.1; and &lt;code&gt;U+1EFF&lt;/code&gt; only 5.1. This is not usually what you want.</source>
          <target state="translated">Unicode предоставляет свойство &lt;code&gt;Age&lt;/code&gt; , из которого оно получено. Проблема с Age заключается в том, что при строгой его интерпретации (которую принимает Perl) он соответствует точному выпуску, в котором вводится значение кодовой точки. Таким образом, &lt;code&gt;U+0041&lt;/code&gt; будет соответствовать только 1.1; и только &lt;code&gt;U+1EFF&lt;/code&gt; 5.1. Обычно это не то, что вам нужно.</target>
        </trans-unit>
        <trans-unit id="fd3ab6b6f70f7431b1416e0f9107c1af48c38649" translate="yes" xml:space="preserve">
          <source>Unicode has some property-value pairs that currently don't match anything. This happens generally either because they are obsolete, or they exist for symmetry with other forms, but no language has yet been encoded that uses them. In this version of Unicode, the following match zero code points:</source>
          <target state="translated">У Юникода есть несколько пар свойств,которые на данный момент ни с чем не совпадают.Обычно это происходит либо потому,что они устарели,либо потому,что они существуют для симметрии с другими формами,но ни один язык ещё не закодирован,который их использует.В этой версии Юникода следующие совпадают с нулевыми точками кода:</target>
        </trans-unit>
        <trans-unit id="598e8ae9c96e08e40d6e1a738b55c351268bc51b" translate="yes" xml:space="preserve">
          <source>Unicode has three pseudo scripts that are handled specially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c49c9d36b230f185c7169c7475e8856ddbd520" translate="yes" xml:space="preserve">
          <source>Unicode in Perl on EBCDIC</source>
          <target state="translated">Юникод в Perl на EBCDIC</target>
        </trans-unit>
        <trans-unit id="5a2ff10d38459692f18fa8f0d5e12e0027770ead" translate="yes" xml:space="preserve">
          <source>Unicode is a character set standard which plans to codify all of the writing systems of the world, plus many other symbols.</source>
          <target state="translated">Юникод-это стандарт набора символов,который планирует кодифицировать все системы письма мира,а также многие другие символы.</target>
        </trans-unit>
        <trans-unit id="3bb1c5615f2383d427b4613073ef1ec435b5138c" translate="yes" xml:space="preserve">
          <source>Unicode is a character set that can represent most characters in most of the world's languages, providing room for over one million different characters. Unicode 3.1 specifies 94,140 characters: The Basic Latin characters are assigned to the numbers 0 - 127. The Latin-1 Supplement with characters that are used in several European languages is in the next range, up to 255. After some more Latin extensions we find the character sets from languages using non-Roman alphabets, interspersed with a variety of symbol sets such as currency symbols, Zapf Dingbats or Braille. (You might want to visit &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt; for a look at some of them - my personal favourites are Telugu and Kannada.)</source>
          <target state="translated">Юникод - это набор символов, который может представлять большинство символов на большинстве языков мира, обеспечивая место для более одного миллиона различных символов. Unicode 3.1 определяет 94 140 символов: базовые латинские символы присваиваются числам от 0 до 127. Дополнение Latin-1 с символами, которые используются в нескольких европейских языках, находится в следующем диапазоне, до 255. После некоторых дополнительных латинских расширений мы находим наборы символов из языков, использующих нелатинские алфавиты, с вкраплениями различных наборов символов, таких как символы валюты, дингбаты Zapf или шрифт Брайля. (Вы можете посетить &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/,&lt;/a&gt; чтобы ознакомиться с некоторыми из них - мои личные фавориты - телугу и каннада.)</target>
        </trans-unit>
        <trans-unit id="918d612f1c2574dce41b14dc2be8c0387758201b" translate="yes" xml:space="preserve">
          <source>Unicode is a character set that can represent most characters in most of the world's languages, providing room for over one million different characters. Unicode 3.1 specifies 94,140 characters: The Basic Latin characters are assigned to the numbers 0 - 127. The Latin-1 Supplement with characters that are used in several European languages is in the next range, up to 255. After some more Latin extensions we find the character sets from languages using non-Roman alphabets, interspersed with a variety of symbol sets such as currency symbols, Zapf Dingbats or Braille. (You might want to visit &lt;a href=&quot;https://www.unicode.org/&quot;&gt;https://www.unicode.org/&lt;/a&gt; for a look at some of them - my personal favourites are Telugu and Kannada.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4b52a0e0d40f8cd4680e731fa8661db40b7bfb" translate="yes" xml:space="preserve">
          <source>Unicode is a comprehensive standard. It specifies many things outside the scope of Perl, such as how to display sequences of characters. For a full discussion of all aspects of Unicode, see &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;.</source>
          <target state="translated">Юникод - это всеобъемлющий стандарт. Он определяет многие вещи, выходящие за рамки Perl, например, как отображать последовательности символов. Для полного обсуждения всех аспектов Unicode см. &lt;a href=&quot;http://www.unicode.org&quot;&gt;Http://www.unicode.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0004a5b6be77b386fdac7a26a14cd8154c46e916" translate="yes" xml:space="preserve">
          <source>Unicode is a comprehensive standard. It specifies many things outside the scope of Perl, such as how to display sequences of characters. For a full discussion of all aspects of Unicode, see &lt;a href=&quot;https://www.unicode.org&quot;&gt;https://www.unicode.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b43e74b6aa7b2acf2d7d34cb97f083e42a3eb18" translate="yes" xml:space="preserve">
          <source>Unicode is a new and complex technology and one may easily overlook certain security pitfalls. See &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; for an overview and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details, and &lt;a href=&quot;perlunicode#Security-Implications-of-Unicode&quot;&gt;&quot;Security Implications of Unicode&quot; in perlunicode&lt;/a&gt; for security implications in particular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d8bac67762b71e3e301bd389dd5bf647e3a7f7" translate="yes" xml:space="preserve">
          <source>Unicode is a new and complex technology and one may easily overlook certain security pitfalls. See &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; for an overview and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details, and &lt;a href=&quot;perlunicode#Security-Implications-of-Unicode&quot;&gt;Security Implications of Unicode in perlunicode&lt;/a&gt; for security implications in particular.</source>
          <target state="translated">Unicode - это новая и сложная технология, и можно легко упустить из виду некоторые подводные камни. См. &lt;a href=&quot;perluniintro&quot;&gt;Perluniintro&lt;/a&gt; для обзора и &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; для подробностей, а также &lt;a href=&quot;perlunicode#Security-Implications-of-Unicode&quot;&gt;Последствия безопасности Unicode в perlunicode&lt;/a&gt; для безопасности, в частности.</target>
        </trans-unit>
        <trans-unit id="2819bd58737a8580070f8ba307d9387529fe1cef" translate="yes" xml:space="preserve">
          <source>Unicode is encoded using several competing encodings, of which UTF-8 is the most used. In a Unicode encoding, multiple subsequent bytes can be used to store a single code point, or simply: character.</source>
          <target state="translated">Юникод кодируется с использованием нескольких конкурирующих кодировок,из которых наиболее часто используется UTF-8.В кодировке Юникода несколько последующих байтов могут быть использованы для хранения одной точки кода,или просто:символа.</target>
        </trans-unit>
        <trans-unit id="eebcf5b59ea874094c8b9d89a4f67a602ded5273" translate="yes" xml:space="preserve">
          <source>Unicode is stored in &lt;code&gt;$oswBuffer&lt;/code&gt;. &lt;code&gt;$lwBufSize&lt;/code&gt; and &lt;code&gt;$olwOutLength&lt;/code&gt; are measured as number of &lt;code&gt;WCHAR&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a66fde7942a6271294a3a5979cbe3017c3d5acd" translate="yes" xml:space="preserve">
          <source>Unicode is supported on EBCDIC platforms. See &lt;a href=&quot;perlebcdic&quot;&gt;perlebcdic&lt;/a&gt;.</source>
          <target state="translated">Юникод поддерживается на платформах EBCDIC. См. &lt;a href=&quot;perlebcdic&quot;&gt;Perlebcdic&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9649076a02c41263127b2e79657012b62bed018f" translate="yes" xml:space="preserve">
          <source>Unicode non-character U+%X is not recommended for open interchange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4276af257ec826541933ef5d517bc7bb403fdca7" translate="yes" xml:space="preserve">
          <source>Unicode only allows code points up to 0x10FFFF, but Perl allows much larger ones. Up till Perl 5.28, it was allowed to use code points exceeding the maximum value of an integer (&lt;code&gt;IV_MAX&lt;/code&gt;). However, that did break the perl interpreter in some constructs, including causing it to hang in a few cases. The known problem areas were in &lt;code&gt;tr///&lt;/code&gt;, regular expression pattern matching using quantifiers, as quote delimiters in &lt;code&gt;q&lt;i&gt;X&lt;/i&gt;...&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; (where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989d0062ad097f9dec3fa95782856724eb6165aa" translate="yes" xml:space="preserve">
          <source>Unicode promises that the set of code points that have these two properties will never change, so something that is not quoted in v5.16 will never need to be quoted in any future Perl release. (Not all the code points that match Pattern_Syntax have actually had characters assigned to them; so there is room to grow, but they are quoted whether assigned or not. Perl, of course, would never use an unassigned code point as an actual metacharacter.)</source>
          <target state="translated">Юникод обещает,что набор точек кода,которые имеют эти два свойства,никогда не изменится,поэтому то,что не цитируется в версии v5.16,никогда не нужно будет цитировать в любом будущем релизе Perl.(Не все точки кода,которые соответствуют синтаксису Pattern_Syntax,на самом деле имеют назначенные им символы;так что есть место для роста,но они цитируются независимо от того,назначены они или нет.Perl,конечно,никогда бы не использовал неприсвоенную кодовую точку в качестве фактического метахарафа).</target>
        </trans-unit>
        <trans-unit id="fb2ca4e28ea7e22cfa06c89ba6c3b93dca994a19" translate="yes" xml:space="preserve">
          <source>Unicode properties are defined (surprise!) only on Unicode code points. Starting in v5.20, when matching against &lt;code&gt;\p&lt;/code&gt; and &lt;code&gt;\P&lt;/code&gt; , Perl treats non-Unicode code points (those above the legal Unicode maximum of 0x10FFFF) as if they were typical unassigned Unicode code points.</source>
          <target state="translated">Свойства Unicode определены (сюрприз!) Только в кодовых точках Unicode. Начиная с v5.20, при сопоставлении с &lt;code&gt;\p&lt;/code&gt; и &lt;code&gt;\P&lt;/code&gt; Perl обрабатывает кодовые точки, отличные от Unicode (те, которые превышают допустимый максимум Unicode, равный 0x10FFFF), как если бы они были типичными неназначенными кодовыми точками Unicode.</target>
        </trans-unit>
        <trans-unit id="a1b191780dd618f1a1adb03d6a73e2206a215bac" translate="yes" xml:space="preserve">
          <source>Unicode properties are defined (surprise!) only on Unicode code points. Starting in v5.20, when matching against &lt;code&gt;\p&lt;/code&gt; and &lt;code&gt;\P&lt;/code&gt;, Perl treats non-Unicode code points (those above the legal Unicode maximum of 0x10FFFF) as if they were typical unassigned Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4421ab9f1aa61dc9cbda1e9f59175c1a3635d1e0" translate="yes" xml:space="preserve">
          <source>Unicode property wildcard not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139a9bb1fddefbaa23b5411336f2d45c5af1add3" translate="yes" xml:space="preserve">
          <source>Unicode publishes the names of blocks in two different styles, though the two are equivalent under Unicode's loose matching rules.</source>
          <target state="translated">Юникод публикует названия блоков в двух различных стилях,хотя эти два стиля эквивалентны правилам свободного совпадения Юникода.</target>
        </trans-unit>
        <trans-unit id="38ecc57a7a45e8fa0530ba908225186656979efa" translate="yes" xml:space="preserve">
          <source>Unicode rules are used for the case change.</source>
          <target state="translated">Для изменения регистра используются правила Юникода.</target>
        </trans-unit>
        <trans-unit id="1b41da839119c4860ed2bab536f19149822ad0f7" translate="yes" xml:space="preserve">
          <source>Unicode string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63eb0aa495029030f8880e8159d4eda857dd8ed" translate="yes" xml:space="preserve">
          <source>Unicode string properties are not implemented in (?[...]) in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7088ba3066aa65d6bcc96771fbb92a42fd96dcd6" translate="yes" xml:space="preserve">
          <source>Unicode support is an extensive requirement. While Perl does not implement the Unicode standard or the accompanying technical reports from cover to cover, Perl does support many Unicode features.</source>
          <target state="translated">Поддержка Юникода является обширным требованием.Несмотря на то,что Perl не реализует стандарт Юникода и сопровождающие его технические отчеты от корки до корки,Perl поддерживает многие функции Юникода.</target>
        </trans-unit>
        <trans-unit id="92c5fb67050f7cc6a07c62ea0f43698241d0a5b2" translate="yes" xml:space="preserve">
          <source>Unicode surrogate U+%X is illegal in UTF-8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b243e5f3e426dd36737b42e29d2ec9970a7c1a" translate="yes" xml:space="preserve">
          <source>Unicode, of course, assigns each of those code points a particular meaning (along with ones above 255). To preserve backward compatibility, Perl only uses the Unicode meanings when there is some indication that Unicode is what is intended; otherwise the non-ASCII code points remain treated as if they are unassigned.</source>
          <target state="translated">Юникод,конечно,присваивает каждому из этих кодовых точек определенное значение (наряду с теми,что выше 255).Чтобы сохранить обратную совместимость,Perl использует значения Юникода только в том случае,если есть какой-то признак того,что Юникод-это то,что предназначено;в противном случае,точки,не относящиеся к коду ASCII,остаются неприсвоенными.</target>
        </trans-unit>
        <trans-unit id="21276899f4cb4b0159879360c7526c4fe6c28316" translate="yes" xml:space="preserve">
          <source>Unicode/Collate</source>
          <target state="translated">Unicode/Collate</target>
        </trans-unit>
        <trans-unit id="37148638183749a1c0b03d85014634d4e43c64c4" translate="yes" xml:space="preserve">
          <source>Unicode/Collate/Foo.txt</source>
          <target state="translated">Unicode/Collate/Foo.txt</target>
        </trans-unit>
        <trans-unit id="f77e952a14d870cb3ae7b18f391e8c5f3d325575" translate="yes" xml:space="preserve">
          <source>Unicode::Collate</source>
          <target state="translated">Unicode::Collate</target>
        </trans-unit>
        <trans-unit id="3ff519c896603d01c9e76e4f19191f11d112327a" translate="yes" xml:space="preserve">
          <source>Unicode::Collate - Unicode Collation Algorithm</source>
          <target state="translated">Юникод::Сбор-Алгоритм суммирования Юникода</target>
        </trans-unit>
        <trans-unit id="fdf0d75274a879104b0f1f8bc64ee18ff02c5b30" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Big5</source>
          <target state="translated">Unicode::Collate::CJK::Big5</target>
        </trans-unit>
        <trans-unit id="1d6f6aa49ee6fad5eca6f35948b7e1bb0ab65190" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Big5 - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df783cdcff877161e1582e96c9fee058c8ac391" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::GB2312</source>
          <target state="translated">Unicode::Collate::CJK::GB2312</target>
        </trans-unit>
        <trans-unit id="69f6a1af4b9d7847bba5939a34148141b098e758" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::GB2312 - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a120ddf4b189ce790913ac61694171437406f3d" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::JISX0208</source>
          <target state="translated">Unicode::Collate::CJK::JISX0208</target>
        </trans-unit>
        <trans-unit id="52137c04544cacc73939ff1aee0c874c9d8fee08" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::JISX0208 - weighting JIS KANJI for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522cc80239808b956014178ec75f366b2cd491f0" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Korean</source>
          <target state="translated">Unicode::Collate::CJK::Korean</target>
        </trans-unit>
        <trans-unit id="0ac8b48e92e15bda76c4fcc728f48f96352b283f" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Korean - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c59af510fe79c64655e756d8461e5d375c2fd6" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Pinyin</source>
          <target state="translated">Unicode::Collate::CJK::Pinyin</target>
        </trans-unit>
        <trans-unit id="42747836215aeadf69f9c614290fca82880640f7" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Pinyin - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119a4f4d104376889a668529add1217787695cd3" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Stroke</source>
          <target state="translated">Unicode::Collate::CJK::Stroke</target>
        </trans-unit>
        <trans-unit id="f4760535296459fcd8959501743735349df70437" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Stroke - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935469afe79a7967133cbd5dc7a19cf8e8b7b28e" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Zhuyin</source>
          <target state="translated">Unicode::Collate::CJK::Zhuyin</target>
        </trans-unit>
        <trans-unit id="6bf20cf45b8ff713b3a40392be9d33f596934776" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::CJK::Zhuyin - weighting CJK Unified Ideographs for Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a163e245e5c3cf99dc2f5ab882390d17947426d" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::Locale</source>
          <target state="translated">Unicode::Collate::Locale</target>
        </trans-unit>
        <trans-unit id="001480054455d7b56706418239469b08b55ae695" translate="yes" xml:space="preserve">
          <source>Unicode::Collate::Locale - Linguistic tailoring for DUCET via Unicode::Collate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b47eca97eb095d02921b6571fab1a6dfdb0bc0" translate="yes" xml:space="preserve">
          <source>Unicode::Normalize</source>
          <target state="translated">Unicode::Normalize</target>
        </trans-unit>
        <trans-unit id="2e61bd2963848230702b059b3f915c279424ceeb" translate="yes" xml:space="preserve">
          <source>Unicode::Normalize - Unicode Normalization Forms</source>
          <target state="translated">Юникод::Нормализовать-Формы нормализации Юникода</target>
        </trans-unit>
        <trans-unit id="58e1ebb138145877210bc1aaddb6a695f639333f" translate="yes" xml:space="preserve">
          <source>Unicode::UCD</source>
          <target state="translated">Unicode::UCD</target>
        </trans-unit>
        <trans-unit id="878eb3fe5907f3dbbef3993a9d210c838c3bd0a6" translate="yes" xml:space="preserve">
          <source>Unicode::UCD - Unicode character database</source>
          <target state="translated">Юникод::UCD-база данных символов Юникода</target>
        </trans-unit>
        <trans-unit id="b0e10771734c32d2d9e8385457afb6c4bd746163" translate="yes" xml:space="preserve">
          <source>Unicode::UCD::UnicodeVersion</source>
          <target state="translated">Unicode::UCD::UnicodeVersion</target>
        </trans-unit>
        <trans-unit id="1147d047b52e119e77fa52566535f97fa00f2d54" translate="yes" xml:space="preserve">
          <source>Unified method to both set and get options in the &lt;code&gt;SOL_SOCKET&lt;/code&gt; level. If called with one argument then &lt;a href=&quot;IO::Socket#getsockopt&quot;&gt;&quot;getsockopt&quot; in IO::Socket&lt;/a&gt; is called, otherwise &lt;a href=&quot;IO::Socket#setsockopt&quot;&gt;&quot;setsockopt&quot; in IO::Socket&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c884d01b9429a9f7304a835d13687b8ca5872d3c" translate="yes" xml:space="preserve">
          <source>Unified method to both set and get options in the SOL_SOCKET level. If called with one argument then getsockopt is called, otherwise setsockopt is called.</source>
          <target state="translated">Унифицированный метод как для установки,так и для получения опций на уровне SOL_SOCKET.Если вызывается с одним аргументом,то вызывается getockopt,в противном случае вызывается setsockopt.</target>
        </trans-unit>
        <trans-unit id="238642af65f3add9fa062158d9a8954a0d8cc5fc" translate="yes" xml:space="preserve">
          <source>Unimplemented, but you can use &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; and the &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; module to achieve similar things.</source>
          <target state="translated">Не реализовано, но вы можете использовать &lt;a href=&quot;functions/die&quot;&gt;кубик&lt;/a&gt; и модуль &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; для достижения аналогичных целей.</target>
        </trans-unit>
        <trans-unit id="e6507a9fbb8009ec64673ec8cd6b7aa40be844fe" translate="yes" xml:space="preserve">
          <source>Unimplemented, but you can use &lt;a href=&quot;perlfunc#die&quot;&gt;&quot;die&quot; in perlfunc&lt;/a&gt; and the &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; module to achieve similar things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afec59d2cbb0d42662480e51b0e7e50584f1e2e5" translate="yes" xml:space="preserve">
          <source>Unimplemented, except on Windows, due to the vagaries of vendor locale names, returning &lt;code&gt;&quot;&quot;&lt;/code&gt; on non-Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e456a7d2242bb697d1c62ca28710a65f1b354e3" translate="yes" xml:space="preserve">
          <source>Unimplemented, so returns &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9769121f10f77079b27eb08e9ffa488cbcc37ed0" translate="yes" xml:space="preserve">
          <source>United Kingdom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768685ca582abd0af2fbb57ca37752aa98c9372b" translate="yes" xml:space="preserve">
          <source>United States</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6635fe323dcba6e8b8b2d5cdbb340361ce906ed" translate="yes" xml:space="preserve">
          <source>Universal Binary support</source>
          <target state="translated">Универсальная поддержка двоичных файлов</target>
        </trans-unit>
        <trans-unit id="a1a652fb80ef2238fc4c5e10930af87b4f3aac30" translate="yes" xml:space="preserve">
          <source>Universal Character Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="2fb49d2b5adcca8ced12a532099ac9adce5647b1" translate="yes" xml:space="preserve">
          <source>Unix Network Programming, 2nd Edition, Volume 1</source>
          <target state="translated">Сетевое программирование Unix,2-е издание,том 1.</target>
        </trans-unit>
        <trans-unit id="b4c5506923f63fcc0ec2a3603b475130b23382af" translate="yes" xml:space="preserve">
          <source>Unix Review</source>
          <target state="translated">Обзор Unix</target>
        </trans-unit>
        <trans-unit id="4b39a128140df62988dc25aafca006880dd71ad2" translate="yes" xml:space="preserve">
          <source>Unix has no need of special linker flags.</source>
          <target state="translated">Unix не нуждается в специальных флагах компоновщика.</target>
        </trans-unit>
        <trans-unit id="4547b2fe2a8711e2250c90726e47d0a32f9e7c0b" translate="yes" xml:space="preserve">
          <source>Unix style shell macros like &lt;code&gt;$(abcd)&lt;/code&gt; are passed through instead of being converted to &lt;code&gt;$^(abcd^)&lt;/code&gt; independent of the &lt;code&gt;DECC$EFS_CHARSET&lt;/code&gt; feature setting. Unix style shell macros should not use characters that are not in the ASCII character set, as the resulting specification may or may not be still in UTF8 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa3f11d873bf24fcae352a27226c0c2e88d087f" translate="yes" xml:space="preserve">
          <source>Unix's &lt;code&gt;#!&lt;/code&gt; technique can be simulated on other systems:</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; Unix ! Техника может быть смоделирована на других системах:</target>
        </trans-unit>
        <trans-unit id="7f87c004392cd89a556aff5f86328de12b9ca773" translate="yes" xml:space="preserve">
          <source>Unix-Domain TCP Clients and Servers</source>
          <target state="translated">Unix-доменные TCP клиенты и серверы</target>
        </trans-unit>
        <trans-unit id="4acfa258fe45e38658aa00a5dfda8b8abeddb8cc" translate="yes" xml:space="preserve">
          <source>Unix-domain sockets on OS/2 live in a pseudo-file-system &lt;code&gt;/sockets/...&lt;/code&gt; . To avoid a failure to create a socket with a name of a different form, &lt;code&gt;&quot;/socket/&quot;&lt;/code&gt; is prepended to the socket name (unless it starts with this already).</source>
          <target state="translated">Unix-сокеты на OS / 2 живут в псевдо-файловой системы &lt;code&gt;/sockets/...&lt;/code&gt; . Чтобы избежать сбоя при создании сокета с именем другой формы, к имени сокета добавляется &lt;code&gt;&quot;/socket/&quot;&lt;/code&gt; (если оно уже не начинается с этого).</target>
        </trans-unit>
        <trans-unit id="35779ed7c2718c03c2a679cc689368ba373e9248" translate="yes" xml:space="preserve">
          <source>Unix-domain sockets on OS/2 live in a pseudo-file-system &lt;code&gt;/sockets/...&lt;/code&gt;. To avoid a failure to create a socket with a name of a different form, &lt;code&gt;&quot;/socket/&quot;&lt;/code&gt; is prepended to the socket name (unless it starts with this already).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3c45c8b86738464ace2f8005c8fbdecfe76366" translate="yes" xml:space="preserve">
          <source>Unix.U</source>
          <target state="translated">Unix.U</target>
        </trans-unit>
        <trans-unit id="bc7819b34ff87570745fbe461e36a16f80e562ce" translate="yes" xml:space="preserve">
          <source>Unknown</source>
          <target state="translated">Unknown</target>
        </trans-unit>
        <trans-unit id="a8b5e7a7d509a7c62d93ee2bad1c35496336638f" translate="yes" xml:space="preserve">
          <source>Unknown &quot;re&quot; subpragma '%s' (known ones are: %s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6c175629d52f8caa8d90709840d842ec6a24a8" translate="yes" xml:space="preserve">
          <source>Unknown &amp;lt;unknown@example.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4260834064ed4da863200d4ab98727ee77cc0db4" translate="yes" xml:space="preserve">
          <source>Unknown '(*...)' construct '%s' in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516d733c8bf9db439f1f86408315d55784a8e43c" translate="yes" xml:space="preserve">
          <source>Unknown '=xxxx' commands, unknown 'X&amp;lt;...&amp;gt;' interior-sequences, and unterminated interior sequences.</source>
          <target state="translated">Неизвестные команды '= xxxx', неизвестные внутренние последовательности 'X &amp;lt;...&amp;gt;' и незавершенные внутренние последовательности.</target>
        </trans-unit>
        <trans-unit id="0c7f616921e8aa6ce31483dac2c125041fa7ff10" translate="yes" xml:space="preserve">
          <source>Unknown E content in E&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b452be528de2ca72fbdca17c8a6b9000bd72960e" translate="yes" xml:space="preserve">
          <source>Unknown PerlIO layer &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc9d502ba9bb87ff9a938ae6d50ef1785f93443" translate="yes" xml:space="preserve">
          <source>Unknown Unicode option letter '%c'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383a6c76e59091add963d05eca879c2155929c3" translate="yes" xml:space="preserve">
          <source>Unknown Unicode option value %d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b64d99361c84dd2b785abb8dd250103d6a822f" translate="yes" xml:space="preserve">
          <source>Unknown charname '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8c284e5307746cdeea5551e2520dce4836d73d" translate="yes" xml:space="preserve">
          <source>Unknown directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fd9aa24c9417e7332e6f25936ae2a6ec8f1524" translate="yes" xml:space="preserve">
          <source>Unknown error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebda19c79ae8fdc09d9f934173a9e0b1dda8ac2" translate="yes" xml:space="preserve">
          <source>Unknown locale category %d; can't set it to %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e9349b86ed14bdbc36e717e0e54a45178a5709" translate="yes" xml:space="preserve">
          <source>Unknown open() mode '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9ce623a0a054e7c503d1bead726383200a08d0" translate="yes" xml:space="preserve">
          <source>Unknown option: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94063b188637c4358408514f0dec4be5138069da" translate="yes" xml:space="preserve">
          <source>Unknown process %x sent message to prime_env_iter: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a27728149a20fa874d8e5d6ec5784571e435f85" translate="yes" xml:space="preserve">
          <source>Unknown regexp modifier &quot;/%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c5c163aa1fa71615dee0d3c90ca77bf54723d6" translate="yes" xml:space="preserve">
          <source>Unknown result token.</source>
          <target state="translated">Неизвестный жетон результата.</target>
        </trans-unit>
        <trans-unit id="5362b9dbff55eae528c95c41a9cdfba23a42b91e" translate="yes" xml:space="preserve">
          <source>Unknown switch condition (?(...)) in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc278b1f69a68c5fa1706993032fe0bce8d046fa" translate="yes" xml:space="preserve">
          <source>Unknown verb pattern '%s' in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa3d10b86eac319b820b63f583e0a0a896d21a3" translate="yes" xml:space="preserve">
          <source>Unknown warnings category '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4013e411624fa8892f8200feafb69475d2458d0b" translate="yes" xml:space="preserve">
          <source>Unknowns are &lt;code&gt;&quot;-&quot;&lt;/code&gt; . Unknowns can happen unfortunately quite easily: if the platform doesn't support retrieving the information; if the binary is missing the debug information; if the optimizer has transformed the code by for example inlining.</source>
          <target state="translated">Неизвестные - &lt;code&gt;&quot;-&quot;&lt;/code&gt; . К сожалению, неизвестность может произойти довольно легко: если платформа не поддерживает получение информации; если в двоичном файле отсутствует отладочная информация; если оптимизатор преобразовал код, например, встраивая.</target>
        </trans-unit>
        <trans-unit id="e246db88408875913f8b8fd552f45cc3814a8897" translate="yes" xml:space="preserve">
          <source>Unknowns are &lt;code&gt;&quot;-&quot;&lt;/code&gt;. Unknowns can happen unfortunately quite easily: if the platform doesn't support retrieving the information; if the binary is missing the debug information; if the optimizer has transformed the code by for example inlining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce906b20ea9a7a0bf0bcbae85c1c9421e3de60b2" translate="yes" xml:space="preserve">
          <source>Unless %hash has already been locked the key/value could be deleted regardless of this setting.</source>
          <target state="translated">Если %hash уже не был заблокирован,ключ/значение может быть удален вне зависимости от этой настройки.</target>
        </trans-unit>
        <trans-unit id="5c6af5673dc4ae00136df64bec88a6550bf388e5" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;${^UNICODE}&lt;/code&gt; (available starting in v5.8.2) exists and is non-zero, the PerlIO layers of &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; are set to &quot;&lt;code&gt;:encoding(&lt;i&gt;ENCNAME&lt;/i&gt;)&lt;/code&gt;&quot;. Therefore,</source>
          <target state="translated">Если &lt;code&gt;${^UNICODE}&lt;/code&gt; (доступно начиная с v5.8.2) не существует и не равно нулю, уровни PerlIO для &lt;code&gt;STDIN&lt;/code&gt; и &lt;code&gt;STDOUT&lt;/code&gt; устанавливаются в &quot; &lt;code&gt;:encoding(&lt;i&gt;ENCNAME&lt;/i&gt;)&lt;/code&gt; &quot;. Следовательно,</target>
        </trans-unit>
        <trans-unit id="d2c8c659e558ac6c6718a8a57a68dcfe5600f320" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-DPERL_MEM_LOG_NOIMPL&lt;/code&gt; (&lt;code&gt;-Accflags=-DPERL_MEM_LOG_NOIMPL&lt;/code&gt;) is also compiled, the logging functions read $ENV{PERL_MEM_LOG} to determine whether to log the event, and if so how:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a238cf9ea26a0e7ddfda497c5bf0d771bd8656" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-DPERL_MEM_LOG_NOIMPL&lt;/code&gt; is also compiled, the logging functions read $ENV{PERL_MEM_LOG} to determine whether to log the event, and if so how:</source>
          <target state="translated">Если &lt;code&gt;-DPERL_MEM_LOG_NOIMPL&lt;/code&gt; также не скомпилирован, функции ведения журнала читают $ ENV {PERL_MEM_LOG}, чтобы определить, регистрировать ли событие, и если да, то как:</target>
        </trans-unit>
        <trans-unit id="7183c27cf3fecde6bcc64c00a3a891d43f73c77b" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; is set to &lt;code&gt;T&lt;/code&gt; (and the kernel is after 2000/09/01), such DLLs are considered to be global. When loading a global DLL it is first looked in the table of already-loaded global DLLs. Because of this the fact that one executable loaded a DLL from &lt;code&gt;BEGINLIBPATH&lt;/code&gt; and &lt;code&gt;ENDLIBPATH&lt;/code&gt; , or</source>
          <target state="translated">Если для &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; не задано значение &lt;code&gt;T&lt;/code&gt; (а ядро ​​- после 2000/09/01), такие библиотеки DLL считаются глобальными. При загрузке глобальной DLL она сначала просматривается в таблице уже загруженных глобальных DLL. Из-за этого тот факт, что один исполняемый файл загрузил DLL из &lt;code&gt;BEGINLIBPATH&lt;/code&gt; и &lt;code&gt;ENDLIBPATH&lt;/code&gt; , или</target>
        </trans-unit>
        <trans-unit id="a9d2404af2307482983ff6743f035f7118e9d8f6" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; is set to &lt;code&gt;T&lt;/code&gt; (and the kernel is after 2000/09/01), such DLLs are considered to be global. When loading a global DLL it is first looked in the table of already-loaded global DLLs. Because of this the fact that one executable loaded a DLL from &lt;code&gt;BEGINLIBPATH&lt;/code&gt; and &lt;code&gt;ENDLIBPATH&lt;/code&gt;, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4244b98dff2bf774775c08e4df5afb2e645e4b77" translate="yes" xml:space="preserve">
          <source>Unless ASCII vs. EBCDIC issues are specifically being discussed, references to UTF-8 encoding in this document and elsewhere should be read as meaning UTF-EBCDIC on EBCDIC platforms. See &lt;a href=&quot;perlebcdic#Unicode-and-UTF&quot;&gt;&quot;Unicode and UTF&quot; in perlebcdic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025ed2d87cd53899da043f16934d54b56cb767cf" translate="yes" xml:space="preserve">
          <source>Unless ASCII vs. EBCDIC issues are specifically being discussed, references to UTF-8 encoding in this document and elsewhere should be read as meaning UTF-EBCDIC on EBCDIC platforms. See &lt;a href=&quot;perlebcdic#Unicode-and-UTF&quot;&gt;Unicode and UTF in perlebcdic&lt;/a&gt;.</source>
          <target state="translated">Если вопросы ASCII и EBCDIC не обсуждаются специально, ссылки на кодировку UTF-8 в этом документе и в других местах следует понимать как означающие UTF-EBCDIC на платформах EBCDIC. См. &lt;a href=&quot;perlebcdic#Unicode-and-UTF&quot;&gt;Unicode и UTF в perlebcdic&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="763e516abf0169c17797549989072db7b3b436d9" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, functions return 0 on success, or a negative value (usually &lt;code&gt;EOF&lt;/code&gt; which is usually -1) and set &lt;code&gt;errno&lt;/code&gt; on error.</source>
          <target state="translated">Если не указано иное, функции возвращают 0 в случае успеха или отрицательное значение (обычно &lt;code&gt;EOF&lt;/code&gt; , которое обычно равно -1) и устанавливают &lt;code&gt;errno&lt;/code&gt; в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="843ebacc41e4317d9c7bf3f947fad475a9e1f11b" translate="yes" xml:space="preserve">
          <source>Unless otherwise notes, all examples below require this standard preamble to work correctly, with the &lt;code&gt;#!&lt;/code&gt; adjusted to work on your system:</source>
          <target state="translated">Если не указано иное, все приведенные ниже примеры требуют, чтобы эта стандартная преамбула работала правильно, с символом &lt;code&gt;#!&lt;/code&gt; настроен для работы в вашей системе:</target>
        </trans-unit>
        <trans-unit id="a1410ee8e42e843fa403d9edd63361088b53c82a" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, version numbers &lt;b&gt;must&lt;/b&gt; appear in one of two formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519ecd12b4838877006c606ab377c9933076da06" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated all methods return either a</source>
          <target state="translated">Если не указано иначе,все методы возвращают</target>
        </trans-unit>
        <trans-unit id="58c869a304e00ffd24d619f7d44db8d57f44a80c" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated it works just like ExtUtils::MM_Unix</source>
          <target state="translated">Если не указано иначе,он работает так же,как ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="ae0b84fa2af86714bff9b9ce409d73281e7852b8" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated it works just like ExtUtils::MM_Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa9da45012bfbe0b5378d58f4fff0a9abfa58b5" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, it works just like ExtUtils::MM_Unix</source>
          <target state="translated">Если не указано иначе,он работает так же,как и ExtUtils::MM_Unix.</target>
        </trans-unit>
        <trans-unit id="495362fe83affb77b166fe352e049869ffdf5946" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, it works just like ExtUtils::MM_Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e400a7ab19dec964d9377da14546fab4feb3ec" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;anyinflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, дополнительные параметры для &lt;code&gt;anyinflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же , как те , которые используются с интерфейсом ОО , определенным в &lt;a href=&quot;#Constructor-Options&quot;&gt;конструкторе Параметры&lt;/a&gt; раздел ниже.</target>
        </trans-unit>
        <trans-unit id="47a707f463b0bb3f1b25444c520600dbd6696505" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;anyuncompress&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, дополнительные параметры для &lt;code&gt;anyuncompress&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же , как те , которые используются с интерфейсом ОО , определенным в &lt;a href=&quot;#Constructor-Options&quot;&gt;конструкторе Параметры&lt;/a&gt; раздел ниже.</target>
        </trans-unit>
        <trans-unit id="d669d839575081392547a5a9cafaedbd09bec28c" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;bunzip2&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;bunzip2&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="5cd0d3bee7135d518d8ccc595535d8b3eccde37f" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;bzip2&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;bzip2&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="2d2f8a94031befaa66720968f47bd4dde9da6fcf" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;deflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;deflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="f180e51799fa543d0272bd825b3d860097f806c2" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;gunzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;gunzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="43b54de84f56f9f511018d58087cdd33377321ec" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;gzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;gzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="d8c0791fbf600370c86e6ae040e4b2abd896e9ba" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;inflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;inflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="e65e4b1379d48c357409defc2e3a088bfcc64051" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;rawdeflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указаны ниже, дополнительные параметры для &lt;code&gt;rawdeflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же , как те , которые используются с интерфейсом ОО , определенным в &lt;a href=&quot;#Constructor-Options&quot;&gt;конструкторе Параметры&lt;/a&gt; раздел ниже.</target>
        </trans-unit>
        <trans-unit id="f9aa434ca385a7cef6abc358c51e5f3189796565" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;rawinflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указаны ниже, дополнительные параметры для &lt;code&gt;rawinflate&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же , как те , которые используются с интерфейсом ОО , определенным в &lt;a href=&quot;#Constructor-Options&quot;&gt;конструкторе Параметры&lt;/a&gt; раздел ниже.</target>
        </trans-unit>
        <trans-unit id="e2285dec1544503fb1e6e19eb0aec81e1f5a9726" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;unzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;unzip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="f45874d912d180929ebed6cffec516fc7cf2fb97" translate="yes" xml:space="preserve">
          <source>Unless specified below, the optional parameters for &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , are the same as those used with the OO interface defined in the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section below.</source>
          <target state="translated">Если не указано ниже, необязательные параметры для &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;OPTS&lt;/code&gt; , такие же, как те, которые используются с интерфейсом OO, определенным в разделе &amp;laquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;Параметры конструктора&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="871cfac0f7d812719fa8ee355ce0991623ac4e0b" translate="yes" xml:space="preserve">
          <source>Unless specified otherwise all method can be called as class methods, or as object methods. If called as class methods then the &quot;default&quot; object will be used, and if necessary created using the current processes %Config and @INC. See the 'default' option to new() for details.</source>
          <target state="translated">Если не указано иначе,все методы могут быть вызваны как методы класса или как объектные методы.При вызове в качестве методов класса будет использоваться объект &quot;по умолчанию&quot;,при необходимости созданный с помощью текущих процессов %Config и @INC.Подробности смотрите в опции new()'default'.</target>
        </trans-unit>
        <trans-unit id="360b129724fa7c1c8235f3513edf30406e818a7b" translate="yes" xml:space="preserve">
          <source>Unless the &lt;code&gt;/r&lt;/code&gt; option is used, the string specified with &lt;code&gt;=~&lt;/code&gt; must be a scalar variable, an array element, a hash element, or an assignment to one of those; in other words, an lvalue.</source>
          <target state="translated">Если не используется параметр &lt;code&gt;/r&lt;/code&gt; , строка, указанная с помощью &lt;code&gt;=~&lt;/code&gt; , должна быть скалярной переменной, элементом массива, хеш-элементом или присвоением одному из них; другими словами, lvalue.</target>
        </trans-unit>
        <trans-unit id="9ef73743f2ca77d91834c677a3b2a131dd0854b0" translate="yes" xml:space="preserve">
          <source>Unless the above additional feature is enabled, nothing about the backtrace functionality is visible, except for the Perl/XS level.</source>
          <target state="translated">Если не включена вышеописанная дополнительная функция,ничего о функциональности обратной связи не видно,за исключением уровня Perl/XS.</target>
        </trans-unit>
        <trans-unit id="c2c4cb992d99b0b97748811097f97eea4d2ce81b" translate="yes" xml:space="preserve">
          <source>Unless the operator is an assignment (&lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , etc.), repeat step (1) in respect of the second operand.</source>
          <target state="translated">Если оператор не является присваиванием ( &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; и т. Д.), Повторите шаг (1) в отношении второго операнда.</target>
        </trans-unit>
        <trans-unit id="05d7e76af21f11f9c892472417201fd8ed4cf910" translate="yes" xml:space="preserve">
          <source>Unless the operator is an assignment (&lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, etc.), repeat step (1) in respect of the second operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6634c0ddc3b2fcdacf253fa92fd7c8403abaf0" translate="yes" xml:space="preserve">
          <source>Unless the pattern or string are encoded in UTF-8, only ASCII characters can match positively.</source>
          <target state="translated">Если шаблон или строка не закодированы в кодировке UTF-8,то только ASCII-символы могут иметь положительное совпадение.</target>
        </trans-unit>
        <trans-unit id="93f6520e33056598a5ce68e86d15794aa942a8a6" translate="yes" xml:space="preserve">
          <source>Unless they are explicitly specified, the default values for the exit status, verbose level, and output stream to use are determined as follows:</source>
          <target state="translated">Если они явно не указаны,то значения по умолчанию для статуса выхода,многоуровневого уровня и выходного потока для использования определяются следующим образом:</target>
        </trans-unit>
        <trans-unit id="28631a8600ab2d0e4799cb9a021cc0306169b6f9" translate="yes" xml:space="preserve">
          <source>Unless you are accessing the CPAN on your filesystem via a file: URL, CPAN.pm needs to keep the source files it downloads somewhere. Please supply a directory where the downloaded files are to be kept.</source>
          <target state="translated">Если только вы не получаете доступ к CPAN в вашей файловой системе через файл:URL,CPAN.pm должен хранить где-нибудь загружаемые им исходные файлы.Пожалуйста,укажите каталог,в котором будут храниться загруженные файлы.</target>
        </trans-unit>
        <trans-unit id="6b861eac07037b268358d427fce8707b48f9500e" translate="yes" xml:space="preserve">
          <source>Unless you are using the &lt;code&gt;fields&lt;/code&gt; pragma, consider this module discouraged in favor of the lighter-weight &lt;code&gt;parent&lt;/code&gt; .</source>
          <target state="translated">Если вы не используете прагму &lt;code&gt;fields&lt;/code&gt; , считайте, что этот модуль не рекомендуется в пользу более легкого &lt;code&gt;parent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd40baebc35d8dd113beed64e1b32df4e1666e49" translate="yes" xml:space="preserve">
          <source>Unless you are using the &lt;code&gt;fields&lt;/code&gt; pragma, consider this module discouraged in favor of the lighter-weight &lt;code&gt;parent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f0f4d743460958895c1346a2bcc4ae32486815" translate="yes" xml:space="preserve">
          <source>Unless you don't like the possibility of there being part of your Perl scripts embedded in a database file, this is nothing to worry about.</source>
          <target state="translated">Если вам не нравится возможность быть частью Perl скриптов,встроенных в файл базы данных,то вам не о чем беспокоиться.</target>
        </trans-unit>
        <trans-unit id="078c8b3d64fda031c2ca3a111adc19b05790c7fb" translate="yes" xml:space="preserve">
          <source>Unless you have a particular reason to use the two-argument form you should use the three-argument form of open() which does not treat any characters in the filename as special.</source>
          <target state="translated">Если у вас нет особой причины использовать двухпараметрическую форму,вы должны использовать трехпараметрическую форму open(),которая не рассматривает никакие символы в имени файла как специальные.</target>
        </trans-unit>
        <trans-unit id="bcd145902080112cd3bd3565e1aa0b2eb6698439" translate="yes" xml:space="preserve">
          <source>Unless you have good reasons for using some other format (for example, a format used within your company), the convention is to name your changelog file &lt;code&gt;Changes&lt;/code&gt; , and to follow the simple format described in &lt;a href=&quot;http://search.cpan.org/perldoc/CPAN::Changes::Spec&quot;&gt;CPAN::Changes::Spec&lt;/a&gt;.</source>
          <target state="translated">Если у вас нет веских причин для использования какого-либо другого формата (например, формата, используемого в вашей компании), соглашение заключается в том, чтобы назвать ваш файл журнала изменений &lt;code&gt;Changes&lt;/code&gt; и следовать простому формату, описанному в &lt;a href=&quot;http://search.cpan.org/perldoc/CPAN::Changes::Spec&quot;&gt;CPAN :: Changes :: Spec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87db3fba7e4f130f44369a6d247e1f97fe2c94e1" translate="yes" xml:space="preserve">
          <source>Unless you have good reasons for using some other format (for example, a format used within your company), the convention is to name your changelog file &lt;code&gt;Changes&lt;/code&gt;, and to follow the simple format described in &lt;a href=&quot;CPAN::Changes::Spec&quot;&gt;CPAN::Changes::Spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7a1f205e8e2686b0c4b6d39cce725cef83741e" translate="yes" xml:space="preserve">
          <source>Unless you know better, serializing hook should always say:</source>
          <target state="translated">Если ты не знаешь лучше,серийный крюк всегда должен говорить:</target>
        </trans-unit>
        <trans-unit id="4f5f76f31b82833340ef52081bb4d0e79eab2cc2" translate="yes" xml:space="preserve">
          <source>Unless you know with 100% certainty that quux() is only ever available for the &quot;Foonix&quot; operating system &lt;b&gt;and&lt;/b&gt; that is available &lt;b&gt;and&lt;/b&gt; correctly working for &lt;b&gt;all&lt;/b&gt; past, present, &lt;b&gt;and&lt;/b&gt; future versions of &quot;Foonix&quot;, the above is very wrong. This is more correct (though still not perfect, because the below is a compile-time check):</source>
          <target state="translated">Если вы не знаете со 100% уверенностью, что quux () когда-либо доступен только для операционной системы &amp;laquo;Foonix&amp;raquo; &lt;b&gt;и&lt;/b&gt; что он доступен &lt;b&gt;и&lt;/b&gt; правильно работает для &lt;b&gt;всех&lt;/b&gt; прошлых, настоящих &lt;b&gt;и&lt;/b&gt; будущих версий &amp;laquo;Foonix&amp;raquo;, приведенное выше неверно. Это более правильно (хотя и не идеально, потому что ниже представлена ​​проверка во время компиляции):</target>
        </trans-unit>
        <trans-unit id="93ff79231a3d36c0c3d8ce3114e701a1baebbf25" translate="yes" xml:space="preserve">
          <source>Unless you set this attribute to a false value, Pod::Search will recurse into subdirectories of the search directories.</source>
          <target state="translated">Если вы не установите этот атрибут в значение false,Pod::Search будет повторяться в подкаталогах каталогов поиска.</target>
        </trans-unit>
        <trans-unit id="17c62f898b45d3be500e6c39bec8d493a60a2715" translate="yes" xml:space="preserve">
          <source>Unless you set this attribute to a true value, Pod::Search will apply Perl-specific heuristics to find the correct module PODs quickly. This attribute's default value is false. You won't normally need to set this to true.</source>
          <target state="translated">Если вы не установите этот атрибут в истинное значение,Pod::Search применит Perl-специфическую эвристику,чтобы быстро найти нужный модуль POD.Значение атрибута по умолчанию равно false.Обычно вам не нужно будет устанавливать это значение в true.</target>
        </trans-unit>
        <trans-unit id="9f9a16887abf4c916f1550cac344cc208f6c0b6b" translate="yes" xml:space="preserve">
          <source>Unless you set this attribute to a true value, Pod::Simple::Search will consider only the first file of a given modulename as it looks thru the specified directories; that is, with this option off, if Pod::Simple::Search has seen a &lt;code&gt;somepathdir/Foo/Bar.pm&lt;/code&gt; already in this search, then it won't bother looking at a &lt;code&gt;somelaterpathdir/Foo/Bar.pm&lt;/code&gt; later on in that search, because that file is merely a &quot;shadow&quot;. But if you turn on &lt;code&gt;$self-&amp;gt;shadows(1)&lt;/code&gt; , then these &quot;shadow&quot; files are inspected too, and are noted in the pathname2podname return hash.</source>
          <target state="translated">Если вы не установите для этого атрибута истинное значение, Pod :: Simple :: Search будет рассматривать только первый файл с заданным именем модуля при просмотре через указанные каталоги; то есть, если эта опция выключена, если Pod :: Simple :: Search уже обнаружил &lt;code&gt;somepathdir/Foo/Bar.pm&lt;/code&gt; в этом поиске, то он не будет беспокоиться о поиске &lt;code&gt;somelaterpathdir/Foo/Bar.pm&lt;/code&gt; позже в этот поиск, потому что этот файл - просто &amp;laquo;тень&amp;raquo;. Но если вы включите &lt;code&gt;$self-&amp;gt;shadows(1)&lt;/code&gt; , эти &amp;laquo;теневые&amp;raquo; файлы тоже будут проверены и будут отмечены в возвращаемом хэше pathname2podname.</target>
        </trans-unit>
        <trans-unit id="4fc995dcd124519ccc18ad86cc265d6cd653065c" translate="yes" xml:space="preserve">
          <source>Unless you set this attribute to a true value, Pod::Simple::Search will consider only the first file of a given modulename as it looks thru the specified directories; that is, with this option off, if Pod::Simple::Search has seen a &lt;code&gt;somepathdir/Foo/Bar.pm&lt;/code&gt; already in this search, then it won't bother looking at a &lt;code&gt;somelaterpathdir/Foo/Bar.pm&lt;/code&gt; later on in that search, because that file is merely a &quot;shadow&quot;. But if you turn on &lt;code&gt;$self-&amp;gt;shadows(1)&lt;/code&gt;, then these &quot;shadow&quot; files are inspected too, and are noted in the pathname2podname return hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa89971032de2d3d226811c31dc2014b63de305b" translate="yes" xml:space="preserve">
          <source>Unless you want to override the defaults, prefer META_MERGE so as to get the advantage of any future defaults.</source>
          <target state="translated">Если вы не хотите переопределить значения по умолчанию,предпочитайте META_MERGE,чтобы получить преимущество от любых будущих значений по умолчанию.</target>
        </trans-unit>
        <trans-unit id="eb83985aa16dab9a13560a8e8f1159fe638efa8b" translate="yes" xml:space="preserve">
          <source>Unless you want to use its advanced features, this is probably all you need to know to use Exporter.</source>
          <target state="translated">Если вы не хотите использовать его расширенные возможности,это,вероятно,все,что вам нужно знать,чтобы использовать Exporter.</target>
        </trans-unit>
        <trans-unit id="04c205c66e7bc90d55cfb8afb031ef118a5c83da" translate="yes" xml:space="preserve">
          <source>Unless you&amp;rsquo;ve used &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; matches more than ASCII digits only, but Perl&amp;rsquo;s implicit string-to-number conversion does not current recognize these. Here&amp;rsquo;s how to convert such strings manually.</source>
          <target state="translated">Если вы не использовали &lt;code&gt;/a&lt;/code&gt; или &lt;code&gt;/aa&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; соответствует более чем цифрам ASCII, но неявное преобразование строки в число Perl в настоящее время их не распознает. Вот как преобразовать такие строки вручную.</target>
        </trans-unit>
        <trans-unit id="37d04e5bf67a8174972d88089473b77064f2c69b" translate="yes" xml:space="preserve">
          <source>Unless you&amp;rsquo;ve used &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt; matches more than ASCII digits only, but Perl&amp;rsquo;s implicit string-to-number conversion does not current recognize these. Here&amp;rsquo;s how to convert such strings manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9444f4badd85c5a13fe02c22e0706b7a37804d" translate="yes" xml:space="preserve">
          <source>Unless you're writing a new &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;, a plugin or subclassing &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b006759734f26ef71ac954f172bdb96074166b64" translate="yes" xml:space="preserve">
          <source>Unless you're writing a new &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;, a plugin, or subclassing &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5045afa1f26fa3558f3707783d1ac5db1ca1f3" translate="yes" xml:space="preserve">
          <source>Unless you're writing a new &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;, a plugin or subclassing &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;, you probably won't need to use this module directly.</source>
          <target state="translated">Если вы не пишете новый &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; , плагин или подкласс &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; , вам, вероятно, не потребуется напрямую использовать этот модуль.</target>
        </trans-unit>
        <trans-unit id="83a68b50b49a806ff511080c423ef60589d29433" translate="yes" xml:space="preserve">
          <source>Unless you're writing a plugin or subclassing &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54802d84b1114c8dea2af70188cfd6c295957d7" translate="yes" xml:space="preserve">
          <source>Unless your parameters specify &lt;code&gt;'formatter'&lt;/code&gt; or &lt;code&gt;'ipc'&lt;/code&gt; arguments, the formatter and IPC instance will be inherited from the current top hub. You can set the parameters to &lt;code&gt;undef&lt;/code&gt; to avoid having a formatter or IPC instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fc409268936e0da48b9a4cfb9650b21029f3c0" translate="yes" xml:space="preserve">
          <source>Unlike</source>
          <target state="translated">Unlike</target>
        </trans-unit>
        <trans-unit id="0b93fd78908f06ac9f5039bb243a42a6b44ce01c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#Decimal-Versions&quot;&gt;&quot;Decimal Versions&quot;&lt;/a&gt;, Dotted-Decimal Versions have more than a single decimal point, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0a5bc8021cd6778eed9a88f7e5cfd7b53090d1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;, this does not include the decomposition type. Use the &lt;code&gt;Decomposition_Type&lt;/code&gt; property to get that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26769d51e7e8546d072ce687409eedaf6bbd7d27" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;, this does not include the decomposition type. Use the &lt;code&gt;Decomposition_Type&lt;/code&gt; property to get that.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; , он не включает тип декомпозиции. Используйте свойство &lt;code&gt;Decomposition_Type&lt;/code&gt; , чтобы получить это.</target>
        </trans-unit>
        <trans-unit id="9a41788c4603779b500b4b22e894cfcf25b5f9a6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt;&lt;code&gt;dbmopen&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; function will not &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; a module for you; you need to do that explicitly yourself. See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; or the &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; module for interesting &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6202c7008c5edbd97e21466da5df4a59ec41a0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt; does not do what you probably mean when you pass it an array as your first argument. The array is given scalar context, and instead of using the 0th element of the array as the format, Perl will use the count of elements in the array as the format, which is almost never useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68f9ca2a4829500bd2437e49a38f1fec56cc959" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#utf8_to_bytes&quot;&gt;&quot;utf8_to_bytes&quot;&lt;/a&gt; but like &lt;a href=&quot;#bytes_to_utf8&quot;&gt;&quot;bytes_to_utf8&quot;&lt;/a&gt;, this is non-destructive of the input string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7823a1b5c73e2c047f503abcdbc0ee1982c031" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;integer&quot;&gt;integer&lt;/a&gt;, this pragma creates integer constants that are only limited in their size by the available memory and CPU time.</source>
          <target state="translated">В отличие от &lt;a href=&quot;integer&quot;&gt;целых чисел&lt;/a&gt; , эта прагма создает целочисленные константы, размер которых ограничен только доступной памятью и временем процессора.</target>
        </trans-unit>
        <trans-unit id="ed386882eb03009cdfed1d7cc619e0742b192d68" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function will not &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; a module for you; you need to do that explicitly yourself. See &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; or the</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; , функция &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; не будет &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; и не &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; для вас модуля; вам нужно сделать это самостоятельно. См. &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; или</target>
        </trans-unit>
        <trans-unit id="e6074edfe48b345d15827a75a36946caff143c7a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function will not &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; a module for you; you need to do that explicitly yourself. See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; or the</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; , функция &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; не будет &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; и не &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; для вас модуля; вам нужно сделать это самостоятельно. См. &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; или</target>
        </trans-unit>
        <trans-unit id="7f221507f852d26a177998f0fca0127e91483ffd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;functions/for&quot;&gt;for...in&lt;/a&gt;&lt;/code&gt;, Perl's &lt;code&gt;for&lt;/code&gt; (also spelled &lt;code&gt;foreach&lt;/code&gt; ) does not allow the left-hand side to be an arbitrary expression. It must be a variable:</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;functions/for&quot;&gt;for...in&lt;/a&gt;&lt;/code&gt; , Perl &lt;code&gt;for&lt;/code&gt; (также пишется как &lt;code&gt;foreach&lt;/code&gt; ) не позволяет левой части быть произвольным выражением. Это должна быть переменная:</target>
        </trans-unit>
        <trans-unit id="2d1c847135806754dca42b817cb04eaf19cedf87" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; does not do what you probably mean when you pass it an array as your first argument. The array is given scalar context, and instead of using the 0th element of the array as the format, Perl will use the count of elements in the array as the format, which is almost never useful.</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; не делает того, что вы, вероятно, имеете в виду, когда вы передаете ему массив в качестве первого аргумента. Массиву задается скалярный контекст, и вместо использования 0-го элемента массива в качестве формата Perl будет использовать количество элементов в массиве в качестве формата, что почти никогда не бывает полезно.</target>
        </trans-unit>
        <trans-unit id="89ae4f74127125a7e7d48317841dc79dfceae6a6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; does not do what you probably mean when you pass it an array as your first argument. The array is given scalar context, and instead of using the 0th element of the array as the format, Perl will use the count of elements in the array as the format, which is almost never useful.</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; не делает того, что вы, вероятно, имеете в виду, когда вы передаете ему массив в качестве первого аргумента. Массиву задается скалярный контекст, и вместо использования 0-го элемента массива в качестве формата Perl будет использовать количество элементов в массиве в качестве формата, что почти никогда не бывает полезно.</target>
        </trans-unit>
        <trans-unit id="3b964f91b8b4881dd0085a0962dbd9390808f7e2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;[[:digit:]]&lt;/code&gt; which matches digits in many writing systems, such as Thai and Devanagari, there are currently only two sets of hexadecimal digits, and it is unlikely that more will be added. This is because you not only need the ten digits, but also the six &lt;code&gt;[A-F]&lt;/code&gt; (and &lt;code&gt;[a-f]&lt;/code&gt;) to correspond. That means only the Latin script is suitable for these, and Unicode has only two sets of these, the familiar ASCII set, and the fullwidth forms starting at U+FF10 (FULLWIDTH DIGIT ZERO).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58c8c453430fd542b53059b23563075518c8ca7" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;for...in&lt;/code&gt;, Perl's &lt;code&gt;for&lt;/code&gt; (also spelled &lt;code&gt;foreach&lt;/code&gt;) does not allow the left-hand side to be an arbitrary expression. It must be a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ee12c11bcd84febb2422b0c97e2cecef90b3a9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;use feature &quot;:5.12&quot;&lt;/code&gt;, saying &lt;code&gt;use v5.12&lt;/code&gt; (or any higher version) also does the equivalent of &lt;code&gt;use strict&lt;/code&gt;; see &lt;a href=&quot;perlfunc#use&quot;&gt;&quot;use&quot; in perlfunc&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9885543c31cf8cf0906d34d4b26f89726d373169" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;which&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; , this function is platform independent and will also work on, for example, Win32.</source>
          <target state="translated">В отличие от &lt;code&gt;which&lt;/code&gt; и &lt;code&gt;type&lt;/code&gt; , эта функция не зависит от платформы и также будет работать, например, в Win32.</target>
        </trans-unit>
        <trans-unit id="4fd10722655bcf3a1480d15b870f6c966069d54d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;which&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt;, this function is platform independent and will also work on, for example, Win32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1319ac66a745a073ad45b032e405d0c0606e8b" translate="yes" xml:space="preserve">
          <source>Unlike Perl 4, in which all the variables were dynamic and shared one global name space, causing maintainability problems, Perl 5 provides two mechanisms for protecting code from having its variables stomped on by other code: lexically scoped variables created with &lt;code&gt;my&lt;/code&gt; or &lt;code&gt;state&lt;/code&gt; and namespaced global variables, which are exposed via the &lt;code&gt;vars&lt;/code&gt; pragma, or the &lt;code&gt;our&lt;/code&gt; keyword. Any global variable is considered to be part of a namespace and can be accessed via a &quot;fully qualified form&quot;. Conversely, any lexically scoped variable is considered to be part of that lexical-scope, and does not have a &quot;fully qualified form&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35eb11bdbc8f6461d7ed511f9bd108d79a6ba74" translate="yes" xml:space="preserve">
          <source>Unlike Perl's built-in hashes, it is not safe to &lt;code&gt;delete&lt;/code&gt; the current item from a GDBM_File tied hash while iterating over it with &lt;code&gt;each&lt;/code&gt;. This is a limitation of the gdbm library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93ac07922c6fc8a77d40224ee6574380d8e4055" translate="yes" xml:space="preserve">
          <source>Unlike Win32 build, miniperl will not have</source>
          <target state="translated">В отличие от сборки Win32,miniperl не будет иметь</target>
        </trans-unit>
        <trans-unit id="a7c35c87e2cd92f458c69ed20a29518c1fc60ceb" translate="yes" xml:space="preserve">
          <source>Unlike constants in some languages, these cannot be overridden on the command line or via environment variables.</source>
          <target state="translated">В отличие от констант в некоторых языках,они не могут быть переопределены в командной строке или через переменные окружения.</target>
        </trans-unit>
        <trans-unit id="2e9d61b3ed80ed71e7bbbb9d575bf23b5d77fb98" translate="yes" xml:space="preserve">
          <source>Unlike dbmopen(), the tie() function will not &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; a module for you--you need to do that explicitly yourself.</source>
          <target state="translated">В отличие от dbmopen (), функция tie () не будет &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; модуль для вас - вам нужно сделать это явно самостоятельно.</target>
        </trans-unit>
        <trans-unit id="ac457fcb4cff6e9b40b4fc09afe6c228026b2c13" translate="yes" xml:space="preserve">
          <source>Unlike dbmopen(), the tie() function will not &lt;code&gt;use&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; a module for you--you need to do that explicitly yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7d99bfc8b3205da369ad185c97fc4f2004cc75" translate="yes" xml:space="preserve">
          <source>Unlike dynamic variables created by the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator, lexical variables declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; are totally hidden from the outside world, including any called subroutines. This is true if it's the same subroutine called from itself or elsewhere--every call gets its own copy.</source>
          <target state="translated">В отличие от динамических переменных, созданных &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; оператором, лексические переменные, объявленные с помощью &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , полностью скрыты от внешнего мира, включая любые вызываемые подпрограммы. Это верно, если одна и та же подпрограмма вызывается из себя или из другого места - каждый вызов получает свою собственную копию.</target>
        </trans-unit>
        <trans-unit id="ef30321397c8a6c2a145849a1e7eb34fc5044060" translate="yes" xml:space="preserve">
          <source>Unlike dynamic variables created by the &lt;code&gt;local&lt;/code&gt; operator, lexical variables declared with &lt;code&gt;my&lt;/code&gt; are totally hidden from the outside world, including any called subroutines. This is true if it's the same subroutine called from itself or elsewhere--every call gets its own copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d613b9dfee0f458298b76229e47572b9ad09a4" translate="yes" xml:space="preserve">
          <source>Unlike in C and Pascal, in Perl these are all defined in terms of BLOCKs, not statements. This means that the curly brackets are</source>
          <target state="translated">В отличие от C и Pascal,в Perl все они определены в терминах BLOCK,а не в утверждениях.Это означает,что фигурные скобки</target>
        </trans-unit>
        <trans-unit id="f21336a91710bef15208089eafb11092016626b2" translate="yes" xml:space="preserve">
          <source>Unlike in C, the scalar assignment operator produces a valid lvalue. Modifying an assignment is equivalent to doing the assignment and then modifying the variable that was assigned to. This is useful for modifying a copy of something, like this:</source>
          <target state="translated">В отличие от C,оператор назначения скаляров производит действительное значение lvalue.Изменение присваивания эквивалентно выполнению присваивания,а затем изменению присвоенной переменной.Это полезно для изменения копии чего-то подобного:</target>
        </trans-unit>
        <trans-unit id="5f827eec6110de095ec9210c18c9cbffc634099b" translate="yes" xml:space="preserve">
          <source>Unlike in earlier versions of Perl, &lt;code&gt;:raw&lt;/code&gt; is</source>
          <target state="translated">В отличие от более ранних версий Perl &lt;code&gt;:raw&lt;/code&gt; - это</target>
        </trans-unit>
        <trans-unit id="33bdaa80be75964fba31840d455d3822e7d396b4" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;&quot;&quot;&lt;/code&gt; ) can be returned. Since &lt;code&gt;catdir()&lt;/code&gt; on Mac OS always appends a trailing colon to distinguish a directory path from a file path, a single trailing colon will be ignored, i.e. there's no empty directory name after it.</source>
          <target state="translated">В отличие от простого разделения каталогов по разделителю, могут быть возвращены пустые имена каталогов ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ). Поскольку &lt;code&gt;catdir()&lt;/code&gt; в Mac OS всегда добавляет конечное двоеточие, чтобы отличить путь к каталогу от пути к файлу, одиночное конечное двоеточие будет проигнорировано, т. Е. После него нет пустого имени каталога.</target>
        </trans-unit>
        <trans-unit id="7e91e9b08f85424586bbe7fa7e02138bcae68a32" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;&quot;&quot;&lt;/code&gt;) can be returned. Since &lt;code&gt;catdir()&lt;/code&gt; on Mac OS always appends a trailing colon to distinguish a directory path from a file path, a single trailing colon will be ignored, i.e. there's no empty directory name after it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54463777f2a5a26bb28578fbecd0a237664559d0" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;''&lt;/code&gt; ) can be returned, because these are significant on some OSes.</source>
          <target state="translated">В отличие от простого разделения каталогов по разделителю, могут быть возвращены пустые имена каталогов ( &lt;code&gt;''&lt;/code&gt; ), поскольку они важны в некоторых ОС.</target>
        </trans-unit>
        <trans-unit id="86f74613bf49290364595249fc093a5b0e46c0b1" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;''&lt;/code&gt; ) can be returned, because these are significant on some OSs.</source>
          <target state="translated">В отличие от простого разделения каталогов по разделителю, могут быть возвращены пустые имена каталогов ( &lt;code&gt;''&lt;/code&gt; ), поскольку они важны для некоторых ОС.</target>
        </trans-unit>
        <trans-unit id="a1dab7e402fccbdcf23288af9af78be14a2bd58c" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;''&lt;/code&gt;) can be returned, because these are significant on some OSes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6113c750f78736baa4aa9cd996719b663fd9d18d" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, empty directory names (&lt;code&gt;''&lt;/code&gt;) can be returned, because these are significant on some OSs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0601a2027041706b4a215c5ba97b0f2d038f55f" translate="yes" xml:space="preserve">
          <source>Unlike just splitting the directories on the separator, leading empty and trailing directory entries can be returned, because these are significant on some OSs. So,</source>
          <target state="translated">В отличие от простого разделения каталогов на разделитель,ведущие пустые и трейлинговые записи каталога могут быть возвращены,потому что они важны для некоторых ОС.Итак,</target>
        </trans-unit>
        <trans-unit id="7934f43f05e561c630f325debe8a290638569198" translate="yes" xml:space="preserve">
          <source>Unlike local variables in C or C++, Perl's lexical variables don't necessarily get recycled just because their scope has exited. If something more permanent is still aware of the lexical, it will stick around. So long as something else references a lexical, that lexical won't be freed--which is as it should be. You wouldn't want memory being free until you were done using it, or kept around once you were done. Automatic garbage collection takes care of this for you.</source>
          <target state="translated">В отличие от локальных переменных в C или C++,лексические переменные Perl не обязательно перерабатываются только потому,что их область видимости вышла из строя.Если что-то более постоянное все еще знает о лексике,оно останется.До тех пор,пока что-то другое ссылается на лексику,эта лексика не будет освобождена-как и должно быть.Вы не захотите,чтобы память была освобождена до тех пор,пока вы не закончите использовать её,или не будете хранить её,как только вы закончите.Автоматический сбор мусора позаботится об этом за вас.</target>
        </trans-unit>
        <trans-unit id="61c2bf5d9fb9c4e4b449918bf685b7cd4c575760" translate="yes" xml:space="preserve">
          <source>Unlike many other languages which support object orientation, Perl does not provide any special syntax for constructing an object. Objects are merely Perl data structures (hashes, arrays, scalars, filehandles, etc.) that have been explicitly associated with a particular class.</source>
          <target state="translated">В отличие от многих других языков,поддерживающих объектную ориентацию,Perl не предоставляет никакого специального синтаксиса для построения объекта.Объектами являются только Perl-структуры данных (хэши,массивы,скаляры,файловые хэндлы и т.д.),которые были явно ассоциированы с определенным классом.</target>
        </trans-unit>
        <trans-unit id="96a17407e83fd96732a811a270065f8bf99b9560" translate="yes" xml:space="preserve">
          <source>Unlike most encodings which accept various ways to handle errors, Unicode encodings simply croaks.</source>
          <target state="translated">В отличие от большинства кодировок,которые допускают различные способы обработки ошибок,кодировки Unicode просто перекрывают друг друга.</target>
        </trans-unit>
        <trans-unit id="49b673e0d13d9cc508ff95ef6bf45edac94a0386" translate="yes" xml:space="preserve">
          <source>Unlike most locales, which are specific to a language and country pair, Unicode classifies all the characters that are letters</source>
          <target state="translated">В отличие от большинства локалей,которые специфичны для пары языка и страны,Юникод классифицирует все символы,которые являются буквами.</target>
        </trans-unit>
        <trans-unit id="de28345f4c14a0c66a5513ec93329ba001d9ced5" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила внешнего вида, поэтому &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0d9558dea8e06eb18c291c6122258af13477176" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила внешнего вида, поэтому &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b35f8dffb5619dd71375e3734d385be7cc68976" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому &lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="642dec0f5e46307ce9e97ef7e93a9392f0b1f7ab" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. Он также не подчиняется правилу &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому &lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e8af66683db3fc2cddaa8cdf32b4f53ebab4445" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому redo (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bec2254ea41ddda3ef06eefb12b88f8ff1170ba" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому &lt;a href=&quot;last&quot;&gt;last&lt;/a&gt; (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46f28e7c4c55184f01ee0fc59018a927acd8437c" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. Он также не подчиняется правилу &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому &lt;a href=&quot;next&quot;&gt;next&lt;/a&gt; (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe0bcbfb6300fcbe2507c49b4631d20697de525c" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, этот имеет тот же приоритет, что и присваивание. На него также не распространяется действие правила &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; функции, поэтому redo (&quot;foo&quot;). &quot;Bar&quot; заставит &quot;bar&quot; быть частью аргумента для &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34c00fe043d78656afd77828c738549c64c1fe0d" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;dump (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;a href=&quot;#dump-LABEL&quot;&gt;&lt;code&gt;dump&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22585aa0bd13d608250b8dcea334b07dd252021" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;last (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;a href=&quot;#last-LABEL&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec12e43efad3d3a645f2714eff3a43a7be31992" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;next (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;a href=&quot;#next-LABEL&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dc19f120a0108be730d05ae2cc974e390f447d" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this has the same precedence as assignment. It is also exempt from the looks-like-a-function rule, so &lt;code&gt;redo (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;a href=&quot;#redo-LABEL&quot;&gt;&lt;code&gt;redo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee3973cea98d2564d41622c65ad1eadc9b20495" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, это также не распространяется на правило, похожее на функцию, поэтому &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; заставит &quot;bar&quot; быть частью &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; аргумента .</target>
        </trans-unit>
        <trans-unit id="fd9949db65a27c0400a1254746b3e91b925c452b" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this is also exempt from the looks-like-a-function rule, so &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &quot;bar&quot; to be part of the argument to &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В отличие от большинства именованных операторов, это также не распространяется на правило, похожее на функцию, поэтому &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; заставит &quot;bar&quot; быть частью &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; аргумента .</target>
        </trans-unit>
        <trans-unit id="c7a5022b5ad46573ca70c92672e20e032530725b" translate="yes" xml:space="preserve">
          <source>Unlike most named operators, this is also exempt from the looks-like-a-function rule, so &lt;code&gt;return (&quot;foo&quot;).&quot;bar&quot;&lt;/code&gt; will cause &lt;code&gt;&quot;bar&quot;&lt;/code&gt; to be part of the argument to &lt;a href=&quot;#return-EXPR&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728a32d1ef745efc09c9a2c8f8520f5d6f4c4b95" translate="yes" xml:space="preserve">
          <source>Unlike most of the other functions that have &lt;code&gt;utf8&lt;/code&gt; in their name, the input to this function is NOT a UTF-8-encoded string. The function name is slightly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21a9fd801c4b5ff299a1a5bef8631136555ebd2" translate="yes" xml:space="preserve">
          <source>Unlike most operators, the smartmatch operator knows to treat &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; specially:</source>
          <target state="translated">В отличие от большинства операторов, оператор smartmatch умеет обращаться с &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; особым образом:</target>
        </trans-unit>
        <trans-unit id="a099365433c865a39830b29bcea8462ee44a1ac6" translate="yes" xml:space="preserve">
          <source>Unlike most operators, the smartmatch operator knows to treat &lt;code&gt;undef&lt;/code&gt; specially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52ae364f54ddc8596b506c3503500a0182fc785" translate="yes" xml:space="preserve">
          <source>Unlike most other encodings, the following always croaks on error for any $chk that evaluates to true.</source>
          <target state="translated">В отличие от большинства других кодировок,следующие кодировки всегда перекрывают ошибку для любого $chk,который вычисляется как истинный.</target>
        </trans-unit>
        <trans-unit id="3d20af86f51aab9cb74465f15c6036108807e949" translate="yes" xml:space="preserve">
          <source>Unlike non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if these properties are matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;Beyond Unicode code points&quot;&lt;/a&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0be45e558750e70d5ad5d40843ef88fbc85d85e" translate="yes" xml:space="preserve">
          <source>Unlike non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if these properties are matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; below).</source>
          <target state="translated">В отличии от не-определяемого пользователя &lt;code&gt;\p{}&lt;/code&gt; собственности матчей, предупреждение не генерируется , если когда - либо эти свойства сопоставляются с точкой коды не-Unicode (см &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;кодовых точек Юникода Вне&lt;/a&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="54d85676113e32968ab38ead192e565266d17ce6" translate="yes" xml:space="preserve">
          <source>Unlike other DJGPP packages, which are normal &quot;zip&quot; files, most CPAN module packages are &quot;gzipped tarballs&quot;. Recent versions of WinZip will safely unpack and expand them, *UNLESS* they have zero-length files. It is a known WinZip bug (as of v7.0) that it will not extract zero-length files.</source>
          <target state="translated">В отличие от других пакетов DJGPP,которые являются обычными &quot;zip&quot; файлами,большинство пакетов CPAN модулей являются &quot;gzipped tarballs&quot;.Последние версии WinZip безопасно распаковывают и расширяют их,*UNLESS*они имеют файлы нулевой длины.Это известная ошибка WinZip (по состоянию на v7.0),что он не будет извлекать файлы с нулевой длиной.</target>
        </trans-unit>
        <trans-unit id="7d1d9ddacb9cc957a1381975755b447def4208e7" translate="yes" xml:space="preserve">
          <source>Unlike other boolean options, this opotion is enabled by default beginning with version &lt;code&gt;4.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83864ffb2b433053a7d93f1893b27cbe33018e20" translate="yes" xml:space="preserve">
          <source>Unlike other encodings where mappings are not one-to-one against Unicode, UTFs are supposed to map 100% against one another. So Encode is more strict on UTFs.</source>
          <target state="translated">В отличие от других кодировок,где сопоставление не происходит один на один с Юникодом,UTF должны сопоставлять 100% друг с другом.Поэтому коды более строги к UTF.</target>
        </trans-unit>
        <trans-unit id="9944da74f109a50432581cc20ef1a61578ffdb1c" translate="yes" xml:space="preserve">
          <source>Unlike other types of quote-like literals, a here document is rarely a contiguous substring. For example, a typical piece of code using here document might look like this:</source>
          <target state="translated">В отличие от других типов цитируемых литералов,здесь документ редко является сопрягаемой подстрокой.Например,типичный фрагмент кода,использующий данный документ,может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="82bfb2284168959f095690d2be25e5ae6b5a6d2d" translate="yes" xml:space="preserve">
          <source>Unlike pragmas that affect the &lt;code&gt;$^H&lt;/code&gt; hints variable, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; declarations are not BLOCK-scoped. They are thus effective for the entire file in which they appear. You may not rescind such declarations with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; vars&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; subs&lt;/code&gt; .</source>
          <target state="translated">В отличие от прагм, которые влияют на переменную подсказок &lt;code&gt;$^H&lt;/code&gt; , объявления &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; не имеют области видимости BLOCK. Таким образом, они действуют для всего файла, в котором они появляются. Вы не можете отменить эти заявления &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; vars&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; subs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="946dc8e2b9e4dbb1e056eab35da113b4edec1e74" translate="yes" xml:space="preserve">
          <source>Unlike pragmas that affect the &lt;code&gt;$^H&lt;/code&gt; hints variable, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; declarations are not BLOCK-scoped. They are thus effective for the entire package in which they appear. You may not rescind such declarations with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; vars&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; subs&lt;/code&gt; .</source>
          <target state="translated">В отличие от прагм, которые влияют на переменную подсказок &lt;code&gt;$^H&lt;/code&gt; , объявления &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; не имеют области видимости BLOCK. Таким образом, они эффективны для всего пакета, в котором они появляются. Вы не можете отменить эти заявления &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; vars&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; subs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee09d59fb829cfd66034aa9b684c476eb3f881a3" translate="yes" xml:space="preserve">
          <source>Unlike pragmas that affect the &lt;code&gt;$^H&lt;/code&gt; hints variable, the &lt;code&gt;use vars&lt;/code&gt; and &lt;code&gt;use subs&lt;/code&gt; declarations are not lexically scoped to the block they appear in: they affect the entire package in which they appear. It is not possible to rescind these declarations with &lt;code&gt;no vars&lt;/code&gt; or &lt;code&gt;no subs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62fc8b32926f79e07e4cd739d192b4db682422d" translate="yes" xml:space="preserve">
          <source>Unlike previous examples, we've now run h2xs on a real include file. This has caused some extra goodies to appear in both the .pm and .xs files.</source>
          <target state="translated">В отличие от предыдущих примеров,теперь мы запустили h2xs на реально включаемом файле.Это привело к появлению некоторых дополнительных лакомств как в .pm,так и в .xs файлах.</target>
        </trans-unit>
        <trans-unit id="1ef80340079fb27e8a35fae5de34324e0ae68abb" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; implementations, the directory used for the temporary file is not specified in a system include file (&lt;code&gt;P_tmpdir&lt;/code&gt;) but simply depends on the choice of tmpdir() returned by &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;. On some implementations this location can be set using the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable, which may not be secure. If this is a problem, simply use mkstemp() and specify a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82613342b350d8ac2d5e700389b419d73a2e8511" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;Newx&lt;/code&gt; and &lt;code&gt;Newxc&lt;/code&gt; macros, the &lt;code&gt;Newxz&lt;/code&gt; macro calls &lt;code&gt;memzero&lt;/code&gt; to zero out all the newly allocated memory.</source>
          <target state="translated">В отличие от &lt;code&gt;Newx&lt;/code&gt; и &lt;code&gt;Newxc&lt;/code&gt; , макрос &lt;code&gt;Newxz&lt;/code&gt; вызывает &lt;code&gt;memzero&lt;/code&gt; для обнуления всей вновь выделенной памяти.</target>
        </trans-unit>
        <trans-unit id="3459d8de61947e832dd8d6cc93a45a157f32fe5d" translate="yes" xml:space="preserve">
          <source>Unlike the GNU programs,</source>
          <target state="translated">В отличие от программ GNU,</target>
        </trans-unit>
        <trans-unit id="675122bbd6fe9d02ab821cef4f122f1e2fdb7554" translate="yes" xml:space="preserve">
          <source>Unlike the L</source>
          <target state="translated">В отличие от L</target>
        </trans-unit>
        <trans-unit id="00946f20f0f39de3fde945a1c4762c9a2eb54a4d" translate="yes" xml:space="preserve">
          <source>Unlike the old Unix fmt(1) utility, this module correctly accounts for any Unicode combining characters (such as diacriticals) that may occur in each line for both expansion and unexpansion. These are overstrike characters that do not increment the logical position. Make sure you have the appropriate Unicode settings enabled.</source>
          <target state="translated">В отличие от старой утилиты Unix fmt(1),этот модуль корректно учитывает любые комбинации символов Юникода (например,диакритические),которые могут встречаться в каждой строке как при расширении,так и при неизучении.Это переопределенные символы,которые не увеличивают логическое положение.Убедитесь,что включены соответствующие настройки Юникода.</target>
        </trans-unit>
        <trans-unit id="0625a7948b2143bf8fa5b94abdec3d975bedca11" translate="yes" xml:space="preserve">
          <source>Unlike the old unix utilities, this module correctly accounts for any Unicode combining characters (such as diacriticals) that may occur in each line for both expansion and unexpansion. These are overstrike characters that do not increment the logical position. Make sure you have the appropriate Unicode settings enabled.</source>
          <target state="translated">В отличие от старых утилит unix,этот модуль корректно учитывает любые комбинации символов Юникода (например,диакритические знаки),которые могут встречаться в каждой строке как при расширении,так и при нерасширении.Это переопределенные символы,которые не увеличивают логическое положение.Убедитесь,что включены соответствующие настройки Юникода.</target>
        </trans-unit>
        <trans-unit id="bbee11f3129dceedbb755c4927925d533e72e81f" translate="yes" xml:space="preserve">
          <source>Unlike the original coding of this example, the returned values are not accessed in reverse order. So &lt;code&gt;ST(0)&lt;/code&gt; refers to the first value returned by the Perl subroutine and &lt;code&gt;ST(count-1)&lt;/code&gt; refers to the last.</source>
          <target state="translated">В отличие от исходного кода этого примера, к возвращаемым значениям не обращаются в обратном порядке. Итак, &lt;code&gt;ST(0)&lt;/code&gt; относится к первому значению, возвращаемому подпрограммой Perl, а &lt;code&gt;ST(count-1)&lt;/code&gt; относится к последнему.</target>
        </trans-unit>
        <trans-unit id="038e468b7871a7585436a41ba81caefab5eb3568" translate="yes" xml:space="preserve">
          <source>Unlike the stringification operator, there is never any need to append trailing zeros to preserve the correct version value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa5c6301a77bc0d8757cfca2a7141b60979b735" translate="yes" xml:space="preserve">
          <source>Unlike with &lt;a href=&quot;#croak&quot;&gt;&quot;croak&quot;&lt;/a&gt;, &lt;code&gt;pat&lt;/code&gt; is not permitted to be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54921bfadbbc4d5488355e38753c36b606db5127" translate="yes" xml:space="preserve">
          <source>Unlike with &lt;a href=&quot;#croak&quot;&gt;croak&lt;/a&gt;, &lt;code&gt;pat&lt;/code&gt; is not permitted to be null.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#croak&quot;&gt;Croak&lt;/a&gt; , &lt;code&gt;pat&lt;/code&gt; не может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="ae0137e5db1f710b710a9bc0edfaf77e15650ab6" translate="yes" xml:space="preserve">
          <source>Unlike with &lt;a href=&quot;#vcroak&quot;&gt;&quot;vcroak&quot;&lt;/a&gt;, &lt;code&gt;pat&lt;/code&gt; is not permitted to be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7070baa0bba9b5c3411b37157873dd12da55ea" translate="yes" xml:space="preserve">
          <source>Unlike with &lt;a href=&quot;#vcroak&quot;&gt;vcroak&lt;/a&gt;, &lt;code&gt;pat&lt;/code&gt; is not permitted to be null.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#vcroak&quot;&gt;vcroak&lt;/a&gt; , &lt;code&gt;pat&lt;/code&gt; не может быть нулевым.</target>
        </trans-unit>
        <trans-unit id="28eadad196509c659a3994d74f2858a30a637ebf" translate="yes" xml:space="preserve">
          <source>Unlink a file, this wraps &lt;code&gt;unlink()&lt;/code&gt; in a way that makes it more reliable cross-platform when trying to unlink files you recently altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cefcdd918640639ca1153770063f61e285104d" translate="yes" xml:space="preserve">
          <source>Unlink any temporary files you create.</source>
          <target state="translated">Развяжите все временные файлы,которые вы создаете.</target>
        </trans-unit>
        <trans-unit id="3e77881bda9dd47b3e5c55a65b50384eb4b9609f" translate="yes" xml:space="preserve">
          <source>Unloads a previously loaded dynamic-link library. The HANDLE is no longer valid after this call. See &lt;a&gt;LoadLibrary&lt;/a&gt; for information on dynamically loading a library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2c338fa9bfcccaac25268ab0ef12e64490b19e" translate="yes" xml:space="preserve">
          <source>Unlock and close the database.</source>
          <target state="translated">Разблокируйте и закройте базу данных.</target>
        </trans-unit>
        <trans-unit id="425b4daaa8be44cc037fb6c4f8a9c4ee47b576db" translate="yes" xml:space="preserve">
          <source>Unmatched ( in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fca5f2f3ab74092e2301bc93cfd673ca1d5fb7" translate="yes" xml:space="preserve">
          <source>Unmatched ) in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bab1d81d4066140528cdd5b267a8458e21ea97" translate="yes" xml:space="preserve">
          <source>Unmatched [ in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5582b12b8fb1f3004178fe6e1d310ea58d890611" translate="yes" xml:space="preserve">
          <source>Unmatched right %s bracket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2c3a3141852414ad16ff6056e8a91c4d6648f7" translate="yes" xml:space="preserve">
          <source>Unpack the main archive to a temporary location (RAM: is fine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1b8bde43d6985240bfa75345e6d99d943394fd" translate="yes" xml:space="preserve">
          <source>Unpack the result with</source>
          <target state="translated">Распакуйте результат с помощью</target>
        </trans-unit>
        <trans-unit id="add77c91d022a17024fa5eba373c6e719da883a1" translate="yes" xml:space="preserve">
          <source>Unpack the result with &lt;code&gt;tar -xof yourmodule.tar&lt;/code&gt;</source>
          <target state="translated">Распакуйте результат с помощью &lt;code&gt;tar -xof yourmodule.tar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae62392d2b4bc10cbedb53bdaea138dd0c54922e" translate="yes" xml:space="preserve">
          <source>Unpack the source package</source>
          <target state="translated">Распакуйте исходный пакет</target>
        </trans-unit>
        <trans-unit id="3ba56861ba0d7e4bf096f38cb19b9bd9d11ad9ab" translate="yes" xml:space="preserve">
          <source>Unpacking CPAN Modules on DOS</source>
          <target state="translated">Распаковка модулей CPAN на DOS</target>
        </trans-unit>
        <trans-unit id="a3e58138dfa89b35eb5a0a67e0ceb78fe71fb3cd" translate="yes" xml:space="preserve">
          <source>Unpacking Perl Distribution on BS2000</source>
          <target state="translated">Распаковка Perl Distribution на BS2000</target>
        </trans-unit>
        <trans-unit id="1906a11a734d044847362b51bdd5c4ffec722822" translate="yes" xml:space="preserve">
          <source>Unpacking Perl distribution on OS/390</source>
          <target state="translated">Распаковка Perl распределения на OS/390</target>
        </trans-unit>
        <trans-unit id="1bfe6e7e13df7f1f795bc2c142ba9f8933ba83d0" translate="yes" xml:space="preserve">
          <source>Unpacking a Stack Frame</source>
          <target state="translated">Распаковка рамки стека</target>
        </trans-unit>
        <trans-unit id="13585670fad4d52485b4ecff204569086b8b8bc7" translate="yes" xml:space="preserve">
          <source>Unpacking this message can be done with the same template:</source>
          <target state="translated">Распаковка этого сообщения может быть выполнена с помощью того же шаблона:</target>
        </trans-unit>
        <trans-unit id="65ab97485c132c2a06d23b7d99106c078eeca52f" translate="yes" xml:space="preserve">
          <source>Unpacking using the &lt;code&gt;U&lt;/code&gt; template code also works on UTF-8 encoded byte strings.</source>
          <target state="translated">Распаковка с использованием кода шаблона &lt;code&gt;U&lt;/code&gt; также работает с байтовыми строками в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="72bbb6196a2774c03510ad2f9119cf1acefc342b" translate="yes" xml:space="preserve">
          <source>Unqualified &lt;code&gt;dump()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e326cb1d4e10ed2c54308ac7f68f78f28b408a5" translate="yes" xml:space="preserve">
          <source>Unqualified dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99dd6692af960885bd57e60a35c0eb60eb31d7b" translate="yes" xml:space="preserve">
          <source>Unquoted string &quot;%s&quot; may clash with future reserved word</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b032b56f7aa399f0c5a6580292f3e83d7b1fad" translate="yes" xml:space="preserve">
          <source>Unread</source>
          <target state="translated">Unread</target>
        </trans-unit>
        <trans-unit id="630c8dcab3eab70bdc2071c988078d95676c03b2" translate="yes" xml:space="preserve">
          <source>Unrecognized character %s; marked by &amp;lt;-- HERE after %s near column %d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c8af17f83153420d0d873b2861766a589d6251" translate="yes" xml:space="preserve">
          <source>Unrecognized escape \%c in character class in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435719049eae3b64ca346100529a4145c47781d5" translate="yes" xml:space="preserve">
          <source>Unrecognized escape \%c in character class passed through in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f0a236cfaeb24a6d268ae857e2d6c9ca2477d8" translate="yes" xml:space="preserve">
          <source>Unrecognized escape \%c passed through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6680e7a052c1c186addf84b706b28b2f52bdc84d" translate="yes" xml:space="preserve">
          <source>Unrecognized escape \%s passed through in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f5901f9cf23090de8d1e00ed8502304a6736d2" translate="yes" xml:space="preserve">
          <source>Unrecognized signal name &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d60ad24f51432cfcd0acc6a239e8d374b5bdb9a" translate="yes" xml:space="preserve">
          <source>Unrecognized signal name: ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72ab0d0741f2af5e4f61b7913215c68a19c3881" translate="yes" xml:space="preserve">
          <source>Unrecognized switch: -%s (-h will show valid options)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
