<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="1d45edd059b4e41b42c3589d6e9743f7467d5f99" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;//i&lt;/code&gt; , &lt;code&gt;//m&lt;/code&gt; , &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="translated">Большинство модификаторов, таких как &lt;code&gt;//i&lt;/code&gt; , &lt;code&gt;//m&lt;/code&gt; , &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//x&lt;/code&gt; (или любая их комбинация), также могут быть встроены в регулярное выражение с помощью &lt;code&gt;(?i)&lt;/code&gt; , &lt;code&gt;(?m)&lt;/code&gt; , &lt;code&gt;(?s)&lt;/code&gt; и &lt;code&gt;(?x)&lt;/code&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="72e8bb708217ae322b446e074e5a34e7c96fe06c" translate="yes" xml:space="preserve">
          <source>Most modifiers, such as &lt;code&gt;/i&lt;/code&gt;, &lt;code&gt;/m&lt;/code&gt;, &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/x&lt;/code&gt; (or any combination thereof) can also be embedded in a regexp using &lt;code&gt;(?i)&lt;/code&gt;, &lt;code&gt;(?m)&lt;/code&gt;, &lt;code&gt;(?s)&lt;/code&gt;, and &lt;code&gt;(?x)&lt;/code&gt;. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac5f91bfd266adf35f3c08ec6bb8cde72e4223" translate="yes" xml:space="preserve">
          <source>Most multi-user platforms provide basic levels of security, usually implemented at the filesystem level. Some, however, unfortunately do not. Thus the notion of user id, or &quot;home&quot; directory, or even the state of being logged-in, may be unrecognizable on many platforms. If you write programs that are security-conscious, it is usually best to know what type of system you will be running under so that you can write code explicitly for that platform (or class of platforms).</source>
          <target state="translated">Большинство многопользовательских платформ обеспечивают базовые уровни безопасности,обычно реализованные на уровне файловой системы.Некоторые,к сожалению,этого не делают.Таким образом,понятие идентификатора пользователя,или &quot;домашнего&quot; каталога,или даже состояние входа в систему может быть неузнаваемым на многих платформах.Если вы пишете программы,ориентированные на безопасность,то,как правило,лучше всего знать,под каким типом системы вы будете работать,чтобы можно было писать код явно для этой платформы (или класса платформ).</target>
        </trans-unit>
        <trans-unit id="4f6011591757af844f16df1e5c9352c7848a6ec4" translate="yes" xml:space="preserve">
          <source>Most non-EBCDIC character sets are supersets of ASCII. That is the integers 0-127 mean what ASCII says they mean. But integers 128 and above are specific to the character set.</source>
          <target state="translated">Большинство не-EBCDIC наборов символов являются суперсетами ASCII.То есть целые числа 0-127 означают то,что ASCII говорит,что они означают.Но целые числа 128 и выше специфичны для набора символов.</target>
        </trans-unit>
        <trans-unit id="51ca37247d6a69603fb3b1446157e03d96bfa6df" translate="yes" xml:space="preserve">
          <source>Most notable problems:</source>
          <target state="translated">Самые заметные проблемы:</target>
        </trans-unit>
        <trans-unit id="f57027e07ab6e59e959c6b528e3378204e633471" translate="yes" xml:space="preserve">
          <source>Most object systems share a number of common concepts. You've probably heard terms like &quot;class&quot;, &quot;object, &quot;method&quot;, and &quot;attribute&quot; before. Understanding the concepts will make it much easier to read and write object-oriented code. If you're already familiar with these terms, you should still skim this section, since it explains each concept in terms of Perl's OO implementation.</source>
          <target state="translated">Большинство объектных систем имеют ряд общих концепций.Вы,наверное,уже слышали такие термины,как &quot;класс&quot;,&quot;объект&quot;,&quot;метод&quot; и &quot;атрибут&quot;.Понимание этих понятий значительно облегчит чтение и написание объектно-ориентированного кода.Если вы уже знакомы с этими терминами,вам все равно стоит пропустить этот раздел,так как в нем каждая концепция объяснена с точки зрения реализации ООО на Perl.</target>
        </trans-unit>
        <trans-unit id="fe5befa620ff0477f0ac6ba4b4534580f30f2e1e" translate="yes" xml:space="preserve">
          <source>Most obviously, there is the necessity of retrieving the reference address of an object for each data access. It's a minor inconvenience, but it does clutter the code.</source>
          <target state="translated">Очевидно,что для каждого доступа к данным существует необходимость получения ссылочного адреса объекта.Это небольшое неудобство,но это действительно загромождает код.</target>
        </trans-unit>
        <trans-unit id="8966ee4f610a8f12b38c297e5e0e0d5c4c1631d5" translate="yes" xml:space="preserve">
          <source>Most of Params::Check's power comes from its template, which we'll discuss below:</source>
          <target state="translated">Большинство Params::Check's power происходит из его шаблона,о котором мы поговорим ниже:</target>
        </trans-unit>
        <trans-unit id="a5d752e99b47aeed7fefeb002f25a1df93361a60" translate="yes" xml:space="preserve">
          <source>Most of the &lt;code&gt;canonical names&lt;/code&gt; in Encode derive from this list so you can directly apply the string you have extracted from MIME header of mails and web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e899784ab7672ad3b74081e22274bde79fba73" translate="yes" xml:space="preserve">
          <source>Most of the code here was lifted straight from Test::Builder and then had chunks removed by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05844436a81cb2d0dbddab3388c8acb9552fbf" translate="yes" xml:space="preserve">
          <source>Most of the code here was written by Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;.</source>
          <target state="translated">Большая часть кода здесь написана Рэнди В. Симсом &amp;lt;RandyS@ThePierianSpring.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="47b295d947239a228d57f7cff4fa724418821ca3" translate="yes" xml:space="preserve">
          <source>Most of the complete Perl resides in the shareable image</source>
          <target state="translated">Большая часть полного Perl находится в разделяемом изображении.</target>
        </trans-unit>
        <trans-unit id="6e836cc0136a0b6a1e328a42911e15475ce7f8a0" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="translated">Большая часть сложности &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; функции заключается в множестве возможных значений, которые</target>
        </trans-unit>
        <trans-unit id="e8c86ea6cb467b77003f8f36467638e3bb201553" translate="yes" xml:space="preserve">
          <source>Most of the complexity of the &lt;code&gt;open&lt;/code&gt; function lies in the many possible values that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2242570cf48131ca1026e727ff73cf14992345d6" translate="yes" xml:space="preserve">
          <source>Most of the documentation is taken from JSON::XS by Marc Lehmann</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a21567ca84f5f746c9675299dce59640ed18c1d" translate="yes" xml:space="preserve">
          <source>Most of the keywords are self-explanatory.</source>
          <target state="translated">Большинство ключевых слов понятны самим себе.</target>
        </trans-unit>
        <trans-unit id="baa8cd3bbb4c6980245c7cf3aa023db27c3acdb3" translate="yes" xml:space="preserve">
          <source>Most of the libgdbm.a functions are available through the GDBM_File interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25843b853d505c1784c9a338be9b1a848cd1212" translate="yes" xml:space="preserve">
          <source>Most of the libnet client classes allow options to be passed to the constructor, in most cases one option is called &lt;code&gt;Debug&lt;/code&gt;. Passing this option with a non-zero value will turn on a protocol trace, which will be sent to STDERR. This trace can be useful to see what commands are being sent to the remote server and what responses are being received back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31689cece88e6009d6abbf1122159fef235d148d" translate="yes" xml:space="preserve">
          <source>Most of the metacharacters aren't always special, and other characters (such as the ones delimitting the pattern) become special under various circumstances. This can be confusing and lead to unexpected results. &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; can notify you of potential pitfalls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e872c4c8b4e46b1a126dccfdf045e22c43bfe9" translate="yes" xml:space="preserve">
          <source>Most of the other Opcode functions call verify_opset automatically and will croak if given an invalid opset.</source>
          <target state="translated">Большинство других функций Opcode автоматически вызывают verify_opset и при неправильном опсете перекроется.</target>
        </trans-unit>
        <trans-unit id="7be58e4167c6f6d21daa45117bbd585a46416c25" translate="yes" xml:space="preserve">
          <source>Most of the overloadable operators map one-to-one to these keys. Exceptions, including additional overloadable operations not apparent from this hash, are included in the notes which follow. This list is subject to growth over time.</source>
          <target state="translated">Большинство перегруженных операторов сопоставляют эти клавиши один к одному.Исключения,в том числе дополнительные перегрузочные операции,не явные из этого хэша,включены в примечания,которые следуют далее.Этот список со временем может увеличиваться.</target>
        </trans-unit>
        <trans-unit id="6cede88fd0fdf454c10d7b4cebb77c726e122f53" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt; , that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; . (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Smartmatch Operator in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="translated">Большая часть возможностей исходит от неявного интеллектуального сопоставления, которое иногда может применяться. В большинстве случаев, &lt;code&gt;when(EXPR)&lt;/code&gt; рассматривается как неявное интеллектуальное соответствие &lt;code&gt;$_&lt;/code&gt; , то есть &lt;code&gt;$_ ~~ EXPR&lt;/code&gt; . (См. &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Оператор Smartmatch в perlop&lt;/a&gt; для получения дополнительной информации о smartmatching.) Но когда</target>
        </trans-unit>
        <trans-unit id="60478a66b6d520d807ea697e7540d94eb0418ec5" translate="yes" xml:space="preserve">
          <source>Most of the power comes from the implicit smartmatching that can sometimes apply. Most of the time, &lt;code&gt;when(EXPR)&lt;/code&gt; is treated as an implicit smartmatch of &lt;code&gt;$_&lt;/code&gt;, that is, &lt;code&gt;$_ ~~ EXPR&lt;/code&gt;. (See &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;&quot;Smartmatch Operator&quot; in perlop&lt;/a&gt; for more information on smartmatching.) But when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a01cac94bf76dedfa60add1a18fb4b2e641b31" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 15924 four-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться четырехбуквенные коды по умолчанию ISO 15924.</target>
        </trans-unit>
        <trans-unit id="1e2964ea3d337ce474ce4e845493df4592e50a50" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 3166-1 two-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться двубуквенные коды по умолчанию ISO 3166-1.</target>
        </trans-unit>
        <trans-unit id="c51fe921a01a7d85e172a82dee63cf013d880282" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 4217 three-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться трехбуквенные коды по умолчанию ISO 4217.</target>
        </trans-unit>
        <trans-unit id="ad65d964877735755761a49062026c5cbfd01a4c" translate="yes" xml:space="preserve">
          <source>Most of the routines take an optional additional argument which specifies the code set to use. If not specified, the default ISO 639 two-letter codes will be used.</source>
          <target state="translated">Большинство подпрограмм принимают необязательный дополнительный аргумент,который задает код,который будет использоваться.Если он не указан,будут использоваться двубуквенные коды по умолчанию ISO 639.</target>
        </trans-unit>
        <trans-unit id="ecfd9a8718bf7f9a8bea5531a84bc0b93eebafb4" translate="yes" xml:space="preserve">
          <source>Most of the special variables related to regular expressions are side effects. Perl sets these variables when it has a successful match, so you should check the match result before using them. For instance:</source>
          <target state="translated">Большинство специальных переменных,связанных с регулярными выражениями,являются побочными эффектами.Perl устанавливает эти переменные при успешном совпадении,поэтому перед их использованием необходимо проверить результат совпадений.Например:</target>
        </trans-unit>
        <trans-unit id="dd8324ae92ad5052d02cf97e850674cb89e9ea59" translate="yes" xml:space="preserve">
          <source>Most of the time the &lt;code&gt;POP*&lt;/code&gt; macros should be adequate; the main problem with them is that they force you to process the returned values in sequence. This may not be the most suitable way to process the values in some cases. What we want is to be able to access the stack in a random order. The &lt;code&gt;ST&lt;/code&gt; macro as used when coding an XSUB is ideal for this purpose.</source>
          <target state="translated">В большинстве случаев макросов &lt;code&gt;POP*&lt;/code&gt; должно быть достаточно; Основная проблема с ними в том, что они заставляют вас последовательно обрабатывать возвращаемые значения. В некоторых случаях это может быть не самый подходящий способ обработки значений. Мы хотим иметь доступ к стеку в случайном порядке. &lt;code&gt;ST&lt;/code&gt; макро, используемые при кодировании XSUB идеально подходят для этой цели.</target>
        </trans-unit>
        <trans-unit id="2df244eb4bef5a0bc68e79be4405c972c5f0e791" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="translated">В большинстве случаев вам не нужно делать это как веб-фреймворк, или, если вы делаете запрос, &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; или другой модуль обработает его за вас.</target>
        </trans-unit>
        <trans-unit id="48c7e054216d49d1fb2b20eca1334fe1da06b743" translate="yes" xml:space="preserve">
          <source>Most of the time you should not need to do this as your web framework, or if you are making a request, the &lt;a href=&quot;lwp&quot;&gt;LWP&lt;/a&gt; or other module would handle it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ac7b91ccda75dc1e9e26906f34a6b74bf2fc1" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;code&gt;die&lt;/code&gt; is called with a string to use as the exception. You may either give a single non-reference operand to serve as the exception, or a list of two or more items, which will be stringified and concatenated to make the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6eb8148850007d8fa7e26443b2a04c22c7a11f" translate="yes" xml:space="preserve">
          <source>Most of the time, all this moving forward and backtracking happens quickly and searching is fast. There are some pathological regexps, however, whose execution time exponentially grows with the size of the string. A typical structure that blows up in your face is of the form</source>
          <target state="translated">Большую часть времени,все это движение вперед и назад происходит быстро,и поиск происходит быстро.Есть,однако,и патологические регеxps,время исполнения которых экспоненциально растет с размером строки.Типичная структура,которая взрывается перед вашим лицом,имеет форму</target>
        </trans-unit>
        <trans-unit id="e77fec64b4c635ea20e1b59e3b7d5f77ce28d8e0" translate="yes" xml:space="preserve">
          <source>Most of the time, output from the C routine can be handled through use of the RETVAL and OUTPUT directives. However, there are some cases where the argument stack is not already long enough to handle all the return values. An example is the POSIX tzname() call, which takes no arguments, but returns two, the local time zone's standard and summer time abbreviations.</source>
          <target state="translated">Большую часть времени выходные данные из рутины C могут быть обработаны с помощью директив RETVAL и OUTPUT.Однако,бывают случаи,когда стека аргументов уже недостаточно для обработки всех возвращаемых значений.Примером является вызов POSIX tzname(),который не принимает аргументов,но возвращает два-стандартное и летнее время локального часового пояса.</target>
        </trans-unit>
        <trans-unit id="4cf605ff0085f7cdb0263cf668764df45a3b6647" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;//m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;$&lt;/code&gt; ), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="translated">В большинстве случаев поведение по умолчанию - это то, что нужно, но &lt;code&gt;//s&lt;/code&gt; и &lt;code&gt;//m&lt;/code&gt; иногда очень полезны. Если используется &lt;code&gt;//m&lt;/code&gt; , начало строки все еще может быть сопоставлено с &lt;code&gt;\A&lt;/code&gt; а конец строки может быть сопоставлен с привязкой &lt;code&gt;\Z&lt;/code&gt; (совпадает как с концом, так и с новой строкой перед, как &lt;code&gt;$&lt;/code&gt; ), и &lt;code&gt;\z&lt;/code&gt; (соответствует только концу):</target>
        </trans-unit>
        <trans-unit id="89315b4d91e89302d070cbd7a7e6cdb9cab0b050" translate="yes" xml:space="preserve">
          <source>Most of the time, the default behavior is what is wanted, but &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; are occasionally very useful. If &lt;code&gt;/m&lt;/code&gt; is being used, the start of the string can still be matched with &lt;code&gt;\A&lt;/code&gt; and the end of the string can still be matched with the anchors &lt;code&gt;\Z&lt;/code&gt; (matches both the end and the newline before, like &lt;code&gt;'$'&lt;/code&gt;), and &lt;code&gt;\z&lt;/code&gt; (matches only the end):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fd6c425f6aad23df3156037ea683dfee498467" translate="yes" xml:space="preserve">
          <source>Most of the time, the longest possible text that does not include spaces between components and which contains matching braces or brackets. because the outcome may be determined by voting based on heuristic estimators, the result is not strictly predictable. Fortunately, it's usually correct for ambiguous cases.</source>
          <target state="translated">В большинстве случаев самый длинный текст,не содержащий пробелов между компонентами и содержащий соответствующие скобки или скобки.так как результат может быть определен путем голосования на основе эвристических оценок,результат не является строго предсказуемым.К счастью,обычно он верен в неоднозначных случаях.</target>
        </trans-unit>
        <trans-unit id="b3fb5476790113a0dea04a1d528889b51b315f83" translate="yes" xml:space="preserve">
          <source>Most of the time, this warning occurs when a byte-string is concatenated with a unicode-string. There are a number of ways to solve it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faff5fae267b68e66a542eebf06c3a2fb20f6315" translate="yes" xml:space="preserve">
          <source>Most of the time, though, you'll want to be dealing with SVs internally instead of raw &lt;code&gt;char *&lt;/code&gt; strings:</source>
          <target state="translated">Однако в большинстве случаев вам нужно иметь дело с SV внутри себя, а не с необработанными строками &lt;code&gt;char *&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3da35f6fb8f67dff58b56670aaa5e754c6ece5e" translate="yes" xml:space="preserve">
          <source>Most of the time, you shouldn't care what package an object is blessed into, however, as long as it claims to inherit from that class:</source>
          <target state="translated">В большинстве случаев,однако,вас не должно волновать,в какой пакет благословен тот или иной объект,если он утверждает,что унаследовал от этого класса:</target>
        </trans-unit>
        <trans-unit id="70ed3f1e9ec3872fc596a127d78b3433084d76ac" translate="yes" xml:space="preserve">
          <source>Most of the time, you will need only a single set of angle brackets to delimit the beginning and end of formatting codes. However, sometimes you will want to put a real right angle bracket (a greater-than sign, '&amp;gt;') inside of a formatting code. This is particularly common when using a formatting code to provide a different font-type for a snippet of code. As with all things in Perl, there is more than one way to do it. One way is to simply escape the closing bracket using an &lt;code&gt;E&lt;/code&gt; code:</source>
          <target state="translated">В большинстве случаев вам понадобится только один набор угловых скобок для разграничения начала и конца кодов форматирования. Однако иногда вам может понадобиться поместить настоящую правую угловую скобку (знак &amp;laquo;больше&amp;raquo;, &amp;laquo;&amp;gt;&amp;raquo;) внутри кода форматирования. Это особенно часто встречается при использовании кода форматирования для предоставления другого типа шрифта для фрагмента кода. Как и все в Perl, есть несколько способов сделать это. Один из способов - просто выйти из закрывающей скобки с помощью кода &lt;code&gt;E&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c0c2da0623840fbe23f26b030382d27c35d7bca2" translate="yes" xml:space="preserve">
          <source>Most of the work involved in both rounding up a suitable set of candidate commits and cherry-picking those for which three votes have been cast will be done by the maint branch release manager, but anyone else is free to add other proposals if they're keen to ensure certain fixes don't get overlooked or fear they already have been.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a76b549a2e76bc9ab35aacf508ff92c207228" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;), sockets (&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt; and &lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;), and directory handles (&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt; , though it is deprecated as of 5.8.0. If deprecation warnings are in effect, it will warn of its use.</source>
          <target state="translated">Большинство из них говорят сами за себя, но &lt;code&gt;*foo{IO}&lt;/code&gt; заслуживает особого внимания. Он возвращает дескриптор ввода-вывода, используемый для дескрипторов файлов ( &lt;a href=&quot;functions/open&quot;&gt;открытых&lt;/a&gt; ), сокетов ( &lt;a href=&quot;functions/socket&quot;&gt;сокетов&lt;/a&gt; и &lt;a href=&quot;functions/socketpair&quot;&gt;пар сокетов&lt;/a&gt; ) и дескрипторов каталогов ( &lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt; ). Для совместимости с предыдущими версиями Perl &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; является синонимом &lt;code&gt;*foo{IO}&lt;/code&gt; , хотя в версии 5.8.0 он устарел. Если действуют предупреждения об устаревании, он предупредит о его использовании.</target>
        </trans-unit>
        <trans-unit id="852ae11a8260d83d3745e4dd9b3fd5be0e936389" translate="yes" xml:space="preserve">
          <source>Most of these are self-explanatory, but &lt;code&gt;*foo{IO}&lt;/code&gt; deserves special attention. It returns the IO handle, used for file handles (&lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;), sockets (&lt;a href=&quot;perlfunc#socket&quot;&gt;&quot;socket&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#socketpair&quot;&gt;&quot;socketpair&quot; in perlfunc&lt;/a&gt;), and directory handles (&lt;a href=&quot;perlfunc#opendir&quot;&gt;&quot;opendir&quot; in perlfunc&lt;/a&gt;). For compatibility with previous versions of Perl, &lt;code&gt;*foo{FILEHANDLE}&lt;/code&gt; is a synonym for &lt;code&gt;*foo{IO}&lt;/code&gt;, though it is discouraged, to encourage a consistent use of one name: IO. On perls between v5.8 and v5.22, it will issue a deprecation warning, but this deprecation has since been rescinded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869a6315acbbfb1f37efec8298474bbe72ca1495" translate="yes" xml:space="preserve">
          <source>Most of these books are available online through Safari Books Online ( &lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt; ).</source>
          <target state="translated">Большинство этих книг доступны в Интернете через Интернет-версию Safari ( &lt;a href=&quot;http://safaribooksonline.com/&quot;&gt;http://safaribooksonline.com/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b1e0ab2dbc899b58b14484449b9fa1ef61ed05b" translate="yes" xml:space="preserve">
          <source>Most of these examples taken from the current edition of the &amp;ldquo;Camel Book&amp;rdquo;; that is, from the 4ᵗʰ Edition of</source>
          <target state="translated">Большинство этих примеров взято из текущего издания &amp;laquo;Книги верблюдов&amp;raquo;; то есть из 4ᵗʰ издания</target>
        </trans-unit>
        <trans-unit id="24aedca2a61e00a967c1839f41c7571c0b40465f" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;&quot;Background and PERL_IMPLICIT_CONTEXT&quot; in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d786698e017d5ef7ad504f1d9efc84667a246c11" translate="yes" xml:space="preserve">
          <source>Most of these macros are explained in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;, and some of the more important ones are explained in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; as well. Pay special attention to &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT in perlguts&lt;/a&gt; for information on the &lt;code&gt;[pad]THX_?&lt;/code&gt; macros.</source>
          <target state="translated">Большинство этих макросов объясняются в &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; , а некоторые из наиболее важных также объясняются в &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; . Обратите особое внимание на &lt;a href=&quot;perlguts#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background и PERL_IMPLICIT_CONTEXT в perlguts&lt;/a&gt; для получения информации о &lt;code&gt;[pad]THX_?&lt;/code&gt; макросы.</target>
        </trans-unit>
        <trans-unit id="028b0ff743d4839b575a9715a3960dc1ea4b9750" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6321c8bc65f6128425ae15e80b31cb962b1699f" translate="yes" xml:space="preserve">
          <source>Most of these make up for limitations in the Win9x/nmake command shell. Mostly its lack of &amp;amp;&amp;amp;.</source>
          <target state="translated">Большинство из них компенсируют ограничения командной оболочки Win9x / nmake. В основном это отсутствие &amp;amp;&amp;amp;.</target>
        </trans-unit>
        <trans-unit id="30b8e48b7b6d88d36a47fc7a0d1827819d55e75f" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="translated">Большинство этих подпрограмм тихо, но вежливо возвращают &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , когда они терпят неудачу, вместо того, чтобы заставить вашу программу немедленно умереть из-за неперехваченного исключения. (Собственно, некоторые из новых</target>
        </trans-unit>
        <trans-unit id="9a0bed061702626e79ddbe0cbac46eae45c7bc32" translate="yes" xml:space="preserve">
          <source>Most of these routines quietly but politely return &lt;code&gt;undef&lt;/code&gt; when they fail instead of causing your program to die right then and there due to an uncaught exception. (Actually, some of the new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fac36536fdd9d69b572662cd260a78171c7378" translate="yes" xml:space="preserve">
          <source>Most of this section is also taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2deedfc22b1548df052896f1f0722aefc9eea1ec" translate="yes" xml:space="preserve">
          <source>Most often, &lt;code&gt;open&lt;/code&gt; gets invoked with three arguments: the required FILEHANDLE (usually an empty scalar variable), followed by MODE (usually a literal describing the I/O mode the filehandle will use), and then the filename that the new filehandle will refer to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4759d0bf1837078279cedaffe79b3b9844ef0d71" translate="yes" xml:space="preserve">
          <source>Most often, the real question is how you can delete the last N lines without making more than one pass over the file, or how to do it without a lot of copying. The easy concept is the hard reality when you might have millions of lines in your file.</source>
          <target state="translated">Чаще всего,реальный вопрос заключается в том,как можно удалить последние N строк,не делая более одного прохода по файлу,или как это сделать без большого количества копирования.Простой концепцией является жесткая реальность,когда в вашем файле могут быть миллионы строк.</target>
        </trans-unit>
        <trans-unit id="c39bff964e11a5bf3472bbb0b25d07ba29893372" translate="yes" xml:space="preserve">
          <source>Most paragraphs in your documentation will be ordinary blocks of text, like this one. You can simply type in your text without any markup whatsoever, and with just a blank line before and after. When it gets formatted, it will undergo minimal formatting, like being rewrapped, probably put into a proportionally spaced font, and maybe even justified.</source>
          <target state="translated">Большинство параграфов в Вашей документации будут обычными блоками текста,как этот.Вы можете просто набирать текст без какой-либо разметки и с помощью пустой строки до и после.Когда он будет отформатирован,он подвергнется минимальному форматированию,например,будет перематываться,возможно,будет помещен в пропорционально разделенный шрифт,и,возможно,даже оправдан.</target>
        </trans-unit>
        <trans-unit id="758d5aaffea254b4a108f5a7e332dc97c651824c" translate="yes" xml:space="preserve">
          <source>Most people mean that greedy regexes match as much as they can. Technically speaking, it's actually the quantifiers (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; ) that are greedy rather than the whole pattern; Perl prefers local greed and immediate gratification to overall greed. To get non-greedy versions of the same quantifiers, use (&lt;code&gt;??&lt;/code&gt; , &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{}?&lt;/code&gt;).</source>
          <target state="translated">Большинство людей имеют в виду, что жадные регулярные выражения соответствуют настолько, насколько это возможно. С технической точки зрения, на самом деле жадными являются кванторы ( &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; ), А не весь шаблон; Perl предпочитает локальную жадность и немедленное удовлетворение общей жадности. Для того, чтобы получить не-жадные версии одного и того же кванторов, использование ( &lt;code&gt;??&lt;/code&gt; , &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt; , &lt;code&gt;{}?&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="61da54e1705a16eee7e2b6ceef3fefda6354d4c3" translate="yes" xml:space="preserve">
          <source>Most people mean that greedy regexes match as much as they can. Technically speaking, it's actually the quantifiers (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;) that are greedy rather than the whole pattern; Perl prefers local greed and immediate gratification to overall greed. To get non-greedy versions of the same quantifiers, use (&lt;code&gt;??&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{}?&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d247005e28d9890e433308bb61b16e11eb364199" translate="yes" xml:space="preserve">
          <source>Most people try to use the time rather than the calendar to figure out dates, but that assumes that days are twenty-four hours each. For most people, there are two days a year when they aren't: the switch to and from summer time throws this off. For example, the rest of the suggestions will be wrong sometimes:</source>
          <target state="translated">Большинство людей пытаются использовать время,а не календарь,чтобы вычислить даты,но это предполагает,что дни-это 24 часа в сутки каждый.Для большинства людей есть два дня в году,когда их нет:переход на летнее время и обратно сбрасывает это напряжение.Например,остальные предложения иногда ошибаются:</target>
        </trans-unit>
        <trans-unit id="07b59a28d545dc68a00653586a9af9908a625c7c" translate="yes" xml:space="preserve">
          <source>Most platforms these days structure files in a hierarchical fashion. So, it is reasonably safe to assume that all platforms support the notion of a &quot;path&quot; to uniquely identify a file on the system. How that path is really written, though, differs considerably.</source>
          <target state="translated">Большинство платформ в наши дни структурируют файлы в иерархическом порядке.Таким образом,можно с достаточной степенью уверенности предположить,что все платформы поддерживают понятие &quot;путь&quot; для уникальной идентификации файла в системе.Однако,то,как этот путь действительно написан,значительно отличается.</target>
        </trans-unit>
        <trans-unit id="f5162bd3aaf5f209ead52eacd74062b771e3c04c" translate="yes" xml:space="preserve">
          <source>Most probably the most convenient form. Under OS/2 view it as</source>
          <target state="translated">Скорее всего,самая удобная форма.В разделе OS/2 рассматривайте его как</target>
        </trans-unit>
        <trans-unit id="b3219374aa50766aeb504023a6090322d39aaeb1" translate="yes" xml:space="preserve">
          <source>Most problems with &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; arise because the programmer thinks they have a number but really it's a string or vice versa. To avoid this, stringify the arguments explicitly (using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq()&lt;/a&gt;&lt;/code&gt;) or convert them to numbers explicitly (using &lt;code&gt;0+$arg&lt;/code&gt; ). The rest arise because the programmer says:</source>
          <target state="translated">Большинство проблем с &lt;code&gt;&amp;amp;&lt;/code&gt; и &lt;code&gt;|&lt;/code&gt; возникают потому, что программист думает, что у них есть число, но на самом деле это строка, или наоборот. Чтобы избежать этого, явно преобразовывайте аргументы в строку (используя &lt;code&gt;&quot;&quot;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq()&lt;/a&gt;&lt;/code&gt; ) или явно преобразуйте их в числа (используя &lt;code&gt;0+$arg&lt;/code&gt; ). Остальные возникают потому, что программист говорит:</target>
        </trans-unit>
        <trans-unit id="2718676853f0e2fd758f4f8f6b37c17469ccfcd0" translate="yes" xml:space="preserve">
          <source>Most problems with &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; arise because the programmer thinks they have a number but really it's a string or vice versa. To avoid this, stringify the arguments explicitly (using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;qq()&lt;/code&gt;) or convert them to numbers explicitly (using &lt;code&gt;0+$arg&lt;/code&gt;). The rest arise because the programmer says:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97498d9b162518efa835ea3e4a21ab0beffd2067" translate="yes" xml:space="preserve">
          <source>Most programming languages don't shelter the memory where variables are stored. In C, for instance, you can take the address of some variable, and the &lt;code&gt;sizeof&lt;/code&gt; operator tells you how many bytes are allocated to the variable. Using the address and the size, you may access the storage to your heart's content.</source>
          <target state="translated">Большинство языков программирования не защищают память, в которой хранятся переменные. В C, например, вы можете взять адрес некоторой переменной, а оператор &lt;code&gt;sizeof&lt;/code&gt; сообщает вам, сколько байтов выделено для переменной. Используя адрес и размер, вы можете получить доступ к хранилищу сколько душе угодно.</target>
        </trans-unit>
        <trans-unit id="098186d7a29b8f65f8c838a2e5b2830d1de6af62" translate="yes" xml:space="preserve">
          <source>Most properties match the same code points regardless of whether &lt;code&gt;&quot;/i&quot;&lt;/code&gt; case-insensitive matching is specified or not. But a few properties are affected. These are shown with the notation &lt;code&gt;(/i= &lt;i&gt;other_property&lt;/i&gt;)&lt;/code&gt; in the second column. Under case-insensitive matching they match the same code pode points as the property</source>
          <target state="translated">Большинство свойств соответствуют одним и тем же кодовым точкам независимо от того, указано ли совпадение без учета регистра &lt;code&gt;&quot;/i&quot;&lt;/code&gt; или нет. Но затронуты некоторые свойства. Они показаны с обозначением &lt;code&gt;(/i= &lt;i&gt;other_property&lt;/i&gt;)&lt;/code&gt; во втором столбце. При сопоставлении без учета регистра они соответствуют тем же точкам кода, что и свойство</target>
        </trans-unit>
        <trans-unit id="93f39d1fecbeea5d31df34771fb4dfaa8600c5c6" translate="yes" xml:space="preserve">
          <source>Most ranges are unportable between character sets, but certain ones signal Perl to do special handling to make them portable. There are two classes of portable ranges. The first are any subsets of the ranges &lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt;, and &lt;code&gt;0-9&lt;/code&gt;, when expressed as literal characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7b30461e5f88919bb6524b261e1fbc23c8866" translate="yes" xml:space="preserve">
          <source>Most scripts should print some type of usage message to &lt;code&gt;STDERR&lt;/code&gt; when a command line syntax error is detected. They should also provide an option (usually &lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;-help&lt;/code&gt; ) to print a (possibly more verbose) usage message to &lt;code&gt;STDOUT&lt;/code&gt; . Some scripts may even wish to go so far as to provide a means of printing their complete documentation to &lt;code&gt;STDOUT&lt;/code&gt; (perhaps by allowing a &lt;code&gt;-man&lt;/code&gt; option). The following complete example uses &lt;b&gt;Pod::Usage&lt;/b&gt; in combination with &lt;b&gt;Getopt::Long&lt;/b&gt; to do all of these things:</source>
          <target state="translated">Большинство сценариев должны выводить сообщение об использовании определенного типа в &lt;code&gt;STDERR&lt;/code&gt; при обнаружении синтаксической ошибки командной строки. Они также должны предоставить параметр (обычно &lt;code&gt;-H&lt;/code&gt; или &lt;code&gt;-help&lt;/code&gt; ) для вывода (возможно, более подробного) сообщения об использовании в &lt;code&gt;STDOUT&lt;/code&gt; . Некоторые сценарии могут даже захотеть зайти так далеко, чтобы предоставить средства печати всей документации в &lt;code&gt;STDOUT&lt;/code&gt; (возможно, с помощью опции &lt;code&gt;-man&lt;/code&gt; ). В следующем полном примере &lt;b&gt;Pod :: Usage используется&lt;/b&gt; в сочетании с &lt;b&gt;Getopt :: Long&lt;/b&gt; для выполнения всех этих действий:</target>
        </trans-unit>
        <trans-unit id="65b0d0948142b7ec60acd9bde4f4e302c30d9528" translate="yes" xml:space="preserve">
          <source>Most scripts should print some type of usage message to &lt;code&gt;STDERR&lt;/code&gt; when a command line syntax error is detected. They should also provide an option (usually &lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;-help&lt;/code&gt;) to print a (possibly more verbose) usage message to &lt;code&gt;STDOUT&lt;/code&gt;. Some scripts may even wish to go so far as to provide a means of printing their complete documentation to &lt;code&gt;STDOUT&lt;/code&gt; (perhaps by allowing a &lt;code&gt;-man&lt;/code&gt; option). The following complete example uses &lt;b&gt;Pod::Usage&lt;/b&gt; in combination with &lt;b&gt;Getopt::Long&lt;/b&gt; to do all of these things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2986b3da9e25c6ac2c76862bdb207bac32623aca" translate="yes" xml:space="preserve">
          <source>Most sequences are described in detail in different documents; the primary purpose of this document is to have a quick reference guide describing all backslash and escape sequences.</source>
          <target state="translated">Большинство последовательностей подробно описаны в различных документах;основная цель этого документа-иметь краткое справочное руководство,описывающее все последовательности обратного слеша и эвакуации.</target>
        </trans-unit>
        <trans-unit id="6cf7387c1ea7a96beacd0b59cccd9572dbbcde67" translate="yes" xml:space="preserve">
          <source>Most sites usually disable this feature in their SMTP service configuration. Use &quot;Debug =&amp;gt; 1&quot; option under new() to see if disabled.</source>
          <target state="translated">Большинство сайтов обычно отключают эту функцию в своей конфигурации службы SMTP. Используйте параметр &amp;laquo;Debug =&amp;gt; 1&amp;raquo; в new (), чтобы проверить, отключена ли.</target>
        </trans-unit>
        <trans-unit id="805a1b088f4235fc8495203b21cfd64c3f92735f" translate="yes" xml:space="preserve">
          <source>Most socket programming assumes ASCII character encodings in network byte order. Exceptions can include CGI script writing under a host web server where the server may take care of translation for you. Most host web servers convert EBCDIC data to ISO-8859-1 or Unicode on output.</source>
          <target state="translated">Большинство программ сокетов предполагает кодировку ASCII-символов в сетевом порядке байт.Исключениями могут быть написание CGI скриптов под веб-сервером хоста,где сервер может позаботиться о переводе за вас.Большинство хостовых веб-серверов конвертируют данные EBCDIC в ISO-8859-1 или Unicode на выходе.</target>
        </trans-unit>
        <trans-unit id="29ff99325371b7f580464c1d1eca725c963c97f2" translate="yes" xml:space="preserve">
          <source>Most software projects begin each file with a literal description of each file's purpose. Perl instead begins each with a literary allusion to that file's purpose.</source>
          <target state="translated">Большинство программных проектов начинают каждый файл с буквального описания назначения каждого файла.Вместо этого Perl начинает каждый с литературной ссылки на назначение этого файла.</target>
        </trans-unit>
        <trans-unit id="db6c865df11697d9eda20f45a2680b42a8a01010" translate="yes" xml:space="preserve">
          <source>Most source code ceases to be grammatically correct when it is broken up into the pieces between string literals and regexes. So the &lt;code&gt;'code'&lt;/code&gt; and &lt;code&gt;'code_no_comments'&lt;/code&gt; component filter behave slightly differently from the other partial filters described in the previous section.</source>
          <target state="translated">Большая часть исходного кода перестает быть грамматически правильным, когда он разбивается на части между строковыми литералами и регулярными выражениями. Таким образом, &lt;code&gt;'code_no_comments'&lt;/code&gt; компонентов &lt;code&gt;'code'&lt;/code&gt; и code_no_comments ведут себя несколько иначе, чем другие частичные фильтры, описанные в предыдущем разделе.</target>
        </trans-unit>
        <trans-unit id="335be1d7a3acfa7558b1ff815c489a483910fb62" translate="yes" xml:space="preserve">
          <source>Most subroutines documented in this module have equivalent versions that operate on references to hashes instead of native hashes. The following is a list of these subs. They are identical except in name and in that instead of taking a %hash they take a $hashref, and additionally are not prototyped.</source>
          <target state="translated">Большинство подпрограмм,документированных в этом модуле,имеют эквивалентные версии,которые работают со ссылками на хэши,а не нативные хэши.Ниже приведен список этих подпрограмм.Они идентичны,за исключением имени,и в том,что вместо того,чтобы взять %hash,они берут $hashref,и,кроме того,не являются прототипами.</target>
        </trans-unit>
        <trans-unit id="673b355050421a0f250c2913c779df1badafbdd4" translate="yes" xml:space="preserve">
          <source>Most systems do not bother to return anything useful in $timeleft, so calling select() in scalar context just returns $nfound.</source>
          <target state="translated">Большинство систем не утруждают себя возвратом чего-либо полезного в $timeleft,поэтому вызов select()в скалярном контексте просто возвращает $nfound.</target>
        </trans-unit>
        <trans-unit id="aa8cbac972b9177f5aed2cfd37309a35a3aa9a5f" translate="yes" xml:space="preserve">
          <source>Most systems do not bother to return anything useful in &lt;code&gt;$timeleft&lt;/code&gt;, so calling &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; in scalar context just returns &lt;code&gt;$nfound&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be0e0cacadb003a014aeecaa66260a81fb37a7" translate="yes" xml:space="preserve">
          <source>Most tasks only require a small subset of the Perl language. One of the guiding mottos for Perl development is &quot;there's more than one way to do it&quot; (TMTOWTDI, sometimes pronounced &quot;tim toady&quot;). Perl's learning curve is therefore shallow (easy to learn) and long (there's a whole lot you can do if you really want).</source>
          <target state="translated">Для большинства задач требуется лишь небольшое подмножество языка Perl.Один из руководящих девизов для развития Perl-&quot;есть несколько способов сделать это&quot; (TMTOWTDI,иногда произносится как &quot;tim toady&quot;).Поэтому кривая обучения Perl неглубокая (легкая для изучения)и длинная (есть много чего,что вы можете сделать,если действительно хотите).</target>
        </trans-unit>
        <trans-unit id="c9cf8e4a405ae90922b90be3b50350defeef4763" translate="yes" xml:space="preserve">
          <source>Most times, the pattern is evaluated in double-quotish context, but it is possible to choose delimiters to force single-quotish, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6ff5de9e8fc03a10f36de6d162848c70fb3768" translate="yes" xml:space="preserve">
          <source>Most useful when you can't depend on the test output order, such as when threads or forking is involved.</source>
          <target state="translated">Наиболее полезно,когда вы не можете зависеть от порядка вывода результатов теста,например,когда речь идет о потоках или развилке.</target>
        </trans-unit>
        <trans-unit id="d352875a4c7ac21070cf3a1cd4743c30a9c2d0b1" translate="yes" xml:space="preserve">
          <source>Mount a different file system structure without changing login or accounting information.</source>
          <target state="translated">Смонтировать другую структуру файловой системы без изменения логина или учетной информации.</target>
        </trans-unit>
        <trans-unit id="573dd2c2ed953b97e3c31f3090925fe92109b779" translate="yes" xml:space="preserve">
          <source>Mouse</source>
          <target state="translated">Mouse</target>
        </trans-unit>
        <trans-unit id="76cdb950721642b6b8596d36d5a39f7705028b99" translate="yes" xml:space="preserve">
          <source>Move</source>
          <target state="translated">Move</target>
        </trans-unit>
        <trans-unit id="b9c654f6de08d2f23a43dc1905efaf207281f877" translate="yes" xml:space="preserve">
          <source>Move on to the second group and pick the first alternative 'df'.</source>
          <target state="translated">Переходим ко второй группе и выбираем первый вариант &quot;df&quot;.</target>
        </trans-unit>
        <trans-unit id="656251711514e69bd101328e64271cab684cd5f2" translate="yes" xml:space="preserve">
          <source>Move on to the third element '.*'. Since we are at the end of the string and '.*' can match 0 times, assign it the empty string.</source>
          <target state="translated">Переходим к третьему элементу &quot;.*&quot;.Так как мы находимся в конце строки и '.*' может соответствовать 0 раз,присваиваем ему пустую строку.</target>
        </trans-unit>
        <trans-unit id="a05a5599f4ff1f6f057b4c325aeb15095e59f574" translate="yes" xml:space="preserve">
          <source>Move the file's read/write position. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">Переместить позицию файла для чтения / записи. При этом используются файловые дескрипторы, например, полученные при вызове &lt;code&gt;POSIX::open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc1e9ef37151e0b1e126ddb3041bc5885f75355" translate="yes" xml:space="preserve">
          <source>Move the file's read/write position. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222e9fd8bd8c25e24b2a3f8a53104c5ee2a7923b" translate="yes" xml:space="preserve">
          <source>MoveD</source>
          <target state="translated">MoveD</target>
        </trans-unit>
        <trans-unit id="80fa2eaea134b0cd5569d0e8ca67b027b0a7ab32" translate="yes" xml:space="preserve">
          <source>MoveFile</source>
          <target state="translated">MoveFile</target>
        </trans-unit>
        <trans-unit id="ff3e3393da77e789dbcbb3a42c7951722bbe29e4" translate="yes" xml:space="preserve">
          <source>MoveFileEx</source>
          <target state="translated">MoveFileEx</target>
        </trans-unit>
        <trans-unit id="92862065f1668adaa1d1045b66d5bf772503cc43" translate="yes" xml:space="preserve">
          <source>MoveFileExW</source>
          <target state="translated">MoveFileExW</target>
        </trans-unit>
        <trans-unit id="f8eb80496378f80b4e51f94af632152cabf7dadd" translate="yes" xml:space="preserve">
          <source>MoveFileW</source>
          <target state="translated">MoveFileW</target>
        </trans-unit>
        <trans-unit id="5c049050655e528eff7cc66a0c1978dd42e900ba" translate="yes" xml:space="preserve">
          <source>Moved from &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2278daf64913fd58204056d82689681803a8cd5" translate="yes" xml:space="preserve">
          <source>Moved from Perl 5.10.1 to CPAN</source>
          <target state="translated">Перемещен с Перла 5.10.1 на CPAN</target>
        </trans-unit>
        <trans-unit id="99a21ee175eac25359a901bcbda82fe551ce8663" translate="yes" xml:space="preserve">
          <source>Moved from Perl 5.9.0 to CPAN</source>
          <target state="translated">Перемещен с Perl 5,9,0 на CPAN</target>
        </trans-unit>
        <trans-unit id="5de42d916e82311c864672d75f077c9b2068801a" translate="yes" xml:space="preserve">
          <source>Moved out of &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; &amp;amp; converted to a factory class to support extensible TAP source detective work by Steve Purkis.</source>
          <target state="translated">Перемещен из &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; и преобразован в фабричный класс для поддержки расширяемой детективной работы Стива Пуркиса по источнику TAP.</target>
        </trans-unit>
        <trans-unit id="ea7e6117e52e814be500d918ab6f4d7fa770c757" translate="yes" xml:space="preserve">
          <source>Moved out of &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; &amp;amp; converted to a factory class to support extensible TAP source detective work by Steve Purkis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06473ac4424aa3537730dc5fa59fd056a6719bfb" translate="yes" xml:space="preserve">
          <source>Moved to Changes file.</source>
          <target state="translated">Перемещен в файл &quot;Изменения&quot;.</target>
        </trans-unit>
        <trans-unit id="a36390af19221c7ada243c00a81cdf9c9fd9cb46" translate="yes" xml:space="preserve">
          <source>Moved to the Changes file.</source>
          <target state="translated">Перешел к файлу &quot;Изменения&quot;.</target>
        </trans-unit>
        <trans-unit id="04735508f82cd9b0551e1cf6d2f2c73c1c36e575" translate="yes" xml:space="preserve">
          <source>Moves source to destination. Multiple sources are allowed if destination is an existing directory.</source>
          <target state="translated">Перемещает источник к месту назначения.Допускается использование нескольких источников,если целью является существующий каталог.</target>
        </trans-unit>
        <trans-unit id="65cd4dd8114610f7bacc1f81bb9dd01a137f162f" translate="yes" xml:space="preserve">
          <source>Moving</source>
          <target state="translated">Moving</target>
        </trans-unit>
        <trans-unit id="5dc46ce92133770b3cb0566e53187390443c015a" translate="yes" xml:space="preserve">
          <source>Moving to perl5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43ac9463df3e2d50948534cdbda94703301864a" translate="yes" xml:space="preserve">
          <source>Much better!</source>
          <target state="translated">Намного лучше!</target>
        </trans-unit>
        <trans-unit id="baae2905164a527d46c5511d6f6cde4ac79fa8cd" translate="yes" xml:space="preserve">
          <source>Multi-argument form of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; allows an additional numeric argument. The meaning of this argument is described in &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2::Process&lt;/a&gt;.</source>
          <target state="translated">Форма с несколькими аргументами &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; допускает дополнительный числовой аргумент. Значение этого аргумента описано в &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2 :: Process&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85c2b4322d0dcbe5e345ade2ce04fea2a4d2add9" translate="yes" xml:space="preserve">
          <source>Multi-argument form of &lt;code&gt;system()&lt;/code&gt; allows an additional numeric argument. The meaning of this argument is described in &lt;a href=&quot;OS2::Process&quot;&gt;OS2::Process&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9857028e641dc5456ee948176f4473c16db09596" translate="yes" xml:space="preserve">
          <source>Multi-dimensional array emulation</source>
          <target state="translated">Многомерная эмуляция массивов</target>
        </trans-unit>
        <trans-unit id="953b15a9991dd3cf45d05422ed2057e683840ca2" translate="yes" xml:space="preserve">
          <source>Multi-threaded</source>
          <target state="translated">Multi-threaded</target>
        </trans-unit>
        <trans-unit id="c69c3d945e47dae4c99c3ab199d1b9d455504d13" translate="yes" xml:space="preserve">
          <source>Multi-threaded operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57aac3c240d3e0ac36b471e64758ed7bdabec310" translate="yes" xml:space="preserve">
          <source>MultiEdit</source>
          <target state="translated">MultiEdit</target>
        </trans-unit>
        <trans-unit id="450c5aa974c7a5f408f5a12f136ca88727d8798b" translate="yes" xml:space="preserve">
          <source>MultiHomed</source>
          <target state="translated">MultiHomed</target>
        </trans-unit>
        <trans-unit id="4844caf78b10cf385ed68d57ca4c64d998065cbb" translate="yes" xml:space="preserve">
          <source>Multiblock count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f531e0d77ec76c8767bb9e4fb3934a040894292" translate="yes" xml:space="preserve">
          <source>Multicall Functions</source>
          <target state="translated">Многофункциональность</target>
        </trans-unit>
        <trans-unit id="498682cb179ef81881fc0701c5fef4200dc2318b" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays may be emulated by subscripting a hash with a list. The elements of the list are joined with the subscript separator (see &lt;a href=&quot;perlvar#%24%3B&quot;&gt;&quot;$;&quot; in perlvar&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f46258b912e10d35fd5082f358a2c20442fe00" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays may be emulated by subscripting a hash with a list. The elements of the list are joined with the subscript separator (see &lt;a href=&quot;perlvar#%24%3b&quot;&gt;$; in perlvar&lt;/a&gt;).</source>
          <target state="translated">Многомерные массивы могут быть эмулированы с помощью индексации хэша со списком. Элементы списка объединяются разделителем &lt;a href=&quot;perlvar#%24%3b&quot;&gt;нижнего&lt;/a&gt; индекса (см. $; В perlvar ).</target>
        </trans-unit>
        <trans-unit id="8f938af18a3f6f3ad92f399fa7884135f73cf19e" translate="yes" xml:space="preserve">
          <source>Multidimensional syntax %s not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4270bb13db0a8c118eef1b6d5f8e97e9e384c0" translate="yes" xml:space="preserve">
          <source>Multiline commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dfb27b6e58426cb7118d4abc1cd99a64af78a3" translate="yes" xml:space="preserve">
          <source>Multiple &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; declarations. Unlike a second &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; declaration, which will bind the name to a fresh variable, a second &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b29c6623047ed312fa13a7468cb3a2585d42cc" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;-M&lt;/code&gt; options are processed from left to right. So this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f96f856d2f7161b69ace4cbe667d2f05f5d119" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declarations. Unlike a second &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declaration, which will bind the name to a fresh variable, a second &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="translated">Допускается использование нескольких &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявлений с одним и тем же именем в одной лексической области, если они находятся в разных пакетах. Если они находятся в одном пакете, Perl выдаст предупреждения, если вы их запросили, как и несколько &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; объявлений. В отличие от второго &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; объявления, которое привяжет имя к новой переменной, второе &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявление в том же пакете, в той же области видимости просто избыточно.</target>
        </trans-unit>
        <trans-unit id="9985bd0ec5a4c016728a57fca407ec3ba9776cda" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declarations. Unlike a second &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declaration, which will bind the name to a fresh variable, a second &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="translated">Допускается использование нескольких &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявлений с одним и тем же именем в одной лексической области, если они находятся в разных пакетах. Если они находятся в одном пакете, Perl выдаст предупреждения, если вы их запросили, как и несколько &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; объявлений. В отличие от второго &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; объявления, которое привяжет имя к новой переменной, второе &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявление в том же пакете, в той же области видимости просто избыточно.</target>
        </trans-unit>
        <trans-unit id="48353bd1f51bb6eec720b26a40670dcc8efa9d3b" translate="yes" xml:space="preserve">
          <source>Multiple Inheritance</source>
          <target state="translated">Многократное наследование</target>
        </trans-unit>
        <trans-unit id="cbb8ace32d78b2ae6f01fe57c603e73837a4bd68" translate="yes" xml:space="preserve">
          <source>Multiple alternate names are possible.</source>
          <target state="translated">Возможно несколько альтернативных имен.</target>
        </trans-unit>
        <trans-unit id="3b26a054b05093a88178030f5a8b1997575b74ff" translate="yes" xml:space="preserve">
          <source>Multiple constant declarations at once added by Casey West, &amp;lt;</source>
          <target state="translated">Кейси Уэст добавил сразу несколько объявлений констант, &amp;lt;</target>
        </trans-unit>
        <trans-unit id="285ddce39862d8fe5e23d4388af8d0a347056a9c" translate="yes" xml:space="preserve">
          <source>Multiple inheritance often indicates a design problem, but Perl always gives you enough rope to hang yourself with if you ask for it.</source>
          <target state="translated">Многократное наследование часто указывает на проблему дизайна,но Perl всегда дает достаточно веревки,чтобы повеситься,если вы попросите об этом.</target>
        </trans-unit>
        <trans-unit id="0d9f2a08980cf6a269a8484f3b1b84e9a908ab93" translate="yes" xml:space="preserve">
          <source>Multiple options may be separated by colons:</source>
          <target state="translated">Несколько вариантов могут быть разделены двоеточиями:</target>
        </trans-unit>
        <trans-unit id="711c51a111027364db7380ccd9acdaec1492d123" translate="yes" xml:space="preserve">
          <source>Multiple packages</source>
          <target state="translated">Несколько пакетов</target>
        </trans-unit>
        <trans-unit id="e5cb4101d607c5394d01741bac5f7456e4908d11" translate="yes" xml:space="preserve">
          <source>Multiple packages and fully qualified subroutine names</source>
          <target state="translated">Несколько пакетов и полные имена подпрограмм</target>
        </trans-unit>
        <trans-unit id="24101d9d31bf0129420330c39c5cf010537d4874" translate="yes" xml:space="preserve">
          <source>Multiple slurpy parameters not allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436ca522c08df8bc62c5560d209e972cbfc6c8f8" translate="yes" xml:space="preserve">
          <source>Multiple tar archive filenames can be specified - they will each be processed in turn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6459b694c217e7d6e4f4403e095b344a4a592d8" translate="yes" xml:space="preserve">
          <source>Multiplex multiple TAP::Parsers</source>
          <target state="translated">Мультиплексный несколько TAP::Парсеры</target>
        </trans-unit>
        <trans-unit id="150be49d038f614e193602a7005597f5ff875ec0" translate="yes" xml:space="preserve">
          <source>Multiplicative Operators</source>
          <target state="translated">Мультипликативные операторы</target>
        </trans-unit>
        <trans-unit id="f231b68e224950ab7816fb6e20b4d2a930d3893b" translate="yes" xml:space="preserve">
          <source>Multiplicity is required when embedding Perl in a C program and using more than one interpreter instance. This is only required when you build a not-threaded perl with &lt;code&gt;-Uuseithreads&lt;/code&gt; .</source>
          <target state="translated">При встраивании Perl в программу C и использовании нескольких экземпляров интерпретатора требуется множественность. Это требуется только тогда, когда вы &lt;code&gt;-Uuseithreads&lt;/code&gt; Perl без потоков с -Uuseithreads .</target>
        </trans-unit>
        <trans-unit id="6c8c6ecf04843cba53a3a0dc6d02df3607984c15" translate="yes" xml:space="preserve">
          <source>Multiplicity is required when embedding Perl in a C program and using more than one interpreter instance. This is only required when you build a not-threaded perl with &lt;code&gt;-Uuseithreads&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a823acc8d727a505e347a4373b2b4a2fd658bbbd" translate="yes" xml:space="preserve">
          <source>Multiplies $y to $x and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c164249090c5dcf176539a56868115da2c726290" translate="yes" xml:space="preserve">
          <source>Multiply $x by $y, and then add $z to the result,</source>
          <target state="translated">Умножьте $x на $y,а затем добавьте $z к результату,</target>
        </trans-unit>
        <trans-unit id="ccb1f5d6ba5d2943ea716c8d09ca6acbfac04509" translate="yes" xml:space="preserve">
          <source>Multiply $x by $y, and then add $z to the result.</source>
          <target state="translated">Умножьте $x на $y,а затем добавьте $z к результату.</target>
        </trans-unit>
        <trans-unit id="ee25591d06b217f4358e8b341dce8e1906aeef44" translate="yes" xml:space="preserve">
          <source>Multiprocessor kernel threads are the final step in thread support. With multiprocessor kernel threads on a machine with multiple CPUs, the OS may schedule two or more threads to run simultaneously on different CPUs.</source>
          <target state="translated">Потоки многопроцессорного ядра являются последним шагом в поддержке потоков.При многопроцессорных потоках ядра на машине с несколькими процессорами операционная система может планировать выполнение двух и более потоков одновременно на разных процессорах.</target>
        </trans-unit>
        <trans-unit id="a82309bfc506cd2ed77334625f12e0460757a107" translate="yes" xml:space="preserve">
          <source>Must be one of the following licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafd5d404242155cb8650eca5e234b7aeedd750b" translate="yes" xml:space="preserve">
          <source>Must be passed an array reference.</source>
          <target state="translated">Должна быть передана ссылка на массив.</target>
        </trans-unit>
        <trans-unit id="d8387835af5df8bfeb3d9299ef8165454a3d981d" translate="yes" xml:space="preserve">
          <source>Mustn't forget to change the number of tests which appears at the top, or else the automated tester will get confused. This will either look like this:</source>
          <target state="translated">Не забудьте изменить количество тестов,которое появляется в верхней части,иначе автоматический тестер запутается.Либо это будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="fb98af5989ebce8fc6cd27827500b2f2656fae01" translate="yes" xml:space="preserve">
          <source>My ftp proxy firewall does not listen on port 21</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdcdee602cc75b045989a2d406d8d4ffd6c037c" translate="yes" xml:space="preserve">
          <source>My personal recommendation, out of respect for Larry, Perl, and the Perl community at large is to state something simply like:</source>
          <target state="translated">Моя личная рекомендация,из уважения к Ларри,Перлу и сообществу Перлов в целом,заключается в том,чтобы сказать что-то просто так:</target>
        </trans-unit>
        <trans-unit id="be4eba3c145424407628857ba57fbd52704452d3" translate="yes" xml:space="preserve">
          <source>My subclasses: &lt;a href=&quot;Pod::Simple::PullParserStartToken&quot;&gt;Pod::Simple::PullParserStartToken&lt;/a&gt;, &lt;a href=&quot;Pod::Simple::PullParserTextToken&quot;&gt;Pod::Simple::PullParserTextToken&lt;/a&gt;, and &lt;a href=&quot;Pod::Simple::PullParserEndToken&quot;&gt;Pod::Simple::PullParserEndToken&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a895bf6724a550c8c67860c94e7094d972f64" translate="yes" xml:space="preserve">
          <source>My subclasses: &lt;a href=&quot;pullparserstarttoken&quot;&gt;Pod::Simple::PullParserStartToken&lt;/a&gt;, &lt;a href=&quot;pullparsertexttoken&quot;&gt;Pod::Simple::PullParserTextToken&lt;/a&gt;, and &lt;a href=&quot;pullparserendtoken&quot;&gt;Pod::Simple::PullParserEndToken&lt;/a&gt;.</source>
          <target state="translated">Мои подклассы: &lt;a href=&quot;pullparserstarttoken&quot;&gt;Pod :: Simple :: PullParserStartToken&lt;/a&gt; , &lt;a href=&quot;pullparsertexttoken&quot;&gt;Pod :: Simple :: PullParserTextToken&lt;/a&gt; и &lt;a href=&quot;pullparserendtoken&quot;&gt;Pod :: Simple :: PullParserEndToken&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2dc204f1e0858a7337033f5946b1dc262a92ffcd" translate="yes" xml:space="preserve">
          <source>MyModule</source>
          <target state="translated">MyModule</target>
        </trans-unit>
        <trans-unit id="97ad397eea0be3e1f89ac813a16d43595116bd1c" translate="yes" xml:space="preserve">
          <source>Myclass::Subclass</source>
          <target state="translated">Myclass::Subclass</target>
        </trans-unit>
        <trans-unit id="c6940a4c07e595b424fa7842373c9f33f87cd575" translate="yes" xml:space="preserve">
          <source>Myinit.U</source>
          <target state="translated">Myinit.U</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="9a47348ab82eb6d6bab23d474edae2c5c05217c3" translate="yes" xml:space="preserve">
          <source>N scalars leaked</source>
          <target state="translated">Произошла утечка N скаляров</target>
        </trans-unit>
        <trans-unit id="5a5f7af20c8e39658565746ad27f9a6866756694" translate="yes" xml:space="preserve">
          <source>N. B.</source>
          <target state="translated">N.B.</target>
        </trans-unit>
        <trans-unit id="a1288af793f71d98bd1d7968a0996780aa30d8e3" translate="yes" xml:space="preserve">
          <source>N.B. Setting &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; implicitly enables &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; .</source>
          <target state="translated">NB. Установка &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; неявно включает &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82840d382ba6e35da8eff2b3c88e5874455dbfcd" translate="yes" xml:space="preserve">
          <source>N.B. Setting &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; implicitly enables &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="4c53abfad1785f59a4ee14505ad91b4508658ce7" translate="yes" xml:space="preserve">
          <source>NAME is the top-level namespace of your module. VERSION_FROM is the file which contains the $VERSION variable for the entire distribution. Typically this is the same as your top-level module.</source>
          <target state="translated">NAME-это пространство имён верхнего уровня вашего модуля.VERSION_FROM-это файл,содержащий переменную $VERSION для всего дистрибутива.Обычно это то же самое,что и ваш модуль верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="d81d8c4e29195f73ad2566e9351c6a67f3f09071" translate="yes" xml:space="preserve">
          <source>NAME needn't be the name of a subroutine; it can be a scalar variable containing a code reference or a block that evaluates to a code reference.</source>
          <target state="translated">Имя не обязательно должно быть именем подпрограмм;это может быть скалярная переменная,содержащая ссылку на код,или блок,который вычисляет ссылку на код.</target>
        </trans-unit>
        <trans-unit id="d1261b44b9791565719eece908fc8aabec59c02c" translate="yes" xml:space="preserve">
          <source>NAMELEN</source>
          <target state="translated">NAMELEN</target>
        </trans-unit>
        <trans-unit id="5e3909d12f66ddb276f16c1c76bcb4924e613445" translate="yes" xml:space="preserve">
          <source>NAMES</source>
          <target state="translated">NAMES</target>
        </trans-unit>
        <trans-unit id="941d6029f49e5d7a70ad52579f12da850d9d8bc5" translate="yes" xml:space="preserve">
          <source>NAMESPACE LAYOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832ae6b6120b927078a7d3ce9fe270032ed0f14a" translate="yes" xml:space="preserve">
          <source>NAME_HEK</source>
          <target state="translated">NAME_HEK</target>
        </trans-unit>
        <trans-unit id="9c01dbcc56faa849a3e733fd9d72b3167f597af7" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_LATIN1</source>
          <target state="translated">NATIVE_TO_LATIN1</target>
        </trans-unit>
        <trans-unit id="8f24a21d73be24d957aec6eb17d5b59ef96e9f9c" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_NEED</source>
          <target state="translated">NATIVE_TO_NEED</target>
        </trans-unit>
        <trans-unit id="39d2e9c7a844a802cee07179a83665ab497e1d24" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_UNI</source>
          <target state="translated">NATIVE_TO_UNI</target>
        </trans-unit>
        <trans-unit id="1cb5d20286de76cb8688a83e567257746c132849" translate="yes" xml:space="preserve">
          <source>NB. (more info on these and others would be appreciated).</source>
          <target state="translated">NB.(была бы признательна за предоставление дополнительной информации об этих и других).</target>
        </trans-unit>
        <trans-unit id="5f010024527e42fccba4ce2404e18f5c69eb9822" translate="yes" xml:space="preserve">
          <source>NB: Extensions that have nothing but *.pm files had to say</source>
          <target state="translated">NB:Расширения,которые не имеют ничего,кроме файлов *.pm,должны были сказать.</target>
        </trans-unit>
        <trans-unit id="1f7de72c9876d092d89ca69c43c95f07a23bc665" translate="yes" xml:space="preserve">
          <source>NB: This variable must be in the package's symbol table, thus:</source>
          <target state="translated">NB:Таким образом,эта переменная должна быть в таблице символов пакета:</target>
        </trans-unit>
        <trans-unit id="7297e43fd27e251c1624e34ebd5bf6e99f4c09b7" translate="yes" xml:space="preserve">
          <source>NBSP</source>
          <target state="translated">NBSP</target>
        </trans-unit>
        <trans-unit id="12f6598371d9f16419b7754d6868d5184ea681b6" translate="yes" xml:space="preserve">
          <source>NDBM_File</source>
          <target state="translated">NDBM_File</target>
        </trans-unit>
        <trans-unit id="d90fc6a608918a70294d6b999fb9f1f64ecfd606" translate="yes" xml:space="preserve">
          <source>NDBM_File - Tied access to ndbm files</source>
          <target state="translated">Файл NDBM_File-Связанный доступ к файлам ndbm.</target>
        </trans-unit>
        <trans-unit id="5aae06f9c3e77d522c379b6951fa1408e2490531" translate="yes" xml:space="preserve">
          <source>NDBM_File and ODBM_File do not work on FAT filesystems</source>
          <target state="translated">NDBM_File и ODBM_File не работают на файловых системах FAT.</target>
        </trans-unit>
        <trans-unit id="a798c3d94cb982cba534a63f36ccc06041d89ff0" translate="yes" xml:space="preserve">
          <source>NDBM_File, DB_File, GDBM_File, SDBM_File, ODBM_File - various DBM implementations</source>
          <target state="translated">Файл НБМ_Файл,Файл БД_Файл,Файл ГБМ_Файл,Файл SDBM_Файл,Файл ОДБМ_Файл-различные реализации БДМ</target>
        </trans-unit>
        <trans-unit id="8ada427b353c510d65dd5713797216d9c991cb85" translate="yes" xml:space="preserve">
          <source>NEED TO UPGRADE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d5383e4d48ed9cc34a642b91253d4ab7ea693b" translate="yes" xml:space="preserve">
          <source>NEEDS_LINKING</source>
          <target state="translated">NEEDS_LINKING</target>
        </trans-unit>
        <trans-unit id="20e4cb428c1111a7f321068ef6494db03de900ba" translate="yes" xml:space="preserve">
          <source>NEW API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac95b5a9cf67180becca6d7616cbe8c2dbd055da" translate="yes" xml:space="preserve">
          <source>NEW to 3.18</source>
          <target state="translated">НОВЫЙ-3.18</target>
        </trans-unit>
        <trans-unit id="6d7b1945b703be410af2f234b62894cdfab399db" translate="yes" xml:space="preserve">
          <source>NEW to 3.22</source>
          <target state="translated">НОВЫЙ-3.22</target>
        </trans-unit>
        <trans-unit id="1bd0055e213031c1eb32db565ffd38acb782ca87" translate="yes" xml:space="preserve">
          <source>NEWNAME</source>
          <target state="translated">NEWNAME</target>
        </trans-unit>
        <trans-unit id="1992d5e8d57e780981c364d844480c004ead1bc2" translate="yes" xml:space="preserve">
          <source>NEXT</source>
          <target state="translated">NEXT</target>
        </trans-unit>
        <trans-unit id="b671ceb8e301ee8b8afde8681000cc597a749b5b" translate="yes" xml:space="preserve">
          <source>NEXT - Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b264d41dd1016991ce0cb432539e94a460600e52" translate="yes" xml:space="preserve">
          <source>NEXT LINE and NO-BREAK SPACE may or may not match &lt;code&gt;\s&lt;/code&gt; depending on the rules in effect. See &lt;a href=&quot;#Whitespace&quot;&gt;the beginning of this section&lt;/a&gt;.</source>
          <target state="translated">В следующей строке и NO-BREAK ПРОСТРАНСТВО может соответствовать или не соответствовать &lt;code&gt;\s&lt;/code&gt; в зависимости от правил в силу. Смотрите &lt;a href=&quot;#Whitespace&quot;&gt;начало этого раздела&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="113018ee92aaf6966a4feae636745a050ed016d4" translate="yes" xml:space="preserve">
          <source>NEXT.pm - Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="translated">NEXT.pm-Предоставить псевдо-класс NEXT (и др.),позволяющий передискретизировать метод.</target>
        </trans-unit>
        <trans-unit id="2f9fcb4031e8bf2abe384c4ced588f3eb413318c" translate="yes" xml:space="preserve">
          <source>NEXT.pm adds a pseudoclass named &lt;code&gt;NEXT&lt;/code&gt; to any program that uses it. If a method &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; , the call to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; is redispatched as if the calling method had not originally been found.</source>
          <target state="translated">NEXT.pm добавляет псевдокласс &lt;code&gt;NEXT&lt;/code&gt; к любой программе, которая его использует. Если метод &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; вызывает &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; , вызов &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; пересылается повторно, как если бы вызывающий метод изначально не был найден.</target>
        </trans-unit>
        <trans-unit id="fabb600989a7bba10f84538b2741dea0ab962144" translate="yes" xml:space="preserve">
          <source>NEXTKEY is always called in scalar context and it should just return the next key. values(), and each() in list context, will call FETCH for the returned keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c24556247a8b24895bea71905672183f614ef3" translate="yes" xml:space="preserve">
          <source>NEXTKEY this, lastkey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1218651fb5d285bf3469a4750e2db41f4b8b5f" translate="yes" xml:space="preserve">
          <source>NFS</source>
          <target state="translated">NFS</target>
        </trans-unit>
        <trans-unit id="608f5850e4d46263293fc905b013705ee17bff47" translate="yes" xml:space="preserve">
          <source>NFS Mount Points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f3c73aafb4df691799fd406377dadc9780d033" translate="yes" xml:space="preserve">
          <source>NFS filesystems and utime(2) on HP-UX</source>
          <target state="translated">Файловые системы NFS и utime(2)на HP-UX</target>
        </trans-unit>
        <trans-unit id="33955091f178d2e0b6833a44b9c41c2530abaaef" translate="yes" xml:space="preserve">
          <source>NIST STATEMENT ON SHA-1</source>
          <target state="translated">КРАТКОЕ ИЗЛОЖЕНИЕ ША-1</target>
        </trans-unit>
        <trans-unit id="8a32963006e5a121b9fe9a8458d70540a03114d8" translate="yes" xml:space="preserve">
          <source>NIST acknowledges that the work of Prof. Xiaoyun Wang constitutes a practical collision attack on SHA-1. Therefore, NIST encourages the rapid adoption of the SHA-2 hash functions (e.g. SHA-256) for applications requiring strong collision resistance, such as digital signatures.</source>
          <target state="translated">NIST признает,что работа профессора Сяоюня Вана представляет собой практическую атаку на SHA-1.Поэтому NIST поощряет быстрое внедрение хэш-функций SHA-2 (например,SHA-256)в приложениях,требующих высокой устойчивости к столкновениям,таких как цифровые подписи.</target>
        </trans-unit>
        <trans-unit id="3ed352aa54aa2907bf2965b3e66dc4da9f6230d6" translate="yes" xml:space="preserve">
          <source>NI_DGRAM</source>
          <target state="translated">NI_DGRAM</target>
        </trans-unit>
        <trans-unit id="40e6efbcba9fea1565ffb548c0ce6055f9f0abcd" translate="yes" xml:space="preserve">
          <source>NI_NAMEREQD</source>
          <target state="translated">NI_NAMEREQD</target>
        </trans-unit>
        <trans-unit id="c34d054e005e6ec8eab7acfe44ac788972e4e691" translate="yes" xml:space="preserve">
          <source>NI_NUMERICHOST</source>
          <target state="translated">NI_NUMERICHOST</target>
        </trans-unit>
        <trans-unit id="6afe1c04c2484c532e8d9fe653a24b3b764e7c90" translate="yes" xml:space="preserve">
          <source>NI_NUMERICSERV</source>
          <target state="translated">NI_NUMERICSERV</target>
        </trans-unit>
        <trans-unit id="b465e7557bda36b84a37e52f7c4e7301aae96613" translate="yes" xml:space="preserve">
          <source>NIx_NOHOST</source>
          <target state="translated">NIx_NOHOST</target>
        </trans-unit>
        <trans-unit id="a9b2d0ec65146c4b3c86a214eedc9bb8ca3669cd" translate="yes" xml:space="preserve">
          <source>NIx_NOSERV</source>
          <target state="translated">NIx_NOSERV</target>
        </trans-unit>
        <trans-unit id="aa7b193ecb5f5e8127c45d86d672c669b4ad311a" translate="yes" xml:space="preserve">
          <source>NNN</source>
          <target state="translated">NNN</target>
        </trans-unit>
        <trans-unit id="259e7beda3cad46f62a7095d7eeef91dfa1452ff" translate="yes" xml:space="preserve">
          <source>NNTP Client class</source>
          <target state="translated">класс клиента ННТП</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="08ede25c29d0b14def59102b820c983fef641f93" translate="yes" xml:space="preserve">
          <source>NO READER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b84bee02bd83b950a021e94155970ceaec318" translate="yes" xml:space="preserve">
          <source>NO SETTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09540dd5a1bab1aead125e4e2e0e2b654166fb0" translate="yes" xml:space="preserve">
          <source>NOECHO</source>
          <target state="translated">NOECHO</target>
        </trans-unit>
        <trans-unit id="4217d58bbccddebf68dfe2d9142182d33dd44068" translate="yes" xml:space="preserve">
          <source>NON-BLOCKING</source>
          <target state="translated">NON-BLOCKING</target>
        </trans-unit>
        <trans-unit id="fccfdb937713b1cc25887e8572de25d1e7746077" translate="yes" xml:space="preserve">
          <source>NONINTERACTIVE_TESTING</source>
          <target state="translated">NONINTERACTIVE_TESTING</target>
        </trans-unit>
        <trans-unit id="0e091603e3f994d50c190a2d5fd3e5c41973500d" translate="yes" xml:space="preserve">
          <source>NONPERLIO FUNCTIONALITY</source>
          <target state="translated">НЕПЕРИЕВАЯ ФУНКЦИОНАЛЬНОСТЬ</target>
        </trans-unit>
        <trans-unit id="76ad789b38e8dbe21ca0bc2010e7bf69341912fe" translate="yes" xml:space="preserve">
          <source>NORECURS</source>
          <target state="translated">NORECURS</target>
        </trans-unit>
        <trans-unit id="839079acafd0ee6f848c67721260af9d37e0e0a1" translate="yes" xml:space="preserve">
          <source>NORMAL TESTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89019f3be9c018c42adb350f614090da4dc3c7c" translate="yes" xml:space="preserve">
          <source>NORMALIZER</source>
          <target state="translated">NORMALIZER</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="c4670e378e0ef3deb0f4049eccb697b77c441ecf" translate="yes" xml:space="preserve">
          <source>NOT Algonquin!</source>
          <target state="translated">НЕ Алгонквин!</target>
        </trans-unit>
        <trans-unit id="f8e9babf78c2e719cd84e72dad7681487647bef9" translate="yes" xml:space="preserve">
          <source>NOT Amharic! NOT Samaritan Aramaic!</source>
          <target state="translated">НЕ Амхария! НЕ Самаритянин Арамейский!</target>
        </trans-unit>
        <trans-unit id="753ae89bc9aefd4bc4c59d18e8756509c836fa15" translate="yes" xml:space="preserve">
          <source>NOT Aramaic!</source>
          <target state="translated">НЕ арамейский!</target>
        </trans-unit>
        <trans-unit id="133f3813e3d37b50fe3b4bc3090b8a682ecfc808" translate="yes" xml:space="preserve">
          <source>NOT Cree!</source>
          <target state="translated">НЕ КРИ!</target>
        </trans-unit>
        <trans-unit id="4ae987be84fecb4729307de204915c9a99c39e5b" translate="yes" xml:space="preserve">
          <source>NOT Creek! (Formerly &quot;cre&quot;.)</source>
          <target state="translated">НЕ Крик! (Раньше &quot;Крик&quot;.)</target>
        </trans-unit>
        <trans-unit id="9aa8553630af3827a1d2df27f4500615b8d003a9" translate="yes" xml:space="preserve">
          <source>NOT Dogri!</source>
          <target state="translated">НЕ Догри!</target>
        </trans-unit>
        <trans-unit id="1a5a67d55f9ca3936956ef4502ba89ff2b34b328" translate="yes" xml:space="preserve">
          <source>NOT Dogrib!</source>
          <target state="translated">НЕ Догриб!</target>
        </trans-unit>
        <trans-unit id="68c49025492a4631abe9ece2f0cd79b5a465f4d6" translate="yes" xml:space="preserve">
          <source>NOT Lahnda!</source>
          <target state="translated">НЕ Лаханда!</target>
        </trans-unit>
        <trans-unit id="3e4ff7d40fd5253a99d44731fd85dd7a075a8d8c" translate="yes" xml:space="preserve">
          <source>NOT Lamba!</source>
          <target state="translated">НЕ Ламба!</target>
        </trans-unit>
        <trans-unit id="bbf0ff26137d6eeee6a5487552177165fd9cd76f" translate="yes" xml:space="preserve">
          <source>NOT Malay!</source>
          <target state="translated">НЕ Малай!</target>
        </trans-unit>
        <trans-unit id="ba94ae989804baff400b9b606493ab5274d7a721" translate="yes" xml:space="preserve">
          <source>NOT Malayalam!</source>
          <target state="translated">НЕ Малайалам!</target>
        </trans-unit>
        <trans-unit id="84b3ff998bfbcb82e2509048721a02e46fb1bbb0" translate="yes" xml:space="preserve">
          <source>NOT Mandarin!</source>
          <target state="translated">НЕ Мандарин!</target>
        </trans-unit>
        <trans-unit id="1befb6835c1562cd0baa23c9fea5413fe9068e2e" translate="yes" xml:space="preserve">
          <source>NOT Maori!</source>
          <target state="translated">НЕ маори!</target>
        </trans-unit>
        <trans-unit id="3996b78a86c029adf66ba0fba4afc3b0b738285a" translate="yes" xml:space="preserve">
          <source>NOT Mari!</source>
          <target state="translated">НЕ Мари!</target>
        </trans-unit>
        <trans-unit id="fd25af715e82d2a1e52a76f6042a96a0b97ee0df" translate="yes" xml:space="preserve">
          <source>NOT Pompeiian!</source>
          <target state="translated">НЕ Помпейский!</target>
        </trans-unit>
        <trans-unit id="401d021df78de2f61ec2f834d14cc4a3deb3d7f8" translate="yes" xml:space="preserve">
          <source>NOT Romanian! NOT Romany! NOT Romansh!</source>
          <target state="translated">НЕ румынский! НЕ румынский! НЕ румынский!</target>
        </trans-unit>
        <trans-unit id="e7bebe37efc0e0896e678888788c0119a46ec810" translate="yes" xml:space="preserve">
          <source>NOT Scots Gaelic!</source>
          <target state="translated">Не шотландский гэльский!</target>
        </trans-unit>
        <trans-unit id="5cb51efbf1da343aa35bb0cd1503a285538b7130" translate="yes" xml:space="preserve">
          <source>NOT Scots!</source>
          <target state="translated">Не шотландцы!</target>
        </trans-unit>
        <trans-unit id="406bca1dda1a92a194b3f06540dac98edfe02f9c" translate="yes" xml:space="preserve">
          <source>NOT Tai!</source>
          <target state="translated">НЕ ТАЙ!</target>
        </trans-unit>
        <trans-unit id="f4263bbd2a696d31694b9b4dfaddde3fd2e9242a" translate="yes" xml:space="preserve">
          <source>NOT Thai!</source>
          <target state="translated">НЕ тайский!</target>
        </trans-unit>
        <trans-unit id="381ade097816523a950f9c68fe73f8bdd2483e08" translate="yes" xml:space="preserve">
          <source>NOT Tonga!</source>
          <target state="translated">НЕ Тонга!</target>
        </trans-unit>
        <trans-unit id="43e2eb938fbfde6d76b6fc73f130bf7c34e96d8a" translate="yes" xml:space="preserve">
          <source>NOT Tsonga!</source>
          <target state="translated">НЕ ТСОНГА!</target>
        </trans-unit>
        <trans-unit id="7bb4f6673a55f3ef4e9a72ddaea2a35397daeb1b" translate="yes" xml:space="preserve">
          <source>NOT Ugric!</source>
          <target state="translated">НЕ Угорский!</target>
        </trans-unit>
        <trans-unit id="ac75bf1bb4152325d5d23d198732d52ff6533a71" translate="yes" xml:space="preserve">
          <source>NOT Wendish! NOT Wend! NOT Avestan! (Formerly &quot;ven&quot;.)</source>
          <target state="translated">НЕ Вендиш! НЕ ВЫХОДИТЬ! НЕ АВСТАН! (Раньше &quot;Вен&quot;.)</target>
        </trans-unit>
        <trans-unit id="8ccbd83d9bd35a8139be881200b96ebe4bf4f8ba" translate="yes" xml:space="preserve">
          <source>NOT White Russian! NOT Rusyn!</source>
          <target state="translated">НЕ Белый русский! НЕ Русын!</target>
        </trans-unit>
        <trans-unit id="9a3ad696e905452a166a11feac1b5ce24fc7f64e" translate="yes" xml:space="preserve">
          <source>NOT YET</source>
          <target state="translated">НЕ ВЫХОДИТ</target>
        </trans-unit>
        <trans-unit id="c775454cbbf850c1e44e01c2124ec3b439b5a154" translate="yes" xml:space="preserve">
          <source>NOT Zend.</source>
          <target state="translated">НЕ Зенд.</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="2e08c41aed7a4c92f4cb54085b5d4c152d02dd41" translate="yes" xml:space="preserve">
          <source>NOTE ON CYCLES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="17e95c44cb46af490bb8e16ee27a4a479ea2e057" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; should be removed from the inheritance hiearchy and simply be called as functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618dd0810d8f0328d5c844bf5776ec75fdee5055" translate="yes" xml:space="preserve">
          <source>NOTE: As of version 3.27, the FIPS code set is no longer supported. See the Locale::Codes::Changes document for details.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Начиная с версии 3.27,набор кода FIPS больше не поддерживается.Подробности см.в документе Локаль::Коды::Изменения.</target>
        </trans-unit>
        <trans-unit id="f153ba173fef9b5aa6938b0a0ee92d9e101e6d02" translate="yes" xml:space="preserve">
          <source>NOTE: Before version 5.004_65, &lt;code&gt;hv_iterinit&lt;/code&gt; used to return the number of hash buckets that happen to be in use. If you still need that esoteric value, you can get it through the macro &lt;code&gt;HvFILL(hv)&lt;/code&gt; .</source>
          <target state="translated">ПРИМЕЧАНИЕ. До версии 5.004_65 &lt;code&gt;hv_iterinit&lt;/code&gt; возвращал количество используемых хеш-сегментов. Если вам все еще нужна эта эзотерическая ценность, вы можете получить ее с помощью макроса &lt;code&gt;HvFILL(hv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6856d39d8b489cad3f52ad021a622af14f9bc7" translate="yes" xml:space="preserve">
          <source>NOTE: Before version 5.004_65, &lt;code&gt;hv_iterinit&lt;/code&gt; used to return the number of hash buckets that happen to be in use. If you still need that esoteric value, you can get it through the macro &lt;code&gt;HvFILL(hv)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649360d37b390feb3a2b0b394e1546f8221a9d4a" translate="yes" xml:space="preserve">
          <source>NOTE: Due to the nature of make, it is important that you put the trailing slash on your DESTDIR.</source>
          <target state="translated">ПРИМЕЧАНИЕ:В связи с характером изготовления,важно,чтобы вы поставили трейлинговую косую черту на вашем ЗАВОДЕ.</target>
        </trans-unit>
        <trans-unit id="3f7ead4aaae021a928fa1ee51af8a79894a0f263" translate="yes" xml:space="preserve">
          <source>NOTE: Each direct &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;MM_Unix&lt;/a&gt; subclass is also an &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any&lt;/a&gt; subclass. This is a temporary hack because MM_Unix overrides some MM_Any methods with Unix specific code. It allows the non-Unix modules to see the original MM_Any implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067432480fa685a3f96480be8331efe9c45e8058" translate="yes" xml:space="preserve">
          <source>NOTE: ExtUtils::MM_{Current OS} represents one of the ExtUtils::MM_* modules except &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;ExtUtils::MM_Any&lt;/a&gt; chosen based on your operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33fdad677decf9bf49440b259d731f4baa5cc9" translate="yes" xml:space="preserve">
          <source>NOTE: For use with variables in the current package for a single scope, the functionality provided by this pragma has been superseded by &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations, available in Perl v5.6.0 or later, and use of this pragma is discouraged. See &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;.</source>
          <target state="translated">ПРИМЕЧАНИЕ. Для использования с переменными в текущем пакете для одной области функциональные возможности, предоставляемые этой прагмой, были заменены &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявлениями, доступными в Perl v5.6.0 или новее, и использование этой прагмы не рекомендуется. Смотрите &lt;a href=&quot;functions/our&quot;&gt;наш&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2444687bc2e7aa6f630fc198feec77962205c8c7" translate="yes" xml:space="preserve">
          <source>NOTE: For use with variables in the current package for a single scope, the functionality provided by this pragma has been superseded by &lt;code&gt;our&lt;/code&gt; declarations, available in Perl v5.6.0 or later, and use of this pragma is discouraged. See &lt;a href=&quot;perlfunc#our&quot;&gt;&quot;our&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b263360f03c5b7669d257ce01c55faecf28c63" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;STDERR&lt;/code&gt; is redirected &lt;code&gt;make install&lt;/code&gt; will &lt;b&gt;not&lt;/b&gt; prompt you to install</source>
          <target state="translated">Примечание: Если &lt;code&gt;STDERR&lt;/code&gt; перенаправляется &lt;code&gt;make install&lt;/code&gt; будет &lt;b&gt;не&lt;/b&gt; предложит установить</target>
        </trans-unit>
        <trans-unit id="6a15713e4ca482b00669bde833a2ad067bed418a" translate="yes" xml:space="preserve">
          <source>NOTE: If the</source>
          <target state="translated">ПРИМЕЧАНИЕ:Если</target>
        </trans-unit>
        <trans-unit id="3fbf142c302988d361f32c92573c404f0d821571" translate="yes" xml:space="preserve">
          <source>NOTE: If you're using a 32-bit compiler to build perl on a 64-bit Windows operating system, then you should set the WIN64 environment variable to &quot;undef&quot;. Also, the trimmed down compiler only passes tests when USE_ITHREADS *= define (as opposed to undef) and when the CFG *= Debug line is commented out.</source>
          <target state="translated">ЗАМЕЧАНИЕ:Если вы используете 32-битный компилятор для сборки perl на 64-битной операционной системе Windows,то следует установить переменную окружения WIN64 в значение &quot;undef&quot;.Также обрезанный компилятор проходит тесты только тогда,когда задано значение USE_ITHREADS *=(в отличие от undef)и закомментирована строка CFG *=Debug.</target>
        </trans-unit>
        <trans-unit id="3627e1c3e922f58002616f63fa3f427fea434731" translate="yes" xml:space="preserve">
          <source>NOTE: In perl 5.25 the behavior of scalar %hash on an untied hash changed to return the count of keys. Prior to this it returned a string containing information about the bucket setup of the hash. See &lt;a href=&quot;Hash::Util#bucket_ratio&quot;&gt;&quot;bucket_ratio&quot; in Hash::Util&lt;/a&gt; for a backwards compatibility path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f20f131ce04b8a1fb6640adea5e575bdb22bbd" translate="yes" xml:space="preserve">
          <source>NOTE: In the example above, the thread returns a list, thus necessitating that the thread creation call be made in list context (i.e., &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; ($thr)&lt;/code&gt; ). See &lt;a href=&quot;threads#%24thr-%3ejoin()&quot;&gt;$thr-&amp;gt;join() in threads&lt;/a&gt; and &lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;THREAD CONTEXT in threads&lt;/a&gt; for more details on thread context and return values.</source>
          <target state="translated">ПРИМЕЧАНИЕ. В приведенном выше примере поток возвращает список, что требует, чтобы вызов создания потока выполнялся в контексте списка (т.е. &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; ($thr)&lt;/code&gt; ). См. &lt;a href=&quot;threads#%24thr-%3ejoin()&quot;&gt;$ Thr-&amp;gt; join () в потоках&lt;/a&gt; и &lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;THREAD CONTEXT в потоках&lt;/a&gt; для получения дополнительных сведений о контексте потока и возвращаемых значениях.</target>
        </trans-unit>
        <trans-unit id="53ecad029faffe4377d8471df7c402459fee1a5f" translate="yes" xml:space="preserve">
          <source>NOTE: In the example above, the thread returns a list, thus necessitating that the thread creation call be made in list context (i.e., &lt;code&gt;my ($thr)&lt;/code&gt;). See &lt;a href=&quot;threads#%24thr-%3Ejoin%28%29&quot;&gt;&quot;$thr-&amp;gt;join()&quot; in threads&lt;/a&gt; and &lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;&quot;THREAD CONTEXT&quot; in threads&lt;/a&gt; for more details on thread context and return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eded8f1ec362061e175e773a0320700ccc8a74a7" translate="yes" xml:space="preserve">
          <source>NOTE: Modules like &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt; and &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; have been omitted for clarity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b96a646789fe22b9736fd0f77217c9c6f301c" translate="yes" xml:space="preserve">
          <source>NOTE: Strictly speaking Perl's UTF-8 should not be called UTF-8 since UTF-8 is an encoding of Unicode, and Unicode's upper limit, 0x10FFFF, can be expressed with 4 bytes. However, Perl thinks of UTF-8 as a way to encode non-negative integers in a binary format, even those above Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd640e426e455b329ccdbe19f860f26de435861" translate="yes" xml:space="preserve">
          <source>NOTE: The BerkeleyDB library only completely works on NTFS partitions.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Библиотека BerkeleyDB полностью работает только на разделах NTFS.</target>
        </trans-unit>
        <trans-unit id="a883d5970a29c1610a3c0fa8d3c7281403c56317" translate="yes" xml:space="preserve">
          <source>NOTE: The GDBM library only works on NTFS partitions.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Библиотека GDBM работает только на разделах NTFS.</target>
        </trans-unit>
        <trans-unit id="9b01e20bea3deec5ba5197be5f2861b1f24a1902" translate="yes" xml:space="preserve">
          <source>NOTE: The USE_64_BIT_INT build option is not supported with the 32-bit Visual C++ 6.0 compiler.</source>
          <target state="translated">ЗАМЕЧАНИЕ:Вариант сборки USE_64_BIT_INT не поддерживается 32-битным компилятором Visual C++6.0.</target>
        </trans-unit>
        <trans-unit id="92679b71ee8b46e8b7e0ced5d18384810d027930" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation keeps the declared fields in the %FIELDS hash of the calling package, but this may change in future versions. Do &lt;b&gt;not&lt;/b&gt; update the %FIELDS hash directly, because it must be created at compile-time for it to be fully useful, as is done by this pragma.</source>
          <target state="translated">ПРИМЕЧАНИЕ. Текущая реализация сохраняет объявленные поля в хэше% FIELDS вызывающего пакета, но это может измениться в будущих версиях. Как &lt;b&gt;не&lt;/b&gt; обновлять% ПЛОЩАДКА хэш непосредственно, потому что он должен быть создан во время компиляции для того , чтобы быть полностью полезным, как это делается с помощью этой директивы.</target>
        </trans-unit>
        <trans-unit id="bffb349a25186b416bb90a95e353abe4799c593a" translate="yes" xml:space="preserve">
          <source>NOTE: The main Perl thread (thread 0) is in a</source>
          <target state="translated">ПРИМЕЧАНИЕ:Главный поток Perl (поток 0)находится в</target>
        </trans-unit>
        <trans-unit id="57e161872abdc951ab6418dd3709a011bb12d2ef" translate="yes" xml:space="preserve">
          <source>NOTE: The main object used by MakeMaker is a PACK### object, *not* &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;. It is, effectively, a subclass of &lt;a href=&quot;ExtUtils::MY&quot;&gt;MY&lt;/a&gt;, &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;, &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; and ExtUtils::MM_{Current OS}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd01972804c083061ace7521dcf3ba26f354b9f" translate="yes" xml:space="preserve">
          <source>NOTE: The methods in &lt;a href=&quot;ExtUtils::MY&quot;&gt;MY&lt;/a&gt; are simply copied into PACK### rather than MY being a superclass of PACK###. I don't remember the rationale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2d780df8a865a0c1e4241c863cc63ef39b82f8" translate="yes" xml:space="preserve">
          <source>NOTE: This class is now a front-end to the IO::* classes.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Этот класс теперь является входным в классы IO::*.</target>
        </trans-unit>
        <trans-unit id="3c0adaeecd5969cd29892262a1fafa36ba011ebd" translate="yes" xml:space="preserve">
          <source>NOTE: This has &lt;b&gt;not&lt;/b&gt; been extensively tested. In particular, &lt;code&gt;d_semctl_semun&lt;/code&gt; is undefined because it fails a Configure test and on Win9x the</source>
          <target state="translated">ПРИМЕЧАНИЕ. Это &lt;b&gt;не&lt;/b&gt; было тщательно протестировано. В частности, &lt;code&gt;d_semctl_semun&lt;/code&gt; не определен, потому что он не проходит тест Configure, а в Win9x</target>
        </trans-unit>
        <trans-unit id="2235e00b8313ce99cbd9b52cd441ef5625f482e5" translate="yes" xml:space="preserve">
          <source>NOTE: This is the canonical version of the method. The version in &lt;a href=&quot;File::Spec::VMS&quot;&gt;File::Spec::VMS&lt;/a&gt; is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93561b423a89d40f27ddedd870c2c3c213cd0ca9" translate="yes" xml:space="preserve">
          <source>NOTE: This is the canonical version of the method. The version in File::Spec::VMS is deprecated.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Это каноническая версия метода.Версия в File::Spec::VMS устарела.</target>
        </trans-unit>
        <trans-unit id="f653cc8c3999a85d9ddcfbc0bf440c5b24acc130" translate="yes" xml:space="preserve">
          <source>NOTE: This section presents an abstract approximation of regular expression behavior. For a more rigorous (and complicated) view of the rules involved in selecting a match among possible alternatives, see &lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;&quot;Combining RE Pieces&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe8cfad2c7f08a016e53df968cd93d3ee1a3d3" translate="yes" xml:space="preserve">
          <source>NOTE: This section presents an abstract approximation of regular expression behavior. For a more rigorous (and complicated) view of the rules involved in selecting a match among possible alternatives, see &lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;Combining RE Pieces&lt;/a&gt;.</source>
          <target state="translated">ПРИМЕЧАНИЕ. В этом разделе представлена ​​абстрактная аппроксимация поведения регулярных выражений. Для более строгого (и сложного) обзора правил выбора совпадения из возможных альтернатив см. &amp;laquo; &lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;Объединение частей RE&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f97ff6e3100b23f28f9a60da39c11eb47af9c9a6" translate="yes" xml:space="preserve">
          <source>NOTE: This warning detects package symbols that have been used only once. This means lexical variables will never trigger this warning. It also means that all of the package variables $c, @c, %c, as well as *c, &amp;amp;c, sub c{}, c(), and c (the filehandle or format) are considered the same; if a program uses $c only once but also uses any of the others it will not trigger this warning. Symbols beginning with an underscore and symbols using special identifiers (q.v. &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;) are exempt from this warning.</source>
          <target state="translated">ПРИМЕЧАНИЕ. Это предупреждение обнаруживает символы пакета, которые использовались только один раз. Это означает, что лексические переменные никогда не вызовут это предупреждение. Это также означает, что все переменные пакета $ c, @c,% c, а также * c, &amp;amp; c, sub c {}, c () и c (дескриптор файла или формат) считаются одинаковыми; если программа использует $ c только один раз, но также использует любые другие, она не вызовет это предупреждение. Это предупреждение не распространяется на символы, начинающиеся с подчеркивания, и символы, использующие специальные идентификаторы (qv &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5871f00a4b47482fbc58aebc0cc4ba62002b52da" translate="yes" xml:space="preserve">
          <source>NOTE: This was fixed in perl 5.20. Mentioning these three variables no longer makes a speed difference. This section still applies if your code is to run on perl 5.18 or earlier.</source>
          <target state="translated">ПРИМЕЧАНИЕ:Это было зафиксировано в perl 5.20.Упоминание этих трех переменных больше не приводит к разнице в скорости.Этот раздел по-прежнему применим,если Ваш код будет работать на perl 5.18 или более ранней версии.</target>
        </trans-unit>
        <trans-unit id="6324a263e1895ae371269bca4d897ca5cff9e0a3" translate="yes" xml:space="preserve">
          <source>NOTE: When &lt;a href=&quot;ExtUtils::MM&quot;&gt;ExtUtils::MM&lt;/a&gt; is loaded it chooses a superclass for MM from amongst the ExtUtils::MM_* modules based on the current operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e360e636f982b17adc20c8e88ac33bf0ddfb0d5f" translate="yes" xml:space="preserve">
          <source>NOTE: When using this option to alter the extension of a module's loadable object, it is also necessary that the module's pm file specifies the same change:</source>
          <target state="translated">ЗАМЕЧАНИЕ:При использовании этой опции для изменения расширения загружаемого объекта модуля,также необходимо,чтобы в pm-файле модуля было указано то же самое изменение:</target>
        </trans-unit>
        <trans-unit id="bdfc117a261c4487af6b7a42f6e1291c57974793" translate="yes" xml:space="preserve">
          <source>NOTE: Yes, this is a mess. See &lt;a href=&quot;http://archive.develooper.com/makemaker@perl.org/msg00134.html&quot;&gt;http://archive.develooper.com/makemaker@perl.org/msg00134.html&lt;/a&gt; for some history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376fb7bcf600539ba82d51a66a1efcb849c8327e" translate="yes" xml:space="preserve">
          <source>NOTE: during a build there could be created a number (or one) of</source>
          <target state="translated">ПРИМЕЧАНИЕ:во время сборки может быть создано число (или одно)из</target>
        </trans-unit>
        <trans-unit id="ea17cbc15e73a4439305d4a5eaa00618c0f4354b" translate="yes" xml:space="preserve">
          <source>NOTE: the NaN payload APIs are based on the latest (as of June 2015) proposed ISO C interfaces, but they are not yet a standard. Things may change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb89f1a65c1db4fe7065e44b17a7dc45e0c343" translate="yes" xml:space="preserve">
          <source>NOTE: the perl_ form of this function is deprecated.</source>
          <target state="translated">ПРИМЕЧАНИЕ:форма perl_этой функции устарела.</target>
        </trans-unit>
        <trans-unit id="259672a245b4c95b8c72c4ad7549e5e6b6f26678" translate="yes" xml:space="preserve">
          <source>NOTE: this function is experimental and may change or be removed without notice.</source>
          <target state="translated">ПРИМЕЧАНИЕ:эта функция является экспериментальной и может быть изменена или удалена без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="a33eb4db5f4c5d89147eba4406fbdfdfe557672e" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_av_create_and_push with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e2262bd5b95a859bc1a2c93f9d408eb99eab78" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_av_create_and_unshift_one with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3d58bf1438c4c6241c66bb37ecbdb244a70618" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_blockhook_register with an aTHX_ parameter.</source>
          <target state="translated">ПРИМЕЧАНИЕ:эта функция должна быть явно вызвана как Perl_blockhook_register с параметром aTHX_.</target>
        </trans-unit>
        <trans-unit id="d7b1f0204d1784d6985d1beacf1a3919bed1aa91" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_custom_op_register with an aTHX_ parameter.</source>
          <target state="translated">ПРИМЕЧАНИЕ:эта функция должна быть явно вызвана как Perl_custom_op_register с параметром aTHX_.</target>
        </trans-unit>
        <trans-unit id="6babb9cf8fb6ef67053f45016008ddba04aec872" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_custom_op_xop with an aTHX_ parameter.</source>
          <target state="translated">ПРИМЕЧАНИЕ:эта функция должна быть явно вызвана как Perl_custom_op_xop с параметром aTHX_.</target>
        </trans-unit>
        <trans-unit id="b159c116788bb9d42ea050ce36c9737031992cdb" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_hv_assert with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c08dd051851cab61787d1e02454177c1d426b4f" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_hv_fill with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c35c13dd37990737f29f6eaec9450f57ed8d98" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_magic_methcall with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3dc30cd58d0d45defc4c1bd85171b5851ea611" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_mro_register with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623bce064ae2394282ca4352cc0845eed93e9159" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_start_glob with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb98ccf0885ad4b3b865d59fcf8b08abb3ba7533" translate="yes" xml:space="preserve">
          <source>NOTE: unless your Perl has been compiled with debug info (often &lt;b&gt;-g&lt;/b&gt;), the stack trace is likely to be somewhat hard to use because it will most probably contain only the function names and not their arguments. If possible, recompile your Perl with debug info and reproduce the crash and the stack trace.</source>
          <target state="translated">ПРИМЕЧАНИЕ: если ваш Perl не был скомпилирован с отладочной информацией (часто &lt;b&gt;-g&lt;/b&gt; ), трассировку стека, вероятно, будет трудно использовать, потому что она, скорее всего, будет содержать только имена функций, а не их аргументы. Если возможно, перекомпилируйте ваш Perl с отладочной информацией и воспроизведите сбой и трассировку стека.</target>
        </trans-unit>
        <trans-unit id="d1560e71dccb0898373285ee4f50b724b2b71c7d" translate="yes" xml:space="preserve">
          <source>NOTE: you can pass either the object directly or the SV contained within the RV.</source>
          <target state="translated">ПРИМЕЧАНИЕ:вы можете передать либо непосредственно объект,либо SV,содержащийся в RV.</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES</target>
        </trans-unit>
        <trans-unit id="ca9bb80b927e1f747948f6be662bf44318c1f39e" translate="yes" xml:space="preserve">
          <source>NOTES &amp;amp;&amp;amp; CAVEATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f05e227bc69b9c43de84ec895a9faed1f7b4aa" translate="yes" xml:space="preserve">
          <source>NOTES FOR IMPLEMENTORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc8974be5d154b1084db932a691a405a4c97b92" translate="yes" xml:space="preserve">
          <source>NOTES ON CUSTOMIZATION</source>
          <target state="translated">ПРИМЕЧАНИЯ ПО НАСТРОЙКЕ</target>
        </trans-unit>
        <trans-unit id="fe71871083ca490e6bc0da33fb48ce231f820a94" translate="yes" xml:space="preserve">
          <source>NOTICE</source>
          <target state="translated">NOTICE</target>
        </trans-unit>
        <trans-unit id="9d379c9bca90d391f4c7c80b6ee18ca954e9daee" translate="yes" xml:space="preserve">
          <source>NO_COLOR</source>
          <target state="translated">NO_COLOR</target>
        </trans-unit>
        <trans-unit id="bb12929c24b3715cb12e906f7859970b509fae40" translate="yes" xml:space="preserve">
          <source>NO_META</source>
          <target state="translated">NO_META</target>
        </trans-unit>
        <trans-unit id="559eb72468b854747e75621aff713b8e7e7d9391" translate="yes" xml:space="preserve">
          <source>NO_MYMETA</source>
          <target state="translated">NO_MYMETA</target>
        </trans-unit>
        <trans-unit id="cb279b60b97f699d3e518821acdba981cd19ddff" translate="yes" xml:space="preserve">
          <source>NO_PACKLIST</source>
          <target state="translated">NO_PACKLIST</target>
        </trans-unit>
        <trans-unit id="6df50ca6f085eef53a1d294af151847fd55dc1fd" translate="yes" xml:space="preserve">
          <source>NO_PERLLOCAL</source>
          <target state="translated">NO_PERLLOCAL</target>
        </trans-unit>
        <trans-unit id="106cd42701eab33079b05c517f262d495992d284" translate="yes" xml:space="preserve">
          <source>NO_VC</source>
          <target state="translated">NO_VC</target>
        </trans-unit>
        <trans-unit id="20fba7fb07c15dd5e4b286e814069b42b6d4cf66" translate="yes" xml:space="preserve">
          <source>NUL</source>
          <target state="translated">NUL</target>
        </trans-unit>
        <trans-unit id="0caa59b644c0cefac70de91f3a56d8b895dc8638" translate="yes" xml:space="preserve">
          <source>NUL terminated string, length will be determined with &lt;code&gt;strlen&lt;/code&gt;</source>
          <target state="translated">Строка с завершением NUL, длина будет определяться с помощью &lt;code&gt;strlen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9618acc0df0394ab4c059fe5284c47cb34741100" translate="yes" xml:space="preserve">
          <source>NULL OP IN RUN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47772c7a46c443ef637a948d4d60da7733075770" translate="yes" xml:space="preserve">
          <source>NULL regexp argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67527a1d9b957d6ff496b6a019534a5af79d800" translate="yes" xml:space="preserve">
          <source>NULL regexp parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2fb40b4decc623e7e7104506804374fa2e9c3b" translate="yes" xml:space="preserve">
          <source>NULL will be returned if a REGEXP* is not found.</source>
          <target state="translated">NULL будет возвращен,если REGEXP*не будет найден.</target>
        </trans-unit>
        <trans-unit id="6c2496a022b02739f43ed430676315b0c3b34a08" translate="yes" xml:space="preserve">
          <source>NUMBER</source>
          <target state="translated">NUMBER</target>
        </trans-unit>
        <trans-unit id="9a969c7ad3b1a0b9595b8188b657f82438b62232" translate="yes" xml:space="preserve">
          <source>NV</source>
          <target state="translated">NV</target>
        </trans-unit>
        <trans-unit id="de8dc4fa7c538b042ca7c0d8c2872f7018b2f2d9" translate="yes" xml:space="preserve">
          <source>NVX</source>
          <target state="translated">NVX</target>
        </trans-unit>
        <trans-unit id="def32bbdca04fbf76d7fa0113c3d0fd8eea98a15" translate="yes" xml:space="preserve">
          <source>NYI</source>
          <target state="translated">NYI</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="784fe306d7073aacaa442494af76294e3c4c800c" translate="yes" xml:space="preserve">
          <source>NaN()</source>
          <target state="translated">NaN()</target>
        </trans-unit>
        <trans-unit id="8ea6de70f2564dc30edd68bddca7689ae4a18ad9" translate="yes" xml:space="preserve">
          <source>NaN, as opposed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdd06e23eea433753b56651dbbec75237cf1329" translate="yes" xml:space="preserve">
          <source>NaN.</source>
          <target state="translated">NaN.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="bd023d4abed699d0493893db0b8a9b139b7421f3" translate="yes" xml:space="preserve">
          <source>Name &quot;%s&quot; used only once: possible typo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03976a62cd47751685b4ca15bb96f0bcaf7e4a01" translate="yes" xml:space="preserve">
          <source>Name &quot;%s::%s&quot; used only once: possible typo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5a7c30af283c6875cea008a552e7d7c9264007" translate="yes" xml:space="preserve">
          <source>Name of current executing subroutine.</source>
          <target state="translated">Имя текущей исполняющей подпрограммы.</target>
        </trans-unit>
        <trans-unit id="5d6475ea1ed77582899f2ede3c078b5d7ca7f2d5" translate="yes" xml:space="preserve">
          <source>Name of the MRO, either in ISO-8859-1 or UTF-8.</source>
          <target state="translated">Название MRO,либо в ISO-8859-1,либо в UTF-8.</target>
        </trans-unit>
        <trans-unit id="f311c3300c6ca77afd17b4650f40819e62321f9f" translate="yes" xml:space="preserve">
          <source>Name of the executable used to run &lt;code&gt;PPM_INSTALL_SCRIPT&lt;/code&gt; below. (e.g. perl)</source>
          <target state="translated">Имя исполняемого файла, используемого для запуска &lt;code&gt;PPM_INSTALL_SCRIPT&lt;/code&gt; , ниже. (например, Perl)</target>
        </trans-unit>
        <trans-unit id="e843afb94a5b81c10884290c28f3a8b15754d088" translate="yes" xml:space="preserve">
          <source>Name of the executable used to run &lt;code&gt;PPM_UNINSTALL_SCRIPT&lt;/code&gt; below. (e.g. perl)</source>
          <target state="translated">Имя исполняемого файла, используемого для запуска &lt;code&gt;PPM_UNINSTALL_SCRIPT&lt;/code&gt; , ниже. (например, Perl)</target>
        </trans-unit>
        <trans-unit id="8624fc8eceebc0b51b2143689f1f48b7ecc08665" translate="yes" xml:space="preserve">
          <source>Name of the file that contains the package description. MakeMaker looks for a line in the POD matching /^($package\s-\s)(.*)/. This is typically the first line in the &quot;=head1 NAME&quot; section. $2 becomes the abstract.</source>
          <target state="translated">Имя файла,содержащего описание пакета.MakeMaker ищет строку в POD-соответствии /^($package\s-\s)(.*)/.Обычно это первая строка в разделе &quot;=head1 NAME&quot;.$2 становится абстрактной.</target>
        </trans-unit>
        <trans-unit id="8c3cf8734b2c68bc08b2cd79d4d6ccc0136f6aa2" translate="yes" xml:space="preserve">
          <source>Name of the module. This must be specified</source>
          <target state="translated">Название модуля.Оно должно быть указано</target>
        </trans-unit>
        <trans-unit id="7868a8b47d3d92cc64ccf808862aaae2ad267aa5" translate="yes" xml:space="preserve">
          <source>Name of the script that gets executed by the Perl Package Manager after the installation of a package.</source>
          <target state="translated">Имя скрипта,который выполняется Perl Package Manager после установки пакета.</target>
        </trans-unit>
        <trans-unit id="c0c5023ea38126581b7ad8749f0a6eeac640c079" translate="yes" xml:space="preserve">
          <source>Name of the script that gets executed by the Perl Package Manager before the removal of a package.</source>
          <target state="translated">Имя скрипта,который выполняется Perl Package Manager до удаления пакета.</target>
        </trans-unit>
        <trans-unit id="2eb9b9a155f6c64706ab31edb5653aa07c449701" translate="yes" xml:space="preserve">
          <source>Name of the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d34802dcd2d7fcce651f51b7ec73165b93670d1" translate="yes" xml:space="preserve">
          <source>Name_Alias</source>
          <target state="translated">Name_Alias</target>
        </trans-unit>
        <trans-unit id="68785b7e9b3c03448ca8a837701cc8c707a8e260" translate="yes" xml:space="preserve">
          <source>Named Pipes</source>
          <target state="translated">Названные трубы</target>
        </trans-unit>
        <trans-unit id="38f9681437d9ef50ce0be66a608e2a42a4859202" translate="yes" xml:space="preserve">
          <source>Named Unary Operators</source>
          <target state="translated">Унарные операторы</target>
        </trans-unit>
        <trans-unit id="363027e7f4ba04f6c37400d54c44141712c1efe2" translate="yes" xml:space="preserve">
          <source>Named Unicode properties, scripts, and block ranges may be used (like bracketed character classes) by using the &lt;code&gt;\p{}&lt;/code&gt; &quot;matches property&quot; construct and the &lt;code&gt;\P{}&lt;/code&gt; negation, &quot;doesn't match property&quot;.</source>
          <target state="translated">Именованные свойства Unicode, сценарии и диапазоны блоков могут использоваться (например, классы символов в квадратных скобках) с помощью конструкции &lt;code&gt;\p{}&lt;/code&gt; &quot;соответствует свойству&quot; и отрицания &lt;code&gt;\P{}&lt;/code&gt; &quot;не соответствует свойству&quot;.</target>
        </trans-unit>
        <trans-unit id="f7f3bf2783d20b66cecd2489a0534cdb07661abf" translate="yes" xml:space="preserve">
          <source>Named backreference. Similar to numeric backreferences, except that the group is designated by name and not number. If multiple groups have the same name then it refers to the leftmost defined group in the current match.</source>
          <target state="translated">Названная обратная ссылка.Аналогично цифровым обратным ссылкам,за исключением того,что группа обозначается именем,а не номером.Если несколько групп имеют одно и то же имя,то это относится к самой левой группе в текущем совпадении.</target>
        </trans-unit>
        <trans-unit id="8dc1cc0c73966f67aab3d39f6cd441d18321c8ff" translate="yes" xml:space="preserve">
          <source>Named backreferences</source>
          <target state="translated">Названные обратные ссылки</target>
        </trans-unit>
        <trans-unit id="16f988a61667e6887152ee06c28af4c95a899d43" translate="yes" xml:space="preserve">
          <source>Named capture callbacks</source>
          <target state="translated">Обратные вызовы захвата по имени</target>
        </trans-unit>
        <trans-unit id="a3c4ad7c429d9290102e7a6d5ae4db5c22f03f6f" translate="yes" xml:space="preserve">
          <source>Named or numbered characters and character sequences</source>
          <target state="translated">Названные или пронумерованные символы и последовательности символов</target>
        </trans-unit>
        <trans-unit id="65c4b696d78a27092b9642bc7761e57eb905bc44" translate="yes" xml:space="preserve">
          <source>Named parameters control how the processing is done. The following parameters are accepted:</source>
          <target state="translated">Именованные параметры контролируют процесс обработки.Принимаются следующие параметры:</target>
        </trans-unit>
        <trans-unit id="8f1d236b5d1295b7af7be948d212edc9fb3b966e" translate="yes" xml:space="preserve">
          <source>Named referencing</source>
          <target state="translated">Названная ссылка</target>
        </trans-unit>
        <trans-unit id="50a6776c3f86da85ce1ec46afa315f3a40ef3305" translate="yes" xml:space="preserve">
          <source>Named regexp capture buffers</source>
          <target state="translated">Названные буферы регэкспресс захвата</target>
        </trans-unit>
        <trans-unit id="5bc55622970622d1a946affa392f121998a96cf2" translate="yes" xml:space="preserve">
          <source>Named sequences proposed for inclusion in a later version of the Unicode Standard; if you need them now, you can append this file to</source>
          <target state="translated">Именованные последовательности,предложенные для включения в более поздней версии стандарта Юникод;если они вам нужны сейчас,вы можете добавить этот файл к</target>
        </trans-unit>
        <trans-unit id="5c3780cc2079e280219cd2c73d0c31b04ec16680" translate="yes" xml:space="preserve">
          <source>NamedSequences.txt</source>
          <target state="translated">NamedSequences.txt</target>
        </trans-unit>
        <trans-unit id="e037613d4443785152fa3d95c2810f8c3354dd9d" translate="yes" xml:space="preserve">
          <source>NamedSqProv.txt</source>
          <target state="translated">NamedSqProv.txt</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="baefd92d48050a7240199d96c1a36a56b359c89c" translate="yes" xml:space="preserve">
          <source>Names can be specified in a variety of platform independent forms. Any names in the form &lt;b&gt;-lname&lt;/b&gt; are converted into</source>
          <target state="translated">Имена могут быть указаны в различных формах, не зависящих от платформы. Любые имена в форме &lt;b&gt;-lname&lt;/b&gt; преобразуются в</target>
        </trans-unit>
        <trans-unit id="6b7a2802d0082d79ff8976f3240ee6e3da8a9ceb" translate="yes" xml:space="preserve">
          <source>Names can include package names, which are relative to the specified PACKAGE. So these two calls have the same effect:</source>
          <target state="translated">Имена могут включать имена пакетов,относящиеся к указанному PACKAGE.Таким образом,эти два вызова имеют один и тот же эффект:</target>
        </trans-unit>
        <trans-unit id="821821513dd7967a6e00087d901b1371b2e3ad09" translate="yes" xml:space="preserve">
          <source>Names in EXPORT_TAGS must also appear in @EXPORT or @EXPORT_OK.</source>
          <target state="translated">Имена в переменных EXPORT_TAGS также должны отображаться в @EXPORT или @EXPORT_OK.</target>
        </trans-unit>
        <trans-unit id="c41eeb7fb1662a7738050a541890eb91cb128a6c" translate="yes" xml:space="preserve">
          <source>Names that start with a digit may contain only more digits. Names that do not start with a letter, underscore, digit or a caret (i.e. a control character) are limited to one character, e.g., &lt;code&gt;$%&lt;/code&gt; or &lt;code&gt;$$&lt;/code&gt; . (Most of these one character names have a predefined significance to Perl. For instance, &lt;code&gt;$$&lt;/code&gt; is the current process id.)</source>
          <target state="translated">Имена, начинающиеся с цифры, могут содержать только большее количество цифр. Имена, которые не начинаются с буквы, подчеркивания, цифры или символа каретки (т. Е. Управляющего символа), ограничиваются одним символом, например, &lt;code&gt;$%&lt;/code&gt; или &lt;code&gt;$$&lt;/code&gt; . (Большинство из этих односимвольных имен имеют предопределенное значение для Perl. Например, &lt;code&gt;$$&lt;/code&gt; - это текущий идентификатор процесса.)</target>
        </trans-unit>
        <trans-unit id="d6e3c92c2253dbdd3c4ece3e19dfc6a918646d7c" translate="yes" xml:space="preserve">
          <source>Names that start with a digit may contain only more digits. Names that do not start with a letter, underscore, digit or a caret are limited to one character, e.g., &lt;code&gt;$%&lt;/code&gt; or &lt;code&gt;$$&lt;/code&gt;. (Most of these one character names have a predefined significance to Perl. For instance, &lt;code&gt;$$&lt;/code&gt; is the current process id. And all such names are reserved for Perl's possible use.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61c957a0ea0313872e704f1b4fb7ca6add44160" translate="yes" xml:space="preserve">
          <source>Names which are unknown are output as &lt;code&gt;name='UNKNOWN';&lt;/code&gt; . See also &lt;code&gt;-V:name&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">Неизвестные имена выводятся как &lt;code&gt;name='UNKNOWN';&lt;/code&gt; . См. Также &lt;code&gt;-V:name&lt;/code&gt; в параметрах &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;команд в perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5410d6566e489278d83cf4a60c9e048f5044cfdb" translate="yes" xml:space="preserve">
          <source>Names which are unknown are output as &lt;code&gt;name='UNKNOWN';&lt;/code&gt;. See also &lt;code&gt;-V:name&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;&quot;Command Switches&quot; in perlrun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acbec48b382ee1ec2cbdc1893b6da5a5a130d2d" translate="yes" xml:space="preserve">
          <source>NamesList.html</source>
          <target state="translated">NamesList.html</target>
        </trans-unit>
        <trans-unit id="98ccbf4f5c0c9d25ab257fc9d0e7b0d41bb961f3" translate="yes" xml:space="preserve">
          <source>NamesList.txt</source>
          <target state="translated">NamesList.txt</target>
        </trans-unit>
        <trans-unit id="286ecdc947944985bf973a72fa95a40f4b1c4f17" translate="yes" xml:space="preserve">
          <source>Namespace for Perl's core routines</source>
          <target state="translated">Пространство имен для основных процедур Perl</target>
        </trans-unit>
        <trans-unit id="da7731dc19a7c651d54b18d692eb80fc4c7ecba5" translate="yes" xml:space="preserve">
          <source>Namespace for formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34803b64f16548b242233b7132d75f6e5f8fe8e6" translate="yes" xml:space="preserve">
          <source>Naming conventions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3056e2bd0eee723080eaab7641ee4953af255c2b" translate="yes" xml:space="preserve">
          <source>Nathan Torkington &amp;lt;gnat@frii.com&amp;gt; - for some input on the documentation.</source>
          <target state="translated">Натан Торкингтон &amp;lt;gnat@frii.com&amp;gt; - за некоторые комментарии по документации.</target>
        </trans-unit>
        <trans-unit id="4fc6e7f740abb8af896ebedebf941a3f8d7076b5" translate="yes" xml:space="preserve">
          <source>Native</source>
          <target state="translated">Native</target>
        </trans-unit>
        <trans-unit id="425a4714dabb702a64966a65e07281505da878fd" translate="yes" xml:space="preserve">
          <source>Native Builds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab012d77f1bfa1be662b51a80ae510c6cc5e59a" translate="yes" xml:space="preserve">
          <source>Native filenames are of the form</source>
          <target state="translated">Фамилии аборигенов имеют форму</target>
        </trans-unit>
        <trans-unit id="f32184e7a20d2a9f1d6a13ce8f1e8d87d0cb4d78" translate="yes" xml:space="preserve">
          <source>Natively compiling perl 5.30 or later should be as straightforward as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9026c8c56fc624332cd74cb5876316288c820bc7" translate="yes" xml:space="preserve">
          <source>Naturally, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; will do the reverse: it turns a character into a code point.</source>
          <target state="translated">Естественно, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; делает обратное: он превращает символ в кодовую точку.</target>
        </trans-unit>
        <trans-unit id="7462c5dafb369c2da402d8819a84ebcb4f3bc37d" translate="yes" xml:space="preserve">
          <source>Naturally, &lt;code&gt;ord()&lt;/code&gt; will do the reverse: it turns a character into a code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e294c54a3821c9309d267be94bb7315c4078d9b4" translate="yes" xml:space="preserve">
          <source>Nearly all of Perl already</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a140f3939f57780fd27a1d0165e3f2dc71e5686" translate="yes" xml:space="preserve">
          <source>Nearly all regops that involve looking at the input string have two cases, one for UTF-8, and one not. In fact, it's often more complex than that, as the pattern may be UTF-8 as well.</source>
          <target state="translated">Почти все регопы,которые связаны с просмотром входной строки,имеют два случая,один для UTF-8,а другой нет.На самом деле,это часто бывает сложнее,так как паттерн может быть и UTF-8.</target>
        </trans-unit>
        <trans-unit id="1fd3d62f70c4406780dc474d5a41b0bf90bd7065" translate="yes" xml:space="preserve">
          <source>Need exactly 3 octal digits in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3f8a85f04426583b54b3312fffad6ba80924a3" translate="yes" xml:space="preserve">
          <source>Needed source files can be downloaded at &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt;</source>
          <target state="translated">Необходимые исходные файлы можно скачать на &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4c6bdc96d2ca3d241efb74d4a188d630f77bcd7" translate="yes" xml:space="preserve">
          <source>Negate the number, e.g. change the sign between '+' and '-', or between '+inf' and '-inf', respectively. Does nothing for NaN or zero.</source>
          <target state="translated">Отрицать число,например,менять знак между '+' и '-',или между '+inf' и '-inf',соответственно.Ничего не делает для NaN или нуля.</target>
        </trans-unit>
        <trans-unit id="6d32e5cf3d83bdea0163589b14f9ddb6e83801ec" translate="yes" xml:space="preserve">
          <source>Negates previous setting of &lt;code&gt;ctx=noctx&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24048c04eba343a323fecac37d642445c66f6c28" translate="yes" xml:space="preserve">
          <source>Negation</source>
          <target state="translated">Negation</target>
        </trans-unit>
        <trans-unit id="7eeb67f2368c6c772835291295311889c092fbbd" translate="yes" xml:space="preserve">
          <source>Negation of POSIX character classes</source>
          <target state="translated">Отрицание классов символов POSIX</target>
        </trans-unit>
        <trans-unit id="0bbb46ed18fc239283ab5d6721b9f20daf485efe" translate="yes" xml:space="preserve">
          <source>Negative '/' count in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838604a201964cc68e7ef736a20025e0b5fec649" translate="yes" xml:space="preserve">
          <source>Negative Epoch Values</source>
          <target state="translated">Ценности отрицательной эпохи</target>
        </trans-unit>
        <trans-unit id="19f49d5d6ade2549965db79a7030897c2f5f4f62" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported. Specifying a negative index position greater than the number of items in the queue may return items from the head of the queue (similar to &lt;code&gt;dequeue_nb&lt;/code&gt; ) if the count overlaps the head of the queue from the specified position (i.e. if queue size + index + count is greater than zero):</source>
          <target state="translated">Поддерживаются отрицательные позиции индекса. Указание отрицательной позиции индекса, превышающей количество элементов в очереди, может вернуть элементы из &lt;code&gt;dequeue_nb&lt;/code&gt; очереди (аналогично dequeue_nb ), если счетчик перекрывает заголовок очереди с указанной позиции (т.е. если размер очереди + индекс + счетчик больше нуля):</target>
        </trans-unit>
        <trans-unit id="77f35a19afaa31759454e6029201200e580e338f" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported. Specifying a negative index position greater than the number of items in the queue may return items from the head of the queue (similar to &lt;code&gt;dequeue_nb&lt;/code&gt;) if the count overlaps the head of the queue from the specified position (i.e. if queue size + index + count is greater than zero):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a43ac9c627d0de9e56d6cc12c6dfda0e520af0" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported:</source>
          <target state="translated">Поддерживаются отрицательные позиции по индексам:</target>
        </trans-unit>
        <trans-unit id="ea5e4636dc65fd0c83bdadbdf91aa1d35d1fb840" translate="yes" xml:space="preserve">
          <source>Negative indexes are treated the same as with FETCH.</source>
          <target state="translated">Отрицательные индексы обрабатываются так же,как и при FETCH.</target>
        </trans-unit>
        <trans-unit id="fe95900811e52afa9dd58cd10e425f82213ff9ca" translate="yes" xml:space="preserve">
          <source>Negative length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e608ed3d872d4ab6a4bbdcfb93eb90da28b4eec1" translate="yes" xml:space="preserve">
          <source>Negative offset to vec in lvalue context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed04f2afce275a8c0ec8d20c42d1e68c8ed46a8b" translate="yes" xml:space="preserve">
          <source>Negative repeat count does nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ec1ebfabb890ebda597976839aada64bc04b63" translate="yes" xml:space="preserve">
          <source>Negative values give the Unicode replacement character (chr(0xfffd)), except under the &lt;a href=&quot;../bytes&quot;&gt;bytes&lt;/a&gt; pragma, where the low eight bits of the value (truncated to an integer) are used.</source>
          <target state="translated">Отрицательные значения дают символ замены Unicode (chr (0xfffd)), за исключением прагмы &lt;a href=&quot;../bytes&quot;&gt;bytes&lt;/a&gt; , где используются младшие восемь бит значения (усеченные до целого числа).</target>
        </trans-unit>
        <trans-unit id="1c329b07c62265cbfacaf020c4fd1ffae1eec60d" translate="yes" xml:space="preserve">
          <source>Negative values give the Unicode replacement character (chr(0xfffd)), except under the &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; pragma, where the low eight bits of the value (truncated to an integer) are used.</source>
          <target state="translated">Отрицательные значения дают символ замены Unicode (chr (0xfffd)), за исключением прагмы &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; , где используются младшие восемь бит значения (усеченные до целого числа).</target>
        </trans-unit>
        <trans-unit id="1f8e2d0b246c79d6b8bec7311afcd29fb2d3ca36" translate="yes" xml:space="preserve">
          <source>Neil Bowers &amp;lt;neil@bowers.com&amp;gt;</source>
          <target state="translated">Нил Бауэрс &amp;lt;neil@bowers.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6d2dec944babf88ec6f3aa5e208e251180845055" translate="yes" xml:space="preserve">
          <source>Neither IPC::Run nor IPC::Open3 can interleave STDOUT and STDERR. For short bursts of output from a program, e.g. this sample,</source>
          <target state="translated">Ни IPC::Run,ни IPC::Open3 не могут чередовать STDOUT и STDERR.Для коротких всплесков вывода из программы,например,этот пример,</target>
        </trans-unit>
        <trans-unit id="347950b60212511ddff56b7de9a7367e8d020bbb" translate="yes" xml:space="preserve">
          <source>Neither of these forms will autovivify any stashes at compile time and only have run time effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55223738b7234df257020b80e5bb6455348daec" translate="yes" xml:space="preserve">
          <source>Neither of these last two commands will update your working directory, however both will update the remote-tracking branches in your repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfe7ff09d4107e0ffd3c63c3f6ea8716597ff26" translate="yes" xml:space="preserve">
          <source>Neither the name of the University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ec836d28f250f8bd76b8042a3917b08e1cacac" translate="yes" xml:space="preserve">
          <source>Neither using offsets nor adding &lt;code&gt;x&lt;/code&gt; 's to bridge the gaps is satisfactory. (Just imagine what happens if the structure changes.) What we really need is a way of saying &quot;skip as many bytes as required to the next multiple of N&quot;. In fluent Templatese, you say this with &lt;code&gt;x!N&lt;/code&gt; where N is replaced by the appropriate value. Here's the next version of our struct packaging:</source>
          <target state="translated">Ни использование смещений, ни добавление &lt;code&gt;x&lt;/code&gt; для заполнения пробелов не является удовлетворительным. (Только представьте, что произойдет, если структура изменится.) Что нам действительно нужно, так это способ сказать &amp;laquo;пропустить столько байтов, сколько требуется, до следующего кратного N&amp;raquo;. В свободном использовании Templatese вы говорите это с помощью &lt;code&gt;x!N&lt;/code&gt; где N заменяется соответствующим значением. Вот следующая версия нашей структуры:</target>
        </trans-unit>
        <trans-unit id="60a99bcf07880ccd5a328d1c33878c630eeaa795" translate="yes" xml:space="preserve">
          <source>Neither using offsets nor adding &lt;code&gt;x&lt;/code&gt;'s to bridge the gaps is satisfactory. (Just imagine what happens if the structure changes.) What we really need is a way of saying &quot;skip as many bytes as required to the next multiple of N&quot;. In fluent Templatese, you say this with &lt;code&gt;x!N&lt;/code&gt; where N is replaced by the appropriate value. Here's the next version of our struct packaging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07a42044209eb0a8555ca6ade59268b7094a144" translate="yes" xml:space="preserve">
          <source>Nelson, Greg (editor). Systems Programming with Modula-3. Prentice Hall, 1991, ISBN 0-13-590464-1.</source>
          <target state="translated">Нельсон,Грег (редактор).Программирование систем с помощью Modula-3.Прентис Холл,1991,ISBN 0-13-590464-1.</target>
        </trans-unit>
        <trans-unit id="f70ac392d4ed3bbaf151d74c3300a0bf8e1f667a" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; constructs are not no-ops, even if at first glance they might seem to be. This is because the nested &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; can restrict internal backtracking that otherwise might occur. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c5029fd7192d4f3ec3c0c9acc5e8ee66ed64a0" translate="yes" xml:space="preserve">
          <source>Nested quantifiers in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76def473f02aedcda635cf9dd95594a147e23e1" translate="yes" xml:space="preserve">
          <source>Nesting level is defined by number of hash- or arrayrefs that the encoder needs to traverse to reach a given point or the number of &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;[&lt;/code&gt; characters without their matching closing parenthesis crossed to reach a given character in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efebdaa6b0f715d9d72c6ff062fcce8380a1d17" translate="yes" xml:space="preserve">
          <source>Net::BitTorrent</source>
          <target state="translated">Net::BitTorrent</target>
        </trans-unit>
        <trans-unit id="4eb9236f898d35e46f6533b663fb0cc39ac3281b" translate="yes" xml:space="preserve">
          <source>Net::Cmd</source>
          <target state="translated">Net::Cmd</target>
        </trans-unit>
        <trans-unit id="9b649db7310bc211d9f1ac99e1a4786a84597204" translate="yes" xml:space="preserve">
          <source>Net::Cmd - Network Command class (as used by FTP, SMTP etc)</source>
          <target state="translated">Net::Cmd-класс Network Command (используется для FTP,SMTP и т.д.)</target>
        </trans-unit>
        <trans-unit id="1294c92fcf04499d6b81523ccdaa5539dece0dcd" translate="yes" xml:space="preserve">
          <source>Net::Config</source>
          <target state="translated">Net::Config</target>
        </trans-unit>
        <trans-unit id="90625b9f0d5c16a32efbdc040ebbf3d89a17fb98" translate="yes" xml:space="preserve">
          <source>Net::Config - Local configuration data for libnet</source>
          <target state="translated">Net::Конфигурация-данные локальной конфигурации для libnet</target>
        </trans-unit>
        <trans-unit id="d2609cd7d34a9ef70d66b656d20f6d7141373166" translate="yes" xml:space="preserve">
          <source>Net::Domain</source>
          <target state="translated">Net::Domain</target>
        </trans-unit>
        <trans-unit id="79d06eb32b3346cf8bd3d603f70534bd0b81c26c" translate="yes" xml:space="preserve">
          <source>Net::Domain - Attempt to evaluate the current host's internet name and domain</source>
          <target state="translated">Net::Домен-Попытка оценить интернет-имя и домен текущего хоста.</target>
        </trans-unit>
        <trans-unit id="e600d59f8d5cea62e2e7232d04583ce46bcf0e54" translate="yes" xml:space="preserve">
          <source>Net::FTP</source>
          <target state="translated">Net::FTP</target>
        </trans-unit>
        <trans-unit id="760713d42087f7dca8f19249d8ef722a9fcee544" translate="yes" xml:space="preserve">
          <source>Net::FTP - FTP Client class</source>
          <target state="translated">Net::FTP-класс FTP-клиента</target>
        </trans-unit>
        <trans-unit id="92a35c424cd4eca45aaf00b8629e639085d233d4" translate="yes" xml:space="preserve">
          <source>Net::FTP implements the most popular ftp proxy firewall approach. The scheme implemented is that where you log in to the firewall with &lt;code&gt;user@hostname&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fe29b949236419be339c0b7efff07aa8604a33" translate="yes" xml:space="preserve">
          <source>Net::FTP uses IO::Socket to open the connection and IO::Socket allows the port number to be specified as part of the hostname. So this problem can be resolved by either passing a Firewall option like &lt;code&gt;&quot;hostname:1234&quot;&lt;/code&gt; or by setting the &lt;code&gt;ftp_firewall&lt;/code&gt; option in Net::Config to be a string in the same form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c4644c97591ee47a8aae6116ac76edd4f5d83b" translate="yes" xml:space="preserve">
          <source>Net::FTP, like several other packages in libnet, inherits from Net::Cmd, so all the methods described in Net::Cmd are also available on Net::FTP objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59946fef31b50a99653b28a153ac63abae9315d1" translate="yes" xml:space="preserve">
          <source>Net::FTP::dataconn</source>
          <target state="translated">Net::FTP::dataconn</target>
        </trans-unit>
        <trans-unit id="68e99886fb9e7eeead8137e48281b0ac46381c53" translate="yes" xml:space="preserve">
          <source>Net::FTP::dataconn - FTP Client data connection class</source>
          <target state="translated">Net::FTP::dataconn-класс соединения данных FTP-клиента</target>
        </trans-unit>
        <trans-unit id="2ba79303d7df37b27bccb82e4aaeb8383769338b" translate="yes" xml:space="preserve">
          <source>Net::NNTP</source>
          <target state="translated">Net::NNTP</target>
        </trans-unit>
        <trans-unit id="1f88f3dc9b54f8f1f3117b189d2bcc352702751e" translate="yes" xml:space="preserve">
          <source>Net::NNTP - NNTP Client class</source>
          <target state="translated">Net::NNTP-класс клиентов NNTP</target>
        </trans-unit>
        <trans-unit id="634fa163a1bb55220f43fe3d8f658acf7bf2e805" translate="yes" xml:space="preserve">
          <source>Net::Netrc</source>
          <target state="translated">Net::Netrc</target>
        </trans-unit>
        <trans-unit id="e565165304b4cd87ebc082d3d778254a21d1e828" translate="yes" xml:space="preserve">
          <source>Net::Netrc - OO interface to users netrc file</source>
          <target state="translated">Net::Netrc-OO-интерфейс для пользователей Netrc-файла</target>
        </trans-unit>
        <trans-unit id="07d7d837c6ee6980c7dd03a4fc9e0f56e0b48e2f" translate="yes" xml:space="preserve">
          <source>Net::POP3</source>
          <target state="translated">Net::POP3</target>
        </trans-unit>
        <trans-unit id="c035763415c5e31a5fb091c5e1210e8a45507f17" translate="yes" xml:space="preserve">
          <source>Net::POP3 - Post Office Protocol 3 Client class (RFC1939)</source>
          <target state="translated">Net::POP3-Клиентский класс почтового протокола 3 (RFC1939)</target>
        </trans-unit>
        <trans-unit id="aa89e2215ec797bac7f32905762d8dcb7883a796" translate="yes" xml:space="preserve">
          <source>Net::Ping</source>
          <target state="translated">Net::Ping</target>
        </trans-unit>
        <trans-unit id="797696af258d1ca33ead432810454bbe7f86b9d9" translate="yes" xml:space="preserve">
          <source>Net::Ping - check a remote host for reachability</source>
          <target state="translated">Net::Ping-проверка удаленного хоста на доступность</target>
        </trans-unit>
        <trans-unit id="7523e64a2a317d77f41e0ee4bcc5eaf0e15b59ef" translate="yes" xml:space="preserve">
          <source>Net::Ping-&amp;gt;new([proto, timeout, bytes, device, tos, ttl, family, host, port, bind, gateway, retrans, pingstring, source_verify econnrefused dontfrag IPV6_USE_MIN_MTU IPV6_RECVPATHMTU])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7892c063104435dff8c4fb6f81f8e0633b34593b" translate="yes" xml:space="preserve">
          <source>Net::SMTP</source>
          <target state="translated">Net::SMTP</target>
        </trans-unit>
        <trans-unit id="3f4b2bd689e539d2c249ffa70c859d6d28efdef2" translate="yes" xml:space="preserve">
          <source>Net::SMTP - Simple Mail Transfer Protocol Client</source>
          <target state="translated">Net::SMTP-Простой клиент протокола передачи почты</target>
        </trans-unit>
        <trans-unit id="06e6ad3b368406a8be028b87e347415ebb4b0cdf" translate="yes" xml:space="preserve">
          <source>Net::SMTP attempts to DWIM with addresses that are passed. For example an application might extract The From: line from an email and pass that to mail(). While this may work, it is not recommended. The application should really use a module like &lt;a href=&quot;Mail::Address&quot;&gt;Mail::Address&lt;/a&gt; to extract the mail address and pass that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dd7ce8a5f6c30dbe592557d703bdc3c58ebeb5" translate="yes" xml:space="preserve">
          <source>Net::SMTP attempts to DWIM with addresses that are passed. For example an application might extract The From: line from an email and pass that to mail(). While this may work, it is not recommended. The application should really use a module like &lt;a href=&quot;http://search.cpan.org/perldoc/Mail::Address&quot;&gt;Mail::Address&lt;/a&gt; to extract the mail address and pass that.</source>
          <target state="translated">Net :: SMTP пытается DWIM с переданными адресами. Например, приложение может извлечь строку From: из электронного письма и передать ее в mail (). Хотя это может сработать, это не рекомендуется. Приложение действительно должно использовать такой модуль, как &lt;a href=&quot;http://search.cpan.org/perldoc/Mail::Address&quot;&gt;Mail :: Address,&lt;/a&gt; чтобы извлечь почтовый адрес и передать его.</target>
        </trans-unit>
        <trans-unit id="8daf5a6d470279d0dfd4ec9a06cb691d5194e8eb" translate="yes" xml:space="preserve">
          <source>Net::SMTP implements the SMTP protocol. The DNS MX lookup is not part of this protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64018d825c9dce97cd967ab565ae5bde0e71a33f" translate="yes" xml:space="preserve">
          <source>Net::SSLeay on Solaris</source>
          <target state="translated">Net::SSLeay на Solaris</target>
        </trans-unit>
        <trans-unit id="8e0508a806d7681b9f57b4f0dafc12dd8ed03cac" translate="yes" xml:space="preserve">
          <source>Net::SSLeay requires a /dev/urandom to be present. This device is available from Solaris 9 onwards. For earlier Solaris versions you can either get the package SUNWski (packaged with several Sun software products, for example the Sun WebServer, which is part of the Solaris Server Intranet Extension, or the Sun Directory Services, part of Solaris for ISPs) or download the ANDIrand package from &lt;a href=&quot;http://www.cosy.sbg.ac.at/~andi/&quot;&gt;http://www.cosy.sbg.ac.at/~andi/&lt;/a&gt;. If you use SUNWski, make a symbolic link /dev/urandom pointing to /dev/random. For more details, see Document ID27606 entitled &quot;Differing /dev/random support requirements within Solaris[TM] Operating Environments&quot;, available at &lt;a href=&quot;http://sunsolve.sun.com&quot;&gt;http://sunsolve.sun.com&lt;/a&gt; .</source>
          <target state="translated">Net :: SSLeay требует наличия / dev / urandom. Это устройство доступно начиная с Solaris 9. Для более ранних версий Solaris вы можете либо получить пакет SUNWski (в комплекте с несколькими программными продуктами Sun, например, Sun WebServer, который является частью расширения Solaris Server Intranet Extension, или Sun Directory Services, частью Solaris для интернет-провайдеров), либо загрузить ANDIrand пакет с &lt;a href=&quot;http://www.cosy.sbg.ac.at/~andi/&quot;&gt;http://www.cosy.sbg.ac.at/~andi/&lt;/a&gt; . Если вы используете SUNWski, создайте символическую ссылку / dev / urandom, указывающую на / dev / random. Дополнительные сведения см. В документе ID27606, озаглавленном &amp;laquo;Различия в требованиях к поддержке / dev / random в операционных средах Solaris [TM]&amp;raquo;, доступном по адресу &lt;a href=&quot;http://sunsolve.sun.com&quot;&gt;http://sunsolve.sun.com&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="102b884f179ead18ed0a96b3577140ffb3aa57c6" translate="yes" xml:space="preserve">
          <source>Net::Time</source>
          <target state="translated">Net::Time</target>
        </trans-unit>
        <trans-unit id="d4f2b1be39e8c9f5b26b24988447cbc89c5fc6f8" translate="yes" xml:space="preserve">
          <source>Net::Time - time and daytime network client interface</source>
          <target state="translated">Net::Время-время и дневной интерфейс сетевого клиента</target>
        </trans-unit>
        <trans-unit id="a529af9268e6c0617479c607894ba89216a5cc4f" translate="yes" xml:space="preserve">
          <source>Net::hostent</source>
          <target state="translated">Net::hostent</target>
        </trans-unit>
        <trans-unit id="98b632aa79485958bf201436fd61cedb7d0ac34a" translate="yes" xml:space="preserve">
          <source>Net::hostent - by-name interface to Perl's built-in gethost*() functions</source>
          <target state="translated">Net::hostent-интерфейс с именем для встроенных в Perl функций gethost*().</target>
        </trans-unit>
        <trans-unit id="bc76b178ba622c9caf521e77cbcbe2855aa1bc5e" translate="yes" xml:space="preserve">
          <source>Net::libnetFAQ</source>
          <target state="translated">Net::libnetFAQ</target>
        </trans-unit>
        <trans-unit id="04ad5a37dedb3b744b15bac4ca7302257a051aef" translate="yes" xml:space="preserve">
          <source>Net::netent</source>
          <target state="translated">Net::netent</target>
        </trans-unit>
        <trans-unit id="1fbeb7dc05a497d734af7f7775d02430de2ab805" translate="yes" xml:space="preserve">
          <source>Net::netent - by-name interface to Perl's built-in getnet*() functions</source>
          <target state="translated">Net::netent-двунаправленный интерфейс к встроенным функциям Perl getnet*().</target>
        </trans-unit>
        <trans-unit id="7f1cdba311d5959633cf045aa60bf446ccf54af8" translate="yes" xml:space="preserve">
          <source>Net::protoent</source>
          <target state="translated">Net::protoent</target>
        </trans-unit>
        <trans-unit id="078ad82faa206681ea192cb93b449ee403fbdf7a" translate="yes" xml:space="preserve">
          <source>Net::protoent - by-name interface to Perl's built-in getproto*() functions</source>
          <target state="translated">Net::protoent-двунаправленный интерфейс для встроенных в Perl функций getproto*().</target>
        </trans-unit>
        <trans-unit id="c5f4c3e0d467febed569e1767ca88a110ec104d8" translate="yes" xml:space="preserve">
          <source>Net::servent</source>
          <target state="translated">Net::servent</target>
        </trans-unit>
        <trans-unit id="7e6a54f9191b9c026dff4416eca28d52185f8a20" translate="yes" xml:space="preserve">
          <source>Net::servent - by-name interface to Perl's built-in getserv*() functions</source>
          <target state="translated">Net::servent-двунаправленный интерфейс к встроенным функциям Perl geterv*().</target>
        </trans-unit>
        <trans-unit id="3e9e1f6f189ff8e4d505c81b54a796d5e66a2542" translate="yes" xml:space="preserve">
          <source>NetBSD</source>
          <target state="translated">NetBSD</target>
        </trans-unit>
        <trans-unit id="c5264f1d295bd0d284bab240b5d586bcd3e69efe" translate="yes" xml:space="preserve">
          <source>NetConfig VALUES</source>
          <target state="translated">NetConfig VALUES</target>
        </trans-unit>
        <trans-unit id="fb61c8a8eba24117016597fc7618f38821b16e8f" translate="yes" xml:space="preserve">
          <source>Netherlands</source>
          <target state="translated">Netherlands</target>
        </trans-unit>
        <trans-unit id="e17b1a34870d3dc76ed5ed6dddba8f1f23174d27" translate="yes" xml:space="preserve">
          <source>Network Command class (as used by FTP, SMTP etc)</source>
          <target state="translated">Класс сетевой команды (как используется FTP,SMTP и т.д.)</target>
        </trans-unit>
        <trans-unit id="c1cb4106aaf9e962404483234251f265e659ef77" translate="yes" xml:space="preserve">
          <source>Network File System, which allows you to mount a remote filesystem as if it were local.</source>
          <target state="translated">Сетевая файловая система,которая позволяет вам монтировать удаленную файловую систему,как если бы она была локальной.</target>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="translated">Networking</target>
        </trans-unit>
        <trans-unit id="1732a8d9a671f491b3444f4dd135a29f1c8db726" translate="yes" xml:space="preserve">
          <source>Networking constants and support functions</source>
          <target state="translated">Сетевые константы и функции поддержки</target>
        </trans-unit>
        <trans-unit id="3efe51707d515bbc55ed5e7a197cc135de39695b" translate="yes" xml:space="preserve">
          <source>Networking, Device Control (modems) and InterProcess Communication</source>
          <target state="translated">Сетевое взаимодействие,управление устройствами (модемами)и межпроцессное взаимодействие</target>
        </trans-unit>
        <trans-unit id="f7865ee5f52b156bb53526c08f3154f5493c0e67" translate="yes" xml:space="preserve">
          <source>Neutralizes an op when it is no longer needed, but is still linked to from other ops.</source>
          <target state="translated">Нейтрализует операцию,когда она больше не нужна,но все еще связана с другими операционными.</target>
        </trans-unit>
        <trans-unit id="2d9cdfd72ef200657927c8b92328d8203f7e523d" translate="yes" xml:space="preserve">
          <source>Never add a comma after &lt;code&gt;pTHX&lt;/code&gt; yourself--always use the form of the macro with the underscore for functions that take explicit arguments, or the form without the argument for functions with no explicit arguments.</source>
          <target state="translated">Никогда не добавляйте запятую после &lt;code&gt;pTHX&lt;/code&gt; самостоятельно - всегда используйте форму макроса с подчеркиванием для функций, которые принимают явные аргументы, или форму без аргумента для функций без явных аргументов.</target>
        </trans-unit>
        <trans-unit id="5435ce11aa44af4272570c0064637abeeb8634e2" translate="yes" xml:space="preserve">
          <source>Never forget that the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag is separate from the PV value; you need to be sure you don't accidentally knock it off while you're manipulating SVs. More specifically, you cannot expect to do this:</source>
          <target state="translated">Никогда не забывайте, что флаг &lt;code&gt;SVf_UTF8&lt;/code&gt; отделен от значения PV; вам нужно быть уверенным, что вы случайно не сбили его, когда управляете SV. В частности, вы не можете ожидать этого:</target>
        </trans-unit>
        <trans-unit id="8b5cf307b4ec3e0ecc76a7852a46b24101becfd1" translate="yes" xml:space="preserve">
          <source>Never release anything (even a one-word documentation patch) without incrementing the number. Even a one-word documentation patch should result in a change in version at the sub-minor level.</source>
          <target state="translated">Никогда ничего не выпускайте (даже патч для документации по одному слову)без увеличения номера.Даже патч для документации на одно слово должен привести к изменению версии на уровне sub-minor.</target>
        </trans-unit>
        <trans-unit id="b9967e88983d851428fa745aa72bb8b4e0bec2da" translate="yes" xml:space="preserve">
          <source>New Caledonia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15dbc72156ffc0843ba2348b704e297c877b65" translate="yes" xml:space="preserve">
          <source>New Default Hash Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faca668b323e8715f2386a28f65791202098c13" translate="yes" xml:space="preserve">
          <source>New Hampshire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b173294f2264191e273c10c1191a9e69ee069cb" translate="yes" xml:space="preserve">
          <source>New Jersey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df5b2ef307f6a160a509c29570eb50079d5b0f1" translate="yes" xml:space="preserve">
          <source>New Things in this Example</source>
          <target state="translated">Новое в этом примере</target>
        </trans-unit>
        <trans-unit id="3dddf7feb16bf399efe204acf0fee9106ad446eb" translate="yes" xml:space="preserve">
          <source>New York</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2238e91907fa2436a6a50e0fd8cf97ab60ec508" translate="yes" xml:space="preserve">
          <source>New Zealand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2584dea92b21670e4258fc9ba91d4693d707e48d" translate="yes" xml:space="preserve">
          <source>New code should favor the three-argument form of &lt;code&gt;open&lt;/code&gt; over this older form. Declaring the mode and the filename as two distinct arguments avoids any confusion between the two.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f51bfcb9560ecde82ad892ebcafb708e6079f56" translate="yes" xml:space="preserve">
          <source>New digest implementations should consider subclassing from &lt;a href=&quot;Digest::base&quot;&gt;Digest::base&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dbbca1c816cd191c8bd8984ca3248c86453e2c" translate="yes" xml:space="preserve">
          <source>New digest implementations should consider subclassing from &lt;a href=&quot;digest/base&quot;&gt;Digest::base&lt;/a&gt;.</source>
          <target state="translated">Новые реализации дайджеста должны учитывать создание подклассов от &lt;a href=&quot;digest/base&quot;&gt;Digest :: base&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b1da49e0f3f02f18a191c8fcb01275608dfe945" translate="yes" xml:space="preserve">
          <source>New features and extensions to the language can be contentious. There is no specific set of criteria which determine what features get added, but here are some questions to consider when developing a patch:</source>
          <target state="translated">Новые возможности и расширения языка могут быть спорными.Нет определённого набора критериев,определяющих,какие функции будут добавлены,но вот некоторые вопросы,которые следует учитывать при разработке патча:</target>
        </trans-unit>
        <trans-unit id="9da95c014dd8883747091781d4d6ca60e675421a" translate="yes" xml:space="preserve">
          <source>New form, no specials, outside O framework:</source>
          <target state="translated">Новая форма,никаких спецпредложений,вне рамок &quot;О&quot;:</target>
        </trans-unit>
        <trans-unit id="5e8cec07473bfe4fcd70c1e35f5f7241e6718c1b" translate="yes" xml:space="preserve">
          <source>New in v5.22, &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71b0b9cb949acf4db96e41224f4fef5adee91f" translate="yes" xml:space="preserve">
          <source>New in v5.22, &lt;a href=&quot;re#'strict'-mode&quot;&gt;use re 'strict' &lt;/a&gt; applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="translated">Новое в v5.22: &lt;a href=&quot;re#'strict'-mode&quot;&gt;use re 'strict'&lt;/a&gt; применяет более строгие правила, чем при компиляции шаблонов регулярных выражений. Он может найти вещи, которые, хотя и законны, могут не соответствовать вашим задумкам.</target>
        </trans-unit>
        <trans-unit id="395e14e59421d33f95e93938d8513a500819f2e7" translate="yes" xml:space="preserve">
          <source>New in v5.22, this applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="translated">Новое в версии v5.22,при компиляции шаблонов регулярных выражений применяется более строгие правила,чем при компиляции шаблонов регулярных выражений.Он может найти вещи,которые,хотя и легальны,могут быть не такими,какими вы задумывали.</target>
        </trans-unit>
        <trans-unit id="c6ba249fed1974d4b07df4d7258092eb5b6e28d9" translate="yes" xml:space="preserve">
          <source>New releases of maintenance branches should only contain changes that fall into one of the &quot;acceptable&quot; categories set out below, but must not contain any changes that fall into one of the &quot;unacceptable&quot; categories. (For example, a fix for a crashing bug must not be included if it breaks binary compatibility.)</source>
          <target state="translated">Новые выпуски ветвей технического обслуживания должны содержать только изменения,которые попадают в одну из &quot;приемлемых&quot; категорий,указанных ниже,но не должны содержать изменений,которые попадают в одну из &quot;неприемлемых&quot; категорий.(Например,исправление ошибки,приводящей к падению,не должно включаться,если она нарушает бинарную совместимость).</target>
        </trans-unit>
        <trans-unit id="795ece357da263bd94bd3808d4fa48fca182a70d" translate="yes" xml:space="preserve">
          <source>New syntax and semantics which don't break existing language constructs and syntax have a much lower bar. They merely need to prove themselves to be useful, elegant, well designed, and well tested. In most cases, these additions will be marked as</source>
          <target state="translated">Новый синтаксис и семантика,которые не ломают существующие языковые конструкции и синтаксис имеют гораздо более низкий бар.Им просто нужно доказать,что они полезны,элегантны,хорошо продуманы и хорошо протестированы.В большинстве случаев эти дополнения будут помечены как</target>
        </trans-unit>
        <trans-unit id="4fb820941ba4424da4c1818abae06d75b8cd8521" translate="yes" xml:space="preserve">
          <source>New versions of dual-life modules should NOT be imported into maint. Those belong in the next stable series.</source>
          <target state="translated">Новые версии двухжильных модулей НЕ следует импортировать в maint.Они относятся к следующей стабильной серии.</target>
        </trans-unit>
        <trans-unit id="231604734d2d979c77600cba2319f1623c551b25" translate="yes" xml:space="preserve">
          <source>New() and Copy() are unfortunately used by both Symbian and Perl code so you'll have to play cpp games if you need them. PerlBase.h undefines the Perl definitions and redefines them as PerlNew() and PerlCopy().</source>
          <target state="translated">New()и Copy(),к сожалению,используются как в Symbian,так и в Perl-коде,так что вам придется играть в cpp-игры,если они вам понадобятся.PerlBase.h отменяет определения Perl и переопределяет их как PerlNew()и PerlCopy().</target>
        </trans-unit>
        <trans-unit id="81e452125a72a6fe6ff7abcdeebcf00242e0de29" translate="yes" xml:space="preserve">
          <source>New, in 1.96, a hash that clusters known perl releases by their major versions.</source>
          <target state="translated">Новый,в 1.96,хэш,известный кластерам perl релизов по их основным версиям.</target>
        </trans-unit>
        <trans-unit id="972a5d24a8408b783c69c2ea8d49e34b9b7c8c94" translate="yes" xml:space="preserve">
          <source>New-style form:</source>
          <target state="translated">Форма в новом стиле:</target>
        </trans-unit>
        <trans-unit id="66543c20a971108cd6769d66337b781595c7b81c" translate="yes" xml:space="preserve">
          <source>Newer releases of VOS (OpenVOS Release 17.0 or later) support a feature known as extended names. On these releases, file names can contain up to 255 characters, are prohibited from starting with a &lt;code&gt;-&lt;/code&gt; character, and the set of prohibited characters is reduced to &lt;code&gt;#%*&amp;lt;&amp;gt;?&lt;/code&gt;. There are restrictions involving spaces and apostrophes: these characters must not begin or end a name, nor can they immediately precede or follow a period. Additionally, a space must not immediately precede another space or hyphen. Specifically, the following character combinations are prohibited: space-space, space-hyphen, period-space, space-period, period-apostrophe, apostrophe-period, leading or trailing space, and leading or trailing apostrophe. Although an extended file name is limited to 255 characters, a path name is still limited to 256 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc90c268bb4cb375e6b7a75ff03116a6ae0e5fb9" translate="yes" xml:space="preserve">
          <source>Newer releases of VOS (OpenVOS Release 17.0 or later) support a feature known as extended names. On these releases, file names can contain up to 255 characters, are prohibited from starting with a &lt;code&gt;-&lt;/code&gt; character, and the set of prohibited characters is reduced to any character matching &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/#%*&amp;lt;&amp;gt;?//&lt;/a&gt;&lt;/code&gt;. There are restrictions involving spaces and apostrophes: these characters must not begin or end a name, nor can they immediately precede or follow a period. Additionally, a space must not immediately precede another space or hyphen. Specifically, the following character combinations are prohibited: space-space, space-hyphen, period-space, space-period, period-apostrophe, apostrophe-period, leading or trailing space, and leading or trailing apostrophe. Although an extended file name is limited to 255 characters, a path name is still limited to 256 characters.</source>
          <target state="translated">Более новые выпуски VOS (OpenVOS Release 17.0 или новее) поддерживают функцию, известную как расширенные имена. В этих выпусках имена файлов могут содержать до 255 символов, не могут начинаться с символа &lt;code&gt;-&lt;/code&gt; , а набор запрещенных символов сокращается до любого символа, соответствующего &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/#%*&amp;lt;&amp;gt;?//&lt;/a&gt;&lt;/code&gt; . Существуют ограничения на использование пробелов и апострофов: эти символы не должны начинать или заканчивать имя, а также не могут непосредственно предшествовать или следовать за точкой. Кроме того, пробел не должен непосредственно предшествовать другому пробелу или дефису. В частности, запрещены следующие комбинации символов: пробел-пробел, пробел-дефис, период-пробел, пробел-период, период-апостроф, апостроф-период, начальный или конечный пробел, а также начальный или конечный апостроф. Хотя расширенное имя файла ограничено 255 символами, имя пути по-прежнему ограничено 256 символами.</target>
        </trans-unit>
        <trans-unit id="048adf5652fc133a2fe5a581a0402744d96b2a3a" translate="yes" xml:space="preserve">
          <source>Newline (&lt;code&gt;\n&lt;/code&gt; ) is translated as &lt;code&gt;\015\012&lt;/code&gt; by STDIO when reading from and writing to files (see &lt;a href=&quot;#Newlines&quot;&gt;Newlines&lt;/a&gt;). &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; will keep &lt;code&gt;\n&lt;/code&gt; translated as &lt;code&gt;\012&lt;/code&gt; for that filehandle. Since it is a no-op on other systems, &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; should be used for cross-platform code that deals with binary data. That's assuming you realize in advance that your data is in binary. General-purpose programs should often assume nothing about their data.</source>
          <target state="translated">Новая строка ( &lt;code&gt;\n&lt;/code&gt; ) переводится STDIO как &lt;code&gt;\015\012&lt;/code&gt; при чтении и записи в файлы (см. &lt;a href=&quot;#Newlines&quot;&gt;Новые строки&lt;/a&gt; ). &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; сохранит &lt;code&gt;\n&lt;/code&gt; переведенный как &lt;code&gt;\012&lt;/code&gt; для этого дескриптора файла. Так как это не работает в других системах, &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; следует использовать для кросс-платформенного кода, который имеет дело с двоичными данными. Это при условии, что вы заранее понимаете, что ваши данные находятся в двоичном формате. Программы общего назначения часто не должны ничего предполагать о своих данных.</target>
        </trans-unit>
        <trans-unit id="66fb8bba4fb56fb1ef583894abf671d1f75766b7" translate="yes" xml:space="preserve">
          <source>Newline (&lt;code&gt;\n&lt;/code&gt;) is translated as &lt;code&gt;\015\012&lt;/code&gt; by the I/O system when reading from and writing to files (see &lt;a href=&quot;#Newlines&quot;&gt;&quot;Newlines&quot;&lt;/a&gt;). &lt;code&gt;binmode($filehandle)&lt;/code&gt; will keep &lt;code&gt;\n&lt;/code&gt; translated as &lt;code&gt;\012&lt;/code&gt; for that filehandle. &lt;a href=&quot;perlfunc#binmode-FILEHANDLE&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; should always be used for code that deals with binary data. That's assuming you realize in advance that your data is in binary. General-purpose programs should often assume nothing about their data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7903c1910fd26e6355fca4a3a2873689173f8fa4" translate="yes" xml:space="preserve">
          <source>Newlines</source>
          <target state="translated">Newlines</target>
        </trans-unit>
        <trans-unit id="627f688311b36f3c91aca584369635de1f066e06" translate="yes" xml:space="preserve">
          <source>News sites</source>
          <target state="translated">Новостные сайты</target>
        </trans-unit>
        <trans-unit id="8647adb6fe19cc8d435873e6cfe947de3bf110fe" translate="yes" xml:space="preserve">
          <source>Newx</source>
          <target state="translated">Newx</target>
        </trans-unit>
        <trans-unit id="74cbf0dac5707f013f7b0492127e291cbd8676be" translate="yes" xml:space="preserve">
          <source>Newxc</source>
          <target state="translated">Newxc</target>
        </trans-unit>
        <trans-unit id="edf4fdc9f4f2d963ec2b67061be527eaa57619fb" translate="yes" xml:space="preserve">
          <source>Newxz</source>
          <target state="translated">Newxz</target>
        </trans-unit>
        <trans-unit id="3ad9cf64efb1ec1fd62f31a781211fbbae056b26" translate="yes" xml:space="preserve">
          <source>Next the fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; is transformed behind the scenes into a full Perl regular expression, with the additional step of wrapping each transformed wildcard metacharacter sequence in parenthesis.</source>
          <target state="translated">Затем fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; незаметно преобразуется в полное регулярное выражение Perl с дополнительным шагом, заключающимся в заключении каждой преобразованной последовательности метасимволов подстановки в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="70f4446a1caaaf275974baec33a0412159413e91" translate="yes" xml:space="preserve">
          <source>Next time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91094329b9da103c7bf80abf3b096f03628711d7" translate="yes" xml:space="preserve">
          <source>Next to a lexicon full of shorthand code, that sort of sticks out like a sore thumb -- but this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd107a1441fbf81bd2a151e1d1ce3a7c6dd7ff9" translate="yes" xml:space="preserve">
          <source>Next we tell Perl to update the global stack pointer from our internal variable: &lt;code&gt;dSP&lt;/code&gt; only gave us a local copy, not a reference to the global.</source>
          <target state="translated">Затем мы говорим Perl обновить указатель глобального стека из нашей внутренней переменной: &lt;code&gt;dSP&lt;/code&gt; дал нам только локальную копию, а не ссылку на глобальную.</target>
        </trans-unit>
        <trans-unit id="e906a80d642a9982295c053351051e5071216f8d" translate="yes" xml:space="preserve">
          <source>Next, &lt;code&gt;cx_popblock&lt;/code&gt; restores all the various interpreter vars to their previous values or previous high water marks; it expands to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783f6fb233a2d3b4a2bd0d885d732e1060c3e708" translate="yes" xml:space="preserve">
          <source>Next, both &lt;code&gt;filter_read&lt;/code&gt; and &lt;code&gt;filter_read_exact&lt;/code&gt; will append any source data that is read to the end of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Затем и &lt;code&gt;filter_read&lt;/code&gt; , и &lt;code&gt;filter_read_exact&lt;/code&gt; добавят любые исходные данные, которые читаются, в конец &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0d5b889e71fbe2c1477c43e20c912e00d4c8342" translate="yes" xml:space="preserve">
          <source>Next, both &lt;code&gt;filter_read&lt;/code&gt; and &lt;code&gt;filter_read_exact&lt;/code&gt; will append any source data that is read to the end of &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398d2fa0903d1a4262e38cb8eb6340d631516bf9" translate="yes" xml:space="preserve">
          <source>Next, having examined the program for</source>
          <target state="translated">Далее,изучив программу на предмет</target>
        </trans-unit>
        <trans-unit id="552813864fdd734e7d3907009afd77e400d86761" translate="yes" xml:space="preserve">
          <source>Next, in line 7, we construct the interpreter using perl_construct, also in</source>
          <target state="translated">Далее,в строке 7,мы строим интерпретатор,используя perl_construct,также в строке</target>
        </trans-unit>
        <trans-unit id="f0e17f120e69b5b4b71c231b6f1b48ac0f7c5f87" translate="yes" xml:space="preserve">
          <source>Next, is an optional description of what the value means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383b7fb30a64fd95b0ad32a79caca9dc933b0b1" translate="yes" xml:space="preserve">
          <source>Next, we come to EXTEND and PUSHs. This is where the parameters actually get pushed onto the stack. In this case we are pushing a string and an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8efbc1a7cdd184e2054cd4a6e7618c9a7c54c2" translate="yes" xml:space="preserve">
          <source>Next, we come to XPUSHs. This is where the parameters actually get pushed onto the stack. In this case we are pushing a string and an integer.</source>
          <target state="translated">Далее,мы приходим в XPUSH.Здесь параметры фактически попадают в стек.В этом случае мы перемещаем строку и целое число.</target>
        </trans-unit>
        <trans-unit id="3a3933ffb575f6d148ec34824fe349c3e318f912" translate="yes" xml:space="preserve">
          <source>Next, we create the filter object and associate it with the source stream by defining the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; function. If you know Perl well enough, you know that &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; is called automatically every time a module is included with a use statement. This makes &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; the ideal place to both create and install a filter object.</source>
          <target state="translated">Затем мы создаем объект фильтра и связываем его с исходным потоком, определяя функцию &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; . Если вы достаточно хорошо знаете Perl, вы знаете, что &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; вызывается автоматически каждый раз, когда модуль включается в инструкцию use. Это делает &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; идеальным местом как для создания, так и для установки объекта фильтра.</target>
        </trans-unit>
        <trans-unit id="36703328150265b0a107cb522700c61245fb4fc9" translate="yes" xml:space="preserve">
          <source>Next, we create the filter object and associate it with the source stream by defining the &lt;code&gt;import&lt;/code&gt; function. If you know Perl well enough, you know that &lt;code&gt;import&lt;/code&gt; is called automatically every time a module is included with a use statement. This makes &lt;code&gt;import&lt;/code&gt; the ideal place to both create and install a filter object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79dac3470efd6c09749fb5bc8d5df733f8598af" translate="yes" xml:space="preserve">
          <source>Next. Executes over subroutine calls, until the beginning of the next statement. If an expression is supplied that includes function calls, those functions will be executed with stops before each statement.</source>
          <target state="translated">Следующий.Выполняется по вызовам подпрограммы,до начала следующего утверждения.Если поставляется выражение,включающее вызовы функций,то эти функции будут выполняться со стопами перед каждым оператором.</target>
        </trans-unit>
        <trans-unit id="0f90871213344aaacc3e3fb157cf776edfa434b0" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;</source>
          <target state="translated">Николас Кларк &amp;lt;nick@ccl4.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3593afcaf4055fb7e2ec7f9aa19266c706c63d66" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt; based on the code in &lt;code&gt;h2xs&lt;/code&gt; by Larry Wall and others</source>
          <target state="translated">Николас Кларк &amp;lt;nick@ccl4.org&amp;gt; на основе кода в &lt;code&gt;h2xs&lt;/code&gt; Ларри Уолла и других</target>
        </trans-unit>
        <trans-unit id="a9782aaa85e48d0ee97008381a9233aaf9ea098e" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;, collating wisdom supplied by Slaven Rezic and Tim Bunce.</source>
          <target state="translated">Николас Кларк &amp;lt;nick@ccl4.org&amp;gt;, обобщение мудрости, предоставленной Славеном Резиком и Тимом Бансом.</target>
        </trans-unit>
        <trans-unit id="cb93bd4a857943c414e6a9f67769487dd9d1e793" translate="yes" xml:space="preserve">
          <source>Nichols, Bradford, Dick Buttlar, and Jacqueline Proulx Farrell. Pthreads Programming. O'Reilly &amp;amp; Associates, 1996, ISBN 156592-115-1 (covers POSIX threads).</source>
          <target state="translated">Николс, Брэдфорд, Дик Батлар и Жаклин Пру Фаррелл. Программирование Pthreads. O'Reilly &amp;amp; Associates, 1996, ISBN 156592-115-1 (охватывает потоки POSIX).</target>
        </trans-unit>
        <trans-unit id="dc9a977deb5f6413937851a1c224335497c37077" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &amp;lt;nick@ing-simmons.net&amp;gt;</source>
          <target state="translated">Ник Инг-Симмонс &amp;lt;nick@ing-simmons.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="67fa933da77de5810dcb7a6bcbb7b43316cb56e6" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &amp;lt;nik@tiuk.ti.com&amp;gt;</source>
          <target state="translated">Ник Инг-Симмонс &amp;lt;nik@tiuk.ti.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="eec2116258d414025ff37d21592a6d975d4f492d" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &lt;code&gt;ni-s@cpan.org&lt;/code&gt;</source>
          <target state="translated">Ник Инг-Симмонс &lt;code&gt;ni-s@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f536379f776769e044b6352a1f333a7395148608" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons nik@tiuk.ti.com</source>
          <target state="translated">Ник Инг-Симмонс nik@tiuk.ti.com</target>
        </trans-unit>
        <trans-unit id="709b6991a1fe1d878c07948361b2e8f12dee5b31" translate="yes" xml:space="preserve">
          <source>Nick.Williams (at) morganstanley.com</source>
          <target state="translated">Ник.Уильямс (на)morganstanley.com</target>
        </trans-unit>
        <trans-unit id="c68fbab1fadb081f9a95a30a672a1a93a454b4ea" translate="yes" xml:space="preserve">
          <source>Nicolas Rochelemagne &amp;lt;rochelemagne@cpanel.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99442825b1535fca48dbbe1edab7783b86c33c79" translate="yes" xml:space="preserve">
          <source>Nifty, eh?</source>
          <target state="translated">Хорошо,да?</target>
        </trans-unit>
        <trans-unit id="c659a5acee6e44f93f94ad48f57acb3d1dc6ea05" translate="yes" xml:space="preserve">
          <source>Nigel Horne &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9508051ab4a47301185b3c92aa1d0eff8cd51fe8" translate="yes" xml:space="preserve">
          <source>Niko Tyni &amp;lt;ntyni@debian.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f28e5786c054d1cc29342757d2fd0556c7c2dc7" translate="yes" xml:space="preserve">
          <source>No &quot;=over&quot; ... &quot;=back&quot; region can contain headings. Processors may treat such a heading as an error.</source>
          <target state="translated">Никаких &quot;=over&quot;...&quot;=зад&quot; может содержать заголовки.Процессоры могут рассматривать такой заголовок как ошибку.</target>
        </trans-unit>
        <trans-unit id="257bfa82d8cf42d7832f32c10a9c968cb66e0342" translate="yes" xml:space="preserve">
          <source>No %s allowed while running setuid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773b9688face4b5d00611d86533f2b8de906c9b4" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;syslog&lt;/code&gt; before &lt;code&gt;openlog&lt;/code&gt; .</source>
          <target state="translated">Нет &lt;code&gt;syslog&lt;/code&gt; &lt;code&gt;openlog&lt;/code&gt; перед openlog .</target>
        </trans-unit>
        <trans-unit id="20e0c334622edbcaf17b23f27e4a533188f282bc" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;syslog&lt;/code&gt; before &lt;code&gt;openlog&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c40a7affe9719b4eddb6cf9132e5c95c3be4c0e" translate="yes" xml:space="preserve">
          <source>No C++ style (//) comments</source>
          <target state="translated">Нет комментариев в стиле C++(//)</target>
        </trans-unit>
        <trans-unit id="0c1f7459efad1e56358a8f99cd0450bb9959dbf6" translate="yes" xml:space="preserve">
          <source>No DB::DB routine defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deb18052c4d43f8553cddaf3139898fd40cc7a9" translate="yes" xml:space="preserve">
          <source>No DB::sub routine defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fcbc48a21b7232a53284d0488360e346f1c2a5" translate="yes" xml:space="preserve">
          <source>No Parameters, Nothing Returned</source>
          <target state="translated">Нет Параметры,ничего не возвращено.</target>
        </trans-unit>
        <trans-unit id="77806734f269492cff2094d83b8fd4035093622c" translate="yes" xml:space="preserve">
          <source>No Perl script found in input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6465b961ebcc64954b26f6b4f08d2a66881aca" translate="yes" xml:space="preserve">
          <source>No Unicode property value wildcard matches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaba0fb2bb1fc76d3a62f4fc39307ed0a310b2d" translate="yes" xml:space="preserve">
          <source>No adjustments are needed to entries that are references to arrays; each such entry will have exactly one element in its range, so the offset is always 0.</source>
          <target state="translated">Никаких корректировок не требуется для записей,которые являются ссылками на массивы;каждый такой записей будет иметь ровно один элемент в своем диапазоне,поэтому смещение всегда равно 0.</target>
        </trans-unit>
        <trans-unit id="87c881d12dc16380a72b9169dc66bd4762923e70" translate="yes" xml:space="preserve">
          <source>No arbitrary limits (platforms, data sizes, cultures).</source>
          <target state="translated">Нет произвольных ограничений (платформы,размеры данных,культуры).</target>
        </trans-unit>
        <trans-unit id="2ef060e66ed128ce859a264cbcabcc9e8b4d72cd" translate="yes" xml:space="preserve">
          <source>No attempt is made to resolve formatting codes. This must be done after calling parselink() (since E&amp;lt;&amp;gt; formatting codes can be used to escape characters that would otherwise be significant to the parser and resolving them before parsing would result in an incorrect parse of a formatting code like:</source>
          <target state="translated">Попытки разрешить коды форматирования не предпринимаются. Это необходимо сделать после вызова parselink () (поскольку коды форматирования E &amp;lt;&amp;gt; могут использоваться для экранирования символов, которые в противном случае были бы важны для синтаксического анализатора, и их разрешение перед синтаксическим анализом приведет к неправильному синтаксическому анализу кода форматирования, например:</target>
        </trans-unit>
        <trans-unit id="d91a990deb28c435bf7686103fcfb9b19073f56f" translate="yes" xml:space="preserve">
          <source>No attempt to call methods on a child after &lt;code&gt;finalize&lt;/code&gt; is called is guaranteed to succeed.</source>
          <target state="translated">Никакая попытка вызвать методы дочернего &lt;code&gt;finalize&lt;/code&gt; после вызова finalize не будет успешной.</target>
        </trans-unit>
        <trans-unit id="25bf937dadf1f1511dd27eb2964f699a6c2252b1" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made, so the result may not be correct if &lt;code&gt;$base&lt;/code&gt; contains symbolic links. (Apply &lt;a href=&quot;../../cwd#abs_path&quot;&gt;Cwd::abs_path()&lt;/a&gt; beforehand if that is a concern.) On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="translated">Никаких проверок файловой системы не производится, поэтому результат может быть неверным, если &lt;code&gt;$base&lt;/code&gt; содержит символические ссылки. (Примените &lt;a href=&quot;../../cwd#abs_path&quot;&gt;Cwd :: abs_path ()&lt;/a&gt; заранее, если это вызывает беспокойство.) В VMS существует взаимодействие с рабочей средой, поскольку логические элементы и макросы расширяются.</target>
        </trans-unit>
        <trans-unit id="924a5f2c43a3c20b93a69cf9c70b83b8e4efcd36" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made, so the result may not be correct if &lt;code&gt;$base&lt;/code&gt; contains symbolic links. (Apply &lt;a href=&quot;cwd#abs_path&quot;&gt;Cwd::abs_path()&lt;/a&gt; beforehand if that is a concern.) On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4449b82a66db373f8a7a36f371aa0993e46c55c" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made. On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="translated">Проверки файловой системы не проводятся.На VMS происходит взаимодействие с рабочей средой,расширяются логика и макросы.</target>
        </trans-unit>
        <trans-unit id="8e162ffb3e51b730037429889b3555f0e4824d87" translate="yes" xml:space="preserve">
          <source>No code point in the sequence has the &lt;code&gt;Script_Extension&lt;/code&gt; property of &lt;code&gt;Unknown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda4eef0bcf2e071e18d2c28df5df747da976497" translate="yes" xml:space="preserve">
          <source>No code specified for -%c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5daa6be83067035e57bf5c2fd3c41a90c6754e" translate="yes" xml:space="preserve">
          <source>No comma allowed after %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33577302f316f3e6136a0a32a2d27da82e7aa28" translate="yes" xml:space="preserve">
          <source>No comma allowed after filehandle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8ae1e010afaaa612013df1fc3d51681796c4d1" translate="yes" xml:space="preserve">
          <source>No command into which to pipe on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd6e1a656baa449584f887ae6f967424aeab84f" translate="yes" xml:space="preserve">
          <source>No compression at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaac15a67a04661b57950ea3d1e562feb72ebfaf" translate="yes" xml:space="preserve">
          <source>No dbm on this machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c47c4f4513295ff856929f10f81971d5188422" translate="yes" xml:space="preserve">
          <source>No digits found for %s literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f1be4cbae2242886aa2e79dff8536922352e79" translate="yes" xml:space="preserve">
          <source>No directory specified for -I</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784c301abbb8b0d6d45cf7e9b60c5e854fd2a0b2" translate="yes" xml:space="preserve">
          <source>No distinction is made between prefix and postfix forms of the increment and decrement operators: these differ only in the point at which Perl calls the associated subroutine when evaluating an expression.</source>
          <target state="translated">Префиксная и постфиксная формы операторов инкремента и декремента не различаются:они различаются только в той точке,в которой Perl вызывает соответствующую подпрограмму при вычислении выражения.</target>
        </trans-unit>
        <trans-unit id="fe03072df15677b80e2b39e339befe55f08f3cc8" translate="yes" xml:space="preserve">
          <source>No documentation on this IOCTL is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0ccdbe7b9dcd4482123d0dad177e0f6173c899" translate="yes" xml:space="preserve">
          <source>No documentation on this IOCTL operation was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6edce8008bb98711417eae932baa49a0c5e02c" translate="yes" xml:space="preserve">
          <source>No environment variables are used.</source>
          <target state="translated">Переменные окружения не используются.</target>
        </trans-unit>
        <trans-unit id="424de2cbb2d7cb32de24408734d57590a414971a" translate="yes" xml:space="preserve">
          <source>No error file after 2&amp;gt; or 2&amp;gt;&amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f86db3043e1779cce556c8cbf2a9d92caf05f24" translate="yes" xml:space="preserve">
          <source>No error is given if the unlink fails.</source>
          <target state="translated">Ошибка не выдается,если не удается установить unlink.</target>
        </trans-unit>
        <trans-unit id="3f69a0eca515ffc8689bce47b2e5c1980b8dcb25" translate="yes" xml:space="preserve">
          <source>No exception will be thrown if the load fails.</source>
          <target state="translated">Исключение не будет сделано,если груз не выдержит нагрузки.</target>
        </trans-unit>
        <trans-unit id="ec5c0c5034b1d315d5f20a472cd293a01e6c64e1" translate="yes" xml:space="preserve">
          <source>No filename, no open.</source>
          <target state="translated">Ни имени,ни открытого.</target>
        </trans-unit>
        <trans-unit id="516bbd1a4dbc145932d17998cd4fb493e8a92e9f" translate="yes" xml:space="preserve">
          <source>No flags are currently defined for this method.</source>
          <target state="translated">В настоящее время флаги для этого метода не определены.</target>
        </trans-unit>
        <trans-unit id="7bcf29927f72d2beb73b0553554252e7ba739e8a" translate="yes" xml:space="preserve">
          <source>No fork(), pipe(), popen() etc.</source>
          <target state="translated">Нет вилок(),pipe(),popen()и т.д.</target>
        </trans-unit>
        <trans-unit id="eb3952fa65dd262eb5d0a75ebf9c58a5c763ba6c" translate="yes" xml:space="preserve">
          <source>No functions are exported by default. The export tag &quot;:all&quot; will export all functions listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542ccfca3b47fd89c0284e2ac4365b2fc6d2c787" translate="yes" xml:space="preserve">
          <source>No group ending character '%c' found in template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb023c0b15d320b359bb7fbf2e9461b84b577b5f" translate="yes" xml:space="preserve">
          <source>No input file after &amp;lt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2202e903484320e4049cc95c7fbf8fcc519882bb" translate="yes" xml:space="preserve">
          <source>No interpolation is performed at this stage. Any backslashed sequences including &lt;code&gt;\\&lt;/code&gt; are treated at the stage to &lt;a href=&quot;#parsing-regular-expressions&quot;&gt;&quot;parsing regular expressions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54075ccfb2214779b34385a718da12658fca1c0e" translate="yes" xml:space="preserve">
          <source>No interpolation is performed at this stage. Any backslashed sequences including &lt;code&gt;\\&lt;/code&gt; are treated at the stage to &lt;a href=&quot;#parsing-regular-expressions&quot;&gt;parsing regular expressions&lt;/a&gt;.</source>
          <target state="translated">На этом этапе интерполяция не выполняется. Любые последовательности с обратной косой чертой, включая &lt;code&gt;\\&lt;/code&gt; , обрабатываются на этапе &lt;a href=&quot;#parsing-regular-expressions&quot;&gt;синтаксического анализа регулярных выражений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbb5249e03fe539ae8e45d7b163fcee5fc3ee51d" translate="yes" xml:space="preserve">
          <source>No interpolation is performed. Note that the combination &lt;code&gt;\\&lt;/code&gt; is left intact, since escaped delimiters are not available for here-docs.</source>
          <target state="translated">Интерполяция не выполняется. Обратите внимание, что комбинация &lt;code&gt;\\&lt;/code&gt; остается неизменной, поскольку экранированные разделители недоступны для here-docs.</target>
        </trans-unit>
        <trans-unit id="1c98ecfcdfe42d74e5f6e59d6542fc5e55fe1a89" translate="yes" xml:space="preserve">
          <source>No known problems yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4729e4c84e612c4062db3d2ec599e7d12e2ffa" translate="yes" xml:space="preserve">
          <source>No longer used. &lt;b&gt;pod2man&lt;/b&gt; used to check its input for validity as a manual page, but this should now be done by</source>
          <target state="translated">Больше не используется. &lt;b&gt;pod2man&lt;/b&gt; раньше проверял его ввод на валидность в качестве справочной страницы, но теперь это должно быть сделано</target>
        </trans-unit>
        <trans-unit id="900007b766747b3fcc23577a66bc51c090e9d1ff" translate="yes" xml:space="preserve">
          <source>No longer used. &lt;b&gt;pod2man&lt;/b&gt; used to check its input for validity as a manual page, but this should now be done by &lt;a href=&quot;http://man.he.net/man1/podchecker&quot;&gt;podchecker(1)&lt;/a&gt; instead. Accepted for backward compatibility; this option no longer does anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0629e5133982636c8b13ba7650a2f7adde66d5d2" translate="yes" xml:space="preserve">
          <source>No matter how many @methods you check, a single &lt;code&gt;can_ok()&lt;/code&gt; call counts as one test. If you desire otherwise, use:</source>
          <target state="translated">Независимо от того, сколько @methods вы проверяете, один &lt;code&gt;can_ok()&lt;/code&gt; считается одним тестом. Если вы желаете иначе, используйте:</target>
        </trans-unit>
        <trans-unit id="bfe1ac6dceccca23c12f88b98cb2baa17573ef5f" translate="yes" xml:space="preserve">
          <source>No matter how you look at it, Unicode support is going to be a pain in a regex engine. Tricks that might be fine when you have 256 possible characters often won't scale to handle the size of the UTF-8 character set. Things you can take for granted with ASCII may not be true with Unicode. For instance, in ASCII, it is safe to assume that &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt; , but in UTF-8 it isn't. Unicode case folding is vastly more complex than the simple rules of ASCII, and even when not using Unicode but only localised single byte encodings, things can get tricky (for example, &lt;b&gt;LATIN SMALL LETTER SHARP S&lt;/b&gt; (U+00DF, &amp;szlig;) should match 'SS' in localised case-insensitive matching).</source>
          <target state="translated">Независимо от того, как вы на это смотрите, поддержка Unicode будет проблемой в движке регулярных выражений. Уловки, которые могут быть хороши, когда у вас есть 256 возможных символов, часто не масштабируются для обработки размера набора символов UTF-8. То, что вы считаете само собой разумеющимся с ASCII, может не соответствовать Unicode. Например, в ASCII можно с уверенностью предположить, что &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt; , но в UTF-8 это не так. Сворачивание регистров Unicode намного сложнее, чем простые правила ASCII, и даже если не использовать Unicode, а использовать только локализованные однобайтовые кодировки, все может быть сложно (например, &lt;b&gt;LATIN SMALL LETTER SHARP S&lt;/b&gt; (U + 00DF, &amp;szlig;) должно соответствовать '' SS 'в локализованном сопоставлении без учета регистра).</target>
        </trans-unit>
        <trans-unit id="50eb93d4cd16792026ffb4dcb8756c8d0fe4e9fc" translate="yes" xml:space="preserve">
          <source>No matter how you look at it, Unicode support is going to be a pain in a regex engine. Tricks that might be fine when you have 256 possible characters often won't scale to handle the size of the UTF-8 character set. Things you can take for granted with ASCII may not be true with Unicode. For instance, in ASCII, it is safe to assume that &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt;, but in UTF-8 it isn't. Unicode case folding is vastly more complex than the simple rules of ASCII, and even when not using Unicode but only localised single byte encodings, things can get tricky (for example, &lt;b&gt;LATIN SMALL LETTER SHARP S&lt;/b&gt; (U+00DF, &amp;szlig;) should match 'SS' in localised case-insensitive matching).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3134867d7de86de77f76195077742723406df400" translate="yes" xml:space="preserve">
          <source>No matter which locale you are in, the alphabetic characters are the characters in \w without the digits and the underscore. As a regex, that looks like &lt;code&gt;/[^\W\d_]/&lt;/code&gt; . Its complement, the non-alphabetics, is then everything in \W along with the digits and the underscore, or &lt;code&gt;/[\W\d_]/&lt;/code&gt; .</source>
          <target state="translated">Независимо от того, в какой локали вы находитесь, буквенные символы - это символы в \ w без цифр и подчеркивания. В качестве регулярного выражения это выглядит как &lt;code&gt;/[^\W\d_]/&lt;/code&gt; . Его дополнение, не алфавитное, тогда представляет собой все в \ W вместе с цифрами и подчеркиванием или &lt;code&gt;/[\W\d_]/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a25ec0405e5b5d24e77d78a07b478e9acd7704a" translate="yes" xml:space="preserve">
          <source>No matter which locale you are in, the alphabetic characters are the characters in \w without the digits and the underscore. As a regex, that looks like &lt;code&gt;/[^\W\d_]/&lt;/code&gt;. Its complement, the non-alphabetics, is then everything in \W along with the digits and the underscore, or &lt;code&gt;/[\W\d_]/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae36c800cf26b17c9be8f946b97ab972ec2e9993" translate="yes" xml:space="preserve">
          <source>No message is printed if there is a &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler installed. It is the handler's responsibility to deal with the message as it sees fit (like, for instance, converting it into a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;). Most handlers must therefore arrange to actually display the warnings that they are not prepared to deal with, by calling &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; again in the handler. Note that this is quite safe and will not produce an endless loop, since &lt;code&gt;__WARN__&lt;/code&gt; hooks are not called from inside one.</source>
          <target state="translated">Сообщение не выводится, если установлен обработчик &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; . Ответственность за обработку сообщения лежит на обработчике (например, преобразование его в &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ). Поэтому большинству обработчиков необходимо организовать отображение предупреждений, с которыми они не готовы справиться, путем повторного вызова &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; в обработчике. Обратите внимание, что это вполне безопасно и не приведет к бесконечному циклу, поскольку хуки &lt;code&gt;__WARN__&lt;/code&gt; не вызываются изнутри.</target>
        </trans-unit>
        <trans-unit id="9b68ebf47dc665b9110abca7286c7dd8e3c6d25d" translate="yes" xml:space="preserve">
          <source>No message is printed if there is a &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler installed. It is the handler's responsibility to deal with the message as it sees fit (like, for instance, converting it into a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;). Most handlers must therefore arrange to actually display the warnings that they are not prepared to deal with, by calling &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; again in the handler. Note that this is quite safe and will not produce an endless loop, since &lt;code&gt;__WARN__&lt;/code&gt; hooks are not called from inside one.</source>
          <target state="translated">Сообщение не выводится, если установлен обработчик &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; . Ответственность за обработку сообщения лежит на обработчике (например, преобразование его в &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ). Поэтому большинству обработчиков необходимо организовать отображение предупреждений, с которыми они не готовы справиться, путем повторного вызова &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; в обработчике. Обратите внимание, что это вполне безопасно и не приведет к бесконечному циклу, поскольку хуки &lt;code&gt;__WARN__&lt;/code&gt; не вызываются изнутри.</target>
        </trans-unit>
        <trans-unit id="e88b0403f1df2a8394109aa2ba7bcbd6c0d574ec" translate="yes" xml:space="preserve">
          <source>No method will be exported.</source>
          <target state="translated">Никакой метод не будет экспортирован.</target>
        </trans-unit>
        <trans-unit id="d078ad69ad4e54066f3d8eeb48aedf41afe43993" translate="yes" xml:space="preserve">
          <source>No modifiers may follow the final delimiter. Instead, use &lt;a href=&quot;perlre#%28%3Fadlupimnsx-imnsx%29&quot;&gt;&quot;(?adlupimnsx-imnsx)&quot; in perlre&lt;/a&gt; and/or &lt;a href=&quot;perlre#%28%3Fadluimnsx-imnsx%3Apattern%29&quot;&gt;&quot;(?adluimnsx-imnsx:pattern)&quot; in perlre&lt;/a&gt; to specify modifiers. However, certain modifiers are illegal in your wildcard subpattern. The only character set modifier specifiable is &lt;code&gt;/aa&lt;/code&gt;; any other character set, and &lt;code&gt;-m&lt;/code&gt;, and &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;s&lt;/code&gt; are all illegal. Specifying modifiers like &lt;code&gt;qr/.../gc&lt;/code&gt; that aren't legal in the &lt;code&gt;(?...)&lt;/code&gt; notation normally raise a warning, but with wildcard subpatterns, their use is an error. The &lt;code&gt;m&lt;/code&gt; modifier is ineffective; everything that matches will be a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d694e82f8f5a6aee789fdf7e0d9a4abdbee8361" translate="yes" xml:space="preserve">
          <source>No name for escape sequence %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8a43bbd5b6a7c0fc112cc5db753e74a2da2bd1" translate="yes" xml:space="preserve">
          <source>No need to upgrade, old versions work fine. Only new versions will install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3f29207dc255b3e7e3b93af35cd32bc4da582b" translate="yes" xml:space="preserve">
          <source>No nested {}</source>
          <target state="translated">Нет гнезда.</target>
        </trans-unit>
        <trans-unit id="ff909a31829cee8eec6e3320155b1a9c5999f78e" translate="yes" xml:space="preserve">
          <source>No next::method '%s' found for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57520a87f790317d2f0f376605bf7645f164bef4" translate="yes" xml:space="preserve">
          <source>No non-core modules are required for normal use, except on os390, which requires Convert::EBCDIC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108ebc6ec894325dc5e51ade6db8ba3a4fcfc3e6" translate="yes" xml:space="preserve">
          <source>No one is actively supporting Perl 4. Ten years ago it was a dead camel carcass (according to this document). Now it's barely a skeleton as its whitewashed bones have fractured or eroded.</source>
          <target state="translated">Никто не поддерживает Perl 4.Десять лет назад это была мертвая туша верблюда (согласно этому документу).Теперь это едва ли скелет,так как его побеленные кости переломаны или размыты.</target>
        </trans-unit>
        <trans-unit id="5a0177133aa06d0ec25b9195df7c3b7470ebfb3e" translate="yes" xml:space="preserve">
          <source>No output file after &amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa07cf51ee6af06ec7bc8d2a28b3053649cf1e2" translate="yes" xml:space="preserve">
          <source>No output file after &amp;gt; or &amp;gt;&amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aaf049c05b18617887d9ad1515bb3e2acc8422" translate="yes" xml:space="preserve">
          <source>No package name allowed for subroutine %s in &quot;our&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9c00e16e167b3d5795fd4551618c4957016cd5" translate="yes" xml:space="preserve">
          <source>No package name allowed for variable %s in &quot;our&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c3fd86cbf458846a9ad5dbc11cfba132cabd89" translate="yes" xml:space="preserve">
          <source>No parentheses are permitted. This feature is particularly useful for arrays-of-arrays, or arrays-of-hashes:</source>
          <target state="translated">Скобки не допускаются.Эта функция особенно полезна для массивов массивов,или массивов хэшей:</target>
        </trans-unit>
        <trans-unit id="469f8dede736caee70cee54e55a8464dbb9835e1" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path.</source>
          <target state="translated">Никакой физической проверки файловой системы,только логическая очистка пути.</target>
        </trans-unit>
        <trans-unit id="3f4690d39fc8f180a0deea49e5cf7ef07d678475" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminated successive slashes and successive &quot;/.&quot;.</source>
          <target state="translated">Никакой физической проверки файловой системы,только логическая очистка пути.На UNIX устранены последовательные косые черты и последовательный &quot;/.&quot;.</target>
        </trans-unit>
        <trans-unit id="3f5d3240e92f64678ad0b020e9e7b82b4f021ec1" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminated successive slashes and successive &quot;/.&quot;. On Win32 makes</source>
          <target state="translated">Никакой физической проверки файловой системы,только логическая очистка пути.На UNIX устранены последовательные косые черты и последовательный &quot;/.&quot;.На Win32 делает</target>
        </trans-unit>
        <trans-unit id="3ec2594a24cace2c7fc57252c4edc36c0995f1d6" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminates successive slashes and successive &quot;/.&quot;.</source>
          <target state="translated">Никакой физической проверки файловой системы,только логическая очистка пути.На UNIX устраняет последовательные косые черты и последовательный &quot;/.&quot;.</target>
        </trans-unit>
        <trans-unit id="e71f35adbc662150aba2fe0b4ae6aabc10f19d44" translate="yes" xml:space="preserve">
          <source>No plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccab456a43b7cc16ce0b5bc93c2d11acc7820455" translate="yes" xml:space="preserve">
          <source>No root path(s) specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e49343d906c08823451bc90b39a76fd921c7fa" translate="yes" xml:space="preserve">
          <source>No separator between a directory path and a filename on VMS.</source>
          <target state="translated">В VMS нет разделителя между путём к каталогу и именем файла.</target>
        </trans-unit>
        <trans-unit id="deb641c36c1d1b360c1445dd38da07338eff42a1" translate="yes" xml:space="preserve">
          <source>No setregid available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc74076701edde5eed33dc7a331eae09584ec9c" translate="yes" xml:space="preserve">
          <source>No setreuid available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ae710f92402615f714f07f2df83c92aef3774" translate="yes" xml:space="preserve">
          <source>No space before the semicolon.</source>
          <target state="translated">До точки с запятой нет места.</target>
        </trans-unit>
        <trans-unit id="a57f317b57b3c0adf52cf25451dee19e20c69fd1" translate="yes" xml:space="preserve">
          <source>No space between function name and its opening parenthesis.</source>
          <target state="translated">Нет пробела между именем функции и ее вскрывающей скобкой.</target>
        </trans-unit>
        <trans-unit id="1a6856f52acb86fb9730291ce342f9738b29e5d3" translate="yes" xml:space="preserve">
          <source>No such build tool exists. Even make itself has wildly different dialects. So we have to build our own.</source>
          <target state="translated">Такого строительного инструмента не существует.Даже сам по себе имеет дико разные диалекты.Поэтому мы должны построить свой собственный.</target>
        </trans-unit>
        <trans-unit id="15e013d77e0bfdb442901fc1a5e5329c3aeff0d9" translate="yes" xml:space="preserve">
          <source>No such class %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c7790634300e5054808e3daf7120756002229" translate="yes" xml:space="preserve">
          <source>No such class field &quot;%s&quot; in variable %s of type %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8031546db88dae684facba1f1a76046472a3d87" translate="yes" xml:space="preserve">
          <source>No such hook: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b84f48942a0b7077d6c110e9d17f34aef30607" translate="yes" xml:space="preserve">
          <source>No such pipe open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350468219a6c2e14abe311fceae1778a933613c6" translate="yes" xml:space="preserve">
          <source>No such signal: SIG%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983c1355341f06fa836a2941ebb4e0c8331361de" translate="yes" xml:space="preserve">
          <source>No such thing. Just use a &lt;b&gt;lexical variable&lt;/b&gt; in a scope larger than your &lt;b&gt;subroutine&lt;/b&gt;, or declare it with &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; instead of with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Нет такой вещи. Просто используйте &lt;b&gt;лексическую переменную&lt;/b&gt; в области, большей, чем ваша &lt;b&gt;подпрограмма&lt;/b&gt; , или объявите ее с помощью &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb7128b800911ffad487de8e45d9be529b8a81e" translate="yes" xml:space="preserve">
          <source>No such thing. Just use a &lt;b&gt;lexical variable&lt;/b&gt; in a scope larger than your &lt;b&gt;subroutine&lt;/b&gt;, or declare it with &lt;code&gt;state&lt;/code&gt; instead of with &lt;code&gt;my&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfee1d82923df34ecbc3757eed0d1a71f22fdeb9" translate="yes" xml:space="preserve">
          <source>No such thing. See &lt;b&gt;class method&lt;/b&gt;.</source>
          <target state="translated">Нет такой вещи. См. &lt;b&gt;Метод класса&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="24ad36b7a10baca2137d3e182796c8fa973e83aa" translate="yes" xml:space="preserve">
          <source>No such thing. See &lt;b&gt;lexical scoping&lt;/b&gt;.</source>
          <target state="translated">Нет такой вещи. См. &lt;b&gt;Лексическую область видимости&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="3f5436248a66b44ec28a7a07c44cb765383f5e61" translate="yes" xml:space="preserve">
          <source>No suspects left</source>
          <target state="translated">Подозреваемых не осталось</target>
        </trans-unit>
        <trans-unit id="0b0e3c47f8113fc69c5db2a844ca423a0b0e626d" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Compress::Bzip2 at present.</source>
          <target state="translated">В настоящее время для этого IO::Compress::Bzip2 не требуются символические константы.</target>
        </trans-unit>
        <trans-unit id="295b36facbdc6f1e39ae12ab91f921909acbf35a" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::AnyInflate at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::AnyInflate не требуются никакие символические константы.</target>
        </trans-unit>
        <trans-unit id="6ee09f98ed165e0824d6ef187752ca356d22dda0" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::AnyUncompress at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::AnyUncompress не требуется никаких символических констант.</target>
        </trans-unit>
        <trans-unit id="df24583254943b025a824682df0b1dfe399beb9d" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Bunzip2 at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::Bunzip2 не требуются символические константы.</target>
        </trans-unit>
        <trans-unit id="a69b3bd42bb22135230da30e5fa338a580834d5c" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Gunzip at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::Gunzip не требуются символические константы.</target>
        </trans-unit>
        <trans-unit id="035acb0d322011913fd5d41a102d38ed488eeb8f" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Inflate at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::Inflate не требуются символические константы.</target>
        </trans-unit>
        <trans-unit id="b9be5deb4e19e7df3ae4108a6bf22723539a2cce" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::RawInflate at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::RawInflate не требуются символические константы.</target>
        </trans-unit>
        <trans-unit id="3c18d218923a1c749b134fb8b13b00be7f7f924f" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Unzip at present.</source>
          <target state="translated">В настоящее время для этого IO::Uncompress::Unzip не требуются никакие символические константы.</target>
        </trans-unit>
        <trans-unit id="fcc2fb4bb27ec2672711d61bc08c85f54dc43272" translate="yes" xml:space="preserve">
          <source>No user hints defined for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bdd65afd19146fdce8e8b2d5e32c005beea617" translate="yes" xml:space="preserve">
          <source>No user-serviceable parts inside.</source>
          <target state="translated">Внутри нет частей,обслуживаемых пользователем.</target>
        </trans-unit>
        <trans-unit id="67d5beb85edfab150b561584afd043236d2bdfa9" translate="yes" xml:space="preserve">
          <source>No variable interpolation occurs. String modifying combinations for case and quoting such as &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , and &lt;code&gt;\E&lt;/code&gt; are not recognized. The other escape sequences such as &lt;code&gt;\200&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; and backslashed characters such as &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\-&lt;/code&gt; are converted to appropriate literals. The character &lt;code&gt;&quot;-&quot;&lt;/code&gt; is treated specially and therefore &lt;code&gt;\-&lt;/code&gt; is treated as a literal &lt;code&gt;&quot;-&quot;&lt;/code&gt; .</source>
          <target state="translated">Интерполяции переменных не происходит. Комбинации изменения строки для регистра и цитирования, такие как &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; и &lt;code&gt;\E&lt;/code&gt; , не распознаются. Другие escape-последовательности, такие как &lt;code&gt;\200&lt;/code&gt; и &lt;code&gt;\t&lt;/code&gt; и символы с обратной косой чертой, такие как &lt;code&gt;\\&lt;/code&gt; и &lt;code&gt;\-&lt;/code&gt; преобразуются в соответствующие литералы. Символ &lt;code&gt;&quot;-&quot;&lt;/code&gt; обрабатывается особым образом, и поэтому &lt;code&gt;\-&lt;/code&gt; рассматривается как буквальный &lt;code&gt;&quot;-&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79cca34834e9a9e4df88122379363c6b6f1e012f" translate="yes" xml:space="preserve">
          <source>No variable interpolation occurs. String modifying combinations for case and quoting such as &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, and &lt;code&gt;\E&lt;/code&gt; are not recognized. The other escape sequences such as &lt;code&gt;\200&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; and backslashed characters such as &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\-&lt;/code&gt; are converted to appropriate literals. The character &lt;code&gt;&quot;-&quot;&lt;/code&gt; is treated specially and therefore &lt;code&gt;\-&lt;/code&gt; is treated as a literal &lt;code&gt;&quot;-&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344119823e9aa0a1230bde24e92b97b7e8c49b30" translate="yes" xml:space="preserve">
          <source>No, Data::Dumper's Unicode abilities are as they should be. There have been some complaints that it should restore the UTF8 flag when the data is read again with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. However, you should really not look at the flag, and nothing indicates that Data::Dumper should break this rule.</source>
          <target state="translated">Нет, Unicode-возможности Data :: Dumper такие, какими они должны быть. Были некоторые жалобы, что он должен восстанавливать флаг UTF8 при повторном чтении данных с помощью &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; . Однако вам действительно не следует смотреть на этот флаг, и ничто не указывает на то, что Data :: Dumper должен нарушить это правило.</target>
        </trans-unit>
        <trans-unit id="802da19c5fa327b3ebbca0edd91baa43bc779ec6" translate="yes" xml:space="preserve">
          <source>No, Data::Dumper's Unicode abilities are as they should be. There have been some complaints that it should restore the UTF8 flag when the data is read again with &lt;code&gt;eval&lt;/code&gt;. However, you should really not look at the flag, and nothing indicates that Data::Dumper should break this rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa78bf2c5971126192cb16bb6c588fba93270da" translate="yes" xml:space="preserve">
          <source>No, Perl is easy to start &lt;a href=&quot;http://learn.perl.org/&quot;&gt;learning&lt;/a&gt; --and easy to keep learning. It looks like most programming languages you're likely to have experience with, so if you've ever written a C program, an awk script, a shell script, or even a BASIC program, you're already partway there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a38c27dd7fd1fed994a63f940f365b3621c19f1" translate="yes" xml:space="preserve">
          <source>No, Perl is easy to start &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2flearn.perl.org%2f&quot;&gt;learning&lt;/a&gt; --and easy to keep learning. It looks like most programming languages you're likely to have experience with, so if you've ever written a C program, an awk script, a shell script, or even a BASIC program, you're already partway there.</source>
          <target state="translated">Нет, Perl легко начать &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2flearn.perl.org%2f&quot;&gt;изучать&lt;/a&gt; - и легко продолжать учиться. Похоже, что у вас есть опыт работы с большинством языков программирования, поэтому, если вы когда-либо писали программу C, сценарий awk, сценарий оболочки или даже программу BASIC, вы уже на полпути.</target>
        </trans-unit>
        <trans-unit id="0f5e0efcc8a5cd1e6becf21bf360add157d9d7f6" translate="yes" xml:space="preserve">
          <source>No, Perl is easy to start &lt;a href=&quot;https://learn.perl.org/&quot;&gt;learning&lt;/a&gt; --and easy to keep learning. It looks like most programming languages you're likely to have experience with, so if you've ever written a C program, an awk script, a shell script, or even a BASIC program, you're already partway there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ee7d9b8720b881699420ad9ccfc4e5c84c1947" translate="yes" xml:space="preserve">
          <source>No, and this isn't really a Unicode FAQ.</source>
          <target state="translated">Нет,и это не совсем Юникод FAQ.</target>
        </trans-unit>
        <trans-unit id="5d6f02eea0d900b7bfb2780fc2df229ad5239d91" translate="yes" xml:space="preserve">
          <source>No-op, provided for OO compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15815b309727bddc8a8cd4e554a2b5a8e3e42f09" translate="yes" xml:space="preserve">
          <source>No-ops</source>
          <target state="translated">No-ops</target>
        </trans-unit>
        <trans-unit id="e12405068610495a8442e94ec628add88b178c22" translate="yes" xml:space="preserve">
          <source>Nobody else on the planet is going to talk your local data format, so we can ignore that. But what about the thing in the middle? Building tree structures from Perl variables and then traversing them is a nice, general problem, and if nobody's already written a module that does that, you might want to modularise that code too.</source>
          <target state="translated">Никто больше на планете не будет говорить о вашем локальном формате данных,так что мы можем это проигнорировать.Но как же штука посередине? Построение древовидных структур из переменных Perl,а затем их обход-хорошая,общая проблема,и если никто еще не написал модуль,который это делает,то,возможно,вам тоже захочется сделать модульный код.</target>
        </trans-unit>
        <trans-unit id="7a1a9fd7bbb71ea26aa1056d5954e10f58509d69" translate="yes" xml:space="preserve">
          <source>Nokia is a registered trademark of Nokia Corporation. Nokia's product names are trademarks or registered trademarks of Nokia. Other product and company names mentioned herein may be trademarks or trade names of their respective owners.</source>
          <target state="translated">Nokia является зарегистрированной торговой маркой корпорации Nokia.Названия продуктов Nokia являются торговыми марками или зарегистрированными торговыми марками Nokia.Другие названия продуктов и компаний,упомянутые в настоящем документе,могут являться торговыми марками или торговыми наименованиями их соответствующих владельцев.</target>
        </trans-unit>
        <trans-unit id="ce6966adb468edf0cb8841781f043cf41939dccf" translate="yes" xml:space="preserve">
          <source>Non-Existent Local Times (DST)</source>
          <target state="translated">Несуществующие местные времена (DST)</target>
        </trans-unit>
        <trans-unit id="c8c499b19de2058088ccd7be966c0ac655b7adf3" translate="yes" xml:space="preserve">
          <source>Non-Hash Objects</source>
          <target state="translated">Хэш-объекты</target>
        </trans-unit>
        <trans-unit id="dbe9b5da0fbf8db965c6a52c0c98ed30d89ee662" translate="yes" xml:space="preserve">
          <source>Non-Perl Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84799ce73e00b044c0d551ac1642ef91417672" translate="yes" xml:space="preserve">
          <source>Non-Perl libraries, such as &lt;code&gt;gtk&lt;/code&gt;, that call the system &lt;code&gt;setlocale&lt;/code&gt; can continue to work if this function is called before transferring control to the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a4443d65a9907e689a96dad2b964b32204f4cf" translate="yes" xml:space="preserve">
          <source>Non-Unix users should check their &lt;code&gt;&lt;i&gt;Your_OS&lt;/i&gt;::Process&lt;/code&gt; module for other possible solutions.</source>
          <target state="translated">Пользователи, не использующие Unix, должны проверить свой &lt;code&gt;&lt;i&gt;Your_OS&lt;/i&gt;::Process&lt;/code&gt; предмет других возможных решений.</target>
        </trans-unit>
        <trans-unit id="8955048c10f602a8fbda2fd5207694abb568decd" translate="yes" xml:space="preserve">
          <source>Non-bracketing delimiters use the same character fore and aft, but the four sorts of ASCII brackets (round, angle, square, curly) all nest, which means that</source>
          <target state="translated">Разделители,не заключенные в скобки,используют один и тот же символ в передней и задней части,но четыре вида ASCII скобок (круглые,угловые,квадратные,кудрявые)все гнезда,что означает,что</target>
        </trans-unit>
        <trans-unit id="d5ef8c3ef4f33bed9ce030f3cbfb6a9e3e9cf03b" translate="yes" xml:space="preserve">
          <source>Non-capturing groupings</source>
          <target state="translated">Захватывающие группировки</target>
        </trans-unit>
        <trans-unit id="0b0affcbcf3b94afc7fed13853a23ba9ca1bafd7" translate="yes" xml:space="preserve">
          <source>Non-capturing groupings are also useful for removing nuisance elements gathered from a split operation where parentheses are required for some reason:</source>
          <target state="translated">Незахватывающие группировки также полезны для удаления неудобных элементов,собранных из сплит-операций,где скобки по каким-то причинам необходимы:</target>
        </trans-unit>
        <trans-unit id="250bef419b1cfb6fc542fb72d52ad8cf2ddb7b3e" translate="yes" xml:space="preserve">
          <source>Non-finite repeat count does nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e8c733eeb11ebeb19aea8f0c24bafd0dcd3b78" translate="yes" xml:space="preserve">
          <source>Non-function Keywords by Cross-reference</source>
          <target state="translated">Функции Ключевые слова по перекрёстным ссылкам</target>
        </trans-unit>
        <trans-unit id="bac16ae68c3fce95782862eda51b6e1ede9d4aa1" translate="yes" xml:space="preserve">
          <source>Non-function keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cf0c88b13d5175fbcbe31d22f2ddf98ce0cabe" translate="yes" xml:space="preserve">
          <source>Non-hex character '%c' terminates \x early. Resolved as &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7211affd3147ea133275fa861a1710f2e9d110" translate="yes" xml:space="preserve">
          <source>Non-hex character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81f5fe242ea0b94d3fcd14bf1f47ecae7e89c34" translate="yes" xml:space="preserve">
          <source>Non-interpretive attribute handlers</source>
          <target state="translated">Обработчики непротиворечивых атрибутов</target>
        </trans-unit>
        <trans-unit id="e94d3362f237ca4afac6040875234c6b9fba0037" translate="yes" xml:space="preserve">
          <source>Non-lexical variables are quite difficult to track through a program. Sometimes the type of a non-lexical variable's use is impossible to determine. Introductions of non-lexical non-scalars don't seem to be reported properly.</source>
          <target state="translated">Негибкие переменные довольно сложно отслеживать с помощью программы.Иногда невозможно определить тип использования нелексической переменной.Введение нелексических нескаляров не кажется правильным.</target>
        </trans-unit>
        <trans-unit id="26df9e297a4b74c0b4469dd88197da6ad0ee1647" translate="yes" xml:space="preserve">
          <source>Non-locale-aware XS code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143be0c9dacdb4569154158e9bf1f623b64c631f" translate="yes" xml:space="preserve">
          <source>Non-mutators with a mutator variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9b68521b56058539894259cdc010e5c4cac590" translate="yes" xml:space="preserve">
          <source>Non-octal character '%c' terminates \o early. Resolved as &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea4a82548edbcd0b7bf7b3e51fdce2be0f6eed2" translate="yes" xml:space="preserve">
          <source>Non-octal character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f78bf86e7669259f75fa7cb97ef1591cd4d731" translate="yes" xml:space="preserve">
          <source>Non-printable ASCII characters are represented by &lt;b&gt;escape sequences&lt;/b&gt;. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, and &lt;code&gt;\r&lt;/code&gt; for a carriage return. Arbitrary bytes are represented by octal escape sequences, e.g., &lt;code&gt;\033&lt;/code&gt; , or hexadecimal escape sequences, e.g., &lt;code&gt;\x1B&lt;/code&gt; :</source>
          <target state="translated">Непечатаемые символы ASCII представлены &lt;b&gt;escape-последовательностями&lt;/b&gt; . Типичные примеры: &lt;code&gt;\t&lt;/code&gt; для табуляции, &lt;code&gt;\n&lt;/code&gt; для новой строки и &lt;code&gt;\r&lt;/code&gt; для возврата каретки. Произвольные байты представлены восьмеричными управляющими последовательностями, например &lt;code&gt;\033&lt;/code&gt; , или шестнадцатеричными escape-последовательностями, например &lt;code&gt;\x1B&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e7aa2075dd471079df2c9c642ea33c0317f23a7c" translate="yes" xml:space="preserve">
          <source>Non-printable ASCII characters are represented by &lt;b&gt;escape sequences&lt;/b&gt;. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, and &lt;code&gt;\r&lt;/code&gt; for a carriage return. Arbitrary bytes are represented by octal escape sequences, e.g., &lt;code&gt;\033&lt;/code&gt;, or hexadecimal escape sequences, e.g., &lt;code&gt;\x1B&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b4a2658c61f47bf2140155001f1ef6dc9d6757" translate="yes" xml:space="preserve">
          <source>Non-string passed as bitmask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b7c71547427b5d091f6bdffa36d87329e206a0" translate="yes" xml:space="preserve">
          <source>Noncharacter code points</source>
          <target state="translated">Несимметричные коды</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="d6c380a4b3a4edf398e410e1086f1f7a11f8a811" translate="yes" xml:space="preserve">
          <source>None by default.</source>
          <target state="translated">По умолчанию нет.</target>
        </trans-unit>
        <trans-unit id="6aa4e4ea6e7911634748f65dccefc73c860296f0" translate="yes" xml:space="preserve">
          <source>None by default. &lt;code&gt;process_file()&lt;/code&gt; and/or &lt;code&gt;report_error_count()&lt;/code&gt; may be exported upon request. Using the functional interface is discouraged.</source>
          <target state="translated">По умолчанию нет. &lt;code&gt;process_file()&lt;/code&gt; и / или &lt;code&gt;report_error_count()&lt;/code&gt; могут быть экспортированы по запросу. Использование функционального интерфейса не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="453747b325cac90861900bdf70984ba34f620d00" translate="yes" xml:space="preserve">
          <source>None by default. The only method is &lt;code&gt;import&lt;/code&gt;, called by &lt;code&gt;use deprecate;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5cef6753554f631841c949a6101aca86cbd5e5" translate="yes" xml:space="preserve">
          <source>None known (guess what must have been used to report them?)</source>
          <target state="translated">Неизвестно (угадайте,что должно было быть использовано,чтобы сообщить о них?).</target>
        </trans-unit>
        <trans-unit id="e6ac3d9a04f7cfc73ad80a24e739c468d87c50d1" translate="yes" xml:space="preserve">
          <source>None known at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d9ea3fd95989745b48b0ee2bb0fc38ac4cacda" translate="yes" xml:space="preserve">
          <source>None of the Encode team knows Hebrew enough (ISO-8859-8, cp1255 and MacHebrew are supported because and just because there were mappings available at &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt;). Contributions welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d139f5c3a9aa9b255b68b63b9e91738654c94f1e" translate="yes" xml:space="preserve">
          <source>None of the Encode team knows Hebrew enough (ISO-8859-8, cp1255 and MacHebrew are supported because and just because there were mappings available at &lt;a href=&quot;https://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt;). Contributions welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceb44e5b6031a9fa60a1bf1ee64b77cc82126f1" translate="yes" xml:space="preserve">
          <source>None of the below. Often a special device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0fc5245472be853cebf2ae9c2cf90be56b5342" translate="yes" xml:space="preserve">
          <source>None of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d59b0c28271db96f51f420982722cd9cd2649b" translate="yes" xml:space="preserve">
          <source>None of the make types being checked for is viable on VMS, plus our $self-&amp;gt;{MAKE} is an unexpanded (and unexpandable) macro whose value is known only to the make utility itself.</source>
          <target state="translated">Ни один из проверяемых типов make не работает в VMS, плюс наш $ self -&amp;gt; {MAKE} - это нерасширяемый (и нерасширяемый) макрос, значение которого известно только самой утилите make.</target>
        </trans-unit>
        <trans-unit id="1e04720e675e287c291e140902461ae4e502fb52" translate="yes" xml:space="preserve">
          <source>None of these bugs exist when using block eval</source>
          <target state="translated">Ни одна из этих ошибок не существует при использовании блочной оценки.</target>
        </trans-unit>
        <trans-unit id="033d96f0084981901aa9644004656c9d55ed0182" translate="yes" xml:space="preserve">
          <source>None of these methods modify the invocand object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479325aa8b63106a6d86ab16c8ede5f5349e0981" translate="yes" xml:space="preserve">
          <source>None of these methods modify the invocand object. Note that a &lt;code&gt;NaN&lt;/code&gt; is neither less than, greater than, or equal to anything else, even a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="a1e84bde07301b296b051f051ed1c0db0b32e4b4" translate="yes" xml:space="preserve">
          <source>None. Remember: this is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a6496ffa4e9b51040364dbe3fe4269ea990e40" translate="yes" xml:space="preserve">
          <source>Nonetheless, Storable deserializing documents from untrusted sources is expected to have other, yet undiscovered, security concerns such as allowing an attacker to cause the deserializer to crash hard.</source>
          <target state="translated">Тем не менее,ожидается,что у Storable deserializing документов из недоверенных источников будут другие,еще не обнаруженные проблемы безопасности,такие как разрешение злоумышленнику привести дезериализующий к тяжелому падению.</target>
        </trans-unit>
        <trans-unit id="175ce5f240a3e9cb0cbb1e3f58683b52d7a97a1d" translate="yes" xml:space="preserve">
          <source>Nor is the &lt;code&gt;@&lt;i&gt;unicode_property&lt;/i&gt;@&lt;/code&gt; form implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839bc88d91700ba09e378d5076a26e3c444a4e70" translate="yes" xml:space="preserve">
          <source>Norbert Pueschel, pueschel@imsdd.meb.uni-bonn.de Jan-Erik Karlsson, trg@privat.utfors.se</source>
          <target state="translated">Норберт Пуэшель,pueschel@imsdd.meb.uni-bonn.de Ян-Эрик Карлссон,trg@privat.utfors.se.</target>
        </trans-unit>
        <trans-unit id="752b74baffa89f2087b420babd0da41de66e9651" translate="yes" xml:space="preserve">
          <source>NormTest.txt</source>
          <target state="translated">NormTest.txt</target>
        </trans-unit>
        <trans-unit id="bef55c09b30ad44df2dca64de025b08519e931e8" translate="yes" xml:space="preserve">
          <source>Normal Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398931fe08778e56fac4c793097af9f4ad258767" translate="yes" xml:space="preserve">
          <source>Normal errors are reported by having store() or retrieve() return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Such errors are usually I/O errors (or truncated stream errors at retrieval).</source>
          <target state="translated">О нормальных ошибках сообщает функция store () или retrieve (), возвращающая &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Такие ошибки обычно являются ошибками ввода-вывода (или ошибками усеченного потока при извлечении).</target>
        </trans-unit>
        <trans-unit id="19b9796cc876c957170d078d2d8dfae36e72dc58" translate="yes" xml:space="preserve">
          <source>Normal errors are reported by having store() or retrieve() return &lt;code&gt;undef&lt;/code&gt;. Such errors are usually I/O errors (or truncated stream errors at retrieval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe142dfc22c18bbee0c7f0e054d1e4fe9b2118c" translate="yes" xml:space="preserve">
          <source>Normal object destructor method.</source>
          <target state="translated">Метод нормального деструктора объектов.</target>
        </trans-unit>
        <trans-unit id="857c285210fd011f006ff55811d0ad93b45d7b73" translate="yes" xml:space="preserve">
          <source>Normal users of Perl should never care how Perl encodes any particular Unicode string (because the normal ways to get at the contents of a string with Unicode--via input and output--should always be via explicitly-defined I/O layers). But if you must, there are two ways of looking behind the scenes.</source>
          <target state="translated">Обычным пользователям Perl никогда не должно быть дела до того,как Perl кодирует какую-либо конкретную строку Юникода (потому что обычные способы добраться до содержимого строки с помощью Юникода-входа и выхода-всегда должны быть через явно определенные слои ввода/вывода).Но если нужно,есть два способа заглянуть за кулисы.</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="7f5151d9a184cfb6f6a7bdc53123078ee18e8e1e" translate="yes" xml:space="preserve">
          <source>Normalization Corrections</source>
          <target state="translated">Коррекция нормализации</target>
        </trans-unit>
        <trans-unit id="3fc17160b371a2dd2ce5f321ad17046bc51f04ec" translate="yes" xml:space="preserve">
          <source>Normalization Form Composed</source>
          <target state="translated">Форма нормализации составлена</target>
        </trans-unit>
        <trans-unit id="8b530c9dcdf01b0cc0b4fd91277cae625646ab23" translate="yes" xml:space="preserve">
          <source>Normalization Form Decomposed</source>
          <target state="translated">Форма нормализации Разложившаяся</target>
        </trans-unit>
        <trans-unit id="d6a84c0a7366c74d8b600470740fa32f23cb1e8c" translate="yes" xml:space="preserve">
          <source>Normalization Forms</source>
          <target state="translated">Формы нормализации</target>
        </trans-unit>
        <trans-unit id="857696fa6055a6a9182e520ffef5e8982e055460" translate="yes" xml:space="preserve">
          <source>NormalizationCorrections.txt</source>
          <target state="translated">NormalizationCorrections.txt</target>
        </trans-unit>
        <trans-unit id="25d1f6918ee145ecbeeb0b9fc5d04c8edf9a3980" translate="yes" xml:space="preserve">
          <source>Normalize all arguments for consistency of comparison.</source>
          <target state="translated">Нормализуйте все аргументы для согласованности сравнения.</target>
        </trans-unit>
        <trans-unit id="92f0c15067179151994e0422d3b7e1bea19d957f" translate="yes" xml:space="preserve">
          <source>Normalize the number. This is a no-op and is provided only for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b201ba0d30952b489241e1c219c0da1ea9609ad3" translate="yes" xml:space="preserve">
          <source>Normally 'Test2::Formatter::' is prefixed to the value in the environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf527795f304857fa2e9475a64463f107fbdc96" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; handles the &lt;code&gt;=cut&lt;/code&gt; POD directive by itself and does not pass it on to the caller for processing. Setting this option to a non-empty, non-zero value will cause &lt;b&gt;Pod::Parser&lt;/b&gt; to pass the &lt;code&gt;=cut&lt;/code&gt; directive to the caller just like any other POD command (and hence it may be processed by the &lt;b&gt;command()&lt;/b&gt; method).</source>
          <target state="translated">Обычно (по умолчанию) &lt;b&gt;Pod :: Parser&lt;/b&gt; обрабатывает директиву &lt;code&gt;=cut&lt;/code&gt; POD самостоятельно и не передает ее вызывающей стороне для обработки. Установка для этой опции непустого ненулевого значения заставит &lt;b&gt;Pod :: Parser&lt;/b&gt; передать директиву &lt;code&gt;=cut&lt;/code&gt; вызывающей стороне, как и любая другая команда POD (и, следовательно, она может быть обработана методом &lt;b&gt;command ()&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5bacef8258b5f77e0e8d77b6f8e1d3a5079db51" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; recognizes a bare minimum of pod syntax errors and warnings and issues diagnostic messages for errors, but not for warnings. (Use &lt;b&gt;Pod::Checker&lt;/b&gt; to do more thorough checking of POD syntax.) Setting this option to a non-empty, non-zero value will cause &lt;b&gt;Pod::Parser&lt;/b&gt; to issue diagnostics for the few warnings it recognizes as well as the errors.</source>
          <target state="translated">Обычно (по умолчанию) &lt;b&gt;Pod :: Parser&lt;/b&gt; распознает минимум синтаксических ошибок и предупреждений модуля и выдает диагностические сообщения для ошибок, но не для предупреждений. (Используйте &lt;b&gt;Pod :: Checker&lt;/b&gt; для более тщательной проверки синтаксиса POD.) Установка для этого параметра непустого, ненулевого значения заставит &lt;b&gt;Pod :: Parser&lt;/b&gt; выдавать диагностику для нескольких распознаваемых им предупреждений, а также ошибок.</target>
        </trans-unit>
        <trans-unit id="f96de2f4de546b0b105bd31abd1df6be57d08d9b" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; will only provide access to the POD sections of the input. Input paragraphs that are not part of the POD-format documentation are not made available to the caller (not even using &lt;b&gt;preprocess_paragraph()&lt;/b&gt;). Setting this option to a non-empty, non-zero value will allow &lt;b&gt;preprocess_paragraph()&lt;/b&gt; to see non-POD sections of the input as well as POD sections. The &lt;b&gt;cutting()&lt;/b&gt; method can be used to determine if the corresponding paragraph is a POD paragraph, or some other input paragraph.</source>
          <target state="translated">Обычно (по умолчанию) &lt;b&gt;Pod :: Parser&lt;/b&gt; предоставляет доступ только к разделам ввода POD. Входные абзацы, которые не являются частью документации POD-формата, не доступны для вызывающего (даже с использованием &lt;b&gt;preprocess_paragraph ()&lt;/b&gt; ). Установка для этой опции непустого, ненулевого значения позволит &lt;b&gt;preprocess_paragraph ()&lt;/b&gt; видеть разделы ввода, не относящиеся к POD, а также разделы POD. Метод &lt;b&gt;cut ()&lt;/b&gt; может использоваться, чтобы определить, является ли соответствующий абзац абзацем POD или каким-либо другим входным абзацем.</target>
        </trans-unit>
        <trans-unit id="8aa7d9bed6b6de90e46aa497f1bf0c42b0003cae" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;context()&lt;/code&gt; looks at the global hub stack. If you are maintaining your own &lt;a href=&quot;Test2::API::Stack&quot;&gt;Test2::API::Stack&lt;/a&gt; instance you may pass it in to be used instead of the global one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37837c6debd1017a96cd617b60da42b547584ec0" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;cx_pushblock&lt;/code&gt; should be immediately followed by the appropriate &lt;code&gt;cx_pushfoo&lt;/code&gt;, with nothing between them; this is because if code in-between could die (e.g. a warning upgraded to fatal), then the context stack unwinding code in &lt;code&gt;dounwind&lt;/code&gt; would see (in the example above) a &lt;code&gt;CXt_SUB&lt;/code&gt; context frame, but without all the subroutine-specific fields set, and crashes would soon ensue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c59a8b8d40b03f188d8c8dc54d2e1ea05d392c2" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;intercept { ... }&lt;/code&gt; only intercepts events sent to the main hub (as added by intercept itself). Nested hubs, such as those created by subtests, will not be intercepted. This is normally what you will still see the nested events by inspecting the subtest event. However there are times where you want to verify each event as it is sent, in that case use &lt;code&gt;intercept_deep { ... }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6752118c5629900bd2493b9fc622cf5fe1da59a3" translate="yes" xml:space="preserve">
          <source>Normally =head1 will become &amp;lt;h1&amp;gt;, =head2 will become &amp;lt;h2&amp;gt; etc. Using the html_h_level method will change these levels setting the h level of =head1 tags:</source>
          <target state="translated">Обычно = head1 станет &amp;lt;h1&amp;gt;, = head2 станет &amp;lt;h2&amp;gt; и т. Д. Использование метода html_h_level изменит эти уровни, установив h level тегов = head1:</target>
        </trans-unit>
        <trans-unit id="eb704595ff03db8550411015b5fd6f6b6a0da573" translate="yes" xml:space="preserve">
          <source>Normally CPAN.pm keeps config variables in memory and changes need to be saved in a separate 'o conf commit' command to make them permanent between sessions. If you set the 'auto_commit' option to true, changes to a config variable are always automatically committed to disk.</source>
          <target state="translated">Обычно CPAN.pm хранит конфигурационные переменные в памяти,и изменения должны быть сохранены в отдельной команде 'o conf commit',чтобы сделать их постоянными между сессиями.Если вы установите опцию 'auto_commit' в true,то изменения в конфигурационной переменной всегда автоматически фиксируются на диске.</target>
        </trans-unit>
        <trans-unit id="ffed2ba849f40bdabd5438b067027bdbe4e7e420" translate="yes" xml:space="preserve">
          <source>Normally File::Basename will assume a file path type native to your current operating system (ie. /foo/bar style on Unix, \foo\bar on Windows, etc...). With this function you can override that assumption.</source>
          <target state="translated">Обычно File::Basename предполагает тип пути к файлу,родной для вашей текущей операционной системы (т.е.стиль /foo/bar на Unix,\foo\bar на Windows и т.д....).С помощью этой функции вы можете переопределить это предположение.</target>
        </trans-unit>
        <trans-unit id="b7e8c2709805a9ae37b1070139ac3e090e7ff1f7" translate="yes" xml:space="preserve">
          <source>Normally SPACE and TAB characters have no special meaning inside a bracketed character class; they are just added to the list of characters matched by the class. But if the &lt;a href=&quot;perlre#%2Fx-and-%2Fxx&quot;&gt;&lt;code&gt;/xx&lt;/code&gt;&lt;/a&gt; pattern modifier is in effect, they are generally ignored and can be added to improve readability. They can't be added in the middle of a single construct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc57384763197fbed7cd5d27f4bd79109621c483" translate="yes" xml:space="preserve">
          <source>Normally a skip-all plan event will cause a subtest to stop executing. This is accomplished via &lt;code&gt;last LABEL&lt;/code&gt; to a label inside the subtest code. Most of the time this is perfectly fine. There are times however where this flow control causes bad things to happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c08039a5c74ee4bad6cfd5f4c148fa8b9bc350" translate="yes" xml:space="preserve">
          <source>Normally all events inside and outside a subtest are sent to the formatter immediately by the hub. Sometimes it is desirable to hold off sending events within a subtest until the subtest is complete. This usually depends on the formatter being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6487841dbf7b431d256b64c2c684343b1b3e420" translate="yes" xml:space="preserve">
          <source>Normally equivalent to inet_aton('0.0.0.0'), inet_aton('255.255.255.255'), inet_aton('localhost') and inet_aton('255.255.255.255') respectively.</source>
          <target state="translated">Обычно эквивалентны соответственно inet_aton('0.0.0.0'),inet_aton('255.255.255.255'),inet_aton('localhost')и inet_aton('255.255.255.255').</target>
        </trans-unit>
        <trans-unit id="655db30b7d1bcb685e05fd4286f5335ffc8fceaf" translate="yes" xml:space="preserve">
          <source>Normally equivalent to inet_pton(AF_INET6, &quot;::&quot;) and inet_pton(AF_INET6, &quot;::1&quot;) respectively.</source>
          <target state="translated">Обычно эквивалентно inet_pton(AF_INET6,&quot;::&quot;)и inet_pton(AF_INET6,&quot;::1&quot;)соответственно.</target>
        </trans-unit>
        <trans-unit id="d7299c892c667dfb149d16517a44252ec066ea3a" translate="yes" xml:space="preserve">
          <source>Normally it is an error to attempt to run the same test twice. Aliases allow you to overcome this limitation by giving each run of the test a unique name.</source>
          <target state="translated">Обычно ошибкой является попытка выполнить один и тот же тест дважды.Псевдонимы позволяют преодолеть это ограничение,присваивая каждому запуску теста уникальное имя.</target>
        </trans-unit>
        <trans-unit id="84c2859baa8c819a82e3a926f82e2ef06ec17886" translate="yes" xml:space="preserve">
          <source>Normally it is not necessarily to do this directly, because it suffices to use the implicit discarding behaviour of &lt;a href=&quot;#lex_next_chunk&quot;&gt;&quot;lex_next_chunk&quot;&lt;/a&gt; and things based on it. However, if a token stretches across multiple lines, and the lexing code has kept multiple lines of text in the buffer for that purpose, then after completion of the token it would be wise to explicitly discard the now-unneeded earlier lines, to avoid future multi-line tokens growing the buffer without bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b5278ad328e1d6dfb18e8dbc85851ab51d1e67" translate="yes" xml:space="preserve">
          <source>Normally it is not necessarily to do this directly, because it suffices to use the implicit discarding behaviour of &lt;a href=&quot;#lex_next_chunk&quot;&gt;lex_next_chunk&lt;/a&gt; and things based on it. However, if a token stretches across multiple lines, and the lexing code has kept multiple lines of text in the buffer for that purpose, then after completion of the token it would be wise to explicitly discard the now-unneeded earlier lines, to avoid future multi-line tokens growing the buffer without bound.</source>
          <target state="translated">Обычно не обязательно делать это напрямую, потому что достаточно использовать неявное отбрасывающее поведение &lt;a href=&quot;#lex_next_chunk&quot;&gt;lex_next_chunk&lt;/a&gt; и вещей, основанных на нем. Однако, если токен растягивается на несколько строк, и код лексирования сохранил несколько строк текста в буфере для этой цели, то после завершения токена было бы разумно явно отбросить ненужные ранее строки, чтобы избежать будущего многострочные токены, неограниченно увеличивающие буфер.</target>
        </trans-unit>
        <trans-unit id="dff81aba4927ad5db88d6aff8ddca6455f943273" translate="yes" xml:space="preserve">
          <source>Normally just returns an empty string.</source>
          <target state="translated">Обычно просто возвращает пустую строку.</target>
        </trans-unit>
        <trans-unit id="ee18c26e2f372d4c2e20c5f444a8a1eaa88e5a18" translate="yes" xml:space="preserve">
          <source>Normally listeners are not inherited by child hubs such as subtests. You can add the &lt;code&gt;inherit =&amp;gt; 1&lt;/code&gt; parameter to allow a listener to be inherited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7f43d14a04bad12a69a842e7552ac7eca4d422" translate="yes" xml:space="preserve">
          <source>Normally on unthreaded builds, the traditional &lt;code&gt;setlocale()&lt;/code&gt; is used and not the thread-safe locale functions. You can force the use of these on systems that have them by adding the &lt;code&gt;-Accflags='-DUSE_THREAD_SAFE_LOCALE'&lt;/code&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e69d6153e5ec624b88e17bbddf91a6ba5ccd198" translate="yes" xml:space="preserve">
          <source>Normally one can install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb00d3e7f7eb8b5f62db8fa28fecb9cae0387cd9" translate="yes" xml:space="preserve">
          <source>Normally the SV will be cleared before the escaped string is prepared, but when &lt;code&gt;PERL_PV_ESCAPE_NOCLEAR&lt;/code&gt; is set this will not occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bb2716ea7192ed8237324e0bfeb22c949fe5dd" translate="yes" xml:space="preserve">
          <source>Normally the SV will be cleared before the escaped string is prepared, but when PERL_PV_ESCAPE_NOCLEAR is set this will not occur.</source>
          <target state="translated">Обычно SV очищается перед подготовкой экранированной строки,но при установке PERL_PV_ESCAPE_NOCLEAR этого не происходит.</target>
        </trans-unit>
        <trans-unit id="2167ce6cabaacc20aab8af72ad8f0a559278228a" translate="yes" xml:space="preserve">
          <source>Normally the subtest hub is pushed and the sub is allowed to generate its own root context for the hub. When this setting is turned on a root context will be created for the hub that shares the same trace as the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e27e79537ab43ff1cac36249dfeaf81b443e2f" translate="yes" xml:space="preserve">
          <source>Normally the values returned by &lt;code&gt;message()&lt;/code&gt; and &lt;code&gt;code()&lt;/code&gt; are obtained from the remote server, but in a few circumstances, as detailed below, &lt;code&gt;Net::Cmd&lt;/code&gt; will return values that it sets. You can alter this behavior by overriding DEF_REPLY_CODE() to specify a different default reply code, or overriding one of the specific error handling methods below.</source>
          <target state="translated">Обычно значения, возвращаемые &lt;code&gt;message()&lt;/code&gt; и &lt;code&gt;code()&lt;/code&gt; , получаются с удаленного сервера, но в некоторых случаях, как описано ниже, &lt;code&gt;Net::Cmd&lt;/code&gt; будет возвращать значения, которые он устанавливает. Вы можете изменить это поведение, переопределив DEF_REPLY_CODE (), чтобы указать другой код ответа по умолчанию, или переопределив один из конкретных методов обработки ошибок ниже.</target>
        </trans-unit>
        <trans-unit id="e5c29faef0eb7b590f52263e442441419daf42a3" translate="yes" xml:space="preserve">
          <source>Normally when a Perl program is run in taint mode the contents of the &lt;code&gt;PERL5LIB&lt;/code&gt; environment variable do not appear in &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">Обычно, когда программа Perl запускается в режиме заражения, содержимое переменной среды &lt;code&gt;PERL5LIB&lt;/code&gt; не отображается в &lt;code&gt;@INC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="506d1f5f54dfc2b579811707472650864a3a3064" translate="yes" xml:space="preserve">
          <source>Normally when a Perl program is run in taint mode the contents of the &lt;code&gt;PERL5LIB&lt;/code&gt; environment variable do not appear in &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a7a995939729b0dabf635451424cb7aa8edddc" translate="yes" xml:space="preserve">
          <source>Normally when a quantified subpattern does not allow the rest of the overall pattern to match, Perl will backtrack. However, this behaviour is sometimes undesirable. Thus Perl provides the &quot;possessive&quot; quantifier form as well.</source>
          <target state="translated">Обычно,когда квантифицированная подмаска не позволяет совпадение остальной части общей схемы,Perl отступает.Однако такое поведение иногда нежелательно.Таким образом,Perl также предоставляет &quot;собственническую&quot; форму квантификатора.</target>
        </trans-unit>
        <trans-unit id="c8104915beebb2ef8d901739c62a7755b75d714f" translate="yes" xml:space="preserve">
          <source>Normally you can just pass a list of Perl tests and the harness will know how to execute them. However, if your tests are not written in Perl or if you want all tests invoked exactly the same way, use the &lt;code&gt;-e&lt;/code&gt; , or &lt;code&gt;--&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; switch:</source>
          <target state="translated">Обычно вы можете просто пройти список тестов Perl, и программа будет знать, как их выполнять. Однако, если ваши тесты написаны не на Perl или вы хотите, чтобы все тесты вызывались точно так же, используйте переключатель &lt;code&gt;-e&lt;/code&gt; или &lt;code&gt;--&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37c9dbf2473eab18c207bdcb93ed8d71c95d2719" translate="yes" xml:space="preserve">
          <source>Normally you can just pass a list of Perl tests and the harness will know how to execute them. However, if your tests are not written in Perl or if you want all tests invoked exactly the same way, use the &lt;code&gt;-e&lt;/code&gt;, or &lt;code&gt;--exec&lt;/code&gt; switch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e0d0fdb3d7e700b9e570e982fb103b1928fe84" translate="yes" xml:space="preserve">
          <source>Normally you don't need to know about the &lt;code&gt;dir_prefix&lt;/code&gt; option, but I include it in case it might prove useful for someone somewhere.</source>
          <target state="translated">Обычно вам не нужно знать о опции &lt;code&gt;dir_prefix&lt;/code&gt; , но я включаю ее на случай, если она может кому-то где-нибудь пригодиться.</target>
        </trans-unit>
        <trans-unit id="3126672cdab51b1480bf681d3edd48007efd3666" translate="yes" xml:space="preserve">
          <source>Normally you don't need to know about the &lt;code&gt;progress&lt;/code&gt; option, but I include it in case it might prove useful for someone somewhere.</source>
          <target state="translated">Обычно вам не нужно знать о параметре &lt;code&gt;progress&lt;/code&gt; , но я включаю его на случай, если он может кому-то пригодиться.</target>
        </trans-unit>
        <trans-unit id="1572aaee7e8d3c88cefd57a173a8439b4c3cbe72" translate="yes" xml:space="preserve">
          <source>Normally you only need to edit</source>
          <target state="translated">Обычно вам нужно только отредактировать</target>
        </trans-unit>
        <trans-unit id="c187e13441ab45730dcb9496c0aa29fc4a5d1bb8" translate="yes" xml:space="preserve">
          <source>Normally you would use a sequence of fields in a vertical stack associated with the same scalar variable to print out a block of text. You might wish to end the final field with the text &quot;...&quot;, which will appear in the output if the text was too long to appear in its entirety.</source>
          <target state="translated">Обычно для распечатки блока текста используется последовательность полей в вертикальном стеке,связанная с одной и той же скалярной переменной.Вы можете захотеть закончить окончательное поле текстом &quot;...&quot;,который появится в выводе,если текст был слишком длинным,чтобы появиться полностью.</target>
        </trans-unit>
        <trans-unit id="5b98aa4ab9dd3cba97d78a9f5f31385d116bda6f" translate="yes" xml:space="preserve">
          <source>Normally, &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt; takes the next unused argument as the value to format for each format specification. If the format specification uses &lt;code&gt;*&lt;/code&gt; to require additional arguments, these are consumed from the argument list in the order they appear in the format specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7e48b2a8e18321d834351ce5ec861595531f41" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;Memoize&lt;/code&gt; caches your function's return values into an ordinary Perl hash variable. However, you might like to have the values cached on the disk, so that they persist from one run of your program to the next, or you might like to associate some other interesting semantics with the cached values.</source>
          <target state="translated">Обычно &lt;code&gt;Memoize&lt;/code&gt; кэширует возвращаемые значения вашей функции в обычную хеш-переменную Perl. Однако вы можете захотеть, чтобы значения были кэшированы на диске, чтобы они сохранялись от одного запуска вашей программы до следующего, или вы можете связать какую-то другую интересную семантику с кешированными значениями.</target>
        </trans-unit>
        <trans-unit id="156e8ed9e5335713b0637af915d308c508bc5496" translate="yes" xml:space="preserve">
          <source>Normally, B::Deparse deparses the main code of a program, and all the subs defined in the same file. To include subs defined in other files, pass the &lt;b&gt;-f&lt;/b&gt; option with the filename. You can pass the &lt;b&gt;-f&lt;/b&gt; option several times, to include more than one secondary file. (Most of the time you don't want to use it at all.) You can also use this option to include subs which are defined in the scope of a &lt;b&gt;#line&lt;/b&gt; directive with two parameters.</source>
          <target state="translated">Обычно B :: Deparse удаляет основной код программы и все подпрограммы, определенные в одном файле. Чтобы включить подпрограммы, определенные в других файлах, передайте параметр &lt;b&gt;-f&lt;/b&gt; с именем файла. Вы можете передать опцию &lt;b&gt;-f&lt;/b&gt; несколько раз, чтобы включить более одного вторичного файла. (В большинстве случаев вы вообще не хотите его использовать.) Вы также можете использовать эту опцию для включения подпрограмм, которые определены в области действия директивы &lt;b&gt;#line&lt;/b&gt; с двумя параметрами.</target>
        </trans-unit>
        <trans-unit id="d23245f6b2deb15ea54d8fbc52298acca654091b" translate="yes" xml:space="preserve">
          <source>Normally, CPAN.pm continues processing the full list of targets and dependencies, even if one of them fails. However, you can specify that CPAN should halt after the first failure. (Note that optional recommended or suggested modules that fail will not cause a halt.)</source>
          <target state="translated">Обычно CPAN.pm продолжает обработку полного списка целей и зависимостей,даже если одна из них не удается.Однако,вы можете указать,что CPAN должен остановиться после первого сбоя.(Обратите внимание,что необязательные рекомендуемые или рекомендуемые модули,которые терпят неудачу,не вызовут остановку).</target>
        </trans-unit>
        <trans-unit id="3d5ac60a26c28e14f1c99420243a6e5d21eaa6ab" translate="yes" xml:space="preserve">
          <source>Normally, L&amp;lt;&amp;gt; formatting codes with a URL but anchor text are formatted to show both the anchor text and the URL. In other words:</source>
          <target state="translated">Обычно коды форматирования L &amp;lt;&amp;gt; с URL-адресом, но с текстом привязки форматируются так, чтобы отображать как текст привязки, так и URL-адрес. Другими словами:</target>
        </trans-unit>
        <trans-unit id="28696b8342bf721c125649c0d32db8869e990e70" translate="yes" xml:space="preserve">
          <source>Normally, Storable stores elements of hashes in the order they are stored internally by Perl, i.e. pseudo-randomly. If you set &lt;code&gt;$Storable::canonical&lt;/code&gt; to some &lt;code&gt;TRUE&lt;/code&gt; value, Storable will store hashes with the elements sorted by their key. This allows you to compare data structures by comparing their frozen representations (or even the compressed frozen representations), which can be useful for creating lookup tables for complicated queries.</source>
          <target state="translated">Обычно Storable хранит элементы хэшей в том порядке, в котором они хранятся внутри Perl, то есть псевдослучайно. Если вы установите для &lt;code&gt;$Storable::canonical&lt;/code&gt; некоторое значение &lt;code&gt;TRUE&lt;/code&gt; , Storable будет хранить хэши с элементами, отсортированными по их ключу. Это позволяет сравнивать структуры данных, сравнивая их замороженные представления (или даже сжатые замороженные представления), что может быть полезно для создания таблиц поиска для сложных запросов.</target>
        </trans-unit>
        <trans-unit id="fcf4331af4df94d60c4a0096eabf2c84288a8ec7" translate="yes" xml:space="preserve">
          <source>Normally, Test::Builder does some extra diagnostics when the test ends. It also changes the exit code as described below.</source>
          <target state="translated">Обычно,Test::Builder проводит дополнительную диагностику по окончании теста.Он также изменяет код выхода,как описано ниже.</target>
        </trans-unit>
        <trans-unit id="ce50c77261a5de00b7baaa95374b0bdfea3eac1d" translate="yes" xml:space="preserve">
          <source>Normally, a bareword doesn't need to be quoted, but in most cases probably should be (and must be under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; ). But a hash key consisting of a simple word and the left-hand operand to the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator both count as though they were quoted:</source>
          <target state="translated">Обычно голое слово не нужно цитировать, но в большинстве случаев, вероятно, должно быть (и должно &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; ). Но хеш-ключ, состоящий из простого слова и левого операнда оператора &lt;code&gt;=&amp;gt;&lt;/code&gt; , считается, как если бы они были заключены в кавычки:</target>
        </trans-unit>
        <trans-unit id="ea17e68a421c03c4aafdafcd58cccf49cfa05f01" translate="yes" xml:space="preserve">
          <source>Normally, a bareword doesn't need to be quoted, but in most cases probably should be (and must be under &lt;code&gt;use strict&lt;/code&gt;). But a hash key consisting of a simple word and the left-hand operand to the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator both count as though they were quoted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5564f90094b9860ce4353ac60db255b073b15ab0" translate="yes" xml:space="preserve">
          <source>Normally, a lone dash &lt;code&gt;-&lt;/code&gt; on the command line will not be considered an option. Option processing will terminate (unless &quot;permute&quot; is configured) and the dash will be left in &lt;code&gt;@ARGV&lt;/code&gt; .</source>
          <target state="translated">Как правило, одинокий тир &lt;code&gt;-&lt;/code&gt; в командной строке не будет рассматриваться как вариант. Обработка опций будет прекращена (если не настроено &amp;laquo;permute&amp;raquo;), и прочерк останется в &lt;code&gt;@ARGV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b48224b69ad031af88a5007831895e71150e793d" translate="yes" xml:space="preserve">
          <source>Normally, a lone dash &lt;code&gt;-&lt;/code&gt; on the command line will not be considered an option. Option processing will terminate (unless &quot;permute&quot; is configured) and the dash will be left in &lt;code&gt;@ARGV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad334551e4ade1c324bd799dc0f65766153d86ca" translate="yes" xml:space="preserve">
          <source>Normally, a test module (let's call it Test:MyStyle) calls Test::Builder-&amp;gt;new to get the Test::Builder object. Test::MyStyle calls methods on this object to record information about test results. When Test::Tester is loaded, it replaces Test::Builder's new() method with one which returns a Test::Tester::Delegate object. Most of the time this object behaves as the real Test::Builder object. Any methods that are called are delegated to the real Test::Builder object so everything works perfectly. However once we go into test mode, the method calls are no longer passed to the real Test::Builder object, instead they go to the Test::Tester::Capture object. This object seems exactly like the real Test::Builder object, except, instead of outputting test results and diagnostics, it just records all the information for later analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654422bdd7e927225f8155b32c99633ae1593b5f" translate="yes" xml:space="preserve">
          <source>Normally, accessing a hash key's value for a nonexistent key will</source>
          <target state="translated">Обычно,доступ к значению хэш-ключа для несуществующего ключа будет</target>
        </trans-unit>
        <trans-unit id="8652ae91a77d4cb6b6ff7525f46e31e0b15fc723" translate="yes" xml:space="preserve">
          <source>Normally, array elements have the record separator removed, so that if the file contains the text</source>
          <target state="translated">Обычно в элементах массива удаляется разделитель записей,так что если файл содержит текст</target>
        </trans-unit>
        <trans-unit id="534654aa79245de47a873277e56a6292c36afdc7" translate="yes" xml:space="preserve">
          <source>Normally, colored() just puts attribute codes at the beginning and end of the string, but if you set $Term::ANSIColor::EACHLINE to some string, that string will be considered the line delimiter and the attribute will be set at the beginning of each line of the passed string and reset at the end of each line. This is often desirable if the output contains newlines and you're using background colors, since a background color that persists across a newline is often interpreted by the terminal as providing the default background color for the next line. Programs like pagers can also be confused by attributes that span lines. Normally you'll want to set $Term::ANSIColor::EACHLINE to &lt;code&gt;&quot;\n&quot;&lt;/code&gt; to use this feature.</source>
          <target state="translated">Обычно color () просто помещает коды атрибутов в начало и конец строки, но если вы установите $ Term :: ANSIColor :: EACHLINE на некоторую строку, эта строка будет считаться разделителем строки, и атрибут будет установлен в начало каждой строки переданной строки и сбрасывается в конце каждой строки. Это часто желательно, если вывод содержит символы новой строки и вы используете цвета фона, поскольку цвет фона, который сохраняется на новой строке, часто интерпретируется терминалом как обеспечивающий цвет фона по умолчанию для следующей строки. Такие программы, как пейджеры, также могут сбивать с толку атрибуты, занимающие строки. Обычно вы хотите установить для $ Term :: ANSIColor :: EACHLINE значение &lt;code&gt;&quot;\n&quot;&lt;/code&gt; чтобы использовать эту функцию.</target>
        </trans-unit>
        <trans-unit id="47497939420b5b367cb1b2b4d46709150e929869" translate="yes" xml:space="preserve">
          <source>Normally, it uses the &lt;code&gt;failure_output()&lt;/code&gt; handle, but if this is for a TODO test, the &lt;code&gt;todo_output()&lt;/code&gt; handle is used.</source>
          <target state="translated">Обычно он использует &lt;code&gt;failure_output()&lt;/code&gt; , но если это для теста TODO, используется &lt;code&gt;todo_output()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="843f99e9f61b3167a92df62277ad684239edbee8" translate="yes" xml:space="preserve">
          <source>Normally, modifying a &lt;code&gt;Tie::File&lt;/code&gt; array writes to the underlying file immediately. Every assignment like &lt;code&gt;$a[3] = ...&lt;/code&gt; rewrites as much of the file as is necessary; typically, everything from line 3 through the end will need to be rewritten. This is the simplest and most transparent behavior. Performance even for large files is reasonably good.</source>
          <target state="translated">Обычно изменение массива &lt;code&gt;Tie::File&lt;/code&gt; немедленно записывается в базовый файл. Каждое присвоение типа &lt;code&gt;$a[3] = ...&lt;/code&gt; перезаписывает столько файла, сколько необходимо; как правило, все, начиная со строки 3 и до конца, необходимо переписать. Это самое простое и прозрачное поведение. Производительность даже для больших файлов достаточно хорошая.</target>
        </trans-unit>
        <trans-unit id="2e86bc5c5468300153e887bb030f8c8fafa55a91" translate="yes" xml:space="preserve">
          <source>Normally, parsing an S&amp;lt;...&amp;gt; sequence produces this event structure, just as if it were a B/C/F/I code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd66bc88fd481df4ac201aa91bfec31499d4ed47" translate="yes" xml:space="preserve">
          <source>Normally, parsing an X&amp;lt;...&amp;gt; sequence produces this event structure, just as if it were a B/C/F/I code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf97b0167156ea895f7910e3f3f52f1229f7b5f7" translate="yes" xml:space="preserve">
          <source>Normally, regexps are a part of Perl expressions.</source>
          <target state="translated">Обычно регеxps являются частью Perl выражений.</target>
        </trans-unit>
        <trans-unit id="808fe9fa0be0d04a656a7ac7cd5c2d9d3734bad0" translate="yes" xml:space="preserve">
          <source>Normally, sprintf() takes the next unused argument as the value to format for each format specification. If the format specification uses &lt;code&gt;*&lt;/code&gt; to require additional arguments, these are consumed from the argument list in the order they appear in the format specification</source>
          <target state="translated">Обычно sprintf () принимает следующий неиспользуемый аргумент в качестве значения для форматирования для каждой спецификации формата. Если в спецификации формата используется &lt;code&gt;*&lt;/code&gt; , чтобы требовать дополнительных аргументов, они используются из списка аргументов в том порядке, в котором они появляются в спецификации формата.</target>
        </trans-unit>
        <trans-unit id="2826cc3c3bfda4c3b98bd6c44f0b50d829979efc" translate="yes" xml:space="preserve">
          <source>Normally, the following code will result in two calls to &lt;code&gt;complicated&lt;/code&gt; , even if &lt;code&gt;complicated&lt;/code&gt; is memoized:</source>
          <target state="translated">Обычно следующий код приводит к двум вызовам &lt;code&gt;complicated&lt;/code&gt; , даже если &lt;code&gt;complicated&lt;/code&gt; запомнен:</target>
        </trans-unit>
        <trans-unit id="9a867eaf437cac7adb8353be42bd91789230ad0d" translate="yes" xml:space="preserve">
          <source>Normally, the following code will result in two calls to &lt;code&gt;complicated&lt;/code&gt;, even if &lt;code&gt;complicated&lt;/code&gt; is memoized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283cc850a65d4273ec3f9787a8b552a33654732" translate="yes" xml:space="preserve">
          <source>Normally, the parse-tree returned by &lt;b&gt;parse_text()&lt;/b&gt; will contain a text-string for each contiguous sequence of characters outside of an interior-sequence. Specifying &lt;b&gt;-expand_text&lt;/b&gt; tells &lt;b&gt;parse_text()&lt;/b&gt; to &quot;preprocess&quot; every such text-string it sees by invoking the referenced function (or named method of the parser object) and using the return value as the preprocessed (or &quot;expanded&quot;) result. [Note that if the result is an interior-sequence, then it will</source>
          <target state="translated">Обычно дерево синтаксического анализа, возвращаемое &lt;b&gt;функцией parse_text (),&lt;/b&gt; будет содержать текстовую строку для каждой непрерывной последовательности символов вне внутренней последовательности. Указание &lt;b&gt;-expand_text&lt;/b&gt; сообщает &lt;b&gt;parse_text ()&lt;/b&gt; &amp;laquo;препроцессировать&amp;raquo; каждую такую ​​текстовую строку, которую он видит, вызывая &lt;b&gt;указанную&lt;/b&gt; функцию (или именованный метод объекта анализатора) и используя возвращаемое значение в качестве предварительно обработанного (или &amp;laquo;расширенного&amp;raquo;) результата. [Обратите внимание, что если результатом является внутренняя последовательность, то она будет</target>
        </trans-unit>
        <trans-unit id="4c74045d12862bbf5896977df13a2e8f10f61ef7" translate="yes" xml:space="preserve">
          <source>Normally, the parse-tree returned by &lt;b&gt;parse_text()&lt;/b&gt; will contain an unexpanded &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object for each interior-sequence encountered. Specifying &lt;b&gt;-expand_seq&lt;/b&gt; tells &lt;b&gt;parse_text()&lt;/b&gt; to &quot;expand&quot; every interior-sequence it sees by invoking the referenced function (or named method of the parser object) and using the return value as the expanded result.</source>
          <target state="translated">Обычно дерево синтаксического анализа, возвращаемое &lt;b&gt;функцией parse_text (),&lt;/b&gt; будет содержать нерасширенный объект &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; для каждой обнаруженной внутренней последовательности. Указание &lt;b&gt;-expand_seq&lt;/b&gt; указывает &lt;b&gt;parse_text ()&lt;/b&gt; &amp;laquo;расширять&amp;raquo; каждую внутреннюю последовательность, которую он видит, вызывая &lt;b&gt;указанную&lt;/b&gt; функцию (или именованный метод объекта синтаксического анализатора) и используя возвращаемое значение в качестве развернутого результата.</target>
        </trans-unit>
        <trans-unit id="16267da81502b322cffa728aa842c57f0b24ab0c" translate="yes" xml:space="preserve">
          <source>Normally, the resulting message is returned in a new mortal SV. During global destruction a single SV may be shared between uses of this function.</source>
          <target state="translated">Обычно результирующее сообщение возвращается в новом смертном SV.Во время глобального разрушения один SV может быть разделен между использованиями этой функции.</target>
        </trans-unit>
        <trans-unit id="50ae485979ade17656e2e8127cce3420dca94e97" translate="yes" xml:space="preserve">
          <source>Normally, the resulting message is returned in a new mortal SV. During global destruction a single SV may be shared between uses of this function. If &lt;code&gt;consume&lt;/code&gt; is true, then the function is permitted (but not required) to modify and return &lt;code&gt;basemsg&lt;/code&gt; instead of allocating a new SV.</source>
          <target state="translated">Обычно результирующее сообщение возвращается в новом смертном SV. Во время глобального уничтожения один SV может использоваться совместно с пользователями этой функции. Если &quot; &lt;code&gt;consume&lt;/code&gt; истинно, то функции разрешено (но не обязательно) изменять и возвращать &lt;code&gt;basemsg&lt;/code&gt; вместо выделения нового SV.</target>
        </trans-unit>
        <trans-unit id="3699203fc3e3f9cdc9d573bca3286eccade605ca" translate="yes" xml:space="preserve">
          <source>Normally, the specified file will be opened for read and write access, and will be created if it does not exist. (That is, the flags &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; are supplied in the &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call.) If you want to change this, you may supply alternative flags in the &lt;code&gt;mode&lt;/code&gt; option. See &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; for a listing of available flags. For example:</source>
          <target state="translated">Обычно указанный файл открывается для чтения и записи и будет создан, если он не существует. (То есть флаги &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; предоставляются в вызове &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .) Если вы хотите изменить это, вы можете указать альтернативные флаги в опции &lt;code&gt;mode&lt;/code&gt; . См. Список доступных флагов в &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="5dfc63d426417838163eb863c3ff6f7e477ca3ff" translate="yes" xml:space="preserve">
          <source>Normally, the specified file will be opened for read and write access, and will be created if it does not exist. (That is, the flags &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; are supplied in the &lt;code&gt;open&lt;/code&gt; call.) If you want to change this, you may supply alternative flags in the &lt;code&gt;mode&lt;/code&gt; option. See &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; for a listing of available flags. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f12084738c458e8b7000b7b9525558b4cfff47" translate="yes" xml:space="preserve">
          <source>Normally, writing out Unicode data</source>
          <target state="translated">Обычно,выписывание данных Юникода</target>
        </trans-unit>
        <trans-unit id="247ce5d5d9158a1021672cfbc50ce69d843f7d14" translate="yes" xml:space="preserve">
          <source>North America</source>
          <target state="translated">Северная Америка</target>
        </trans-unit>
        <trans-unit id="8ddbb9fd49d254aced9f96e6d5b82c3634fdf5d4" translate="yes" xml:space="preserve">
          <source>North Carolina</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f11696f957b30cc16d9d6d3c2b53faa2bfa905a" translate="yes" xml:space="preserve">
          <source>Norton AntiVirus interferes with the build process, particularly if set to &quot;AutoProtect, All Files, when Opened&quot;. Unlike large applications the perl build process opens and modifies a lot of files. Having the AntiVirus scan each and every one slows build the process significantly. Worse, with PERLIO=stdio the build process fails with peculiar messages as the virus checker interacts badly with miniperl.exe writing configure files (it seems to either catch file part written and treat it as suspicious, or virus checker may have it &quot;locked&quot; in a way which inhibits miniperl updating it). The build does complete with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9226334f9ce44ad0f10ee80520f849c5fe4619" translate="yes" xml:space="preserve">
          <source>Norton AntiVirus interferes with the build process, particularly if set to &quot;AutoProtect, All Files, when Opened&quot;. Unlike large applications the perl build process opens and modifies a lot of files. Having the the AntiVirus scan each and every one slows build the process significantly. Worse, with PERLIO=stdio the build process fails with peculiar messages as the virus checker interacts badly with miniperl.exe writing configure files (it seems to either catch file part written and treat it as suspicious, or virus checker may have it &quot;locked&quot; in a way which inhibits miniperl updating it). The build does complete with</source>
          <target state="translated">Нортон Антивирус вмешивается в процесс сборки,особенно если установлено значение &quot;Автозащита,все файлы при открытии&quot;.В отличие от больших приложений,процесс сборки perl открывает и изменяет большое количество файлов.Сканирование Антивирусом каждого из них значительно замедляет процесс сборки.Хуже того,при PERLIO=stdio процесс сборки дает сборочные сообщения,т.к.вирусная проверка плохо взаимодействует с файлами конфигурации miniperl.exe (похоже,что она либо перехватывает записанную часть файла и относится к ней как к подозрительной,либо вирусная проверка может &quot;заблокировать&quot; ее таким образом,чтобы запретить miniperl обновлять ее).Сборка дополняется</target>
        </trans-unit>
        <trans-unit id="a416dbee324bb6347c195257a3461c9b547b428f" translate="yes" xml:space="preserve">
          <source>Norton T. Allen (allen@huarp.harvard.edu)</source>
          <target state="translated">Нортон Т.Аллен (allen@huarp.harvard.edu)</target>
        </trans-unit>
        <trans-unit id="988455e67df7cd81d090ea4bacdc05f39fb7caa5" translate="yes" xml:space="preserve">
          <source>Norway</source>
          <target state="translated">Norway</target>
        </trans-unit>
        <trans-unit id="370767717b5bd720890c41261b1cdb6e02957025" translate="yes" xml:space="preserve">
          <source>Not Using AutoLoader</source>
          <target state="translated">Не использующий автозагрузчик</target>
        </trans-unit>
        <trans-unit id="d37413af1038bf58c07742880e5a67dc70caa079" translate="yes" xml:space="preserve">
          <source>Not a CODE reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c01cc85dad0515e1920b0555382cfcb4e45014" translate="yes" xml:space="preserve">
          <source>Not a GLOB reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f3e6278403bcdf59b8152fac69e48864a5ba52" translate="yes" xml:space="preserve">
          <source>Not a HASH reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd98b3c6e90fca04f1dbcfd4de1cbca0a44a1f2" translate="yes" xml:space="preserve">
          <source>Not a SCALAR reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7c30886465e53cc15fb2f369c9a20de63a93cc" translate="yes" xml:space="preserve">
          <source>Not a number. The value Perl uses for certain invalid or inexpressible floating-point operations.</source>
          <target state="translated">Не номер.Значение Perl используется для некоторых недействительных или невыразимых операций с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="9ce5f175f6ed52d752c1dc214624e2c550cee7d4" translate="yes" xml:space="preserve">
          <source>Not a stellar system with three stars, but an &lt;b&gt;operator&lt;/b&gt; taking three &lt;b&gt;operands&lt;/b&gt;. Sometimes pronounced &lt;b&gt;ternary&lt;/b&gt;.</source>
          <target state="translated">Не звездная система с тремя звездами, а &lt;b&gt;оператор,&lt;/b&gt; принимающий три &lt;b&gt;операнда&lt;/b&gt; . Иногда произносится как &lt;b&gt;тройной&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c1b90e8290c5116a077f903a7e7316582eca91d7" translate="yes" xml:space="preserve">
          <source>Not a subroutine reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e81509b0f5a61c879c22f1e777758722a08a1c" translate="yes" xml:space="preserve">
          <source>Not a subroutine reference in overload table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a61da084e0aa67824715ad65e41d6be635c1c" translate="yes" xml:space="preserve">
          <source>Not a tag for normal use.</source>
          <target state="translated">Не метка для обычного использования.</target>
        </trans-unit>
        <trans-unit id="6628bb792927eb17f7227a3d024523ff7f4ef26a" translate="yes" xml:space="preserve">
          <source>Not all &lt;code&gt;(key,value)&lt;/code&gt; s are allowed to be changed. See also &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; and &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt; .</source>
          <target state="translated">Не все &lt;code&gt;(key,value)&lt;/code&gt; можно изменять. См. Также &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; и &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3ee77316d6142101f56620aa64696168bd3ffab" translate="yes" xml:space="preserve">
          <source>Not all &lt;code&gt;(key,value)&lt;/code&gt;s are allowed to be changed. See also &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; and &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ec939fa988aaea06d8cccbd3dfe26e8b7deec4" translate="yes" xml:space="preserve">
          <source>Not all Perl data types can be cloned (e.g., globs, code refs). By default, &lt;code&gt;shared_clone&lt;/code&gt; will &lt;a href=&quot;../carp&quot;&gt;croak&lt;/a&gt; if it encounters such items. To change this behaviour to a warning, then set the following:</source>
          <target state="translated">Не все типы данных Perl можно клонировать (например, глобусы, ссылки на код). По умолчанию &lt;code&gt;shared_clone&lt;/code&gt; будет &lt;a href=&quot;../carp&quot;&gt;каркать&lt;/a&gt; , если он сталкивается с такими деталями. Чтобы изменить это поведение на предупреждение, установите следующее:</target>
        </trans-unit>
        <trans-unit id="8dd49b520d2e25593cfad44814bb285779b091f5" translate="yes" xml:space="preserve">
          <source>Not all Perl data types can be cloned (e.g., globs, code refs). By default, &lt;code&gt;shared_clone&lt;/code&gt; will &lt;a href=&quot;carp&quot;&gt;croak&lt;/a&gt; if it encounters such items. To change this behaviour to a warning, then set the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f9f350740611366ed4fac1a55e30540aa5d5ab" translate="yes" xml:space="preserve">
          <source>Not all Perl programs have to be portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea270638e7bd76128d29c8152d0f28cca0f0cb30" translate="yes" xml:space="preserve">
          <source>Not all architectures (PA = PA-RISC, IPF = Itanium Processor Family) support all versions of HP-UX, here is a short list</source>
          <target state="translated">Не все архитектуры (PA=PA-RISC,IPF=семейство процессоров Itanium)поддерживают все версии HP-UX,вот краткий список.</target>
        </trans-unit>
        <trans-unit id="55e93ff6af987fcc062dba40c7d5f407a9f168d2" translate="yes" xml:space="preserve">
          <source>Not all characters can be used 'as is' in a match. Some characters, called &lt;b&gt;metacharacters&lt;/b&gt;, are considered special, and reserved for use in regex notation. The metacharacters are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c8890c57c81094971e9efbe9c79a62c905fdfd" translate="yes" xml:space="preserve">
          <source>Not all characters can be used 'as is' in a match. Some characters, called &lt;b&gt;metacharacters&lt;/b&gt;, are reserved for use in regex notation. The metacharacters are</source>
          <target state="translated">Не все символы могут использоваться в матче &amp;laquo;как есть&amp;raquo;. Некоторые символы, называемые &lt;b&gt;метасимволами&lt;/b&gt; , зарезервированы для использования в нотации регулярных выражений. Метасимволы</target>
        </trans-unit>
        <trans-unit id="3f2603de72efe0894bd7355a4fd5c7ad61e082bc" translate="yes" xml:space="preserve">
          <source>Not all errors are considered fatal, there is a &lt;code&gt;fail&lt;/code&gt; field that must be set for an error to cause the test to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2e7f1c3353c4588a12420d8ec357f219ec897c" translate="yes" xml:space="preserve">
          <source>Not all errors are fatal, some are displayed having already been handled. Set this to true if you want the error to cause the test to fail. Without this the error is simply a diagnostics message that has no effect on the overall pass/fail result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462cf763472459d9998ce2bfa0748c85a78850d0" translate="yes" xml:space="preserve">
          <source>Not all extensions available from CPAN may build or work properly in the Windows environment. See &lt;a href=&quot;#Building-Extensions&quot;&gt;&quot;Building Extensions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c499fcc39ea462750d346f8328fb611fa8eafb9" translate="yes" xml:space="preserve">
          <source>Not all extensions available from CPAN may build or work properly in the Windows environment. See &lt;a href=&quot;#Building-Extensions&quot;&gt;Building Extensions&lt;/a&gt;.</source>
          <target state="translated">Не все расширения, доступные в CPAN, могут быть правильно построены или работать в среде Windows. См. &lt;a href=&quot;#Building-Extensions&quot;&gt;Расширения зданий&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e06068c24945da55baa1c3c0c5d1c56745baf201" translate="yes" xml:space="preserve">
          <source>Not all fields are supported on all filesystem types. Here are the meanings of the fields:</source>
          <target state="translated">Не все поля поддерживаются на всех типах файловых систем.Вот значения полей:</target>
        </trans-unit>
        <trans-unit id="3d09a604d6ae3b0ff8d7d0a63321f6b716b05129" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;../tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;../tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;../tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;../tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">Не все методы, указанные выше, должны быть реализованы. См. &lt;a href=&quot;../perltie&quot;&gt;Perltie&lt;/a&gt; , &lt;a href=&quot;../tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt; , &lt;a href=&quot;../tie/array&quot;&gt;Tie :: Array&lt;/a&gt; , &lt;a href=&quot;../tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt; и &lt;a href=&quot;../tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2fda0df4f36f3d624368039c7b50bfa7d47ccc5" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;Tie::Hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;Tie::Array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;Tie::Scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;Tie::Handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9e8c5a0eef6b261c9851c73bf90d947557e17" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">Не все методы, указанные выше, должны быть реализованы. См. &lt;a href=&quot;perltie&quot;&gt;Perltie&lt;/a&gt; , &lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt; , &lt;a href=&quot;tie/array&quot;&gt;Tie :: Array&lt;/a&gt; , &lt;a href=&quot;tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt; и &lt;a href=&quot;tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2a6c0e385364fab2b337951897446173ad031c2" translate="yes" xml:space="preserve">
          <source>Not all modules that you might use are thread-safe, and you should always assume a module is unsafe unless the documentation says otherwise. This includes modules that are distributed as part of the core. Threads are a relatively new feature, and even some of the standard modules aren't thread-safe.</source>
          <target state="translated">Не все модули,которые вы можете использовать,являются потокобезопасными,и вы всегда должны предполагать,что модуль является небезопасным,если только в документации не указано иначе.Сюда входят модули,распространяемые как часть ядра.Потоки являются относительно новой функцией,и даже некоторые стандартные модули не являются потокобезопасными.</target>
        </trans-unit>
        <trans-unit id="dc116f0ff5686f14831a54addc98cc9a05b72b09" translate="yes" xml:space="preserve">
          <source>Not all of the methods below are overridable in a Makefile.PL. Overridable methods are marked as (o). All methods are overridable by a platform specific MM_*.pm file.</source>
          <target state="translated">Не все методы,перечисленные ниже,могут быть переопределены в Makefile.PL.Переопределяемые методы помечены как (o).Все методы переопределяются в MM_*.pm файле,специфичном для конкретной платформы.</target>
        </trans-unit>
        <trans-unit id="54d9265d57d6ec36dc8e3a9bed39f04863ac691e" translate="yes" xml:space="preserve">
          <source>Not all of the options currently have any useful effect. See &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf47163ed1a6a398998e1921423263683e08485" translate="yes" xml:space="preserve">
          <source>Not all of the options currently have any useful effect. See &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; for more details.</source>
          <target state="translated">В настоящее время не все параметры имеют какой-либо полезный эффект. Смотрите &lt;a href=&quot;#BUGS&quot;&gt;ОШИБКИ&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b1a2bb2e7a36d3508362112d31fd091b4c7b1d74" translate="yes" xml:space="preserve">
          <source>Not all platforms provide a command line. These are usually platforms that rely primarily on a Graphical User Interface (GUI) for user interaction. A program requiring a command line interface might not work everywhere. This is probably for the user of the program to deal with, so don't stay up late worrying about it.</source>
          <target state="translated">Не все платформы предоставляют командную строку.Обычно это платформы,которые полагаются в первую очередь на графический интерфейс пользователя (GUI)для взаимодействия с пользователем.Программа,требующая интерфейс командной строки,может работать не везде.Вероятно,пользователю программы приходится иметь дело с этим,поэтому не стоит засиживаться допоздна,беспокоясь об этом.</target>
        </trans-unit>
        <trans-unit id="0377a3bed66f53a36c6cc0f471dce14458aee134" translate="yes" xml:space="preserve">
          <source>Not all platforms support passing va_list to further varargs (stdarg) functions. The right thing to do is to copy the va_list using the Perl_va_copy() if the NEED_VA_COPY is defined.</source>
          <target state="translated">Не все платформы поддерживают передачу va_list'а в другие функции varargs (stdarg).Правильно сделать копирование va_list с помощью Perl_va_copy(),если определено значение NEED_VA.</target>
        </trans-unit>
        <trans-unit id="d7d5819e6b8154b84cfd521568df2f44e1277562" translate="yes" xml:space="preserve">
          <source>Not all scalar types are printable. Simple values certainly are: one of IV, UV, NV, or PV. Also, if the SV is a reference to some value, either it will be dereferenced and the value printed, or information about the type of that value and its address are displayed. The results of printing any other type of SV are undefined and likely to lead to an interpreter crash. NVs are printed using a &lt;code&gt;%g&lt;/code&gt;-ish format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3114af1185f39ddb11892070ce221fe5a6a78ef2" translate="yes" xml:space="preserve">
          <source>Not all shells will allow multiple &lt;code&gt;-e&lt;/code&gt; string arguments to perl to be concatenated together properly as recipes in this document 0, 2, 4, 5, and 6 might seem to imply.</source>
          <target state="translated">Не все оболочки позволяют правильно объединить вместе несколько строковых аргументов &lt;code&gt;-e&lt;/code&gt; для perl, как могут показаться в рецептах 0, 2, 4, 5 и 6.</target>
        </trans-unit>
        <trans-unit id="4304b60dda11c4080ba0d7af04669e7d3681ebb5" translate="yes" xml:space="preserve">
          <source>Not all these variables are necessarily considered &quot;public&quot; wrt. use in typemaps, so beware. Variables set up from the ExtUtils::ParseXS object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390f0fc324c35c457b6797e31cfc3992a7cb393c" translate="yes" xml:space="preserve">
          <source>Not an ARRAY reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2037b538368e39fec0d7f178aa255c4c901e6b71" translate="yes" xml:space="preserve">
          <source>Not being able to say &quot;no diagnostics&quot; is annoying, but may not be insurmountable.</source>
          <target state="translated">Невозможность сказать &quot;нет диагностики&quot; раздражает,но может и не быть непреодолимой.</target>
        </trans-unit>
        <trans-unit id="0995003c36ab734a65b058b853402db6930f592e" translate="yes" xml:space="preserve">
          <source>Not compiling with -DDEBUGGING</source>
          <target state="translated">Не компиляция с -DDEBUGING</target>
        </trans-unit>
        <trans-unit id="ca400cb81537a6d172c2a30c8bb57fcb36d92286" translate="yes" xml:space="preserve">
          <source>Not compiling with threading</source>
          <target state="translated">Не компиляция с резьбой</target>
        </trans-unit>
        <trans-unit id="350370904b27cc0af7789a292a507adc1a7bdacd" translate="yes" xml:space="preserve">
          <source>Not doing so may lead to surprises:</source>
          <target state="translated">Невыполнение этого требования может привести к сюрпризам:</target>
        </trans-unit>
        <trans-unit id="e70f97f83bebe0f2e20286e534122be1e62b93c9" translate="yes" xml:space="preserve">
          <source>Not end-of-file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f205c9fa4291a1adffc39f09e800a7bf1400fb" translate="yes" xml:space="preserve">
          <source>Not enough arguments for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4960796cc14c02f19a88f95a3afd62e329c17f" translate="yes" xml:space="preserve">
          <source>Not enough format arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba394cd9d79ffbbc16d2bd64cd6fb94c4285df0" translate="yes" xml:space="preserve">
          <source>Not every event or Perl Mongers group is on that calendar, so don't lose heart if you don't see yours posted. To have your event or group listed, contact brian d foy (brian@theperlreview.com).</source>
          <target state="translated">Не каждое событие или группа Perl Mongers находится в этом календаре,так что не унывайте,если вы не видите свой пост.Чтобы получить список ваших мероприятий или групп,свяжитесь с Брайан д фой (brian@theperlreview.com).</target>
        </trans-unit>
        <trans-unit id="0a7f13c13fb3f26bce123ed94d7ecfbbffb8eb0c" translate="yes" xml:space="preserve">
          <source>Not every language tag really refers to a single language. Some language tags refer to conditions: i-default (system-message text in English plus maybe other languages), und (undetermined language). Others (notably lots of the three-letter codes) are bibliographic tags that classify whole groups of languages, as with cus &quot;Cushitic (Other)&quot; (i.e., a language that has been classed as Cushtic, but which has no more specific code) or the even less linguistically coherent sai for &quot;South American Indian (Other)&quot;. Though useful in bibliography, &lt;b&gt;SUCH TAGS ARE NOT FOR GENERAL USE&lt;/b&gt;. For further guidance, email me.</source>
          <target state="translated">Не каждый языковой тег действительно относится к одному языку. Некоторые языковые теги относятся к условиям: i-default (текст системного сообщения на английском и, возможно, других языках), und (неопределенный язык). Другие (особенно много трехбуквенных кодов) представляют собой библиографические теги, которые классифицируют целые группы языков, как, например, cus &quot;Cushitic (Other)&quot; (т.е. язык, который был классифицирован как Cushtic, но не имеет более конкретного кода) или даже менее лингвистически связное sai для &quot;южноамериканского индейца (другой)&quot;. Хотя &lt;b&gt;ТАКИЕ МЕТКИ&lt;/b&gt; полезны в библиографии, они &lt;b&gt;не предназначены для общего пользования&lt;/b&gt; . Чтобы получить дальнейшие инструкции, напишите мне.</target>
        </trans-unit>
        <trans-unit id="3ea748e41042fae4b5e481a0f49f8953b1ba289f" translate="yes" xml:space="preserve">
          <source>Not every program has to go through each of the possible phases, but transition from one phase to another can only happen in the order described in the above list.</source>
          <target state="translated">Не каждой программе приходится проходить через каждую из возможных фаз,но переход от одной фазы к другой может происходить только в порядке,описанном в вышеприведенном списке.</target>
        </trans-unit>
        <trans-unit id="5c816e7c42988c3d11d87bf96a910ccb79c57f32" translate="yes" xml:space="preserve">
          <source>Not everything is a simple eq check or regex. There are times you need to see if two data structures are equivalent. For these instances Test::More provides a handful of useful functions.</source>
          <target state="translated">Не все является простой проверкой или регексом.Бывает необходимо посмотреть,эквивалентны ли две структуры данных.Для таких случаев Test::More предоставляет несколько полезных функций.</target>
        </trans-unit>
        <trans-unit id="b40e711f20f038555af473ee4ac108274fa7f9c8" translate="yes" xml:space="preserve">
          <source>Not everything is documented yet.</source>
          <target state="translated">Еще не все задокументировано.</target>
        </trans-unit>
        <trans-unit id="09e28ddb404a0041a3b2d909163038f64bb4a64a" translate="yes" xml:space="preserve">
          <source>Not exported by default.</source>
          <target state="translated">Не экспортируется по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3d70d5556752165324a9545f2bca3001c5928ecb" translate="yes" xml:space="preserve">
          <source>Not exporting your new function</source>
          <target state="translated">Не экспортировать вашу новую функцию</target>
        </trans-unit>
        <trans-unit id="3de6216a588bc2f1646686041b64658486a740c8" translate="yes" xml:space="preserve">
          <source>Not for normal use.</source>
          <target state="translated">Не для обычного использования.</target>
        </trans-unit>
        <trans-unit id="8cb64bcbbd5a35d8290b9d42e26918a747698537" translate="yes" xml:space="preserve">
          <source>Not implemented (VMS, RISC OS, VOS).</source>
          <target state="translated">Не реализован (ЗИС,ОС РИСК,ДОС).</target>
        </trans-unit>
        <trans-unit id="0d0f974626edbcbc3442249b1c5bedf691856c93" translate="yes" xml:space="preserve">
          <source>Not implemented yet, will fix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3254417362748be2bc014d24fafb5e5786cfb8" translate="yes" xml:space="preserve">
          <source>Not implemented, hence not useful for taint checking. (RISC OS)</source>
          <target state="translated">Не реализован,следовательно,не полезен для проверки пятен.(RISC OS)</target>
        </trans-unit>
        <trans-unit id="3f95882d534087a6046525a2df4e776680013e1a" translate="yes" xml:space="preserve">
          <source>Not implemented. (AmigaOS, RISC OS, VMS)</source>
          <target state="translated">Не выполнено.(AmigaOS,RISC OS,VMS)</target>
        </trans-unit>
        <trans-unit id="9be2651d8f1db0033658f4a09b41f2967b03b1a2" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android)</source>
          <target state="translated">Не выполнено.(Андроид)</target>
        </trans-unit>
        <trans-unit id="8764e205d719987502ecc5a1d14954350c06e36a" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, RISC OS, VMS, Win32)</source>
          <target state="translated">Не выполнено.(Android,RISC OS,VMS,Win32)</target>
        </trans-unit>
        <trans-unit id="9b09c5fded531e5c65a40df94ba58b539af31cb9" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, VMS, Win32, RISC OS)</source>
          <target state="translated">Не выполнено.(Android,VMS,Win32,RISC OS)</target>
        </trans-unit>
        <trans-unit id="db2cbf01d3edd364260719b49f0552da06074b32" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32)</source>
          <target state="translated">Не выполнено.(Android,Win32)</target>
        </trans-unit>
        <trans-unit id="cfd9c1a9a91b792892f2a5fea52723a1f2e69940" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, Plan 9)</source>
          <target state="translated">Не выполнено.(Андроид,Win32,план 9)</target>
        </trans-unit>
        <trans-unit id="b43f99dedb804d88539fc88ab6db0d0787e31419" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, Plan 9, RISC OS)</source>
          <target state="translated">Не выполнено.(Android,Win32,Plan 9,RISC OS)</target>
        </trans-unit>
        <trans-unit id="0be4e159794a607b410794f39b0e3b8aaf22c83b" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, RISC OS)</source>
          <target state="translated">Не выполнено.(Android,Win32,RISC OS)</target>
        </trans-unit>
        <trans-unit id="0d98f25d5507c35e363bc1c7b15a438bc954c58f" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS)</source>
          <target state="translated">Не выполнено.(Android,Win32,VMS)</target>
        </trans-unit>
        <trans-unit id="7bc41074b764485b1508c998d3f3f1b06873a949" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS, Plan 9, RISC OS, VOS)</source>
          <target state="translated">Не выполнено.(Android,Win32,VMS,План 9,RISC OS,VOS)</target>
        </trans-unit>
        <trans-unit id="dd10c5ee6bfcd93657131a710727b05972d81d34" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS, RISC OS)</source>
          <target state="translated">Не выполнено.(Android,Win32,VMS,RISC OS)</target>
        </trans-unit>
        <trans-unit id="27455a44f0877f0471812763650eca083a756dc3" translate="yes" xml:space="preserve">
          <source>Not implemented. (For computing dividends of long integers.) &lt;code&gt;ldiv()&lt;/code&gt; is C-specific, use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не реализована. (Для вычисления дивидендов длинных целых чисел.) &lt;code&gt;ldiv()&lt;/code&gt; специфична для языка C, используйте вместо нее &lt;code&gt;/&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32a90981ba3510445dbe102e793b68e3aa230e62" translate="yes" xml:space="preserve">
          <source>Not implemented. (For computing dividends of long integers.) &lt;code&gt;ldiv()&lt;/code&gt; is C-specific, use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;int()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35c350e45ece5778366ababe31d410a0f9c7643" translate="yes" xml:space="preserve">
          <source>Not implemented. (For returning absolute values of long integers.) &lt;code&gt;labs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. (Для возврата абсолютных значений длинных целых чисел.) &lt;code&gt;labs()&lt;/code&gt; специфична для языка C, вместо этого см. &lt;a href=&quot;functions/abs&quot;&gt;Abs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e37bef308ba3bb37063dbfda0ed4d42102958b1" translate="yes" xml:space="preserve">
          <source>Not implemented. (For returning absolute values of long integers.) &lt;code&gt;labs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#abs&quot;&gt;&quot;abs&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0defed26024da4d1fed917bb2bf5601feb0b111c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Older versions of VMS)</source>
          <target state="translated">Не выполнено.(Старые версии VMS)</target>
        </trans-unit>
        <trans-unit id="44ca2b069b718c2e4157a5f59d1c825f895901fe" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9)</source>
          <target state="translated">Не выполнено.(План 9)</target>
        </trans-unit>
        <trans-unit id="1687754bd82bb4141221093b9e0016e67a352bef" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9, Win32)</source>
          <target state="translated">Не выполнено.(План 9,Win32)</target>
        </trans-unit>
        <trans-unit id="a0c06eb1c0ea0d5c9ba352666d371d2a0ee60d0c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9, Win32, RISC OS)</source>
          <target state="translated">Не выполнено.(План 9,Win32,RISC OS)</target>
        </trans-unit>
        <trans-unit id="ccbe418811577573c94ecd1f3f6fa886c5efa0c1" translate="yes" xml:space="preserve">
          <source>Not implemented. (RISC OS)</source>
          <target state="translated">Не выполнено.(RISC OS)</target>
        </trans-unit>
        <trans-unit id="913cb5f5472a95b0b4bb5b0094468f9bd4a064d5" translate="yes" xml:space="preserve">
          <source>Not implemented. (RISC OS, VOS)</source>
          <target state="translated">Не выполнено.(RISC OS,VOS)</target>
        </trans-unit>
        <trans-unit id="c7eb7af11eb0f7e9fd28bfd3a491ea52eea2602b" translate="yes" xml:space="preserve">
          <source>Not implemented. (VMS)</source>
          <target state="translated">Не выполнено.(ЗИС)</target>
        </trans-unit>
        <trans-unit id="8b09ce4b149875b133df47459bb650cb679175f6" translate="yes" xml:space="preserve">
          <source>Not implemented. (VMS, Plan 9, VOS)</source>
          <target state="translated">Не выполнено.(ЗИС,план 9,СДН)</target>
        </trans-unit>
        <trans-unit id="0e4b18141256d3047c7405c5aca0f45f42b63f27" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32)</source>
          <target state="translated">Не выполнено.(Win32)</target>
        </trans-unit>
        <trans-unit id="1e142d21e64d53e23fa456f8c1dabbf0855e18ca" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, Plan 9)</source>
          <target state="translated">Не выполнено.(Win32,план 9)</target>
        </trans-unit>
        <trans-unit id="4df1791d2450fc70228c9ee024b8242b13ea6b2f" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, Plan 9, RISC OS)</source>
          <target state="translated">Не выполнено.(Win32,План 9,RISC OS)</target>
        </trans-unit>
        <trans-unit id="5e4a1a38936d3686e162500ce6f897394cef05d7" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, RISC OS)</source>
          <target state="translated">Не выполнено.(Win32,RISC OS)</target>
        </trans-unit>
        <trans-unit id="3be05ea3d75bc165c7f982935b70e66d5a771e41" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, Plan 9, RISC OS, VOS)</source>
          <target state="translated">Не выполнено.(Win32,VMS,План 9,RISC OS,VOS)</target>
        </trans-unit>
        <trans-unit id="a54f984df38f433357bf0966c3cbdd1b95a80f1c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, RISC OS)</source>
          <target state="translated">Не выполнено.(Win32,VMS,RISC OS)</target>
        </trans-unit>
        <trans-unit id="22e05018b6fdced9bdff0b7d0cfb5c24bf0dbae4" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, RISC OS, VOS)</source>
          <target state="translated">Не выполнено.(Win32,VMS,RISC OS,VOS)</target>
        </trans-unit>
        <trans-unit id="df3ebac574a0d503f84cea64df9995482f545b78" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; is non-portable, see &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; не переносится, см. вместо этого &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d13a3e012a93a772c4609ee06162adf5d3f5482" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atexit()&lt;/code&gt; is C-specific: use &lt;code&gt;END {}&lt;/code&gt; instead, see &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;atexit()&lt;/code&gt; специфичен для языка C: вместо этого используйте &lt;code&gt;END {}&lt;/code&gt; , см. &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09f4af676353b27d015a55030f640e13fe428c8a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atof()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it.</source>
          <target state="translated">Не реализована. &lt;code&gt;atof()&lt;/code&gt; специфичен для C. Perl прозрачно преобразует строки в числа. Если вам нужно преобразовать скаляр в число, добавьте к нему ноль.</target>
        </trans-unit>
        <trans-unit id="78bd80efc5684aaa0a6d2c976cfd9415957a93a7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atoi()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;atoi()&lt;/code&gt; специфичен для языка C. Perl прозрачно преобразует строки в числа. Если вам нужно преобразовать скаляр в число, добавьте к нему ноль. Если вам нужна только целая часть, см. &lt;a href=&quot;functions/int&quot;&gt;Int&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f00dfe9cb689976b534854484eee8f7dbf6f4bf" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atoi()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c185269174fefc8864fa2f033cc63f05493972d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atol()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;atol()&lt;/code&gt; специфичен для языка C. Perl прозрачно преобразует строки в числа. Если вам нужно преобразовать скаляр в число, добавьте к нему ноль. Если вам нужна только целая часть, см. &lt;a href=&quot;functions/int&quot;&gt;Int&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31277df803c7213e94495dddc89b89837974e70b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atol()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f186e9062bbcbeafdbb5188df478220b8fd34d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;calloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">Не реализована. &lt;code&gt;calloc()&lt;/code&gt; специфичен для C. Perl прозрачно управляет памятью.</target>
        </trans-unit>
        <trans-unit id="ff7eec59e29a378eef5b91c7e47dc4704c6ae3ed" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;div()&lt;/code&gt; is C-specific, use &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; on the usual &lt;code&gt;/&lt;/code&gt; division and the modulus &lt;code&gt;%&lt;/code&gt; .</source>
          <target state="translated">Не реализована. &lt;code&gt;div()&lt;/code&gt; специфичен для C, используйте &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; для обычного &lt;code&gt;/&lt;/code&gt; деления и модуля &lt;code&gt;%&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9668934ab7ee888fcba5d1018df608d998bdfde" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;div()&lt;/code&gt; is C-specific, use &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt; on the usual &lt;code&gt;/&lt;/code&gt; division and the modulus &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feba813e22b3e1ba2371da2a841ea2764df6b0c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execl()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execl()&lt;/code&gt; зависит от языка C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8cdcc2bc95ce16a401976480e4c0dd5d26d1551" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execl()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff7e7175b118c1234a7bdfd30d4510edaf63eb8" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execle()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execle()&lt;/code&gt; специфичен для языка C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4e612f96906af3d61e47a98a3b96ec9267a8ba5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execle()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55ec83b5578209872a8b8cd8fcb058c67f6c46a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execlp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execlp()&lt;/code&gt; зависит от языка C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="714c6cc385b3d787feb8a075a8914079e9a683f0" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execlp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28abb99b1ca88a6e43303b5eacb4722165a49a2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execv()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execv()&lt;/code&gt; специфичен для C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b67d5ef7bbf6b11e4c8131d65fd0b0d50cea3fa4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execv()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5186c9f0054529cba073f427607f1822da899bdc" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execve()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execve()&lt;/code&gt; зависит от языка C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06bfc60d8dbd39342a046bab49edf5ee16062e08" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execve()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a36265f790509d75a62c2c319a843a4a40d7fd1" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execvp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;execvp()&lt;/code&gt; специфичен для C, см. &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c41eeeac0050cd6ab2ec752535867c4b331c9b3" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execvp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d29c901ed53c6f9353f56b5387ce804863d40b2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fprintf()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02d74c5e78190921a07cba3e67691de9327d44e6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050fa3a8f5bd9b39de78e5fc9715f0e8bc48d1f5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fputc()&lt;/code&gt; специфична для языка C, см. вместо этого &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27f3f1356e0f2d2e897cadf71cc702ec5cf6b651" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6604c90e368654e682d80594f438dfbd8e6b3c87" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fputs()&lt;/code&gt; специфична для языка C, вместо этого см. &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b942ddfbeebd05264b5a1304515e8d5b6c258fd" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe419a5536eab5825dd89321d048538aa71f3581" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fread()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fread()&lt;/code&gt; специфичен для языка C, вместо этого см. &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb80e5d4e9f3e34554f9ec2247d5f30b5e39ecb0" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fread()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#read&quot;&gt;&quot;read&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc646b919b78b9528c2ca2fc3f6d528b7f17e528" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;free()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">Не реализована. &lt;code&gt;free()&lt;/code&gt; специфичен для языка C. Perl прозрачно управляет памятью.</target>
        </trans-unit>
        <trans-unit id="f31c768b4ce793b6920a2fbc67aa875a3bad3ce7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;freopen()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;freopen()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ff06451b9d8800308bf4d85c0d2cb81711b1af7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;freopen()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6dd63a418b84ae3412075ba1a715748c59e650" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fscanf()&lt;/code&gt; is C-specific, use &amp;lt;&amp;gt; and regular expressions instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fscanf()&lt;/code&gt; зависит от языка C, используйте вместо него &amp;lt;&amp;gt; и регулярные выражения.</target>
        </trans-unit>
        <trans-unit id="803e59e7256268e04789245ab7cdd5f3b1b8ccea" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fwrite()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;fwrite()&lt;/code&gt; специфичен для C, см. вместо этого &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2eb7a59ef7308efd57baee975752c73e9e09e718" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fwrite()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009be5a018756df717aa5d027ee88dc34faf4f1e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;longjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;longjmp()&lt;/code&gt; специфичен для языка C: вместо этого используйте &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20a0777e409be90d3636e1854e98df3c8eb744c9" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;longjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;perlfunc#die&quot;&gt;&quot;die&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef9c813c13bfbed594dcbc5cb78558fb58b324e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;malloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">Не реализована. &lt;code&gt;malloc()&lt;/code&gt; специфичен для C. Perl прозрачно управляет памятью.</target>
        </trans-unit>
        <trans-unit id="05a9fcc8dff8c195fa86d7e73fdbb1a70a26f9f6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;memchr()&lt;/code&gt; специфична для языка C, см. вместо этого &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8b03690afc4782abe2d4eb7aa9e8fb3d6ca560f" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77441742665123afa83b78530ce3a0ab326aeb65" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;memcmp()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;eq&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef2d9a9129c1e4edee370c88c30737709c4b4ca5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; , see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;memcpy()&lt;/code&gt; зависит от языка C, используйте &lt;code&gt;=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; или &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b28c8c3a19a27c6c25a1bd369ca8b66138675bd" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt;, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df825da230687d219686874fba9a3cde9128b6b2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memmove()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; , see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;memmove()&lt;/code&gt; зависит от языка C, используйте &lt;code&gt;=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; или см. &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a1b0d19a886f2b51bef3354c44ddb3c2fdfc4ac" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memmove()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt;, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f209e2a77b56cbe0e8dab09f4f69003460ef5165" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memset()&lt;/code&gt; is C-specific, use &lt;code&gt;x&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;memset()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;x&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb4ed6eef37f29c3a5ed63baa8372d65c75a7bd4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;offsetof()&lt;/code&gt; is C-specific, you probably want to see &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;offsetof()&lt;/code&gt; специфичен для C, вы, вероятно, захотите вместо этого увидеть &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2678c36a3e7afb74108d32fad6b536b2c312fb34" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;offsetof()&lt;/code&gt; is C-specific, you probably want to see &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a56537761ef29ac46b64e624815032acfe09d5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;putc()&lt;/code&gt; специфичен для C, см. вместо этого &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a837aa4d6a9085f7e08d3d9d5bed920b5d904982" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f78712fd0d6ef941365735d2d77cc01cb91842" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putchar()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;putchar()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a462bc7da9d7de2e2210ee6d9180556440425552" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putchar()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4f9ab6e5a505c059b02d4f1e39653281c84079" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;puts()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;puts()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="486a94a26ebd7d06cab9d63aafb041166ffd8558" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;puts()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f67ad74b3ec17c9d41e3b1afab51f5f541355a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;qsort()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;qsort()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58970081657eba957570efcb0024c21310623ca4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;qsort()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5737e86392842d14972e36d022289166fd1215" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;rand()&lt;/code&gt; is non-portable, see &lt;a href=&quot;perlfunc#rand&quot;&gt;&quot;rand&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80417a7f52d6bce06bdc09d12e04679309282530" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;realloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">Не реализована. &lt;code&gt;realloc()&lt;/code&gt; специфичен для C. Perl прозрачно управляет памятью.</target>
        </trans-unit>
        <trans-unit id="b854623b0099f120c1f261738fcfb3b0e3dc6c43" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;scanf()&lt;/code&gt; is C-specific, use &amp;lt;&amp;gt; and regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;scanf()&lt;/code&gt; зависит от языка C, используйте вместо него &amp;lt;&amp;gt; и регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86b82e3463dd9eb13ab0f20876acdf2afce2a004" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;setjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; instead, see &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;setjmp()&lt;/code&gt; специфичен для языка C: вместо этого используйте &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , см. &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50f8aef85879178dec102b3280e027faa31a0fbc" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;setjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;eval {}&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa206dd3a3d7cd667dd32f0c3afaf7a818af84a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;siglongjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;siglongjmp()&lt;/code&gt; специфичен для языка C: вместо этого используйте &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5ed221632f47a2af0000aec5b773670dcdd589c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;siglongjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;perlfunc#die&quot;&gt;&quot;die&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdcc330b8531baca8e2545556f293d068fb1ea6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sigsetjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; instead, see &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;sigsetjmp()&lt;/code&gt; специфичен для языка C: вместо этого используйте &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , см. &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37fd5b8db291420c97561c7d4f53a7442c39460a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sigsetjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;eval {}&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c268319591fc9206f5120b56c9b7a829b89f16" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sscanf()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;sscanf()&lt;/code&gt; зависит от языка C, используйте вместо этого регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15a4e6249a6616df5c7fdb6def3ca7df12c8a726" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcat()&lt;/code&gt; is C-specific, use &lt;code&gt;.=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strcat()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;.=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4812ccf99744fab9351e2abe32d45f098e817477" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;strchr()&lt;/code&gt; зависит от языка C, см. вместо этого &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2377c1e46d6925e7717ebcfb500224bd7e8fa3a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97d0b60e52aa06d90e7b2e823428ad7860f8e8a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strcmp()&lt;/code&gt; зависит от языка C, используйте вместо этого &lt;code&gt;eq&lt;/code&gt; или &lt;code&gt;cmp&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e88b009350740b83bff03725c96d491249d6cc12" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strcpy()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a946232e34c698b1c18404aaa65fdcbbc90586e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcspn()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strcspn()&lt;/code&gt; зависит от языка C, используйте вместо этого регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1ea236189e44b7d18fc790ee5b8256e3811b01" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strlen()&lt;/code&gt; is C-specific, use &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; instead, see &lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strlen()&lt;/code&gt; специфична для языка C, используйте вместо нее &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7243ed7908af6a010c57b54ba9ffdf8010dfa6eb" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strlen()&lt;/code&gt; is C-specific, use &lt;code&gt;length()&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#length&quot;&gt;&quot;length&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec098c49b2779aed7a7218ddc97a53cf81b8121" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncat()&lt;/code&gt; is C-specific, use &lt;code&gt;.=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strncat()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;.=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4679b5013101131fbb1f77170dbb3261921e3ac9" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strncmp()&lt;/code&gt; специфична для языка C, используйте вместо &lt;a href=&quot;perlop&quot;&gt;нее &lt;/a&gt; &lt;code&gt;eq&lt;/code&gt; , см. perlop .</target>
        </trans-unit>
        <trans-unit id="68b43540c2aaa3f23562e63d21cbb3d1f37d032d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strncpy()&lt;/code&gt; зависит от языка C, используйте вместо него &lt;code&gt;=&lt;/code&gt; , см. &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e613eff42bbb352539ebe134a02f9df651ee1788" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strpbrk()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strpbrk()&lt;/code&gt; зависит от языка C, используйте вместо этого регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec8b4e827e4723ad758e333ead45fa4a152ab56" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strrchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;strrchr()&lt;/code&gt; специфична для языка C, см. вместо этого &lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d989a1989e58e594834a2c2dc1076104bdb3de8" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strrchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#rindex&quot;&gt;&quot;rindex&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc182b6d01cd132d49498bf46d317d05a13d5d37" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strspn()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strspn()&lt;/code&gt; зависит от языка C, используйте вместо этого регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5614594f22eb6178c164a089713817c648981e5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strtok()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, or &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;strtok()&lt;/code&gt; зависит от языка C, используйте вместо этого регулярные выражения, см. &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; или &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b97f646be52a7c0b85640187f4568a1fa8af6c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strtok()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, or &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fdcacb3f3247028947287ced6c21eda7e4321b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vfprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;vfprintf()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9215122814b90ecb3e477d3c15f5429bcad42bd7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vfprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90b40527e74f3653d4dd6b14250c134ce59f330" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;vprintf()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bd973fd3341a07f7cd818193d4686826a45e553" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08604cd1d6dad28e54ed2c86d8e61348b23d108b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vsprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;vsprintf()&lt;/code&gt; специфичен для языка C, см. вместо этого &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3d56b756e7df13ee494ac890642837179ebc81" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vsprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d102bc3eb40c72725daf568afa3e2114850dcc" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; instead, or see &lt;a href=&quot;File::Temp&quot;&gt;File::Temp&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c9bc78a8aeb50498c091744a0a072e8663077c" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; instead, or see &lt;a href=&quot;file/temp&quot;&gt;File::Temp&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; этого используйте метод IO :: File :: new_tmpfile () или см. &lt;a href=&quot;file/temp&quot;&gt;File :: Temp&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9ea04652178e89f71d95b0e26c4da58a6e3d57" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::open()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::File::open()&lt;/code&gt; или посмотрите &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f6a6e959d35888331459ed390bce3c8516ae526" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::open()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133851d7093855036c645528e4109a7be1a3e820" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::close()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::close()&lt;/code&gt; или смотрите &lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c5b2cfc5eec40176e9a2daefbd3f1ebc5a9775" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::close()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#close&quot;&gt;&quot;close&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ba46f1c447a0143660b5cddf9fb1d25553fffb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::eof()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Handle::eof()&lt;/code&gt; этого используйте метод IO :: Handle :: eof () или см. &lt;a href=&quot;functions/eof&quot;&gt;Eof&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b85b74139f7dd0ea579a4dad9aa4bdb958e7b2b" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::eof()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#eof&quot;&gt;&quot;eof&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8adccccd63977fb3c0fcacade58414e48926172" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::error()&lt;/code&gt; instead.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::error()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1cf1a56225275921aede7048ae283bdae3ce190" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; этого используйте метод IO :: Handle :: fileno () или смотрите &lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9696f13283acc9bdbd2e83addb3b28782209df38" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#fileno&quot;&gt;&quot;fileno&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaf3e3bac060d4e96a401f2f0634ced943fa15f" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::flush()&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;&quot;$OUTPUT_AUTOFLUSH&quot; in perlvar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea09c7543753e43f0874eca405e18dbb7c8fbe5" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::flush()&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;$OUTPUT_AUTOFLUSH in perlvar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::flush()&lt;/code&gt; . См. Также &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;$OUTPUT_AUTOFLUSH in perlvar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b6a85a170f35c7a103834e7c9ab729375c61940" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::getc()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::getc()&lt;/code&gt; или смотрите &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42ababc5d5162f6a63c30bd536ed8086eafd3641" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::getc()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#read&quot;&gt;&quot;read&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58770e0b79629739d1eacc20133618f4648e46ac" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::gets()&lt;/code&gt; instead. Similar to &amp;lt;&amp;gt;, also known as &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::gets()&lt;/code&gt; . Подобно &amp;lt;&amp;gt;, также известному как &lt;a href=&quot;functions/readline&quot;&gt;строка чтения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08418b376d6e2a51350cafa8345cc73ed8d4f24e" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::gets()&lt;/code&gt; instead. Similar to &amp;lt;&amp;gt;, also known as &lt;a href=&quot;perlfunc#readline&quot;&gt;&quot;readline&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3907a6c5c4412de4df54dbbf1b97cc9ee0b41c" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; этого используйте метод IO :: Handle :: new_from_fd () или посмотрите &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdda9a6ff09725998f29342f77d923d05475255b" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ae8702317852fa502a0298b0533b2d7a4471a" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::sync()&lt;/code&gt; instead.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::sync()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9baea21503c08e99440dc4cb43bcdef6e777150" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::ungetc()&lt;/code&gt; instead.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Handle::ungetc()&lt;/code&gt; этого используйте метод IO :: Handle :: ungetc () .</target>
        </trans-unit>
        <trans-unit id="211713d31d2112ee0f26a6608edadadbf58f4c80" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Используйте метод &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; вместо этого, или видеть &lt;a href=&quot;functions/seek&quot;&gt;искать&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7a6c87195880febc276d87a3f6ab896650a4f21" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49c926515a4700f695726ea107a0a6611a896eb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">Не реализована. Используйте метод &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; вместо этого, или видеть &lt;a href=&quot;functions/seek&quot;&gt;искать&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e22c70c9516f2dd39dfe39fe30636124f60a3b4" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e6ae0bbba38efd7d70699a4892e9d6f993a6ca" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; instead, or seek &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; этого используйте метод IO :: Seekable :: setpos () или ищите &lt;a href=&quot;functions/seek&quot;&gt;поиск&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d70e95cf413ff9992f93ac25f58aae24206141ae" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; instead, or seek &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3d78054e07679018c7eb8a6898e917690c20bb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;.</source>
          <target state="translated">Не реализована. &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; используйте метод IO :: Seekable :: tell () или посмотрите &lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d008ff929665022b03b82862bb6c2f5c4eb1995f" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#tell&quot;&gt;&quot;tell&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137c25f432a636a5b4fbe697952402c8c467df96" translate="yes" xml:space="preserve">
          <source>Not implemented. Use the method &lt;code&gt;IO::Handle::clearerr()&lt;/code&gt; instead, to reset the error state (if any) and EOF state (if any) of the given stream.</source>
          <target state="translated">Не реализована. Вместо этого используйте метод &lt;code&gt;IO::Handle::clearerr()&lt;/code&gt; , чтобы сбросить состояние ошибки (если есть) и состояние EOF (если есть) данного потока.</target>
        </trans-unit>
        <trans-unit id="58f06a0bbcce20a76f9bb983793e3d731cc5b4e7" translate="yes" xml:space="preserve">
          <source>Not import any functions (&lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt; are not imported).</source>
          <target state="translated">Не импортировать никаких функций ( &lt;code&gt;load&lt;/code&gt; и &lt;code&gt;autoload&lt;/code&gt; не импортируются).</target>
        </trans-unit>
        <trans-unit id="96a4269aa601e675ab09221ec97b05a936fa8983" translate="yes" xml:space="preserve">
          <source>Not keen on YAML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48d80935038d565f7b6bee1373f0f551a681530" translate="yes" xml:space="preserve">
          <source>Not meaning the same thing everywhere. A global variable in Perl can be localized inside a &lt;b&gt;dynamic scope&lt;/b&gt; via the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">Не везде одно и то же. Глобальная переменная в Perl может быть локализована внутри &lt;b&gt;динамической области с&lt;/b&gt; помощью &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="5a2dde05372413be6966263a334909914770e1ec" translate="yes" xml:space="preserve">
          <source>Not meaning the same thing everywhere. A global variable in Perl can be localized inside a &lt;b&gt;dynamic scope&lt;/b&gt; via the &lt;code&gt;local&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b939fb6a3591b14266d8d57a8e48e4faf1d2cee" translate="yes" xml:space="preserve">
          <source>Not much in there, lets have a look at our hash:</source>
          <target state="translated">Там не так уж много,давайте посмотрим на наш гашиш:</target>
        </trans-unit>
        <trans-unit id="111014156b398a7e453286db5ba72b54a2a724dd" translate="yes" xml:space="preserve">
          <source>Not only does the &lt;code&gt;&amp;amp;&lt;/code&gt; form make the argument list optional, it also disables any prototype checking on arguments you do provide. This is partly for historical reasons, and partly for having a convenient way to cheat if you know what you're doing. See &lt;a href=&quot;#Prototypes&quot;&gt;&quot;Prototypes&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9a725cbef013a6dd198484972ad2c467befeee" translate="yes" xml:space="preserve">
          <source>Not only does the &lt;code&gt;&amp;amp;&lt;/code&gt; form make the argument list optional, it also disables any prototype checking on arguments you do provide. This is partly for historical reasons, and partly for having a convenient way to cheat if you know what you're doing. See &lt;a href=&quot;#Prototypes&quot;&gt;Prototypes&lt;/a&gt; below.</source>
          <target state="translated">Форма &lt;code&gt;&amp;amp;&lt;/code&gt; не только делает список аргументов необязательным, но и отключает любую проверку прототипа для предоставленных вами аргументов. Отчасти это связано с историческими причинами, а отчасти потому, что у вас есть удобный способ обмануть, если вы знаете, что делаете. См. &lt;a href=&quot;#Prototypes&quot;&gt;Прототипы&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="a811cf50f735b2384cdcc3d6c15773eea2339670" translate="yes" xml:space="preserve">
          <source>Not really a function. Returns the value of the last command in the sequence of commands indicated by BLOCK. When modified by the &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; loop modifier, executes the BLOCK once before testing the loop condition. (On other statements the loop modifiers test the conditional first.)</source>
          <target state="translated">Не совсем функция. Возвращает значение последней команды в последовательности команд, обозначенной BLOCK. При изменении модификатором цикла &lt;code&gt;while&lt;/code&gt; или &lt;code&gt;until&lt;/code&gt; выполняет BLOCK один раз перед проверкой условия цикла. (В других операторах модификаторы цикла сначала проверяют условие.)</target>
        </trans-unit>
        <trans-unit id="7730f6df594c6de3b4d8613cf47cdce98b6f0a22" translate="yes" xml:space="preserve">
          <source>Not really needed since Perl can do this transparently, see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">На самом деле в этом нет необходимости, поскольку Perl может делать это прозрачно, см. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9d7a49b40d40ab0a0f9c9a3b98021fa838b1713" translate="yes" xml:space="preserve">
          <source>Not really. Just remember these things:</source>
          <target state="translated">Не совсем.Просто запомни эти вещи:</target>
        </trans-unit>
        <trans-unit id="564d2f25f68052a8b0d8264d398e1a270012d6dd" translate="yes" xml:space="preserve">
          <source>Not supported. (Cygwin, Win32)</source>
          <target state="translated">Не поддерживается.(Cygwin,Win32)</target>
        </trans-unit>
        <trans-unit id="44f0aabb090ea7bda69b4ec7e7feada441e65ecd" translate="yes" xml:space="preserve">
          <source>Not supported. (Symbian OS)</source>
          <target state="translated">Не поддерживается.(Симбианская ОС)</target>
        </trans-unit>
        <trans-unit id="09d97c142afe584c0633a63005929ca08c9b4ee3" translate="yes" xml:space="preserve">
          <source>Not surprisingly &lt;code&gt;POPi&lt;/code&gt; is used twice this time because we were retrieving 2 values from the stack. The important thing to note is that when using the &lt;code&gt;POP*&lt;/code&gt; macros they come off the stack in</source>
          <target state="translated">Неудивительно, &lt;code&gt;POPi&lt;/code&gt; на этот раз POPi используется дважды, потому что мы извлекали 2 значения из стека. Важно отметить, что при использовании макросов &lt;code&gt;POP*&lt;/code&gt; они выходят из стека в</target>
        </trans-unit>
        <trans-unit id="b02a8b9c9c34f815393af037fc94b1f6cd6d0270" translate="yes" xml:space="preserve">
          <source>Not to be confused with the older &lt;code&gt;sv_isa&lt;/code&gt; function, which does not use an overloaded &lt;code&gt;isa()&lt;/code&gt; method, nor will check subclassing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390165cd3f335a354cf23fafc424a48aba836996" translate="yes" xml:space="preserve">
          <source>Not useful. (RISC OS)</source>
          <target state="translated">Неполезно.(RISC OS)</target>
        </trans-unit>
        <trans-unit id="a2b7936ab62eebf457dc2154c2400025b89c2f6e" translate="yes" xml:space="preserve">
          <source>Not very consistent! We'll set a breakpoint in the code manually and run it under the debugger to see what's going on. A breakpoint is a flag, to which the debugger will run without interruption, when it reaches the breakpoint, it will stop execution and offer a prompt for further interaction. In normal use, these debugger commands are completely ignored, and they are safe - if a little messy, to leave in production code.</source>
          <target state="translated">Не очень последовательно! Мы установим точку останова в коде вручную и запустим ее под отладчиком,чтобы посмотреть,что происходит.Точка останова-это флаг,до которого отладчик будет работать без перерыва,когда он достигнет точки останова,он остановит выполнение и предложит запрос для дальнейшего взаимодействия.При нормальном использовании эти команды отладчика полностью игнорируются,и они безопасны-если немного неаккуратно,то можно оставить в производственном коде.</target>
        </trans-unit>
        <trans-unit id="eab16f7244993d7b0b2df071763a4f5fb807aa02" translate="yes" xml:space="preserve">
          <source>Not very popular yet. Needs Unicode Database or equivalent to implement encode() (because it includes JIS X 0208/0212, KSC5601, and GB2312 simultaneously, whose code points in Unicode overlap. So you need to lookup the database to determine to what character set a given Unicode character should belong).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb046c0c657ec319718519db98f1b45069923b" translate="yes" xml:space="preserve">
          <source>Not very popular. Needs CNS 11643-1 and -2 which are not available in this module. CNS 11643 is supported (via euc-tw) in Encode::HanExtra. Audrey Tang may add support for this encoding in her module in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9789ac6a8ac0f9e48e0dab47af13503fe088d2fd" translate="yes" xml:space="preserve">
          <source>Not yet implemented things (but with correct description) are marked with '!', things that need to be answered are marked with '?'.</source>
          <target state="translated">Еще не реализованные вещи (но с правильным описанием)помечены знаком '!',вещи,на которые необходимо ответить,помечены знаком '?'.</target>
        </trans-unit>
        <trans-unit id="b412fb5dbbfd0d61738d57648437ed916775cf7f" translate="yes" xml:space="preserve">
          <source>Not yet implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a291a507a7fbe91670ac808a7268af277204d4" translate="yes" xml:space="preserve">
          <source>Not-so-symbolic references</source>
          <target state="translated">Несимволические ссылки</target>
        </trans-unit>
        <trans-unit id="8c5f0dacad99093710a8cf34c11579156a106382" translate="yes" xml:space="preserve">
          <source>Notable forms: {az-Arab} Azerbaijani in Arabic script; {az-Cyrl} Azerbaijani in Cyrillic script; {az-Latn} Azerbaijani in Latin script.</source>
          <target state="translated">Заметные бланки:{az-Arab}азербайджанский язык арабской графикой;{az-Cyrl}азербайджанский язык кириллицей;{az-Latn}Азербайджанский язык с латинской графикой.</target>
        </trans-unit>
        <trans-unit id="a21e204d71bcc963ab9acff0b78bac05301d8085" translate="yes" xml:space="preserve">
          <source>Notable forms: {cel-gaulish} Gaulish (Historical)</source>
          <target state="translated">Заметные бланки:{цел-галиш}галльский (исторический)</target>
        </trans-unit>
        <trans-unit id="81bb796e9401d7e29001c83b4296a2b3487ce033" translate="yes" xml:space="preserve">
          <source>Notable forms: {de-at} Austrian German; {de-be} Belgian German; {de-ch} Swiss German; {de-de} Germany German; {de-li} Liechtenstein German; {de-lu} Luxembourg German.</source>
          <target state="translated">Заметные бланки:{de-at}австрийский немец;{de-be}бельгийский немец;{de-ch}швейцарский немецкий;{де-де}немецкий;{де-ли}Лихтенштейн Немец;{де-лю}Люксембург Немец.</target>
        </trans-unit>
        <trans-unit id="e6b6ae9f7027c22a91fb186261e25769dc159ea0" translate="yes" xml:space="preserve">
          <source>Notable forms: {en-au} Australian English; {en-bz} Belize English; {en-ca} Canadian English; {en-gb} UK English; {en-ie} Irish English; {en-jm} Jamaican English; {en-nz} New Zealand English; {en-ph} Philippine English; {en-tt} Trinidad English; {en-us} US English; {en-za} South African English; {en-zw} Zimbabwe English.</source>
          <target state="translated">Заметные бланки:австралийский английский;{en-au}английский;{en-bz}Белиз английский;{en-ca}канадский английский;{en-gb}английский язык;{en-ie}Ирландский английский;{en-jm}ямайский английский;{en-nz}новозеландский английский;{en-ph}филиппинский английский;{en-tt}Тринидад Инглиш;{en-us}американский английский;{en-za}южноафриканский английский;{en-zw}Зимбабве Английский.</target>
        </trans-unit>
        <trans-unit id="2fdbbad9de5ba367ca84465b4854964747407c75" translate="yes" xml:space="preserve">
          <source>Notable forms: {es-ar} Argentine Spanish; {es-bo} Bolivian Spanish; {es-cl} Chilean Spanish; {es-co} Colombian Spanish; {es-do} Dominican Spanish; {es-ec} Ecuadorian Spanish; {es-es} Spain Spanish; {es-gt} Guatemalan Spanish; {es-hn} Honduran Spanish; {es-mx} Mexican Spanish; {es-pa} Panamanian Spanish; {es-pe} Peruvian Spanish; {es-pr} Puerto Rican Spanish; {es-py} Paraguay Spanish; {es-sv} Salvadoran Spanish; {es-us} US Spanish; {es-uy} Uruguayan Spanish; {es-ve} Venezuelan Spanish.</source>
          <target state="translated">Заметные бланки:{ес-ар}Аргентинский испанский;{es-bo}боливийский испанский;{ес-кл}чилийский испанский;{es-co}колумбийский испанский;{es-do}доминиканский испанский;эквадорский испанский;испанский язык.Испания Испанский;{es-gt}гватемальский испанский;{es-hn}гондурасский испанский;{es-mx}Мексиканский испанский;панамский испанский;панамский испанский.перуанский испанский;{es-pr}пуэрториканский испанский;{es-py}Парагвай Испанский;{es-sv}Сальвадорский Испанский;{es-us}Американский испанский;{es-uy}уругвайский испанский;{es-ve}Венесуэльский испанский.</target>
        </trans-unit>
        <trans-unit id="4e12474051e941f83342ef3b43136d735d5afa0d" translate="yes" xml:space="preserve">
          <source>Notable forms: {fr-fr} France French; {fr-be} Belgian French; {fr-ca} Canadian French; {fr-ch} Swiss French; {fr-lu} Luxembourg French; {fr-mc} Monaco French.</source>
          <target state="translated">Заметные бланки:{фр-фр}Французский;{франко-бе}бельгийский французский;{fr-ca}канадский французский;{fr-ch}Швейцарский французский;{fr-lu}Люксембургский французский;{fr-mc}Монако французский.</target>
        </trans-unit>
        <trans-unit id="1e7e0fa3b703bb74658f81aeaba2a665c1f48d5b" translate="yes" xml:space="preserve">
          <source>Notable forms: {it-it} Italy Italian; {it-ch} Swiss Italian.</source>
          <target state="translated">Заметные бланки:{ит-ит}Итальянский;{ит-ч}Швейцарский итальянец.</target>
        </trans-unit>
        <trans-unit id="1c5cef64e650e567672b7408d2454fe4584f664d" translate="yes" xml:space="preserve">
          <source>Notable forms: {sr-Cyrl} : Serbian in Cyrillic script; {sr-Latn} : Serbian in Latin script.</source>
          <target state="translated">Заметные бланки:{sr-Cyrl}:Сербский на кириллице;{sr-Latn}:Сербский на латинице.</target>
        </trans-unit>
        <trans-unit id="b08476354345271b609310a79c55d75e3d5fa7ed" translate="yes" xml:space="preserve">
          <source>Notable forms: {sv-se} Sweden Swedish; {sv-fi} Finland Swedish.</source>
          <target state="translated">Заметные бланки:{sv-se}Шведский;{sv-fi}Финляндский шведский.</target>
        </trans-unit>
        <trans-unit id="e612fd18c10ae296220917b18468a0bab3558ba5" translate="yes" xml:space="preserve">
          <source>Notable forms: {uz-Cyrl} Uzbek in Cyrillic script; {uz-Latn} Uzbek in Latin script.</source>
          <target state="translated">Заметные бланки:{uz-Cyrl}узбекский по кириллице;{uz-Latn}Узбекский язык с латинской графикой.</target>
        </trans-unit>
        <trans-unit id="ccdcbff00a8c92eb11dc1da19032f524f994ea4d" translate="yes" xml:space="preserve">
          <source>Notable forms: {yi-latn} Yiddish in Latin script</source>
          <target state="translated">Заметные бланки:{yi-latn}идиш латинским шрифтом</target>
        </trans-unit>
        <trans-unit id="ce063fbcb3861605804d4088b9e6f420c033d1af" translate="yes" xml:space="preserve">
          <source>Notably, when I say &quot;the parser should do Y&quot;, the parser may fail to do Y, if the calling application explicitly requests that the parser</source>
          <target state="translated">Примечательно,что когда я говорю &quot;парсер должен сделать Y&quot;,парсер может не сделать Y,если вызывающее приложение явно просит,чтобы парсер</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="dc28f0d8c7871400478b567d7beb2004cf42a815" translate="yes" xml:space="preserve">
          <source>Note - The UID &amp;amp; GID are stored as 16-bit integers in the &quot;Ux&quot; field. Use &lt;code&gt;exUnixN&lt;/code&gt; if your UID or GID are 32-bit.</source>
          <target state="translated">Примечание. UID и GID хранятся как 16-битные целые числа в поле &amp;laquo;Ux&amp;raquo;. Используйте &lt;code&gt;exUnixN&lt;/code&gt; , если ваш UID или GID 32-битный.</target>
        </trans-unit>
        <trans-unit id="aacd35ea4ac0d783d64f4c4f2704a7fd93edbfd6" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;xs&lt;/code&gt; is the file-extension. More possibilities may arise in the future. Note that object names are specified without their XS extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f25c29f636a35a4c90bd02e8d836521729b1940" translate="yes" xml:space="preserve">
          <source>Note For File::Spec::Win32 Maintainers</source>
          <target state="translated">Замечание для файла::Spec::Win32 Maintainers</target>
        </trans-unit>
        <trans-unit id="d61819593fe5205b29d4ef1cfda4d5a9bf3fa4b5" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; will refuse to overwrite part of a substitution that has already been replaced; so for example this will stop after the first iteration, rather than iterating its way backwards through the string:</source>
          <target state="translated">Также обратите внимание, что &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; откажется перезаписывать часть подстановки, которая уже была заменена; так, например, это остановится после первой итерации, вместо того, чтобы повторять свой путь назад по строке:</target>
        </trans-unit>
        <trans-unit id="d431b689d39a84be2048506411832e8ae02c23d4" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;s///&lt;/code&gt; will refuse to overwrite part of a substitution that has already been replaced; so for example this will stop after the first iteration, rather than iterating its way backwards through the string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e8c76e1346833c7579d9c295e9f07ddedb8870" translate="yes" xml:space="preserve">
          <source>Note also that a UTF-8 &quot;invariant&quot; character (i.e. ASCII on non-EBCDIC machines) is a valid UTF-8 character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51303d3d7fafd34353273486b77b3443cc1441d4" translate="yes" xml:space="preserve">
          <source>Note also that executable files on OS/2 can have an arbitrary extension, but</source>
          <target state="translated">Обратите внимание,что исполняемые файлы на OS/2 могут иметь произвольное расширение,но</target>
        </trans-unit>
        <trans-unit id="86274076d108976d6c7a6912c21fbe38fd3afb11" translate="yes" xml:space="preserve">
          <source>Note also that multiple IEEE &lt;code&gt;NaN&lt;/code&gt; values are treated as duplicates of each other, regardless of any differences in their payloads, and despite the fact that &lt;code&gt;0+'NaN' == 0+'NaN'&lt;/code&gt; yields false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c1277f883a5fd92bb92e168ada01f4ed8abbf3" translate="yes" xml:space="preserve">
          <source>Note also that representing piped-command arguments in list form like this doesn't work on every platform. It will work on any Unix-based OS that provides a real &lt;code&gt;fork&lt;/code&gt; function (e.g. macOS or Linux), as well as on Windows when running Perl 5.22 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef8e44dd4ec6271a5e9810987c5e736596eec8b" translate="yes" xml:space="preserve">
          <source>Note also that some interactions with the platform's operating system never use Unicode rules.</source>
          <target state="translated">Обратите внимание,что при некоторых взаимодействиях с операционной системой платформы никогда не используются правила Unicode.</target>
        </trans-unit>
        <trans-unit id="df6453c563c1a21c7c65cf6fa2f8db2ed6c94f59" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;a href=&quot;#flock-FILEHANDLE%2COPERATION&quot;&gt;&lt;code&gt;flock&lt;/code&gt;&lt;/a&gt; cannot lock things over the network; you would need to use the more system-specific &lt;a href=&quot;#fcntl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; for that. If you like you can force Perl to ignore your system's &lt;a href=&quot;http://man.he.net/man2/flock&quot;&gt;flock(2)&lt;/a&gt; function, and so provide its own &lt;a href=&quot;http://man.he.net/man2/fcntl&quot;&gt;fcntl(2)&lt;/a&gt;-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4edd6fd44da89a951836e2357c62c606b0748a9" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; cannot lock things over the network; you would need to use the more system-specific &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; for that. If you like you can force Perl to ignore your system's flock(2) function, and so provide its own fcntl(2)-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="translated">Заметьте также, что некоторые версии &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; не могут блокировать вещи по сети; для этого вам нужно будет использовать более специфичный для системы &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Если хотите, можете заставить Perl игнорировать системную функцию flock (2) и, таким образом, обеспечить собственную эмуляцию на основе fcntl (2), передав параметр &lt;code&gt;-Ud_flock&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="9506516245f2a27d70f794e303e94668077d4724" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; cannot lock things over the network; you would need to use the more system-specific &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; for that. If you like you can force Perl to ignore your system's flock(2) function, and so provide its own fcntl(2)-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="translated">Заметьте также, что некоторые версии &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; не могут блокировать вещи по сети; для этого вам нужно будет использовать более специфичный для системы &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Если хотите, можете заставить Perl игнорировать системную функцию flock (2) и, таким образом, обеспечить собственную эмуляцию на основе fcntl (2), передав параметр &lt;code&gt;-Ud_flock&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="31429c82fc67ac62603cde51ce1f5c6cd992a1a1" translate="yes" xml:space="preserve">
          <source>Note also that the</source>
          <target state="translated">Обратите также внимание,что</target>
        </trans-unit>
        <trans-unit id="243c26e6057ac6e495579d70e250c605534bf93f" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;code&gt;&quot;p&quot;&lt;/code&gt; modifier is special in that its presence anywhere in a pattern has a global effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c84d355b563eeba64d66feb2a9301f9ac3044ba" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;code&gt;p&lt;/code&gt; modifier is special in that its presence anywhere in a pattern has a global effect.</source>
          <target state="translated">Также обратите внимание, что модификатор &lt;code&gt;p&lt;/code&gt; особенный тем, что его присутствие в любом месте шаблона имеет глобальный эффект.</target>
        </trans-unit>
        <trans-unit id="ee56fcf5b207af918e626e9bd28811c451155208" translate="yes" xml:space="preserve">
          <source>Note also that the C++ mode build currently fails with MinGW 3.4.5 and 4.7.2 or later, and with MinGW64 64-bit 6.3.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f63e7551b1c1b479c5f1d972a1f2245b31f7f2" translate="yes" xml:space="preserve">
          <source>Note also that the command &lt;code&gt;perldoc perllocal&lt;/code&gt; gives you a (possibly incomplete) list of the modules that have been further installed on your system. (The perllocal.pod file is updated by the standard MakeMaker install process.)</source>
          <target state="translated">Также обратите внимание, что команда &lt;code&gt;perldoc perllocal&lt;/code&gt; дает вам (возможно, неполный) список модулей, которые были дополнительно установлены в вашей системе. (Файл perllocal.pod обновляется стандартным процессом установки MakeMaker.)</target>
        </trans-unit>
        <trans-unit id="974ae7d8c658ab7fcbda1dde2814ab3d89d6f088" translate="yes" xml:space="preserve">
          <source>Note also that the copy constructor (key &lt;code&gt;'='&lt;/code&gt; ) may be autogenerated, but only for objects based on scalars. See &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;.</source>
          <target state="translated">Также обратите внимание, что конструктор копирования (ключ &lt;code&gt;'='&lt;/code&gt; ) может быть создан автоматически, но только для объектов, основанных на скалярах. См. &lt;a href=&quot;#Copy-Constructor&quot;&gt;Конструктор копирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92361dff5e2f10f8592eb14b0f1c0a57e0423073" translate="yes" xml:space="preserve">
          <source>Note also that the copy constructor (key &lt;code&gt;'='&lt;/code&gt;) may be autogenerated, but only for objects based on scalars. See &lt;a href=&quot;#Copy-Constructor&quot;&gt;&quot;Copy Constructor&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d1b08cb96b172739c41421853e346d699284ca" translate="yes" xml:space="preserve">
          <source>Note also that the differences between PM and VIO executables are only in the</source>
          <target state="translated">Отметим также,что различия между исполняемыми файлами PM и VIO заключаются только в следующем</target>
        </trans-unit>
        <trans-unit id="8a0b196123450466a3bd0e991b94e36c4a2d4091" translate="yes" xml:space="preserve">
          <source>Note also that the interpolation code needs to make a decision on where the interpolated scalar ends. For instance, whether &lt;code&gt;&quot;a $x -&amp;gt; {c}&quot;&lt;/code&gt; really means:</source>
          <target state="translated">Также обратите внимание, что код интерполяции должен принять решение о том, где заканчивается интерполированный скаляр. Например, действительно ли &lt;code&gt;&quot;a $x -&amp;gt; {c}&quot;&lt;/code&gt; означает:</target>
        </trans-unit>
        <trans-unit id="461724a83047bdefd7b18b66a849277d50c6ddf4" translate="yes" xml:space="preserve">
          <source>Note also that the perl command-line utilities (e.g. perldoc) and any that are added by modules that you install will be under /usr/perl5/bin, so that directory should be added to your PATH.</source>
          <target state="translated">Обратите внимание,что утилиты командной строки perl (например,perldoc)и все,что добавляется модулями,которые вы устанавливаете,находятся в каталоге /usr/perl5/bin,так что этот каталог должен быть добавлен в ваш PATH.</target>
        </trans-unit>
        <trans-unit id="b1c8981415e4845f7fa3c8120b6871be02377a53" translate="yes" xml:space="preserve">
          <source>Note also that the variable is not visible until the following</source>
          <target state="translated">Обратите также внимание,что переменная не видна до тех пор,пока не появится следующее</target>
        </trans-unit>
        <trans-unit id="da9eb4f7f742f4aab3f9b8b74e916fc9f5d30c44" translate="yes" xml:space="preserve">
          <source>Note also that the whole range idea is rather unportable between character sets, except for four situations that Perl handles specially. Any subset of the ranges &lt;code&gt;[A-Z]&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; , and &lt;code&gt;[0-9]&lt;/code&gt; are guaranteed to match the expected subset of ASCII characters, no matter what character set the platform is running. The fourth portable way to specify ranges is to use the &lt;code&gt;\N{...}&lt;/code&gt; syntax to specify either end point of the range. For example, &lt;code&gt;[\N{U+04}-\N{U+07}]&lt;/code&gt; means to match the Unicode code points &lt;code&gt;\N{U+04}&lt;/code&gt; , &lt;code&gt;\N{U+05}&lt;/code&gt; , &lt;code&gt;\N{U+06}&lt;/code&gt; , and &lt;code&gt;\N{U+07}&lt;/code&gt; , whatever their native values may be on the platform. Under &lt;a href=&quot;re#'strict'-mode&quot;&gt;use re 'strict'&lt;/a&gt; or within a &lt;a href=&quot;#(%3f%5b-%5d)&quot;&gt;(?[ ])&lt;/a&gt;, a warning is raised, if enabled, and the other end point of a range which has a &lt;code&gt;\N{...}&lt;/code&gt; endpoint is not portably specified. For example,</source>
          <target state="translated">Также обратите внимание, что идея всего диапазона между наборами символов довольно непереносима, за исключением четырех ситуаций, которые Perl обрабатывает специально. Любое подмножество диапазонов &lt;code&gt;[A-Z]&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; и &lt;code&gt;[0-9]&lt;/code&gt; гарантированно соответствует ожидаемому подмножеству символов ASCII, независимо от того, какой набор символов работает на платформе. Четвертый переносимый способ указать диапазоны - использовать синтаксис &lt;code&gt;\N{...}&lt;/code&gt; для указания любой конечной точки диапазона. Например, &lt;code&gt;[\N{U+04}-\N{U+07}]&lt;/code&gt; означает соответствие кодовым точкам Unicode &lt;code&gt;\N{U+04}&lt;/code&gt; , &lt;code&gt;\N{U+05}&lt;/code&gt; , &lt;code&gt;\N{U+06}&lt;/code&gt; , и &lt;code&gt;\N{U+07}&lt;/code&gt; , независимо от их собственных значений на платформе. Под&lt;a href=&quot;re#'strict'-mode&quot;&gt;используйте re 'strict'&lt;/a&gt; или внутри &lt;a href=&quot;#(%3f%5b-%5d)&quot;&gt;(? [])&lt;/a&gt; , выдается предупреждение, если включено, а другая конечная точка диапазона, имеющего конечную точку &lt;code&gt;\N{...}&lt;/code&gt; не указывается переносимо. Например,</target>
        </trans-unit>
        <trans-unit id="b3c1ad83c7446d82ad768f4c14cbc6cf2bb28a0e" translate="yes" xml:space="preserve">
          <source>Note also that the whole range idea is rather unportable between character sets--and even within character sets they may cause results you probably didn't expect. A sound principle is to use only ranges that begin from and end at either alphabets of equal case (a-e, A-E), or digits (0-4). Anything else is unsafe. If in doubt, spell out the character sets in full.</source>
          <target state="translated">Заметьте также,что идея всего диапазона довольно непорядочна между наборами символов-и даже внутри наборов символов они могут привести к результатам,которых вы,вероятно,не ожидали.Звуковой принцип заключается в использовании только диапазонов,которые начинаются и заканчиваются либо на алфавитах одинакового регистра (a-e,A-E),либо на цифрах (0-4).Все остальное небезопасно.Если сомневаетесь,произнесите наборы символов полностью.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
