<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="fe9382125ff2c139dab5a2974252e8c96e13c1f7" translate="yes" xml:space="preserve">
          <source>This does not check if &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt; $brooklyn{tree}&lt;/code&gt; is true, it checks if it returns 1. Very different. Similar caveats exist for false and 0. In these cases, use &lt;code&gt;ok()&lt;/code&gt; .</source>
          <target state="translated">Это не проверяет, &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt; $brooklyn{tree}&lt;/code&gt; ли &lt;a href=&quot;../functions/exists&quot;&gt;существует&lt;/a&gt; $ brooklyn {tree} , оно проверяет, возвращает ли оно 1. Очень другое. Аналогичные предостережения существуют для false и 0. В этих случаях используйте &lt;code&gt;ok()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98a4bb476f64546166599da65496591b48105011" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2 or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;vms#file_name_is_absolute&quot;&gt;file_name_is_absolute in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="translated">Это не обращается к локальной файловой системе в Unix, Win32, OS / 2 или Mac OS (Classic). Он обращается к рабочей среде для VMS (см. &lt;a href=&quot;vms#file_name_is_absolute&quot;&gt;File_name_is_absolute в File :: Spec :: VMS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5567db63aec81d4f2bb7d5785e7a6d2074129096" translate="yes" xml:space="preserve">
          <source>This does not consult the local filesystem on Unix, Win32, OS/2, or Mac OS (Classic). It does consult the working environment for VMS (see &lt;a href=&quot;spec/vms#file_name_is_absolute&quot;&gt;file_name_is_absolute in File::Spec::VMS&lt;/a&gt;).</source>
          <target state="translated">Это не обращается к локальной файловой системе в Unix, Win32, OS / 2 или Mac OS (Classic). Он обращается к рабочей среде для VMS (см. &lt;a href=&quot;spec/vms#file_name_is_absolute&quot;&gt;File_name_is_absolute в File :: Spec :: VMS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0a35bcc864cbc531874ff7b69a1ed16eb2d6e952" translate="yes" xml:space="preserve">
          <source>This does not need an interpreter context, so the definition has no &lt;code&gt;pTHX&lt;/code&gt; , and it follows that callers don't use &lt;code&gt;aTHX&lt;/code&gt; . (See &lt;a href=&quot;#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Background and PERL_IMPLICIT_CONTEXT&lt;/a&gt;.)</source>
          <target state="translated">Для этого не нужен контекст интерпретатора, поэтому определение не имеет &lt;code&gt;pTHX&lt;/code&gt; , и, следовательно, вызывающие абоненты не используют &lt;code&gt;aTHX&lt;/code&gt; . (См. &lt;a href=&quot;#Background-and-PERL_IMPLICIT_CONTEXT&quot;&gt;Фон и PERL_IMPLICIT_CONTEXT&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="7d5400494835955231d73bab6efd7d27c959f429" translate="yes" xml:space="preserve">
          <source>This does not work with object methods, however; all object methods have to be in the symbol table of some package to be found. See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for something of a work-around to this.</source>
          <target state="translated">Однако это не работает с объектными методами; все методы объекта должны быть в таблице символов какого-либо пакета. См. &amp;laquo; &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Шаблоны функций&amp;raquo; в perlref,&lt;/a&gt; чтобы узнать, как это исправить .</target>
        </trans-unit>
        <trans-unit id="0d2225ec395dc726d6f789db247181b8752831a9" translate="yes" xml:space="preserve">
          <source>This does require you to read the entire archive in to memory first, since otherwise we wouldn't know what data to fill the copy with. (This means that you cannot use the class methods, including &lt;code&gt;iter&lt;/code&gt; on archives that have incompatible filetypes and still expect things to work).</source>
          <target state="translated">Это действительно требует, чтобы вы сначала прочитали весь архив в память, поскольку в противном случае мы не знали бы, какими данными заполнять копию. (Это означает, что вы не можете использовать методы класса, включая &lt;code&gt;iter&lt;/code&gt; , в архивах, которые имеют несовместимые типы файлов и все же ожидают, что что-то будет работать).</target>
        </trans-unit>
        <trans-unit id="d695e6a31e5a4eec6a56e77d637d17eb575265f8" translate="yes" xml:space="preserve">
          <source>This does the same:</source>
          <target state="translated">Это делает то же самое:</target>
        </trans-unit>
        <trans-unit id="dc02dd18bd8bcc4ec6d08efce5d8f98b8592ad09" translate="yes" xml:space="preserve">
          <source>This doesn't copy the underlying array:</source>
          <target state="translated">Это не копирует основной массив:</target>
        </trans-unit>
        <trans-unit id="6a45cffcf59adcdd497d8553e6a4ac8aa27d7fd9" translate="yes" xml:space="preserve">
          <source>This doesn't do anything to your input, or to your output. It only influences the way your sources are read. You can use Unicode in string literals, in identifiers (but they still have to be &quot;word characters&quot; according to &lt;code&gt;\w&lt;/code&gt; ), and even in custom delimiters.</source>
          <target state="translated">Это ничего не делает ни с вашим вводом, ни с вашим выводом. Это влияет только на то, как читаются ваши источники. Вы можете использовать Unicode в строковых литералах, в идентификаторах (но они все равно должны быть &amp;laquo;словесными символами&amp;raquo; в соответствии с &lt;code&gt;\w&lt;/code&gt; ) и даже в настраиваемых разделителях.</target>
        </trans-unit>
        <trans-unit id="c08d4d18717ad728adb161ebb6ace72d574c3c92" translate="yes" xml:space="preserve">
          <source>This doesn't mean that a &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variable declared in a statically enclosing lexical scope would be invisible. Only dynamic scopes are cut off. For example, the &lt;code&gt;bumpx()&lt;/code&gt; function below has access to the lexical $x variable because both the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; occurred at the same scope, presumably file scope.</source>
          <target state="translated">Это не означает, что переменная &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , объявленная в статически включающей лексической области видимости, будет невидимой. Отрезаются только динамические области видимости. Например, &lt;code&gt;bumpx()&lt;/code&gt; ниже имеет доступ к лексической переменной $ x, потому что и &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; находятся в одной области видимости, предположительно области файла.</target>
        </trans-unit>
        <trans-unit id="e40a26e5ea83812803ea5b81ef047b1db82eff02" translate="yes" xml:space="preserve">
          <source>This doesn't work if you explicitly specify a loop variable, as in &lt;code&gt;for $item (@array)&lt;/code&gt; . You have to use the default variable &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Это не сработает, если вы явно укажете переменную цикла, как в случае &lt;code&gt;for $item (@array)&lt;/code&gt; . Вы должны использовать переменную по умолчанию &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2c583421317d67ae6f6464366487994f4149ea1" translate="yes" xml:space="preserve">
          <source>This doesn't work so cleanly for varargs functions, though, as macros imply that the number of arguments is known in advance. Instead we either need to spell them out fully, passing &lt;code&gt;aTHX_&lt;/code&gt; as the first argument (the Perl core tends to do this with functions like Perl_warner), or use a context-free version.</source>
          <target state="translated">Однако для функций varargs это не работает так четко, поскольку макросы подразумевают, что количество аргументов известно заранее. Вместо этого нам нужно либо &lt;code&gt;aTHX_&lt;/code&gt; их полностью, передав aTHX_ в качестве первого аргумента (ядро Perl обычно делает это с помощью таких функций, как Perl_warner), либо использовать версию без контекста.</target>
        </trans-unit>
        <trans-unit id="dd35b5e520e91c0129daf21db3448c07f88b99cf" translate="yes" xml:space="preserve">
          <source>This effect can be demonstrated by setting up a test script with both forms, including a &lt;code&gt;debug()&lt;/code&gt; subroutine to emulate typical &lt;code&gt;logger()&lt;/code&gt; functionality.</source>
          <target state="translated">Этот эффект можно продемонстрировать, настроив тестовый сценарий с обеими формами, включая подпрограмму &lt;code&gt;debug()&lt;/code&gt; для имитации типичных функций &lt;code&gt;logger()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe2310a8ff7d61c27678f186cd1f8d32e53b8ee" translate="yes" xml:space="preserve">
          <source>This effectively means that your source code behaves as if it were written in UTF-8 with &lt;code&gt;'use utf8&lt;/code&gt; ' in effect. So even if your editor only supports Shift_JIS, for example, you can still try examples in Chapter 15 of &lt;code&gt;Programming Perl, 3rd Ed.&lt;/code&gt;.</source>
          <target state="translated">Фактически это означает, что ваш исходный код ведет себя так, как если бы он был написан в UTF-8 с &lt;code&gt;'use utf8&lt;/code&gt; &amp;raquo;. Так что даже если ваш редактор поддерживает, например, только Shift_JIS, вы все равно можете попробовать примеры в главе 15 &lt;code&gt;Programming Perl, 3rd Ed.&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3a80c354b71b0daaada6c4b42d328f1e3ab3798" translate="yes" xml:space="preserve">
          <source>This enables a trace mode and is primarily for debugging bigint or Math::BigInt.</source>
          <target state="translated">Это включает режим трассировки и предназначено в первую очередь для отладки bigint или Math::BigInt.</target>
        </trans-unit>
        <trans-unit id="9c02cc31d70507771fd57c515a75adc482efe06a" translate="yes" xml:space="preserve">
          <source>This enables a trace mode and is primarily for debugging bignum or Math::BigInt/Math::BigFloat.</source>
          <target state="translated">Это включает режим трассировки и предназначено в первую очередь для отладки bignum или Math::BigInt/Math::BigFloat.</target>
        </trans-unit>
        <trans-unit id="cec63c166c07d8ad2b6a0564923160e4e6afd3a9" translate="yes" xml:space="preserve">
          <source>This enables aliasing via assignment to references:</source>
          <target state="translated">Это позволяет накладывать псевдонимы через назначение ссылок:</target>
        </trans-unit>
        <trans-unit id="f0c59e41b4a3df893d1d884cf9253595b11ba6fc" translate="yes" xml:space="preserve">
          <source>This enables debugging output when calling commandline utilities to fetch files. This also enables &lt;code&gt;Carp::longmess&lt;/code&gt; errors, instead of the regular &lt;code&gt;carp&lt;/code&gt; errors.</source>
          <target state="translated">Это позволяет выводить данные отладки при вызове утилит командной строки для выборки файлов. Это также включает ошибки &lt;code&gt;Carp::longmess&lt;/code&gt; вместо обычных ошибок &lt;code&gt;carp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79613693422bd25bf48f5f8810aa0da8bd572cf9" translate="yes" xml:space="preserve">
          <source>This enables declaration of subroutines via &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; sub foo&lt;/code&gt; , &lt;code&gt;state sub foo&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; sub foo&lt;/code&gt; syntax. See &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Lexical Subroutines in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Это позволяет объявлять подпрограммы через &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; sub foo&lt;/code&gt; , &lt;code&gt;state sub foo&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; sub foo&lt;/code&gt; синтаксис sub foo . См. Подробности в разделе &amp;laquo; &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Лексические подпрограммы&amp;raquo; в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80e1dcd9c198904d910331965aa69cd1ca8bccf4" translate="yes" xml:space="preserve">
          <source>This enables the programmer to do operations that combine functionalities that are available in the shell.</source>
          <target state="translated">Это позволяет программисту выполнять операции,сочетающие в себе функции,доступные в оболочке.</target>
        </trans-unit>
        <trans-unit id="e90120b49b0763003fb5ddee58d3021476d96c8e" translate="yes" xml:space="preserve">
          <source>This enables unpacking of subroutine arguments into lexical variables by syntax such as</source>
          <target state="translated">Это позволяет распаковывать подпрограммные аргументы в лексические переменные по синтаксису,такие как</target>
        </trans-unit>
        <trans-unit id="b1b55e253e92ad7341b5b1784881c341c542cf5a" translate="yes" xml:space="preserve">
          <source>This entry can be used to store a C structure (the number of bytes to be copied is calculated using the C &lt;code&gt;sizeof&lt;/code&gt; function) and can be used as an alternative to T_PTRREF without having to worry about a memory leak (since Perl will clean up the SV).</source>
          <target state="translated">Эта запись может использоваться для хранения структуры C (количество копируемых байтов вычисляется с помощью функции C &lt;code&gt;sizeof&lt;/code&gt; ) и может использоваться как альтернатива T_PTRREF, не беспокоясь об утечке памяти (поскольку Perl очистит SV).</target>
        </trans-unit>
        <trans-unit id="2f3300c27110c85898913011cf397618813e91ac" translate="yes" xml:space="preserve">
          <source>This environment variable allows the user to specify custom color aliases that will be understood by color(), colored(), and colorvalid(). None of the other functions will be affected, and no new color constants will be created. The custom colors are aliases for existing color names; no new escape sequences can be introduced. Only alphanumerics, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt; , and &lt;code&gt;-&lt;/code&gt; are allowed in alias names.</source>
          <target state="translated">Эта переменная среды позволяет пользователю указывать настраиваемые псевдонимы цветов, которые будут распознаваться функциями color (), color () и colorvalid (). Никакие другие функции не будут затронуты, и новые цветовые константы не будут созданы. Пользовательские цвета являются псевдонимами для существующих названий цветов; новые escape-последовательности вводить нельзя. Только буквенно - цифровые, &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;_&lt;/code&gt; и &lt;code&gt;-&lt;/code&gt; разрешены в псевдонимах.</target>
        </trans-unit>
        <trans-unit id="eeb4dcf1cb6c13fe396a4c4857e58d83a3e881a1" translate="yes" xml:space="preserve">
          <source>This environment variable is read and applied when the Term::ANSIColor module is loaded and is then subsequently ignored. Changes to ANSI_COLORS_ALIASES after the module is loaded will have no effect. See coloralias() for an equivalent facility that can be used at runtime.</source>
          <target state="translated">Эта переменная окружения считывается и применяется при загрузке модуля Term::ANSIColor,а затем игнорируется.Изменения переменной ANSI_COLORS_ALIASES после загрузки модуля не будут иметь никакого эффекта.См.coloralias()для эквивалентной подсистемы,которая может быть использована во время выполнения.</target>
        </trans-unit>
        <trans-unit id="08e7401d917dc7c04b41058352f2e564e79feab2" translate="yes" xml:space="preserve">
          <source>This environment variable, available starting in Perl v5.20, if set (to any value), tells Perl to not use the rest of the environment variables to initialize with. Instead, Perl uses whatever the current locale settings are. This is particularly useful in embedded environments, see &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;Using embedded Perl with POSIX locales in perlembed&lt;/a&gt;.</source>
          <target state="translated">Эта переменная среды, доступная начиная с Perl v5.20, если установлена ​​(на любое значение), указывает Perl не использовать остальные переменные среды для инициализации. Вместо этого Perl использует любые текущие настройки локали. Это особенно полезно во встроенных средах, см. &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;Использование встроенного Perl с локали POSIX в perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01f9c0ecaa03744be9ea320c0c4f588e6b9faad8" translate="yes" xml:space="preserve">
          <source>This evaluates STRING as perl code inside the compartment.</source>
          <target state="translated">При этом оценивается STRING согласно коду внутри отсека.</target>
        </trans-unit>
        <trans-unit id="85da3ed8e7eeed1d7664ca9b45804ed926dd64a7" translate="yes" xml:space="preserve">
          <source>This evaluates the contents of file FILENAME inside the compartment. See above documentation on the &lt;b&gt;reval&lt;/b&gt; method for further details.</source>
          <target state="translated">Это оценивает содержимое файла FILENAME внутри отсека. См. Дополнительную информацию в документации по методу &lt;b&gt;ревальвации&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c4d1039eeddc372ecb07a9ed65ed3a51b6d6ae64" translate="yes" xml:space="preserve">
          <source>This example added quite a few new concepts. We'll take them one at a time.</source>
          <target state="translated">В этом примере было добавлено довольно много новых концепций.Мы возьмем их по одной.</target>
        </trans-unit>
        <trans-unit id="b69f2ecf80918f850deb9506044c7c7d1e270ee4" translate="yes" xml:space="preserve">
          <source>This example does not include any retries and may consequently fail to contact a reachable host. The most prominent reason for this is congestion of the queues on the sending host if the number of hosts to contact is sufficiently large.</source>
          <target state="translated">Этот пример не включает повторных попыток и,следовательно,может не связаться с доступным хостом.Наиболее заметной причиной этого является перегруженность очередей на хосте-отправителе,если количество хостов,с которыми можно связаться,достаточно велико.</target>
        </trans-unit>
        <trans-unit id="90a572c629dcfb44919f712f7d6b779f25e5dfe2" translate="yes" xml:space="preserve">
          <source>This example is aborted at compile time as we use the attribute &quot;Test&quot; which isn't allowed. &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; returns a list that contains a single element ('Test').</source>
          <target state="translated">Этот пример прерывается во время компиляции, так как мы используем недопустимый атрибут &amp;laquo;Test&amp;raquo;. &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; возвращает список, содержащий единственный элемент (&amp;laquo;Тест&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="f90369b8f8beb64315ed6181cebf6923dd367b56" translate="yes" xml:space="preserve">
          <source>This example is fairly trivial; for more complex cases and a deeper explanation, see the links in the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section.</source>
          <target state="translated">Этот пример довольно тривиален; для более сложных случаев и более подробного объяснения см. ссылки в разделе &lt;a href=&quot;#SEE-ALSO&quot;&gt;СМОТРИ ТАКЖЕ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1253f47712d1828f7f774117d0efa3abf09df500" translate="yes" xml:space="preserve">
          <source>This example is fully equivalent with:</source>
          <target state="translated">Этот пример полностью эквивалентен:</target>
        </trans-unit>
        <trans-unit id="4cd1eae4be0b88a312be5ff0a3c94c909b4f359b" translate="yes" xml:space="preserve">
          <source>This example is preferred over the previous one--even for Unix platforms--because now any &lt;code&gt;\015&lt;/code&gt; 's (&lt;code&gt;\cM&lt;/code&gt; 's) are stripped out (and there was much rejoicing).</source>
          <target state="translated">Этот пример предпочтительнее предыдущего - даже для платформ Unix - потому что теперь любые &lt;code&gt;\015&lt;/code&gt; ( &lt;code&gt;\cM&lt;/code&gt; ) удалены (и было много радости).</target>
        </trans-unit>
        <trans-unit id="2155785b4684f8ca5810fa768aca5a675651e726" translate="yes" xml:space="preserve">
          <source>This example prints the mail domain name of the SMTP server known as mailhost:</source>
          <target state="translated">В этом примере печатается почтовое доменное имя SMTP-сервера,известное как mailhost:</target>
        </trans-unit>
        <trans-unit id="5df3c7e69cf9c030621b9397e847c01645ddee17" translate="yes" xml:space="preserve">
          <source>This example requires the following typemap entry. Consult &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for more information about adding new typemaps for an extension.</source>
          <target state="translated">В этом примере требуется следующая запись карты типов. Обратитесь к &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; для получения дополнительной информации о добавлении новых карт типов для расширения.</target>
        </trans-unit>
        <trans-unit id="41a9b74b00161dd5b470ab9ac8171979158c1d90" translate="yes" xml:space="preserve">
          <source>This example runs. At compile time &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; is called. In that subroutine, we check if any attribute is disallowed and we return a list of these &quot;bad attributes&quot;.</source>
          <target state="translated">Этот пример работает. Во время компиляции &lt;code&gt;MODIFY_CODE_ATTRIBUTES&lt;/code&gt; . В этой подпрограмме мы проверяем, запрещены ли какие-либо атрибуты, и возвращаем список этих &amp;laquo;плохих атрибутов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8ff407d302a1d7afb3f758e29e8d54e23989741b" translate="yes" xml:space="preserve">
          <source>This example sends a small message to the postmaster at the SMTP server known as mailhost:</source>
          <target state="translated">Этот пример отправляет небольшое сообщение почтовому администратору на SMTP-сервере,известном как mailhost:</target>
        </trans-unit>
        <trans-unit id="78b434a9f3a15806251887966899fdd84de7d2e2" translate="yes" xml:space="preserve">
          <source>This example separates a text into fields which are quote delimited, curly bracketed, and anything else. The delimited and bracketed parts are also blessed to identify them (the &quot;anything else&quot; is unblessed):</source>
          <target state="translated">В этом примере текст разделен на поля,которые разделены кавычками,заключены в фигурные скобки,и все остальное.Разделенные и заключенные в скобки части также могут быть идентифицированы (&quot;все остальное&quot; не имеет смысла):</target>
        </trans-unit>
        <trans-unit id="9dff0d51281eb7bf5e0a018b6b24fe9e35070941" translate="yes" xml:space="preserve">
          <source>This example shows how to create a database, add key/value pairs to the database, delete keys/value pairs and finally how to enumerate the contents of the database.</source>
          <target state="translated">В этом примере показано,как создать БД,добавить пары ключ/значение в БД,удалить пары ключ/значение и,наконец,как перечислить содержимое БД.</target>
        </trans-unit>
        <trans-unit id="880ede3f528ae25983090ec0e0156cb403c63af8" translate="yes" xml:space="preserve">
          <source>This example shows rewriting weights. &lt;code&gt;rewrite&lt;/code&gt; is allowed to affect code points, weights, and the name.</source>
          <target state="translated">В этом примере показано изменение весов. &lt;code&gt;rewrite&lt;/code&gt; разрешена для изменения кодовых точек, веса и имени.</target>
        </trans-unit>
        <trans-unit id="780bd69540d0ebaeb9c9ed4a226f52e8bf4d6c92" translate="yes" xml:space="preserve">
          <source>This example shows two calls that should have the same effect:</source>
          <target state="translated">В этом примере показаны два вызова,которые должны иметь одинаковый эффект:</target>
        </trans-unit>
        <trans-unit id="84ff60fe8d031f55c9709b2299fa816e68248930" translate="yes" xml:space="preserve">
          <source>This example takes a regular expression from the argument list and prints the lines of input that match it:</source>
          <target state="translated">Этот пример берет регулярное выражение из списка аргументов и распечатывает соответствующие ему строки ввода:</target>
        </trans-unit>
        <trans-unit id="078e5feeaf68f01a2929c0090cee690d8ca945ea" translate="yes" xml:space="preserve">
          <source>This example treats the slightly modified contents of $directory as a hash. The modifications are that the keys</source>
          <target state="translated">В этом примере слегка измененное содержимое директории $ рассматривается как хэш.Изменения заключаются в том,что ключи</target>
        </trans-unit>
        <trans-unit id="98e05dd997bb9813bf387c2523a2ee3778ba728f" translate="yes" xml:space="preserve">
          <source>This example uses a code expression in a conditional to match a definite article, either 'the' in English or 'der|die|das' in German:</source>
          <target state="translated">В данном примере используется условное выражение кода для соответствия определенной статьи,либо 'the' по-английски,либо 'der|die|das' по-немецки:</target>
        </trans-unit>
        <trans-unit id="c87cae12f1868f49317dcbc2ec2e9d5385ba1820" translate="yes" xml:space="preserve">
          <source>This example will be used with the following Perl statements.</source>
          <target state="translated">Этот пример будет использоваться со следующими утверждениями Perl.</target>
        </trans-unit>
        <trans-unit id="f8787b73d75916a7f7029d06b65a57928067677b" translate="yes" xml:space="preserve">
          <source>This example will fail to recognize that an error occurred inside the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; . Here's why: the call_Subtract code got executed while perl was cleaning up temporaries when exiting the outer braced block, and because call_Subtract is implemented with</source>
          <target state="translated">В этом примере не удастся распознать ошибку внутри &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; . Вот почему: код call_Subtract был выполнен, когда perl очищал временные объекты при выходе из внешнего блока в фигурных скобках, и поскольку call_Subtract реализован с помощью</target>
        </trans-unit>
        <trans-unit id="3f78c3b59ae95350e4323c3cb4c7f0dc6fda1338" translate="yes" xml:space="preserve">
          <source>This example works on many platforms that have a shell compatible with Bourne shell:</source>
          <target state="translated">Этот пример работает на многих платформах,которые имеют оболочку,совместимую с оболочкой Борна:</target>
        </trans-unit>
        <trans-unit id="15d5f8da3c8eb09a121cb765eeca738ccef36a74" translate="yes" xml:space="preserve">
          <source>This experimental attribute, introduced in Perl 5.22, only applies to anonymous subroutines. It causes the subroutine to be called as soon as the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; expression is evaluated. The return value is captured and turned into a constant subroutine.</source>
          <target state="translated">Этот экспериментальный атрибут, представленный в Perl 5.22, применим только к анонимным подпрограммам. Это приводит к тому , подпрограмма будет называться как только &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; выражение. Возвращаемое значение фиксируется и превращается в постоянную подпрограмму.</target>
        </trans-unit>
        <trans-unit id="c659fee685d6111f5eef41a4fc47f104c94d024f" translate="yes" xml:space="preserve">
          <source>This expression is actually equivalent to &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; , due to the higher precedence of &lt;code&gt;==&lt;/code&gt; . This is probably not what you want. (If you really meant to write this, disable the warning, or, better, put the parentheses explicitly and write &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; ).</source>
          <target state="translated">Это выражение фактически эквивалентно &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; из-за более высокого приоритета &lt;code&gt;==&lt;/code&gt; . Вероятно, это не то, что вам нужно. (Если вы действительно хотели это написать, отключите предупреждение или, лучше, явно заключите скобки и напишите &lt;code&gt;$x &amp;amp; ($y == 0)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d95c2dd6bdf3facfce8eb7c29c42e8682159b3f" translate="yes" xml:space="preserve">
          <source>This extension is somewhat contrived. It is based on the code in the previous example. It calls the statfs function multiple times, accepting a reference to an array of filenames as input, and returning a reference to an array of hashes containing the data for each of the filesystems.</source>
          <target state="translated">Эта пристройка несколько наворочена.Оно основано на коде из предыдущего примера.Оно многократно вызывает функцию statfs,принимая на вход ссылку на массив имён файлов и возвращая ссылку на массив хэшей,содержащих данные для каждой из файловых систем.</target>
        </trans-unit>
        <trans-unit id="443c1ad31c99bd2962c1e14f9f6e565d7abce59c" translate="yes" xml:space="preserve">
          <source>This extension is very Unix-oriented (struct statfs and the statfs system call). If you are not running on a Unix system, you can substitute for statfs any other function that returns multiple values, you can hard-code values to be returned to the caller (although this will be a bit harder to test the error case), or you can simply not do this example. If you change the XSUB, be sure to fix the test cases to match the changes.</source>
          <target state="translated">Это расширение очень ориентировано на Unix (структурная статистика и системный вызов statfs).Если вы не работаете на Unix-системе,вы можете заменить statfs любой другой функцией,которая возвращает несколько значений,вы можете жестко закодировать значения,которые будут возвращены вызывающему абоненту (хотя это будет немного сложнее для проверки случая ошибки),или вы можете просто не делать этот пример.Если вы измените XSUB,обязательно исправьте тестовые случаи,чтобы они соответствовали изменениям.</target>
        </trans-unit>
        <trans-unit id="31882b218e30926e9578b39c27a5a21498d0f3ba" translate="yes" xml:space="preserve">
          <source>This fails because the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; makes STDERR go to where STDOUT was going at the time of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;. The backticks then make STDOUT go to a string, but don't change STDERR (which still goes to the old STDOUT).</source>
          <target state="translated">Это не удается, потому что &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; заставляет STDERR перейти туда, где STDOUT шел во время &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; . Затем обратные кавычки заставляют STDOUT перейти к строке, но не изменяют STDERR (который по-прежнему переходит к старому STDOUT).</target>
        </trans-unit>
        <trans-unit id="31d57b0a4260007b8d7df0d0cf0818de49b401fd" translate="yes" xml:space="preserve">
          <source>This failure does not seem to cause any problems. With older gcc versions, &quot;parse error&quot; is reported instead of &quot;missing binary operator&quot;.</source>
          <target state="translated">Эта неудача,похоже,не вызывает никаких проблем.В старых версиях gcc вместо &quot;отсутствующего двоичного оператора&quot; сообщается &quot;ошибка разбора&quot;.</target>
        </trans-unit>
        <trans-unit id="7e96692d6e8677f9247e8d718c35a2f5314dd78a" translate="yes" xml:space="preserve">
          <source>This feature (introduced in Perl 5.10) significantly extends the power of Perl's pattern matching. By referring to some other capture group anywhere in the pattern with the construct &lt;code&gt;(?group-ref)&lt;/code&gt;, the</source>
          <target state="translated">Эта функция (представленная в Perl 5.10) значительно расширяет возможности Perl сопоставления с образцом. Ссылаясь на какую-либо другую группу захвата в любом месте шаблона с помощью конструкции &lt;code&gt;(?group-ref)&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="39313d94f9ceb03c0da32836d49794a646f76b32" translate="yes" xml:space="preserve">
          <source>This feature allows code like this to work :</source>
          <target state="translated">Эта функция позволяет работать подобному коду:</target>
        </trans-unit>
        <trans-unit id="d279f2466dab661314717405c1c291df785e033f" translate="yes" xml:space="preserve">
          <source>This feature hasn't been tested with multiple threads, but it will only show the backtrace of the thread doing the backtracing.</source>
          <target state="translated">Эта функция не тестировалась с несколькими потоками,но она покажет только обратную трассировку потока,выполняющего обратную трассировку.</target>
        </trans-unit>
        <trans-unit id="3f31330eeb1eb16a4131ea44941bd450e02ba159" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.16 onwards.</source>
          <target state="translated">Эта функция доступна начиная с версии Perl 5.16.</target>
        </trans-unit>
        <trans-unit id="a0eb6c955c276bb211d5f6e97040a35b64f681c9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.18 onwards.</source>
          <target state="translated">Эта функция доступна начиная с Perl 5.18.</target>
        </trans-unit>
        <trans-unit id="5350c7db9e5ccded478eeb543bf7a26b7856c3e9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.20 onwards.</source>
          <target state="translated">Эта функция доступна начиная с версии Perl 5.20.</target>
        </trans-unit>
        <trans-unit id="d594f14a3251cf1780c8a95d14833fb1764cbcb5" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.22 onwards.</source>
          <target state="translated">Эта функция доступна начиная с версии Perl 5.22.</target>
        </trans-unit>
        <trans-unit id="cdd060361bef60c9e8d128e54b15bdf49a0df3f0" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.10.</source>
          <target state="translated">Эта функция доступна,начиная с Perl 5.10.</target>
        </trans-unit>
        <trans-unit id="f16229bb3e38370fa369bac03ef842b45e6ac174" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.12; was almost fully implemented in Perl 5.14; and extended in Perl 5.16 to cover &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция доступна начиная с Perl 5.12; был почти полностью реализован в Perl 5.14; и расширен в Perl 5.16 для покрытия &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3fa1f4ec8b7292a36ec1d671af80c0ba1c4dbf6" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.16.</source>
          <target state="translated">Эта функция доступна,начиная с версии Perl 5.16.</target>
        </trans-unit>
        <trans-unit id="4cf7997500a8320557eaa4d36e75775cc5a5b761" translate="yes" xml:space="preserve">
          <source>This feature is available under this name starting with Perl 5.16. In previous versions, it was simply on all the time, and this pragma knew nothing about it.</source>
          <target state="translated">Эта функция доступна под этим именем,начиная с Perl 5.16.В предыдущих версиях она просто постоянно включалась,и эта прагма ничего о ней не знала.</target>
        </trans-unit>
        <trans-unit id="b957d6504ae997d3a3efef291b5e1aad2b736b3a" translate="yes" xml:space="preserve">
          <source>This feature is enabled by 'importing' the non-existent symbol 'verbose'. You would typically enable it by saying</source>
          <target state="translated">Эта функция включается путем 'импорта' несуществующего символа 'verbose'.Обычно вы включаете его,говоря</target>
        </trans-unit>
        <trans-unit id="02d76db5faed0f26a8be3e80c39fd86b2f9e9ac8" translate="yes" xml:space="preserve">
          <source>This feature is implemented as a new op type, &lt;code&gt;OP_CUSTOM&lt;/code&gt; . The Perl core does not &quot;know&quot; anything special about this op type, and so it will not be involved in any optimizations. This also means that you can define your custom ops to be any op structure -- unary, binary, list and so on -- you like.</source>
          <target state="translated">Эта функция реализована как новый тип &lt;code&gt;OP_CUSTOM&lt;/code&gt; . Ядро Perl не &amp;laquo;знает&amp;raquo; ничего особенного об этом типе операций, поэтому оно не будет участвовать в каких-либо оптимизациях. Это также означает, что вы можете определить свои собственные операции как любую структуру операций - унарную, двоичную, список и т. Д. - по вашему желанию.</target>
        </trans-unit>
        <trans-unit id="d3d9a13d27e32567256bd5ed07966300b2843571" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip) and there is useful data immediately after the deflation stream.</source>
          <target state="translated">Эта функция полезна при обработке формата файла,который инкапсулирует сжатый поток данных (например,gzip,zip),и есть полезные данные сразу после потока дефляции.</target>
        </trans-unit>
        <trans-unit id="70ff4f5cd1e98da8a085f691d09087dfafce10bc" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip).</source>
          <target state="translated">Эта функция полезна при обработке формата файла,который инкапсулирует сжатый поток данных (например,gzip,zip).</target>
        </trans-unit>
        <trans-unit id="e4da939b7443e26e164efdaa4d6f81b9bc175434" translate="yes" xml:space="preserve">
          <source>This feature requires configuration option &lt;b&gt;permute&lt;/b&gt;, see section &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt;.</source>
          <target state="translated">Эта функция требует &lt;b&gt;перестановки&lt;/b&gt; опций конфигурации , см. Раздел &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Настройка Getopt :: Long&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b84829a17ad80817afc9eefb1b49f97bfdfe8fac" translate="yes" xml:space="preserve">
          <source>This feature supports the legacy &lt;code&gt;$[&lt;/code&gt; variable. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;. It is on by default but disabled under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (see &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;IMPLICIT LOADING&lt;/a&gt;, below).</source>
          <target state="translated">Эта функция поддерживает устаревшую переменную &lt;code&gt;$[&lt;/code&gt; . Смотрите &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$ [в perlvar&lt;/a&gt; и &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; . Он &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; по умолчанию, но отключен при &lt;a href=&quot;functions/use&quot;&gt;использовании&lt;/a&gt; v5.16 (см. &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;НЕПРИЯТНАЯ ЗАГРУЗКА&lt;/a&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="ccaa07991a8c1bc153311bc6ab0dcadf92aec838" translate="yes" xml:space="preserve">
          <source>This feature, available starting in v5.12, matches any character that is &lt;b&gt;not&lt;/b&gt; a newline. It is a short-hand for writing &lt;code&gt;[^\n]&lt;/code&gt;, and is identical to the &lt;code&gt;.&lt;/code&gt; metasymbol, except under the &lt;code&gt;/s&lt;/code&gt; flag, which changes the meaning of &lt;code&gt;.&lt;/code&gt;, but not &lt;code&gt;\N&lt;/code&gt; .</source>
          <target state="translated">Эта функция, доступная отправным в v5.12, соответствует любому символу , который &lt;b&gt;не&lt;/b&gt; новой строки. Это сокращение для записи &lt;code&gt;[^\n]&lt;/code&gt; , идентичное расширению &lt;code&gt;.&lt;/code&gt; метасимвола, кроме флага &lt;code&gt;/s&lt;/code&gt; , который меняет значение &lt;code&gt;.&lt;/code&gt; , Но не &lt;code&gt;\N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86eab6101dbb39be1f4756f21ad94b3dc3f5b53a" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object was created if this option is not specified.</source>
          <target state="translated">По умолчанию в этом поле указано время создания объекта &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; если этот параметр не указан.</target>
        </trans-unit>
        <trans-unit id="0ae6e594e4f58006926409640dc519990e005708" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object was created if this option is not specified and the &lt;code&gt;$input&lt;/code&gt; parameter is not a filename.</source>
          <target state="translated">По умолчанию в этом поле указано время создания объекта &lt;code&gt;IO::Compress::Zip&lt;/code&gt; если этот параметр не указан и параметр &lt;code&gt;$input&lt;/code&gt; не является именем файла.</target>
        </trans-unit>
        <trans-unit id="e1736869f31835444fcd2554056bb1bdc04ff6bd" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;reg_data&lt;/code&gt; structure, which is defined as follows</source>
          <target state="translated">Это поле указывает на структуру &lt;code&gt;reg_data&lt;/code&gt; , которая определяется следующим образом</target>
        </trans-unit>
        <trans-unit id="990821d4ec37cddf0c064311fa9c677b83df34b2" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;regexp_engine&lt;/code&gt; structure which contains pointers to the subroutines that are to be used for performing a match. It is the compiling routine's responsibility to populate this field before returning the regexp object.</source>
          <target state="translated">Это поле указывает на структуру &lt;code&gt;regexp_engine&lt;/code&gt; , которая содержит указатели на подпрограммы, которые должны использоваться для выполнения сопоставления. Подпрограмма компиляции обязана заполнить это поле перед возвратом объекта регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="423f1e020ff559262836a01099aa9f00246b3cb0" translate="yes" xml:space="preserve">
          <source>This file contains instructions how to build Perl for Haiku and lists known problems.</source>
          <target state="translated">Этот файл содержит инструкции по сборке Perl для Haiku и список известных проблем.</target>
        </trans-unit>
        <trans-unit id="16e77d17e03a82d35fe5f118c6d17cc03a2f5d43" translate="yes" xml:space="preserve">
          <source>This file contains notes for building perl on the Stratus OpenVOS operating system. Perl is a scripting or macro language that is popular on many systems. See &lt;a href=&quot;perlbook&quot;&gt;perlbook&lt;/a&gt; for a number of good books on Perl.</source>
          <target state="translated">Этот файл содержит примечания по созданию Perl в операционной системе Stratus OpenVOS. Perl - это язык сценариев или макросов, популярный во многих системах. Смотрите в &lt;a href=&quot;perlbook&quot;&gt;perlbook&lt;/a&gt; несколько хороших книг по Perl.</target>
        </trans-unit>
        <trans-unit id="1b8ecba533b9b274e408d86f1a2361d08ce45153" translate="yes" xml:space="preserve">
          <source>This file contains the documentation of the perl public API generated by</source>
          <target state="translated">Этот файл содержит документацию по публичному API perl,генерируемому</target>
        </trans-unit>
        <trans-unit id="772ef66d2f091024ffe5331d4173bb5adc436597" translate="yes" xml:space="preserve">
          <source>This file gives instructions for building Perl 5.7 and above, and also Perl modules for NetWare. Before you start, you may want to read the README file found in the top level directory into which the Perl source code distribution was extracted. Make sure you read and understand the terms under which the software is being distributed.</source>
          <target state="translated">Этот файл содержит инструкции по сборке Perl 5.7 и выше,а также Perl-модулей для NetWare.Перед началом работы вам может понадобиться прочитать файл README,находящийся в каталоге верхнего уровня,в который был извлечен исходный код Perl.Убедитесь,что вы прочитали и поняли условия,на которых распространяется программное обеспечение.</target>
        </trans-unit>
        <trans-unit id="6ec203908c78957c98ea92f12965f186f5810be8" translate="yes" xml:space="preserve">
          <source>This file gives the instructions for building Perl5.8 and above for WinCE. Please read and understand the terms under which this software is distributed.</source>
          <target state="translated">Этот файл содержит инструкции по сборке Perl5.8 и выше для WinCE.Пожалуйста,прочтите и поймите условия,на которых распространяется это программное обеспечение.</target>
        </trans-unit>
        <trans-unit id="cf6acf338e7fac3c001977fe9f2038807c39d850" translate="yes" xml:space="preserve">
          <source>This file is the autogenerated documentation of functions in the Perl interpreter that are documented using Perl's internal documentation format but are not marked as part of the Perl API. In other words, &lt;b&gt;they are not for use in extensions&lt;/b&gt;!</source>
          <target state="translated">Этот файл представляет собой автоматически созданную документацию по функциям интерпретатора Perl, которые задокументированы с использованием внутреннего формата документации Perl, но не помечены как часть Perl API. Другими словами, &lt;b&gt;они не предназначены для использования в расширениях&lt;/b&gt; !</target>
        </trans-unit>
        <trans-unit id="37bc1fa4735275726caf451da3d6c18e093591a1" translate="yes" xml:space="preserve">
          <source>This file lists everyone who's contributed to Perl. If you submit a patch, you should add your name to this file as part of the patch.</source>
          <target state="translated">В этом файле перечислены все,кто помогал Перлу.Если вы отправляете патч,вы должны добавить ваше имя в этот файл как часть патча.</target>
        </trans-unit>
        <trans-unit id="bfb66abe74ae898df9c2dbe0e11c53cf1576bcaf" translate="yes" xml:space="preserve">
          <source>This file resides somewhere deep in the location you installed your perl library, find it out by</source>
          <target state="translated">Этот файл находится где-то глубоко в том месте,где вы установили свою библиотеку perl,найдите его по адресу</target>
        </trans-unit>
        <trans-unit id="6cb5bba8cb2fb8c111c0a512a6843cebdb2655ae" translate="yes" xml:space="preserve">
          <source>This file will get parsed, and produce a maybe empty &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array for the current architecture. That will be extended by $BSLOADLIBS, which was computed by ExtUtils::Liblist::ext(). If this array still is empty, we do nothing, else we write a .bs file with an &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array.</source>
          <target state="translated">Этот файл будет проанализирован и &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; возможно, пустой массив @DynaLoader :: dl_resolve_using для текущей архитектуры. Это будет расширено $ BSLOADLIBS, которое было вычислено ExtUtils :: Liblist :: ext (). Если этот массив все еще пуст, мы ничего не делаем, иначе мы пишем файл .bs с &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77507ae6fec16ecb1a49a0d13053514b63919993" translate="yes" xml:space="preserve">
          <source>This filter ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">Данный фильтр гарантирует,что все данные,записанные в файл DBM,будут уничтожены.Это полезно,когда у вас есть perl скрипт,который должен взаимодействовать с DBM файлом,который также используется программой на C.Довольно распространенная проблема заключается в том,что C-приложение должно включать завершающий ноль в строку,когда оно записывает в DBM-файл.Этот фильтр гарантирует,что все данные,записанные в файл DBM,могут быть прочитаны C-приложением.</target>
        </trans-unit>
        <trans-unit id="1a16c760c71ffbcc7dbae1135b5e99738b98c9c4" translate="yes" xml:space="preserve">
          <source>This filter will compress all data before it is written to the database and uncompressed it on reading.</source>
          <target state="translated">Этот фильтр сжимает все данные до того,как они будут записаны в базу данных,и распаковывает их при чтении.</target>
        </trans-unit>
        <trans-unit id="ff45bc95d2be91a9f62c2d432c6510d29da26205" translate="yes" xml:space="preserve">
          <source>This final example contains both ordinary and pattern code expressions. It detects whether a binary string &lt;code&gt;1101010010001...&lt;/code&gt; has a Fibonacci spacing 0,1,1,2,3,5,... of the &lt;code&gt;1&lt;/code&gt; 's:</source>
          <target state="translated">Этот последний пример содержит выражения как обычного, так и шаблонного кода. Он определяет , является ли двоичная строка &lt;code&gt;1101010010001...&lt;/code&gt; имеет интервал Фибоначчи 0,1,1,2,3,5, ... из &lt;code&gt;1&lt;/code&gt; &amp;laquo;s:</target>
        </trans-unit>
        <trans-unit id="4dfd467bd9194695ec17711b8f65393c531e176b" translate="yes" xml:space="preserve">
          <source>This finishes implementation of a primitive symbolic calculator in 50 lines of Perl code. Since the numeric values of subexpressions are not cached, the calculator is very slow.</source>
          <target state="translated">На этом реализация примитивного символьного калькулятора заканчивается в 50 строках Perl кода.Так как числовые значения подвыражений не кэшируются,калькулятор работает очень медленно.</target>
        </trans-unit>
        <trans-unit id="432b2214978806677872de825506327a25e6c8da" translate="yes" xml:space="preserve">
          <source>This first trivial example will call a Perl subroutine,</source>
          <target state="translated">Этот первый тривиальный пример вызовет подпрограмму Perl,</target>
        </trans-unit>
        <trans-unit id="7a73aefe087a5a3cae31e7663f998536b4f2db63" translate="yes" xml:space="preserve">
          <source>This flag has 2 effects:</source>
          <target state="translated">Этот флаг имеет 2 эффекта:</target>
        </trans-unit>
        <trans-unit id="caa34b07e62e9949dde06d4f7ad8cedfd3b7de3f" translate="yes" xml:space="preserve">
          <source>This flag has an important effect on Perl's treatment of the string: if UTF-8 data is not properly distinguished, regular expressions, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; and other string handling operations will have undesirable (wrong) results.</source>
          <target state="translated">Этот флаг имеет важное влияние на обработку строки Perl: если данные UTF-8 не различаются должным образом, регулярные выражения, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; и другие операции обработки строки будут иметь нежелательные (неправильные) результаты.</target>
        </trans-unit>
        <trans-unit id="a176da4e70ce1acc6541f9df33982a6b757fc468" translate="yes" xml:space="preserve">
          <source>This flag is set to true if the API is tracing through subroutine calls.</source>
          <target state="translated">Этот флаг устанавливается в true,если API отслеживается через вызовы подпрограмм.</target>
        </trans-unit>
        <trans-unit id="201e9afdfb172b15efef161ffd6b8fd219c793ac" translate="yes" xml:space="preserve">
          <source>This flag is supported in Sun WorkShop Compilers 5.0 and onwards (now marketed under the name Forte) when used on Solaris 7 or later on UltraSparc systems.</source>
          <target state="translated">Этот флаг поддерживается в Sun WorkShop Compilers 5.0 и далее (в настоящее время продается под названием Forte)при использовании в системах Solaris 7 или более поздней версии UltraSparc.</target>
        </trans-unit>
        <trans-unit id="b160cdb384c536dc3f048d4a9c7c790cc3b24bae" translate="yes" xml:space="preserve">
          <source>This flag tells Perl to interpret the supplied string as a vector of integers, one for each character in the string. Perl applies the format to each integer in turn, then joins the resulting strings with a separator (a dot &lt;code&gt;.&lt;/code&gt; by default). This can be useful for displaying ordinal values of characters in arbitrary strings:</source>
          <target state="translated">Этот флаг указывает Perl интерпретировать предоставленную строку как вектор целых чисел, по одному на каждый символ в строке. Perl применяется формат для каждого целого , в свою очередь, затем присоединяется результирующие строки с разделителем (точкой &lt;code&gt;.&lt;/code&gt; По умолчанию). Это может быть полезно для отображения порядковых значений символов в произвольных строках:</target>
        </trans-unit>
        <trans-unit id="f881a1e5bd78a37c63f807e7bc9fe5e3e92898af" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; is now special-cased solely in the parser. RXf_SPLIT is still #defined, so you can test for it. This is how it used to work:</source>
          <target state="translated">Этот флаг был удален в perl 5.18.0. &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; теперь имеет специальный регистр только в синтаксическом анализаторе. RXf_SPLIT по-прежнему #defined, поэтому вы можете проверить его. Вот как это работало раньше:</target>
        </trans-unit>
        <trans-unit id="d833b586ef20499906978002bb10914b6b58edd4" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. It is still #defined, so you can set it, but doing so will have no effect. This is how it used to work:</source>
          <target state="translated">Этот флаг был снят в perl 5.18.0.Он все еще #определен,так что вы можете его установить,но это не даст никакого эффекта.Вот как он работал раньше:</target>
        </trans-unit>
        <trans-unit id="dc95d1efdd1713c3cca7c0b3c4bdefdda1fde08a" translate="yes" xml:space="preserve">
          <source>This flag, if given, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt; . This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="translated">Этот флаг, если он задан, подавляет URL-адрес при задании текста привязки, поэтому этот пример будет отформатирован как просто &lt;code&gt;foo&lt;/code&gt; . Это может привести к менее загромождению вывода в тех случаях, когда URL-адреса не особенно важны.</target>
        </trans-unit>
        <trans-unit id="c0dbb07c9842c891feb553c44a3898bc7209b8ed" translate="yes" xml:space="preserve">
          <source>This flag, used in the length slot of hash entries and magic structures, specifies the structure contains an &lt;code&gt;SV*&lt;/code&gt; pointer where a &lt;code&gt;char*&lt;/code&gt; pointer is to be expected. (For information only--not to be used).</source>
          <target state="translated">Этот флаг, используемый в слоте длины хеш-записей и магических структур, указывает, что структура содержит указатель &lt;code&gt;SV*&lt;/code&gt; где ожидается указатель &lt;code&gt;char*&lt;/code&gt; . (Только для информации - не использовать).</target>
        </trans-unit>
        <trans-unit id="bbab49144d33f97cf4910c662167d2afe655dc3e" translate="yes" xml:space="preserve">
          <source>This forces the &lt;code&gt;AUTOLOAD&lt;/code&gt; for &lt;code&gt;SO_LINGER&lt;/code&gt; to take place before SO_LINGER is encountered later in &lt;code&gt;My&lt;/code&gt; package.</source>
          <target state="translated">Это заставляет выполнить &lt;code&gt;AUTOLOAD&lt;/code&gt; для &lt;code&gt;SO_LINGER&lt;/code&gt; до того, как SO_LINGER встретится позже в &lt;code&gt;My&lt;/code&gt; пакете.</target>
        </trans-unit>
        <trans-unit id="b15b4ab4a7170566f869487aafa326bf0ce9445d" translate="yes" xml:space="preserve">
          <source>This forces the short and the long members to be little-endian, and is just fine if you don't have too many struct members. But we could also use the byte-order modifier on a group and write the following:</source>
          <target state="translated">Это заставляет коротких и длинных членов быть маленькимиendian,и это просто прекрасно,если у вас не слишком много членов структуры.Но мы также можем использовать модификатор порядка байт в группе и написать следующее:</target>
        </trans-unit>
        <trans-unit id="40f05df3e2fa93dbc3244d6e8aa705438a4243e3" translate="yes" xml:space="preserve">
          <source>This form of the pragma allows essentially seamless handling of locales with Unicode. The collation order will be by Unicode code point order. It is strongly recommended that when you need to order and sort strings that you use the standard module &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; which gives much better results in many instances than you can get with the old-style locale handling.</source>
          <target state="translated">Эта форма прагмы позволяет по существу беспрепятственно обрабатывать локали с помощью Unicode. Порядок сортировки будет соответствовать порядку кодовых точек Unicode. Когда вам нужно упорядочить и отсортировать строки, настоятельно рекомендуется использовать стандартный модуль &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate,&lt;/a&gt; который во многих случаях дает гораздо лучшие результаты, чем вы можете получить с обработкой локали в старом стиле.</target>
        </trans-unit>
        <trans-unit id="cdc9f2e82b133c2773ec210a8571ca6b553d5115" translate="yes" xml:space="preserve">
          <source>This formality is needed when properties are not binary; that is, if they can take on more values than just &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; . For example, the &lt;code&gt;Bidi_Class&lt;/code&gt; property (see &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidirectional Character Types&lt;/a&gt; below), can take on several different values, such as &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; , &lt;code&gt;Whitespace&lt;/code&gt; , and others. To match these, one needs to specify both the property name (&lt;code&gt;Bidi_Class&lt;/code&gt; ), AND the value being matched against (&lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; ,</source>
          <target state="translated">Эта формальность необходима, когда свойства не являются двоичными; то есть, если они могут принимать больше значений, чем только &lt;code&gt;True&lt;/code&gt; и &lt;code&gt;False&lt;/code&gt; . Например, свойство &lt;code&gt;Bidi_Class&lt;/code&gt; (см. &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Типы &lt;/a&gt;двунаправленных символов ниже) может принимать несколько различных значений, таких как &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; , &lt;code&gt;Whitespace&lt;/code&gt; и другие. Чтобы соответствовать им, необходимо указать как имя свойства ( &lt;code&gt;Bidi_Class&lt;/code&gt; ), так и значение, с которым сопоставляется ( &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e6b05c6c31caa81ea454aca24f6c1d1188903888" translate="yes" xml:space="preserve">
          <source>This formatting code is syntactically simple, but semantically complex. What it means is that each space in the printable content of this code signifies a non-breaking space.</source>
          <target state="translated">Этот код форматирования является синтаксически простым,но семантически сложным.Это означает,что каждый пробел в печатном содержимом этого кода означает неразрывное пространство.</target>
        </trans-unit>
        <trans-unit id="d77c232922b63b050101d5932a616e0ed5728461" translate="yes" xml:space="preserve">
          <source>This free toolkit contains the same compiler and linker that ship with Visual C++ .NET 2003 Professional, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">Этот бесплатный инструментарий содержит тот же компилятор и компоновщик,который поставляется с Visual C++.NET 2003 Professional,но не содержит всего необходимого для сборки Perl.</target>
        </trans-unit>
        <trans-unit id="5c5a6423b0a65bc38b33d48cf33a85a24bf291a8" translate="yes" xml:space="preserve">
          <source>This free version of Visual C++ 2005 Professional contains the same compiler and linker that ship with the full version, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">Эта бесплатная версия Visual C++2005 Professional содержит тот же компилятор и компоновщик,который поставляется с полной версией,но не содержит всего необходимого для сборки Perl.</target>
        </trans-unit>
        <trans-unit id="eb31e64d6cc8d22ff5f69477b5a67be71c8242ad" translate="yes" xml:space="preserve">
          <source>This function (not exported) lets you reset the sequence numbers (note that they're numbered arbitrarily, their goal being to be human readable). Its purpose is mostly to support testing, i.e. to compare the concise output from two identical anonymous subroutines (but different instances). Without the reset, B::Concise, seeing that they're separate optrees, generates different sequence numbers in the output.</source>
          <target state="translated">Эта функция (не экспортируется)позволяет сбрасывать номера последовательностей (обратите внимание,что они пронумерованы произвольно,их цель-быть удобочитаемыми человеком).Ее назначение в основном заключается в поддержке тестирования,т.е.сравнения лаконичного вывода из двух одинаковых анонимных подпрограмм (но разных экземпляров).Без сброса,B::Краткий,видя,что они отдельные экземпляры,генерирует различные номера последовательностей в выводе.</target>
        </trans-unit>
        <trans-unit id="1f57c1588a54710c722f648f2f8000721f89bfc3" translate="yes" xml:space="preserve">
          <source>This function accepts any UV as input. To forbid or warn on non-Unicode code points, or those that may be problematic, see &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">Эта функция принимает в качестве входных данных любой UV. Чтобы запретить или предупредить о кодовых точках, отличных от Unicode, или о тех, которые могут быть проблематичными, см. &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;Uvchr_to_utf8_flags&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcc1cbc95f41c6ca77822a286a66032b96a97b23" translate="yes" xml:space="preserve">
          <source>This function accepts two arguments, adds them, and prints their sum. Its return value is the numuber of characters it printed, but you probably didn't care about that. But &lt;code&gt;Memoize&lt;/code&gt; doesn't understand that. If you memoize this function, you will get the result you expect the first time you ask it to print the sum of 2 and 3, but subsequent calls will return 1 (the return value of &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;) without actually printing anything.</source>
          <target state="translated">Эта функция принимает два аргумента, складывает их и выводит их сумму. Его возвращаемое значение - это количество напечатанных символов, но вас это, вероятно, не заботило. Но &lt;code&gt;Memoize&lt;/code&gt; этого не понимает. Если вы запомните эту функцию, вы получите ожидаемый результат, когда в первый раз попросите ее напечатать сумму 2 и 3, но последующие вызовы вернут 1 (возвращаемое значение &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; ) без фактической печати.</target>
        </trans-unit>
        <trans-unit id="cb8ff2980a7098008fca7a80ae815b328b64b56a" translate="yes" xml:space="preserve">
          <source>This function adheres to the POSIX syntax for command line options, with GNU extensions. In general, this means that options have long names instead of single letters, and are introduced with a double dash &quot;--&quot;. Support for bundling of command line options, as was the case with the more traditional single-letter approach, is provided but not enabled by default.</source>
          <target state="translated">Эта функция придерживается синтаксиса POSIX для опций командной строки,с расширениями GNU.В общем,это означает,что опции имеют длинные имена вместо одинарных букв и вводятся с двойной тире &quot;--&quot;.Поддержка объединения опций командной строки,как это было в случае более традиционного однобуквенного подхода,предоставляется,но не включается по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7b0b646247c6327383124f41d35ef99ac00aaf8b" translate="yes" xml:space="preserve">
          <source>This function assigns the prototype of the named core function to &lt;code&gt;sv&lt;/code&gt; , or to a new mortal SV if &lt;code&gt;sv&lt;/code&gt; is NULL. It returns the modified &lt;code&gt;sv&lt;/code&gt; , or NULL if the core function has no prototype. &lt;code&gt;code&lt;/code&gt; is a code as returned by &lt;code&gt;keyword()&lt;/code&gt; . It must not be equal to 0.</source>
          <target state="translated">Эта функция назначает прототип названной основной функции &lt;code&gt;sv&lt;/code&gt; или новому смертному SV, если &lt;code&gt;sv&lt;/code&gt; имеет значение NULL. Он возвращает измененный &lt;code&gt;sv&lt;/code&gt; или NULL, если основная функция не имеет прототипа. &lt;code&gt;code&lt;/code&gt; - это код, возвращаемый &lt;code&gt;keyword()&lt;/code&gt; . Он не должен быть равен 0.</target>
        </trans-unit>
        <trans-unit id="14c8f38efd4e3476b651d12afb352ad397950bd5" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Эта функция ведет себя в различных прагмах, например, в локали, так же, как и &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8378e0b6c78c094cc27c1f818ab7aa1e8291a68d" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Эта функция ведет себя в различных прагмах, например, в локали, так же, как и &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf27edd1f3ed7033638bb2d9262acb5626e2202" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">Эта функция ведет себя таким же образом при различных прагмах, например, в &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , как и &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; , с единственным исключением &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; для LATIN CAPITAL LETTER SHARP S (U + 1E9E) в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . Обычно регистр этого символа имеет значение &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , но, как объясняется в разделе &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; , изменение регистра, пересекающее границу 255/256, проблематично в локали и, следовательно, запрещено. Следовательно, эта функция в локали вместо этого возвращает строку &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , которая является СТРОЧНОЙ ЛАТИНСКОЙ БУКВОЙ ДЛИННОЙ S. Поскольку этот символ сам сворачивается в &lt;code&gt;&quot;s&quot;&lt;/code&gt; , строка из двух из них вместе должна быть эквивалентна одному U + 1E9E в сложенном виде.</target>
        </trans-unit>
        <trans-unit id="ceceba872ecbef53671fa2bb946f4d1ad71c1d4b" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">Эта функция ведет себя таким же образом при различных прагмах, например, в &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , как и &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; , с единственным исключением &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; для LATIN CAPITAL LETTER SHARP S (U + 1E9E) в пределах области &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . Обычно регистр этого символа имеет значение &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , но, как объясняется в разделе &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; , изменение регистра, пересекающее границу 255/256, проблематично в локали и, следовательно, запрещено. Следовательно, эта функция в локали вместо этого возвращает строку &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , которая является СТРОЧНОЙ ЛАТИНСКОЙ БУКВОЙ ДЛИННОЙ S. Поскольку этот символ сам сворачивается в &lt;code&gt;&quot;s&quot;&lt;/code&gt; , строка из двух из них вместе должна быть эквивалентна одному U + 1E9E в сложенном виде.</target>
        </trans-unit>
        <trans-unit id="8e622f55ce5e0f86a0059d75a25d61e3419fef9f" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Эта функция ведет себя таким же образом в различных прагматах, например в локали, как и &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a06484c004f74f9c8853b354936ff3f59e84875a" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Эта функция ведет себя таким же образом в различных прагматах, например в локали, как и &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d07fce4b805ea45a197ef238496fb301033d2545" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">Эта функция связывает переменную с классом пакета, который обеспечивает реализацию переменной. ПЕРЕМЕННАЯ - это имя зачарованной переменной. CLASSNAME - это имя класса, реализующего объекты правильного типа. Любые дополнительные аргументы передаются соответствующему методу конструктора класса (имеется в виду &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; или &lt;code&gt;TIEHASH&lt;/code&gt; ). Обычно эти аргументы , такие как может быть переданы в &lt;code&gt;dbm_open()&lt;/code&gt; функцию С. Объект , возвращаемый конструктор также возвращенный &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; функции, которая была бы полезна , если вы хотите получить доступ к другим методам в Classname.</target>
        </trans-unit>
        <trans-unit id="c3bc0e801ef7f17e4d79ee445885b2be27f25c2b" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">Эта функция связывает переменную с классом пакета, который обеспечивает реализацию переменной. ПЕРЕМЕННАЯ - это имя зачарованной переменной. CLASSNAME - это имя класса, реализующего объекты правильного типа. Любые дополнительные аргументы передаются соответствующему методу конструктора класса (имеется в виду &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; или &lt;code&gt;TIEHASH&lt;/code&gt; ). Обычно эти аргументы , такие как может быть переданы в &lt;code&gt;dbm_open()&lt;/code&gt; функцию С. Объект , возвращаемый конструктор также возвращенный &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; функции, которая была бы полезна , если вы хотите получить доступ к другим методам в Classname.</target>
        </trans-unit>
        <trans-unit id="5132f8607896a5505c904bfd8891d2794b3208e8" translate="yes" xml:space="preserve">
          <source>This function can take a hash of options:</source>
          <target state="translated">Эта функция может принимать хэш опций:</target>
        </trans-unit>
        <trans-unit id="f0cccb23235ebb22439bd8ff2e5a998bf5aa962e" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">Эту функцию нельзя использовать для всего массива или хэша, чтобы узнать, сколько в них элементов. Для этого используйте &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; @array и &lt;a href=&quot;functions/scalar&quot;&gt;скалярные &lt;/a&gt; ключи % hash соответственно.</target>
        </trans-unit>
        <trans-unit id="0ba6657c5fa298f8f6fa2444117335de3f819a9a" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">Эту функцию нельзя использовать для всего массива или хэша, чтобы узнать, сколько в них элементов. Для этого используйте &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; @array и &lt;a href=&quot;scalar&quot;&gt;скалярные &lt;/a&gt; ключи % hash соответственно.</target>
        </trans-unit>
        <trans-unit id="118dd1a89ee26e341a24a616a4886c6624f3f97c" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">Эта функция вызывает немедленный дамп памяти. См. Также ключ командной строки &lt;b&gt;-u&lt;/b&gt; в &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; , который делает то же самое. В первую очередь это делается для того, чтобы вы могли использовать программу &lt;b&gt;отмены дампов&lt;/b&gt; (не входит в комплект), чтобы превратить дамп &lt;b&gt;памяти&lt;/b&gt; в исполняемый двоичный файл после инициализации всех ваших переменных в начале программы. Когда новый двоичный файл будет выполнен, он начнется с выполнения команды &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (со всеми ограничениями, с которыми &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ). Думайте об этом как о goto с промежуточным дампом ядра и реинкарнацией. Если &lt;code&gt;LABEL&lt;/code&gt; опущен, перезапускает программу сверху. &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, доступный начиная с Perl 5.18.0, позволяет вычислять имя во время выполнения, в остальном идентично &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2644b0d090106df2bac79cc1278fe935e270aa17" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">Эта функция вызывает немедленный дамп памяти. См. Также ключ командной строки &lt;b&gt;-u&lt;/b&gt; в &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; , который делает то же самое. В первую очередь это делается для того, чтобы вы могли использовать программу &lt;b&gt;отмены дампов&lt;/b&gt; (не входит в комплект), чтобы превратить дамп &lt;b&gt;памяти&lt;/b&gt; в исполняемый двоичный файл после инициализации всех ваших переменных в начале программы. Когда новый двоичный файл будет выполнен, он начнется с выполнения команды &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (со всеми ограничениями, с которыми &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ). Думайте об этом как о goto с промежуточным дампом ядра и реинкарнацией. Если &lt;code&gt;LABEL&lt;/code&gt; опущен, перезапускает программу сверху. &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, доступный начиная с Perl 5.18.0, позволяет вычислять имя во время выполнения, в остальном идентично &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8952b46dfeb17de53351ddf4d21ae7d55c07b2d8" translate="yes" xml:space="preserve">
          <source>This function combines &lt;code&gt;perl_inc()&lt;/code&gt; , &lt;code&gt;ccflags()&lt;/code&gt; and &lt;code&gt;ccdlflags()&lt;/code&gt; into one.</source>
          <target state="translated">Эта функция объединяет &lt;code&gt;perl_inc()&lt;/code&gt; , &lt;code&gt;ccflags()&lt;/code&gt; и &lt;code&gt;ccdlflags()&lt;/code&gt; в одну.</target>
        </trans-unit>
        <trans-unit id="3221a438c3aad48b5c48a805755ad197928b0f99" translate="yes" xml:space="preserve">
          <source>This function detects things that can't be modified, such as &lt;code&gt;$x+1&lt;/code&gt; , and generates errors for them. For example, &lt;code&gt;$x+1 = 2&lt;/code&gt; would cause it to be called with an op of type OP_ADD and a &lt;code&gt;type&lt;/code&gt; argument of OP_SASSIGN.</source>
          <target state="translated">Эта функция обнаруживает вещи, которые нельзя изменить, например &lt;code&gt;$x+1&lt;/code&gt; , и генерирует для них ошибки. Например, &lt;code&gt;$x+1 = 2&lt;/code&gt; приведет к его быть вызвана с оп типа OP_ADD и &lt;code&gt;type&lt;/code&gt; аргумента OP_SASSIGN.</target>
        </trans-unit>
        <trans-unit id="50025265ce70752e52bdd20aeddabe5be1d58395" translate="yes" xml:space="preserve">
          <source>This function does not use a typemap. Instead, we declare it as accepting one SV* (scalar) parameter, and returning an SV* value, and we take care of populating these scalars within the code. Because we are only returning one value, we don't need a &lt;code&gt;PPCODE:&lt;/code&gt; directive - instead, we use &lt;code&gt;CODE:&lt;/code&gt; and &lt;code&gt;OUTPUT:&lt;/code&gt; directives.</source>
          <target state="translated">Эта функция не использует карту типов. Вместо этого мы объявляем, что он принимает один параметр SV * (скаляр) и возвращает значение SV *, и мы заботимся о заполнении этих скаляров в коде. Поскольку мы возвращаем только одно значение, нам не нужна директива &lt;code&gt;PPCODE:&lt;/code&gt; вместо этого мы используем директивы &lt;code&gt;CODE:&lt;/code&gt; и &lt;code&gt;OUTPUT:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6180191f0bc721d501520e66b164a9ef20a22d11" translate="yes" xml:space="preserve">
          <source>This function enables/disables error popups associated with hardware errors (Disk not ready etc.) and software exceptions.</source>
          <target state="translated">Эта функция включает/отключает всплывающие окна ошибок,связанные с аппаратными ошибками (Диск не готов и т.д.)и исключениями программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="467712b5ef786ba52bfac5af598e2fd6afe41fb8" translate="yes" xml:space="preserve">
          <source>This function finalizes the optree. Should be called directly after the complete optree is built. It does some additional checking which can't be done in the normal ck_xxx functions and makes the tree thread-safe.</source>
          <target state="translated">Эта функция завершает выбор.Должна быть вызвана сразу после того,как будет построено полное согласие.Она делает дополнительную проверку,которую невозможно выполнить в обычных функциях ck_xxx,и делает дерево потокобезопасным.</target>
        </trans-unit>
        <trans-unit id="529aa240cc0116c0500e7c8811796b1b622bb45e" translate="yes" xml:space="preserve">
          <source>This function has a &lt;code&gt;Perl_&lt;/code&gt; prefix; i.e. it is defined as &lt;code&gt;Perl_av_fetch&lt;/code&gt; .</source>
          <target state="translated">Эта функция имеет префикс &lt;code&gt;Perl_&lt;/code&gt; ; т.е. он определяется как &lt;code&gt;Perl_av_fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de86eb1f3f7a618ab133b8ece7ae081d7566d329" translate="yes" xml:space="preserve">
          <source>This function has documentation using the &lt;code&gt;apidoc&lt;/code&gt; feature which we'll look at in a second. Some functions have 'd' but not 'A'; docs are good.</source>
          <target state="translated">У этой функции есть документация, использующая функцию &lt;code&gt;apidoc&lt;/code&gt; , которую мы рассмотрим через секунду. В некоторых функциях есть буква &amp;laquo;d&amp;raquo;, но не &amp;laquo;A&amp;raquo;; документы хороши.</target>
        </trans-unit>
        <trans-unit id="0ade2373bef2bb276b87f95d3a360655ec661c9a" translate="yes" xml:space="preserve">
          <source>This function invalidates isa caches on the old stash, on all subpackages nested inside it, and on the subclasses of all those, including non-existent packages that have corresponding entries in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">Эта функция делает недействительными кеши isa в старом тайнике, во всех вложенных в него вложенных пакетах и ​​в подклассах всех этих пакетов, включая несуществующие пакеты, которые имеют соответствующие записи в &lt;code&gt;stash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c21846dd58e70501c7ae85693ffbb155deb7ba64" translate="yes" xml:space="preserve">
          <source>This function is a deprecated synonym for &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt;, which itself, while not deprecated, should be used only in isolated circumstances. These functions were useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want.</source>
          <target state="translated">Эта функция является устаревшим синонимом для &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt; , который, хотя и не является устаревшим, должен использоваться только в отдельных случаях. Эти функции были полезны для кода, который хотел обрабатывать платформы как EBCDIC, так и ASCII со свойствами Unicode, но, начиная с Perl v5.20, различия между платформами в большинстве случаев стали невидимыми для большей части кода, поэтому эта функция вряд ли будет тем, чем вы хотите.</target>
        </trans-unit>
        <trans-unit id="2913484e77586e8d68e21770c7b4063c930b583c" translate="yes" xml:space="preserve">
          <source>This function is a good candidate for memoization. If you memoize the `fib' function above, it will compute fib(14) exactly once, the first time it needs to, and then save the result in a table. Then if you ask for fib(14) again, it gives you the result out of the table. While computing fib(14), instead of computing fib(12) twice, it does it once; the second time it needs the value it gets it from the table. It doesn't compute fib(11) four times; it computes it once, getting it from the table the next three times. Instead of making 1,200 recursive calls to `fib', it makes 15. This makes the function about 150 times faster.</source>
          <target state="translated">Эта функция является хорошим кандидатом на запоминание.Если запомнить функцию `fib' выше,то она вычислит fiber(14)ровно один раз,первый раз,когда это необходимо,а затем сохранит результат в таблице.Затем,если вы снова попросите fiber(14),она выдаст вам результат из таблицы.При вычислении волокна(14),вместо того,чтобы вычислять волокно(12)дважды,оно делает это один раз;во второй раз ему нужно значение,которое он получит из таблицы.Он не вычисляет волокно(11)четыре раза;он вычисляет его один раз,а три раза получает его из таблицы.Вместо 1200 рекурсивных вызовов ''волокна'',она делает 15.Это делает функцию примерно в 150 раз быстрее.</target>
        </trans-unit>
        <trans-unit id="8abb1909fce4e7f9c7aa7be2b9644d4d00810b89" translate="yes" xml:space="preserve">
          <source>This function is a part of the public API. All such functions should also have 'd', very few do not.</source>
          <target state="translated">Эта функция является частью публичного API.Все такие функции также должны иметь 'd',очень немногие-нет.</target>
        </trans-unit>
        <trans-unit id="752724e6180b12da8e6cd0e0935f30eed783f92d" translate="yes" xml:space="preserve">
          <source>This function is a stand-in replacement for &lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar::Util::refaddr&lt;/a&gt;, that is, it returns the reference address of its argument as a numeric value. The only difference is that &lt;code&gt;refaddr()&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when given a non-reference while &lt;code&gt;id()&lt;/code&gt; returns its argument unchanged.</source>
          <target state="translated">Эта функция является заменой &lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar :: Util :: refaddr&lt;/a&gt; , то есть она возвращает адрес ссылки своего аргумента в виде числового значения. Единственное отличие состоит в том, что &lt;code&gt;refaddr()&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если задана не ссылка, а &lt;code&gt;id()&lt;/code&gt; возвращает свой аргумент без изменений.</target>
        </trans-unit>
        <trans-unit id="8a0d9ec972199a89df14d600a89c7347e29e2743" translate="yes" xml:space="preserve">
          <source>This function is deprecated due to the possibility that malformed input could cause reading beyond the end of the input buffer. Use &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; instead.</source>
          <target state="translated">Эта функция устарела из-за возможности того, что искаженный ввод может вызвать чтение за пределами конца входного буфера. &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;Вместо&lt;/a&gt; этого используйте isUTF8_CHAR .</target>
        </trans-unit>
        <trans-unit id="28ce789b612136fafacb486bd5bb357e8d0e4268" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true and an unlink on open file is supported. If the unlink is to be deferred to the END block, the file is still registered for removal.</source>
          <target state="translated">Эта функция отключается,если глобальная переменная $KEEP_ALL равна true и поддерживается unlink в открытом файле.Если рассылка будет отложена на END-блок,файл все равно будет зарегистрирован для удаления.</target>
        </trans-unit>
        <trans-unit id="8ff75df81e21a36cc9176732a80e9ccf2b68ffdf" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true.</source>
          <target state="translated">Эта функция отключается,если глобальная переменная $KEEP_ALL равна true.</target>
        </trans-unit>
        <trans-unit id="1b3c45f3e25d0a4f2eec52ed9b0f4d623aa7d540" translate="yes" xml:space="preserve">
          <source>This function is expected to be used to signal to perl that this SV is about to be written to, and any extra book-keeping needs to be taken care of. Hence, it croaks on read-only values.</source>
          <target state="translated">Ожидается,что эта функция будет использоваться для сигнала perl,на который будет написано это SV,и что необходимо позаботиться о любом дополнительном бухгалтерском учете.Следовательно,она кричит на значения,доступные только для чтения.</target>
        </trans-unit>
        <trans-unit id="046e9e5d6bd1398867e1dee81f27fefb4c212d31" translate="yes" xml:space="preserve">
          <source>This function is expensive in time and memory.</source>
          <target state="translated">Эта функция дорогостоящая во времени и памяти.</target>
        </trans-unit>
        <trans-unit id="0e275fe5def47eb8b770fec4e729d202771a5b5a" translate="yes" xml:space="preserve">
          <source>This function is explicitly exported.</source>
          <target state="translated">Эта функция явно экспортируется.</target>
        </trans-unit>
        <trans-unit id="baae2ca89cb1960ad8e6c66b2b2c6b874d4b3266" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">Эта функция похожа на &lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt; со строковым аргументом, за исключением того, что она всегда анализирует свой аргумент или &lt;code&gt;$_&lt;/code&gt; если EXPR опущен, как строку байтов. Строка, содержащая символы, порядковое значение которых превышает 255, приводит к ошибке. Исходные фильтры, активированные в оцениваемом коде, применяются к самому коду.</target>
        </trans-unit>
        <trans-unit id="4699e383ec11b8d15b996f85aefd9a02e9b5bdaf" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">Эта функция похожа на &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; со строковым аргументом, за исключением того, что она всегда анализирует свой аргумент или &lt;code&gt;$_&lt;/code&gt; если EXPR опущен, как строку байтов. Строка, содержащая символы, порядковое значение которых превышает 255, приводит к ошибке. Исходные фильтры, активированные в оцениваемом коде, применяются к самому коду.</target>
        </trans-unit>
        <trans-unit id="caeb1cd5a4880a4de69d7c039879029a5a9067db" translate="yes" xml:space="preserve">
          <source>This function is like them, but the input is a strict Unicode (as opposed to native) code point. Only in very rare circumstances should code not be using the native code point.</source>
          <target state="translated">Эта функция похожа на них,но входной код представляет собой строгую точку юникода (в отличие от &quot;родного&quot; кода).Только в очень редких случаях код не должен использовать нативную точку кода.</target>
        </trans-unit>
        <trans-unit id="3a6987023b3feeacf2b107686c8afb184bf9785b" translate="yes" xml:space="preserve">
          <source>This function is most useful in the idiom</source>
          <target state="translated">Эта функция наиболее полезна в идиоме</target>
        </trans-unit>
        <trans-unit id="2ba0cefbbfd398911c6a8851cb85930170c481ec" translate="yes" xml:space="preserve">
          <source>This function is not exported by default, so you'll have to ask for it via:</source>
          <target state="translated">Эта функция не экспортируется по умолчанию,поэтому ее придется запрашивать через:</target>
        </trans-unit>
        <trans-unit id="3f6a1a85d5fc88c0e9364254a35bb1ced4455307" translate="yes" xml:space="preserve">
          <source>This function is now largely obsolete, mostly because it's very hard to convert a core file into an executable. That's why you should now invoke it as &lt;code&gt;CORE::dump()&lt;/code&gt; , if you don't want to be warned against a possible typo.</source>
          <target state="translated">Эта функция сейчас в значительной степени устарела, в основном потому, что очень сложно преобразовать файл ядра в исполняемый файл. Вот почему вы должны теперь вызывать его как &lt;code&gt;CORE::dump()&lt;/code&gt; , если вы не хотите, чтобы вас предупреждали о возможной опечатке.</target>
        </trans-unit>
        <trans-unit id="5839521ffabe37be44c9b142d6f0e122410904e4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">Эта функция доступна только с &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; , объявлением &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (или выше) или с префиксом &lt;code&gt;CORE::&lt;/code&gt; . Смотрите &lt;a href=&quot;../feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="2ce5a3cfad478a3c3fe7a7e04e3ec1df865cc5b4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">Эта функция доступна только с &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; , объявлением &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (или выше) или с префиксом &lt;code&gt;CORE::&lt;/code&gt; . Смотрите &lt;a href=&quot;feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="e43d0a24f1f599b09639816ea4bcc88309ead9ce" translate="yes" xml:space="preserve">
          <source>This function is only used by sv_true() and friends, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. If the flags contain SV_GMAGIC, then it does an mg_get() first.</source>
          <target state="translated">Эта функция используется только функцией sv_true()и друзьями,и только в том случае,если аргумент последнего не является ни SvPOK,ни SvIOK,ни SvNOK.Если флаги содержат SV_GMAGIC,то сначала выполняется mg_get().</target>
        </trans-unit>
        <trans-unit id="0b5776fa05d807fc6265ae0f0ad2309322f8e80a" translate="yes" xml:space="preserve">
          <source>This function is part of the experimental development API, and may change or disappear without notice.</source>
          <target state="translated">Данная функция является частью API экспериментальной разработки и может изменяться или исчезать без предварительного уведомления.</target>
        </trans-unit>
        <trans-unit id="df4b28e7c0c75c36faca5ca1d70518986b2de4c0" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;basename(1)&lt;/code&gt; . It does &lt;b&gt;NOT&lt;/b&gt; always return the file name portion of a path as you might expect. To be safe, if you want the file name portion of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">Эта функция предоставляется для совместимости с &lt;code&gt;basename(1)&lt;/code&gt; команды оболочки Unix (1) . Он &lt;b&gt;НЕ&lt;/b&gt; всегда возвращает часть пути, содержащую имя файла, как вы могли ожидать. На всякий случай, если вы хотите, чтобы часть пути была частью имени файла, используйте &lt;code&gt;fileparse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb4ec1fbe8c66b8f2020144f5701828bedcfe14" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;dirname(1)&lt;/code&gt; and has inherited some of its quirks. In spite of its name it does &lt;b&gt;NOT&lt;/b&gt; always return the directory name as you might expect. To be safe, if you want the directory name of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">Эта функция предоставляется для совместимости с командой &lt;code&gt;dirname(1)&lt;/code&gt; оболочки Unix и унаследовала некоторые ее особенности. Несмотря на свое название, он &lt;b&gt;НЕ&lt;/b&gt; всегда возвращает имя каталога, как вы могли ожидать. На всякий случай, если вы хотите &lt;code&gt;fileparse()&lt;/code&gt; имя каталога пути, используйте fileparse () .</target>
        </trans-unit>
        <trans-unit id="02937778415d96c12ca24363d4faada4d7809ec7" translate="yes" xml:space="preserve">
          <source>This function is slightly neater and more convenient than the otherwise-equivalent code</source>
          <target state="translated">Эта функция немного аккуратнее и удобнее,чем потусторонний эквивалентный код.</target>
        </trans-unit>
        <trans-unit id="253b045013c433366a31c2cad960bf3283fd7d39" translate="yes" xml:space="preserve">
          <source>This function is the implementation of the &lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt; macro. It should not be called directly.</source>
          <target state="translated">Эта функция является реализацией макроса &lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt; . Его не следует называть напрямую.</target>
        </trans-unit>
        <trans-unit id="2a063dac587bf0c596a82a9c061b8f58b0075f3f" translate="yes" xml:space="preserve">
          <source>This function is the reason for &lt;code&gt;Test&lt;/code&gt; 's existence. It's the basic function that handles printing &quot;&lt;code&gt;ok&lt;/code&gt; &quot; or &quot;&lt;code&gt;not ok&lt;/code&gt; &quot;, along with the current test number. (That's what &lt;code&gt;Test::Harness&lt;/code&gt; wants to see.)</source>
          <target state="translated">Эта функция является причиной существования &lt;code&gt;Test&lt;/code&gt; . Это основная функция, которая обрабатывает вывод &amp;laquo; &lt;code&gt;ok&lt;/code&gt; &amp;raquo; или &amp;laquo; &lt;code&gt;not ok&lt;/code&gt; &amp;raquo; вместе с текущим номером теста. (Это то, что хочет видеть &lt;code&gt;Test::Harness&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="077b1426e82943be7223b00766173ba5b1d4acf4" translate="yes" xml:space="preserve">
          <source>This function is used to create an in-memory gzip file with the minimum possible gzip header (exactly 10 bytes).</source>
          <target state="translated">Эта функция используется для создания внутрипамятного gzip файла с минимально возможным заголовком gzip (ровно 10 байт).</target>
        </trans-unit>
        <trans-unit id="4e0a2ccd31b9bdd8066d5b9d22011351f1760ec7" translate="yes" xml:space="preserve">
          <source>This function is used to uncompress an in-memory gzip file.</source>
          <target state="translated">Эта функция используется для распаковки внутрипамятного gzip-файла.</target>
        </trans-unit>
        <trans-unit id="a3560ca8857460f655d69dd6b49d96a0f7f4a536" translate="yes" xml:space="preserve">
          <source>This function is useful for producing a directory tree identical to the intended distribution tree.</source>
          <target state="translated">Эта функция полезна для создания дерева каталогов,идентичного предполагаемому дереву распределения.</target>
        </trans-unit>
        <trans-unit id="7f19b2798743cc5e3f86e0124b7ddc89a4b3ff92" translate="yes" xml:space="preserve">
          <source>This function is very slow. Why? To compute fib(14), it first wants to compute fib(13) and fib(12), and add the results. But to compute fib(13), it first has to compute fib(12) and fib(11), and then it comes back and computes fib(12) all over again even though the answer is the same. And both of the times that it wants to compute fib(12), it has to compute fib(11) from scratch, and then it has to do it again each time it wants to compute fib(13). This function does so much recomputing of old results that it takes a really long time to run---fib(14) makes 1,200 extra recursive calls to itself, to compute and recompute things that it already computed.</source>
          <target state="translated">Эта функция очень медленная.Почему? Чтобы вычислить волокно(14),она сначала хочет вычислить волокно(13)и волокно(12),а затем добавить результаты.Но чтобы вычислить волокно(13),сначала нужно вычислить волокно(12)и волокно(11),а затем оно возвращается и снова вычисляет волокно(12),несмотря на то,что ответ один и тот же.И оба раза,когда она хочет вычислить волокно(12),она должна вычислить волокно(11)с нуля,а затем она должна делать это снова каждый раз,когда она хочет вычислить волокно(13).Эта функция выполняет настолько много перезагрузок старых результатов,что для ее выполнения требуется очень много времени-волокно(14)делает 1200 дополнительных рекурсивных вызовов самому себе,чтобы вычислить и переписать вещи,которые она уже вычислила.</target>
        </trans-unit>
        <trans-unit id="658ccab5957d9fcb5acf02b75800173326f8ac18" translate="yes" xml:space="preserve">
          <source>This function is visible to extensions included in the Perl core.</source>
          <target state="translated">Эта функция видна расширениям,включенным в ядро Perl.</target>
        </trans-unit>
        <trans-unit id="bced169d4ae2df2074f45ec48dfe76cbdcf9e8fb" translate="yes" xml:space="preserve">
          <source>This function isn't exported out of the Perl core.</source>
          <target state="translated">Эта функция не экспортируется из ядра Perl.</target>
        </trans-unit>
        <trans-unit id="44b0e9309a1e4a7388d6c16c7d9a1708e320c5c8" translate="yes" xml:space="preserve">
          <source>This function makes use of the fact that the presence of tainted data anywhere within an expression renders the entire expression tainted. It would be inefficient for every operator to test every argument for taintedness. Instead, the slightly more efficient and conservative approach is used that if any tainted value has been accessed within the same expression, the whole expression is considered tainted.</source>
          <target state="translated">Эта функция использует тот факт,что наличие запятнанных данных в любом месте выражения делает все выражение запятнанным.Для каждого оператора было бы неэффективно проверять каждый аргумент на наличие запятнания.Вместо этого используется несколько более эффективный и консервативный подход,при котором,если к какому-либо запятнанному значению был получен доступ внутри одного и того же выражения,то запятнанным считается целое выражение.</target>
        </trans-unit>
        <trans-unit id="2fa84a514560c863f7089eb7ca24d6683d764569" translate="yes" xml:space="preserve">
          <source>This function may redirect error popups associated with hardware errors (Disk not ready etc.) and software exceptions to the file POPUPLOG.OS2 at the root directory of the specified drive. Overrides OS2::Error() specified by individual programs. Given argument undef will disable redirection.</source>
          <target state="translated">Эта функция может перенаправлять всплывающие окна ошибок,связанных с аппаратными ошибками (Диск не готов и т.д.)и программными исключениями из файла POPUPLOG.OS2 в корневой директории указанного диска.Переопределяет OS2::Error(),указанную отдельными программами.При указанном аргументе undef отключает перенаправление.</target>
        </trans-unit>
        <trans-unit id="b9c43d91069a9273330810504102211439262d63" translate="yes" xml:space="preserve">
          <source>This function never returns; &lt;code&gt;croak&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; and friends.</source>
          <target state="translated">Эта функция никогда не возвращается; &lt;code&gt;croak&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; и друзья.</target>
        </trans-unit>
        <trans-unit id="50a0a533f960128e3a086dc96db9b1aafa52d5a7" translate="yes" xml:space="preserve">
          <source>This function normally returns a list. Suppose you memoize it and merge the caches:</source>
          <target state="translated">Эта функция обычно возвращает список.Предположим,вы запомнили его и объединили кэши:</target>
        </trans-unit>
        <trans-unit id="3b85997713311e08de3e59dac5499d89e1dccd03" translate="yes" xml:space="preserve">
          <source>This function only exists if Perl has been compiled to use ithreads.</source>
          <target state="translated">Эта функция существует только в том случае,если Perl был скомпилирован для использования ithreads.</target>
        </trans-unit>
        <trans-unit id="61fee0518a7d8b237d34517bc719658c6b719ec4" translate="yes" xml:space="preserve">
          <source>This function only operates on officially approved (not provisional) named sequences.</source>
          <target state="translated">Эта функция действует только в официально утвержденных (не временных)названных последовательностях.</target>
        </trans-unit>
        <trans-unit id="e59aa3c08f27111519b6ecd9388b33347100905a" translate="yes" xml:space="preserve">
          <source>This function only works on &lt;code&gt;new()&lt;/code&gt; and it assumes &lt;code&gt;new()&lt;/code&gt; will return just a single object which isa &lt;code&gt;$class&lt;/code&gt; .</source>
          <target state="translated">Эта функция работает только с &lt;code&gt;new()&lt;/code&gt; и предполагает, что &lt;code&gt;new()&lt;/code&gt; вернет только один объект, который является &lt;code&gt;$class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2eb7d023997a73d6817733ba90181d612a2b1cdc" translate="yes" xml:space="preserve">
          <source>This function opens either the</source>
          <target state="translated">Эта функция открывает либо</target>
        </trans-unit>
        <trans-unit id="441aca7229169cbbddd3f285c046a735dc532182" translate="yes" xml:space="preserve">
          <source>This function performs syntax checking on a prototype, &lt;code&gt;proto&lt;/code&gt; . If &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; is true, any illegal characters or mismatched brackets will trigger illegalproto warnings, declaring that they were detected in the prototype for &lt;code&gt;name&lt;/code&gt; .</source>
          <target state="translated">Эта функция выполняет проверку синтаксиса прототипа &lt;code&gt;proto&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; истинно, любые недопустимые символы или несоответствующие скобки вызовут предупреждения о незаконном протоколе, объявляя, что они были обнаружены в прототипе для &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91930e6b34fa8d1a9857a2f7de94cb11275f2880" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions gethostbyname(), getservbyname(), inet_aton() and pack_sockaddr_in().</source>
          <target state="translated">Эта функция выполняет работу унаследованных функций gethostbyname(),getervbyname(),inet_aton()и pack_sockaddr_in().</target>
        </trans-unit>
        <trans-unit id="b69a639ae94b0e84e8a91026a470893dc8e2e4fa" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions unpack_sockaddr_in(), inet_ntoa(), gethostbyaddr() and getservbyport().</source>
          <target state="translated">Эта функция выполняет работу унаследованных функций unpack_sockaddr_in(),inet_ntoa(),gethostbyaddr()и getervbyport().</target>
        </trans-unit>
        <trans-unit id="3d1364c8524baa88f5749c97cf4b3c3b92b20d7d" translate="yes" xml:space="preserve">
          <source>This function places an advisory lock on a shared variable or referenced object contained in</source>
          <target state="translated">Эта функция накладывает консультативную блокировку на общую переменную или объект,на который делается ссылка,и который содержится в</target>
        </trans-unit>
        <trans-unit id="13aa5d944aea63735721eab1c7c43ad176915f14" translate="yes" xml:space="preserve">
          <source>This function returns a string of &lt;code&gt;boot_$ModuleName&lt;/code&gt; prototypes for each @modules.</source>
          <target state="translated">Эта функция возвращает строку прототипов &lt;code&gt;boot_$ModuleName&lt;/code&gt; для каждого @modules.</target>
        </trans-unit>
        <trans-unit id="4f9139a43ab3e4540adae4f5d5020617b2e643b8" translate="yes" xml:space="preserve">
          <source>This function returns a string of calls to &lt;code&gt;newXS()&lt;/code&gt; that glue the module</source>
          <target state="translated">Эта функция возвращает строку вызовов &lt;code&gt;newXS()&lt;/code&gt; которые склеивают модуль</target>
        </trans-unit>
        <trans-unit id="621ba7bc642c79bf406939acb2b7c2b8df3903c7" translate="yes" xml:space="preserve">
          <source>This function returns an encoded version of the string ($str) given as argument.</source>
          <target state="translated">Эта функция возвращает закодированную версию строки ($str),приведенную в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="44086926e42f35072b303b091e9d9e0a7ca33b91" translate="yes" xml:space="preserve">
          <source>This function returns empty-list if given anything other than a formally valid language tag.</source>
          <target state="translated">Эта функция возвращает пустой список,если дано что-либо,кроме формально допустимого языкового тега.</target>
        </trans-unit>
        <trans-unit id="865f16a5f2b57a820e8bf84b966f732abf36eb70" translate="yes" xml:space="preserve">
          <source>This function returns the plain text version of the string given as argument. The lines of the result are &quot;\n&quot; terminated, even if the $str argument contains &quot;\r\n&quot; terminated lines.</source>
          <target state="translated">Эта функция возвращает простую текстовую версию строки,заданной в качестве аргумента.Строки результата завершаются словами &quot;\n&quot;,даже если аргумент $str содержит завершенные строки &quot;\r\n&quot;.</target>
        </trans-unit>
        <trans-unit id="a5ab5fe7ba11e207b5f81eca8f934ec6da3fef9c" translate="yes" xml:space="preserve">
          <source>This function returns the string that results from decoding the scalar value</source>
          <target state="translated">Эта функция возвращает строку,полученную в результате декодирования скалярного значения</target>
        </trans-unit>
        <trans-unit id="3d6da7152ac538ef94012168e86ee3522aaad549" translate="yes" xml:space="preserve">
          <source>This function returns the string with the first character modified if it is a control character. It converts it to ^X format first, so that &quot;\cG&quot; becomes &quot;^G&quot;. This is used internally by &lt;a href=&quot;#SAFENAME&quot;&gt;B::GV::SAFENAME&lt;/a&gt;, but you can call it directly.</source>
          <target state="translated">Эта функция возвращает строку с первым измененным символом, если это управляющий символ. Сначала он преобразует его в формат ^ X, так что &quot;\ cG&quot; становится &quot;^ G&quot;. Он используется внутри &lt;a href=&quot;#SAFENAME&quot;&gt;B :: GV :: SAFENAME&lt;/a&gt; , но вы можете вызывать его напрямую.</target>
        </trans-unit>
        <trans-unit id="3960f619466a09edf20242d0c7f969690cbc6219" translate="yes" xml:space="preserve">
          <source>This function should be as efficient as possible to keep your programs running as fast as possible.</source>
          <target state="translated">Эта функция должна быть как можно более эффективной,чтобы ваши программы работали как можно быстрее.</target>
        </trans-unit>
        <trans-unit id="3a1ef4b3781258f0fdbabb5991f2b0a7c13aaadc" translate="yes" xml:space="preserve">
          <source>This function should have been named wantlist() instead.</source>
          <target state="translated">Эту функцию следовало бы назвать wantlist().</target>
        </trans-unit>
        <trans-unit id="0b507d2e008bacdbb9e54edf21d0bbb50fdaab83" translate="yes" xml:space="preserve">
          <source>This function should not be called if you are using the object oriented interface since the it will interfere with the object destructor deleting the file.</source>
          <target state="translated">Эту функцию не следует вызывать,если вы используете объектно-ориентированный интерфейс,т.к.она будет мешать деструктору объекта удалить файл.</target>
        </trans-unit>
        <trans-unit id="c82575cb1cd9500578e180e36936964e6acbcd65" translate="yes" xml:space="preserve">
          <source>This function should not have a compatibility macro to define, say, &lt;code&gt;Perl_parse&lt;/code&gt; to &lt;code&gt;parse&lt;/code&gt; . It must be called as &lt;code&gt;Perl_parse&lt;/code&gt; .</source>
          <target state="translated">Эта функция не должна иметь макроса совместимости, чтобы определить, например, &lt;code&gt;Perl_parse&lt;/code&gt; для &lt;code&gt;parse&lt;/code&gt; . Он должен называться &lt;code&gt;Perl_parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd99feaf61a2bec56d635937abeb8d24fef9d878" translate="yes" xml:space="preserve">
          <source>This function simply calls the Microsoft C library _getdcwd() function.</source>
          <target state="translated">Эта функция просто вызывает функцию библиотеки Microsoft C _getdcwd().</target>
        </trans-unit>
        <trans-unit id="7c73c162d2f4a3c57002d94f30e626af9a64555c" translate="yes" xml:space="preserve">
          <source>This function simply returns a string defining the same &lt;code&gt;EXTERN_C&lt;/code&gt; macro as</source>
          <target state="translated">Эта функция просто возвращает строку, определяющую тот же макрос &lt;code&gt;EXTERN_C&lt;/code&gt; , что и</target>
        </trans-unit>
        <trans-unit id="9ab2ac7d8042c579036bf811ff64ad55b40d9830" translate="yes" xml:space="preserve">
          <source>This function skips over the automatic calls to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; made on the behalf of the debugger. If the stack frame requested was a sub called by &lt;code&gt;DB::sub&lt;/code&gt; , the return value will be the frame for the call to &lt;code&gt;DB::sub&lt;/code&gt; , since that has the correct line number/etc. for the call site. If</source>
          <target state="translated">Эта функция пропускает автоматические вызовы &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; сделанные от имени отладчика. Если запрошенный фрейм стека был суб, вызванным &lt;code&gt;DB::sub&lt;/code&gt; , возвращаемое значение будет фреймом для вызова &lt;code&gt;DB::sub&lt;/code&gt; , поскольку у него правильный номер строки / и т. Д. для сайта звонка. Если</target>
        </trans-unit>
        <trans-unit id="3f1ed900c36dd5852fb31f0242bde189d87ee34e" translate="yes" xml:space="preserve">
          <source>This function takes a list of 0 or more language tags that constitute a given user's Accept-Language list, and returns a list of tags for</source>
          <target state="translated">Эта функция берет список из 0 или более языковых тегов,которые составляют список приемлемых языков для данного пользователя,и возвращает список тегов для</target>
        </trans-unit>
        <trans-unit id="2e20c9e90738e4e12b4b244ae6847d7d7fb0c7dd" translate="yes" xml:space="preserve">
          <source>This function takes a variable number of arguments, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; style. The argument list should end with &lt;code&gt;...&lt;/code&gt; , like this:</source>
          <target state="translated">Эта функция принимает переменное количество аргументов в стиле &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . Список аргументов должен заканчиваться на &lt;code&gt;...&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="cf2eecbd5d099ce08ffbe9b809327bd3414ba65b" translate="yes" xml:space="preserve">
          <source>This function takes no arguments, and as far as &lt;code&gt;Memoize&lt;/code&gt; is concerned, it always returns the same result. &lt;code&gt;Memoize&lt;/code&gt; is wrong, of course, and the memoized version of this function will call &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; once to get the current time, and it will return that same time every time you call it after that.</source>
          <target state="translated">Эта функция не принимает аргументов и, что касается &lt;code&gt;Memoize&lt;/code&gt; , всегда возвращает один и тот же результат. &lt;code&gt;Memoize&lt;/code&gt; , конечно, неверен, и мемоизированная версия этой функции вызовет &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; один раз, чтобы получить текущее время, и будет возвращать это же время каждый раз, когда вы вызываете ее после этого.</target>
        </trans-unit>
        <trans-unit id="5edb4f65abb2fc47967dac5333a9e803321aac25" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">Эта функция сообщает объекту, на который ссылается REF, что теперь это объект в пакете CLASSNAME. Если CLASSNAME не указан, используется текущий пакет. Поскольку &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; часто является последней вещью в конструкторе, для удобства он возвращает ссылку. Всегда используйте версию с двумя аргументами, если производный класс может унаследовать функцию, выполняющую благословение. См. &lt;a href=&quot;../perlobj&quot;&gt;Perlobj&lt;/a&gt; для получения дополнительной информации о благословении (и благословении) объектов.</target>
        </trans-unit>
        <trans-unit id="264717bee5831f635e17b82abeba8fa8b801090b" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">Эта функция сообщает объекту, на который ссылается REF, что теперь это объект в пакете CLASSNAME. Если CLASSNAME не указан, используется текущий пакет. Поскольку &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; часто является последней вещью в конструкторе, для удобства он возвращает ссылку. Всегда используйте версию с двумя аргументами, если производный класс может унаследовать функцию, выполняющую благословение. См. &lt;a href=&quot;perlobj&quot;&gt;Perlobj&lt;/a&gt; для получения дополнительной информации о благословении (и благословении) объектов.</target>
        </trans-unit>
        <trans-unit id="5d01eea1f06346371db6a328408650ca1c6b5ca7" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;code&gt;load&lt;/code&gt; function or the &lt;code&gt;autoload_remote&lt;/code&gt; function from Module::Load under the hood.</source>
          <target state="translated">Эта функция использует функцию &lt;code&gt;load&lt;/code&gt; или функцию &lt;code&gt;autoload_remote&lt;/code&gt; из Module :: Load под капотом.</target>
        </trans-unit>
        <trans-unit id="dde06d7625f57e7da1a76d11827641ea58931d51" translate="yes" xml:space="preserve">
          <source>This function was useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want. If you do need this precise functionality, use instead &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта функция была полезна для кода, который хотел обрабатывать платформы как EBCDIC, так и ASCII со свойствами Unicode, но, начиная с Perl v5.20, различия между платформами в основном стали невидимыми для большей части кода, так что эта функция вряд ли будет тем, чем вы хотите. Если вам действительно нужна эта точная функциональность, используйте вместо &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e428d7e7165fe610c2ec2aae0a7a0abdc81b5d5a" translate="yes" xml:space="preserve">
          <source>This function will calculate and return the binary digest of the bytes of the given file. The function will croak if it fails to open or read the file.</source>
          <target state="translated">Эта функция вычислит и вернет двоичный дайджест байтов данного файла.Функция перестанет работать,если не удастся открыть или прочитать файл.</target>
        </trans-unit>
        <trans-unit id="e710ca7b4ebf9ab0536802088bacbcbd1c5ec7fb" translate="yes" xml:space="preserve">
          <source>This function will concatenate all arguments, calculate the MD5 digest of this &quot;message&quot;, and return it in binary form. The returned string will be 16 bytes long.</source>
          <target state="translated">Эта функция объединит все аргументы,вычислит MD5 дайджест этого &quot;сообщения&quot; и вернёт его в двоичном виде.Возвращаемая строка будет иметь длину 16 байт.</target>
        </trans-unit>
        <trans-unit id="c489f76d5438c6d22b3cb418ff3f520db9ae337f" translate="yes" xml:space="preserve">
          <source>This function will convert to UTF-8 (and not warn) even code points that aren't legal Unicode or are problematic, unless &lt;code&gt;flags&lt;/code&gt; contains one or more of the following flags:</source>
          <target state="translated">Эта функция преобразует в UTF-8 (и не предупреждает) даже те кодовые точки, которые не являются допустимым Unicode или являются проблемными, если только &lt;code&gt;flags&lt;/code&gt; содержат один или несколько из следующих флагов:</target>
        </trans-unit>
        <trans-unit id="bfa2e2cbe1081798fb5dd07961b2589448f68e0d" translate="yes" xml:space="preserve">
          <source>This function will croak if it can't connect to the syslog daemon.</source>
          <target state="translated">Эта функция перестанет работать,если не сможет соединиться с демоном syslog.</target>
        </trans-unit>
        <trans-unit id="c8fb41e9972ce033692cb3bc009110bcfa6b3909" translate="yes" xml:space="preserve">
          <source>This function will not be confused by overloading or blessing. In internals terms, this extracts the regexp pointer out of the PERL_MAGIC_qr structure so it cannot be fooled.</source>
          <target state="translated">Эту функцию не следует путать с перегрузкой или благословением.Во внутреннем плане она извлекает указатель regexp из структуры PERL_MAGIC_qr,чтобы его нельзя было обмануть.</target>
        </trans-unit>
        <trans-unit id="bdf7565f2d5b49ccdcf0417e04e7ffb7876b15d0" translate="yes" xml:space="preserve">
          <source>This function will split up your program into files that the AutoLoader module can handle. It is used by both the standard perl libraries and by the MakeMaker utility, to automatically configure libraries for autoloading.</source>
          <target state="translated">Эта функция разделит вашу программу на файлы,с которыми может справиться модуль AutoLoader.Она используется как стандартными библиотеками perl,так и утилитой MakeMaker для автоматической настройки библиотек для автозагрузки.</target>
        </trans-unit>
        <trans-unit id="eb5d34127b41d73e4ad33707ae6e0f3468fa3088" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Эта функция работает так же, как и системный вызов с тем же именем: она делает указанный каталог новым корневым каталогом для всех дальнейших имен путей, которые начинаются с &lt;code&gt;/&lt;/code&gt; для вашего процесса и всех его дочерних процессов. (Это не меняет ваш текущий рабочий каталог, что не затрагивает.) По соображениям безопасности этот вызов ограничен суперпользователем. Если FILENAME опущен, выполняет &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; для &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f0880e6d532a1f27ed2ddbef9335a9b1af6165" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Эта функция работает так же, как и системный вызов с тем же именем: она делает указанный каталог новым корневым каталогом для всех дальнейших имен путей, которые начинаются с &lt;code&gt;/&lt;/code&gt; для вашего процесса и всех его дочерних процессов. (Это не меняет ваш текущий рабочий каталог, что не затрагивает.) По соображениям безопасности этот вызов ограничен суперпользователем. Если FILENAME опущен, выполняет &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; для &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef6e36bc13a174b6b1778b35a2d60399ce6095bb" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns all language tags that are alternate forms of this language tag. (I.e., tags which refer to the same language.) This is meant to handle legacy tags caused by the minor changes in language tag standards over the years; and the x-/i- alternation is also dealt with.</source>
          <target state="translated">Эта функция,если ей присвоен языковой тэг,возвращает все языковые тэги,которые являются альтернативными формами данного языкового тэга.(Т.е.теги,которые относятся к одному и тому же языку.)Это предназначено для работы с унаследованными тегами,вызванными незначительными изменениями в стандартах языковых тегов за последние годы;также рассматривается изменение x-/i-.</target>
        </trans-unit>
        <trans-unit id="b8a93fcdf2125a7d09fd995b425967c3b4164e45" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns an encoding of it such that:</source>
          <target state="translated">Эта функция,если ей присвоен языковой тег,возвращает ему такую кодировку:</target>
        </trans-unit>
        <trans-unit id="ab422ba4ddb7cdb9c2c2585a4c8bf7188aa9975a" translate="yes" xml:space="preserve">
          <source>This function, which is included in the two export tags listed above, takes one or two arguments. The first is the glob pattern. The second is a set of flags ORed together. The available flags are listed below under &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt;. If the second argument is omitted, &lt;code&gt;GLOB_CSH&lt;/code&gt; (or &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; on VMS and DOSish systems) is used by default.</source>
          <target state="translated">Эта функция, включенная в два перечисленных выше тега экспорта, принимает один или два аргумента. Первый - это узор шара. Второй - это набор флагов, объединенных ИЛИ. Доступные флаги перечислены ниже в разделе &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;ФЛАГИ POSIX&lt;/a&gt; . Если второй аргумент опущен, по &lt;code&gt;GLOB_CSH&lt;/code&gt; используется GLOB_CSH (или &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; в системах VMS и DOSish).</target>
        </trans-unit>
        <trans-unit id="7607d86adf25319082630a8f720c18a028dc2b55" translate="yes" xml:space="preserve">
          <source>This functionality is disabled for setuid scripts and for scripts run with &lt;b&gt;-T&lt;/b&gt;.</source>
          <target state="translated">Эта функция отключена для сценариев setuid и для сценариев, запускаемых с &lt;b&gt;-T&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7553b3094129fa58516257b0cce463898fb85b" translate="yes" xml:space="preserve">
          <source>This generates a compile-time error if you access a variable that was neither explicitly declared (using any of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
vars&lt;/code&gt; ) nor fully qualified. (Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; variable isn't good enough.) See &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;, &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;, &lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;, &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;, and &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;.</source>
          <target state="translated">Это приводит к ошибке времени компиляции , если доступ к переменной , которая не была ни явно объявленную ( с использованием любого из &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; ) , ни полным. (Поскольку это сделано для того, чтобы избежать проблем с самоубийствами переменных и тонких проблем с динамической областью видимости, простой &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; переменной недостаточно.) См. &lt;a href=&quot;functions/my&quot;&gt;My&lt;/a&gt; , &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; , &lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt; , &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; и &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f74c9a11ba157a546c0c89330b1cb3bdd1614525" translate="yes" xml:space="preserve">
          <source>This generates a runtime error if you use symbolic references (see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;).</source>
          <target state="translated">Это генерирует ошибку времени выполнения, если вы используете символические ссылки (см. &lt;a href=&quot;perlref&quot;&gt;Perlref&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b0f601577dbb5896904df9ff737e1fa0298974a" translate="yes" xml:space="preserve">
          <source>This gets interpreted as:</source>
          <target state="translated">Это интерпретируется как:</target>
        </trans-unit>
        <trans-unit id="70bf742be7e750bec7fa9fb8e4b6fe30ec9b5f65" translate="yes" xml:space="preserve">
          <source>This gives nasty overhead when you are trying to dynamically require modules at runtime, since you will need to change the module notation (&lt;code&gt;Acme::Comment&lt;/code&gt; ) to a file notation fitting the particular platform you are on.</source>
          <target state="translated">Это вызывает неприятные накладные расходы, когда вы пытаетесь динамически запрашивать модули во время выполнения, поскольку вам нужно будет изменить нотацию модуля ( &lt;code&gt;Acme::Comment&lt;/code&gt; ) на нотацию файла, соответствующую конкретной платформе, на которой вы находитесь.</target>
        </trans-unit>
        <trans-unit id="7c019885847002a06e56f60b480505499d5d7585" translate="yes" xml:space="preserve">
          <source>This gives the name of the extension (</source>
          <target state="translated">Это дает имя расширения (</target>
        </trans-unit>
        <trans-unit id="6b221eef709fb6d96fbb9db3f118edc097a1ba2d" translate="yes" xml:space="preserve">
          <source>This global modifies the argument given to &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; by &lt;code&gt;Params::Check::check()&lt;/code&gt; and is useful if you have a custom wrapper function around &lt;code&gt;Params::Check::check()&lt;/code&gt; . The value must be an integer, indicating the number of wrapper functions inserted between the real function call and &lt;code&gt;Params::Check::check()&lt;/code&gt; .</source>
          <target state="translated">Этот глобальные модифицирует аргумент , данный &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; по &lt;code&gt;Params::Check::check()&lt;/code&gt; и полезно , если у вас есть обычай обертки функции вокруг &lt;code&gt;Params::Check::check()&lt;/code&gt; . Значение должно быть целым числом, указывающим количество функций оболочки, вставленных между вызовом реальной функции и &lt;code&gt;Params::Check::check()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8923baf9a118df6243078227c2bc3261ab6c170" translate="yes" xml:space="preserve">
          <source>This globally overrides the default behavior of calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; inside a thread, and effectively causes such calls to behave the same as &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . In other words, with this setting, calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; causes only the thread to terminate.</source>
          <target state="translated">Это глобально переопределяет поведение по умолчанию вызова &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; внутри потока и фактически заставляет такие вызовы вести себя так же, как &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . Другими словами, с этим параметром вызов &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; приводит к завершению только потока.</target>
        </trans-unit>
        <trans-unit id="9d1a7a9bddd9acdc92fdc5c3e015da338283422a" translate="yes" xml:space="preserve">
          <source>This guarantees that STDOUT (where the test results appear) and STDERR (where the diagnostics appear) will stay in sync. The harness will display any diagnostics your tests emit on STDERR.</source>
          <target state="translated">Это гарантирует,что STDOUT (при появлении результатов тестирования)и STDERR (при появлении диагностики)останутся синхронизированными.На экране жгута будут отображаться все диагностические данные,выданные вашими тестами на STDERR.</target>
        </trans-unit>
        <trans-unit id="06edcd446459b13f358d5f7a1e7f44f85855880a" translate="yes" xml:space="preserve">
          <source>This happened because the presence of overloading was checked too early, before any tie()d access was attempted. If the class of the value FETCH()ed from the tied variable does not change, a simple workaround for code that is to run on older Perl versions is to access the value (via &lt;code&gt;() = $foo&lt;/code&gt; or some such) immediately after tie()ing, so that after this call the</source>
          <target state="translated">Это произошло из-за того, что наличие перегрузки было проверено слишком рано, до попытки доступа с помощью функции tie () d. Если класс значения FETCH () ed из связанной переменной не изменяется, простой обходной путь для кода, который должен запускаться в более старых версиях Perl, - это получить доступ к значению (через &lt;code&gt;() = $foo&lt;/code&gt; или что-то подобное) сразу после привязки () ing, так что после этого вызовите</target>
        </trans-unit>
        <trans-unit id="4f907111d1d29806bed6e772fe053aff55cf72f3" translate="yes" xml:space="preserve">
          <source>This happens because Berkeley DB uses dynamic memory to allocate buffers which will subsequently be written to the database file. Being dynamic, the memory could have been used for anything before DB malloced it. As Berkeley DB doesn't clear the memory once it has been allocated, the unused portions will contain random junk. In the case where a Perl script gets written to the database, the random junk will correspond to an area of dynamic memory that happened to be used during the compilation of the script.</source>
          <target state="translated">Это происходит потому,что БД Беркли использует динамическую память для выделения буферов,которые впоследствии будут записаны в файл БД.Будучи динамической,память могла быть использована для чего угодно до того,как БД ее обманула.Поскольку БД Беркли не очищает память после ее выделения,неиспользуемые части будут содержать случайный мусор.В случае записи Perl скрипта в БД случайный мусор будет соответствовать области динамической памяти,которая использовалась при компиляции скрипта.</target>
        </trans-unit>
        <trans-unit id="2287d497a37220b85075e14fb44f3c5f11c4109c" translate="yes" xml:space="preserve">
          <source>This happens because you can't really share arbitrary data structures with foreign processes.</source>
          <target state="translated">Это происходит потому,что вы не можете обмениваться произвольными структурами данных с посторонними процессами.</target>
        </trans-unit>
        <trans-unit id="3663fa9d53c5bc8b1c430a10078b98451ddfbf78" translate="yes" xml:space="preserve">
          <source>This happens only if your perl is compiled to use stdio instead of perlio, which is the default. Some (maybe all?) stdios set error and eof flags that you may need to clear. The &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module defines &lt;code&gt;clearerr()&lt;/code&gt; that you can use. That is the technically correct way to do it. Here are some less reliable workarounds:</source>
          <target state="translated">Это происходит только в том случае, если ваш perl скомпилирован для использования stdio вместо perlio, который используется по умолчанию. Некоторые (может быть, все?) Stdios устанавливают ошибки и флаги eof, которые вам может понадобиться очистить. Модуль &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; определяет &lt;code&gt;clearerr()&lt;/code&gt; которое вы можете использовать. Это технически правильный способ сделать это. Вот несколько менее надежных обходных путей:</target>
        </trans-unit>
        <trans-unit id="40e2474ab2464f5a6d8b366f637789f861001327" translate="yes" xml:space="preserve">
          <source>This happens to avoid shell interpolation problems when whitespace is present in directory names.</source>
          <target state="translated">Это позволяет избежать проблем с интерполяцией оболочки,когда в именах каталогов присутствуют пробелы.</target>
        </trans-unit>
        <trans-unit id="76f62e127c6c53c05eb19f5eae3fcd84ce29184a" translate="yes" xml:space="preserve">
          <source>This has a significant advantage in space over reading the whole file in. You can find a proof of this method in</source>
          <target state="translated">Это имеет значительное преимущество в пространстве по сравнению с чтением всего файла.Вы можете найти доказательство этого метода в</target>
        </trans-unit>
        <trans-unit id="a19e57e2a77c7fc3b4122f04d13e6469dce9f91c" translate="yes" xml:space="preserve">
          <source>This has been recorded in &lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; as bug #37532: Unable to interleave STDOUT and STDERR.</source>
          <target state="translated">Это было записано на &lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; как ошибка № 37532: Невозможно чередовать STDOUT и STDERR.</target>
        </trans-unit>
        <trans-unit id="f52d89b3c166d4a363c55e83875dec4c4067987e" translate="yes" xml:space="preserve">
          <source>This has several advantages. Accessors make it easier to change the implementation of an object later while still preserving the original API.</source>
          <target state="translated">Это имеет ряд преимуществ.Аксессуары облегчают последующее изменение реализации объекта при сохранении исходного API.</target>
        </trans-unit>
        <trans-unit id="34b1eddfb5655aec91f3e8e1f2978f9657ae01a0" translate="yes" xml:space="preserve">
          <source>This has the effect of storing the cache in a &lt;code&gt;DB_File&lt;/code&gt; database whose name is in &lt;code&gt;$filename&lt;/code&gt; . The cache will persist after the program has exited. Next time the program runs, it will find the cache already populated from the previous run of the program. Or you can forcibly populate the cache by constructing a batch program that runs in the background and populates the cache file. Then when you come to run your real program the memoized function will be fast because all its results have been precomputed.</source>
          <target state="translated">Это имеет эффект сохранения кеша в &lt;code&gt;DB_File&lt;/code&gt; данных DB_File , имя которой находится в &lt;code&gt;$filename&lt;/code&gt; . Кеш будет сохраняться после выхода из программы. При следующем запуске программы она обнаружит, что кэш уже заполнен после предыдущего запуска программы. Или вы можете принудительно заполнить кеш, создав пакетную программу, которая работает в фоновом режиме и заполняет файл кеша. Затем, когда вы приступите к запуску своей реальной программы, мемоизированная функция будет быстрой, потому что все ее результаты были предварительно вычислены.</target>
        </trans-unit>
        <trans-unit id="4f55042605688b1e566dc7078adcb80b2ae71090" translate="yes" xml:space="preserve">
          <source>This has the interesting effect of creating a function local to another function, something not normally supported in Perl.</source>
          <target state="translated">Это имеет интересный эффект создания функции,локальной к другой функции,что обычно не поддерживается в Perl.</target>
        </trans-unit>
        <trans-unit id="b1797c70a1d197e558ba86167569174dbeb96a8a" translate="yes" xml:space="preserve">
          <source>This hash should map POD files (or scripts containing POD) to the man file names under the &lt;code&gt;blib/man1/&lt;/code&gt; directory, as in the following example:</source>
          <target state="translated">Этот хэш должен отображать файлы POD (или скрипты, содержащие POD) в имена файлов man в &lt;code&gt;blib/man1/&lt;/code&gt; , как в следующем примере:</target>
        </trans-unit>
        <trans-unit id="e9df8c379bbf80ee5fdd7c982a32f28e6ec7e7ad" translate="yes" xml:space="preserve">
          <source>This holds a hash-of-lists. Each list contains the functions in the category the key denotes.</source>
          <target state="translated">Здесь есть хэш-оф-листы.Каждый список содержит функции в категории,которую обозначает ключ.</target>
        </trans-unit>
        <trans-unit id="80d4d81772f7d6d67760a370f3b5798c816acf17" translate="yes" xml:space="preserve">
          <source>This holds a string of the last error that happened during a call to &lt;code&gt;can_load&lt;/code&gt; . It is useful to inspect this when &lt;code&gt;can_load&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Он содержит строку последней ошибки, произошедшей во время вызова &lt;code&gt;can_load&lt;/code&gt; . Это полезно проверить, когда &lt;code&gt;can_load&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="807ff9f1a614524ec64299d0ff11753e548d2db4" translate="yes" xml:space="preserve">
          <source>This holds the cache of the &lt;code&gt;can_load&lt;/code&gt; function. If you explicitly want to remove the current cache, you can set this variable to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">В нем хранится кеш функции &lt;code&gt;can_load&lt;/code&gt; . Если вы явно хотите удалить текущий кеш, вы можете установить для этой переменной &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ab611b7e6d978fe2070f07754881b8d06390403" translate="yes" xml:space="preserve">
          <source>This identical to the numerical values of the &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">Это идентично числовым значениям &lt;code&gt;$!&lt;/code&gt; см. &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ ERRNO в perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eebbc38db38088437ee3de434676f2c9849a55f6" translate="yes" xml:space="preserve">
          <source>This implementation never has to fetch the context using a function call, since it is always passed as an extra argument. Depending on your needs for simplicity or efficiency, you may mix the previous two approaches freely.</source>
          <target state="translated">Эта реализация никогда не должна извлекать контекст с помощью вызова функции,так как она всегда передается в качестве дополнительного аргумента.В зависимости от ваших потребностей в простоте или эффективности,вы можете свободно смешивать два предыдущих подхода.</target>
        </trans-unit>
        <trans-unit id="7b6dd1dd5bc3b526c6e18c4c4cf7662fc526f6c1" translate="yes" xml:space="preserve">
          <source>This implements the C library function of the same name, which on most systems returns the current login from</source>
          <target state="translated">Это реализует одноименную библиотечную функцию C,которая на большинстве систем возвращает текущий логин из</target>
        </trans-unit>
        <trans-unit id="9b00dbaf392453f8a0c495715d87f8a967ac3280" translate="yes" xml:space="preserve">
          <source>This implicit use of &lt;code&gt;$_&lt;/code&gt; greatly simplifies the filter.</source>
          <target state="translated">Это неявное использование &lt;code&gt;$_&lt;/code&gt; значительно упрощает фильтр.</target>
        </trans-unit>
        <trans-unit id="5b50085de4def35b6bdec8ddfe646e562a42bf85" translate="yes" xml:space="preserve">
          <source>This implicitly turns on &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; .</source>
          <target state="translated">Это неявно включает &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;использования&lt;/a&gt; unicode_strings .</target>
        </trans-unit>
        <trans-unit id="1913f881cf8f6c8733392373df598260e9eff553" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that any magic eventually carried by those variables is locally lost. In other words, saying &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; will not have any effect on the internal value of the input record separator.</source>
          <target state="translated">Это означает, среди прочего, что любая магия, в конечном итоге переносимая этими переменными, локально теряется. Другими словами, использование &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; не повлияет на внутреннее значение разделителя входных записей.</target>
        </trans-unit>
        <trans-unit id="853b46dcbc0a00c897209b2e5eda11d1bef5190a" translate="yes" xml:space="preserve">
          <source>This imports all the symbols from YourModule's &lt;code&gt;@EXPORT&lt;/code&gt; into the namespace of the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">Это импортирует все символы из @EXPORT &lt;code&gt;@EXPORT&lt;/code&gt; в пространство имен оператора &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc30f208dc0886e9e09f0ad72a7741fdb1114419" translate="yes" xml:space="preserve">
          <source>This imports only the symbols listed by the caller into their namespace. All listed symbols must be in your &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , else an error occurs. The advanced export features of Exporter are accessed like this, but with list entries that are syntactically distinct from symbol names.</source>
          <target state="translated">При этом в пространство имен импортируются только символы, перечисленные вызывающим пользователем. Все перечисленные символы должны быть в вашем &lt;code&gt;@EXPORT&lt;/code&gt; или &lt;code&gt;@EXPORT_OK&lt;/code&gt; , иначе произойдет ошибка. Доступ к расширенным функциям экспорта Exporter осуществляется таким же образом, но с записями списка, которые синтаксически отличаются от имен символов.</target>
        </trans-unit>
        <trans-unit id="f54334948064b9890996f54ddad24e2c8dcfde1a" translate="yes" xml:space="preserve">
          <source>This incantation is a bit much to remember, but Perl will display it for you if you say &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; .</source>
          <target state="translated">Это заклинание нужно запомнить, но Perl покажет его вам, если вы скажете &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5270d55bdd99c39c88df6b66aa86ef8a427ec941" translate="yes" xml:space="preserve">
          <source>This includes everything before the &amp;lt;title&amp;gt; opening tag including the Document type and including the opening &amp;lt;title&amp;gt; tag. The following call will set it to be a simple HTML file:</source>
          <target state="translated">Сюда входит все, что находится до открывающего тега &amp;lt;title&amp;gt;, включая тип документа и включая открывающий тег &amp;lt;title&amp;gt;. Следующий вызов сделает его простым HTML-файлом:</target>
        </trans-unit>
        <trans-unit id="5e4643de8eedeed9698ffe2974d9db63ab9e6ea1" translate="yes" xml:space="preserve">
          <source>This indicates how numbers should be formatted for human readability, for example the character used as the decimal point.</source>
          <target state="translated">Это указывает на то,как цифры должны быть отформатированы для удобочитаемости человеком,например,символ,используемый в качестве десятичной точки.</target>
        </trans-unit>
        <trans-unit id="6005230475219b0a5021d5218cbbce15d92f7c81" translate="yes" xml:space="preserve">
          <source>This indicates that Configure is being run with a broken Korn shell (even though you think you are using a Bourne shell by using &quot;sh Configure&quot; or &quot;./Configure&quot;). The Korn shell bug has been reported to Compaq as of February 1999 but in the meanwhile, the reason ksh is being used is that you have the environment variable BIN_SH set to 'xpg4'. This causes /bin/sh to delegate its duties to /bin/posix/sh (a ksh). Unset the environment variable and rerun Configure.</source>
          <target state="translated">Это указывает на то,что Configure запускается со сломанной оболочкой Korn (даже если вы думаете,что используете оболочку Bourne с помощью &quot;sh Configure&quot; или &quot;./Configure&quot;).Об ошибке в оболочке Korn сообщалось Compaq с февраля 1999 года,но тем временем,причина использования ksh заключается в том,что переменная окружения BIN_SH установлена в 'xpg4'.Это заставляет /bin/sh делегировать свои обязанности в /bin/posix/sh (a ksh).Отключите переменную окружения и повторите команду Configure.</target>
        </trans-unit>
        <trans-unit id="062f44d9692db42f54456303d55718a170b1e245" translate="yes" xml:space="preserve">
          <source>This indicates the ordering of letters for comparison and sorting. In Latin alphabets, for example, &quot;b&quot;, generally follows &quot;a&quot;.</source>
          <target state="translated">Это указывает на упорядочение букв для сравнения и сортировки.В латинских алфавитах,например,&quot;b&quot;,как правило,следует за &quot;a&quot;.</target>
        </trans-unit>
        <trans-unit id="e6751de1d4a71c579b34f21fa42d3fbd6eb68764" translate="yes" xml:space="preserve">
          <source>This indicates, for example if a character is an uppercase letter.</source>
          <target state="translated">Это указывает,например,на то,что символ является заглавной буквой.</target>
        </trans-unit>
        <trans-unit id="f1ba19f7444dcdb1f5fd5e30a3ff4c300dd9b51b" translate="yes" xml:space="preserve">
          <source>This information should not be considered complete; it includes possibly transient information about idiosyncrasies of some of the ports, almost all of which are in a state of constant evolution. Thus, this material should be considered a perpetual work in progress (&lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; ).</source>
          <target state="translated">Эту информацию не следует считать полной; он включает, возможно, временную информацию об особенностях некоторых портов, почти все из которых находятся в состоянии постоянной эволюции. Таким образом, этот материал следует рассматривать как постоянно незавершенную работу ( &lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f308a14f85f6b55bddba54f6f0dccb1fe994f0d" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the default MANIFEST.SKIP file</source>
          <target state="translated">В него вставляется содержимое файла MANIFEST.SKIP по умолчанию</target>
        </trans-unit>
        <trans-unit id="a183a2a7c1e850deb76aa146e5c8c7d75a1d8b67" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the specified external file</source>
          <target state="translated">При этом вставляется содержимое указанного внешнего файла</target>
        </trans-unit>
        <trans-unit id="710127152df45ef23f215433723e52cbd88020a4" translate="yes" xml:space="preserve">
          <source>This install method only has the power to install the distribution if there are no dependencies in the way. To install an object along with all its dependencies, use CPAN::Shell-&amp;gt;install.</source>
          <target state="translated">Этот метод установки позволяет установить дистрибутив только в том случае, если на пути нет зависимостей. Чтобы установить объект вместе со всеми его зависимостями, используйте CPAN :: Shell-&amp;gt; install.</target>
        </trans-unit>
        <trans-unit id="081204399b94282349e76c93ee84e633b6e3ee15" translate="yes" xml:space="preserve">
          <source>This instance of this layer supports the &quot;fast &lt;code&gt;gets&lt;/code&gt; &quot; interface. Normally set based on &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; for the class and by the existence of the function(s) in the table. However a class that normally provides that interface may need to avoid it on a particular instance. The &quot;pending&quot; layer needs to do this when it is pushed above a layer which does not support the interface. (Perl's &lt;code&gt;sv_gets()&lt;/code&gt; does not expect the streams fast &lt;code&gt;gets&lt;/code&gt; behaviour to change during one &quot;get&quot;.)</source>
          <target state="translated">Этот экземпляр этого слоя поддерживает &amp;laquo;быстро &lt;code&gt;gets&lt;/code&gt; &amp;raquo; интерфейс. Обычно устанавливается на основе &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; для класса и наличия функции (ей) в таблице. Однако классу, который обычно предоставляет этот интерфейс, может потребоваться избегать его в конкретном экземпляре. &amp;laquo;Ожидающий&amp;raquo; уровень должен делать это, когда он перемещается выше уровня, который не поддерживает интерфейс. ( В Perl &lt;code&gt;sv_gets()&lt;/code&gt; не ожидает , что потоки быстро &lt;code&gt;gets&lt;/code&gt; поведение к изменениям во время одного &amp;laquo;получить&amp;raquo;.)</target>
        </trans-unit>
        <trans-unit id="7a3d641c3fb98c37692677f17bfddfa4c0c2f88d" translate="yes" xml:space="preserve">
          <source>This integer normally starts off at a value of &lt;code&gt;1&lt;/code&gt; when a package stash is instantiated. Calling it on packages whose stashes do not exist at all will return &lt;code&gt;0&lt;/code&gt; . If a package stash is completely deleted (not a normal occurrence, but it can happen if someone does something like &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; ), the number will be reset to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; , depending on how completely the package was wiped out.</source>
          <target state="translated">Это целое число обычно начинается со значения &lt;code&gt;1&lt;/code&gt; при создании экземпляра хранилища пакета. Вызов этого пакета для пакетов, тайники которых вообще не существуют, вернет &lt;code&gt;0&lt;/code&gt; . Если тайник пакета полностью удален (это не является нормальным явлением, но это может произойти, если кто-то сделает что-то вроде &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; , число будет сброшено на &lt;code&gt;0&lt;/code&gt; или &lt;code&gt;1&lt;/code&gt; , в зависимости от того, насколько полностью был уничтожен пакет.</target>
        </trans-unit>
        <trans-unit id="737a7a5efcfd42959d110feeee676008fd682bf1" translate="yes" xml:space="preserve">
          <source>This interface allows sequential retrieval from the database. See &lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;dbopen&lt;/a&gt; for full details.</source>
          <target state="translated">Этот интерфейс позволяет осуществлять последовательный поиск из базы данных. См. &lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;Подробную&lt;/a&gt; информацию в dbopen .</target>
        </trans-unit>
        <trans-unit id="cd749bb331e8a5d590f7e5603f780fdc41010317" translate="yes" xml:space="preserve">
          <source>This interface is based on the work and comments of (in no particular order): Larry Wall, Robert Sanders, Dean Roehrich, Jeff Okamoto, Anno Siegel, Thomas Neumann, Paul Marquess, Charles Bailey, myself and others.</source>
          <target state="translated">Этот интерфейс основан на работе и комментариях (не в конкретном порядке):Ларри Уолла,Роберта Сандерса,декана Ройриха,Джеффа Окамото,Анно Зигеля,Томаса Ноймана,Поля Маркеса,Чарльза Бейли,меня и других.</target>
        </trans-unit>
        <trans-unit id="491fa4fd719b046d8f39f03410b7b5fb6254dca4" translate="yes" xml:space="preserve">
          <source>This interface is handled slightly differently in &lt;b&gt;DB_File&lt;/b&gt;. Here is an equivalent call using &lt;b&gt;DB_File&lt;/b&gt;:</source>
          <target state="translated">Этот интерфейс немного по-другому обрабатывается в &lt;b&gt;DB_File&lt;/b&gt; . Вот эквивалентный вызов с использованием &lt;b&gt;DB_File&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="49d69eea5115951977bf6e8780a64dd29c4226c4" translate="yes" xml:space="preserve">
          <source>This interpolation combines with the facts that the opening and closing parentheses are optional (except when necessary for precedence) and lists may end with an optional comma to mean that multiple commas within lists are legal syntax. The list &lt;code&gt;1,,3&lt;/code&gt; is a concatenation of two lists, &lt;code&gt;1,&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; , the first of which ends with that optional comma. &lt;code&gt;1,,3&lt;/code&gt; is &lt;code&gt;(1,),(3)&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; (And similarly for &lt;code&gt;1,,,3&lt;/code&gt; is &lt;code&gt;(1,),(,),3&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; and so on.) Not that we'd advise you to use this obfuscation.</source>
          <target state="translated">Эта интерполяция сочетается с тем фактом, что открывающая и закрывающая круглые скобки являются необязательными (кроме случаев, когда это необходимо для приоритета), а списки могут заканчиваться необязательной запятой, что означает, что несколько запятых в списках являются допустимым синтаксисом. Список &lt;code&gt;1,,3&lt;/code&gt; ,, 3 представляет собой объединение двух списков &lt;code&gt;1,&lt;/code&gt; и &lt;code&gt;3&lt;/code&gt; , первый из которых заканчивается этой необязательной запятой. &lt;code&gt;1,,3&lt;/code&gt; равно &lt;code&gt;(1,),(3)&lt;/code&gt; равно &lt;code&gt;1,3&lt;/code&gt; (И аналогично для &lt;code&gt;1,,,3&lt;/code&gt; равно &lt;code&gt;(1,),(,),3&lt;/code&gt; равно &lt;code&gt;1,3&lt;/code&gt; и т. Д.) Не то, чтобы мы ' Советую использовать эту обфускацию.</target>
        </trans-unit>
        <trans-unit id="ff7fca560bcccd2ead2613d40d2441ab2644441f" translate="yes" xml:space="preserve">
          <source>This introduces another problem: what if you just know that your data is UTF-16, but you don't know which endianness? Byte Order Marks, or &lt;code&gt;BOM&lt;/code&gt; 's, are a solution to this. A special character has been reserved in Unicode to function as a byte order marker: the character with the code point &lt;code&gt;U+FEFF&lt;/code&gt; is the &lt;code&gt;BOM&lt;/code&gt; .</source>
          <target state="translated">Это создает другую проблему: что, если вы просто знаете, что ваши данные имеют формат UTF-16, но не знаете, какой порядок байтов? Метки порядка байтов, или &lt;code&gt;BOM&lt;/code&gt; , являются решением этой проблемы. В Unicode зарезервирован специальный символ для работы в качестве маркера порядка байтов: символ с кодовой точкой &lt;code&gt;U+FEFF&lt;/code&gt; является &lt;code&gt;BOM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d98b577e394b09ee4f02d9918217111200cab8f" translate="yes" xml:space="preserve">
          <source>This introductory document does not aim to be complete. It does not even aim to be entirely accurate. In some cases perfection has been sacrificed in the goal of getting the general idea across. You are</source>
          <target state="translated">Этот вводный документ не претендует на полноту.Он даже не стремится быть полностью точным.В некоторых случаях совершенство приносится в жертву ради того,чтобы донести общую идею.Вы</target>
        </trans-unit>
        <trans-unit id="2b646e06b5c6dfedf386d47b899ec3f8734e765d" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;not&lt;/b&gt; the reverse of PerlIO_exportFILE().</source>
          <target state="translated">Это &lt;b&gt;не&lt;/b&gt; обратное PerlIO_exportFILE ().</target>
        </trans-unit>
        <trans-unit id="a5d69879cdfbe586062188f3d7ff676e78424d35" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;very&lt;/b&gt; similar to previous, only the first two ops differ. This subroutine rendering is more representative, insofar as a single main program will have many subs.</source>
          <target state="translated">Это &lt;b&gt;очень&lt;/b&gt; похоже на предыдущее, только первые две операции отличаются. Эта подпрограмма рендеринга более репрезентативна, поскольку одна основная программа будет иметь много подпрограмм.</target>
        </trans-unit>
        <trans-unit id="13a9fc12865137f8c322a100d88693c3b3008c0d" translate="yes" xml:space="preserve">
          <source>This is Perl, so it does the exact right thing. It sees that you want to push &lt;code&gt;Athens&lt;/code&gt; onto an array that doesn't exist, so it helpfully makes a new, empty, anonymous array for you, installs it into &lt;code&gt;%table&lt;/code&gt; , and then pushes &lt;code&gt;Athens&lt;/code&gt; onto it. This is called 'autovivification'--bringing things to life automatically. Perl saw that the key wasn't in the hash, so it created a new hash entry automatically. Perl saw that you wanted to use the hash value as an array, so it created a new empty array and installed a reference to it in the hash automatically. And as usual, Perl made the array one element longer to hold the new city name.</source>
          <target state="translated">Это Perl, поэтому он делает все правильно. Он видит, что вы хотите поместить &lt;code&gt;Athens&lt;/code&gt; в массив, которого не существует, поэтому он услужливо создает для вас новый пустой анонимный массив, устанавливает его в &lt;code&gt;%table&lt;/code&gt; , а затем помещает в него &lt;code&gt;Athens&lt;/code&gt; . Это называется автовивификацией - автоматическое оживление вещей. Perl увидел, что ключа нет в хэше, поэтому он автоматически создал новую запись хэша. Perl увидел, что вы хотите использовать хеш-значение как массив, поэтому он создал новый пустой массив и автоматически установил ссылку на него в хеш-коде. И, как обычно, Perl сделал массив на один элемент длиннее, чтобы в нем содержалось новое название города.</target>
        </trans-unit>
        <trans-unit id="d199012301aebd153320803c30f339cb29b9c3f4" translate="yes" xml:space="preserve">
          <source>This is TRUE if the image store data in network order. This means that it was created with nstore() or similar.</source>
          <target state="translated">Это значение является TRUE,если изображение хранит данные в сетевом порядке.Это означает,что оно было создано с помощью nstore()или аналогичной функции.</target>
        </trans-unit>
        <trans-unit id="701541b651d14d9ce17a8309970ae17dc9d55c05" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to display Pod source as itself! Pretty Zen, huh?</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc отображать Pod source как сам по себе! Довольно дзен,да?</target>
        </trans-unit>
        <trans-unit id="a75770ef9b0c598ca7fde366202ade0c04715297" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man and &lt;code&gt;groff&lt;/code&gt; for reading Pod pages.</source>
          <target state="translated">Это &amp;laquo;подключаемый&amp;raquo; класс, который позволяет Perldoc использовать Pod :: Man и &lt;code&gt;groff&lt;/code&gt; для чтения страниц Pod.</target>
        </trans-unit>
        <trans-unit id="81393ce7a71c653a02bafc9503ad7f009bece819" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man as a formatter class.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Pod::Man как класс форматирования.</target>
        </trans-unit>
        <trans-unit id="62907aa2e6a91bf9a0b7a6c6e963db493d7938e3" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::Checker as a &quot;formatter&quot; class (or if that is not available, then Pod::Checker), to check for errors in a given Pod file.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Pod::Simple::Checker в качестве класса &quot;formatter&quot; (или,если он недоступен,то Pod::Checker),для проверки на ошибки в данном файле Pod.</target>
        </trans-unit>
        <trans-unit id="55e3a501ab6032afe89831dc532a3a24c547307d" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::RTF as a formatter class.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Pod::Simple::RTF в качестве класса форматирования.</target>
        </trans-unit>
        <trans-unit id="68678eb1c55adc089ba0d404634d06ee4b438a50" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::XMLOutStream as a formatter class.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Pod::Simple::XMLOutStream в качестве класса форматирования.</target>
        </trans-unit>
        <trans-unit id="e1aa800043dc8a94d0d283dacfd5ba2b12a78539" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Text as a formatter class.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Pod::Text как класс форматирования.</target>
        </trans-unit>
        <trans-unit id="dddce66063ab47a1230107d6a866110ade33c3fe" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Tk::Pod as a formatter class.</source>
          <target state="translated">Это &quot;плагин&quot; класс,который позволяет Perldoc использовать Tk::Pod в качестве класса форматирования.</target>
        </trans-unit>
        <trans-unit id="4275fe3ef141a55b62b40502070bf737ec2ea8ca" translate="yes" xml:space="preserve">
          <source>This is a &quot;postponed&quot; regular subexpression. It behaves in</source>
          <target state="translated">Это &quot;отложенное&quot; регулярное подвыражение.Оно ведет себя в</target>
        </trans-unit>
        <trans-unit id="a9ec1e3198488308c3643ad69f8d075d9b8f92de" translate="yes" xml:space="preserve">
          <source>This is a 'catch-all' method which returns true if any tests have currently failed, any TODO tests unexpectedly succeeded, or any parse errors occurred.</source>
          <target state="translated">Это метод &quot;catch-all&quot;,который возвращает true,если какие-либо тесты на данный момент не прошли,любые тесты TODO были неожиданно успешны,или возникли ошибки при разборе.</target>
        </trans-unit>
        <trans-unit id="f9b6bdcb215a6cedd90d3fc776185364f2309aa9" translate="yes" xml:space="preserve">
          <source>This is a CPAN module that has better error handling and more facilities than Open3.</source>
          <target state="translated">Это CPAN модуль,который имеет лучшую обработку ошибок и больше возможностей,чем Open3.</target>
        </trans-unit>
        <trans-unit id="b7d2a521ae98c293152277e05794dfa3dbb364fa" translate="yes" xml:space="preserve">
          <source>This is a Perl binding for the cross-platform wxWidgets toolkit ( &lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt; ). It works under Unix, Win32 and Mac OS X, using native widgets (Gtk under Unix). The interface follows the C++ interface closely, but the documentation is a little sparse for someone who doesn't know the library, mostly just referring you to the C++ documentation.</source>
          <target state="translated">Это привязка Perl для кроссплатформенного инструментария wxWidgets ( &lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt; ). Он работает под Unix, Win32 и Mac OS X, используя собственные виджеты (Gtk под Unix). Интерфейс точно соответствует интерфейсу C ++, но документация немного скудна для тех, кто не знаком с библиотекой, в основном просто отсылает вас к документации C ++.</target>
        </trans-unit>
        <trans-unit id="64369b0966513691c61b8897fc5c7b37a7f32789" translate="yes" xml:space="preserve">
          <source>This is a big step forward, and can give a threaded program quite a performance boost over non-threaded programs. Threads that block performing I/O, for example, won't block threads that are doing other things. Each process still has only one thread running at once, though, regardless of how many CPUs a system might have.</source>
          <target state="translated">Это большой шаг вперед,и может дать многопоточную программу довольно большой прирост производительности по сравнению с непотоковыми программами.Потоки,которые блокируют выполнение ввода/вывода,например,не будут блокировать потоки,которые делают другие вещи.Однако каждый процесс по-прежнему имеет только один поток,выполняющийся одновременно,независимо от того,сколько процессоров может быть в системе.</target>
        </trans-unit>
        <trans-unit id="e1c71251d2a2ccec8dd46781a0eb70dbaafe4b05" translate="yes" xml:space="preserve">
          <source>This is a bit tricky. You can't simply write the command like this:</source>
          <target state="translated">Это немного сложно.Нельзя просто так написать команду:</target>
        </trans-unit>
        <trans-unit id="9d5816967d821cb6be38c83ea72dd77eb458d174" translate="yes" xml:space="preserve">
          <source>This is a case of convergent evolution with Joshua Pritikin's &lt;a href=&quot;../test&quot;&gt;Test&lt;/a&gt; module. I was largely unaware of its existence when I'd first written my own &lt;code&gt;ok()&lt;/code&gt; routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems).</source>
          <target state="translated">Это случай конвергентной эволюции с Джошуа Pritikin в &lt;a href=&quot;../test&quot;&gt;Test&lt;/a&gt; модуля. Я почти не подозревал о его существовании, когда впервые написал свои собственные подпрограммы &lt;code&gt;ok()&lt;/code&gt; . Этот модуль существует, потому что я не могу понять, как легко вставить имена тестов в интерфейс Test (наряду с некоторыми другими проблемами).</target>
        </trans-unit>
        <trans-unit id="97fc5a87a825ec27b25306a412b0a1048b673845" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object and returns a reference to the new interior sequence object. It should be given two keyword arguments. The &lt;code&gt;-ldelim&lt;/code&gt; keyword indicates the corresponding left-delimiter of the interior sequence (e.g. '&amp;lt;'). The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding interior sequence command, such as &lt;code&gt;I&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; . The &lt;code&gt;-file&lt;/code&gt; and &lt;code&gt;-line&lt;/code&gt; keywords indicate the filename and line number corresponding to the beginning of the interior sequence. If the &lt;code&gt;$ptree&lt;/code&gt; argument is given, it must be the last argument, and it must be either string, or else an array-ref suitable for passing to &lt;b&gt;Pod::ParseTree::new&lt;/b&gt; (or it may be a reference to a Pod::ParseTree object).</source>
          <target state="translated">Это метод класса, который создает объект &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; и возвращает ссылку на новый объект внутренней последовательности. Ему следует указать два аргумента ключевого слова. &lt;code&gt;-ldelim&lt;/code&gt; ключевое слово указывает на соответствующий лево-разделитель внутренней последовательности (например , &amp;laquo;&amp;lt;&amp;raquo;). &lt;code&gt;-name&lt;/code&gt; ключевое слово указывает имя соответствующего внутренней последовательности команд, таких как &lt;code&gt;I&lt;/code&gt; или &lt;code&gt;B&lt;/code&gt; или &lt;code&gt;C&lt;/code&gt; . &lt;code&gt;-file&lt;/code&gt; и &lt;code&gt;-line&lt;/code&gt; ключевые слова указывают имя файла и номер строки , соответствующей началу внутренней последовательности. Если &lt;code&gt;$ptree&lt;/code&gt; задан аргумент, он должен быть последним аргументом, и он должен быть либо строкой, либо ссылкой на массив, подходящей для передачи в &lt;b&gt;Pod :: ParseTree :: new&lt;/b&gt; (или это может быть ссылка на объект Pod :: ParseTree) .</target>
        </trans-unit>
        <trans-unit id="29f55cb5b171aa91fa3174d7342b227ed1f417e9" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object and returns a reference to the new paragraph object. It may be given one or two keyword arguments. The &lt;code&gt;-text&lt;/code&gt; keyword indicates the corresponding text of the POD paragraph. The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding POD command, such as &lt;code&gt;head1&lt;/code&gt; or &lt;code&gt;item&lt;/code&gt; (it should</source>
          <target state="translated">Это метод класса, который создает объект &lt;code&gt;Pod::Paragraph&lt;/code&gt; и возвращает ссылку на новый объект абзаца. Ему может быть дан один или два аргумента ключевого слова. &lt;code&gt;-text&lt;/code&gt; ключевое слово указывает соответствующий текст пункта POD. &lt;code&gt;-name&lt;/code&gt; ключевое слово указывает имя соответствующей команды POD, например &lt;code&gt;head1&lt;/code&gt; или &lt;code&gt;item&lt;/code&gt; (он должен</target>
        </trans-unit>
        <trans-unit id="331988b0033be159e38f1f3db9e7086fd5ac78d2" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Parse_tree&lt;/code&gt; object and returns a reference to the new parse-tree. If a single-argument is given, it must be a reference to an array, and is used to initialize the root (top) of the parse tree.</source>
          <target state="translated">Это метод класса, который &lt;code&gt;Pod::Parse_tree&lt;/code&gt; объект Pod :: Parse_tree и возвращает ссылку на новое дерево синтаксического анализа. Если указан единственный аргумент, он должен быть ссылкой на массив и использоваться для инициализации корня (вершины) дерева синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="135e61a3e6ed1b5dcdd255926dda22779c807d83" translate="yes" xml:space="preserve">
          <source>This is a classic race condition: you take two steps to do something which must be done in one. That's why computer hardware provides an atomic test-and-set instruction. In theory, this &quot;ought&quot; to work:</source>
          <target state="translated">Это классическое состояние гонки:вы делаете два шага,чтобы сделать что-то,что должно быть сделано в одном.Вот почему компьютерное оборудование обеспечивает атомное тестирование и установку инструкций.Теоретически,это &quot;должно&quot; работать:</target>
        </trans-unit>
        <trans-unit id="06ed0aa0bcc2d08b1ae41c2e1fbf2ac9199a80b7" translate="yes" xml:space="preserve">
          <source>This is a cleanup variable for try test programs. Internal Configure use only.</source>
          <target state="translated">Это переменная очистки для пробных тестовых программ.Использовать только внутреннюю настройку.</target>
        </trans-unit>
        <trans-unit id="15d31d32837b2199fecd9abd8b0259d5c2027995" translate="yes" xml:space="preserve">
          <source>This is a collection of words of wisdom for a Perl porter; some of it is only useful to the pumpkin holder, but most of it applies to anyone wanting to go about Perl development.</source>
          <target state="translated">Это сборник слов мудрости для носильщика Perl;некоторые из них полезны только для носильщика тыквы,но большая их часть применима к любому,кто хочет заняться разработкой Perl.</target>
        </trans-unit>
        <trans-unit id="78a03e08bc2123708a34ec2db4804cf0d2100751" translate="yes" xml:space="preserve">
          <source>This is a common error when trying to build perl on Solaris 2.6 with a gcc installation from Solaris 2.5 or 2.5.1. The Solaris header files changed, so you need to update your gcc installation. You can either rerun the fixincludes script from gcc or take the opportunity to update your gcc installation.</source>
          <target state="translated">Это распространенная ошибка при попытке построить perl на Solaris 2.6 с установкой gcc из Solaris 2.5 или 2.5.1.Заголовочные файлы Solaris изменились,поэтому необходимо обновить установку gcc.Вы можете либо перезапустить скрипт fixincludes из gcc,либо воспользоваться возможностью обновить вашу установку gcc.</target>
        </trans-unit>
        <trans-unit id="ff129a99820711b57abb25f1b58ba7136b7e8cde" translate="yes" xml:space="preserve">
          <source>This is a difficult question to answer, and the best answer is only a guess.</source>
          <target state="translated">На этот вопрос трудно ответить,а лучший ответ-только догадка.</target>
        </trans-unit>
        <trans-unit id="999f0dc4cf91e26f969aecc31f8b8b85ae8a6af3" translate="yes" xml:space="preserve">
          <source>This is a factory class that takes a &lt;a href=&quot;source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and runs it through all the registered &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to see which one should handle the source.</source>
          <target state="translated">Это фабричный класс, который принимает &lt;a href=&quot;source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; и запускает его через все зарегистрированные &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler,&lt;/a&gt; чтобы увидеть, какой из них должен обрабатывать источник.</target>
        </trans-unit>
        <trans-unit id="c43e76a8b7a7a6439251d5db4f28f61ba4f7ca79" translate="yes" xml:space="preserve">
          <source>This is a fancy bracketed character class that can be used for more readable and less error-prone classes, and to perform set operations, such as intersection. An example is</source>
          <target state="translated">Это класс с причудливыми символьными скобками,который можно использовать для более читабельных и менее подверженных ошибкам классов,а также для выполнения заданных операций,таких как пересечение.Примером может служить</target>
        </trans-unit>
        <trans-unit id="bd5b0b089eff91377cede66c47419fc9845c1784" translate="yes" xml:space="preserve">
          <source>This is a fixed variant of T_HVREF that decrements the refcount appropriately when returning an HV*. Introduced in perl 5.15.4.</source>
          <target state="translated">Это фиксированный вариант T_HVREF,который при возврате HV*соответствующим образом уменьшает пересчет.Введено в п.5.15.4.</target>
        </trans-unit>
        <trans-unit id="926e4c62112da36d18d2c1c89330bc60c9162eb2" translate="yes" xml:space="preserve">
          <source>This is a fully ported Perl for OS/390 Version 2 Release 3, 5, 6, 7, 8, and 9. It may work on other versions or releases, but those are the ones we've tested it on.</source>
          <target state="translated">Это полностью портированный Perl для OS/390 версии 2,версии 3,5,6,7,8 и 9.Он может работать на других версиях или релизах,но это те,на которых мы его тестировали.</target>
        </trans-unit>
        <trans-unit id="372ffff7fde6d07d99e54e14755b9d58626070f2" translate="yes" xml:space="preserve">
          <source>This is a function which adds a string, &lt;code&gt;ptr&lt;/code&gt; , of length &lt;code&gt;len&lt;/code&gt; onto the end of the PV stored in &lt;code&gt;sv&lt;/code&gt; . The first thing we do in line 6 is make sure that the SV &lt;b&gt;has&lt;/b&gt; a valid PV, by calling the &lt;code&gt;SvPV_force&lt;/code&gt; macro to force a PV. As a side effect, &lt;code&gt;tlen&lt;/code&gt; gets set to the current value of the PV, and the PV itself is returned to &lt;code&gt;junk&lt;/code&gt; .</source>
          <target state="translated">Это функция, которая добавляет строку &lt;code&gt;ptr&lt;/code&gt; длины &lt;code&gt;len&lt;/code&gt; в конец PV, хранящегося в &lt;code&gt;sv&lt;/code&gt; . Первое, что мы делаем в строке 6, - это &lt;code&gt;SvPV_force&lt;/code&gt; , что SV &lt;b&gt;имеет&lt;/b&gt; допустимый PV, вызывая макрос SvPV_force, чтобы принудительно установить PV. В качестве побочного эффекта &lt;code&gt;tlen&lt;/code&gt; устанавливается на текущее значение PV, а сам PV возвращается в &lt;code&gt;junk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2774055b00e3419620eb5d95ca0978a88958d21c" translate="yes" xml:space="preserve">
          <source>This is a fundamental limitation of the way hashes are constructed in Perl. The error messages produced when this happens will often be quite cryptic -- in the worst case there may be none at all, and you'll only later find that something is broken.</source>
          <target state="translated">Это является фундаментальным ограничением того,как строятся хэши на Perl.Сообщения об ошибках,выдаваемые при этом,часто будут довольно загадочными-в худшем случае их может не быть вообще,и только позже вы обнаружите,что что-то сломано.</target>
        </trans-unit>
        <trans-unit id="5634f9ec91b3e104474c739e05fd80458193ebf9" translate="yes" xml:space="preserve">
          <source>This is a get-or-set method for the compartment's operator mask.</source>
          <target state="translated">Это метод получения или установки маски оператора отсека.</target>
        </trans-unit>
        <trans-unit id="e894d85c5e9df5228e61b20283457ef4058bfbeb" translate="yes" xml:space="preserve">
          <source>This is a good introduction and will direct you towards other man pages that may interest you.</source>
          <target state="translated">Это хорошее введение и направит вас к другим страницам man,которые могут вас заинтересовать.</target>
        </trans-unit>
        <trans-unit id="8c7d928409a2a83d36eb046953e31000e8fced30" translate="yes" xml:space="preserve">
          <source>This is a hash reference which contains a template as explained in the &lt;code&gt;SYNOPSIS&lt;/code&gt; and &lt;code&gt;Template&lt;/code&gt; section.</source>
          <target state="translated">Это ссылка на хэш, которая содержит шаблон, как описано в разделе &lt;code&gt;SYNOPSIS&lt;/code&gt; и &lt;code&gt;Template&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abdb64e67c36b80a4a66af77ecfc2b1aa4e68e20" translate="yes" xml:space="preserve">
          <source>This is a hash used internally to track named capture groups and their offsets. The keys are the names of the buffers the values are dualvars, with the IV slot holding the number of buffers with the given name and the pv being an embedded array of I32. The values may also be contained independently in the data array in cases where named backreferences are used.</source>
          <target state="translated">Это хэш-функция,используемая внутренне для отслеживания именованных групп захвата и их смещений.Ключами являются имена буферов,значения которых являются двойными,при этом IV слот содержит количество буферов с заданным именем,а pv является встроенным массивом I32.Значения могут также независимо содержаться в массиве данных в тех случаях,когда используются именованные обратные ссылки.</target>
        </trans-unit>
        <trans-unit id="ee128cd6218c9f00f0c878c04ed7c1d2ba1c0dcc" translate="yes" xml:space="preserve">
          <source>This is a hashref of module/version pairs. The version indicates the minimum version to load. If no version is provided, any version is assumed to be good enough.</source>
          <target state="translated">Это хэш-файл пар модуль/версия.Версия указывает минимальную загружаемую версию.Если версия не предоставляется,считается,что любая версия достаточно хороша.</target>
        </trans-unit>
        <trans-unit id="ea245b58697360367e48479db117e287399d341e" translate="yes" xml:space="preserve">
          <source>This is a hashref registering what modules/utilities were known to fail for fetching files (mostly because they weren't installed).</source>
          <target state="translated">Это хэш-файл,регистрирующий,какие модули/утилиты не смогли получить файлы (в основном потому,что они не были установлены).</target>
        </trans-unit>
        <trans-unit id="9eb7a0a93db9a83c1c6303ceaf2e042280cc43c1" translate="yes" xml:space="preserve">
          <source>This is a list of questions and answers about Unicode in Perl, intended to be read after &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;.</source>
          <target state="translated">Это список вопросов и ответов о Unicode в Perl, предназначенный для чтения после &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36d9a4f8cf6a08db2c492aa7d56c16aa12a7c5d3" translate="yes" xml:space="preserve">
          <source>This is a little bit more complex in the case of UTF-8, see what &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; does with &lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;.</source>
          <target state="translated">В случае UTF-8 это немного сложнее, посмотрите, что &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; делает с &lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2ee3c54bcb807a66fe7b80e3caf8861bbb44a5c" translate="yes" xml:space="preserve">
          <source>This is a message from your shell telling you that the command 'ar' was not found. You need to check your PATH environment variable to make sure that it includes the directory with the 'ar' command. This is a common problem on Solaris, where 'ar' is in the /usr/ccs/bin/ directory.</source>
          <target state="translated">Это сообщение из вашей оболочки,говорящее о том,что команда 'ar' не была найдена.Вам нужно проверить переменную окружения PATH,чтобы убедиться,что она включает каталог с помощью команды 'ar'.Это распространенная проблема в Solaris,где 'ar' находится в каталоге /usr/ccs/bin/.</target>
        </trans-unit>
        <trans-unit id="7be9582165bd5c245d33269d0775adef5b86c2d1" translate="yes" xml:space="preserve">
          <source>This is a misleadingly-named synonym for &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;. On ASCII-ish platforms, the name isn't misleading: the ASCII-range characters are exactly the UTF-8 invariants. But EBCDIC machines have more invariants than just the ASCII characters, so &lt;code&gt;is_invariant_string&lt;/code&gt; is preferred.</source>
          <target state="translated">Это &lt;a href=&quot;#is_invariant_string&quot;&gt;неверно&lt;/a&gt; названный синоним is_invariant_string . На платформах типа ASCII это имя не вводит в заблуждение: символы диапазона ASCII являются в точности инвариантами UTF-8. Но машины EBCDIC имеют больше инвариантов, чем просто символы ASCII, поэтому предпочтительнее &lt;code&gt;is_invariant_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de824f4204bca39b6173554bd682eeaf59e1fe59" translate="yes" xml:space="preserve">
          <source>This is a no-op on Win32.</source>
          <target state="translated">На Win32 не работает.</target>
        </trans-unit>
        <trans-unit id="7c97b390951ae9bd8a25bf05c714cdf4d686ebf3" translate="yes" xml:space="preserve">
          <source>This is a noop provided for completeness.</source>
          <target state="translated">Это ноутбук,предусмотренный для полноты.</target>
        </trans-unit>
        <trans-unit id="09b98a2fdc86ae4c3444a314c0304e18f2968e2d" translate="yes" xml:space="preserve">
          <source>This is a placeholder option.</source>
          <target state="translated">Это вариант с заполнителем.</target>
        </trans-unit>
        <trans-unit id="309f4be6a68d1ca1ce9f563923f5229fee286990" translate="yes" xml:space="preserve">
          <source>This is a ported perl for the POSIX subsystem in BS2000 VERSION OSD V3.1A or later. It may work on other versions, but we started porting and testing it with 3.1A and are currently using Version V4.0A.</source>
          <target state="translated">Это портированный perl для подсистемы POSIX в BS2000 VERSION OSD V3.1A или более поздней версии.Он может работать и на других версиях,но мы начали портировать и тестировать его с 3.1A и в настоящее время используем версию V4.0A.</target>
        </trans-unit>
        <trans-unit id="639c8df7e83fc87480520c466044037ac91d5b6f" translate="yes" xml:space="preserve">
          <source>This is a protocol used by some firewall ftp proxies. It is used to authorise the user to send data out. If both arguments are not specified then &lt;code&gt;authorize&lt;/code&gt; uses &lt;code&gt;Net::Netrc&lt;/code&gt; to do a lookup.</source>
          <target state="translated">Это протокол, используемый некоторыми ftp-прокси межсетевого экрана. Он используется для авторизации пользователя на отправку данных. Если оба аргумента не указаны, &lt;code&gt;authorize&lt;/code&gt; использует &lt;code&gt;Net::Netrc&lt;/code&gt; для поиска.</target>
        </trans-unit>
        <trans-unit id="35b9db060b8091b2af5afc80f2eb9e19755899c4" translate="yes" xml:space="preserve">
          <source>This is a quick reference to Perl's regular expressions. For full information see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, as well as the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section in this document.</source>
          <target state="translated">Это краткий справочник по регулярным выражениям Perl. Для получения полной информации см. &lt;a href=&quot;perlre&quot;&gt;Perlre&lt;/a&gt; и &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; , а также раздел СМОТРИ &lt;a href=&quot;#SEE-ALSO&quot;&gt;ТАКЖЕ&lt;/a&gt; в этом документе.</target>
        </trans-unit>
        <trans-unit id="d47823b6d4d1bf90c0ec374b8fb409bfdb682e4b" translate="yes" xml:space="preserve">
          <source>This is a re-implementation of stdio-like buffering written as a PerlIO layer. As such it will call whatever layer is below it for its operations, typically &lt;code&gt;:unix&lt;/code&gt; .</source>
          <target state="translated">Это повторная реализация буферизации, подобной stdio, написанная как слой PerlIO. Таким образом, он будет вызывать для своих операций любой уровень, расположенный ниже, обычно &lt;code&gt;:unix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f72833b07fdaaa27353877ad8c40f0425a069181" translate="yes" xml:space="preserve">
          <source>This is a reference card for people who are familiar with the C library and who want to do things the Perl way; to tell them which functions they ought to use instead of the more normal C functions.</source>
          <target state="translated">Это справочная карточка для тех,кто знаком с библиотекой Си и хочет делать вещи на Perl;сказать им,какие функции они должны использовать вместо более обычных функций Си.</target>
        </trans-unit>
        <trans-unit id="c471b4ac155563a00fba4ae9a0887cfc3abb5085" translate="yes" xml:space="preserve">
          <source>This is a reference to a hash of named arguments which need checking.</source>
          <target state="translated">Это ссылка на хэш именованных аргументов,которые необходимо проверить.</target>
        </trans-unit>
        <trans-unit id="3afd1b8fae5b72ccc5141dfe79c691921d5825d2" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Parser, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">Это замена более раннего модуля Pod::Text,написанного Томом Кристиансеном.Он имеет обновленный интерфейс,так как теперь использует Pod::Parser,но интерфейс,приблизительно совместимый со старой функцией Pod::Text::pod2text(),все еще доступен.Тем не менее,пожалуйста,перейдите на новое соглашение о вызовах.</target>
        </trans-unit>
        <trans-unit id="c47cbb12fb76c06a9104b6dcce71cb1371c44a36" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Simple, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">Это замена более раннего модуля Pod::Text,написанного Томом Кристиансеном.Он имеет обновленный интерфейс,так как теперь использует Pod::Simple,но интерфейс,грубо совместимый со старой функцией Pod::Text::pod2text(),все еще доступен.Однако,пожалуйста,перейдите к новому соглашению о вызовах.</target>
        </trans-unit>
        <trans-unit id="3b47b707c5aa2685e694887a6a732f13742fa45a" translate="yes" xml:space="preserve">
          <source>This is a runtime equivalent to &lt;code&gt;\N{...}&lt;/code&gt; .</source>
          <target state="translated">Это среда выполнения, эквивалентная &lt;code&gt;\N{...}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7a879136a0009e169d98349a2353c9b002b70d9" translate="yes" xml:space="preserve">
          <source>This is a set of four-letter (capitalized) codes from ISO 15924 such as 'Phnx' for Phoenician. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Это набор четырехбуквенных (с заглавными буквами)кодов из ISO 15924,таких как 'Phnx' для финикийского языка.Он также включает в себя дополнения к этому набору,включенному в языковой реестр IANA.</target>
        </trans-unit>
        <trans-unit id="6ef813cd850a9f27ba1c4663d4e71f25b5053fb3" translate="yes" xml:space="preserve">
          <source>This is a set of three-digit numeric codes from ISO 15924 such as 115 for Phoenician.</source>
          <target state="translated">Это набор трехзначных цифровых кодов из стандарта ISO 15924,таких как 115 для финикийского.</target>
        </trans-unit>
        <trans-unit id="349f283b1feb640d3ec35d62b03e25d6ddada207" translate="yes" xml:space="preserve">
          <source>This is a set of three-letter (uppercase) codes from ISO 4217 such as EUR for Euro.</source>
          <target state="translated">Это набор трехбуквенных (заглавных)кодов из стандарта ISO 4217,таких как EUR для евро.</target>
        </trans-unit>
        <trans-unit id="6241a7679be2105aef445a1326e4d5af9e0ed08e" translate="yes" xml:space="preserve">
          <source>This is a short tutorial on writing a simple module with MakeMaker. It's really not that hard.</source>
          <target state="translated">Это краткое руководство по написанию простого модуля с помощью MakeMaker.На самом деле это не так уж и сложно.</target>
        </trans-unit>
        <trans-unit id="53100bf0748f5ba489bc4dc460d2dfa8f3afc641" translate="yes" xml:space="preserve">
          <source>This is a short way of setting &lt;code&gt;gnu_compat&lt;/code&gt;&lt;code&gt;bundling&lt;/code&gt;&lt;code&gt;permute&lt;/code&gt;&lt;code&gt;no_getopt_compat&lt;/code&gt; . With &lt;code&gt;gnu_getopt&lt;/code&gt; , command line handling should be fully compatible with GNU getopt_long().</source>
          <target state="translated">Это короткий путь установки &lt;code&gt;gnu_compat&lt;/code&gt; &lt;code&gt;bundling&lt;/code&gt; &lt;code&gt;permute&lt;/code&gt; &lt;code&gt;no_getopt_compat&lt;/code&gt; . С &lt;code&gt;gnu_getopt&lt;/code&gt; обработка командной строки должна быть полностью совместима с GNU getopt_long ().</target>
        </trans-unit>
        <trans-unit id="7af9997becadfe87d824ab8762ffccd7719bb2b4" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt;</source>
          <target state="translated">Это ярлык для &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="588934f1b5f409b7ed4ee0102675e3e7a80e417d" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt;</source>
          <target state="translated">Это ярлык для &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf3172ad5af1d75bb916c8179d00c2eb32b1726b" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt;</source>
          <target state="translated">Это ярлык для &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14414929d404b298096e05330ae3a552582cc596" translate="yes" xml:space="preserve">
          <source>This is a shortcut method for creating a new parser object, setting the output handle to STDOUT, and then processing the specified file (or filehandle, or in-memory document). This is handy for one-liners like this:</source>
          <target state="translated">Это быстрый способ создания нового объекта парсера,установки выходной рукоятки в STDOUT,а затем обработки указанного файла (или файловой рукоятки,или документа в памяти).Это удобно для односложных файлов:</target>
        </trans-unit>
        <trans-unit id="dcc6d2562c6f7206f328c3550bdc5e8e52460de3" translate="yes" xml:space="preserve">
          <source>This is a side-effect of &lt;code&gt;$^W&lt;/code&gt; being dynamically scoped.</source>
          <target state="translated">Это побочный эффект динамической области видимости &lt;code&gt;$^W&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fa6df25c130c949bab77362ff50f938867d104d" translate="yes" xml:space="preserve">
          <source>This is a simple base class used by &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; to store objects that represent the current bit of test output data from TAP (usually a single line). Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Это простой базовый класс, используемый &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; для хранения объектов, представляющих текущий бит тестовых выходных данных из TAP (обычно это одна строка). Если вы не создаете подклассы, вам, вероятно, не нужно будет использовать этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="5a6a517a000eee7c9d8650e790b06bace86ece1d" translate="yes" xml:space="preserve">
          <source>This is a simple factory class which returns a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass representing the current bit of test data from TAP (usually a single line). It is used primarily by &lt;a href=&quot;grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;. Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Это простой фабричный класс, который возвращает подкласс &lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result,&lt;/a&gt; представляющий текущий бит тестовых данных из TAP (обычно это одна строка). Он используется в основном &lt;a href=&quot;grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt; . Если вы не создаете подклассы, вам, вероятно, не нужно будет использовать этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="ae7e075e46130a389abcce2b8eca77b2b0799334" translate="yes" xml:space="preserve">
          <source>This is a simple iterator base class that defines &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;'s iterator API. Iterators are typically created from &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s.</source>
          <target state="translated">Это простой базовый класс итератора, который определяет API итератора &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Итераторы обычно создаются из &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="3ef2b28fd5eff705f1f406ac6e66e9bba64a8d81" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for arrays of scalar content, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Это простая оболочка итератора для массивов скалярного содержимого, используемая &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Если вы не пишете плагин или подкласс, вам, вероятно, не нужно будет использовать этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="6211175f40b02f3bcb25615dc63d424f5b04b85e" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for executing external processes, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Это простая оболочка итератора для выполнения внешних процессов, используемая &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Если вы не пишете плагин или подкласс, вам, вероятно, не нужно будет использовать этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="08f74f820359ec13407ecd95ebc00861df2faa4a" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for reading from filehandles, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Это простая оболочка итератора для чтения из дескрипторов файлов, используемая &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Если вы не пишете плагин или подкласс, вам, вероятно, не нужно будет использовать этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="fb6d528be7b9b50f443385c12d7c3581d3c5b271" translate="yes" xml:space="preserve">
          <source>This is a simple test harness which allows tests to be run and results automatically aggregated and output to STDOUT.</source>
          <target state="translated">Это простой испытательный жгут,который позволяет запускать тесты и автоматически агрегировать результаты и выводить их в STDOUT.</target>
        </trans-unit>
        <trans-unit id="94c2e1c3d42721757938806d86cea256f2130297" translate="yes" xml:space="preserve">
          <source>This is a small simple module which simplifies the manipulation of @INC at compile time.</source>
          <target state="translated">Это небольшой простой модуль,который упрощает манипуляции с @INC во время компиляции.</target>
        </trans-unit>
        <trans-unit id="ed45414649005cf46b9b142e78787c7d0efdd654" translate="yes" xml:space="preserve">
          <source>This is a standard message issued by OS/2 applications. *nix applications die in silence. It is considered to be a feature. One can easily disable this by appropriate sighandlers.</source>
          <target state="translated">Это стандартное сообщение,выдаваемое приложениями OS/2.*никс-приложения умирают в тишине.Это считается особенностью.Это можно легко отключить с помощью соответствующих переписчиков.</target>
        </trans-unit>
        <trans-unit id="ae30c10c2c1eb9a5c4373e69ebda02e4f56fd6ac" translate="yes" xml:space="preserve">
          <source>This is a static function and is defined as &lt;code&gt;STATIC S_whatever&lt;/code&gt; , and usually called within the sources as &lt;code&gt;whatever(...)&lt;/code&gt; .</source>
          <target state="translated">Это статическая функция, она определяется как &lt;code&gt;STATIC S_whatever&lt;/code&gt; и обычно вызывается в источниках как something &lt;code&gt;whatever(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93db2ec99a46178540e6d933d3db3e813cba4109" translate="yes" xml:space="preserve">
          <source>This is a statically linked &lt;code&gt;a.out&lt;/code&gt; -style executable. It cannot load dynamic Perl extensions. The executable supplied in binary distributions has a lot of extensions prebuilt, thus the above restriction is important only if you use custom-built extensions. This executable is a VIO application.</source>
          <target state="translated">Это статически связанный исполняемый файл в стиле &lt;code&gt;a.out&lt;/code&gt; . Он не может загружать динамические расширения Perl. Исполняемый файл, поставляемый в двоичных дистрибутивах, имеет множество предварительно созданных расширений, поэтому указанное выше ограничение важно только в том случае, если вы используете специальные расширения. Этот исполняемый файл представляет собой приложение VIO.</target>
        </trans-unit>
        <trans-unit id="fc094e72af8b9d6622201511120df9125d5e32ff" translate="yes" xml:space="preserve">
          <source>This is a string combining version, subversion and perl_patchlevel (if perl_patchlevel is non-zero). It is typically something like 'version 7 subversion 1' or 'version 7 subversion 1 patchlevel 11224' It is computed here to avoid duplication of code in</source>
          <target state="translated">Это строка,объединяющая версию,субверсию и уровень perl_patch (если уровень perl_patch не равен нулю).Обычно это что-то вроде 'версии 7 subversion 1' или 'версии 7 subversion 1 patchlevel 11224'.Это вычислено здесь,чтобы избежать дублирования кода в</target>
        </trans-unit>
        <trans-unit id="344924719b1bae83eead5b685f2904260f7cb31e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a YAML block is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен при обнаружении блока YAML.</target>
        </trans-unit>
        <trans-unit id="cf06d3cd2a668f16a1a9ea1434ebed8459984ced" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a bail out line is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен, если будет обнаружена линия аварийного выхода.</target>
        </trans-unit>
        <trans-unit id="1c79fb77a91aa29bad4fe0d58e746157c12b1af2" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a comment line is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен, если встретится строка комментария.</target>
        </trans-unit>
        <trans-unit id="f5e73059f9980ac5f029fc80717ab9da6cff6341" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a plan line is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Маркер этого класса будет возвращен, если встретится линия плана.</target>
        </trans-unit>
        <trans-unit id="dc05d4de16b8c5b025bf96846c216318ce2e7788" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a pragma is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен, если встретится прагма.</target>
        </trans-unit>
        <trans-unit id="173909c91c915dbe5ae4e1761f6ce3015f27ac8e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a test line is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен при обнаружении тестовой строки.</target>
        </trans-unit>
        <trans-unit id="d99a6f5c44525e8196b8a9f8f432a4c8297fe174" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a version line is encountered.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен, если встретится строка версии.</target>
        </trans-unit>
        <trans-unit id="f9dc0dfab2b15f7dcded6106f389d289ed7b45a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if the parser does not recognize the token line. For example:</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Токен этого класса будет возвращен, если парсер не распознает строку токена. Например:</target>
        </trans-unit>
        <trans-unit id="ed4cd1012a41fb5a1a7060605167f8be93252008" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;../simple&quot;&gt;Pod :: Simple&lt;/a&gt; и наследует все его методы.</target>
        </trans-unit>
        <trans-unit id="81afca9fe5e8caf5fd548b6ee9f92134f9dc21dc" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. The implementation is entirely different than &lt;a href=&quot;html&quot;&gt;Pod::Simple::HTML&lt;/a&gt;, but it largely preserves the same interface.</source>
          <target state="translated">Это подкласс &lt;a href=&quot;methody&quot;&gt;Pod :: Simple :: Methody&lt;/a&gt; и наследует все его методы. Реализация полностью отличается от &lt;a href=&quot;html&quot;&gt;Pod :: Simple :: HTML&lt;/a&gt; , но в значительной степени сохраняет тот же интерфейс.</target>
        </trans-unit>
        <trans-unit id="5a42087b4a78a20207066122ca4141600c24be72" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt; and inherits all its methods (and options).</source>
          <target state="translated">Это подкласс &lt;a href=&quot;pullparser&quot;&gt;Pod :: Simple :: PullParser&lt;/a&gt; и наследует все его методы (и параметры).</target>
        </trans-unit>
        <trans-unit id="ea32c34eae791ae221ac4a3cce2869532666d30e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparsertoken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt; and inherits all its methods, and adds these methods:</source>
          <target state="translated">Это подкласс &lt;a href=&quot;pullparsertoken&quot;&gt;Pod :: Simple :: PullParserToken,&lt;/a&gt; наследует все его методы и добавляет следующие методы:</target>
        </trans-unit>
        <trans-unit id="aa9cce04d90d56b725964eab73e0fca5ac743d29" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for AIX.</source>
          <target state="translated">Это подкласс ExtUtils::MM_Unix,который содержит функционал для AIX.</target>
        </trans-unit>
        <trans-unit id="0d4a1a4cfdafa1cb09a4fb89fe42af2c7616286a" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for DOS.</source>
          <target state="translated">Это подкласс ExtUtils::MM_Unix,который содержит функционал для DOS.</target>
        </trans-unit>
        <trans-unit id="1586bedfb51abdc0ca225f9c3db5c388bf3fe7c7" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for QNX.</source>
          <target state="translated">Это подкласс ExtUtils::MM_Unix,который содержит функциональность для QNX.</target>
        </trans-unit>
        <trans-unit id="c6edbaa56530abda8144785f91c81fc02ebf9b90" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for VOS.</source>
          <target state="translated">Это подкласс ExtUtils::MM_Unix,который содержит функционал для VOS.</target>
        </trans-unit>
        <trans-unit id="2e5c7251645932dc8d1dc7c962cbf2e45c3f4094" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for the AT&amp;amp;T U/WIN UNIX on Windows environment.</source>
          <target state="translated">Это подкласс ExtUtils :: MM_Unix, который содержит функциональные возможности для AT&amp;amp;T U / WIN UNIX в среде Windows.</target>
        </trans-unit>
        <trans-unit id="93a42e55d1097c11d0072e86d7f542b3230e6bcf" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Win32 containing changes necessary to get MakeMaker playing nice with command.com and other Win9Xisms.</source>
          <target state="translated">Это подкласс ExtUtils::MM_Win32,содержащий изменения,необходимые для того,чтобы MakeMaker хорошо играл с command.com и другими Win9Xisms.</target>
        </trans-unit>
        <trans-unit id="fb8a82ae7e4bcc23be8b85858941e5009748ca04" translate="yes" xml:space="preserve">
          <source>This is a suggestion to the OS to let this thread yield CPU time to other threads. What actually happens is highly dependent upon the underlying thread implementation.</source>
          <target state="translated">Это предложение операционной системе позволить этому потоку отдавать процессорное время другим потокам.То,что на самом деле происходит,в значительной степени зависит от реализации основного потока.</target>
        </trans-unit>
        <trans-unit id="a6edb8217d2751ef4a763256a458a4449c4b36b5" translate="yes" xml:space="preserve">
          <source>This is a superclass for &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;-based modules. It provides a handful of common functionality and a method of getting at the underlying &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object.</source>
          <target state="translated">Это суперкласс для модулей на основе &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . Он предоставляет несколько общих функций и метод доступа к базовому объекту &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55903e986f0ab6ec743472dc06cf20bffa759a05" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ())</source>
          <target state="translated">Это синоним для (! foldEQ()).</target>
        </trans-unit>
        <trans-unit id="53444e6b25598bcd7a21f4559d1c88a0a3357fc9" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ_locale())</source>
          <target state="translated">Это синоним для функции (! foldEQ_locale()).</target>
        </trans-unit>
        <trans-unit id="0fc9211f34524643d77b88ccf3fbe69c0926ca68" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;\p{Present_In=*}&lt;/code&gt;</source>
          <target state="translated">Это синоним &lt;code&gt;\p{Present_In=*}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef2cd0a3571852b5da355e5994ba81184e031c06" translate="yes" xml:space="preserve">
          <source>This is a template for a function suitable for the &lt;code&gt;uf_val&lt;/code&gt; field in a &lt;code&gt;ufuncs&lt;/code&gt; structure for this call. The &lt;code&gt;uf_set&lt;/code&gt; and &lt;code&gt;uf_index&lt;/code&gt; fields are irrelevant.</source>
          <target state="translated">Это шаблон для функции , подходящей для &lt;code&gt;uf_val&lt;/code&gt; поля в &lt;code&gt;ufuncs&lt;/code&gt; структуры для этого вызова. В &lt;code&gt;uf_set&lt;/code&gt; и &lt;code&gt;uf_index&lt;/code&gt; поля не имеют значения.</target>
        </trans-unit>
        <trans-unit id="9a3d72bf731a4c00183b3bacd2aaed590afe1490" translate="yes" xml:space="preserve">
          <source>This is a term used for characters occupying more than one byte.</source>
          <target state="translated">Этот термин используется для символов,занимающих более одного байта.</target>
        </trans-unit>
        <trans-unit id="da67b166e535d5aab2dfd4a4bef7fa2c7dc18440" translate="yes" xml:space="preserve">
          <source>This is a useful alternative to the &lt;code&gt;verbose&lt;/code&gt; key.</source>
          <target state="translated">Это полезная альтернатива &lt;code&gt;verbose&lt;/code&gt; ключу.</target>
        </trans-unit>
        <trans-unit id="618f9f0ef250e390bb1ce0844593906ed698aa6a" translate="yes" xml:space="preserve">
          <source>This is a user-pragma. If you're very lucky some code you're using will know that you asked for less CPU usage or ram or fat or... we just can't know. Consult your documentation on everything you're currently using.</source>
          <target state="translated">Это пользовательская прагма.Если вам очень повезет,какой-нибудь код,который вы используете,будет знать,что вы просили меньше использовать процессор,или таран,или жир,или...мы просто не можем знать.Проконсультируйтесь с вашей документацией по всему,что вы используете в настоящее время.</target>
        </trans-unit>
        <trans-unit id="e65d4664502f4836edff6c3f42d466dce62c114e" translate="yes" xml:space="preserve">
          <source>This is achieved by creating separate watchdog process which spawns the specified program in a separate process session and supervises it: optionally feeds it with input, stores its exit code, stdout and stderr, terminates it in case it runs longer than specified.</source>
          <target state="translated">Это достигается путем создания отдельного сторожевого процесса,который порождает указанную программу в отдельном сеансе процесса и контролирует ее:опционально подает ее на вход,сохраняет ее код выхода,stdout и stderr,завершает ее в случае,если она работает дольше,чем указано.</target>
        </trans-unit>
        <trans-unit id="bb7efcdf0700fbaadbdc0f648a8badbdf9664612" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::Checker (or Pod::Checker) subclass, and inherits all its options.</source>
          <target state="translated">На самом деле это подкласс Pod::Simple::Checker (или Pod::Checker)и наследует все его опции.</target>
        </trans-unit>
        <trans-unit id="e4a943560ee56b7076fa64d64bd3da44e85a30ca" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::RTF subclass, and inherits all its options.</source>
          <target state="translated">На самом деле это подкласс Pod::Simple::RTF,и наследует все его опции.</target>
        </trans-unit>
        <trans-unit id="92b8d72a94a8da6c54d9f33ab092eb620ca878de" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::XMLOutStream subclass, and inherits all its options.</source>
          <target state="translated">На самом деле это подкласс Pod::Simple::XMLOutStream,и наследует все его опции.</target>
        </trans-unit>
        <trans-unit id="8eda3362231deb25dfd89db58202611c06a3d40c" translate="yes" xml:space="preserve">
          <source>This is all very powerful, of course, and should be used only in moderation to make the world a better place.</source>
          <target state="translated">Все это,конечно,очень мощно и должно использоваться только в меру,чтобы сделать мир лучше.</target>
        </trans-unit>
        <trans-unit id="a0a76465b05604833b1a2e0c25409dcb3ddad85c" translate="yes" xml:space="preserve">
          <source>This is also a no-op on Win32.</source>
          <target state="translated">Это также не работает на Win32.</target>
        </trans-unit>
        <trans-unit id="a906c4fc08f6c0cd00609aae3ea9167c7850d130" translate="yes" xml:space="preserve">
          <source>This is also helpful for the case where a package lives within a differently named file:</source>
          <target state="translated">Это также полезно в случае,когда пакет живет в файле с другим именем:</target>
        </trans-unit>
        <trans-unit id="783e4cc092057905b6553d7a8d798ecf7ac0db31" translate="yes" xml:space="preserve">
          <source>This is also invalid:</source>
          <target state="translated">Это также недействительно:</target>
        </trans-unit>
        <trans-unit id="c1d7e1e2839d2377297de367eca0902f0ba00891" translate="yes" xml:space="preserve">
          <source>This is also the logical inverse of Perl_isfinite().</source>
          <target state="translated">Это также логическая обратная сторона функции Perl_isfinite().</target>
        </trans-unit>
        <trans-unit id="c778320b203a5e38261d5a20fb7ed1b70340a749" translate="yes" xml:space="preserve">
          <source>This is also used to store the name of an autoloaded subroutine in an XS AUTOLOAD routine. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt;.</source>
          <target state="translated">Это также используется для хранения имени автоматически загружаемой подпрограммы в подпрограмме XS AUTOLOAD. См. Раздел &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Автозагрузка с помощью XSUB в perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dda58eafcf63f43293998602056ada9565deb26" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">Это также полезно для приложений, эмулирующих &lt;code&gt;tail -f&lt;/code&gt; . Как только вы нажмете EOF при чтении, а затем немного поспите, вам (вероятно) придется использовать фиктивный seek (), чтобы сбросить все. &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; не изменить положение, но это</target>
        </trans-unit>
        <trans-unit id="545e9279207dbe359d514df130705d9c342445f3" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">Это также полезно для приложений, эмулирующих &lt;code&gt;tail -f&lt;/code&gt; . Как только вы нажмете EOF при чтении, а затем немного поспите, вам (вероятно) придется использовать фиктивный seek (), чтобы сбросить все. &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; не изменить положение, но это</target>
        </trans-unit>
        <trans-unit id="3a6f47fb722d0ea7678e717327e932adc89f5068" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;omf&lt;/code&gt; -style executable which is dynamically linked to</source>
          <target state="translated">Это исполняемый файл в стиле &lt;code&gt;omf&lt;/code&gt; , который динамически связан с</target>
        </trans-unit>
        <trans-unit id="8d756c24376672373a010de25a2097378db4129a" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Это интерфейс XS для функции Perl &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af496b01592b41744cf75154ff216cf0d89995f5" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Это интерфейс XS для функции &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; Perl .</target>
        </trans-unit>
        <trans-unit id="3e6cd5c9b47acd371c49a0cb03b008b70d97eb82" translate="yes" xml:space="preserve">
          <source>This is an advisory and may not be called in the case where tests are being supplied to Test::Harness by an iterator.</source>
          <target state="translated">Это консультация и не может быть вызвано в случае,если тесты поступают на тестирование::Harness от итератора.</target>
        </trans-unit>
        <trans-unit id="e308dd432d69b5157566a6a8a06cea4450cd898c" translate="yes" xml:space="preserve">
          <source>This is an architecture-independent macro to copy one structure to another.</source>
          <target state="translated">Это не зависящий от архитектуры макрос для копирования одной структуры в другую.</target>
        </trans-unit>
        <trans-unit id="142891d3e046c25d09b04f0976a954076a30931f" translate="yes" xml:space="preserve">
          <source>This is an array ref holding blacklisted modules/utilities for fetching files with.</source>
          <target state="translated">Это массив,в котором хранятся модули/установки из черного списка для получения файлов.</target>
        </trans-unit>
        <trans-unit id="df12371f4d4ec63415fcab8f4e275a767f08fe3d" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output sent to STDOUT the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">Это ссылка на массив, содержащий весь вывод, отправленный в STDOUT сгенерированной командой. Примечания от &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; применяются.</target>
        </trans-unit>
        <trans-unit id="5d8a9ac748db8e604ab1a3be03c2cd4ff11d70fa" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output the command generated. Note that buffers are only available if you have &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; installed, or if your system is able to work with &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; -- see below). Otherwise, this element will be &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это ссылка на массив, содержащий все выходные данные, сгенерированные командой. Обратите внимание, что буферы доступны, только если у вас установлен &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; , или если ваша система может работать с &lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt; - см. Ниже). В противном случае этот элемент будет &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c18758c49f12c582c5080bf3c3ccaff6f97f99da" translate="yes" xml:space="preserve">
          <source>This is an arrayreference containing all the output sent to STDERR the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">Это ссылка на массив, содержащая весь вывод, отправленный в STDERR сгенерированной командой. Примечания от &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; применяются.</target>
        </trans-unit>
        <trans-unit id="35261ed11f8f6da05d71e00af479e064b704d1d3" translate="yes" xml:space="preserve">
          <source>This is an error because the region is opened by &quot;thing&quot;, and the &quot;=end&quot; tries to close &quot;hting&quot; [sic].</source>
          <target state="translated">Это ошибка,потому что регион открывается &quot;вещью&quot;,а &quot;=end&quot; пытается закрыть &quot;hting&quot; [sic].</target>
        </trans-unit>
        <trans-unit id="b79a05e5e946ef4d9b0147040712489ddfe70bec" translate="yes" xml:space="preserve">
          <source>This is an experimental feature and the interface may change.</source>
          <target state="translated">Это экспериментальная функция,и интерфейс может измениться.</target>
        </trans-unit>
        <trans-unit id="038057198b05cf435f922989a902c34a0ad8bec5" translate="yes" xml:space="preserve">
          <source>This is an experimental feature available starting in 5.18, and is subject to change as we gain field experience with it. Any attempt to use it will raise a warning, unless disabled via</source>
          <target state="translated">Это экспериментальная функция,доступная начиная с 5.18,и может изменяться по мере приобретения нами полевого опыта работы с ней.Любая попытка ее использования вызовет предупреждение,если только она не будет отключена через</target>
        </trans-unit>
        <trans-unit id="52d334621bd62974acc022322ae25fb3c75cd6d1" translate="yes" xml:space="preserve">
          <source>This is an extremely simple, extremely basic module for writing tests suitable for CPAN modules and other pursuits. If you wish to do more complicated testing, use the Test::More module (a drop-in replacement for this one).</source>
          <target state="translated">Это чрезвычайно простой,очень простой модуль для написания тестов,подходящих для CPAN-модулей и других задач.Если вы хотите сделать более сложное тестирование,воспользуйтесь модулем Test::More (заменой этого модуля).</target>
        </trans-unit>
        <trans-unit id="fc193a250bf3f7bae0644ab68952c14087e27f56" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">Это внутренняя функция, используемая &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s, хотя вы тоже можете ее вызывать. Он форматирует (см. &lt;a href=&quot;../perlform&quot;&gt;Perlform&lt;/a&gt; ) список значений в соответствии с содержимым PICTURE, помещая вывод в аккумулятор вывода формата, &lt;code&gt;$^A&lt;/code&gt; (или &lt;code&gt;$ACCUMULATOR&lt;/code&gt; на английском языке). В конце концов, когда &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; сделана, содержимое &lt;code&gt;$^A&lt;/code&gt; записывается в некоторый дескриптор файла. Вы также можете прочитать &lt;code&gt;$^A&lt;/code&gt; а затем вернуть &lt;code&gt;$^A&lt;/code&gt; в &lt;code&gt;&quot;&quot;&lt;/code&gt; . Обратите внимание , что формат , как правило , делает один &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; в каждой строке формы, но &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; Сама функция не заботится о том, сколько новых строк встроено в PICTURE. Это означает, что токены &lt;code&gt;~&lt;/code&gt; и &lt;code&gt;~~&lt;/code&gt; обрабатывают всю PICTURE как одну строку. Поэтому вам может потребоваться использовать несколько строк формы для реализации единого формата записи, как и компилятор &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd310f7276a510d01ce03cf67c2975df5756cafc" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">Это внутренняя функция, используемая &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s, хотя вы тоже можете ее вызывать. Он форматирует (см. &lt;a href=&quot;perlform&quot;&gt;Perlform&lt;/a&gt; ) список значений в соответствии с содержимым PICTURE, помещая вывод в аккумулятор вывода формата, &lt;code&gt;$^A&lt;/code&gt; (или &lt;code&gt;$ACCUMULATOR&lt;/code&gt; на английском языке). В конце концов, когда &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; сделана, содержимое &lt;code&gt;$^A&lt;/code&gt; записывается в некоторый дескриптор файла. Вы также можете прочитать &lt;code&gt;$^A&lt;/code&gt; а затем вернуть &lt;code&gt;$^A&lt;/code&gt; в &lt;code&gt;&quot;&quot;&lt;/code&gt; . Обратите внимание , что формат , как правило , делает один &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; в каждой строке формы, но &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; Сама функция не заботится о том, сколько новых строк встроено в PICTURE. Это означает, что токены &lt;code&gt;~&lt;/code&gt; и &lt;code&gt;~~&lt;/code&gt; обрабатывают всю PICTURE как одну строку. Поэтому вам может потребоваться использовать несколько строк формы для реализации единого формата записи, как и компилятор &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10fae8cad46b6999dd334a3e0cee274316414176" translate="yes" xml:space="preserve">
          <source>This is an internal module for controlling the debug level (a.k.a. trace level) of Pod::Simple. This is of interest only to Pod::Simple developers.</source>
          <target state="translated">Это внутренний модуль для управления уровнем отладки (так называемым уровнем трассы)в Pod::Simple.Это представляет интерес только для Pod::Simple разработчиков.</target>
        </trans-unit>
        <trans-unit id="91ad54ddf5b339889a4d7e36baa90c6c5e3e7226" translate="yes" xml:space="preserve">
          <source>This is an internal routine that turns scalars into objects.</source>
          <target state="translated">Это внутренняя рутина,которая превращает скаляры в объекты.</target>
        </trans-unit>
        <trans-unit id="8cdba91d1ae6fc951cd637b385ae75d511979603" translate="yes" xml:space="preserve">
          <source>This is an introduction to the use of performance and optimization techniques which can be used with particular reference to perl programs. While many perl developers have come from other languages, and can use their prior knowledge where appropriate, there are many other people who might benefit from a few perl specific pointers. If you want the condensed version, perhaps the best advice comes from the renowned Japanese Samurai, Miyamoto Musashi, who said:</source>
          <target state="translated">Это введение в использование производительности и методов оптимизации,которые могут быть использованы с особой ссылкой на perl программ.В то время как многие разработчики perl пришли из других языков и могут использовать свои знания,где это необходимо,есть много других людей,которые могли бы извлечь выгоду из нескольких perl конкретных указателей.Если вам нужна сокращенная версия,то,пожалуй,лучший совет-от известного японского самурая Миямото Мусаси:</target>
        </trans-unit>
        <trans-unit id="1366a76cfef4230c6beae74ce2285fa6d6be94b2" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _a.</source>
          <target state="translated">Это старый синоним для _a.</target>
        </trans-unit>
        <trans-unit id="18fb271daf0d1e76d3278d9f0bd4670eecfaa747" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _exe.</source>
          <target state="translated">Это старый синоним для _exe.</target>
        </trans-unit>
        <trans-unit id="e951b381a4c4d96fa5592d033afe7d8fa718b152" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _o.</source>
          <target state="translated">Это старый синоним для _o.</target>
        </trans-unit>
        <trans-unit id="cb104080e92edd7dc3925f96e9fda2c7d309ad5a" translate="yes" xml:space="preserve">
          <source>This is an old synonym for p_ in</source>
          <target state="translated">Это старый синоним для p_in</target>
        </trans-unit>
        <trans-unit id="f5d749cd3a1da6fa9f5e91de2edcf596acd57750" translate="yes" xml:space="preserve">
          <source>This is an upper limit on the amount of memory that &lt;code&gt;Tie::File&lt;/code&gt; will consume at any time while managing the file. This is used for two things: managing the</source>
          <target state="translated">Это верхний предел объема памяти, который &lt;code&gt;Tie::File&lt;/code&gt; будет использовать в любое время при управлении файлом. Это используется для двух целей: управления</target>
        </trans-unit>
        <trans-unit id="50601fd9eec31dfdb13471caa9bb11bc5c6a291d" translate="yes" xml:space="preserve">
          <source>This is another step where the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant. The RE engine scans the string from left to right and converts it into a finite automaton.</source>
          <target state="translated">Это еще один шаг, когда важно наличие модификатора &lt;code&gt;/x&lt;/code&gt; . Механизм RE просматривает строку слева направо и преобразует ее в конечный автомат.</target>
        </trans-unit>
        <trans-unit id="6bc6e3e8d1b2d61b10ef0d4362b29339c92de71f" translate="yes" xml:space="preserve">
          <source>This is bad because splice is already O(N), and since you do it N times, you just invented a quadratic algorithm; that is, O(N**2). This does not scale, although Perl is so efficient that you probably won't notice this until you have rather largish arrays.</source>
          <target state="translated">Это плохо,потому что сращивание уже O(N),а так как вы делаете это N раз,вы только что изобрели квадратичный алгоритм,то есть O(N**2).Он не масштабируется,хотя Perl настолько эффективен,что вы,вероятно,не заметите этого до тех пор,пока не получите достаточно большие массивы.</target>
        </trans-unit>
        <trans-unit id="3c8339d12c8a36725299f222df00f24cfd8f69bf" translate="yes" xml:space="preserve">
          <source>This is basically shorthand for saying:</source>
          <target state="translated">Это в основном сокращение для слов:</target>
        </trans-unit>
        <trans-unit id="df105f720cfd558cf78bf5414610fa1937dfed89" translate="yes" xml:space="preserve">
          <source>This is because math with overloaded operators follows the first (dominating) operand, and the operation of that is called and returns thus the result. So, Math::BigInt::bdiv() will always return a Math::BigInt, regardless whether the result should be a Math::BigFloat or the second operant is one.</source>
          <target state="translated">Это связано с тем,что математика с перегруженными операторами следует за первым (доминирующим)операндом,и операция этого называется и возвращает таким образом результат.Таким образом,функция Math::BigInt::bdiv()всегда возвращает Math::BigInt,независимо от того,должен ли результат быть Math::BigFloat или второй операнд один.</target>
        </trans-unit>
        <trans-unit id="9d0c7a7cdf189de0cf4679b172df320157dc1c04" translate="yes" xml:space="preserve">
          <source>This is because named subroutines are created at compile time so their lexical variables get assigned to the parent lexicals from the first execution of the parent block. If a parent scope is entered a second time, its lexicals are created again, while the nested subs still reference the old ones.</source>
          <target state="translated">Это происходит потому,что именованные подпрограммы создаются во время компиляции,поэтому их лексические переменные присваиваются родительским лексикам с первого выполнения родительского блока.Если родительская область видимости вводится во второй раз,ее лексики создаются снова,в то время как вложенные подпрограмм все еще ссылаются на старые.</target>
        </trans-unit>
        <trans-unit id="c5db892d6d5c6549aeb31514ada7ecd4f892effe" translate="yes" xml:space="preserve">
          <source>This is best demonstrated by example. Normally copy-on-write will prevent the substitution from operator from using this hack, but if you can craft a string for which copy-on-write is not possible, you can see it in play. In the current implementation, the final byte of a string buffer is used as a copy-on-write reference count. If the buffer is not big enough, then copy-on-write is skipped. First have a look at an empty string:</source>
          <target state="translated">Это лучше всего демонстрируется на примере.Обычно копирование на запись не позволяет оператору подстановки использовать этот хак,но если вы можете создать строку,для которой копирование на запись невозможно,вы можете увидеть ее в игре.В текущей реализации в качестве счетчика ссылок при копировании на запись используется конечный байт буфера строки.Если буфер недостаточно большой,то копирование на запись пропускается.Сначала посмотрите на пустую строку:</target>
        </trans-unit>
        <trans-unit id="110ec42eab0899b77be520515c85d69e76f3210b" translate="yes" xml:space="preserve">
          <source>This is best explained using the following example:</source>
          <target state="translated">Это лучше всего объяснить на следующем примере:</target>
        </trans-unit>
        <trans-unit id="5ccb22d8b75566be2249f3211df19f165abb3a07" translate="yes" xml:space="preserve">
          <source>This is called an &quot;array slice&quot;.</source>
          <target state="translated">Это называется &quot;срез массива&quot;.</target>
        </trans-unit>
        <trans-unit id="891aecbf1a8602556b6b3c6e2627cb164d6eebbc" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just after unwinding the stack.</source>
          <target state="translated">Это называется в конце лексического диапазона,сразу после разматывания стека.</target>
        </trans-unit>
        <trans-unit id="7256e74371eb8bec49de48cf27c3c7d965b76d10" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just before unwinding the stack.</source>
          <target state="translated">Это называется в конце лексического диапазона,непосредственно перед разматыванием стека.</target>
        </trans-unit>
        <trans-unit id="39c51821499fb79c1bf1a7b16255cbfad901f488" translate="yes" xml:space="preserve">
          <source>This is called by -&amp;gt;new to initialize newly-constructed language handles. If you define an init method in your class, remember that it's usually considered a good idea to call $lh-&amp;gt;SUPER::init in it (presumably at the beginning), so that all classes get a chance to initialize a new object however they see fit.</source>
          <target state="translated">Это вызывается -&amp;gt; new для инициализации вновь созданных языковых дескрипторов. Если вы определяете метод init в своем классе, помните, что обычно считается хорошей идеей вызвать в нем $ lh-&amp;gt; SUPER :: init (предположительно в начале), чтобы все классы имели возможность инициализировать новый объект, однако они считают нужным.</target>
        </trans-unit>
        <trans-unit id="0f9664c006f22f51b95f420aa8dd1316340a796c" translate="yes" xml:space="preserve">
          <source>This is called just after starting a new lexical scope. Note that Perl code like</source>
          <target state="translated">Это называется сразу после запуска нового лексического диапазона.Обратите внимание,что Perl-код,как</target>
        </trans-unit>
        <trans-unit id="1b4b72a19d24ff4c03ca59dfaf92e37705fe82d9" translate="yes" xml:space="preserve">
          <source>This is called just before starting to compile an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;
FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, after the eval has been set up.</source>
          <target state="translated">Это вызывается непосредственно перед началом компиляции &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , после того, как eval был установлен.</target>
        </trans-unit>
        <trans-unit id="63bc4c621adbf8f868c20e693d52ccd14e7f8bee" translate="yes" xml:space="preserve">
          <source>This is called just like any other method, with the object as the first argument. It does not receive any additional arguments. However, the &lt;code&gt;$_[0]&lt;/code&gt; variable will be read-only in the destructor, so you cannot assign a value to it.</source>
          <target state="translated">Он вызывается так же, как и любой другой метод, с объектом в качестве первого аргумента. Никаких дополнительных аргументов не получает. Однако переменная &lt;code&gt;$_[0]&lt;/code&gt; будет доступна только для чтения в деструкторе, поэтому вы не можете присвоить ей значение.</target>
        </trans-unit>
        <trans-unit id="a2a0ca9ad6271402577255f9f1a63a32921a68ca" translate="yes" xml:space="preserve">
          <source>This is called when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below.</source>
          <target state="translated">Это вызывается, когда происходит &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; . См. &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;Раздел &amp;laquo;Развязка Gotcha&amp;raquo;&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="85277e9fbb24fb6a920480ff94a71d2b7d6a947a" translate="yes" xml:space="preserve">
          <source>This is called when a stash is assigned to a new location in the symbol table.</source>
          <target state="translated">Это называется,когда тайник назначается новому местоположению в таблице символов.</target>
        </trans-unit>
        <trans-unit id="89a93e1f017cbb5b7b2446a6eb7bdd8163601a7e" translate="yes" xml:space="preserve">
          <source>This is called when a stash is deleted from the symbol table.</source>
          <target state="translated">Это называется,когда тайник удаляется из таблицы символов.</target>
        </trans-unit>
        <trans-unit id="92909fe70994d8eb483f136285b4a0530d9ad33d" translate="yes" xml:space="preserve">
          <source>This is called when the hash is evaluated in scalar context. In order to mimic the behaviour of untied hashes, this method should return a false value when the tied hash is considered empty. If this method does not exist, perl will make some educated guesses and return true when the hash is inside an iteration. If this isn't the case, FIRSTKEY is called, and the result will be a false value if FIRSTKEY returns the empty list, true otherwise.</source>
          <target state="translated">Это называется,когда хэш оценивается в скалярном контексте.Для имитации поведения несвязанных хэшей этот метод должен возвращать ложное значение,когда связанный хэш считается пустым.Если такой метод не существует,то perl сделает некоторые обоснованные предположения и вернёт true,когда хэш будет находиться внутри итерации.Если это не так,то вызывается метод FIRSTKEY,и результатом будет ложное значение,если FIRSTKEY вернет пустой список,true иначе.</target>
        </trans-unit>
        <trans-unit id="43b19ffb80b780fe42418c60b4b551943190ef11" translate="yes" xml:space="preserve">
          <source>This is caused by the fact that a block by itself acts as a loop that executes once, see &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;Basic BLOCKs&lt;/a&gt;.</source>
          <target state="translated">Это вызвано тем фактом, что блок сам по себе действует как цикл, который выполняется один раз, см. &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;Основные БЛОКИ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52af186e7022d7cef4d799cfdb6b5d984aef07fe" translate="yes" xml:space="preserve">
          <source>This is commonly used to suppress the creation of man pages. MAN3PODS takes a hash ref not a string, but the above worked by accident in old versions of MakeMaker.</source>
          <target state="translated">Это обычно используется для подавления создания man-страниц.MAN3PODS принимает хэш-файл не строки,а случайно работает в старых версиях MakeMaker.</target>
        </trans-unit>
        <trans-unit id="e5f528c0702057989be1850bcd519b0dfbd35566" translate="yes" xml:space="preserve">
          <source>This is complete documentation about all aspects of references. For a shorter, tutorial introduction to just the essential features, see &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;.</source>
          <target state="translated">Это полная документация по всем аспектам ссылок. Для более короткого ознакомления с основными функциями см. &lt;a href=&quot;perlreftut&quot;&gt;Perlreftut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49ca539e3859d247b8a2739f333e60f8db59abef" translate="yes" xml:space="preserve">
          <source>This is completely general, but the most computationally expensive strategy. Choose one or the other character set and transform to that for every sort comparision. Here's a complete example that transforms to ASCII sort order:</source>
          <target state="translated">Это совершенно общая,но самая дорогостоящая с вычислительной точки зрения стратегия.Выберите один или другой набор символов и трансформируйте к нему для любого вида сравнения.Вот полный пример,который преобразует в порядок сортировки ASCII:</target>
        </trans-unit>
        <trans-unit id="94195eae88e55c65702824bf560045165c39578d" translate="yes" xml:space="preserve">
          <source>This is converted to a tree similar to this one:</source>
          <target state="translated">Он превращается в дерево,похожее на это:</target>
        </trans-unit>
        <trans-unit id="6748d7a69c27bb3281328ef679799289a62c1105" translate="yes" xml:space="preserve">
          <source>This is currently supported by pod2text (Pod::Text), pod2man (Pod::Man), and any other pod2xxx or Pod::Xxxx translators that use Pod::Parser 1.093 or later, or Pod::Tree 1.02 or later.</source>
          <target state="translated">В настоящее время это поддерживается pod2text (Pod::Text),pod2man (Pod::Man)и любыми другими переводчиками pod2xxx или Pod::Xxxx,использующими Pod::Parser 1.093 или более позднюю версию,или Pod::Tree 1.02 или более позднюю версию.</target>
        </trans-unit>
        <trans-unit id="593812f69db240f293446ffb5751455ff8815826" translate="yes" xml:space="preserve">
          <source>This is different from finding out the package an object is blessed into, which might not be the current package. For that, use &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;, part of the Standard Library since Perl 5.8:</source>
          <target state="translated">Это отличается от определения пакета, в который вложен объект, который может быть не текущим пакетом. Для этого используйте &lt;code&gt;blessed&lt;/code&gt; из &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; , часть стандартной библиотеки начиная с Perl 5.8:</target>
        </trans-unit>
        <trans-unit id="fb97ecda4c6d5be858b3ffd4a4b01f62707feb1c" translate="yes" xml:space="preserve">
          <source>This is different than printing the array without the interpolation:</source>
          <target state="translated">Это отличается от печати массива без интерполяции:</target>
        </trans-unit>
        <trans-unit id="2e89efe08d07d2fc445ecb0a49388c2db1540bc9" translate="yes" xml:space="preserve">
          <source>This is disabled by default.</source>
          <target state="translated">По умолчанию она отключена.</target>
        </trans-unit>
        <trans-unit id="a9b83c7f438982c73dfeaa8ce24f6687d2ff66f7" translate="yes" xml:space="preserve">
          <source>This is discussed in more detail in &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;; see the entry on</source>
          <target state="translated">Это обсуждается более подробно в &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; ; см. запись на</target>
        </trans-unit>
        <trans-unit id="76fae6a858b50aa10f361d29a97f6c807c02664b" translate="yes" xml:space="preserve">
          <source>This is documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;, and although it's not the easiest thing to read, it does work. In each of these examples, we call the function inside the braces used to dereference a reference. If we have more than one return value, we can construct and dereference an anonymous array. In this case, we call the function in list context.</source>
          <target state="translated">Это задокументировано в &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; , и, хотя это не самое легкое для чтения, оно работает. В каждом из этих примеров мы вызываем функцию в фигурных скобках, используемых для разыменования ссылки. Если у нас есть более одного возвращаемого значения, мы можем построить и разыменовать анонимный массив. В этом случае мы вызываем функцию в контексте списка.</target>
        </trans-unit>
        <trans-unit id="cc9f74e233591efd345d524b870503e793053031" translate="yes" xml:space="preserve">
          <source>This is done by using hostname lookup and the &lt;code&gt;local_netmask&lt;/code&gt; entry in the configuration data.</source>
          <target state="translated">Это делается с помощью поиска имени хоста и записи &lt;code&gt;local_netmask&lt;/code&gt; в данных конфигурации.</target>
        </trans-unit>
        <trans-unit id="454855df818209bc8493bdfbab3f2ca7ae6dfdc7" translate="yes" xml:space="preserve">
          <source>This is done for a breakpoint in the current file.</source>
          <target state="translated">Это делается для точки останова в текущем файле.</target>
        </trans-unit>
        <trans-unit id="4a47be7db788c450b66cdea2d395c9b71203ef53" translate="yes" xml:space="preserve">
          <source>This is due to a bug in the C library's printf routine. printf(&quot;'%e'&quot;, 0. ) produces '0.000000e+0', but ANSI requires '0.000000e+00'. QNX has acknowledged the bug.</source>
          <target state="translated">Это связано с ошибкой в процедуре printf библиотеки Си.printf(&quot;'%e'&quot;,0.)выдает '0.000000e+0',но ANSI требует '0.000000e+00'.QNX распознал ошибку.</target>
        </trans-unit>
        <trans-unit id="71e4fa6fb5f00ffdde6cecd71fb22bb161db5777" translate="yes" xml:space="preserve">
          <source>This is due to the performance optimisation of using &lt;code&gt;MULTICALL&lt;/code&gt; for the code block, which means that fresh SVs do not get allocated for each call to the block. Instead, the same SV is re-assigned for each iteration, and all the closures will share the value seen on the final iteration.</source>
          <target state="translated">Это связано с оптимизацией производительности использования &lt;code&gt;MULTICALL&lt;/code&gt; для блока кода, что означает, что новые SV не выделяются для каждого вызова блока. Вместо этого один и тот же SV повторно назначается для каждой итерации, и все замыкания будут разделять значение, наблюдаемое на последней итерации.</target>
        </trans-unit>
        <trans-unit id="447f198b012c8346529f18f6ac62c32d7efbbdb9" translate="yes" xml:space="preserve">
          <source>This is elaborately and painstakingly described in the</source>
          <target state="translated">Это детально и кропотливо описано в</target>
        </trans-unit>
        <trans-unit id="821291d0776e9b5b0d39c1a20f26c0a1d006ccf3" translate="yes" xml:space="preserve">
          <source>This is enabled by default.</source>
          <target state="translated">По умолчанию эта функция включена.</target>
        </trans-unit>
        <trans-unit id="05dc6a6637a3cd1c406048840a442a226332304e" translate="yes" xml:space="preserve">
          <source>This is equivalent to putting &lt;code&gt;?:&lt;/code&gt; at the beginning of every capturing group:</source>
          <target state="translated">Это эквивалентно помещению &lt;code&gt;?:&lt;/code&gt; В начало каждой группы захвата:</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">Это эквивалентно следующему коду:</target>
        </trans-unit>
        <trans-unit id="db66d69de876b62af8e4e583ee35fa7336ce738e" translate="yes" xml:space="preserve">
          <source>This is especially handy for the handles that Perl has already opened for you.</source>
          <target state="translated">Это особенно удобно для ручек,которые Perl уже открыл для вас.</target>
        </trans-unit>
        <trans-unit id="f8d05739ccb676f898da1bfecdf838eee060521a" translate="yes" xml:space="preserve">
          <source>This is especially noticeable in scripts like Makefiles and test suites, which often assume &lt;code&gt;/&lt;/code&gt; as a path separator for subdirectories.</source>
          <target state="translated">Это особенно заметно в сценариях, таких как Makefiles и тестовых наборах, которые часто используют &lt;code&gt;/&lt;/code&gt; в качестве разделителя путей для подкаталогов.</target>
        </trans-unit>
        <trans-unit id="f527eac137b06210e13666ef8269894d061c4071" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">Это особенно важно, учитывая, что хуки &lt;code&gt;__DIE__&lt;/code&gt; могут снова вызывать &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , что меняет их сообщения об ошибках:</target>
        </trans-unit>
        <trans-unit id="e72ff779e72b05ba7f524c22b987a33b6ce734c7" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">Это особенно важно, учитывая, что хуки &lt;code&gt;__DIE__&lt;/code&gt; могут снова вызывать &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , что меняет их сообщения об ошибках:</target>
        </trans-unit>
        <trans-unit id="818858cb9601e6ed62390539756668bab6bf2c4d" translate="yes" xml:space="preserve">
          <source>This is especially true if trying to catch &lt;code&gt;SIGALRM&lt;/code&gt; in a thread. To handle alarms in threads, set up a signal handler in the main thread, and then use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING&lt;/a&gt; to relay the signal to the thread:</source>
          <target state="translated">Это особенно верно, если вы пытаетесь поймать &lt;code&gt;SIGALRM&lt;/code&gt; в потоке. Чтобы обрабатывать алармы в потоках, настройте обработчик сигналов в основном потоке, а затем используйте &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALING&lt;/a&gt; для передачи сигнала в поток:</target>
        </trans-unit>
        <trans-unit id="fd6dde33455dcaab484709ef3e2e047ba6858d2a" translate="yes" xml:space="preserve">
          <source>This is essentially a linear encoding of a nondeterministic finite-state machine (aka syntax charts or &quot;railroad normal form&quot; in parsing technology).</source>
          <target state="translated">По сути,это линейное кодирование недетерминистической конечной машины (так называемые синтаксические диаграммы или &quot;железнодорожная нормальная форма&quot; в технологии разбора).</target>
        </trans-unit>
        <trans-unit id="c2c33667b47416ed635e9db2747270d43c9fb79e" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to</source>
          <target state="translated">Это в точности эквивалентно</target>
        </trans-unit>
        <trans-unit id="2888d5ca02740e184f93a1ad103d7f0d59cf4bf3" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to writing &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; . You may see this idiom in the wild combined with a call to &lt;code&gt;can&lt;/code&gt; :</source>
          <target state="translated">Это в точности эквивалентно записи &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; . Вы можете встретить эту идиому в дикой природе в сочетании с призывом к &lt;code&gt;can&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fc0020f4d9923684685bbbcf57921ec11fb0aac1" translate="yes" xml:space="preserve">
          <source>This is exactly the problem the</source>
          <target state="translated">Именно в этом и заключается проблема</target>
        </trans-unit>
        <trans-unit id="1323ae3621b03444ef40592d920a99e3788e04fe" translate="yes" xml:space="preserve">
          <source>This is exactly the same as:</source>
          <target state="translated">Это точно то же самое:</target>
        </trans-unit>
        <trans-unit id="5350516b52a22254c5df97eb2c2d9b4520e43a69" translate="yes" xml:space="preserve">
          <source>This is fairly secure because &lt;code&gt;/\w+/&lt;/code&gt; doesn't normally match shell metacharacters, nor are dot, dash, or at going to mean something special to the shell. Use of &lt;code&gt;/.+/&lt;/code&gt; would have been insecure in theory because it lets everything through, but Perl doesn't check for that. The lesson is that when untainting, you must be exceedingly careful with your patterns. Laundering data using regular expression is the</source>
          <target state="translated">Это довольно безопасно, потому что &lt;code&gt;/\w+/&lt;/code&gt; обычно не соответствует метасимволам оболочки, а также точка, тире или at будут означать что-то особенное для оболочки. Использование &lt;code&gt;/.+/&lt;/code&gt; в теории было бы небезопасным, потому что он пропускает все, но Perl этого не проверяет. Урок состоит в том, что при раскрашивании вы должны быть очень осторожны со своими узорами. Отмывание данных с использованием регулярных выражений - это</target>
        </trans-unit>
        <trans-unit id="4d2e8c2e8c603b9443a2fa3515b87175734dfedd" translate="yes" xml:space="preserve">
          <source>This is faster than using the &lt;b&gt;-exec&lt;/b&gt; switch of</source>
          <target state="translated">Это быстрее, чем использовать переключатель &lt;b&gt;-exec&lt;/b&gt; в</target>
        </trans-unit>
        <trans-unit id="1aa28f8ff665fed944de016ad1db63136902800f" translate="yes" xml:space="preserve">
          <source>This is fine for systems programming when sendmail is known to be available. But it is not fine for many non-Unix systems, and even some Unix systems that may not have sendmail installed. If a portable solution is needed, see the various distributions on CPAN that deal with it. &lt;code&gt;Mail::Mailer&lt;/code&gt; and &lt;code&gt;Mail::Send&lt;/code&gt; in the &lt;code&gt;MailTools&lt;/code&gt; distribution are commonly used, and provide several mailing methods, including &lt;code&gt;mail&lt;/code&gt; , &lt;code&gt;sendmail&lt;/code&gt; , and direct SMTP (via &lt;code&gt;Net::SMTP&lt;/code&gt; ) if a mail transfer agent is not available. &lt;code&gt;Mail::Sendmail&lt;/code&gt; is a standalone module that provides simple, platform-independent mailing.</source>
          <target state="translated">Это нормально для системного программирования, когда известно, что sendmail доступен. Но это не подходит для многих систем, отличных от Unix, и даже для некоторых систем Unix, в которых может не быть установлен sendmail. Если требуется переносимое решение, просмотрите различные дистрибутивы на CPAN, которые с ним связаны. &lt;code&gt;Mail::Mailer&lt;/code&gt; и &lt;code&gt;Mail::Send&lt;/code&gt; в распространении &lt;code&gt;MailTools&lt;/code&gt; широко используются и предоставляют несколько методов рассылки, включая &lt;code&gt;mail&lt;/code&gt; , &lt;code&gt;sendmail&lt;/code&gt; и прямой SMTP (через &lt;code&gt;Net::SMTP&lt;/code&gt; ), если агент передачи почты недоступен. &lt;code&gt;Mail::Sendmail&lt;/code&gt; - это отдельный модуль, который обеспечивает простую, независимую от платформы рассылку.</target>
        </trans-unit>
        <trans-unit id="3aabced6833bcc3911383da0e252138fb5ec6985" translate="yes" xml:space="preserve">
          <source>This is fine if you are just looking for a single character. However, if you are trying to count multiple character substrings within a larger string, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; won't work. What you can do is wrap a while() loop around a global pattern match. For example, let's count negative integers:</source>
          <target state="translated">Это нормально, если вы ищете только одного персонажа. Однако, если вы пытаетесь подсчитать несколько символьных подстрок в более крупной строке, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; работать не будет. Что вы можете сделать, так это обернуть цикл while () вокруг совпадения глобального шаблона. Например, посчитаем отрицательные целые числа:</target>
        </trans-unit>
        <trans-unit id="9cfd669832389228af06dec1239a8521733d9cc4" translate="yes" xml:space="preserve">
          <source>This is for backwards compatibility, and may be deprecated in the future.</source>
          <target state="translated">Это для обратной совместимости,и в будущем может быть неактуально.</target>
        </trans-unit>
        <trans-unit id="0e1feb67b0818a9b1deb572f5e23a9f9edab3c53" translate="yes" xml:space="preserve">
          <source>This is for clustering, not capturing; it groups subexpressions like &quot;()&quot;, but doesn't make backreferences as &quot;()&quot; does. So</source>
          <target state="translated">Это для кластеризации,а не для захвата;он группирует подвыражения типа &quot;()&quot;,но не делает обратных ссылок,как это делает &quot;()&quot;.Итак,</target>
        </trans-unit>
        <trans-unit id="fd0c739b12ea8f303fae64c2fc3f585b7a17c56e" translate="yes" xml:space="preserve">
          <source>This is for heuristics which attempt to create directory structures that mirror those of the installed perl.</source>
          <target state="translated">Это для эвристики,которая пытается создать структуры каталогов,зеркально отражающие структуры установленного perl.</target>
        </trans-unit>
        <trans-unit id="f8b7de1b28f0c9aa17d5f75d5f2141f8c81f40ef" translate="yes" xml:space="preserve">
          <source>This is for unsigned integers. It is equivalent to using T_UV but explicitly casts the variable to type &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; . The default type for &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; is T_UV.</source>
          <target state="translated">Это для целых чисел без знака. Это эквивалентно использованию T_UV, но явно приводит переменную к типу &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; . Тип по умолчанию для &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; является T_UV.</target>
        </trans-unit>
        <trans-unit id="223ca8fc8e06498b8700fcaf3a5b924a9287e801" translate="yes" xml:space="preserve">
          <source>This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.</source>
          <target state="translated">Это свободное программное обеспечение;вы можете распространять его и/или модифицировать на тех же условиях,что и сама система языка программирования Perl 5.</target>
        </trans-unit>
        <trans-unit id="b876192e43b0c3f007bf98e622b2f335f00b0f03" translate="yes" xml:space="preserve">
          <source>This is functionally identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; function for suspending the execution of the current for process for certain number of seconds, see &lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;. There is one significant difference, however: &lt;code&gt;POSIX::sleep()&lt;/code&gt; returns the number of &lt;b&gt;unslept&lt;/b&gt; seconds, while the &lt;code&gt;CORE::sleep()&lt;/code&gt; returns the number of slept seconds.</source>
          <target state="translated">Функционально она идентична встроенной в Perl функции &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; для приостановки выполнения текущего для процесса на определенное количество секунд, см. &lt;a href=&quot;functions/sleep&quot;&gt;Sleep&lt;/a&gt; . Однако есть одно существенное отличие: &lt;code&gt;POSIX::sleep()&lt;/code&gt; возвращает количество секунд &lt;b&gt;бездействия&lt;/b&gt; , а &lt;code&gt;CORE::sleep()&lt;/code&gt; возвращает количество секунд сна .</target>
        </trans-unit>
        <trans-unit id="4fb4b681258fa0233585a271cede9e357d7bbce9" translate="yes" xml:space="preserve">
          <source>This is generally meant to be called from inside Bracket Notation (which is discussed later), as in</source>
          <target state="translated">Обычно это называется из внутренней нотации скобки (которая обсуждается ниже),как в случае с</target>
        </trans-unit>
        <trans-unit id="487a457dae8e51eb07ff40b59ced8f82c47ea01f" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, but large testing systems often have weird internal needs.</source>
          <target state="translated">Как правило,это не рекомендуется,но большие системы тестирования часто имеют странные внутренние потребности.</target>
        </trans-unit>
        <trans-unit id="abeb233860c7acca6119cb787cba71a4bde24872" translate="yes" xml:space="preserve">
          <source>This is grandfathered (for \1 to \9) for the RHS of a substitute to avoid shocking the &lt;b&gt;sed&lt;/b&gt; addicts, but it's a dirty habit to get into. That's because in PerlThink, the righthand side of an &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; is a double-quoted string. &lt;code&gt;\1&lt;/code&gt; in the usual double-quoted string means a control-A. The customary Unix meaning of &lt;code&gt;\1&lt;/code&gt; is kludged in for &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. However, if you get into the habit of doing that, you get yourself into trouble if you then add an &lt;code&gt;/e&lt;/code&gt; modifier.</source>
          <target state="translated">Это унаследовано (от \ 1 до \ 9) для правой части заменителя, чтобы не шокировать наркоманов &lt;b&gt;sed&lt;/b&gt; , но это грязная привычка. Это потому, что в PerlThink правая часть &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; - это строка в двойных кавычках. &lt;code&gt;\1&lt;/code&gt; в обычной строке в двойных кавычках означает Control-A. Обычное для Unix значение &lt;code&gt;\1&lt;/code&gt; заключено в &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; . Однако, если у вас появится привычка делать это, вы столкнетесь с проблемами, если затем добавите модификатор &lt;code&gt;/e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a33e8e516c4662a8793090c4f24cce78089ad98d" translate="yes" xml:space="preserve">
          <source>This is handy when you want to do a list assignment in a Boolean context, because most list functions return a null list when finished, which when assigned produces a 0, which is interpreted as FALSE.</source>
          <target state="translated">Это удобно,когда вы хотите выполнить назначение списка в булевом контексте,потому что большинство функций списка возвращают нулевой список по завершению,который при назначении производит 0,который интерпретируется как FALSE.</target>
        </trans-unit>
        <trans-unit id="8c2cfb1906a45c414c7c96fc609271f7955af896" translate="yes" xml:space="preserve">
          <source>This is how it works now:</source>
          <target state="translated">Вот как это теперь работает:</target>
        </trans-unit>
        <trans-unit id="7dbdb31e7c27bacbcb7fe1d4ef14ea6d653940f1" translate="yes" xml:space="preserve">
          <source>This is identical in operation to directories(), except that it includes all the intermediate directories back up to the specified directories.</source>
          <target state="translated">Это идентично работе функции directories(),за исключением того,что она включает в себя все промежуточные директории до указанных директорий.</target>
        </trans-unit>
        <trans-unit id="e351930a2f0204ac9b6b12368a795bebdda09c11" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function for returning the absolute value of the numerical argument, see &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; Perl для возврата абсолютного значения числового аргумента, см. &lt;a href=&quot;functions/abs&quot;&gt;Abs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="695d548bdbb7db69858dd0c63a58915988364e1a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function, returning the absolute value of its numerical argument.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; Perl , возвращающей абсолютное значение своего числового аргумента.</target>
        </trans-unit>
        <trans-unit id="f9120a2adefbe5ba2e37ba001760405e7d0a7dbe" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; function, either for arming or disarming the &lt;code&gt;SIGARLM&lt;/code&gt; timer.</source>
          <target state="translated">Это идентично встроенной в Perl функции &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; либо для постановки, либо для снятия с &lt;code&gt;SIGARLM&lt;/code&gt; таймера SIGARLM .</target>
        </trans-unit>
        <trans-unit id="48a476413067dd99ab4121abaa36c23eb2d9f153" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; function, returning the arcus tangent defined by its two numerical arguments, the</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; , возвращающей касательную дугу, определяемую ее двумя числовыми аргументами:</target>
        </trans-unit>
        <trans-unit id="a05756bd65e3a6ef14f82f8385fe7e460811d0b5" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; function, allowing one to change the working (default) directory, see &lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; , позволяющей изменить рабочий каталог (по умолчанию), см. &lt;a href=&quot;functions/chdir&quot;&gt;Chdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e888ff11c427adcd230a49c55dda839ea4139d83" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory permissions, see &lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; , позволяющей изменять права доступа к файлам и каталогам, см. &lt;a href=&quot;functions/chmod&quot;&gt;Chmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43527baa97f98b6bb9f0a7d166453b7ea32ff963" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory owners and groups, see &lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; в Perl , позволяющей изменять владельцев и группы файлов и каталогов, см. &lt;a href=&quot;functions/chown&quot;&gt;Chown&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="137a34ed8adb7ab17d656d13fbf0961186414eb0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; function for closing a directory handle, see &lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; Perl для закрытия дескриптора каталога, см. &lt;a href=&quot;functions/closedir&quot;&gt;Closedir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e039818d97c69012826d73ac04fb7fe2694eb5b3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; function, for returning the cosine of its numerical argument, see &lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; Perl , для получения косинуса числового аргумента см. &lt;a href=&quot;functions/cos&quot;&gt;Cos&lt;/a&gt; . См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7986353e4fd90f34533ad5983c9c0772e03e142" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; function for exiting the program, see &lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; в Perl для выхода из программы, см. &lt;a href=&quot;functions/exit&quot;&gt;Exit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2c5c838eac2ca99b87036128b4be02041ba664e" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; function for returning the exponent (</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; Perl для возврата показателя степени (</target>
        </trans-unit>
        <trans-unit id="0f8afa6cc9b9bce42a0f876c4312c43a9b501d34" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/fcntl&quot;&gt;Fcntl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0526f440f4487b3f67fbf7e27396c04e1d2573cc" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; function for duplicating the current process, see &lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt; and &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; if you are in Windows.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; для дублирования текущего процесса, см. &lt;a href=&quot;functions/fork&quot;&gt;Fork&lt;/a&gt; и &lt;a href=&quot;perlfork&quot;&gt;perlfork,&lt;/a&gt; если вы работаете в Windows.</target>
        </trans-unit>
        <trans-unit id="f40ae5570bc527bc5a1dd6d93c31c6aa0f593934" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; в Perl , см. &lt;a href=&quot;functions/getc&quot;&gt;Getc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35d7514c028c77e7ca42538761981fea1a5e7fde" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group identifiers, see &lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной в Perl функции &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; для возврата групповых записей по идентификаторам групп, см. &lt;a href=&quot;functions/getgrgid&quot;&gt;Getgrgid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60e26e2d8720ed0149b7b87c377d73417035968a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group names, see &lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; для возврата групповых записей по именам групп, см. &lt;a href=&quot;functions/getgrnam&quot;&gt;Getgrnam&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d15624acd39757d16036f7262ed6bcece3061f3a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; function for returning the user name associated with the current session, see &lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; для возврата имени пользователя, связанного с текущим сеансом, см. &lt;a href=&quot;functions/getlogin&quot;&gt;Getlogin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="186fcd1d3a57037edb361be5db32f5f007ca9211" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; function for returning the process group identifier of the current process, see &lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; для возврата идентификатора группы процессов текущего процесса, см. &lt;a href=&quot;functions/getpgrp&quot;&gt;Getpgrp&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1809496150480256c93f1aafd87f931437ce086" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; function for returning the process identifier of the parent process of the current process , see &lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; для возврата идентификатора процесса родительского процесса текущего процесса, см. &lt;a href=&quot;functions/getppid&quot;&gt;Getppid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="457ce51591f9cb379a5adb26605bff1ac3f4ef40" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user names, see &lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; для возврата пользовательских записей по именам пользователей, см. &lt;a href=&quot;functions/getpwnam&quot;&gt;Getpwnam&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="099bdffd8de12dde36332facd7fd521fe7604dc8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user identifiers, see &lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; для возврата пользовательских записей по идентификаторам пользователей, см. &lt;a href=&quot;functions/getpwuid&quot;&gt;Getpwuid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2f87263d58fd06391e632ecc597293fca726096" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date in Greenwich Mean Time, see &lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; для преобразования секунд, прошедших с начала эпохи, в дату по среднему времени по Гринвичу, см. &lt;a href=&quot;functions/gmtime&quot;&gt;Gmtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3c0f6e328c0a9e84f4089fb4367baf98b6b1c72" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; Perl , см. &lt;a href=&quot;functions/index&quot;&gt;Index&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b121ee200825f5ba836e4ff9ea046596d9a0669c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; function for sending signals to processes (often to terminate them), see &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; в Perl для отправки сигналов процессам (часто для их завершения), см. &lt;a href=&quot;functions/kill&quot;&gt;Kill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b81f62db22691a94ae2b3fa4ba9674d2bf0b3fd0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; function for creating hard links into files, see &lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; Perl для создания жестких ссылок на файлы, см. &lt;a href=&quot;functions/link&quot;&gt;Ссылку&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44d5f3c7d27301e5eb1acf76c204cabece604701" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date see &lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; для преобразования секунд, прошедших с начала эпохи, в дату, &lt;a href=&quot;functions/localtime&quot;&gt;указанную в местном времени&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e0909781f3283ef9c3e20db724f85b91f439d90" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; function, returning the natural (</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; Perl , возвращающей естественный (</target>
        </trans-unit>
        <trans-unit id="e971f99436b45984924e279dba0a0153fd2a323c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; function for creating directories, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; Perl для создания каталогов, см. &lt;a href=&quot;functions/mkdir&quot;&gt;Mkdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b41549ebc9ad587ccb819b0a3ec0f8792362c7d3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; function for reading directory entries, see &lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; Perl для чтения записей каталога, см. &lt;a href=&quot;functions/readdir&quot;&gt;Readdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35438e0216a544df5038b4544cbb587885a54611" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; function for renaming files, see &lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; Perl для переименования файлов, см. &lt;a href=&quot;functions/rename&quot;&gt;Переименование&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5d513c94dc874928c142ca043089cff6c9b7ef0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; function for rewinding directory entry streams, see &lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; Perl для перемотки потоков &lt;a href=&quot;functions/rewinddir&quot;&gt;записей&lt;/a&gt; каталога, см. Rewinddir .</target>
        </trans-unit>
        <trans-unit id="cb204757196695331f28a45173a4730e85e7f0fb" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; function for removing (empty) directories, see &lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; для удаления (пустых) каталогов, см. &lt;a href=&quot;functions/rmdir&quot;&gt;Rmdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d85ea0b853465bcc33fe450ea49c14a87d8b77" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; function for returning the sine of the numerical argument, see &lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; Perl для возврата синуса числового аргумента, см. &lt;a href=&quot;functions/sin&quot;&gt;Sin&lt;/a&gt; . См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="919e7a21c6ecbb020823d058dd90c7b0a9eb3a55" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; function. for returning the square root of the numerical argument, see &lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; в Perl . для получения квадратного корня из числового аргумента см. &lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0eaf8f167427908f7febf3b312f3b5eb7b5e1919" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; function for returning information about files and directories.</source>
          <target state="translated">Это идентично встроенной функции &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; Perl для возврата информации о файлах и каталогах.</target>
        </trans-unit>
        <trans-unit id="41d6fd8cbb0b29357e5142e667be5a61001f2978" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/system&quot;&gt;System&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3273b4b3b0615a180eb23eebf260bd07416587ce" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function for returning the number of seconds since the epoch (whatever it is for the system), see &lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; для возврата количества секунд, прошедших с эпохи (что бы это ни было для системы), см. &lt;a href=&quot;functions/time&quot;&gt;Время&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c38ab013e5c6afb6168a48634dc91f08bf30d4f9" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; function for setting (and querying) the file creation permission mask, see &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; для установки (и запроса) маски разрешений на создание файла, см. &lt;a href=&quot;functions/umask&quot;&gt;Umask&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88df1d410534e354bba714dca11791a1312464a8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; function for removing files, see &lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; для удаления файлов, см. &lt;a href=&quot;functions/unlink&quot;&gt;Unlink&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb3ad24016b3eaa5941feee2fcd750ab1532552" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; function for changing the time stamps of files and directories, see &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; для изменения отметок времени файлов и каталогов, см. &lt;a href=&quot;functions/utime&quot;&gt;Utime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2c58755bc175c3890516b5d42561515cbd4c528" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;.</source>
          <target state="translated">Это идентично встроенной функции Perl &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/wait&quot;&gt;Wait&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c33a2624a3bac1d7979963b70993ae442f03646c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;_exit()&lt;/code&gt; . It exits the program immediately which means among other things buffered I/O is &lt;b&gt;not&lt;/b&gt; flushed.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;_exit()&lt;/code&gt; . Он немедленно выходит из программы, что означает, среди прочего, что буферизованный ввод-вывод &lt;b&gt;не&lt;/b&gt; сбрасывается.</target>
        </trans-unit>
        <trans-unit id="f80c449f3b57bbebcb07635c9eb453473b86c188" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;abort()&lt;/code&gt; . It terminates the process with a &lt;code&gt;SIGABRT&lt;/code&gt; signal unless caught by a signal handler or if the handler does not return normally (it e.g. does a &lt;code&gt;longjmp&lt;/code&gt; ).</source>
          <target state="translated">Это идентично функции С &lt;code&gt;abort()&lt;/code&gt; . Он завершает процесс сигналом &lt;code&gt;SIGABRT&lt;/code&gt; , если его не перехватил обработчик сигнала или если обработчик не вернется нормально (например, выполняет &lt;code&gt;longjmp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d259a90ce3ab2f4e634cfbde2a7c2b688963f261" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acos()&lt;/code&gt; , returning the arcus cosine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;acos()&lt;/code&gt; , возвращающей косинус дуги своего числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccee1e25346b17fb481ba7f4de4b0b4f50758bcf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acosh()&lt;/code&gt; , returning the hyperbolic arcus cosine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;acosh()&lt;/code&gt; , возвращающей гиперболический аркус косинус своего числового аргумента [C99]. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8333095da54e7a945d4144cea8a756431c8956dd" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asctime()&lt;/code&gt; . It returns a string of the form</source>
          <target state="translated">Это идентично функции C &lt;code&gt;asctime()&lt;/code&gt; . Он возвращает строку в форме</target>
        </trans-unit>
        <trans-unit id="83275b8475bd60ebbcd493cefc6cdd7a1783a9d1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asin()&lt;/code&gt; , returning the arcus sine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции &lt;code&gt;asin()&lt;/code&gt; C , возвращающей синус дуги своего числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35c416500eafa9e5a5d6b613f8969a9c043a063d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asinh()&lt;/code&gt; , returning the hyperbolic arcus sine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;asinh()&lt;/code&gt; , возвращающей гиперболический синус дуги своего числового аргумента [C99]. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1e5aa7da9f697f4c8ff8dc1fb698909d946bb08" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atan()&lt;/code&gt; , returning the arcus tangent of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;atan()&lt;/code&gt; , возвращающей тангенс дуги своего числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11f0cbd1a192e343ff198d459f44a118616c801d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atanh()&lt;/code&gt; , returning the hyperbolic arcus tangent of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;atanh()&lt;/code&gt; , возвращающей тангенс гиперболической дуги своего числового аргумента [C99]. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1019f8f1ad013c7cb1f6add559add30196a2727" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ceil()&lt;/code&gt; , returning the smallest integer value greater than or equal to the given numerical argument.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;ceil()&lt;/code&gt; , возвращающей наименьшее целочисленное значение, большее или равное заданному числовому аргументу.</target>
        </trans-unit>
        <trans-unit id="d09fd6d4a60edcd6b29ae2efeeb92f7f1a3032dc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;clock()&lt;/code&gt; , returning the amount of spent processor time in microseconds.</source>
          <target state="translated">Это идентично функции &lt;code&gt;clock()&lt;/code&gt; C , возвращающей количество затраченного процессорного времени в микросекундах.</target>
        </trans-unit>
        <trans-unit id="ed50101b37aabb6ccd0f72bf1cd12dc057e125c6" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;cosh()&lt;/code&gt; , for returning the hyperbolic cosine of its numeric argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;cosh()&lt;/code&gt; для возврата гиперболического косинуса ее числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f87a9c64391c986e35e0df3a461ddde69989f77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ctime()&lt;/code&gt; and equivalent to &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; , see &lt;a href=&quot;#asctime&quot;&gt;asctime&lt;/a&gt; and &lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;ctime()&lt;/code&gt; и эквивалентно &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; , см. &lt;a href=&quot;#asctime&quot;&gt;Asctime&lt;/a&gt; и &lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98a7a8b5298975e8b4638f6e08f625101ddd94f1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;difftime()&lt;/code&gt; , for returning the time difference (in seconds) between two times (as returned by &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt;), see &lt;a href=&quot;#time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;difftime()&lt;/code&gt; для возврата разницы во времени (в секундах) между двумя моментами времени (как возвращено &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; ), см. &lt;a href=&quot;#time&quot;&gt;Время&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3400f6cf25b03ffea13db374eb3a67b922b12f5c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;floor()&lt;/code&gt; , returning the largest integer value less than or equal to the numerical argument.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;floor()&lt;/code&gt; , возвращающей наибольшее целое значение, меньшее или равное числовому аргументу.</target>
        </trans-unit>
        <trans-unit id="b40ee9ab2883fdc4ea6712b24d8986ecec5f39fc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;fmod()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции C &lt;code&gt;fmod()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b7a8f7914876d99686857a5b212ffa67a406bf2" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ldexp()&lt;/code&gt; for multiplying floating point numbers with powers of two.</source>
          <target state="translated">Это идентично функции языка C &lt;code&gt;ldexp()&lt;/code&gt; для умножения чисел с плавающей запятой на степени двойки.</target>
        </trans-unit>
        <trans-unit id="5967c218ae5e6977bcfb278510b90089a48661b4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;log10()&lt;/code&gt; , returning the 10-base logarithm of the numerical argument. You can also use</source>
          <target state="translated">Это идентично функции C &lt;code&gt;log10()&lt;/code&gt; , возвращающей десятичный логарифм числового аргумента. Вы также можете использовать</target>
        </trans-unit>
        <trans-unit id="d960a256a04c197a9681bc6a5b2df4621c6abcef" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mblen()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции С &lt;code&gt;mblen()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72da259370ed7368b03117d248a4d69905a2aec8" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbstowcs()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции C &lt;code&gt;mbstowcs()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9cb9e5092c37fe36ba32ebf9a50fb911920ee05" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbtowc()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции С &lt;code&gt;mbtowc()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34c30fa04962ce474f9dd2f58f200b70edfa44f9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;perror()&lt;/code&gt; , which outputs to the standard error stream the specified message followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; and the current error string. Use the &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; function and the &lt;code&gt;$!&lt;/code&gt; variable instead, see &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; and &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции &lt;code&gt;perror()&lt;/code&gt; C , которая выводит в стандартный поток ошибок указанное сообщение, за которым следует &lt;code&gt;&quot;: &quot;&lt;/code&gt; и текущая строка ошибки. Используйте функцию &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;$!&lt;/code&gt; вместо этого смотрите &lt;a href=&quot;functions/warn&quot;&gt;предупреждение&lt;/a&gt; и &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ ERRNO в perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cc1118a61c7aca10633514f234f4da1ee0e5bc3" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;setsid()&lt;/code&gt; for setting the session identifier of the current process.</source>
          <target state="translated">Это идентично функции &lt;code&gt;setsid()&lt;/code&gt; C для установки идентификатора сеанса текущего процесса.</target>
        </trans-unit>
        <trans-unit id="a8b9a9e6d01fce018b50fa102ad5992e876d6995" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;sinh()&lt;/code&gt; for returning the hyperbolic sine of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции &lt;code&gt;sinh()&lt;/code&gt; C для возврата гиперболического синуса числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5620e4c58d5e806939f06354c891f33af057e241" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;strcoll()&lt;/code&gt; for collating (comparing) strings transformed using the &lt;code&gt;strxfrm()&lt;/code&gt; function. Not really needed since Perl can do this transparently, see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;strcoll()&lt;/code&gt; для сортировки (сравнения) строк, преобразованных с помощью функции &lt;code&gt;strxfrm()&lt;/code&gt; . На самом деле в этом нет необходимости, поскольку Perl может делать это прозрачно, см. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c1de6e40d16de1b4908183780ee818a15a66a41" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tan()&lt;/code&gt; , returning the tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции &lt;code&gt;tan()&lt;/code&gt; C , возвращающей тангенс числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d53070d8b102022984bacaa431429b0ea23b53bf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tanh()&lt;/code&gt; , returning the hyperbolic tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Это идентично функции &lt;code&gt;tanh()&lt;/code&gt; C , возвращающей гиперболический тангенс числового аргумента. См. Также &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4339b3026b6818ba331f4b8dad83033d79b015ba" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tcgetpgrp()&lt;/code&gt; for returning the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;tcgetpgrp()&lt;/code&gt; для возврата идентификатора группы процессов основной группы процессов управляющего терминала.</target>
        </trans-unit>
        <trans-unit id="10385672619fbe5424be8d41f4c81323dffb2c77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ttyname()&lt;/code&gt; for returning the name of the current terminal.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;ttyname()&lt;/code&gt; для возврата имени текущего терминала.</target>
        </trans-unit>
        <trans-unit id="61c4adb4504ab133429c5dcca9e634dda0234fa4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tzset()&lt;/code&gt; for setting the current timezone based on the environment variable &lt;code&gt;TZ&lt;/code&gt; , to be used by &lt;code&gt;ctime()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;mktime()&lt;/code&gt; , and &lt;code&gt;strftime()&lt;/code&gt; functions.</source>
          <target state="translated">Это идентично функции C &lt;code&gt;tzset()&lt;/code&gt; для установки текущего часового пояса на основе переменной среды &lt;code&gt;TZ&lt;/code&gt; , которая будет использоваться &lt;code&gt;ctime()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;mktime()&lt;/code&gt; и &lt;code&gt;strftime()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eac2e9b93151c25128e8b44336e559f1ca26691" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wcstombs()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции C &lt;code&gt;wcstombs()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6531eaab1a3fcd3d02f83fe194ba892352425032" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wctomb()&lt;/code&gt; .</source>
          <target state="translated">Это идентично функции C &lt;code&gt;wctomb()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b638e3d48a14e811a63d8a3b93348f1843f5897" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, or the equivalent &lt;code&gt;\L&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">Это идентично функции C, за исключением того, что она может применяться к отдельному символу или ко всей строке, и в настоящее время работает так, как если бы языковой стандарт всегда был &quot;C&quot;. Рассмотрите возможность использования функции &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/lc&quot;&gt;Lc&lt;/a&gt; , см. &lt;a href=&quot;functions/lc&quot;&gt;Lc&lt;/a&gt; , или эквивалентного оператора &lt;code&gt;\L&lt;/code&gt; внутри строк с двойными кавычками.</target>
        </trans-unit>
        <trans-unit id="30976c7fff7754f905b7e098aaebc37d849842e9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except the order of arguments is consistent with Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; with the added restriction of only one path, not a list of paths. Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function but changes the owner of a symbolic link instead of the file the symbolic link points to.</source>
          <target state="translated">Это идентично функции C, за исключением того, что порядок аргументов соответствует встроенной функции &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; Perl с добавленным ограничением только одним путем, а не списком путей. Выполняет то же самое, что и функция &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; но меняет владельца символической ссылки вместо файла, на который указывает символическая ссылка.</target>
        </trans-unit>
        <trans-unit id="cec15e827312e3918cb71e034a41abdc4f73a598" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_FUNCS attribute available via MakeMaker, from which it is usually taken. Its value is a reference to an associative array, in which each key is the name of a package, and each value is an a reference to an array of function names which should be exported by the extension. For instance, one might say &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ],
Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; . The function names should be identical to those in the XSUB code; &lt;code&gt;Mksymlists&lt;/code&gt; will alter the names written to the linker option file to match the changes made by</source>
          <target state="translated">Он идентичен атрибуту DL_FUNCS, доступному через MakeMaker, из которого он обычно берется. Его значение - это ссылка на ассоциативный массив, в котором каждый ключ является именем пакета, а каждое значение - ссылкой на массив имен функций, который должен быть экспортирован расширением. Например, можно сказать &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ], Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; . Имена функций должны совпадать с именами в коде XSUB; &lt;code&gt;Mksymlists&lt;/code&gt; изменит имена, записанные в файл опций компоновщика, чтобы они соответствовали изменениям, сделанным</target>
        </trans-unit>
        <trans-unit id="310f96db114f72f372da9166d69a4cc6f2cae9b1" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_VARS attribute available via MakeMaker, and, like DL_FUNCS, it is usually specified via MakeMaker. Its value is a reference to an array of variable names which should be exported by the extension.</source>
          <target state="translated">Это идентично атрибуту DL_VARS,доступному через MakeMaker,и,как и DL_FUNCS,он обычно задается через MakeMaker.Его значение является ссылкой на массив имен переменных,которые должны экспортироваться расширением.</target>
        </trans-unit>
        <trans-unit id="b412f9ab149e41469d7ba2eef653a9c88721e439" translate="yes" xml:space="preserve">
          <source>This is identical to the macro &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt;.</source>
          <target state="translated">Это идентично макросу &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6cee0007e2daab07905e6dc7537e69cd21d5b2ba" translate="yes" xml:space="preserve">
          <source>This is ignored by most formatters, but some may use it for building indexes. It always renders as empty-string. Example: &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Это игнорируется большинством средств форматирования, но некоторые могут использовать его для построения индексов. Он всегда отображается как пустая строка. Пример: &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be9929994c9a23587b60ac75552db3fe41c07468" translate="yes" xml:space="preserve">
          <source>This is implemented as a macro.</source>
          <target state="translated">Это реализовано в виде макроса.</target>
        </trans-unit>
        <trans-unit id="667c85db18e1907f43da9d70ad90da9e90ed961a" translate="yes" xml:space="preserve">
          <source>This is important because miniperl, used to build XS modules in the core, can not load XS.</source>
          <target state="translated">Это важно,потому что miniperl,используемый для сборки модулей XS в ядре,не может загрузить XS.</target>
        </trans-unit>
        <trans-unit id="144222a27e6ef028e4173cd0825a23a1090abbf3" translate="yes" xml:space="preserve">
          <source>This is in contrast to many other dynamic languages, where the operation is determined by the type of the first argument. It also means that Perl has two versions of some operators, one for numeric and one for string comparison. For example &lt;code&gt;$x == $y&lt;/code&gt; compares two numbers for equality, and &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; compares two strings.</source>
          <target state="translated">В этом отличие от многих других динамических языков, где операция определяется типом первого аргумента. Это также означает, что Perl имеет две версии некоторых операторов: одну для числовых и одну для сравнения строк. Например, &lt;code&gt;$x == $y&lt;/code&gt; сравнивает два числа на предмет равенства, а &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; сравнивает две строки.</target>
        </trans-unit>
        <trans-unit id="17fded423d74ecd2cac30cc09f0fef74a562c96a" translate="yes" xml:space="preserve">
          <source>This is intended for authors of modules which do lots of class introspection, as it allows them to very quickly check if anything important about the local properties of a given class have changed since the last time they looked. It does not increment on method/&lt;code&gt;@ISA&lt;/code&gt; changes in superclasses.</source>
          <target state="translated">Это предназначено для авторов модулей, которые проводят много времени для самоанализа классов, так как это позволяет им очень быстро проверять, изменилось ли что-нибудь важное в локальных свойствах данного класса с момента их последнего просмотра. Он не увеличивается при изменении метода / &lt;code&gt;@ISA&lt;/code&gt; в суперклассах.</target>
        </trans-unit>
        <trans-unit id="8048e3a62929d8c0b743c4d8a83b98f6eb0f81fb" translate="yes" xml:space="preserve">
          <source>This is intended to largely replace the deprecated pseudo-hashes.</source>
          <target state="translated">Это призвано в значительной степени заменить устаревшие псевдохранилища.</target>
        </trans-unit>
        <trans-unit id="db4b800255fcc3a17f2b811fc2b88aebde232685" translate="yes" xml:space="preserve">
          <source>This is invalid because every &quot;=end&quot; command must have a formatname parameter.</source>
          <target state="translated">Это недопустимо,так как каждая команда &quot;=end&quot; должна иметь параметр formatname.</target>
        </trans-unit>
        <trans-unit id="61a2277b2bd23db81a91f83c4d1f3dd9feb9a041" translate="yes" xml:space="preserve">
          <source>This is just a basic proof of concept. It should be seriously expanded to support configurable coloration via options passed to the constructor, and &lt;b&gt;pod2text&lt;/b&gt; should be taught about those.</source>
          <target state="translated">Это просто базовое доказательство концепции. Его следует серьезно расширить, чтобы поддерживать настраиваемую окраску с помощью параметров, передаваемых конструктору, и &lt;b&gt;pod2text&lt;/b&gt; должен быть обучен этим.</target>
        </trans-unit>
        <trans-unit id="68c9d184917794ed93e7fda1e4971f91e0c45375" translate="yes" xml:space="preserve">
          <source>This is just a beta release -- there are a good number of things still left to do. Notably, support for EBCDIC platforms is still half-done, an untested.</source>
          <target state="translated">Это всего лишь бета-релиз-осталось еще много дел.Примечательно,что поддержка платформ EBCDIC все еще наполовину не проверена.</target>
        </trans-unit>
        <trans-unit id="219ed1315313e10e560072058c3673015172eb8a" translate="yes" xml:space="preserve">
          <source>This is just a quick start guide. For a more in-depth tutorial on regexes, see &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; and for the reference page, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Это просто краткое руководство. Для более подробного руководства по регулярным выражениям см. &lt;a href=&quot;perlretut&quot;&gt;Perlretut,&lt;/a&gt; а для справочной страницы см. &lt;a href=&quot;perlre&quot;&gt;Perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="285e57010c635f262d70613679ce183fe2c1fc6d" translate="yes" xml:space="preserve">
          <source>This is just a restatement of the previous section. Unless you are completely certain you know what you are doing, avoid mixing filtered &amp;amp; non-filtered data.</source>
          <target state="translated">Это просто повторение предыдущего раздела. Если вы не уверены, что знаете, что делаете, избегайте смешивания отфильтрованных и нефильтрованных данных.</target>
        </trans-unit>
        <trans-unit id="0eb6c125a87601bb415e7dd8ac4261d5f4ccd383" translate="yes" xml:space="preserve">
          <source>This is just a shorthand for a typeglob assignment at compile time:</source>
          <target state="translated">Это всего лишь сокращение для типографского задания во время компиляции:</target>
        </trans-unit>
        <trans-unit id="15b35232b5a8087ae488ff75565de5703f14864d" translate="yes" xml:space="preserve">
          <source>This is just a tutorial. For the full story on Perl regular expressions, see the &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; regular expressions reference page.</source>
          <target state="translated">Это просто учебник. Полную историю регулярных выражений Perl см. На &lt;a href=&quot;perlre&quot;&gt;странице справки по&lt;/a&gt; регулярным выражениям Perl .</target>
        </trans-unit>
        <trans-unit id="9456d5890fbed572d26379cc56324c8cfe828e36" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="translated">Это просто оболочка для обычной функции Perl &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; . Это предусмотрено для того, чтобы вы могли использовать &quot;sprintf&quot; в обозначении скобок:</target>
        </trans-unit>
        <trans-unit id="77266324e65b81993bcee36043a748db86e77bf5" translate="yes" xml:space="preserve">
          <source>This is just an alias for $ctx-&amp;gt;new.</source>
          <target state="translated">Это просто псевдоним для $ ctx-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="4341fe03623ad4301c3243c214057adf6cd69228" translate="yes" xml:space="preserve">
          <source>This is just an alias for $md5-&amp;gt;new.</source>
          <target state="translated">Это просто псевдоним для $ md5-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="abb98ec9f418273dc2ca6cd9acdcab91a8675d3b" translate="yes" xml:space="preserve">
          <source>This is just like get_title, except that it returns just the modulename, if the title seems to be of the form &quot;SomeModuleName -- description&quot;.</source>
          <target state="translated">Это похоже на get_title,за исключением того,что возвращает только имя модуля,если заголовок выглядит как &quot;SomeModuleName --description&quot;.</target>
        </trans-unit>
        <trans-unit id="3efe951774b37c8f5ed5c70b61d80e43335a5d14" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="translated">Это похоже на &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, за исключением того, что он соответствует только один раз между вызовами оператора &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; . Это полезная оптимизация, когда, например, вы хотите видеть только первое вхождение чего-либо в каждом файле набора файлов. Только &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; шаблоны, локальные для текущего пакета, сбрасываются.</target>
        </trans-unit>
        <trans-unit id="d1f273b15a0cb3300a978b7939f344dd1d08639d" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt; , but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="translated">Это похоже на &lt;code&gt;&quot;a&quot;&lt;/code&gt; , но некоторые элементы представляют собой пустую строку и не должны корректироваться. Единственное внутреннее свойство Perl, доступное через &lt;code&gt;prop_invmap&lt;/code&gt; , имеет следующий тип: &amp;laquo;Perl_Decimal_Digit&amp;raquo; возвращает карту инверсии, которая дает числовые значения, представленные десятичными символами Unicode. Символы, которые не представляют десятичные цифры, отображаются в пустую строку, например:</target>
        </trans-unit>
        <trans-unit id="4c2c127a4acabd567283fc3055323b13e8a32015" translate="yes" xml:space="preserve">
          <source>This is like the SMTP transport, but uses TLS security. You can authenticate with this module as well, using any mechanisms your server supports after STARTTLS.</source>
          <target state="translated">Это похоже на SMTP транспорт,но использует TLS безопасность.Вы можете аутентифицироваться и в этом модуле,используя любые механизмы,поддерживаемые вашим сервером после STARTTLS.</target>
        </trans-unit>
        <trans-unit id="ee19061e56d9213c77400710440b7c20343ebe03" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Это в основном полезно для создания растровых изображений для операций &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; и низкоуровневых операций обработки tty POSIX. Если FILEHANDLE является выражением, значение принимается как косвенный дескриптор файла, обычно это его имя.</target>
        </trans-unit>
        <trans-unit id="4451800d0e0114802550054b61665e033a2b00a5" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Это в основном полезно для создания растровых изображений для операций &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; и низкоуровневых операций обработки tty POSIX. Если FILEHANDLE является выражением, значение принимается как косвенный дескриптор файла, обычно это его имя.</target>
        </trans-unit>
        <trans-unit id="37ce9a12e2723922e8bd944d2d5d67e411bc7f1f" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt; .</source>
          <target state="translated">Это просто синоним &lt;code&gt;as_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dab1c8c1fba88ee26cb0159afceae84eeab9c5c" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, but not as illustrative:</source>
          <target state="translated">Это более переносимо, чем необработанный &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , но не так наглядно:</target>
        </trans-unit>
        <trans-unit id="e4ef392975ecd504b3ac95743d2709331ec1fc38" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; does</source>
          <target state="translated">Это не образец простоты и не образец переносимости, но он иллюстрирует суть: мы можем проникнуть за кулисы и получить доступ к хорошо охраняемой памяти Perl! (Важное примечание: &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; Perl делает</target>
        </trans-unit>
        <trans-unit id="10ebf1cbe04784f38db52da63b8ec5a60455457d" translate="yes" xml:space="preserve">
          <source>This is normally all you need to know. However, many options are available:</source>
          <target state="translated">Обычно это все,что тебе нужно знать.Однако,существует множество вариантов:</target>
        </trans-unit>
        <trans-unit id="d00bfe25391751730fea233731dd8b0f5f6ab569" translate="yes" xml:space="preserve">
          <source>This is not &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, which tells you how to use the debugger. This manpage describes low-level details concerning the debugger's internals, which range from difficult to impossible to understand for anyone who isn't incredibly intimate with Perl's guts. Caveat lector.</source>
          <target state="translated">Это не &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; , в котором рассказывается, как использовать отладчик. Эта справочная страница описывает низкоуровневые детали, касающиеся внутреннего устройства отладчика, которые варьируются от трудных до невозможных для понимания для тех, кто не слишком близок к Perl. Будьте лектором.</target>
        </trans-unit>
        <trans-unit id="f404a9e2e0db79bb4f43c8d7bbb05496d430ba62" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the Encode extension for that.</source>
          <target state="translated">Это не универсальный интерфейс Unicode to by byte encoding interface:используйте для этого расширение Encode.</target>
        </trans-unit>
        <trans-unit id="7457d8ee09385437d0b615e7e131b4e9c0b973a9" translate="yes" xml:space="preserve">
          <source>This is not a general purpose byte encoding to Unicode interface: use the Encode extension for that.</source>
          <target state="translated">Это не байтовая кодировка общего назначения для интерфейса Unicode:используйте для этого расширение Encode.</target>
        </trans-unit>
        <trans-unit id="d116bb6d0c3c84c2243b689bc93fe4a6155eb5cb" translate="yes" xml:space="preserve">
          <source>This is not as short as before, but it makes it more obvious that we intend to have little-endian byte-order for a whole group, not only for individual template codes. It can also be more readable and easier to maintain.</source>
          <target state="translated">Это не так коротко,как раньше,но это делает более очевидным,что мы намерены иметь малозадачный порядок байт для целой группы,а не только для отдельных кодов шаблонов.Он также может быть более читабельным и легким в обслуживании.</target>
        </trans-unit>
        <trans-unit id="21c82389f9ec1dc190c296dba01242b89223a846" translate="yes" xml:space="preserve">
          <source>This is not ideal, but it seems to be the best compromise. If it doesn't work for you, please let me know the details of how it broke.</source>
          <target state="translated">Это не идеально,но кажется,что это лучший компромисс.Если это не сработает,пожалуйста,дайте мне знать подробности того,как он сломался.</target>
        </trans-unit>
        <trans-unit id="a8f2331f9105fa67d4e126b8930145be58fae503" translate="yes" xml:space="preserve">
          <source>This is not ok:</source>
          <target state="translated">Это не нормально:</target>
        </trans-unit>
        <trans-unit id="909f3f0de148a4f0a784930ff89af77cea3c7576" translate="yes" xml:space="preserve">
          <source>This is not really a &quot;severe&quot; error, but it is supposed to be raised by default even if warnings are not enabled, and currently the only way to do that in Perl is to mark it as serious.</source>
          <target state="translated">На самом деле это не &quot;серьезная&quot; ошибка,но по умолчанию она должна быть поднята,даже если предупреждения не включены,и на данный момент единственный способ сделать это в Perl-пометить ее как серьезную.</target>
        </trans-unit>
        <trans-unit id="197111743c19bce55304223ee2f18830ead89426" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;.</source>
          <target state="translated">Это не нормальный способ использования лексированного текста. Для этого используйте &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9e6c0b666a1af0815bd174af9f121c2162997f" translate="yes" xml:space="preserve">
          <source>This is not the right answer at all, but the sum looks correct. I wonder if it's anything to do with operator precedence? We'll try a couple of other possibilities with our sum:</source>
          <target state="translated">Это совсем не правильный ответ,но сумма выглядит правильной.Интересно,это как-то связано с приоритетом оператора? Мы попробуем еще пару вариантов с нашей суммой:</target>
        </trans-unit>
        <trans-unit id="8a04fbe62aa8087e67610ad69a72c7364e385eaa" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt; . That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="translated">Это не символ, который вы используете перед именем массива для получения последнего индекса, например &lt;code&gt;$#array&lt;/code&gt; . По-прежнему, как получить последний индекс массива в Perl. Эти двое не имеют ничего общего друг с другом.</target>
        </trans-unit>
        <trans-unit id="a71eefb6bc615d22ea75cd4d866e05c590f48f94" translate="yes" xml:space="preserve">
          <source>This is not to say that Perl threads are completely different from everything that's ever come before. They're not. Perl's threading model owes a lot to other thread models, especially POSIX. Just as Perl is not C, though, Perl threads are not POSIX threads. So if you find yourself looking for mutexes, or thread priorities, it's time to step back a bit and think about what you want to do and how Perl can do it.</source>
          <target state="translated">Это не значит,что нити Perl полностью отличаются от всего,что когда-либо приходило раньше.Это не так.Модель потоков Perl во многом обязана другим моделям потоков,особенно POSIX.Точно так же,как Perl-не C,но потоки Perl-не POSIX.Так что если вы ищете мьютексы или приоритеты потоков,пришло время немного отойти назад и подумать о том,что вы хотите сделать и как Perl может это сделать.</target>
        </trans-unit>
        <trans-unit id="1490fa72c1eafb91d46399cb68efda52398b105d" translate="yes" xml:space="preserve">
          <source>This is not very useful, and perl currently optimizes this away.</source>
          <target state="translated">Это не очень полезно,и perl в настоящее время оптимизирует это прочь.</target>
        </trans-unit>
        <trans-unit id="719ad110f9ecd2d06449f518fe559ae60b466e21" translate="yes" xml:space="preserve">
          <source>This is now the recommended interface to install().</source>
          <target state="translated">Теперь это рекомендуемый интерфейс для установки().</target>
        </trans-unit>
        <trans-unit id="8dd3c5aefc65986cd4924a120675ce7dc9b1881f" translate="yes" xml:space="preserve">
          <source>This is of paramount importance, since it's the documentation of what goes where in the Perl source. Read it over a couple of times and it might start to make sense - don't worry if it doesn't yet, because the best way to study it is to read it in conjunction with poking at Perl source, and we'll do that later on.</source>
          <target state="translated">Это имеет первостепенное значение,так как это документация о том,что идет куда в источнике Perl.Прочтите её пару раз и она может начать иметь смысл-не волнуйтесь,если её ещё нет,потому что лучший способ изучить её-это прочитать её вместе с прочтением исходников на Perl,и мы сделаем это позже.</target>
        </trans-unit>
        <trans-unit id="fadd54f30e37dbf502c0a6893df00ea6b04ab979" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Это часто бывает полезно, если вам нужно проверить текущую версию Perl перед &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; библиотечных модулей, которые не будут работать со старыми версиями Perl. (Мы стараемся не делать этого больше, чем нужно.)</target>
        </trans-unit>
        <trans-unit id="96345383ecfecda78d417eea671d77452c1d163e" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Это часто бывает полезно, если вам нужно проверить текущую версию Perl перед &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; библиотечных модулей, которые не будут работать со старыми версиями Perl. (Мы стараемся не делать этого больше, чем нужно.)</target>
        </trans-unit>
        <trans-unit id="b7065d0815c75fb916f5ccef644a97fc5f9a5ab5" translate="yes" xml:space="preserve">
          <source>This is one of the cases we mentioned earlier in which references could spring into existence when in an lvalue context. Before this statement, &lt;code&gt;$array[$x]&lt;/code&gt; may have been undefined. If so, it's automatically defined with a hash reference so that we can look up &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; in it. Likewise &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; will automatically get defined with an array reference so that we can look up &lt;code&gt;[0]&lt;/code&gt; in it. This process is called</source>
          <target state="translated">Это один из упомянутых ранее случаев, когда ссылки могут возникать в контексте lvalue. До этого оператора &lt;code&gt;$array[$x]&lt;/code&gt; могло быть неопределенным. Если это так, он автоматически определяется со ссылкой на хэш, чтобы мы могли найти в нем &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; . Точно так же &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; автоматически будет определен со ссылкой на массив, чтобы мы могли найти в нем &lt;code&gt;[0]&lt;/code&gt; . Этот процесс называется</target>
        </trans-unit>
        <trans-unit id="6a3344e74e174252dc0aef67360fb712feea83d3" translate="yes" xml:space="preserve">
          <source>This is one of the only places where giving a prototype to a closure makes much sense. If you wanted to impose scalar context on the arguments of these functions (probably not a wise idea for this particular example), you could have written it this way instead:</source>
          <target state="translated">Это одно из немногих мест,где подача прототипа на закрытие имеет большой смысл.Если бы вы хотели наложить скалярный контекст на аргументы этих функций (вероятно,не мудрая идея для данного конкретного примера),вы могли бы написать его таким образом:</target>
        </trans-unit>
        <trans-unit id="8815273ee560d0448d9c01c105592b19a9f70fd8" translate="yes" xml:space="preserve">
          <source>This is only present when &lt;code&gt;netorder&lt;/code&gt; is FALSE. It is the $Config{byteorder} string of the perl that created this image. It is a string like &quot;1234&quot; (32 bit little endian) or &quot;87654321&quot; (64 bit big endian). This must match the current perl for the image to be readable by Storable.</source>
          <target state="translated">Это присутствует, только когда &lt;code&gt;netorder&lt;/code&gt; имеет значение FALSE. Это строка $ Config {byteorder} perl, создавшего этот образ. Это строка типа &amp;laquo;1234&amp;raquo; (32-битный прямой порядок байтов) или &amp;laquo;87654321&amp;raquo; (64-битный прямой порядок байтов). Он должен совпадать с текущим perl, чтобы изображение было доступно для чтения Storable.</target>
        </trans-unit>
        <trans-unit id="84ff724c95d2598efdb8d7d443f2851d8e9c24b5" translate="yes" xml:space="preserve">
          <source>This is only required on some platforms which do not handle dependent libraries automatically. For example the Socket Perl extension library (</source>
          <target state="translated">Это требуется только на некоторых платформах,которые не обрабатывают зависимые библиотеки автоматически.Например,библиотека расширения Socket Perl (</target>
        </trans-unit>
        <trans-unit id="3167fd37c36e8874785bfe9f3f3013cce7f288bd" translate="yes" xml:space="preserve">
          <source>This is open source software. The code repository is available for public review and contribution under the terms of the license.</source>
          <target state="translated">Это программное обеспечение с открытым исходным кодом.Хранилище кода доступно для публичного просмотра и внесения в него изменений на условиях лицензии.</target>
        </trans-unit>
        <trans-unit id="bcfe5a91a20366b07a20b45c08c83d2cb3335747" translate="yes" xml:space="preserve">
          <source>This is our final regexp. To recap, we built a regexp by</source>
          <target state="translated">Это наш последний регэксперт.Подводя итог,мы построили регеxp по</target>
        </trans-unit>
        <trans-unit id="55cbe19c15cda5405c9b99032930566aa6e4cd4b" translate="yes" xml:space="preserve">
          <source>This is parsed as:</source>
          <target state="translated">Это анализируется как:</target>
        </trans-unit>
        <trans-unit id="4f7853da7a16df56ba94a3f89eeeb6c41db7cabc" translate="yes" xml:space="preserve">
          <source>This is partially implemented now.</source>
          <target state="translated">Сейчас это частично реализовано.</target>
        </trans-unit>
        <trans-unit id="2a6f22dd0203804895067e4cd94d48784411f916" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamic patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="translated">Это особенно полезно для динамических шаблонов, таких как те, которые считываются из файла конфигурации, взяты из аргумента или указываются где-нибудь в таблице. Рассмотрим случай, когда некоторые шаблоны хотят быть чувствительными к регистру, а некоторые нет: нечувствительные к регистру шаблоны просто должны включать &lt;code&gt;(?i)&lt;/code&gt; в начале шаблона. Например:</target>
        </trans-unit>
        <trans-unit id="aaa59114ea7716b61a1b0ecf212fbfdac38cd5ec" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you have More Than One Way (tm) to solve a problem in a program, and only wish to continue down a path if all modules could be loaded, and not load them if they couldn't.</source>
          <target state="translated">Это особенно полезно,если у вас есть более чем один способ (tm)решения проблемы в программе,и вы хотите продолжать идти по пути только в том случае,если все модули могут быть загружены,и не загружать их,если они не могут.</target>
        </trans-unit>
        <trans-unit id="7f5141125aa28c42d6dec636c32fcbaa85fe78c3" translate="yes" xml:space="preserve">
          <source>This is particularly useful when applied to code references returned from reval().</source>
          <target state="translated">Это особенно полезно при применении к кодовым ссылкам,возвращаемым из функции reval().</target>
        </trans-unit>
        <trans-unit id="3afdcef939cf6d1f8b0ef2be038cdb0c7d7984fa" translate="yes" xml:space="preserve">
          <source>This is powerful, and slightly dangerous, in that it's possible to intend (with the utmost sincerity) to use a hard reference, and accidentally use a symbolic reference instead. To protect against that, you can say</source>
          <target state="translated">Это мощно и слегка опасно тем,что можно намеренно (с предельной искренностью)использовать жесткую ссылку,и случайно использовать вместо нее символическую ссылку.Чтобы защититься от этого,можно сказать.</target>
        </trans-unit>
        <trans-unit id="1d61b3fe5532441244041a6185a4d7b90b80ec48" translate="yes" xml:space="preserve">
          <source>This is primarily meant for the use of modules such as FTP where passwords are sent, but we do not want to display them in the debugging information.</source>
          <target state="translated">Это в первую очередь предназначено для использования таких модулей,как FTP,куда отправляются пароли,но мы не хотим отображать их в отладочной информации.</target>
        </trans-unit>
        <trans-unit id="01c91853268ed50e9d0a33c6896652af44de4d99" translate="yes" xml:space="preserve">
          <source>This is primarily of use for people who repackage Perl modules.</source>
          <target state="translated">Это в первую очередь полезно для людей,которые переупаковывают модули Perl.</target>
        </trans-unit>
        <trans-unit id="831dab0bf255edc5ba7e605462344bdbe78142e8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="translated">Это в основном используется внутри &lt;code&gt;(?{...})&lt;/code&gt; блоков для проверки недавно сопоставленного текста. Например, чтобы эффективно записывать текст в переменную (в дополнение к &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; и т. Д.), Замените &lt;code&gt;(...)&lt;/code&gt; на</target>
        </trans-unit>
        <trans-unit id="43405231d7a3fc726c046090388674dddde66ec5" translate="yes" xml:space="preserve">
          <source>This is primarily useful for install scripts.</source>
          <target state="translated">Это в первую очередь полезно для установки скриптов.</target>
        </trans-unit>
        <trans-unit id="71555351eedbd86160cbba934f94d326494c3535" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; in perl sources.</source>
          <target state="translated">Это эквивалент printf (). printf определен # для этой функции, поэтому (в настоящее время) законно использовать &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; в источниках perl.</target>
        </trans-unit>
        <trans-unit id="4ea35349c6ed8d6a98b7de634d09f57721480861" translate="yes" xml:space="preserve">
          <source>This is private to the Perl core and subject to change. Should be left null.</source>
          <target state="translated">Это личное для ядра Perl и может быть изменено.Должно быть оставлено недействительным.</target>
        </trans-unit>
        <trans-unit id="98fa02440d9fac9b73c470e7ca881854b6795009" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt;.</source>
          <target state="translated">Вероятно, это не то, что вы хотите использовать, вы, вероятно, хотели &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; или &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; или &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="697287005f5cb5ed6d011d9e5061126f21f55b05" translate="yes" xml:space="preserve">
          <source>This is provided as a more readable version of &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">Это предоставляется как более читаемая версия &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cabb9b2376d3134de9c8bd807fc2548baba2fca" translate="yes" xml:space="preserve">
          <source>This is quite different, however, from not even trusting the writer of the code not to try to do something evil. That's the kind of trust needed when someone hands you a program you've never seen before and says, &quot;Here, run this.&quot; For that kind of safety, you might want to check out the Safe module, included standard in the Perl distribution. This module allows the programmer to set up special compartments in which all system operations are trapped and namespace access is carefully controlled. Safe should not be considered bullet-proof, though: it will not prevent the foreign code to set up infinite loops, allocate gigabytes of memory, or even abusing perl bugs to make the host interpreter crash or behave in unpredictable ways. In any case it's better avoided completely if you're really concerned about security.</source>
          <target state="translated">Однако это совсем другое дело-даже не доверять писателю кода,чтобы не попытаться сделать что-то злое.Такое доверие необходимо,когда кто-то передает вам программу,которую вы никогда раньше не видели,и говорит:&quot;Вот,запустите это&quot;.Для такой безопасности вам может понадобиться модуль Safe,включенный в стандартный дистрибутив Perl.Этот модуль позволяет программисту устанавливать специальные отсеки,в которых все системные операции оказываются в ловушке,а доступ к пространству имён тщательно контролируется.При этом Safe не следует считать пуленепробиваемым:он не помешает постороннему коду настраивать бесконечные циклы,выделять гигабайты памяти или даже злоупотреблять perl-багами,чтобы вызвать падение хост-интерпретатора или вести себя непредсказуемым образом.В любом случае,его лучше полностью избежать,если вы действительно беспокоитесь о безопасности.</target>
        </trans-unit>
        <trans-unit id="fc844a09760bd8a2dc9b577b36da09548b575605" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;EXAMPLE 1&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EXAMPLE 2&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;EXAMPLE 3&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="translated">Это довольно типично для файлов .xs: обычно файл .xs предоставляет интерфейс для существующей функции C. Затем эта функция C определяется где-то (либо во внешней библиотеке, либо в первой части файла .xs), а интерфейс Perl для этой функции (то есть &amp;laquo;клей Perl&amp;raquo;) описывается во второй части файла .xs. Ситуация в &lt;a href=&quot;#EXAMPLE-1&quot;&gt;ПРИМЕРЕ 1&lt;/a&gt; , &lt;a href=&quot;#EXAMPLE-2&quot;&gt;ПРИМЕРЕ 2&lt;/a&gt; и &lt;a href=&quot;#EXAMPLE-3&quot;&gt;ПРИМЕРЕ 3&lt;/a&gt; , когда вся работа выполняется внутри &amp;laquo;клея Perl&amp;raquo;, является скорее исключением, чем правилом.</target>
        </trans-unit>
        <trans-unit id="c3a982ed6685f74bf9f57db540f3caed5035dcd6" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt; , it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="translated">Это очень полезно, поскольку обычно улучшает читаемость. Хотя это отлично работает для &lt;code&gt;SV *&lt;/code&gt; , к сожалению, не так просто получить &lt;code&gt;AV *&lt;/code&gt; или &lt;code&gt;HV *&lt;/code&gt; в качестве возвращаемого значения. Вы</target>
        </trans-unit>
        <trans-unit id="df9aa2c2c409f58ba99139ca42f157f4afdf7a29" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="translated">Это редко используется. Это один из способов иногда использовать код E &amp;lt;...&amp;gt;. Например, вместо &amp;laquo; &lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt; &amp;raquo; (для &amp;laquo;N &amp;lt;3&amp;raquo;) вы можете написать &amp;laquo; &lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &amp;raquo; (&amp;laquo;Z &amp;lt;&amp;gt;&amp;raquo; разделяет &amp;laquo;N&amp;raquo; и &amp;laquo;&amp;lt;&amp;raquo;, поэтому они не может считаться частью (фиктивного) кода &amp;laquo;N &amp;lt;...&amp;gt;&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="5c569493cb06e371332b5d2d180bdd4a7a876b1d" translate="yes" xml:space="preserve">
          <source>This is required by some servers. For example if you are connecting to an INN server and you have transfer permission your connection will be connected to the transfer daemon, not the NNTP daemon. Issuing this command will cause the transfer daemon to hand over control to the NNTP daemon.</source>
          <target state="translated">Этого требуют некоторые серверы.Например,если вы подключаетесь к серверу INN и у вас есть разрешение на передачу,ваше соединение будет подключено к даемону передачи,а не к даемону NNTP.Выполнение этой команды заставит передающего демона передать управление демону NNTP.</target>
        </trans-unit>
        <trans-unit id="1aba726220151e0bdd8e20f672a38f3cb853c543" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems C is not owned by root.</source>
          <target state="translated">Это необходимо,так как на многих unix-системах C не принадлежит корневой системе.</target>
        </trans-unit>
        <trans-unit id="53e759494f9bf8d7efd9149cfc161ebbf71db524" translate="yes" xml:space="preserve">
          <source>This is safer than and replaces the &quot;no_plan&quot; plan.</source>
          <target state="translated">Это безопаснее и заменяет собой план &quot;no_plan&quot;.</target>
        </trans-unit>
        <trans-unit id="c7ebcb8463dd98d519e70a00c26fec5b1949c87c" translate="yes" xml:space="preserve">
          <source>This is seldom necessary, though, because this is done automatically, like when you access an array:</source>
          <target state="translated">Однако в этом редко возникает необходимость,так как это делается автоматически,например,когда вы получаете доступ к массиву:</target>
        </trans-unit>
        <trans-unit id="5b39df7c425593c524473bd917a5316f755e7f35" translate="yes" xml:space="preserve">
          <source>This is set to &lt;code&gt;true&lt;/code&gt; in</source>
          <target state="translated">Это установлено в &lt;code&gt;true&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="bda100b399c447a02432db64ae424bebb5a77bb3" translate="yes" xml:space="preserve">
          <source>This is set to a true value. It allows the tests to determine if they are being executed through the harness or by any other means.</source>
          <target state="translated">Это установлено в истинное значение.Это позволяет определить,выполняются ли тесты через жгут или любым другим способом.</target>
        </trans-unit>
        <trans-unit id="8825b383410611d9ab88c7c6da41a37ab67b7bd2" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, grep(1) and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="translated">Это похоже по духу на grep(1)и его родственников,но не то же самое.В частности,она не ограничивается использованием регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="031672016e4d502c018309428e47661800aac1a9" translate="yes" xml:space="preserve">
          <source>This is similar to</source>
          <target state="translated">Это похоже на</target>
        </trans-unit>
        <trans-unit id="3e6ba00cc4274369aaec7e06e964eb77cd40c12d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$&amp;amp;&lt;/code&gt; ( &lt;code&gt;$MATCH&lt;/code&gt; ), за исключением того, что это не приводит к снижению производительности, связанной с этой переменной.</target>
        </trans-unit>
        <trans-unit id="95e9006abb746eec00ddbe6c7b21cfe4ec62c97b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$'&lt;/code&gt; ( &lt;code&gt;$POSTMATCH&lt;/code&gt; ), за исключением того, что не влечет за собой снижение производительности, связанное с этой переменной.</target>
        </trans-unit>
        <trans-unit id="62e38c00b725c5a13563494b1438770078513b03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$`&lt;/code&gt; ($PREMATCH) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Это похоже на &lt;code&gt;$`&lt;/code&gt; ($ PREMATCH), за исключением того, что это не снижает производительность, связанную с этой переменной.</target>
        </trans-unit>
        <trans-unit id="b7b04635104076e8869c03a97df7510eda62d809" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="translated">Это похоже на &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; , но просто возвращает либо ссылку на код, либо &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , чтобы указать, что других методов с таким именем не существует.</target>
        </trans-unit>
        <trans-unit id="f73fed07cf9661cd5a76d43367f7870e1dfd1e63" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt; . The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="translated">Это похоже на &lt;code&gt;string_vianame&lt;/code&gt; . Основное отличие состоит в том, что в большинстве случаев &lt;code&gt;vianame&lt;/code&gt; возвращает порядковый номер кода, тогда как &lt;code&gt;string_vianame&lt;/code&gt; возвращает строку. Например,</target>
        </trans-unit>
        <trans-unit id="82735301d82a0dc4313bb1d53ad031d27f023c2f" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">Это похоже на встроенную функцию &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; Perl для возврата строки, аргументы которой отформатированы в соответствии с запросом, см. &lt;a href=&quot;functions/sprintf&quot;&gt;Sprintf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb9fc002d8f7d1fdb8d39dcb8cc96f69462055b3" translate="yes" xml:space="preserve">
          <source>This is similar to calling the &lt;code&gt;x&lt;/code&gt; command on each applicable var.</source>
          <target state="translated">Это похоже на вызов команды &lt;code&gt;x&lt;/code&gt; для каждой применимой переменной .</target>
        </trans-unit>
        <trans-unit id="c882c2e2c2f32205e6402773c4c5a8648cf274ab" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Perl 6. Like &lt;code&gt;(*PRUNE)&lt;/code&gt; , this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="translated">Это похоже на оператор &quot;вырезать группу&quot; &lt;code&gt;::&lt;/code&gt; из Perl 6. Как и &lt;code&gt;(*PRUNE)&lt;/code&gt; , этот глагол всегда соответствует, и при возврате в случае неудачи он заставляет механизм регулярных выражений пробовать следующее чередование в самой внутренней включающей группе ( захват или иное), имеющий чередования. Две ветви &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; не считаются чередованием, насколько это касается &lt;code&gt;(*THEN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b23340a8a44f500f9fdd2f514353aafef1f1600" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt; , for duplicating a file descriptor.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;dup()&lt;/code&gt; для дублирования дескриптора файла.</target>
        </trans-unit>
        <trans-unit id="bc59e25f670eb40f71d53b45961566d88e8da8a1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt; , for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;dup2()&lt;/code&gt; для дублирования файлового дескриптора на другой известный файловый дескриптор.</target>
        </trans-unit>
        <trans-unit id="f3ae23dd5fc0059c09ec24ea0c5ef5acb6d58fa1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;mkfifo()&lt;/code&gt; for creating FIFO special files.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;mkfifo()&lt;/code&gt; для создания специальных файлов FIFO.</target>
        </trans-unit>
        <trans-unit id="cb82e089ae466005cc0dc383a964501667069da5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt; , for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;nice()&lt;/code&gt; для изменения предпочтения планирования текущего процесса. Положительные аргументы означают более вежливый процесс, отрицательные значения - более трудный процесс. Обычные (не root) пользовательские процессы могут измениться только в сторону более вежливых.</target>
        </trans-unit>
        <trans-unit id="458e14f71182f02f4a806b4f96c30f94a69e2f5d" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt; , which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">Это похоже на &lt;code&gt;pause()&lt;/code&gt; функции C , которая приостанавливает выполнение текущего процесса до получения сигнала.</target>
        </trans-unit>
        <trans-unit id="b5c0406fc055d4e959d81bed9920f88092d08404" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;setpgid()&lt;/code&gt; for setting the process group identifier of the current process.</source>
          <target state="translated">Это похоже на функцию C &lt;code&gt;setpgid()&lt;/code&gt; для установки идентификатора группы процессов текущего процесса.</target>
        </trans-unit>
        <trans-unit id="b56c5c880f143b4a031f787b44269acb561de2d9" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcdrain()&lt;/code&gt; for draining the output queue of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcdrain()&lt;/code&gt; для очистки очереди вывода потока аргументов.</target>
        </trans-unit>
        <trans-unit id="fba332acc7267461256bd4bbecd53d5cd07ab313" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflow()&lt;/code&gt; for controlling the flow of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcflow()&lt;/code&gt; для управления потоком ее потока аргументов.</target>
        </trans-unit>
        <trans-unit id="2235c85d6f3847cd44159a3753a652d29703f3f5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflush()&lt;/code&gt; for flushing the I/O buffers of its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcflush()&lt;/code&gt; для очистки буферов ввода-вывода своего потока аргументов.</target>
        </trans-unit>
        <trans-unit id="32c5db3dfe196b930ba8a6acd29334ab37d33b0e" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsendbreak()&lt;/code&gt; for sending a break on its argument stream.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcsendbreak()&lt;/code&gt; для отправки прерывания в потоке аргументов.</target>
        </trans-unit>
        <trans-unit id="d51d66ac3fd31e0526e015560112bf7a83d1d7e3" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsetpgrp()&lt;/code&gt; for setting the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">Это похоже на C-функцию &lt;code&gt;tcsetpgrp()&lt;/code&gt; для установки идентификатора группы процессов для группы процессов переднего плана управляющего терминала.</target>
        </trans-unit>
        <trans-unit id="66ffda00414691432da9fbf5e0758036abbf4c87" translate="yes" xml:space="preserve">
          <source>This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">Это похоже на функцию C, за исключением того, что она может применяться к одиночному символу или ко всей строке, и в настоящее время работает так, как если бы языковой стандарт всегда был &amp;laquo;C&amp;raquo;. Рассмотрите возможность использования функции &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; , см. &lt;a href=&quot;functions/uc&quot;&gt;Uc&lt;/a&gt; , или эквивалентного оператора &lt;code&gt;\U&lt;/code&gt; внутри строк с двойными кавычками.</target>
        </trans-unit>
        <trans-unit id="8eda6f0f736dfb783b722b66835ba379ce58a17f" translate="yes" xml:space="preserve">
          <source>This is similar to using T_OPAQUEPTR but can be used to process more than one element.</source>
          <target state="translated">Это похоже на использование T_OPAQUEPTR,но может быть использовано для обработки более чем одного элемента.</target>
        </trans-unit>
        <trans-unit id="a070e7d29b17578c9c82db6eb47bc8205a22821e" translate="yes" xml:space="preserve">
          <source>This is so that you can write loops like:</source>
          <target state="translated">Это для того,чтобы можно было писать такие циклы,как..:</target>
        </trans-unit>
        <trans-unit id="5bb4dbbe89d426f58f9d96c7270c7af2e03e5d56" translate="yes" xml:space="preserve">
          <source>This is something you, the programmer, has to keep track of; sorry. You could consider adopting a kind of &quot;Hungarian notation&quot; to help with this.</source>
          <target state="translated">Это то,за чем вы,программист,должны следить;извините.Вы могли бы подумать о принятии своего рода &quot;венгерской нотации&quot;,чтобы помочь в этом.</target>
        </trans-unit>
        <trans-unit id="f62086875f698e88f1673ff191123d1ebe166ce0" translate="yes" xml:space="preserve">
          <source>This is somewhat equivalent to the C-style switch statement's fallthrough functionality (not to be confused with</source>
          <target state="translated">Это в какой-то степени эквивалентно функции переключателя в стиле C (не путать с</target>
        </trans-unit>
        <trans-unit id="7039ef5c59f1a390b0357d66a81e16efc5deefb4" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt; , but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">Это чем-то похоже на &lt;code&gt;SUPER&lt;/code&gt; , но в нем используется порядок разрешения метода C3, чтобы добиться большей согласованности в ситуациях множественного наследования. Обратите внимание, что, хотя наследование в целом следует за тем, какой MRO действует для данного класса, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; использует только C3 MRO.</target>
        </trans-unit>
        <trans-unit id="a6e2c8909db8a95dab398add127a82ec5182c9bc" translate="yes" xml:space="preserve">
          <source>This is still a symbolic reference, and is still saddled with the problems enumerated above. It would be far better to write:</source>
          <target state="translated">Это все еще символическая ссылка,и все еще оседлана проблемами,перечисленными выше.Было бы гораздо лучше написать:</target>
        </trans-unit>
        <trans-unit id="dc230bd2bfa305e90c52714b5b02997ea62329f3" translate="yes" xml:space="preserve">
          <source>This is subroutine definition, not a real function</source>
          <target state="translated">Это подпрограммное определение,а не реальная функция.</target>
        </trans-unit>
        <trans-unit id="b1e77ff60ef4ac8debe40c75ba809e724ed8905b" translate="yes" xml:space="preserve">
          <source>This is substantially different than the behavior of &lt;code&gt;SUPER&lt;/code&gt; under complex multiple inheritance. (This becomes obvious when one realizes that the common superclasses in the C3 linearizations of a given class and one of its parents will not always be ordered the same for both.)</source>
          <target state="translated">Это существенно отличается от поведения &lt;code&gt;SUPER&lt;/code&gt; при сложном множественном наследовании. (Это становится очевидным, когда понимаешь, что общие суперклассы в линеаризациях C3 данного класса и одного из его родителей не всегда будут упорядочены одинаково для обоих.)</target>
        </trans-unit>
        <trans-unit id="23e17e01cd60708587cb31d9ff8b363ecd66c020" translate="yes" xml:space="preserve">
          <source>This is sufficient because non-XS modules install only &quot;.pm&quot; files and (sometimes) pod and/or man documentation. No re-linking of the perl binary is needed to build, install or use non-XS modules.</source>
          <target state="translated">Этого достаточно,потому что не XS модули устанавливают только &quot;.pm&quot; файлы и (иногда)документацию pod и/или man.Для сборки,установки и использования не XS-модулей не требуется перекомпоновка бинарного файла perl.</target>
        </trans-unit>
        <trans-unit id="0c58a399144492e3d85b2b92893dc4441d4f1a4b" translate="yes" xml:space="preserve">
          <source>This is synonymous with:</source>
          <target state="translated">Это синоним:</target>
        </trans-unit>
        <trans-unit id="f36d5338bbc7b7f385e72503a212aefb9d4b21f2" translate="yes" xml:space="preserve">
          <source>This is the &quot;branch reset&quot; pattern, which has the special property that the capture groups are numbered from the same starting point in each alternation branch. It is available starting from perl 5.10.0.</source>
          <target state="translated">Это деталь &quot;сброса ветви&quot;,которая имеет особое свойство,заключающееся в том,что группы захвата пронумерованы от одной и той же начальной точки в каждой ветви перемены.Оно доступно,начиная с раздела 5.10.0.</target>
        </trans-unit>
        <trans-unit id="19421af57fe146a06eb56f9f30349ebe8341f96d" translate="yes" xml:space="preserve">
          <source>This is the &quot;make test&quot; result from the said combination:</source>
          <target state="translated">Это результат &quot;make test&quot; от указанной комбинации:</target>
        </trans-unit>
        <trans-unit id="62ca18cb3607997061d57b9fd320ab0f041516b6" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Всегда &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; это &amp;amp; PL_sv_undef .</target>
        </trans-unit>
        <trans-unit id="f4760f68814e5682fe3f5f10b06ed0b34903e395" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;PL_sv_yes&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;false&lt;/code&gt; SV. См. &lt;code&gt;PL_sv_yes&lt;/code&gt; . Всегда &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; это &amp;amp; PL_sv_no .</target>
        </trans-unit>
        <trans-unit id="69477e80b4da6549c4778882346d8c2f1a054a61" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;PL_sv_no&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; .</source>
          <target state="translated">Это &lt;code&gt;true&lt;/code&gt; СВ. См. &lt;code&gt;PL_sv_no&lt;/code&gt; . Всегда &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; это &amp;amp; PL_sv_yes .</target>
        </trans-unit>
        <trans-unit id="7194017d84a1b8d81ca4290d44c59af66198e5c2" translate="yes" xml:space="preserve">
          <source>This is the Perl 6 &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt; , except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">Это Perl 6 &quot;шаблон фиксации&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; или &lt;code&gt;:::&lt;/code&gt; . Это шаблон нулевой ширины, похожий на &lt;code&gt;(*SKIP)&lt;/code&gt; , за исключением того, что при возврате в случае сбоя он приводит к тому, что совпадение не выполняется. Никаких дальнейших попыток найти действительное совпадение путем перемещения указателя начала снова не будет. Например,</target>
        </trans-unit>
        <trans-unit id="6d8e4baf0d85adfeec247ab733be39725f479200" translate="yes" xml:space="preserve">
          <source>This is the Perl patch level, a numeric change identifier, as defined by whichever source code maintenance system is used to maintain the patches; currently Perforce. It does not correlate with the Perl version numbers or the maintenance versus development dichotomy except by also being increasing.</source>
          <target state="translated">Это уровень заплаток Perl,числовой идентификатор изменения,определяемый той или иной системой обслуживания исходного кода,используемой для обслуживания заплаток;в настоящее время это Perforce.Он не коррелирует с номерами версий Perl или дихотомией сопровождения против разработки,за исключением того,что он также увеличивается.</target>
        </trans-unit>
        <trans-unit id="0eaf16c26ce67bf186071a739f6615eb11610fd4" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; etc.</source>
          <target state="translated">Это SV, с которым нужно сравнивать. Обратите внимание, что фактический массив символов, с которым нужно сопоставить, предоставляется аргументами, описанными ниже; SV просто используется для определения UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; и т. д.</target>
        </trans-unit>
        <trans-unit id="4d720b4f15a9201913736e953c720d9b63d81ea0" translate="yes" xml:space="preserve">
          <source>This is the Unicode-aware way of saying</source>
          <target state="translated">Это способ сказать в Юникоде...</target>
        </trans-unit>
        <trans-unit id="455ede6174f3d5161f6c2d4aa6425c94536894ca" translate="yes" xml:space="preserve">
          <source>This is the basic function to generate temporary files. The behaviour of the file can be changed using various options:</source>
          <target state="translated">Это основная функция для генерации временных файлов.Поведение файла может быть изменено с помощью различных опций:</target>
        </trans-unit>
        <trans-unit id="a05b57eee11f052b052017c3ff384fae39edc53f" translate="yes" xml:space="preserve">
          <source>This is the command to execute. It may be either a string or an array reference. This is a required argument.</source>
          <target state="translated">Это команда на выполнение.Это может быть как строка,так и ссылка на массив.Это необходимый аргумент.</target>
        </trans-unit>
        <trans-unit id="78880bb496bf709fa9881c622c08f3137e6dd8f7" translate="yes" xml:space="preserve">
          <source>This is the constructor for &lt;b&gt;Pod::Parser&lt;/b&gt; and its subclasses. You</source>
          <target state="translated">Это конструктор для &lt;b&gt;Pod :: Parser&lt;/b&gt; и его подклассов. Вы</target>
        </trans-unit>
        <trans-unit id="3d8bf5bd14f4dda830975aad7d7af3e9d034509f" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::FTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an FTP connection is required.</source>
          <target state="translated">Это конструктор нового объекта Net :: FTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется FTP-соединение.</target>
        </trans-unit>
        <trans-unit id="d79a978a5e7757a479b9fe30cd0cc290698241af" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt; , then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">Это конструктор нового объекта Net :: NNTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется соединение NNTP. Если не указан, то его можно передать как параметр &lt;code&gt;Host&lt;/code&gt; , описанный ниже. Если хост не передан, проверяются две переменные среды, сначала &lt;code&gt;NNTPSERVER&lt;/code&gt; , затем &lt;code&gt;NEWSHOST&lt;/code&gt; , затем проверяется &lt;code&gt;Net::Config&lt;/code&gt; , и если хост не найден , используются &lt;code&gt;news&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a1411000dcca44bd6224ab398773d981b55ca56" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::POP3 object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an POP3 connection is required.</source>
          <target state="translated">Это конструктор для нового объекта Net :: POP3. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется соединение POP3.</target>
        </trans-unit>
        <trans-unit id="b5e150d75dbb5f649a71e256e018f3d6ee5d68ad" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::SMTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an SMTP connection is required.</source>
          <target state="translated">Это конструктор нового объекта Net :: SMTP. &lt;code&gt;HOST&lt;/code&gt; - это имя удаленного хоста, к которому требуется SMTP-соединение.</target>
        </trans-unit>
        <trans-unit id="3dcdb98a1ad7340bd49db77b64b7ed1e7e6ac7fa" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference of some sort. The reference can be used to hold some internal information.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать некую благословенную ссылку.Ссылка может быть использована для хранения некоторой внутренней информации.</target>
        </trans-unit>
        <trans-unit id="7f8efcba15ad2c7fb65b185c0d87e50ef7c7af8b" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new array (probably an anonymous ARRAY ref) will be accessed.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку,через которую будет осуществляться доступ к новому массиву (возможно,анонимный рефлекс ARRAY).</target>
        </trans-unit>
        <trans-unit id="4ddd75a12229b0af35fd3f3217e95a18f27831c9" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new object (probably but not necessarily an anonymous hash) will be accessed.</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку,через которую новый объект (вероятно,но не обязательно анонимный хэш)будет доступен.</target>
        </trans-unit>
        <trans-unit id="c3ca80029525d0505c9c19a25619277e596ad6ff" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference to a new scalar (probably anonymous) that it's creating. For example:</source>
          <target state="translated">Это конструктор для класса.Это означает,что он должен возвращать благословенную ссылку на новый скаляр (возможно анонимный),который он создает.Например:</target>
        </trans-unit>
        <trans-unit id="97c7d16dbe44cbd95a833f47b94f50f6214ea17d" translate="yes" xml:space="preserve">
          <source>This is the default code set.</source>
          <target state="translated">Это набор кодов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f42f9d3bfdedb4c34f927c70a8b84d5ca486809d" translate="yes" xml:space="preserve">
          <source>This is the default value if none was provided by the user. This is also the type &lt;code&gt;strict_type&lt;/code&gt; will look at when checking type integrity (see below).</source>
          <target state="translated">Это значение по умолчанию, если оно не было предоставлено пользователем. Это также тип, на который &lt;code&gt;strict_type&lt;/code&gt; будет смотреть при проверке целостности типа (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="60c4aeb1d9a588518e8c401cb7140416c2986e58" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the</source>
          <target state="translated">По умолчанию.Если вы можете использовать</target>
        </trans-unit>
        <trans-unit id="2b115e2483ec3abaacaac1f9ae2d4e5dce2387c0" translate="yes" xml:space="preserve">
          <source>This is the directory where the .pm and .pod files you wish to have installed go. They are laid out according to namespace. So Foo::Bar is</source>
          <target state="translated">Это каталог,куда идут файлы .pm и .pod,которые вы хотите установить.Они расположены в соответствии с пространством имён.Итак,Фу::Бар</target>
        </trans-unit>
        <trans-unit id="d930a14451f27529d05daafcbdbe065ab4700f11" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.33</source>
          <target state="translated">Это документация версии 0.33</target>
        </trans-unit>
        <trans-unit id="412a728d73be865262b84817f05ddc7c35324cf4" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это самый простой способ реализации потоков и способ запуска большинства операционных систем. Большой недостаток состоит в том, что, поскольку ОС ничего не знает о потоках, если один поток блокирует, то все это делают. Типичные действия по блокировке включают большинство системных вызовов, большинство операций ввода-вывода и такие вещи, как &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c6f35e7150b834f9f05080f6b4f16bfc1d90561" translate="yes" xml:space="preserve">
          <source>This is the email address that will be sent as your anonymous ftp password.</source>
          <target state="translated">Это адрес электронной почты,который будет выслан в качестве вашего анонимного ftp-пароля.</target>
        </trans-unit>
        <trans-unit id="03a8ad8de2657fbb598356bba52fec61dbe4557b" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Backward Compatibility&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">Это существующий флаг. Если прагма lexical warnings &lt;b&gt;не&lt;/b&gt; используется ни в одном из ваших кодов или в каких-либо модулях, которые вы используете, этот флаг будет включать предупреждения везде. См. &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Обратную совместимость&lt;/a&gt; для получения подробной информации о том, как этот флаг взаимодействует с лексическими предупреждениями.</target>
        </trans-unit>
        <trans-unit id="bb41b10f4355a8511d19503b44266dfd63767081" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">Это полное свойство Uppercase_Mapping (в отличие от Simple_Uppercase_Mapping, приведенного в примере для формата &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). Единственное различие между ними в показанных диапазонах заключается в том, что кодовая точка 0x0149 (СТРОЧНАЯ ЛАТИНСКАЯ БУКВА N, ПРЕДШЕСТВУЮЩАЯ АПОСТРОФУ) соответствует строке из двух символов: 0x02BC (МОДИФИКАЦИОННАЯ БУКВА АПОСТРОФ), за которой следует 0x004E (ЛАТИНСКАЯ ЗАГЛАВНАЯ БУКВА N).</target>
        </trans-unit>
        <trans-unit id="871175ae8bd1e88a96090e3ee5d094a4a3c823c8" translate="yes" xml:space="preserve">
          <source>This is the function that does the real work. It should use the current values of @dl_require_symbols and @dl_resolve_using if required.</source>
          <target state="translated">Это функция,которая делает реальную работу.Она должна использовать текущие значения @dl_require_symbols и @dl_resolve_using,если необходимо.</target>
        </trans-unit>
        <trans-unit id="0f9cd536958034f18b34b73afd163424db233b70" translate="yes" xml:space="preserve">
          <source>This is the global compile-time. That includes, basically, every &lt;code&gt;BEGIN&lt;/code&gt; block executed directly or indirectly from during the compile-time of the top-level program.</source>
          <target state="translated">Это глобальное время компиляции. Это включает, в основном, каждый блок &lt;code&gt;BEGIN&lt;/code&gt; , выполняемый прямо или косвенно во время компиляции программы верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="394f7937653a5d479f930b2ee200056fdee9eaa3" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (C</source>
          <target state="translated">Это самый высокий UID на текущей системе,который относится к корневому UID.Он используется для того,чтобы удостовериться,что временная директория принадлежит системному UID (C</target>
        </trans-unit>
        <trans-unit id="6328f4bdaf24cfea2076758e63c586a6679bf323" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Это внутренняя функция, реализующая оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a5b446b2d0ba2a35085618db8046fb9068c0dc" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Это внутренняя функция, реализующая оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c755425aff2265b37f84fd527f7d77c0d4f14125" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; layer. It turns off the flag on the layer below so that data read from it is considered to be &quot;octets&quot; i.e. characters in the range 0..255 only. Likewise on output perl will warn if a &quot;wide&quot; character is written to a such a stream.</source>
          <target state="translated">Это инверсия слоя &lt;code&gt;:utf8&lt;/code&gt; . Он отключает флаг на нижнем уровне, чтобы считанные с него данные считались &amp;laquo;октетами&amp;raquo;, то есть символами только в диапазоне 0..255. Точно так же при выводе perl предупредит, если в такой поток записывается &amp;laquo;широкий&amp;raquo; символ.</target>
        </trans-unit>
        <trans-unit id="05a7690a54b93d5cbfbc43460dc86928e9ff4860" translate="yes" xml:space="preserve">
          <source>This is the least computationally expensive strategy. It may require some user education.</source>
          <target state="translated">Это наименее затратная с вычислительной точки зрения стратегия.Она может потребовать некоторого обучения пользователей.</target>
        </trans-unit>
        <trans-unit id="6fe99eed7290a54a82a6a3a3aa2c3b4a2bb07743" translate="yes" xml:space="preserve">
          <source>This is the level of HTML &quot;Hn&quot; element to which a Pod &quot;head1&quot; corresponds. For example, if &lt;code&gt;html_h_level&lt;/code&gt; is set to 2, a head1 will produce an H2, a head2 will produce an H3, and so on.</source>
          <target state="translated">Это уровень HTML-элемента &amp;laquo;Hn&amp;raquo;, которому соответствует Pod &amp;laquo;head1&amp;raquo;. Например, если для &lt;code&gt;html_h_level&lt;/code&gt; установлено значение 2, head1 будет создавать H2, head2 будет создавать H3 и так далее.</target>
        </trans-unit>
        <trans-unit id="dbf2d95bd6e71bbc931d90912ac4916f4a329b66" translate="yes" xml:space="preserve">
          <source>This is the lower layer of the Perl parser, managing characters and tokens.</source>
          <target state="translated">Это нижний слой парсера Perl,управляющий символами и маркерами.</target>
        </trans-unit>
        <trans-unit id="12044b247d0e34184da8c4d82be7f35e7cce2add" translate="yes" xml:space="preserve">
          <source>This is the module that is used as a frontend to the Perl Compiler.</source>
          <target state="translated">Это модуль,который используется как фронтенд к компилятору Perl.</target>
        </trans-unit>
        <trans-unit id="d48b3bc5add16b69ab6764e7aa4a54509b451c2e" translate="yes" xml:space="preserve">
          <source>This is the most compact form, but it is not well suited for printing or embedding in places that can't handle arbitrary data.</source>
          <target state="translated">Это самая компактная форма,но она не очень хорошо подходит для печати или встраивания в места,которые не могут обрабатывать произвольные данные.</target>
        </trans-unit>
        <trans-unit id="6f4b6501db089524291430841e3e59e649fd1a7f" translate="yes" xml:space="preserve">
          <source>This is the most important method in Locale::Maketext:</source>
          <target state="translated">Это самый важный метод в Локале::Мактекст:</target>
        </trans-unit>
        <trans-unit id="d28b3b2c303cf9fffc3f2cf8865a24397d2fa229" translate="yes" xml:space="preserve">
          <source>This is the most serious problem in Perl 5.20 and earlier. Fixing this required internal changes in Perl 5.22.</source>
          <target state="translated">Это самая серьезная проблема на Perl 5.20 и более ранних версиях.Исправление этого требует внутренних изменений в Perl 5.22.</target>
        </trans-unit>
        <trans-unit id="cb5f568d5745a8f721d4963249e63f161fe9a2ef" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , if you'd rather use that.</source>
          <target state="translated">Это имя или Интернет-адрес удаленного хоста, на котором работает сервер. Мы могли бы указать более длинное имя, например &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , или адрес, например &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . В демонстрационных целях мы использовали специальное имя хоста &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , которое всегда должно означать текущую машину, на которой вы работаете. Соответствующий Интернет-адрес для localhost - &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , если вы предпочитаете его.</target>
        </trans-unit>
        <trans-unit id="b0d786852f1a6c1dea1d6a765cf9070b49db2732" translate="yes" xml:space="preserve">
          <source>This is the normal entry point for automatic dynamic loading in Perl.</source>
          <target state="translated">Это обычная точка входа для автоматической динамической загрузки в Perl.</target>
        </trans-unit>
        <trans-unit id="26340ea40f200c2c1e1dfe6e82669d9feb0fd306" translate="yes" xml:space="preserve">
          <source>This is the normal operation. It translates various literals encountered in the Perl source file from the encoding</source>
          <target state="translated">Это нормальная работа.Она переводит различные литералы,встречающиеся в исходном файле Perl,из кодировки</target>
        </trans-unit>
        <trans-unit id="a889101131356644debee9dab9979e5406fc98f2" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">Это старая форма &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt; , у которой нет параметра flags.</target>
        </trans-unit>
        <trans-unit id="230f7f138d64e36f52758c07316eb9c1eee4e053" translate="yes" xml:space="preserve">
          <source>This is the only executable with does not require OS/2.</source>
          <target state="translated">Это единственный исполняемый файл,для которого не требуется OS/2.</target>
        </trans-unit>
        <trans-unit id="46297865ee1d382d368720a50d5f077d38b59862" translate="yes" xml:space="preserve">
          <source>This is the only form of quoting in perl where there is no need to worry about escaping content, something that code generators can and do make good use of.</source>
          <target state="translated">Это единственная форма цитирования на perl,где нет необходимости беспокоиться об утечке контента,что-то,что генераторы кода могут и делают с пользой для себя.</target>
        </trans-unit>
        <trans-unit id="346faabc7115374b4309ef76fa20a9a155ac4597" translate="yes" xml:space="preserve">
          <source>This is the only implementation for which &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; does anything &quot;interesting&quot;.</source>
          <target state="translated">Это единственная реализация, для которой &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; делает что-нибудь &amp;laquo;интересное&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="60f1241a31b62b7745507b52788f2eba7d4fd0c6" translate="yes" xml:space="preserve">
          <source>This is the only way you can create a custom named sequence of code points.</source>
          <target state="translated">Только так можно создать пользовательскую именованную последовательность кодовых точек.</target>
        </trans-unit>
        <trans-unit id="78dcaca387707f29d8cc3a2585a362d39b2766bf" translate="yes" xml:space="preserve">
          <source>This is the output when it is executed:</source>
          <target state="translated">Это выходной сигнал,когда он выполняется:</target>
        </trans-unit>
        <trans-unit id="e716423e3a6c7217437c06867a38499b8c6c05ea" translate="yes" xml:space="preserve">
          <source>This is the preferred method of passing input to the constructor.</source>
          <target state="translated">Это предпочтительный метод передачи входных данных в конструктор.</target>
        </trans-unit>
        <trans-unit id="3f3e131dd809784965b27d16458f5818d1df8c11" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">Это предпочтительный способ получить объект &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . Вам следует</target>
        </trans-unit>
        <trans-unit id="cf4eba93f23876936daa22cc2fcf49ea7ecb8e5d" translate="yes" xml:space="preserve">
          <source>This is the primary function for copying scalars, and most other copy-ish functions and macros use this underneath.</source>
          <target state="translated">Это основная функция для копирования скаляров,и большинство других функций копирования и макросов используют ее внизу.</target>
        </trans-unit>
        <trans-unit id="d281635f40f0f24e55d7183cb71173555b3719a4" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with C&amp;lt;:temp&amp;gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">Это основной интерфейс для взаимодействия с C &amp;lt;: temp&amp;gt;. Используя объектно-ориентированный интерфейс, временный файл может быть создан при создании объекта, и файл может быть удален, когда объект больше не нужен.</target>
        </trans-unit>
        <trans-unit id="05f4f2b81da1e7eb80147e0a0e24d6cb8a7b101e" translate="yes" xml:space="preserve">
          <source>This is the purpose of</source>
          <target state="translated">В этом заключается цель</target>
        </trans-unit>
        <trans-unit id="c0f05eba3f3af5d5e22733e34a51cbbb4cab705c" translate="yes" xml:space="preserve">
          <source>This is the recommended interface for creation of temporary directories. By default the directory will not be removed on exit (that is, it won't be temporary; this behaviour can not be changed because of issues with backwards compatibility). To enable removal either use the CLEANUP option which will trigger removal on program exit, or consider using the &quot;newdir&quot; method in the object interface which will allow the directory to be cleaned up when the object goes out of scope.</source>
          <target state="translated">Это рекомендуемый интерфейс для создания временных каталогов.По умолчанию каталог не будет удален при выходе (т.е.он не будет временным;такое поведение не может быть изменено из-за проблем с обратной совместимостью).Чтобы включить удаление,либо используйте опцию CLEANUP,которая спровоцирует удаление при выходе программы,либо подумайте об использовании метода &quot;newdir&quot; в объектном интерфейсе,который позволит очистить каталог,когда объект выйдет за пределы области видимости.</target>
        </trans-unit>
        <trans-unit id="bd97525cca1b83f38306d58e91365a2fad99fcd5" translate="yes" xml:space="preserve">
          <source>This is the root directory into which the code will be installed. It</source>
          <target state="translated">Это корневая директория,в которую будет установлен код.Это .</target>
        </trans-unit>
        <trans-unit id="bc652aaf1adcdf8a4d8dd86919935233000111ae" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">Это то же самое, что и процедура &lt;code&gt;ok()&lt;/code&gt; &lt;a href=&quot;simple&quot;&gt;Test :: Simple&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c649411547df265abe7a680926ab24280bdd17cc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;FB_QUIET&lt;/code&gt; above, except that instead of being silent on errors, it issues a warning. This is handy for when you are debugging.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;FB_QUIET&lt;/code&gt; выше, за исключением того, что вместо молчания об ошибках выдается предупреждение. Это удобно при отладке.</target>
        </trans-unit>
        <trans-unit id="0ae700aa87900b468f3878348b89397f03c7e04f" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt; : a character that changes the spacing horizontally.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\h&lt;/code&gt; и &lt;code&gt;\p{Blank}&lt;/code&gt; : символ, изменяющий интервал по горизонтали.</target>
        </trans-unit>
        <trans-unit id="fbc09138370cb171c094bfc6c30b8f2a18097f95" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : A character that changes the spacing horizontally.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\h&lt;/code&gt; и &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : символ, изменяющий интервал по горизонтали.</target>
        </trans-unit>
        <trans-unit id="7b5f883b8c3b129477e8adf6ce3d17842b4509c9" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, including beyond ASCII.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\s&lt;/code&gt; , в том числе за пределами ASCII.</target>
        </trans-unit>
        <trans-unit id="7e9dbff8b446293a154a68b17c80ce2409d2cfe1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; and starting in Perl v5.18, a vertical tab.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\s&lt;/code&gt; , только в ASCII, а именно &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; и начиная с Perl v5.18, с вертикальной вкладки.</target>
        </trans-unit>
        <trans-unit id="6256409cd33d9cdf7337e20319de658ce6caee15" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt; : A character that changes the spacing vertically.</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\v&lt;/code&gt; : символ, изменяющий интервал по вертикали.</target>
        </trans-unit>
        <trans-unit id="4da601bf04f15ab42ea7eb6f0e3d60619c539d79" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , including over 100_000 characters beyond ASCII.</source>
          <target state="translated">Это то же самое, что и &lt;code&gt;\w&lt;/code&gt; , включая более 100_000 символов за пределами ASCII.</target>
        </trans-unit>
        <trans-unit id="f93b7dea9a5c9d0ac4b1d3dcf4d8d34138603086" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">Это то же самое, что &lt;code&gt;\w&lt;/code&gt; , только в ASCII, а именно &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8213b0c400904773c8fb4aa6534b5c57f7c89c7f" translate="yes" xml:space="preserve">
          <source>This is the same as machine name except that default matches any name. There can be only one default token, and it must be after all machine tokens. This is normally used as:</source>
          <target state="translated">Это то же самое,что и имя машины,за исключением того,что по умолчанию совпадает с любым именем.По умолчанию может быть только один маркер,и он должен быть после всех маркеров машины.Обычно он используется как:</target>
        </trans-unit>
        <trans-unit id="941bd502236d1dea3c975471a03ebbb873d56ae1" translate="yes" xml:space="preserve">
          <source>This is the same as the bin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная bin,но это имя файла,расширенное во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="c486c8726e0003d1e95bb96e015320afb3b6dfa4" translate="yes" xml:space="preserve">
          <source>This is the same as the sitebin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная sitebin,но имя файла расширяется во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="cdc9f1e5725bf6d120b1c425b6dcc03a53feac1e" translate="yes" xml:space="preserve">
          <source>This is the same as the sitescript variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">Это то же самое,что и переменная sitecript,но это имя файла,расширенное во время настройки,для использования в ваших makefiles.</target>
        </trans-unit>
        <trans-unit id="43bee717903e4bfa25fa311f06b4356fc3deab92" translate="yes" xml:space="preserve">
          <source>This is the same executable as</source>
          <target state="translated">Это тот же самый исполняемый файл,что и</target>
        </trans-unit>
        <trans-unit id="9b93eb63da42a6ae191e4cb65dbdf73df302acbd" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">Это тот же объект , используемый переменное окружение ANSI_COLORS_ALIASES (см &lt;a href=&quot;#ENVIRONMENT&quot;&gt;СРЕДЫ&lt;/a&gt; ниже) , но может быть использован во время выполнения, а не только тогда , когда модуль загружен.</target>
        </trans-unit>
        <trans-unit id="08be885869480e470d72f31729368e83f4f891ce" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;P operation&quot; (the name derives from the Dutch word &quot;pak&quot;, which means &quot;capture&quot; -- the semaphore operations were named by the late Dijkstra, who was Dutch).</source>
          <target state="translated">Это семафорная &quot;операция Р&quot; (название происходит от голландского слова &quot;pak&quot;,что означает &quot;захват&quot;-семафорные операции были названы покойным Дийкстрой,который был голландцем).</target>
        </trans-unit>
        <trans-unit id="2f98c90508409620ac27064f1b688373cf5874e7" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;V operation&quot; (the name derives from the Dutch word &quot;vrij&quot;, which means &quot;release&quot;).</source>
          <target state="translated">Это семафор &quot;V операция&quot; (название происходит от голландского слова &quot;vrij&quot;,что означает &quot;освобождение&quot;).</target>
        </trans-unit>
        <trans-unit id="a276cc3b822e5fb68d4f30cd1b14facc89497c26" translate="yes" xml:space="preserve">
          <source>This is the service name or port number we'd like to connect to. We could have gotten away with using just &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; on systems with a well-configured system services file,[FOOTNOTE: The system services file is found in</source>
          <target state="translated">Это имя службы или номер порта, к которому мы хотим подключиться. Мы могли бы обойтись без использования &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; в системах с хорошо настроенным файлом системных служб [СНОСКА: файл системных служб находится в</target>
        </trans-unit>
        <trans-unit id="55fdeec4b425af4c4fa8e9a6591ac8f8843fb073" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 3166-1, such as 064 for Bhutan. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">Это набор трехзначных цифровых кодов из стандарта ISO 3166-1,таких как 064 для Бутана.Эти коды фактически определяются и поддерживаются Отделом статистики ООН.</target>
        </trans-unit>
        <trans-unit id="233002d6fef285c425f811c11a49106685a1ea36" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 4217.</source>
          <target state="translated">Это набор трехзначных цифровых кодов из ISO 4217.</target>
        </trans-unit>
        <trans-unit id="bfc22c533358da5232ffaf0870e72df120463375" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) bibliographic codes from ISO 639-2 and 639-5, such as 'heb' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Это набор трехбуквенных (строчных)библиографических кодов из ИСО 639-2 и 639-5,таких как &quot;heb&quot; для иврита.Он также включает в себя дополнения к этому набору,включенному в языковой реестр IANA.</target>
        </trans-unit>
        <trans-unit id="b92c48de1f053f976481719f4f81fdeafd62c023" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) codes from ISO 3166-1, such as 'brb' for Barbados. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">Это набор трехбуквенных (строчных)кодов из стандарта ISO 3166-1,таких как 'brb' для Барбадоса.Эти коды фактически определяются и поддерживаются Статистическим отделом ООН.</target>
        </trans-unit>
        <trans-unit id="fc3ae49739721f6f95ec3491951800d9f83ab84d" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) terminologic codes from ISO 639.</source>
          <target state="translated">Это набор трехбуквенных (строчных)терминологических кодов из ISO 639.</target>
        </trans-unit>
        <trans-unit id="e6807d4fe48e31222818be49432ee24ba40f6e11" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 3166-1, such as 'tv' for Tuvalu.</source>
          <target state="translated">Это набор двубуквенных (строчных)кодов из ИСО 3166-1,таких как 'tv' для Тувалу.</target>
        </trans-unit>
        <trans-unit id="acd74dadb16fbf234cd8906af18d327510923daf" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 639-1, such as 'he' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Это набор двубуквенных (строчных)кодов из ISO 639-1,таких как 'he' для иврита.Он также включает в себя дополнения к этому набору,включенному в языковой реестр IANA.</target>
        </trans-unit>
        <trans-unit id="94c349798d0090117d6582dfd31da6381fa814e6" translate="yes" xml:space="preserve">
          <source>This is the standard unix library builder. We use wlib. With Watcom 10.6, when wlib is linked as &quot;ar&quot;, it behaves like ar and all is fine. Under 9.5, a cover is required. One is included in ../qnx</source>
          <target state="translated">Это стандартный конструктор unix-библиотек.Мы используем wlib.В Watcom 10.6,когда wlib связана как &quot;ar&quot;,она ведет себя как ar и все в порядке.Под 9.5 требуется обложка.Одна из них включена в ../qnx.</target>
        </trans-unit>
        <trans-unit id="e58e7a91164b2c61f4741d28ff686a23ffe5c5eb" translate="yes" xml:space="preserve">
          <source>This is the useragent as &lt;code&gt;LWP&lt;/code&gt; will report it.</source>
          <target state="translated">Это агент пользователя, о котором сообщит &lt;code&gt;LWP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15261bed556ba490ce02abc9f071087b0df0d036" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt; .</source>
          <target state="translated">Это версия &lt;code&gt;Test::Harness&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a22ff202852862487c229ecb92eca4a84e51119" translate="yes" xml:space="preserve">
          <source>This is to prevent the problem of one module changing the array base out from under another module inadvertently. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;.</source>
          <target state="translated">Это сделано для предотвращения проблемы, связанной с непреднамеренным изменением базы массива одним модулем из-под другого модуля. Смотрите &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$ [в perlvar&lt;/a&gt; и &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd68c145924ef1010d3fbbd465d445886b4ed770" translate="yes" xml:space="preserve">
          <source>This is tremendously more efficient than reading the entire file into memory as an array of lines and then processing it one element at a time, which is often--if not almost always--the wrong approach. Whenever you see someone do this:</source>
          <target state="translated">Это намного эффективнее,чем считывать весь файл в память как массив строк,а затем обрабатывать его по одному элементу за раз,что часто-если не почти всегда-неправильный подход.Всякий раз,когда вы видите,как кто-то делает это:</target>
        </trans-unit>
        <trans-unit id="a35e6506a9b88f457b9f4a865f1ac711f7750ab3" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">Это верно для всех числовых кодов шаблонов. Но не ждите чудес: если упакованное значение превышает выделенную байтовую емкость, старшие биты незаметно отбрасываются, и unpack точно не сможет вытащить их из какой-то волшебной шляпы. И, когда вы упаковываете с использованием подписанного кода шаблона, такого как &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , избыточное значение может привести к установке бита знака, и распаковка этого значения вернет отрицательное значение.</target>
        </trans-unit>
        <trans-unit id="e7272df8729202c7ff033cb7fabd9d5f450b6676" translate="yes" xml:space="preserve">
          <source>This is true on Unix, where &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; yields &quot;/a/b&quot; and &lt;code&gt;rootdir()&lt;/code&gt; is &quot;/&quot;. Note that &lt;code&gt;rootdir()&lt;/code&gt; on Mac OS is the startup volume, which is the closest in concept to Unix' &quot;/&quot;. This should help to run existing scripts originally written for Unix.</source>
          <target state="translated">Это верно в Unix, где &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; дает &quot;/ a / b&quot;, а &lt;code&gt;rootdir()&lt;/code&gt; - &quot;/&quot;. Обратите внимание, что &lt;code&gt;rootdir()&lt;/code&gt; в Mac OS - это загрузочный том, который по концепции наиболее близок к Unix &amp;laquo;/&amp;raquo;. Это должно помочь запустить существующие сценарии, изначально написанные для Unix.</target>
        </trans-unit>
        <trans-unit id="397412f4d7a6d97f2f133b4c7f78e290d9cd2f84" translate="yes" xml:space="preserve">
          <source>This is typically used when testing cannot continue such as a critical module failing to compile or a necessary external utility not being available such as a database connection failing.</source>
          <target state="translated">Обычно это используется,когда тестирование не может быть продолжено,например,при сбое компиляции критически важного модуля или отсутствии необходимой внешней утилиты,например,при сбое подключения к базе данных.</target>
        </trans-unit>
        <trans-unit id="bb1c3b06955402418f9a1645b31426cf2675075b" translate="yes" xml:space="preserve">
          <source>This is ugly. As of Perl 5.9.2, there's a much nicer way to express your desire for a certain byte-order: the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers. &lt;code&gt;&amp;gt;&lt;/code&gt; is the big-endian modifier, while &lt;code&gt;&amp;lt;&lt;/code&gt; is the little-endian modifier. Using them, we could rewrite the above code as:</source>
          <target state="translated">Это уродливо. Начиная с Perl 5.9.2, есть гораздо более удобный способ выразить свое желание определенного порядка байтов: модификаторы &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;/code&gt; . &lt;code&gt;&amp;gt;&lt;/code&gt; - модификатор прямого порядка байтов, а &lt;code&gt;&amp;lt;&lt;/code&gt; - модификатор прямого порядка байтов. Используя их, мы могли бы переписать приведенный выше код как:</target>
        </trans-unit>
        <trans-unit id="f64a4511ee072e665d5896089985a46b9305c064" translate="yes" xml:space="preserve">
          <source>This is used (optionally) by configure to list the contents of libraries. I will generate a cover function on the fly in the UU directory.</source>
          <target state="translated">Это используется (опционально)путем настройки для перечисления содержимого библиотек.Я сгенерирую функцию обложки на лету в каталоге UU.</target>
        </trans-unit>
        <trans-unit id="e13da45b8fdb5dfbf619cb00d77540e51b9f0de1" translate="yes" xml:space="preserve">
          <source>This is used by Perl itself only for accessing operating system error messages via &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt;.</source>
          <target state="translated">Это используется самим Perl только для доступа к сообщениям об ошибках операционной системы через &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$! &lt;/a&gt;и &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ E&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="685a67efb688fb26fb65af406110717f25e2b745" translate="yes" xml:space="preserve">
          <source>This is used by XS code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function</source>
          <target state="translated">Это используется кодом XS, который &lt;code&gt;LC_NUMERIC&lt;/code&gt; языковой стандарт LC_NUMERIC, чтобы заставить языковой стандарт для категории &lt;code&gt;LC_NUMERIC&lt;/code&gt; быть тем, что perl считает текущим базовым языковым стандартом. (Интерпретатор perl может ошибаться в том, что на самом деле представляет собой базовый языковой стандарт, если какой-либо код C или XS вызвал функцию библиотеки C.</target>
        </trans-unit>
        <trans-unit id="6e065e9419827f7c0624c9591e7e2d9d64727710" translate="yes" xml:space="preserve">
          <source>This is used by perl to run external commands which explicitly require shell, like the commands using</source>
          <target state="translated">Это используется perl для выполнения внешних команд,которые явно требуют оболочки,например,команд,использующих</target>
        </trans-unit>
        <trans-unit id="64698930b8cfe161fa438c57b55293be0ad5eced" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">Это используется программой &lt;code&gt;perldoc&lt;/code&gt; (см. &lt;a href=&quot;perldoc&quot;&gt;Perldoc&lt;/a&gt; ) и может использоваться для создания HTML-документации, используемой WWW-браузерами, и документации в миллионах других форматов: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; и так далее. [Используйте такие программы, как</target>
        </trans-unit>
        <trans-unit id="938e99644f7869851b92cffce88c437cad0e1198" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">Это используется, например, &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89a92812a074e6032ec40db97f0e02dae0db9d29" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;FILE *&lt;/code&gt; structures.</source>
          <target state="translated">Это используется для передачи файловых дескрипторов Perl в C и обратно с использованием структур &lt;code&gt;FILE *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e990faa3bfbeb576a41b956da185db53775fca9a" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;PerlIO *&lt;/code&gt; structures. The file handle can used for reading and writing. This corresponds to the &lt;code&gt;+&amp;lt;&lt;/code&gt; mode, see also T_IN and T_OUT.</source>
          <target state="translated">Это используется для передачи дескрипторов файлов Perl в C и &lt;code&gt;PerlIO *&lt;/code&gt; с использованием структур PerlIO * . Дескриптор файла может использоваться для чтения и записи. Это соответствует режиму &lt;code&gt;+&amp;lt;&lt;/code&gt; , см. Также T_IN и T_OUT.</target>
        </trans-unit>
        <trans-unit id="45afb2cb863a986ba92ff0947755735a5e6d66a7" translate="yes" xml:space="preserve">
          <source>This is used for tests that under some conditions can be skipped. It's basically equivalent to:</source>
          <target state="translated">Это используется для тестов,которые при некоторых условиях можно пропустить.Это в основном эквивалентно:</target>
        </trans-unit>
        <trans-unit id="9e0a9f53f8706ee02f00b4b66258c8d781bdebc5" translate="yes" xml:space="preserve">
          <source>This is used heavily by Configure and then by perl itself. QNX4's version is fine, but Configure will choke on the 16-bit version, so if you are running QNX 4.22, link /bin/sh to /bin32/ksh</source>
          <target state="translated">Это в значительной степени используется конфигурацией,а затем самим perl.Версия QNX4 в порядке,но Configure подавится 16-битной версией,так что если вы используете QNX 4.22,свяжите /bin/sh с /bin32/ksh.</target>
        </trans-unit>
        <trans-unit id="88552389c076b1697dd901849fcd278da90bf901" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</source>
          <target state="translated">Это используется вместе с одним из макросов &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; и &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51b114b6070b2dbbb4c5faa25f40aadc4f1bf209" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as sv_setsv, sv_setiv and sv_pvn_force.</source>
          <target state="translated">Это используется внутри различных sv-модифицирующих функций,таких как sv_setsv,sv_setiv и sv_pvn_force.</target>
        </trans-unit>
        <trans-unit id="2674017b922020ed58a1ae38d38243bb158c698b" translate="yes" xml:space="preserve">
          <source>This is used to convert the perl argument list to a C array and for pushing the contents of a C array onto the perl argument stack.</source>
          <target state="translated">Это используется для преобразования списка аргументов perl в массив C и для переноса содержимого массива C в стек аргументов perl.</target>
        </trans-unit>
        <trans-unit id="1dfca62a32b70d4bff67e06bed578f950673ab61" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to the C locale by Perl for backwards compatibility, and because most XS code that reads floating point values can cope only with the decimal radix character being a dot.</source>
          <target state="translated">Это используется, чтобы помочь обернуть код XS или C, который зависит от локали &lt;code&gt;LC_NUMERIC&lt;/code&gt; . Эта категория локали обычно устанавливается Perl на локаль C для обратной совместимости, и потому что большая часть кода XS, который считывает значения с плавающей запятой, может справиться только с десятичным символом основания, являющимся точкой.</target>
        </trans-unit>
        <trans-unit id="61ffe3ce8492ad29999613fc31942e00c100ad7a" translate="yes" xml:space="preserve">
          <source>This is used to set the build type to debug or release. Change the build type only after executing SetNWBld.bat</source>
          <target state="translated">Это используется для установки типа сборки на отладку или выпуск.Изменять тип сборки можно только после выполнения SetNWBld.bat.</target>
        </trans-unit>
        <trans-unit id="33295dd981a7660fbc204da5e0a0ad1772d342a0" translate="yes" xml:space="preserve">
          <source>This is used to track which tests unexpectedly succeeded.</source>
          <target state="translated">Это используется для отслеживания того,какие тесты неожиданно увенчались успехом.</target>
        </trans-unit>
        <trans-unit id="717574ff9403ecd69bea9a30328bf1a90f831842" translate="yes" xml:space="preserve">
          <source>This is used to write code for styles of operating system. See os_flavor_is() for use.</source>
          <target state="translated">Используется для написания кода для стилей операционной системы.Смотрите функцию os_flavor_is()для использования.</target>
        </trans-unit>
        <trans-unit id="a64fac67cd72a00814ab828e9c9bd92a6463973e" translate="yes" xml:space="preserve">
          <source>This is useful for code like:</source>
          <target state="translated">Это полезно для кода типа:</target>
        </trans-unit>
        <trans-unit id="0a2bc63942e3a80b89ce25e1ac1f8a32f3bda215" translate="yes" xml:space="preserve">
          <source>This is useful for keeping copies of references, but you don't want to prevent the object being DESTROY-ed at its usual time.</source>
          <target state="translated">Это полезно для хранения копий ссылок,но вы не хотите препятствовать тому,чтобы объект был УНИЧТОЖЕН в обычное время.</target>
        </trans-unit>
        <trans-unit id="42a4e9a54829e179cb44fc85ba544f789e1c2e15" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt; 'ing when the verbose flag is on.</source>
          <target state="translated">Это полезно, если вы хотите сообщить об этом другим способом, кроме как &lt;code&gt;carp&lt;/code&gt; , когда установлен флаг подробного сообщения.</target>
        </trans-unit>
        <trans-unit id="3180e175adf2fd8ff88aab37691cd4b1c546dfea" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt; ).</source>
          <target state="translated">Это полезно, чтобы избежать блока CODE: для функции C, которая принимает параметр по ссылке. Как правило, параметр не должен быть указателем ( &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;long&lt;/code&gt; , но не &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;long*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e13765136cecd81d6e3522084679384fb85c0ae" translate="yes" xml:space="preserve">
          <source>This is useful when calculating checksum for files:</source>
          <target state="translated">Это полезно при расчете контрольной суммы для файлов:</target>
        </trans-unit>
        <trans-unit id="61dbd2c8b8aff05e41e7c5996e136b2e52680ad0" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of close because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">Это полезно при использовании разъемов,когда вы хотите сказать другой стороне,что вы закончили писать,но не закончили читать,или наоборот.Это также более настойчивая форма закрытия,потому что она также отключает дескриптор файла в любых вилочных копиях в других процессах.</target>
        </trans-unit>
        <trans-unit id="f513c390b6f7958ee20cf98d8560715b5f8df7bb" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_fcntl that &amp;lt;fcntl.h&amp;gt; should be included.</source>
          <target state="translated">Эта переменная устанавливается в разных местах, чтобы сообщить i_fcntl, что должен быть включен &amp;lt;fcntl.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a219720ed763ff153bf9c4206e6fc4962fcc28fa" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_sys_file that &amp;lt;sys/file.h&amp;gt; should be included.</source>
          <target state="translated">Эта переменная устанавливается в разных местах, чтобы указать i_sys_file, что &amp;lt;sys / file.h&amp;gt; должен быть включен.</target>
        </trans-unit>
        <trans-unit id="c6c48e550cd9137be036063a2bb992fbdc655583" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;b&gt;bc&lt;/b&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;b&gt;bc&lt;/b&gt; will read a line at a time and output a line at a time. Programs like &lt;b&gt;sort&lt;/b&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">Это очень опасно, так как вы можете заблокировать навсегда. Предполагается, что он будет разговаривать с чем-то вроде &lt;b&gt;bc&lt;/b&gt; , как писать, так и читать из него. Это предположительно безопасно, потому что вы &amp;laquo;знаете&amp;raquo;, что такие команды, как &lt;b&gt;bc,&lt;/b&gt; будут читать строку за раз и выводить строку за раз. Однако такие программы, как &lt;b&gt;sort,&lt;/b&gt; которые сначала читают весь свой входной поток, весьма склонны вызывать тупик.</target>
        </trans-unit>
        <trans-unit id="4d27e7008a46081de6bf70cf35ea9983d5762e5e" translate="yes" xml:space="preserve">
          <source>This is very similar to &quot;How do I process an entire hash?&quot;, also in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;, but a bit simpler in the common cases.</source>
          <target state="translated">Это очень похоже на &amp;laquo;Как мне обработать весь хеш?&amp;raquo;, Также в &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; , но немного проще в общих случаях.</target>
        </trans-unit>
        <trans-unit id="e597cd56d56a437656a2f431e5a405bb225ea80c" translate="yes" xml:space="preserve">
          <source>This is very useful if you insist on taking an array reference as argument for example.</source>
          <target state="translated">Это очень полезно,если вы настаиваете на использовании ссылки на массив,например,в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="9ecc6a74af1d686f96a51556930a084f0975a2d7" translate="yes" xml:space="preserve">
          <source>This is what APPNOTE.TXT has to say on what should be stored in the zip filename header field.</source>
          <target state="translated">Вот что должен сказать APPNOTE.TXT о том,что должно храниться в zip поле заголовка файла.</target>
        </trans-unit>
        <trans-unit id="ccdaae868b02e396a128e9209508dfb651981fc3" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;), and</source>
          <target state="translated">Это то, что system () (см. &lt;a href=&quot;functions/system&quot;&gt;System&lt;/a&gt; ), &lt;code&gt;``&lt;/code&gt; (см. &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Операторы ввода-вывода в perlop&lt;/a&gt; ) и</target>
        </trans-unit>
        <trans-unit id="57e5ac17ec3c4ac0ba4b990c6d906bee2bbc734b" translate="yes" xml:space="preserve">
          <source>This is what you really need to know as an XS programmer, of course. When an XSUB returns a pointer to a C structure that pointer is stored in an SV and a reference to that SV is placed on the XSUB stack. So the output from an XSUB which uses something like the T_PTROBJ map might look something like this:</source>
          <target state="translated">Это то,что вам действительно нужно знать как программисту XS,конечно.Когда XSUB возвращает указатель на структуру C,этот указатель хранится в SV,и ссылка на этот SV помещается на стек XSUB.Поэтому вывод из XSUB,который использует что-то вроде карты T_PTROBJ,может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="4310f6ad3f6095c3049af8ec37cf9d1c7e8bca42" translate="yes" xml:space="preserve">
          <source>This is when the firewall implemented in the kernel (via NAT, or networking address translation), it allows you to hide a complete network behind one IP address. With this firewall no special compiling is needed as you can access hosts directly.</source>
          <target state="translated">В этом случае брандмауэр,реализованный в ядре (через NAT или трансляцию сетевых адресов),позволяет скрыть всю сеть за одним IP-адресом.При использовании этого брандмауэра специальная компиляция не требуется,так как вы можете получить прямой доступ к узлам.</target>
        </trans-unit>
        <trans-unit id="fb3eba7f97ab07f3173100c09ae1ea0eedcc95ab" translate="yes" xml:space="preserve">
          <source>This is when the firewall machine runs a web server, and to access the outside world, you must do so via that web server. If you set environment variables like http_proxy or ftp_proxy to values beginning with http://, or in your web browser you've proxy information set, then you know you are running behind an http firewall.</source>
          <target state="translated">Это когда на машине брандмауэра работает веб-сервер,и чтобы получить доступ к внешнему миру,вы должны сделать это через этот веб-сервер.Если вы устанавливаете переменные окружения,такие как http_proxy или ftp_proxy,на значения,начинающиеся с http://,или в вашем веб-браузере вы установили информацию о прокси,то вы знаете,что работаете за http-брандмауэром.</target>
        </trans-unit>
        <trans-unit id="75c3d5cffa21770fa5fe6937e649710847afafb8" translate="yes" xml:space="preserve">
          <source>This is when you see something like:</source>
          <target state="translated">Это когда ты видишь что-то вроде:</target>
        </trans-unit>
        <trans-unit id="2ad104027af291dcad88bf06901ecbc700b85cc1" translate="yes" xml:space="preserve">
          <source>This is where roles come in. It makes a lot of sense to create a &lt;code&gt;HasOnOffSwitch&lt;/code&gt; role and apply it to both classes. This role would define a known API like providing &lt;code&gt;turn_on()&lt;/code&gt; and &lt;code&gt;turn_off()&lt;/code&gt; methods.</source>
          <target state="translated">Здесь на &lt;code&gt;HasOnOffSwitch&lt;/code&gt; приходят роли. Имеет большой смысл создать роль HasOnOffSwitch и применить ее к обоим классам. Эта роль будет определять известный API, например, предоставление &lt;code&gt;turn_on()&lt;/code&gt; и &lt;code&gt;turn_off()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4320c9ea9a75ef79b1c739e5fcf494dc9cfb50f4" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. In this case, the socket handle returned will be connected to a TCP socket, because we want a stream-oriented connection, that is, one that acts pretty much like a plain old file. Not all sockets are this of this type. For example, the UDP protocol can be used to make a datagram socket, used for message-passing.</source>
          <target state="translated">Вот какой протокол использовать.В этом случае возвращаемый хэндл сокета будет подключен к TCP сокету,потому что нам нужно поточно-ориентированное соединение,т.е.такое,которое будет действовать практически как обычный старый файл.Не все сокеты такого типа.Например,UDP-протокол может использоваться для создания сокета-датаграммы,используемого для передачи сообщений.</target>
        </trans-unit>
        <trans-unit id="30ceb66515d4a53e1d2f25ce989ec733d96ff6db" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. Like our clients, we'll still specify &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; here.</source>
          <target state="translated">Вот какой протокол использовать. Как и наши клиенты, мы по-прежнему указываем здесь &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04d23d996b25b2c2795e313433104ffdca7710c6" translate="yes" xml:space="preserve">
          <source>This is, I hope, a natural term given the implementation, and should avoid connotations that are inherent in earlier uses of &quot;discipline&quot; for things which are rather different.</source>
          <target state="translated">Это,я надеюсь,естественный термин,учитывая его применение,и он должен избегать коннотаций,которые присущи более раннему использованию &quot;дисциплины&quot; для вещей,которые довольно отличаются друг от друга.</target>
        </trans-unit>
        <trans-unit id="921e3efa52591567d6779d551efd563ccc94a973" translate="yes" xml:space="preserve">
          <source>This isn't as simple a question as it sounds. There are two parts:</source>
          <target state="translated">Это не такой простой вопрос,как кажется.Есть две части:</target>
        </trans-unit>
        <trans-unit id="033f6ccbcb480bbc0ac7d9079cba07009a6cd094" translate="yes" xml:space="preserve">
          <source>This item specifies the name by which the linker knows the extension, which may be different from the name of the extension itself (for instance, some linkers add an '_' to the name of the extension). If it is not specified, it is derived from the NAME attribute. It is presently used only by OS2 and Win32.</source>
          <target state="translated">Этот элемент определяет имя,по которому компоновщик знает расширение,которое может отличаться от имени самого расширения (например,некоторые компоновщики добавляют '_' к имени расширения).Если оно не указано,то происходит от атрибута NAME.В настоящее время оно используется только в OS2 и Win32.</target>
        </trans-unit>
        <trans-unit id="d17e4bc352cfe7c72913c884191bd7c2a2036595" translate="yes" xml:space="preserve">
          <source>This key allows for variable weighting of variable collation elements, which are marked with an ASTERISK in the table (NOTE: Many punctuation marks and symbols are variable in</source>
          <target state="translated">Этот ключ позволяет изменять вес переменных элементов сравнения,которые в таблице отмечены знаком ASTERISK (ПРИМЕЧАНИЕ:Многие знаки препинания и символы переменные в</target>
        </trans-unit>
        <trans-unit id="cb089e180f4d1e1151abdbf8ed66a17ba5f2e56e" translate="yes" xml:space="preserve">
          <source>This key can be used to specify the name of the linker option file (minus the OS-specific extension), if for some reason you do not want to use the default value, which is the last word of the NAME attribute (</source>
          <target state="translated">Этот ключ может быть использован для указания имени файла опций компоновщика (за вычетом расширения,специфичного для ОС),если по какой-то причине вы не хотите использовать значение по умолчанию,которое является последним словом атрибута NAME (</target>
        </trans-unit>
        <trans-unit id="6dc6a49c5fb309cc8a7f7ab658d2498baeeb643a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt; , and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt; . The setter macro is given cv, and the function pointer.</source>
          <target state="translated">Это ключевое слово позволяет определить ИНТЕРФЕЙС, используя другой способ извлечения указателя на функцию из XSUB. Текст, следующий за этим ключевым словом, должен давать имя макроса, который будет извлекать / устанавливать указатель функции. &lt;code&gt;XSANY.any_dptr&lt;/code&gt; экстрактора присваивается возвращаемый тип &lt;code&gt;CV*&lt;/code&gt; и XSANY.any_dptr для этого &lt;code&gt;CV*&lt;/code&gt; . Макросу установки присваивается cv и указатель функции.</target>
        </trans-unit>
        <trans-unit id="2eb4e29be94617115ad887f08c53a3d0726b0bcf" translate="yes" xml:space="preserve">
          <source>This keyword can be used to pull other files into the XS module. The other files may have XS code. INCLUDE: can also be used to run a command to generate the XS code to be pulled into the module.</source>
          <target state="translated">Это ключевое слово может быть использовано для переноса других файлов в модуль XS.Другие файлы могут иметь код XS.INCLUDE:может также использоваться для выполнения команды для генерации XS-кода,который будет втянут в модуль.</target>
        </trans-unit>
        <trans-unit id="7ed11759f14ddd60bb197c65bf243efdd708cc88" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special cleanup procedures before it terminates. When the CLEANUP: keyword is used it must follow any CODE:, or OUTPUT: blocks which are present in the XSUB. The code specified for the cleanup block will be added as the last statements in the XSUB.</source>
          <target state="translated">Это ключевое слово может быть использовано,когда XSUB требует специальных процедур очистки перед его окончанием.При использовании ключевого слова CLEANUP:оно должно следовать любому блоку CODE:или OUTPUT:,которые присутствуют в XSUB.Код,указанный для блока очистки,будет добавлен в качестве последнего утверждения в XSUB.</target>
        </trans-unit>
        <trans-unit id="7ea24ab5d7dbe276068f1e0046e6f8d0e31be74b" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special procedures executed after the C subroutine call is performed. When the POSTCALL: keyword is used it must precede OUTPUT: and CLEANUP: blocks which are present in the XSUB.</source>
          <target state="translated">Это ключевое слово может быть использовано,когда XSUB требует выполнения специальных процедур после вызова подпрограммы С.При использовании ключевого слова POSTCALL:оно должно предшествовать блокам OUTPUT:и CLEANUP:,которые присутствуют в XSUB.</target>
        </trans-unit>
        <trans-unit id="ae2e5d68051ec8479ea84ba54d17bcf4606d62cb" translate="yes" xml:space="preserve">
          <source>This keyword declares the current XSUB as a keeper of the given calling signature. If some text follows this keyword, it is considered as a list of functions which have this signature, and should be attached to the current XSUB.</source>
          <target state="translated">Это ключевое слово объявляет текущий XSUB в качестве хранителя данной вызывающей подписи.Если некоторый текст следует за этим ключевым словом,то он рассматривается как список функций,которые имеют эту сигнатуру,и должен быть прикреплен к текущему XSUB.</target>
        </trans-unit>
        <trans-unit id="58666c3be919a203268b54d032b3c1bf1338cbb5" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только при включенной функции &lt;code&gt;&quot;fc&quot;&lt;/code&gt; или при наличии префикса &lt;code&gt;CORE::&lt;/code&gt; ; См. &lt;a href=&quot;../feature&quot;&gt;Особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; в текущую область &lt;a href=&quot;use&quot;&gt;использование&lt;/a&gt; версии 5.16 или более поздней.</target>
        </trans-unit>
        <trans-unit id="42d2aecd2684fd64241ade61155e375dd422775d" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только при включенной функции &lt;code&gt;&quot;fc&quot;&lt;/code&gt; или при наличии префикса &lt;code&gt;CORE::&lt;/code&gt; ; См. &lt;a href=&quot;feature&quot;&gt;Особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; в текущую область &lt;a href=&quot;functions/use&quot;&gt;использование&lt;/a&gt; версии 5.16 или более поздней.</target>
        </trans-unit>
        <trans-unit id="f176175c36b805a68ac4fb3277c81ce3879ff21b" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только в том случае, если включена функция &lt;code&gt;&quot;say&quot;&lt;/code&gt; или с префиксом &lt;code&gt;CORE::&lt;/code&gt; ; см. &lt;a href=&quot;../feature&quot;&gt;особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; в текущую область &lt;a href=&quot;use&quot;&gt;использование&lt;/a&gt; версии 5.10 или более поздней.</target>
        </trans-unit>
        <trans-unit id="7248453615df5e8da2ccdbead940326c86edd409" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово доступно только в том случае, если включена функция &lt;code&gt;&quot;say&quot;&lt;/code&gt; или с префиксом &lt;code&gt;CORE::&lt;/code&gt; ; см. &lt;a href=&quot;feature&quot;&gt;особенность&lt;/a&gt; . В качестве альтернативы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; в текущую область &lt;a href=&quot;functions/use&quot;&gt;использование&lt;/a&gt; версии 5.10 или более поздней.</target>
        </trans-unit>
        <trans-unit id="4ef9d8d4891aa770100745063fafba75dd87bbdc" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово задокументировано &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;в разделе Автозагрузка в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="017edb25f20d66cd7958f76d9e8eba1497b2b334" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово задокументировано &lt;a href=&quot;perlsub#Autoloading&quot;&gt;в разделе Автозагрузка в perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b17b66d48631c7667c9941d17b69ddf9ef0b49" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово включено функцией &lt;code&gt;&quot;switch&quot;&lt;/code&gt; ; см. &lt;a href=&quot;../feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации о &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . Вы также можете получить к нему доступ, добавив к нему префикс &lt;code&gt;CORE::&lt;/code&gt; . В качестве альтернативы можно включить в текущую область &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; или новее.</target>
        </trans-unit>
        <trans-unit id="bcf1ac4839e0d0322a8d99444375f29015dd872d" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">Это ключевое слово включено функцией &lt;code&gt;&quot;switch&quot;&lt;/code&gt; ; см. &lt;a href=&quot;feature&quot;&gt;функцию&lt;/a&gt; для получения дополнительной информации о &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . Вы также можете получить к нему доступ, добавив к нему префикс &lt;code&gt;CORE::&lt;/code&gt; . В качестве альтернативы можно включить в текущую область &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; или новее.</target>
        </trans-unit>
        <trans-unit id="29762772c48cba2696e2ebbb42e9c2d4888e7318" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">Это ключевое слово похоже на ключевое слово PROTOTYPES: выше, но может использоваться, чтобы заставить &lt;b&gt;xsubpp&lt;/b&gt; использовать определенный прототип для XSUB. Это ключевое слово отменяет все другие параметры и ключевые слова прототипа, но влияет только на текущий XSUB. Проконсультируйтесь с &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes в perlsub&lt;/a&gt; для получения информации о прототипах Perl.</target>
        </trans-unit>
        <trans-unit id="85b8915eb7407eed5e4863e8fa3af3a2f3aafc0d" translate="yes" xml:space="preserve">
          <source>This keyword is used in more complicated XSUBs which require special handling for the C function. The RETVAL variable is still declared, but it will not be returned unless it is specified in the OUTPUT: section.</source>
          <target state="translated">Это ключевое слово используется в более сложных XSUB,которые требуют специальной обработки для функции C.Переменная RETVAL все еще объявлена,но она не будет возвращена,если не будет указана в разделе OUTPUT:.</target>
        </trans-unit>
        <trans-unit id="aa7963343b84df8b23c604395808970c0e2420a5" translate="yes" xml:space="preserve">
          <source>This keyword makes sense only if &lt;code&gt;RETVAL&lt;/code&gt; is going to be accessed by the user-supplied code. It is especially useful to make a function interface more Perl-like, especially when the C return value is just an error condition indicator. For example,</source>
          <target state="translated">Это ключевое слово имеет смысл только в том случае, если к &lt;code&gt;RETVAL&lt;/code&gt; будет обращаться пользовательский код. Особенно полезно сделать интерфейс функций более похожим на Perl, особенно когда возвращаемое значение C является просто индикатором состояния ошибки. Например,</target>
        </trans-unit>
        <trans-unit id="b1b52e23340e03d5e2d9ec935c2b222b8a59f7e3" translate="yes" xml:space="preserve">
          <source>This keyword may be used any time after the first MODULE keyword and should appear on a line by itself. The first blank line after the keyword will terminate the code block.</source>
          <target state="translated">Это ключевое слово может быть использовано в любое время после первого МОДУЛЯ и должно появляться в строке само по себе.Первая пустая строка после ключевого слова будет завершать блок кода.</target>
        </trans-unit>
        <trans-unit id="8c3c885b0fa12332744123cf10bb6f10b80fe29e" translate="yes" xml:space="preserve">
          <source>This keyword should follow the PACKAGE keyword when used. If PACKAGE is not used then PREFIX should follow the MODULE keyword.</source>
          <target state="translated">Это ключевое слово должно следовать за ключевым словом PACKAGE при его использовании.Если ПАКЕТ не используется,то PREFIX должен следовать ключевому слову МОДУЛЬ.</target>
        </trans-unit>
        <trans-unit id="febcd526951ded918c85fd19d9088e687e73cc02" translate="yes" xml:space="preserve">
          <source>This keyword will normally be used to complement the CODE: keyword. The RETVAL variable is not recognized as an output variable when the CODE: keyword is present. The OUTPUT: keyword is used in this situation to tell the compiler that RETVAL really is an output variable.</source>
          <target state="translated">Это ключевое слово обычно используется для дополнения CODE:.Переменная RETVAL не распознается как выходная переменная при наличии ключевого слова CODE:.Ключевое слово OUTPUT:используется в этой ситуации,чтобы сказать компилятору,что RETVAL действительно является выходной переменной.</target>
        </trans-unit>
        <trans-unit id="cb6c35b047be04a4c7f82192e6412bfe49f97ba3" translate="yes" xml:space="preserve">
          <source>This last example is purely for purposes of completeness. You should not be trying to mess with the attributes of something in a package that's not your own.</source>
          <target state="translated">Этот последний пример приведен исключительно в целях полноты.Вы не должны пытаться испортить атрибуты чего-то в пакете,который вам не принадлежит.</target>
        </trans-unit>
        <trans-unit id="862d993f36bd27f44699b4c5102357c5ca816339" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it; &lt;code&gt;/x&lt;/code&gt; is turned on even within bracketed character classes, except you can't have comments inside them. Hence,</source>
          <target state="translated">В этом последнем примере показано использование этой конструкции для указания обычного класса символов в квадратных скобках без дополнительных операций над множествами. Обратите внимание на белое пространство внутри него; &lt;code&gt;/x&lt;/code&gt; включен даже в классах символов в квадратных скобках, за исключением того, что внутри них не может быть комментариев. Следовательно,</target>
        </trans-unit>
        <trans-unit id="9220dfc1805deb030c183292c9d16a65be2d81b4" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , and &lt;code&gt;$Etc&lt;/code&gt; . The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">Этот последний пример расщепляется &lt;code&gt;$foo&lt;/code&gt; в первых двух слов , а остальную часть линии, и присваивает эти три поля &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , и &lt;code&gt;$Etc&lt;/code&gt; . Условие истинно, если были присвоены какие-либо переменные; то есть, если образец совпал.</target>
        </trans-unit>
        <trans-unit id="b0e7606501a4d8dcdc827582f8772dc7d2f7c727" translate="yes" xml:space="preserve">
          <source>This last one is present only in perl 5.22.0 and higher.</source>
          <target state="translated">Последняя присутствует только в perl 5.22.0 и выше.</target>
        </trans-unit>
        <trans-unit id="71d99570ae143a5a3edf0f9d507ad7328c03cf89" translate="yes" xml:space="preserve">
          <source>This latter is improper because when the &quot;=end outer&quot; command is seen, the currently open region has the formatname &quot;inner&quot;, not &quot;outer&quot;. (It just happens that &quot;outer&quot; is the format name of a higher-up region.) This is an error. Processors must by default report this as an error, and may halt processing the document containing that error. A corollary of this is that regions cannot &quot;overlap&quot;. That is, the latter block above does not represent a region called &quot;outer&quot; which contains X and Y, overlapping a region called &quot;inner&quot; which contains Y and Z. But because it is invalid (as all apparently overlapping regions would be), it doesn't represent that, or anything at all.</source>
          <target state="translated">Последнее неправильно,потому что при выполнении команды &quot;=end outer&quot; открытая область имеет имя формата &quot;внутренний&quot;,а не &quot;внешний&quot;.(Просто бывает,что &quot;outer&quot;-это имя формата вышестоящей области.)Это ошибка.Процессоры должны по умолчанию сообщить об этом как об ошибке и могут прекратить обработку документа,содержащего эту ошибку.Следствием этого является то,что регионы не могут &quot;накладываться друг на друга&quot;.То есть последний блок выше не представляет регион,называемый &quot;внешним&quot;,который содержит X и Y,перекрывающий регион,называемый &quot;внутренним&quot;,который содержит Y и Z.Но поскольку он недействителен (как и все,видимо,перекрывающиеся области),то он не представляет этого,или чего-либо еще.</target>
        </trans-unit>
        <trans-unit id="7a8db66183eb60025ea9a2964bbf14f04f11348c" translate="yes" xml:space="preserve">
          <source>This layer provides a PerlIO interface by wrapping system's ANSI C &quot;stdio&quot; library calls. The layer provides both buffering and IO. Note that the &lt;code&gt;:stdio&lt;/code&gt; layer does</source>
          <target state="translated">Этот уровень предоставляет интерфейс PerlIO, обертывая системные вызовы библиотеки ANSI C &quot;stdio&quot;. Уровень обеспечивает как буферизацию, так и ввод-вывод. Обратите внимание, что слой &lt;code&gt;:stdio&lt;/code&gt; делает</target>
        </trans-unit>
        <trans-unit id="b630c4528c6aff17852e4e3ca55c2d5a2c70831c" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma,</source>
          <target state="translated">Это приводит к двум другим отличиям. Поскольку возвращается одна кодовая точка, функция не может обрабатывать именованные последовательности символов, поскольку они состоят из нескольких символов ( для них она возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . И кодовой точкой может быть любой символ, даже те, которые не допустимо при &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; прагмы байтов ,</target>
        </trans-unit>
        <trans-unit id="d60f65e26f1f4e74963a10d1932144990bf5f1a5" translate="yes" xml:space="preserve">
          <source>This lets you override an existing type with your own custom type, or register a completely new type, eg:</source>
          <target state="translated">Это позволяет переопределить существующий тип с вашим собственным пользовательским типом,или зарегистрировать совершенно новый тип,например:</target>
        </trans-unit>
        <trans-unit id="3afaf78f703df78ea1b2a3a94074c1f6af7d070b" translate="yes" xml:space="preserve">
          <source>This level of sophistication puts filtering out of the reach of many programmers.</source>
          <target state="translated">Такой уровень сложности делает фильтрацию недоступной для многих программистов.</target>
        </trans-unit>
        <trans-unit id="96b38d379d8ea7799ed19600bd96b2cf3c932e45" translate="yes" xml:space="preserve">
          <source>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">Эта библиотека распространяется в надежде,что она будет полезной,но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ;даже без подразумеваемой гарантии ТОВАРНОЙ ПРИГОДНОСТИ или ПРИГОДНОСТИ ДЛЯ КОНКРЕТНЫХ ЦЕЛЕЙ.Более подробная информация приведена в Стандартной Общественной Лицензии GNU.</target>
        </trans-unit>
        <trans-unit id="5235941a62b852074a7c3e9fc51537a52e5be7a3" translate="yes" xml:space="preserve">
          <source>This library is free software. You can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением.Вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="f877037944f8c1888cbf64249275515c89dec317" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.7 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl,либо Perl версии 5.8.7,либо,по вашему выбору,любую более позднюю версию Perl 5,которая может быть вам доступна.</target>
        </trans-unit>
        <trans-unit id="59869bc853c079c70b9f3b6879026f6cde3bb8df" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="95bf2cec5fb49eb84ad57753eb4accbc37f2ba0f" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять и/или изменять ее на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="5912c0244d5e6338722acbdad50efbccb8883b11" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Эта библиотека является свободным программным обеспечением;вы можете распространять ее и/или модифицировать на тех же условиях,что и сам Perl.</target>
        </trans-unit>
        <trans-unit id="4f410cd597bbeaeb5f199c6d8d09628b5554744f" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool, which when fed,</source>
          <target state="translated">Эта библиотека полезна для инструмента &lt;code&gt;find2perl&lt;/code&gt; , который при загрузке</target>
        </trans-unit>
        <trans-unit id="c0bf3b785ab345744e2dfb1b0071fc64c2b599fe" translate="yes" xml:space="preserve">
          <source>This library provides functions for common tasks involving language tags as they are needed in a variety of protocols and applications.</source>
          <target state="translated">Эта библиотека предоставляет функции для общих задач,связанных с языковыми тегами,так как они необходимы в различных протоколах и приложениях.</target>
        </trans-unit>
        <trans-unit id="0c8a7928010093d74c8591010b017561f0beda8e" translate="yes" xml:space="preserve">
          <source>This library provides support for big integer calculations. It is not intended to be used by other modules. Other modules which support the same API (see below) can also be used to support Math::BigInt, like Math::BigInt::GMP and Math::BigInt::Pari.</source>
          <target state="translated">Эта библиотека обеспечивает поддержку вычислений с большими целыми числами.Она не предназначена для использования другими модулями.Другие модули,поддерживающие тот же API (см.ниже),также могут использоваться для поддержки Math::BigInt,например Math::BigInt::GMP и Math::BigInt::Pari.</target>
        </trans-unit>
        <trans-unit id="a3eb497d536b5c644bfd0b5d3e8c9055b4a9a57d" translate="yes" xml:space="preserve">
          <source>This limitation arises from fundamental technical difficulties in cloning and restarting the stacks used by the Perl parser in the middle of a parse.</source>
          <target state="translated">Это ограничение связано с фундаментальными техническими трудностями при клонировании и перезапуске штабелей,используемых парсером Perl в середине разбора.</target>
        </trans-unit>
        <trans-unit id="5fe79b21d14490122d11b41cbba492989dbd2358" translate="yes" xml:space="preserve">
          <source>This limitation might be removed in a future version of perl.</source>
          <target state="translated">Это ограничение может быть снято в будущей версии perl.</target>
        </trans-unit>
        <trans-unit id="68a6939633ab7f637a699e2abcb07f19152f1003" translate="yes" xml:space="preserve">
          <source>This line is taken from &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; 3.04, and marks it as deprecated beyond Perl 5.16. If you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; in Perl 5.18, for example, and you have used &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;, then you'll get a warning message (the deprecate module looks to see whether the calling module was &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;'d from a core library directory, and if so, generates a warning), unless you've installed a more recent version of &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; from CPAN.</source>
          <target state="translated">Эта строка взята из &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; 3.04 и помечает ее как устаревшую после Perl 5.16. Если вы &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; в Perl 5.18, например, и вы использовали &lt;a href=&quot;warnings&quot;&gt;предупреждение&lt;/a&gt; , то вы получите предупреждающее сообщение (то принизить модуль смотрит , был ли вызывающий модуль &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; &amp;laquo;d из каталога основной библиотеки, и если да, генерирует предупреждение), если вы не установили более свежую версию &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; из CPAN.</target>
        </trans-unit>
        <trans-unit id="9d4d9656ee66f6221eea8c2856144cdf8d5022fd" translate="yes" xml:space="preserve">
          <source>This list includes architecture-dependent directories back to version $api_versionstring (e.g. 5.5.640) and architecture-independent directories all the way back to 5.005.</source>
          <target state="translated">Этот список включает в себя архитектурно-независимые каталоги,вернувшиеся к версии $api_versionstring (например,5.5.640),и архитектурно-независимые каталоги,вернувшиеся к версии 5.005.</target>
        </trans-unit>
        <trans-unit id="2a2fc6936d401079e1014279fe24282359b2ced4" translate="yes" xml:space="preserve">
          <source>This list is in alphabetical order by English name of the language.</source>
          <target state="translated">Этот список составлен в алфавитном порядке по английскому названию языка.</target>
        </trans-unit>
        <trans-unit id="fbc78c3347e34ef8b4193dfb718a45521c4ab8d4" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;Perl Functions by Category in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">Этот список категорий используется для создания того же порядка, что и &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;функции Perl по категориям в&lt;/a&gt; разделе perlfunc .</target>
        </trans-unit>
        <trans-unit id="b0d8392d22aa3f9f1cc5418d2f71d3d9b55240c2" translate="yes" xml:space="preserve">
          <source>This list used to contain :base_io prior to Opcode 1.07.</source>
          <target state="translated">Этот список содержал :base_io до Opcode 1.07.</target>
        </trans-unit>
        <trans-unit id="f6d74c66919ae745b2d3650dc11a98193dcd5f79" translate="yes" xml:space="preserve">
          <source>This load time hit can be a problem when startup speed is important, such as with a command-line script or a &quot;plain vanilla&quot; CGI script that must be loaded each time it is executed.</source>
          <target state="translated">Этот удар по времени загрузки может быть проблемой,когда скорость загрузки важна,например,с помощью CGI-скрипта командной строки или &quot;просто ванильного&quot; CGI-скрипта,который должен загружаться каждый раз,когда он выполняется.</target>
        </trans-unit>
        <trans-unit id="f016e1379d18764668778064a6a84ece9741d1da" translate="yes" xml:space="preserve">
          <source>This logical name must be defined before Perl is started.</source>
          <target state="translated">Это логическое имя должно быть определено перед запуском Perl.</target>
        </trans-unit>
        <trans-unit id="2da9ead2fb770925df3e972a0efa2a82cbbd6ec6" translate="yes" xml:space="preserve">
          <source>This looks in the %Lexicon of the language handle $lh and all its superclasses, looking for an entry whose key is the string</source>
          <target state="translated">Это выглядит в %Lexicon языкового дескриптора $lh и всех его суперклассов,ищущего запись,ключом которой является строка</target>
        </trans-unit>
        <trans-unit id="6b4001bd2a1ae040dc8e95119817ede264954c05" translate="yes" xml:space="preserve">
          <source>This loses precision, to avoid this use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; instead.</source>
          <target state="translated">Это теряет точность, чтобы избежать использования &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int ()&lt;/a&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="2cb2a7c80cbcd1bcc850e8fe88a609a4116cf1c4" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">Эта машина родной сверка (что вы получите , если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; не появилась ранее в том же блоке) должна быть использована для сортировки сырых двоичных данных, в то время как Локальнозависимая сверка первого примера полезна для естественного текста.</target>
        </trans-unit>
        <trans-unit id="fe9b1418e4cf2456d34c78acbb912d03460323b0" translate="yes" xml:space="preserve">
          <source>This macro automatically adjusts the stack for you, if needed. Thus, you do not need to call &lt;code&gt;EXTEND&lt;/code&gt; to extend the stack.</source>
          <target state="translated">Этот макрос автоматически настраивает стек за вас, если необходимо. Таким образом, вам не нужно вызывать &lt;code&gt;EXTEND&lt;/code&gt; для расширения стека.</target>
        </trans-unit>
        <trans-unit id="28984ae179e05c5bf9916303fc08d37c02058ac5" translate="yes" xml:space="preserve">
          <source>This macro is only used by sv_true() or its macro equivalent, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. It calls sv_2bool_flags with the SV_GMAGIC flag.</source>
          <target state="translated">Этот макрос используется только функцией sv_true()или ее макроэквивалентом,и только в том случае,если аргумент последнего не является ни SvPOK,ни SvIOK,ни SvNOK.Он вызывает флаги sv_2bool_flags с флагом SV_GMAGIC.</target>
        </trans-unit>
        <trans-unit id="e10545c4894740426ee72f48ac1e29d7b762c0e6" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">Этот макрос является началом обертывания кода C или XS; окончание обертывания выполняется путем вызова макроса &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; после операции. В противном случае состояние может быть изменено, что отрицательно повлияет на другой код XS.</target>
        </trans-unit>
        <trans-unit id="108576184697c52b594b5fe191807eddc07365bd" translate="yes" xml:space="preserve">
          <source>This macro is used to define a unique key to refer to the static data for an XS module. The suggested naming scheme, as used by h2xs, is to use a string that consists of the module name, the string &quot;::_guts&quot; and the module version number.</source>
          <target state="translated">Данный макрос используется для определения уникального ключа для обращения к статическим данным модуля XS.Предлагаемая схема именования,используемая h2xs,заключается в использовании строки,состоящей из имени модуля,строки &quot;::_guts&quot; и номера версии модуля.</target>
        </trans-unit>
        <trans-unit id="c6d4c1493bd7a58de9fad441658972687cd16b89" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">Этот макрос гарантирует, что текущее состояние &lt;code&gt;LC_NUMERIC&lt;/code&gt; установлено правильно, чтобы знать языковой стандарт, если вызов кода XS или C из программы Perl находится в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; или игнорировать языковой стандарт, если вызов идет извне.</target>
        </trans-unit>
        <trans-unit id="a92648c32efc9502af17e5ceb0078f95c4ee774c" translate="yes" xml:space="preserve">
          <source>This macro should be used as a statement. It declares a private variable (whose name begins with an underscore) that is needed by the other macros in this section. Failing to include this correctly should lead to a syntax error. For compatibility with C89 C compilers it should be placed in a block before any executable statements.</source>
          <target state="translated">Этот макрос следует использовать как утверждение.Он объявляет приватную переменную (имя которой начинается со знака подчеркивания),которая необходима другим макросам в этом разделе.Неправильное его включение должно привести к синтаксической ошибке.Для совместимости с компиляторами C89 C его следует поместить в блок перед любыми исполняемыми операторами.</target>
        </trans-unit>
        <trans-unit id="b90726f024761758381d53bc05e127149501c3cd" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">Это делает &lt;code&gt;$?&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; возвращает собственный статус выхода VMS вместо эмуляции статуса выхода POSIX.</target>
        </trans-unit>
        <trans-unit id="8a2c6d4ff2fd838d04decac262a17dd105743f47" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">Это заставляет &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; производить успешный выход (со статусом SS $ _NORMAL) вместо эмуляции UNIX exit (), который считает, что &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; указывает на ошибку. Как и в случае с функцией exit () CRTL, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; также отображается в статус выхода SS $ _NORMAL, а любой другой аргумент exit () используется непосредственно как статус выхода Perl.</target>
        </trans-unit>
        <trans-unit id="7bf5212d7d68fd2597a5ccb3dac44a0ec0acbc33" translate="yes" xml:space="preserve">
          <source>This makes all times relative to the local time zone, instead of the default of Universal Time (a.k.a Greenwich Mean Time, or GMT).</source>
          <target state="translated">Это делает все времена относительно местного часового пояса,а не по умолчанию Универсального времени (так же известного как среднее время по Гринвичу,или GMT).</target>
        </trans-unit>
        <trans-unit id="9babc5bd4d4d8fad4e1a1114788e7c9d9589298f" translate="yes" xml:space="preserve">
          <source>This makes it easy for people to use your module with Perl. Note that this licensing example is neither an endorsement or a requirement, you are of course free to choose any licensing.</source>
          <target state="translated">Это позволяет людям легко использовать ваш модуль с Perl.Обратите внимание,что этот пример лицензирования не является ни подтверждением,ни требованием,вы,конечно же,вольны выбирать любую лицензию.</target>
        </trans-unit>
        <trans-unit id="f6b677bb7d54149dada8aa52108296cc95f7e885" translate="yes" xml:space="preserve">
          <source>This makes it easy to turn memoizing on and off.</source>
          <target state="translated">Это позволяет легко включать и выключать запоминания.</target>
        </trans-unit>
        <trans-unit id="84c2faa4aab99c70a3db865e9bc75342b3b56a52" translate="yes" xml:space="preserve">
          <source>This makes it easy to write loops that terminate when a null list is returned:</source>
          <target state="translated">Это облегчает запись циклов,которые завершаются,когда возвращается нулевой список:</target>
        </trans-unit>
        <trans-unit id="ef9cd0d8fba7947707aa196a6028ecbb8adf2cd7" translate="yes" xml:space="preserve">
          <source>This makes it possible for you to have a single point of configuring what subclasses should be used, which means that in many cases you'll find you only need to sub-class one of the parser's components.</source>
          <target state="translated">Это позволяет вам иметь единую точку настройки того,какие подклассы должны использоваться,а это значит,что во многих случаях вам нужно будет использовать только один из подклассов парсера.</target>
        </trans-unit>
        <trans-unit id="80334a3bb6611cb20a20615249beb172fdbc5b91" translate="yes" xml:space="preserve">
          <source>This makes it possible to mix arguments of different classes (as in 2.5 + 2) as well es preserve accuracy (as in sqrt(3)).</source>
          <target state="translated">Это позволяет смешивать аргументы различных классов (как в 2.5+2),а также сохранять точность (как в sqrt(3)).</target>
        </trans-unit>
        <trans-unit id="304f656ae607b7cf896345e4cfc56ab064cd5820" translate="yes" xml:space="preserve">
          <source>This makes it possible to write a constructor like this:</source>
          <target state="translated">Это позволяет написать такой конструктор:</target>
        </trans-unit>
        <trans-unit id="08c53718a75ad3b112dec7a9bbaa9b39968746d5" translate="yes" xml:space="preserve">
          <source>This makes sure that &lt;code&gt;foo bar&lt;/code&gt; is treated as a string, rather than two separate arguments to the &lt;code&gt;echo&lt;/code&gt; function.</source>
          <target state="translated">Это гарантирует, что &lt;code&gt;foo bar&lt;/code&gt; обрабатывается как строка, а не как два отдельных аргумента функции &lt;code&gt;echo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d11f54f9813ffdcb8a603cf0a760fa85bee8c0f3" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</source>
          <target state="translated">Это заставляет четыре стандартных побитовых оператора ( &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) последовательно обрабатывать свои операнды как числа и вводит четыре новых оператора с точками ( &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ), Которые последовательно обрабатывают свои операнды как строки. То же самое относится к вариантам присваивания ( &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="168408e4eda2afd55c396c633b53aaec0eb729d4" translate="yes" xml:space="preserve">
          <source>This makes this XSUB look similar to an ANSI C declaration. An optional semicolon is allowed after the argument list, as in</source>
          <target state="translated">Это делает этот XSUB похожим на декларацию ANSI C.Необязательная точка с запятой разрешена после списка аргументов,как в случае с</target>
        </trans-unit>
        <trans-unit id="2eced7035bcf730659e224115fc20b5232c60142" translate="yes" xml:space="preserve">
          <source>This man page is for the version for modern perls and so that's probably what you've got.</source>
          <target state="translated">Эта man-страница для версии для современных перлов,так что,вероятно,это то,что у вас есть.</target>
        </trans-unit>
        <trans-unit id="b1f55a347ef2e9626ef51c086b431d8a172c3d1b" translate="yes" xml:space="preserve">
          <source>This manpage contains short recipes demonstrating how to handle common Unicode operations in Perl, plus one complete program at the end. Any undeclared variables in individual recipes are assumed to have a previous appropriate value in them.</source>
          <target state="translated">Эта страница содержит короткие рецепты,демонстрирующие,как работать с обычными операциями Юникода на Perl,плюс одна полная программа в конце.Предполагается,что любые незаявленные переменные в отдельных рецептах имеют в них ранее соответствующее значение.</target>
        </trans-unit>
        <trans-unit id="aa682f1e123b444504fdfffff8f8767942781c1e" translate="yes" xml:space="preserve">
          <source>This manual page discusses the syntax and use of character classes in Perl regular expressions.</source>
          <target state="translated">На этой странице руководства обсуждается синтаксис и использование символьных классов в регулярных выражениях Perl.</target>
        </trans-unit>
        <trans-unit id="3369a77e4e9693acaaa9351801ed7f0c5ee8faea" translate="yes" xml:space="preserve">
          <source>This maps from US-ASCII codes (like 32) to the corresponding character (like space, for 32). Only characters 32 to 126 are defined. This is meant for use by &lt;code&gt;e2char($x)&lt;/code&gt; when it senses that it's running on a non-ASCII platform (where chr(32) doesn't get you a space -- but $Code2USASCII{32} will). It's documented here just in case you might find it useful.</source>
          <target state="translated">Это сопоставляет коды US-ASCII (например, 32) с соответствующими символами (например, пробел, для 32). Определены только символы с 32 по 126. Это предназначено для использования &lt;code&gt;e2char($x)&lt;/code&gt; когда он определяет, что он работает на платформе, отличной от ASCII (где chr (32) не дает вам места, но $ Code2USASCII {32} будет). Это задокументировано здесь на всякий случай, если вы сочтете это полезным.</target>
        </trans-unit>
        <trans-unit id="cb4d3919cb732684c195097b0bb170a903bf1284" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">Это отмечает конец области, открытой соответствующей областью &quot;= begin formatname&quot;. Если &amp;laquo;имя формата&amp;raquo; не является именем формата самой последней открытой области &amp;laquo;= начало имя формата&amp;raquo;, то это ошибка и должно генерироваться сообщение об ошибке. Это подробно обсуждается в разделе &amp;laquo; &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;Об абзацах данных и = begin / = end Regions&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f3eb630ccbc8c1b4b4ea62b60c2f17bbd2e13b1" translate="yes" xml:space="preserve">
          <source>This marks the following paragraphs (until the matching &quot;=end formatname&quot;) as being for some special kind of processing. Unless &quot;formatname&quot; begins with a colon, the contained non-command paragraphs are data paragraphs. But if &quot;formatname&quot;</source>
          <target state="translated">Это помечает следующие параграфы (до совпадения &quot;=имя формата конца&quot;)как предназначенные для какого-то специального вида обработки.Если &quot;имя формата&quot; не начинается с двоеточия,то содержащиеся не обязывающие параграфы являются параграфами данных.Но если &quot;имя формата&quot;</target>
        </trans-unit>
        <trans-unit id="199ca4d2282805128a713cd4c31b353ecaf62285" translate="yes" xml:space="preserve">
          <source>This matches a Unicode</source>
          <target state="translated">Это соответствует Юникоду</target>
        </trans-unit>
        <trans-unit id="7a2285705bf65a5f3a4137269fb669e26419a225" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5cX&quot;&gt;\X&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Use whichever is most convenient for your situation.</source>
          <target state="translated">Это соответствует Unicode &amp;laquo;Граница кластера графемы&amp;raquo;. (На самом деле Perl всегда использует улучшенный &quot;расширенный&quot; кластер графем &quot;.) Они объясняются ниже в разделе &lt;a href=&quot;#%5cX&quot;&gt;\ X.&lt;/a&gt; Фактически, &lt;code&gt;\X&lt;/code&gt; - это еще один способ получить ту же функциональность. Он эквивалентен &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Используйте то, что наиболее удобно в вашей ситуации.</target>
        </trans-unit>
        <trans-unit id="43a174e3acf9fe3da094fe1e29ca009a0ac07471" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5cR&quot;&gt;\R&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sententces. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">Это соответствует &amp;laquo;границе предложения&amp;raquo; Unicode. Это помощь в синтаксическом анализе предложений на естественном языке. Это дает хорошие, но несовершенные результаты. Например, он считает, что &amp;laquo;мистер Смит&amp;raquo; - это два предложения. Более подробная информация на &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt; . Также обратите внимание, что он считает, что все, что соответствует &lt;a href=&quot;#%5cR&quot;&gt;\ R&lt;/a&gt; (кроме подачи формы и вертикальной табуляции), является границей предложения. &lt;code&gt;\b{sb}&lt;/code&gt; работает с текстом, разработанным для текстовых процессоров, которые автоматически переносят строки для отображения, но жестко запрограммированные границы строк считаются, по сути, концами текстовых блоков (на самом деле абзацев) и, следовательно, концами предложений. &lt;code&gt;\b{sb}&lt;/code&gt; плохо работает с текстом, содержащим встроенные символы новой строки, например, с исходным текстом документа, который вы читаете. Такой текст необходимо предварительно обработать, чтобы избавиться от разделителей строк перед поиском границ предложения. Некоторые люди считают это ошибкой в ​​стандарте Unicode, и это поведение может измениться в будущих версиях Perl.</target>
        </trans-unit>
        <trans-unit id="862d390cde50da1c3067a4f5bf13a23004164fc2" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">Это соответствует &quot;границе слова&quot; Unicode. Это дает лучшие (хотя и не идеальные) результаты для обработки естественного языка, чем простой &lt;code&gt;\b&lt;/code&gt; (без фигурных скобок). Например, он понимает, что апострофы могут быть в середине слов, а скобки - нет (см. Примеры ниже). Более подробная информация на &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46f9c4b6a0133a2ba4a4536268bb4388e6462d37" translate="yes" xml:space="preserve">
          <source>This matches any &lt;code&gt;\p{Alphabetic}&lt;/code&gt; or &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; character.</source>
          <target state="translated">Это соответствует любому &lt;code&gt;\p{Alphabetic}&lt;/code&gt; или &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; символов.</target>
        </trans-unit>
        <trans-unit id="1368a197a87ba6ed14500f8908565c9ada6f62ff" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt; ).</source>
          <target state="translated">Это соответствует любой назначенной кодовой точке; то есть любая кодовая точка, &lt;a href=&quot;#General_Category&quot;&gt;общая категория&lt;/a&gt; которой не является &lt;code&gt;Unassigned&lt;/code&gt; (или, что эквивалентно, не &lt;code&gt;Cn&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a2970fcf592bf526b7624da46ffe2c2926bcdb66" translate="yes" xml:space="preserve">
          <source>This matches any character that is graphical or blank, except controls.</source>
          <target state="translated">Это соответствует любому графическому или пустому символу,за исключением элементов управления.</target>
        </trans-unit>
        <trans-unit id="9dcbf046b8bea0226e813051a826c67a230a6bfb" translate="yes" xml:space="preserve">
          <source>This matches any of the 128 characters in the US-ASCII character set, which is a subset of Unicode.</source>
          <target state="translated">Это соответствует любому из 128 символов в наборе символов US-ASCII,который является подмножеством Юникода.</target>
        </trans-unit>
        <trans-unit id="6f971eb914dae58555e5f55db125c34d663d6429" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt; .</source>
          <target state="translated">Это соответствует любой из кодовых точек 1_114_112 Unicode. &lt;code&gt;\p{Any}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50e5a95f3a6d3f1afad03782326f2e0e7b9c9ed7" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt; .</source>
          <target state="translated">Это соответствует любой из кодовых точек 1_114_112 Unicode. Это синоним &lt;code&gt;\p{Unicode}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ddbc160eb4c94b6ef293222be013d55a26c3ebd" translate="yes" xml:space="preserve">
          <source>This matches digits that are in either the Thai or Laotian scripts.</source>
          <target state="translated">Это совпадает с цифрами,которые есть либо в тайском или лаосском сценарии.</target>
        </trans-unit>
        <trans-unit id="bed0a3d92b78eec58ff8b7c04af52fb9a269486e" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; below).</source>
          <target state="translated">Это соответствует каждой возможной кодовой точке. Это эквивалентно &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt; . В отличие от всех других совпадений свойств &lt;code&gt;\p{}&lt;/code&gt; , не определенных пользователем, предупреждение никогда не генерируется, если это свойство сопоставляется с кодовой точкой, отличной от Unicode (см. Ниже кодовые точки &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5af876b8e44759fbc1c5f4ebb39fe615bb29e7e" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character. All the other escapes accepted by normal bracketed character classes are accepted here as well; but unrecognized escapes that generate warnings in normal classes are fatal errors here.</source>
          <target state="translated">Это соответствует английским гласным плюс символу SPACE.Здесь также принимаются все остальные экранирования,принятые обычными классами символов в квадратных скобках;но непризнанные экранирования,которые выдают предупреждения в обычных классах,являются здесь фатальными ошибками.</target>
        </trans-unit>
        <trans-unit id="6fe0bd3d52f9526a3bdbdf0fb7b2272dd4226b2a" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;I cannot run external programs&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">Это может быть вариант того, что &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;я не могу запускать внешние программы&lt;/a&gt; , или более серьезная проблема. В основном: ты</target>
        </trans-unit>
        <trans-unit id="3c2e6cadd45bf9050033dd0f02dee64c1cb36e02" translate="yes" xml:space="preserve">
          <source>This may also be a good time to ensure that your /etc/protocol file and either your /etc/resolv.conf or /etc/hosts files are in place. The IBM document that described such USS system setup issues was SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;, in particular Chapter 6 on customizing the OE shell.</source>
          <target state="translated">Это также может быть подходящим моментом,чтобы убедиться,что ваш файл /etc/protocol и файлы /etc/resolv.conf или /etc/hosts находятся на месте.Документ IBM,описывающий такие проблемы настройки системы USS,был SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;,в частности Глава 6 о настройке оболочки OE.</target>
        </trans-unit>
        <trans-unit id="1206b674e03199df25ca78fd2210a65fd2a21ff2" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">Также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются (но шрифт все равно изменяется для вывода troff).</target>
        </trans-unit>
        <trans-unit id="345f8ac7fec5019dbde30571fee3e63e792fb3cf" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">Также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются.</target>
        </trans-unit>
        <trans-unit id="a4b045aef9d01569a459e4507e2bf0dbcc4d078d" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">Это может быть менее очевидным в других ситуациях, таких как &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; , например, при поиске списка ослабленных ссылок на объекты, которые, возможно, уже были уничтожены:</target>
        </trans-unit>
        <trans-unit id="9b6b611a35aea5e6cbfaa34dfad89779e54d15a6" translate="yes" xml:space="preserve">
          <source>This may be useful if other modules expect this module to be</source>
          <target state="translated">Это может быть полезно,если другие модули ожидают,что этот модуль будет</target>
        </trans-unit>
        <trans-unit id="bb1bd20d64f2ccdce3f2cc8fcef954e7c80b5a33" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt; -equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; . Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt; ed types as opaque types.</source>
          <target state="translated">Это может быть полезно, поскольку, скажем, типы, которые &lt;code&gt;typedef&lt;/code&gt; -эквивалентны целым числам, могут представлять дескрипторы, связанные с ОС, и можно захотеть работать с этими дескрипторами в объектно- &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; стиле, как в $ handle-&amp;gt; do_something () . Используйте &lt;code&gt;-o .&lt;/code&gt; если вы хотите обрабатывать все &lt;code&gt;typedef&lt;/code&gt; типы как непрозрачные типы.</target>
        </trans-unit>
        <trans-unit id="219180c7e012f10d4f7a83d42d7e8f2690484f40" translate="yes" xml:space="preserve">
          <source>This may break in two ways:</source>
          <target state="translated">Это может разбиться на две части:</target>
        </trans-unit>
        <trans-unit id="c894611388eb78ec067fed71d079c9e5816ca7b5" translate="yes" xml:space="preserve">
          <source>This may cause problems:</source>
          <target state="translated">Это может вызвать проблемы:</target>
        </trans-unit>
        <trans-unit id="5b07568535355dc79492449b01ec4948cfdc2343" translate="yes" xml:space="preserve">
          <source>This may expect the C</source>
          <target state="translated">Это может означать,что C</target>
        </trans-unit>
        <trans-unit id="03f2543e21cbd92a7ee1ca79827f8f9611eefa56" translate="yes" xml:space="preserve">
          <source>This may later be extended to include other information, so be careful with pattern-matching on the results.</source>
          <target state="translated">Позднее эта информация может быть расширена,чтобы включить в нее другую информацию,поэтому будьте внимательны при сравнении результатов с образцами.</target>
        </trans-unit>
        <trans-unit id="e21dadcda575196402392ef6ce13a8923c3356bf" translate="yes" xml:space="preserve">
          <source>This may lead to problems later in case the socket is accessed via the &quot;usual&quot; file-system calls using the &quot;initial&quot; name.</source>
          <target state="translated">Это может привести к проблемам в дальнейшем,если доступ к сокету осуществляется через &quot;обычные&quot; вызовы файловой системы с &quot;начальным&quot; именем.</target>
        </trans-unit>
        <trans-unit id="6110636ef5b993e8ba32881ebb3b6bb734669e0b" translate="yes" xml:space="preserve">
          <source>This may take a couple of hours on 1GHz processor (when run the first time). And this should not be necessarily a smooth procedure. Some modules may not specify required dependencies, so one may need to repeat this procedure several times until the results stabilize.</source>
          <target state="translated">Это может занять пару часов на 1 ГГц процессоре (при первом запуске).И это не обязательно должна быть гладкая процедура.Некоторые модули могут не указывать требуемые зависимости,поэтому может потребоваться повторить эту процедуру несколько раз,пока результаты не стабилизируются.</target>
        </trans-unit>
        <trans-unit id="21e8b83f4a4668675b959f09a3dddc3f913b92a2" translate="yes" xml:space="preserve">
          <source>This means integer values like 1.01E2 or even 1000E-2 are also accepted. Non-integer values result in NaN.</source>
          <target state="translated">Это означает,что также принимаются целые значения типа 1.01E2 или даже 1000E-2.Непрописанные значения приводят к NaN.</target>
        </trans-unit>
        <trans-unit id="0df399dd4c0ebd437b2b092068503ec57072d7a4" translate="yes" xml:space="preserve">
          <source>This means somewhere a routine got a BigFloat/Lite but expected a BigInt (or vice versa) and the upgrade/downgrad path was missing. This is a bug, please report it so that we can fix it.</source>
          <target state="translated">Это означает,что где-то рутина получила BigFloat/Lite,но ожидала BigInt (или наоборот)и путь апгрейда/даунграда был пропущен.Это ошибка,пожалуйста,сообщите об этом,чтобы мы могли ее исправить.</target>
        </trans-unit>
        <trans-unit id="14a58ee32b8ae7bdc388a529d03ef7e5871a7f4e" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;catdir()&lt;/code&gt; is called only when there are two or more arguments, as one might expect.</source>
          <target state="translated">Это означает, что &lt;code&gt;catdir()&lt;/code&gt; вызывается только при наличии двух или более аргументов, как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="578c842326a0346c93813339f663f40295cced47" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;prop_invmap&lt;/code&gt; returns a 4 element list. For example,</source>
          <target state="translated">Это означает, что &lt;code&gt;prop_invmap&lt;/code&gt; возвращает список из 4 элементов. Например,</target>
        </trans-unit>
        <trans-unit id="38b6532eaf6e68ec76d8a337e1c024ccfeab03a8" translate="yes" xml:space="preserve">
          <source>This means that arithmetic involving only string values or string literals will be performed using Perl's built-in operators.</source>
          <target state="translated">Это означает,что арифметика со строковыми значениями или строковыми литералами будет выполняться с помощью встроенных операторов Perl.</target>
        </trans-unit>
        <trans-unit id="01006b71ced49944419d9cf9ecdab2df41a8f161" translate="yes" xml:space="preserve">
          <source>This means that if a developer only needs a module for the BAR standard, they should not be forced to install libraries for FOO as well.</source>
          <target state="translated">Это означает,что если разработчику нужен только модуль для стандарта BAR,его не следует заставлять устанавливать библиотеки и для FOO.</target>
        </trans-unit>
        <trans-unit id="a939b578ee66e30d68a1cb74f87d0079e5aa7b9c" translate="yes" xml:space="preserve">
          <source>This means that it short-circuits: the right expression is evaluated only if the left expression is false. Due to its precedence, you must be careful to avoid using it as replacement for the &lt;code&gt;||&lt;/code&gt; operator. It usually works out better for flow control than in assignments:</source>
          <target state="translated">Это означает, что он замыкается: правое выражение оценивается, только если левое выражение ложно. Из-за его приоритета вы должны быть осторожны, чтобы не использовать его в качестве замены &lt;code&gt;||&lt;/code&gt; оператор. Обычно это работает лучше для управления потоком, чем для заданий:</target>
        </trans-unit>
        <trans-unit id="be9154072eb271aa42c51fcc713d07f839133a3a" translate="yes" xml:space="preserve">
          <source>This means that the code points from 0 to 0x2F do not represent decimal digits; the code point 0x30 (DIGIT ZERO) represents 0; code point 0x31, (DIGIT ONE), represents 0+1-0 = 1; ... code point 0x39, (DIGIT NINE), represents 0+9-0 = 9; ... code points 0x3A through 0x65F do not represent decimal digits; 0x660 (ARABIC-INDIC DIGIT ZERO), represents 0; ... 0x07C1 (NKO DIGIT ONE), represents 0+1-0 = 1 ...</source>
          <target state="translated">Это означает,что кодовые точки от 0 до 0x2F не представляют десятичных цифр;кодовые точки 0x30 (DIGIT ZERO)представляют 0;кодовые точки 0x31 (DIGIT ONE),представляют 0+1-0=1;...кодовые точки 0x39 (DIGIT NINE),представляют 0+9-0=9;...кодовые точки от 0x3A до 0x65F не представляют десятичных цифр;0x660 (ARABIC-INDIC DIGIT ZERO),представляют 0;...0x07C1 (NKO DIGIT ONE),представляет 0+1-0=1 ...</target>
        </trans-unit>
        <trans-unit id="53a7571a93760445ebdaebf443e990e621523e20" translate="yes" xml:space="preserve">
          <source>This means that the example in the synopsis could be rewritten more simply as:</source>
          <target state="translated">Это означает,что пример в синопсисе можно переписать проще:</target>
        </trans-unit>
        <trans-unit id="a1f3ea2c657f7b7f7d19db3a4421f880ee25efe3" translate="yes" xml:space="preserve">
          <source>This means that the space in the middle of the visible link text must not be broken across lines. In other words, it's the same as this:</source>
          <target state="translated">Это означает,что пространство в середине видимого текста ссылки не должно быть разбито поперек линий.Другими словами,это то же самое:</target>
        </trans-unit>
        <trans-unit id="64c7de2c5fffc581047d71755a716f6efa16c586" translate="yes" xml:space="preserve">
          <source>This means that the words in</source>
          <target state="translated">Это означает,что слова в</target>
        </trans-unit>
        <trans-unit id="f1569c4431f8fc6543e767edacb7a758da5a6960" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">Это означает, что когда &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars' , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; позволяет вам использовать переменную пакета без уточнения ее с именем пакета, но только в пределах лексической области &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявления. Это применяется немедленно - даже в рамках одного и того же утверждения.</target>
        </trans-unit>
        <trans-unit id="f586cceadb03a1ba8357cc824f5f5d4e8015da6f" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">Это означает, что когда &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars' , &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; позволяет вам использовать переменную пакета без уточнения ее с именем пакета, но только в пределах лексической области &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; объявления. Это применяется немедленно - даже в рамках одного и того же утверждения.</target>
        </trans-unit>
        <trans-unit id="b81785772e2cebea14c023690b3e80231bc941d4" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">Это означает, что вы можете встроить код Perl в свой код typemap (C), используя такие конструкции, как &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . Распространенным вариантом использования является создание сообщений об ошибках, которые ссылаются на истинное имя функции, даже при использовании функции ALIAS XS:</target>
        </trans-unit>
        <trans-unit id="fae397e13ee74537dfbe00fc3647b75575531d38" translate="yes" xml:space="preserve">
          <source>This means that you can pass back or save away references to lexical variables, whereas to return a pointer to a C auto is a grave error. It also gives us a way to simulate C's function statics. Here's a mechanism for giving a function private variables with both lexical scoping and a static lifetime. If you do want to create something like C's static variables, just enclose the whole function in an extra block, and put the static variable outside the function but in the block.</source>
          <target state="translated">Это означает,что вы можете передавать или сохранять ссылки на лексические переменные,в то время как возврат указателя на C auto является серьезной ошибкой.Это также дает нам возможность симулировать статику функций в Си.Вот механизм,дающий функции приватные переменные как с лексическим охватом,так и со статическим временем жизни.Если вы действительно хотите создать что-то вроде статических переменных Си,просто заключите всю функцию в дополнительный блок и поместите статическую переменную вне функции,но в блок.</target>
        </trans-unit>
        <trans-unit id="ba95400be83f3e213b12cd9a0fd5821a87880672" translate="yes" xml:space="preserve">
          <source>This means that your locale settings had &lt;code&gt;LC_ALL&lt;/code&gt; set to &quot;En_US&quot; and LANG exists but has no value. Perl tried to believe you but could not. Instead, Perl gave up and fell back to the &quot;C&quot; locale, the default locale that is supposed to work no matter what. (On Windows, it first tries falling back to the system default locale.) This usually means your locale settings were wrong, they mention locales your system has never heard of, or the locale installation in your system has problems (for example, some system files are broken or missing). There are quick and temporary fixes to these problems, as well as more thorough and lasting fixes.</source>
          <target state="translated">Это означает, что в ваших настройках локали для &lt;code&gt;LC_ALL&lt;/code&gt; установлено значение &amp;laquo;En_US&amp;raquo;, а LANG существует, но не имеет значения. Перл пытался вам поверить, но не мог. Вместо этого Perl сдался и вернулся к языку &quot;C&quot;, языку по умолчанию, который должен работать несмотря ни на что. (В Windows он сначала пытается вернуться к системному языку по умолчанию.) Это обычно означает, что ваши настройки локали были неправильными, в них упоминаются локали, о которых ваша система никогда не слышала, или при установке локали в вашей системе есть проблемы (например, некоторая система файлы повреждены или отсутствуют). Существуют быстрые и временные решения этих проблем, а также более тщательные и долгосрочные исправления.</target>
        </trans-unit>
        <trans-unit id="935bdf240cb07ad1d6c61c4ce332cb8c8c8bea3f" translate="yes" xml:space="preserve">
          <source>This means the hook can be inherited like any other method, and that</source>
          <target state="translated">Это означает,что крюк может быть унаследован,как и любой другой метод,и что...</target>
        </trans-unit>
        <trans-unit id="2829080b86855df25144fdad5ccaac91d3e22b76" translate="yes" xml:space="preserve">
          <source>This means the same thing as the above &quot;=begin html&quot; ... &quot;=end html&quot; region.</source>
          <target state="translated">Это означает то же самое,что и вышеприведенное &quot;=begin html&quot; ...&quot;=завершить html&quot;.</target>
        </trans-unit>
        <trans-unit id="44c698371a2bc8c8f85a78f7834202f417a26f2b" translate="yes" xml:space="preserve">
          <source>This means you would have to be very careful of the load order:</source>
          <target state="translated">Это означает,что вы должны быть очень осторожны с заказом на погрузку:</target>
        </trans-unit>
        <trans-unit id="cff2ec52af1291aa43e3a1c0cb12356c3eeef13f" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , which expands to &lt;code&gt;void
(*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">Этот член относится к типу &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , который расширяется до &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . Если он установлен, эта функция будет вызываться из &lt;code&gt;Perl_rpeep&lt;/code&gt; , когда оптимизатор глазка обнаружит операции этого типа.</target>
        </trans-unit>
        <trans-unit id="4f15c1dce331d08d1c4dfe4e281cc0a0a4b34f0a" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt; . It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">Это сообщение довольно часто можно увидеть с DB_File в системах с &amp;laquo;жестким&amp;raquo; динамическим связыванием, таких как &lt;code&gt;AIX&lt;/code&gt; и &lt;code&gt;OS/2&lt;/code&gt; . Это ошибка &lt;code&gt;Berkeley DB&lt;/code&gt; , которая остается незамеченной, если &lt;code&gt;DB&lt;/code&gt; использует</target>
        </trans-unit>
        <trans-unit id="23eb60fb126cb22151d73766a234b7a419df8dc7" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , or on the first possibly-affected operation if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">Это сообщение выводится один раз каждый раз , когда плохой языковой стандарт переключается в пределах объема &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , или на первом , возможно, пораженной операции , если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; наследует плохой. Он не вызывается ни для каких операций из модуля &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f1e56024310d1748ef48e25b309befac60c3c39" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">Это сообщение подавляется (если оно не стало фатальным), если оно не имеет значения для результатов поиска, является ли кодовая точка Unicode или нет. Например, свойство &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; может соответствовать только 22 символам &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , поэтому, очевидно, все другие кодовые точки, Unicode или нет, не будут соответствовать ему. (И &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; будет соответствовать каждой кодовой точке, кроме этих 22.)</target>
        </trans-unit>
        <trans-unit id="7bb0745c94a8675163fb7cf1b6b4c0dfe9dfc2a4" translate="yes" xml:space="preserve">
          <source>This method (by having it return the name of a language-tag that has an existing language class) can be used for making sure that &lt;code&gt;get_handle&lt;/code&gt; will always manage to construct a language handle (assuming your language classes are in an appropriate @INC directory). Or you can use the next method:</source>
          <target state="translated">Этот метод (возвращая имя языкового тега, имеющего существующий языковой класс) можно использовать для проверки того, что &lt;code&gt;get_handle&lt;/code&gt; всегда сможет создать дескриптор языка (при условии, что ваши языковые классы находятся в соответствующем каталоге @INC) . Или вы можете использовать следующий метод:</target>
        </trans-unit>
        <trans-unit id="43b19e8a9632f033ee0217cf824970a6266507f4" translate="yes" xml:space="preserve">
          <source>This method &lt;b&gt;only&lt;/b&gt; recurses into hashes that are referenced by another hash. Thus a Hash of Hashes (HoH) will all be restricted, but a Hash of Arrays of Hashes (HoAoH) will only have the top hash restricted.</source>
          <target state="translated">Этот метод рекурсивно преобразуется &lt;b&gt;только&lt;/b&gt; в хеши, на которые ссылается другой хеш. Таким образом, все хэши хешей (HoH) будут ограничены, а хеши массивов хешей (HoAoH) будут ограничены только верхним хешем.</target>
        </trans-unit>
        <trans-unit id="a9adaf0f299fbd1e9f3a618dc3103eaac097e023" translate="yes" xml:space="preserve">
          <source>This method allows you declare all subsequent tests as TODO tests, up until the &lt;code&gt;todo_end&lt;/code&gt; method has been called.</source>
          <target state="translated">Этот метод позволяет вам объявить все последующие тесты как тесты TODO до тех пор, пока не будет &lt;code&gt;todo_end&lt;/code&gt; метод todo_end .</target>
        </trans-unit>
        <trans-unit id="730814a3d72347a8011b0b6b58b63dc1cbc1cb75" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when compressing.</source>
          <target state="translated">Этот метод всегда возвращает &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; при сжатии.</target>
        </trans-unit>
        <trans-unit id="6afef23ef81e88b5f94163ca10a11464e31ea48f" translate="yes" xml:space="preserve">
          <source>This method appends the given text or parse-tree to the current parse-tree. If the last item on the parse-tree is text and the argument is also text, then the text is appended to the last item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">Этот метод добавляет заданный текст или дерево разбора к текущему дереву разбора.Если последним элементом в дереве разбора является текст,а аргументом-также текст,то текст добавляется к последнему элементу (не добавляется как отдельная строка).В противном случае аргумент добавляется как новая строка или дерево разбора</target>
        </trans-unit>
        <trans-unit id="ea9b54b0560b3ed55c0cd396158f6152d9f5e42b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt; , but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">Этот метод ведет себя так &lt;code&gt;accept_targets_as_text&lt;/code&gt; , как accept_targets_as_text , но также отмечает область как область, содержимое которой должно передаваться буквально, без экранирования HTML-сущности или переноса в элемент &lt;code&gt;div&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="366bdf6f4cd4331574bef09ad73e8fc1d9c85442" translate="yes" xml:space="preserve">
          <source>This method can also be called as a</source>
          <target state="translated">Этот метод также можно назвать</target>
        </trans-unit>
        <trans-unit id="715fe7c265d92fe58819e384722c797c228ac231" translate="yes" xml:space="preserve">
          <source>This method can be used to (re)parse a (new) hyperlink, i.e. the contents of a &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; sequence. The result is stored in the current object. Warnings are stored in the &lt;b&gt;warnings&lt;/b&gt; property. E.g. sections like &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; are deprecated, as they do not point to Perl documents. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; is wrong as well, the manpage section can simply be dropped.</source>
          <target state="translated">Этот метод можно использовать для (повторного) синтаксического анализа (новой) гиперссылки, то есть содержимого последовательности &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; . Результат сохраняется в текущем объекте. Предупреждения хранятся в свойстве &lt;b&gt;warnings&lt;/b&gt; . Например, такие разделы, как &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; , устарели, поскольку они не указывают на документы Perl. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; тоже неверно, раздел man-страницы можно просто удалить.</target>
        </trans-unit>
        <trans-unit id="f1f35fb67080240d23f2eac011ae3670c8591965" translate="yes" xml:space="preserve">
          <source>This method can be used to attempt to recover good data from a compressed data stream that is partially corrupt. It scans &lt;code&gt;$input&lt;/code&gt; until it reaches either a</source>
          <target state="translated">Этот метод можно использовать, чтобы попытаться восстановить хорошие данные из сжатого потока данных, который частично поврежден. Он сканирует &lt;code&gt;$input&lt;/code&gt; пока не достигнет</target>
        </trans-unit>
        <trans-unit id="90ddd0ac6657449db229f14a03b758f7e485db52" translate="yes" xml:space="preserve">
          <source>This method can be used to wait for a transfer to complete between a passive server and a non-passive server. The method should be called on the passive server with the &lt;code&gt;Net::FTP&lt;/code&gt; object for the non-passive server passed as an argument.</source>
          <target state="translated">Этот метод можно использовать для ожидания завершения передачи между пассивным и непассивным сервером. Метод должен быть вызван на пассивном сервере, &lt;code&gt;Net::FTP&lt;/code&gt; объект Net :: FTP для непассивного сервера в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="ef82cc525f992d173e6595484cbecf34f240de62" translate="yes" xml:space="preserve">
          <source>This method checks for the existence of a specific key/value pair. If the pair exists, the cursor is left pointing to the pair and the method returns 0. Otherwise the method returns a non-zero value.</source>
          <target state="translated">Этот метод проверяет наличие определенной пары ключ/значение.Если пара существует,курсор остается на пару и метод возвращает 0.В противном случае метод возвращает ненулевое значение.</target>
        </trans-unit>
        <trans-unit id="082e97019fd385ec77aeb826bdad258d6d406921" translate="yes" xml:space="preserve">
          <source>This method deletes a specific key/value pair. It returns 0 if they exist and have been deleted successfully. Otherwise the method returns a non-zero value.</source>
          <target state="translated">Этот метод удаляет определенную пару ключ/значение.Он возвращает 0,если они существуют и были успешно удалены.В противном случае метод возвращает ненулевое значение.</target>
        </trans-unit>
        <trans-unit id="f513febb40f0a4c26460c04fb3a509ae4b426b01" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt; .</source>
          <target state="translated">Этот метод десериализует заданную строку JSON и результат. Если источник был в кодировке UTF-8, строка должна быть декодирована перед вызовом &lt;code&gt;load_json_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f96e67c98ce1447f296a5e844322e09f6dd910a8" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt; .</source>
          <target state="translated">Этот метод десериализует заданную строку YAML и возвращает в ней первый документ. (Файлы метаданных CPAN всегда должны содержать только один документ.) Если исходный код был закодирован в UTF-8, перед вызовом &lt;code&gt;load_yaml_string&lt;/code&gt; строку необходимо декодировать .</target>
        </trans-unit>
        <trans-unit id="34a514b4f19b9ac86f842d6404bf8e89dd74c0e2" translate="yes" xml:space="preserve">
          <source>This method does</source>
          <target state="translated">Этот метод делает</target>
        </trans-unit>
        <trans-unit id="54d18cd2ca68c9792cf6431fafe4da3a6cbdd8dc" translate="yes" xml:space="preserve">
          <source>This method does not implement a complete YAML dumper, being limited to dump a hash with values which are strings, undef's or nested hashes and arrays of strings. No quoting/escaping is done.</source>
          <target state="translated">Этот метод не реализует полный YAML дампер,ограничиваясь дампом хэша со значениями,которые являются строками,undef's или вложенными хэшами и массивами строк.Никаких кавычек/выбросов не производится.</target>
        </trans-unit>
        <trans-unit id="bf3b86793c28703b24d0cd86f4cd0ebea05c47fa" translate="yes" xml:space="preserve">
          <source>This method fully supports the use of the variable &lt;code&gt;$/&lt;/code&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) to determine what constitutes an end of line. Paragraph mode, record mode and file slurp mode are all supported.</source>
          <target state="translated">Этот метод полностью поддерживает использование переменной &lt;code&gt;$/&lt;/code&gt; (или &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; или &lt;code&gt;$RS&lt;/code&gt; когда используется &lt;code&gt;English&lt;/code&gt; язык) для определения того, что составляет конец строки. Поддерживаются режим абзаца, режим записи и режим пролистывания файлов.</target>
        </trans-unit>
        <trans-unit id="7abd31a42f5dc198423e7bfa2a6a7d4410aa53a3" translate="yes" xml:space="preserve">
          <source>This method gets faster the more sparse the bit vector is. (Courtesy of Tim Bunce and Winfried Koenig.)</source>
          <target state="translated">Этот метод становится быстрее,чем разрежен битовый вектор.(Спасибо Тиму Бансу и Уинфриду Кёнигу.)</target>
        </trans-unit>
        <trans-unit id="5106fbdd40086fe1994d026f8235d7c19445b51f" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys() or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're carrying about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">Этот метод срабатывает во время выполнения функции keys()или каждой итерации.У него есть второй аргумент,который является последним ключом,к которому был получен доступ.Это полезно,если вы осуществляете заказ или вызов итератора из нескольких последовательностей,или на самом деле нигде не храните вещи в хэше.</target>
        </trans-unit>
        <trans-unit id="2b32b03e834069c38c85e8165c3d6300a8ef2db8" translate="yes" xml:space="preserve">
          <source>This method gets/sets the children of the top node in the parse-tree. If no arguments are given, it returns the list (array) of children (each of which should be either a string or a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt;. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">Этот метод получает / устанавливает дочерние элементы верхнего узла в дереве синтаксического анализа. Если аргументы не указаны, он возвращает список (массив) дочерних элементов (каждый из которых должен быть либо строкой, либо &lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; . В противном случае, если аргументы заданы, они рассматриваются как новый список дочерних элементов для верхнего узел.</target>
        </trans-unit>
        <trans-unit id="b46a6ad296dd61f630d70737a71545994d0ce79d" translate="yes" xml:space="preserve">
          <source>This method gets/sets the top node of the parse-tree. If no arguments are given, it returns the topmost node in the tree (the root), which is also a &lt;b&gt;Pod::ParseTree&lt;/b&gt;. If it is given a single argument that is a reference, then the reference is assumed to a parse-tree and becomes the new top node. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">Этот метод получает / устанавливает верхний узел дерева синтаксического анализа. Если аргументы не указаны, он возвращает самый верхний узел в дереве (корень), который также является &lt;b&gt;Pod :: ParseTree&lt;/b&gt; . Если ему дается единственный аргумент, который является ссылкой, тогда ссылка предполагается на дерево синтаксического анализа и становится новым верхним узлом. В противном случае, если указаны аргументы, они рассматриваются как новый список дочерних элементов для верхнего узла.</target>
        </trans-unit>
        <trans-unit id="59076bbdbb5b4ddcc87d5e0b9c9e7bca5153b33d" translate="yes" xml:space="preserve">
          <source>This method handles the body of text that is marked up to be code. You might for instance override this to plug in a syntax highlighter. The base implementation just escapes the text.</source>
          <target state="translated">Этот метод обрабатывает тело текста,который размечается как код.Вы можете,например,переопределить это,чтобы подключить синтаксический маркер.Базовая реализация просто ускользает от текста.</target>
        </trans-unit>
        <trans-unit id="7f7d4c41920dd2575a0ef9de52d6dfd4b083b3af" translate="yes" xml:space="preserve">
          <source>This method handles the body of text within any element: it's the body of a paragraph, or everything between a &quot;=begin&quot; tag and the corresponding &quot;=end&quot; tag, or the text within an L entity, etc. You would want to override this if you are adding a custom element type that does more than just display formatted text. Perhaps adding a way to generate HTML tables from an extended version of POD.</source>
          <target state="translated">Этот метод обрабатывает тело текста внутри любого элемента:это тело абзаца,или все между тегом &quot;=begin&quot; и соответствующим тегом &quot;=end&quot;,или текст внутри сущности L,и т.д.Вы захотите переопределить это,если добавляете пользовательский тип элемента,который делает больше,чем просто вывод форматированного текста.Возможно,добавление способа генерации HTML таблиц из расширенной версии POD.</target>
        </trans-unit>
        <trans-unit id="0712996dc1b8ffb7aa50e7d069711d277d763268" translate="yes" xml:space="preserve">
          <source>This method has exactly the same effect as</source>
          <target state="translated">Этот метод имеет точно такой же эффект,как и</target>
        </trans-unit>
        <trans-unit id="065b0a15e17527d35032fe1e6828915d084d4b0d" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt; .</source>
          <target state="translated">Этот метод является синонимом &lt;code&gt;actual_passed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a66a71f2968f9c82df6782744ec138e9c54cf9" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used as a string.</source>
          <target state="translated">Этот метод вызывается автоматически при использовании объекта в качестве строки.</target>
        </trans-unit>
        <trans-unit id="a819fa8543b1fdd50426768934ef9b1f1b767855" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used in string context.</source>
          <target state="translated">Этот метод вызывается автоматически при использовании объекта в контексте строки.</target>
        </trans-unit>
        <trans-unit id="ac138a74ffc74278892e510893352f2e36c5d5e7" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;response&lt;/code&gt; as a method with one argument. It should return an array of 2 values, the 3-digit status code and a flag which is true when this is part of a multi-line response and this line is not the last.</source>
          <target state="translated">Этот метод вызывается &lt;code&gt;response&lt;/code&gt; как метод с одним аргументом. Он должен возвращать массив из 2 значений, 3-значного кода состояния и флага, который является истинным, когда это часть многострочного ответа, а эта строка не последняя.</target>
        </trans-unit>
        <trans-unit id="caa6afaab7cedc695e3c6f58f69b2ab8274688f3" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt; , or a subclass thereof.</source>
          <target state="translated">Этот метод вызывается во время построения &lt;code&gt;IO::Pipe::new&lt;/code&gt; для вновь созданного объекта &lt;code&gt;IO::Pipe&lt;/code&gt; . Он возвращает массив из двух объектов, включенных в &lt;code&gt;IO::Pipe::End&lt;/code&gt; или его подкласс.</target>
        </trans-unit>
        <trans-unit id="5287b2e5ba98e503e67859e5f2d01d79cbfa6c5e" translate="yes" xml:space="preserve">
          <source>This method is called to print debugging information. TEXT is the text being sent. The method should return the text to be printed.</source>
          <target state="translated">Этот метод вызывается для печати отладочной информации.TEXT-это текст,который отправляется.Метод должен возвращать текст для печати.</target>
        </trans-unit>
        <trans-unit id="f167b29ab442c8210c9356c7997b2fd2247776b0" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</source>
          <target state="translated">Этот метод вызывается, когда дескриптор считывается через &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6629dc17ac853da211380c0f404bf1fca26aed1" translate="yes" xml:space="preserve">
          <source>This method is called with two arguments: the relevant package name, and a reference to a variable or subroutine for which package-defined attributes are desired. The expected return value is a list of associated attributes. This list may be empty.</source>
          <target state="translated">Этот метод вызывается с двумя аргументами:соответствующее имя пакета и ссылка на переменную или подпрограмму,для которой нужны атрибуты пакета.Ожидаемое возвращаемое значение-это список соответствующих атрибутов.Этот список может быть пустым.</target>
        </trans-unit>
        <trans-unit id="45320fc2f3e3a4eca2479ec9f217dfab3504ebe5" translate="yes" xml:space="preserve">
          <source>This method is called with two fixed arguments, followed by the list of attributes from the relevant declaration. The two fixed arguments are the relevant package name and a reference to the declared subroutine or variable. The expected return value is a list of attributes which were not recognized by this handler. Note that this allows for a derived class to delegate a call to its base class, and then only examine the attributes which the base class didn't already handle for it.</source>
          <target state="translated">Этот метод вызывается с двумя фиксированными аргументами,за которыми следует список атрибутов из соответствующей декларации.Два фиксированных аргумента-это имя соответствующего пакета и ссылка на объявленную подпрограмму или переменную.Ожидаемое возвращаемое значение-это список атрибутов,которые не были распознаны данным обработчиком.Обратите внимание,что это позволяет производному классу делегировать вызов своему базовому классу,а затем рассматривать только те атрибуты,с которыми базовый класс еще не работал.</target>
        </trans-unit>
        <trans-unit id="6abefc963006076df05b84dfc6d2811ce9f6040b" translate="yes" xml:space="preserve">
          <source>This method is deprecated if running under Perl 5.8, and is no longer present if running under Perl 5.9</source>
          <target state="translated">Этот метод является устаревшим,если он работает на Perl 5.8,и больше не применяется,если он работает на Perl 5.9.</target>
        </trans-unit>
        <trans-unit id="5c663722b6a1ec14ffe0820b635acf25e140b2e8" translate="yes" xml:space="preserve">
          <source>This method is invoked after gathering up all the lines in a paragraph and after determining the cutting state of the paragraph, but before trying to further parse or interpret them. After &lt;b&gt;preprocess_paragraph()&lt;/b&gt; returns, the current cutting state (which is returned by &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ) is examined. If it evaluates to true then input text (including the given &lt;code&gt;$text&lt;/code&gt; ) is cut (not processed) until the next POD directive is encountered.</source>
          <target state="translated">Этот метод вызывается после сбора всех строк в абзаце и после определения состояния обрезки абзаца, но перед попыткой их дальнейшего анализа или интерпретации. После возврата &lt;b&gt;preprocess_paragraph ()&lt;/b&gt; проверяется текущее состояние резки (которое возвращается &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ). Если оно истинно, то входной текст (включая данный &lt;code&gt;$text&lt;/code&gt; ) вырезается (не обрабатывается) до тех пор, пока не встретится следующая директива POD.</target>
        </trans-unit>
        <trans-unit id="10379a9139313cde9e23b44b9d3191ab35fe83cb" translate="yes" xml:space="preserve">
          <source>This method is invoked at the beginning of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document initialization.</source>
          <target state="translated">Этот метод вызывается в начале обработки для каждого документа POD,который встречается на входе.Подклассы должны переопределять этот метод для выполнения инициализации каждого документа.</target>
        </trans-unit>
        <trans-unit id="413604196761a8f6291ef93425b6ff6c449d0805" translate="yes" xml:space="preserve">
          <source>This method is invoked at the end of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document finalization.</source>
          <target state="translated">Этот метод вызывается в конце обработки для каждого документа POD,который встречается на входе.Подклассы должны переопределять этот метод для выполнения любой доработки каждого документа.</target>
        </trans-unit>
        <trans-unit id="c39c6b3f4be6d469d8afebc0b47e837d73cf3993" translate="yes" xml:space="preserve">
          <source>This method is invoked by &lt;b&gt;parse_from_filehandle()&lt;/b&gt; immediately</source>
          <target state="translated">Этот метод немедленно вызывается &lt;b&gt;функцией parse_from_filehandle ()&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6747dae8cbf5615de1cf353ad79e0a07cee8a900" translate="yes" xml:space="preserve">
          <source>This method is less often useful. It assumes that the string stored in the struct is null-terminated, and disregards the length information.</source>
          <target state="translated">Этот метод менее полезен.Он предполагает,что строка,хранящаяся в структуре,является ноль-терминированной,и не учитывает информацию о ее длине.</target>
        </trans-unit>
        <trans-unit id="c79ad557d9b0fbcd0831200e697c308d8d3ffa30" translate="yes" xml:space="preserve">
          <source>This method is non-blocking, and will return only as many items as are available to fulfill the request:</source>
          <target state="translated">Этот метод является неблокирующим и возвращает только то количество элементов,которое доступно для выполнения запроса:</target>
        </trans-unit>
        <trans-unit id="6fb78fde591144d3983cff09b4ae34dcd5c3fb9d" translate="yes" xml:space="preserve">
          <source>This method is not present if running under Perl 5.9, as the PMROOT information is no longer stored directly in the hash.</source>
          <target state="translated">Этот метод не применяется,если он работает по стандарту Perl 5.9,так как информация PMROOT больше не хранится непосредственно в хэше.</target>
        </trans-unit>
        <trans-unit id="f1244eb4316f69131f6963e6774a849bda60f19c" translate="yes" xml:space="preserve">
          <source>This method is of no use for general Perl threads programming. Its intent is to provide other (XS-based) thread modules with the capability to access, and possibly manipulate, the underlying thread structure associated with a Perl thread.</source>
          <target state="translated">Этот метод бесполезен для общего программирования Perl-потоков.Его целью является предоставление другим (основанным на XS)потоковым модулям возможности доступа и,возможно,манипулирования базовой структурой потока,связанной с потоком Perl.</target>
        </trans-unit>
        <trans-unit id="21dc78ea221a1896dd75e4ea5a218dfbc7c4df02" translate="yes" xml:space="preserve">
          <source>This method is protected and not intended to be called outside of MakeMaker.</source>
          <target state="translated">Этот метод защищен и не предназначен для вызова за пределами MakeMaker.</target>
        </trans-unit>
        <trans-unit id="e5a20cfe7a533839e6244ee0ceb882a48e01de5e" translate="yes" xml:space="preserve">
          <source>This method is similar to share() but allows you to explicitly name the package that symbols should be shared from. The symbol names (including type characters) are supplied as an array reference.</source>
          <target state="translated">Этот метод похож на share(),но позволяет явно указать имя пакета,из которого должны делиться символы.Имена символов (включая символы типа)поставляются в качестве ссылки на массив.</target>
        </trans-unit>
        <trans-unit id="f5a57d1e0f15bd04707c86271032904c47bf2e9b" translate="yes" xml:space="preserve">
          <source>This method is the one you usually want. It constructs a string using the length and offset information in the struct: for ordinary scalars it will return the string that you'd see from Perl, even if it contains null characters.</source>
          <target state="translated">Этот метод-тот,который вы обычно хотите.Он создает строку,используя информацию о длине и смещении в структуре:для обычных скаляров он вернет строку,которую вы увидите из Perl,даже если она содержит нулевые символы.</target>
        </trans-unit>
        <trans-unit id="01115bf69ddf4deb1227d201ea74e47486095d25" translate="yes" xml:space="preserve">
          <source>This method is triggered when a tied hash is about to go out of scope. You don't really need it unless you're trying to add debugging or have auxiliary state to clean up. Here's a very simple function:</source>
          <target state="translated">Этот метод срабатывает,когда связанный хэш вот-вот выйдет из-под контроля.На самом деле он вам не нужен,если только вы не пытаетесь добавить отладку или иметь вспомогательное состояние для очистки.Вот очень простая функция:</target>
        </trans-unit>
        <trans-unit id="2987f28dec8ef9effc2010b2cf05de3e78ff66c2" translate="yes" xml:space="preserve">
          <source>This method is triggered when the user uses the exists() function on a particular hash. In our example, we'll look at the &lt;code&gt;{LIST}&lt;/code&gt; hash element for this:</source>
          <target state="translated">Этот метод запускается, когда пользователь использует функцию exists () для определенного хэша. В нашем примере для этого мы рассмотрим хэш-элемент &lt;code&gt;{LIST}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="642b5a68b22f43aa4631e9ecbebcec5f49cf6aa8" translate="yes" xml:space="preserve">
          <source>This method is triggered when the whole hash is to be cleared, usually by assigning the empty list to it.</source>
          <target state="translated">Этот метод срабатывает,когда нужно очистить весь хэш,обычно присваивая ему пустой список.</target>
        </trans-unit>
        <trans-unit id="b7c5e76fa8c5d820b269407c2691745bfe513299" translate="yes" xml:space="preserve">
          <source>This method is triggered when we remove an element from the hash, typically by using the delete() function. Again, we'll be careful to check whether they really want to clobber files.</source>
          <target state="translated">Этот метод срабатывает,когда мы удаляем элемент из хэша,обычно с помощью функции delete().Опять же,мы будем внимательны,чтобы проверить,действительно ли они хотят засорять файлы.</target>
        </trans-unit>
        <trans-unit id="d44b267a60e501cab8cef2efaa122beb61916cef" translate="yes" xml:space="preserve">
          <source>This method is used to add to the currently selected sections and subsections of POD documentation that are to be printed and/or processed. See &amp;lt;select()&amp;gt; for replacing the currently selected sections.</source>
          <target state="translated">Этот метод используется для добавления к текущим выбранным разделам и подразделам документации POD, которые должны быть распечатаны и / или обработаны. См. &amp;lt;Select ()&amp;gt; для замены текущих выбранных разделов.</target>
        </trans-unit>
        <trans-unit id="79298df7a94b5d243fe4caa12d96cacff3087b81" translate="yes" xml:space="preserve">
          <source>This method is used to determine if the block of text given in &lt;code&gt;$paragraph&lt;/code&gt; falls within the currently selected set of POD sections and subsections to be printed or processed. This method is also responsible for keeping track of the current input section and subsections. It is assumed that &lt;code&gt;$paragraph&lt;/code&gt; is the most recently read (but not yet processed) input paragraph.</source>
          <target state="translated">Этот метод используется для определения того, попадает ли блок текста, указанный в &lt;code&gt;$paragraph&lt;/code&gt; в текущий выбранный набор разделов и подразделов POD для печати или обработки. Этот метод также отвечает за отслеживание текущего раздела и подразделов ввода. Предполагается, что &lt;code&gt;$paragraph&lt;/code&gt; - это последний прочитанный (но еще не обработанный) входной абзац.</target>
        </trans-unit>
        <trans-unit id="bbbe3e628f204e314a28a9c25f8f03f14e0f6464" translate="yes" xml:space="preserve">
          <source>This method is used to select the particular sections and subsections of POD documentation that are to be printed and/or processed. The existing set of selected sections is</source>
          <target state="translated">Этот метод используется для выбора отдельных разделов и подразделов документации POD,которые должны быть распечатаны и/или обработаны.Существующий набор выбранных разделов</target>
        </trans-unit>
        <trans-unit id="bef747284ac03954e21b22973b38b9cf4e4e7f3d" translate="yes" xml:space="preserve">
          <source>This method is useful if you need to perform your own interpolation of interior sequences and can't rely upon &lt;b&gt;interpolate&lt;/b&gt; to expand them in simple bottom-up order.</source>
          <target state="translated">Этот метод полезен, если вам нужно выполнить собственную интерполяцию внутренних последовательностей и вы не можете полагаться на &lt;b&gt;интерполяцию,&lt;/b&gt; чтобы развернуть их в простом порядке снизу вверх.</target>
        </trans-unit>
        <trans-unit id="49a58cbb089494a695c730a567717e544a3c0dd9" translate="yes" xml:space="preserve">
          <source>This method isn't terribly useful since modules which share the same Test::Builder object might get exported to different packages and only the last one will be honored.</source>
          <target state="translated">Этот метод не очень полезен,так как модули,которые используют один и тот же объект Test::Builder,могут быть экспортированы в разные пакеты,и только последний из них будет удостоен чести.</target>
        </trans-unit>
        <trans-unit id="6554ac6945a5df20c377de63d8de44dbce743773" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;../perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово метода задокументировано &lt;a href=&quot;../perlobj#Destructors&quot;&gt;в разделе Деструкторы в perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e359554a4d991920df0d798d38cb8b6bf47ec29" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">Это ключевое слово метода задокументировано &lt;a href=&quot;perlobj#Destructors&quot;&gt;в разделе Деструкторы в perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c21da25dd954f9e366c6cef85d1af33e75fddf8f" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually failed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов на самом деле были неудачными,независимо от того,была ли найдена директива TODO или нет.</target>
        </trans-unit>
        <trans-unit id="a2b6c5d7eeef2dcb58cd2d68cdfe40caf21f8820" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed but were declared as &quot;TODO&quot; tests.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов на самом деле прошли,но были объявлены как &quot;TODO&quot; тесты.</target>
        </trans-unit>
        <trans-unit id="08a5db262046c866f7d810a5b71d8ec989df7d80" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов фактически прошли,независимо от того,была ли найдена директива TODO или нет.</target>
        </trans-unit>
        <trans-unit id="7562f7ac693aec459c0c9b344acb705680f1f7f7" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests failed. If a test passed but had a TODO directive, it will &lt;b&gt;NOT&lt;/b&gt; be counted as a failed test.</source>
          <target state="translated">Этот метод позволяет узнать, какие (или сколько) тестов не прошли. Если тест прошел, но имел директиву TODO, он &lt;b&gt;НЕ&lt;/b&gt; будет считаться неудачным.</target>
        </trans-unit>
        <trans-unit id="b1956c9e443594eef5939e2522e06e528138f73a" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had SKIP directives.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов имели SKIP директивы.</target>
        </trans-unit>
        <trans-unit id="d552dee0411d16f26c2347ec73027455bcd691a0" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had TODO directives.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов имели TODO директивы.</target>
        </trans-unit>
        <trans-unit id="62d19246ed330e746e1fe150131f18c164bb14d2" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests passed. If a test failed but had a TODO directive, it will be counted as a passed test.</source>
          <target state="translated">Этот метод позволяет узнать,какие (или сколько)тестов вы прошли.Если тест не удался,но имел директиву TODO,то он будет засчитан как пройденный тест.</target>
        </trans-unit>
        <trans-unit id="cc582265ee4f696fc9e8e3fad6147cf5023780c3" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a block of verbatim text is encountered. It is passed the following parameters:</source>
          <target state="translated">Этот метод может быть переопределен подклассами для принятия соответствующих мер при обнаружении блока дословного текста.Ему передаются следующие параметры:</target>
        </trans-unit>
        <trans-unit id="2ef97fe79f3074bd51a79fd7f9a20c0d8326e891" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a normal block of POD text is encountered (although the base class method will usually do what you want). It is passed the following parameters:</source>
          <target state="translated">Этот метод может быть переопределен подклассами,чтобы предпринять соответствующее действие,когда встречается обычный блок POD текста (хотя метод базового класса обычно делает то,что вы хотите).Ему передаются следующие параметры:</target>
        </trans-unit>
        <trans-unit id="f193021bd1e2803e8135ddd336589fd3fdb1031b" translate="yes" xml:space="preserve">
          <source>This method merely runs the parser and parses all of the TAP.</source>
          <target state="translated">Этот метод просто запускает синтаксический анализатор и анализирует все TAP.</target>
        </trans-unit>
        <trans-unit id="d5b810a222612f34da5ba09951a3a157e593734d" translate="yes" xml:space="preserve">
          <source>This method only works on Perl v5.9.4 or later.</source>
          <target state="translated">Этот метод работает только на Perl v5.9.4 или более поздней версии.</target>
        </trans-unit>
        <trans-unit id="3eb04a70399efe3a3bc64926ce7a5f07e9940d0a" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the interior-sequence. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">Этот метод выполняет любую необходимую очистку для внутренней последовательности. Если вы переопределите этот метод, &lt;b&gt;обязательно&lt;/b&gt; вызовите родительский метод из вашего собственного метода, в противном случае</target>
        </trans-unit>
        <trans-unit id="714dcc55d92cf752f4b4184074298408c801245b" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the parse-tree. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">Этот метод выполняет любую необходимую очистку дерева синтаксического анализа. Если вы переопределите этот метод, &lt;b&gt;обязательно&lt;/b&gt; вызовите родительский метод из вашего собственного метода, в противном случае</target>
        </trans-unit>
        <trans-unit id="094b13118759d86cdc1f33cdf2b7a72869820716" translate="yes" xml:space="preserve">
          <source>This method performs any necessary object initialization. It takes no arguments (other than the object instance of course, which is typically copied to a local variable named &lt;code&gt;$self&lt;/code&gt; ). If subclasses override this method then they</source>
          <target state="translated">Этот метод выполняет любую необходимую инициализацию объекта. Он не принимает никаких аргументов (кроме экземпляра объекта, который обычно копируется в локальную переменную с именем &lt;code&gt;$self&lt;/code&gt; ). Если подклассы переопределяют этот метод, они</target>
        </trans-unit>
        <trans-unit id="1b4637e9cdcc1db5f14b9635de49858c878c102c" translate="yes" xml:space="preserve">
          <source>This method prepends the given text or parse-tree to the current parse-tree. If the first item on the parse-tree is text and the argument is also text, then the text is prepended to the first item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">Этот метод преобразует заданный текст или дерево разбора к текущему дереву разбора.Если первым элементом в дереве разбора является текст,а аргументом также является текст,то текст префиксовывается к первому элементу (не добавляется как отдельная строка).В противном случае аргумент добавляется как новая строка или дерево разбора</target>
        </trans-unit>
        <trans-unit id="843c78718fa264afa1695d6f64c3d712c49fd84a" translate="yes" xml:space="preserve">
          <source>This method prints the test as a string. It will probably be similar, but not necessarily identical, to the original test line. Directives are capitalized, some whitespace may be trimmed and a test number will be added if it was not present in the original line. If you need the original text of the test line, use the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">Этот метод печатает тест в виде строки. Вероятно, она будет похожа, но не обязательно идентична исходной тестовой строке. Директивы пишутся с заглавной буквы, некоторые пробелы могут быть обрезаны, и будет добавлен тестовый номер, если его не было в исходной строке. Если вам нужен исходный текст тестовой строки, используйте &lt;code&gt;raw&lt;/code&gt; метод.</target>
        </trans-unit>
        <trans-unit id="c461db5fa5d2d546751540785c1da918e27ef9ee" translate="yes" xml:space="preserve">
          <source>This method processes an XS file and sends output to a C file. The method may be called as a function (this is the legacy interface) and will then use a singleton as invocant.</source>
          <target state="translated">Этот метод обрабатывает XS-файл и отправляет вывод в C-файл.Метод может быть вызван как функция (это наследственный интерфейс)и затем будет использовать одиночную кнопку в качестве инвоканта.</target>
        </trans-unit>
        <trans-unit id="443a8a4abd0996a8f53eec3622235de842b5198f" translate="yes" xml:space="preserve">
          <source>This method reconstructs the encoding object if necessary. If you need to store the state during encoding, this is where you clone your object.</source>
          <target state="translated">Этот метод при необходимости восстанавливает объект кодирования.Если вам нужно сохранить состояние во время кодирования,то именно здесь вы клонируете свой объект.</target>
        </trans-unit>
        <trans-unit id="4be2e04731b97866ee5b4ac0d1bde14c1df759bd" translate="yes" xml:space="preserve">
          <source>This method returns 0 if the object can be modified with the given operation, or 1 if not.</source>
          <target state="translated">Этот метод возвращает 0,если объект можно модифицировать данной операцией,или 1,если нет.</target>
        </trans-unit>
        <trans-unit id="3441f0af9f59d5dc45617aeb66969ab6a0963d73" translate="yes" xml:space="preserve">
          <source>This method returns TRUE if the GP field of the GV is NULL.</source>
          <target state="translated">Этот метод возвращает TRUE,если поле GP в GV равно NULL.</target>
        </trans-unit>
        <trans-unit id="d7b58df6d5a2c18121bb505720d0e804af99a7dd" translate="yes" xml:space="preserve">
          <source>This method returns a list of the currently active section headings and subheadings in the document being parsed. The list of headings returned corresponds to the most recently parsed paragraph of the input.</source>
          <target state="translated">Этот метод возвращает список текущих активных заголовков и подзаголовков разделов в анализируемом документе.Возвращаемый список заголовков соответствует последнему проанализированному параграфу входного текста.</target>
        </trans-unit>
        <trans-unit id="dfd6da7f680f7708aaaafbe88d4fbd81537fbb12" translate="yes" xml:space="preserve">
          <source>This method returns either a hash reference (in scalar context) or a list or hash references (in array context) that contains information about each of the header fields in the compressed data stream(s).</source>
          <target state="translated">Этот метод возвращает либо хэш-ссылку (в скалярном контексте),либо список или хэш-ссылку (в контексте массива),которая содержит информацию о каждом из полей заголовка в сжатом потоке данных.</target>
        </trans-unit>
        <trans-unit id="5613e8d87481a66c6331ffba3f17e879703b23af" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">Этот метод возвращает объект &lt;a href=&quot;../builder&quot;&gt;Test :: Builder,&lt;/a&gt; связанный с Your :: Class. Это не конструктор, поэтому вы можете вызывать его сколько угодно раз.</target>
        </trans-unit>
        <trans-unit id="c6ed5af13a1529fb7b65c36511f205e560c0e629" translate="yes" xml:space="preserve">
          <source>This method returns the AV specific flags. In Perl 5.9 these are now stored in with the main SV flags, so this method is no longer present.</source>
          <target state="translated">Этот метод возвращает флаги,специфичные для AV.В Perl 5.9 они теперь хранятся с основными флагами SV,поэтому этот метод больше не используется.</target>
        </trans-unit>
        <trans-unit id="230f2b0705cb9c1bd36492ae8437541d92944923" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt; th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">Этот метод возвращает байтовое смещение начала &lt;code&gt;$n&lt;/code&gt; й записи в файле. Если такой записи нет, возвращается неопределенное значение.</target>
        </trans-unit>
        <trans-unit id="cda1e7a80b8c4ff8a50d7193bfa7f2353fb0bb3a" translate="yes" xml:space="preserve">
          <source>This method returns the internal length field, which consists of the number of internal bytes, not necessarily the number of logical characters.</source>
          <target state="translated">Этот метод возвращает поле внутренней длины,состоящее из количества внутренних байтов,не обязательно из количества логических символов.</target>
        </trans-unit>
        <trans-unit id="3195470feffd08399489b4ea58a94cbd49fb15f2" translate="yes" xml:space="preserve">
          <source>This method returns the name of the glob, but if the first character of the name is a control character, then it converts it to ^X first, so that *^G would return &quot;^G&quot; rather than &quot;\cG&quot;.</source>
          <target state="translated">Этот метод возвращает имя глобуса,но если первый символ имени является управляющим,то сначала он преобразует его в ^X,так что *^G возвращает &quot;^G&quot;,а не &quot;\cG&quot;.</target>
        </trans-unit>
        <trans-unit id="d436f65e4ac4dfd0f8045b3c54271c25339bbf38" translate="yes" xml:space="preserve">
          <source>This method returns the name of the package that is the root of the compartment's namespace.</source>
          <target state="translated">Этот метод возвращает имя пакета,которое является корнем пространства имён отсека.</target>
        </trans-unit>
        <trans-unit id="b1039ff3465ca6dc27db9b5d11bc6e35d5848fc0" translate="yes" xml:space="preserve">
          <source>This method returns the number of [a certain kind of] errors encountered during processing of the XS file.</source>
          <target state="translated">Этот метод возвращает количество [определенного вида]ошибок,возникших при обработке файла XS.</target>
        </trans-unit>
        <trans-unit id="0d20c8d8462990e4c532228bf94cacc069885810" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes allocated (via malloc) for storing the string. This is 0 if the scalar does not &quot;own&quot; the string.</source>
          <target state="translated">Этот метод возвращает количество байт,выделенных (через malloc)для хранения строки.Это значение равно 0,если скаляр не &quot;владеет&quot; строкой.</target>
        </trans-unit>
        <trans-unit id="dc49b5d5eff536554a52d021b3411834001a3a6e" translate="yes" xml:space="preserve">
          <source>This method returns the results of the parsing, one result at a time. Note that it is destructive. You can't rewind and examine previous results.</source>
          <target state="translated">Этот метод возвращает результаты анализа,по одному результату за раз.Обратите внимание,что он разрушителен.Нельзя перематывать и просматривать предыдущие результаты.</target>
        </trans-unit>
        <trans-unit id="0ab9ad920897cda27f5f563bb7197ba468b33916" translate="yes" xml:space="preserve">
          <source>This method returns the textual representation of the hyperlink as above, but without markers (read only). Depending on the link type this is one of the following alternatives (the + and * denote the portions of the text that are marked up):</source>
          <target state="translated">Этот метод возвращает текстовое представление гиперссылки,как указано выше,но без маркеров (только для чтения).В зависимости от типа ссылки это одна из следующих альтернатив (+и*обозначают части текста,которые помечены):</target>
        </trans-unit>
        <trans-unit id="59c2ab7b96065dfd63ce37b4f21c2d16dce7d68c" translate="yes" xml:space="preserve">
          <source>This method returns the value of the IV as an integer. It differs from &lt;code&gt;IV&lt;/code&gt; in that it returns the correct value regardless of whether it's stored signed or unsigned.</source>
          <target state="translated">Этот метод возвращает значение IV в виде целого числа. Он отличается от &lt;code&gt;IV&lt;/code&gt; тем, что возвращает правильное значение независимо от того, хранится оно со знаком или без знака.</target>
        </trans-unit>
        <trans-unit id="1569bccb9cee6a2175f9b489178e6d0824ba382b" translate="yes" xml:space="preserve">
          <source>This method sets or returns the POD page this link points to.</source>
          <target state="translated">Этот метод устанавливает или возвращает страницу POD,на которую указывает эта ссылка.</target>
        </trans-unit>
        <trans-unit id="5626475bc6df98d403b9b1a4c6d8bd8eead196ba" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 15 for 7.5-point) that the header on each page will appear in. The header is usually just &quot;</source>
          <target state="translated">Этот метод задает размер (в полуточках,например,15 для 7,5 точки),в котором будет отображаться заголовок на каждой странице.Заголовок обычно просто &quot;</target>
        </trans-unit>
        <trans-unit id="49562bbb9cccfd05b2f9dd5f5c25626dc9296a99" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 21 for 10.5-point) that codeblocks (&quot;verbatim sections&quot;) will appear as.</source>
          <target state="translated">Этот метод задает размер (в полуточках,как 21 для 10.5 точки),которым будут отображаться кодовые блоки (&quot;дословные сечения&quot;).</target>
        </trans-unit>
        <trans-unit id="b751a506f13c7e1535b7f83c798a478f8a346484" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 26 for 13-point) that normal paragraphic text will appear in.</source>
          <target state="translated">Этот метод задает размер (в полуточках,как 26 для 13 точек),в котором будет отображаться обычный параграфный текст.</target>
        </trans-unit>
        <trans-unit id="4a47dc314786b539ecdca5143ef23b8e1941b547" translate="yes" xml:space="preserve">
          <source>This method should</source>
          <target state="translated">Этот метод должен</target>
        </trans-unit>
        <trans-unit id="a1c0bdcb0359edd01294194cece7860e3da71acb" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each</source>
          <target state="translated">Этот метод должен быть переопределен подклассами,которые желают выполнять препроцессирование любого вида для каждого из них</target>
        </trans-unit>
        <trans-unit id="4045b5b845e6b96a3e7f9e9b3149fb374504376e" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each block (paragraph) of POD documentation that appears in the input stream. The parameter &lt;code&gt;$text&lt;/code&gt; is the POD paragraph from the input file; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number for the beginning of the corresponding paragraph.</source>
          <target state="translated">Этот метод следует переопределить подклассами, которые хотят выполнять любую предварительную обработку для каждого блока (параграфа) документации POD, который появляется во входном потоке. Параметр &lt;code&gt;$text&lt;/code&gt; - это абзац POD из входного файла; а параметр &lt;code&gt;$line_num&lt;/code&gt; - это номер строки для начала соответствующего абзаца.</target>
        </trans-unit>
        <trans-unit id="517b86d5501e13cc5ca0478526d9e56418238e3c" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when a POD command paragraph (denoted by a line beginning with &quot;=&quot;) is encountered. When such a POD directive is seen in the input, this method is called and is passed:</source>
          <target state="translated">Этот метод должен быть переопределен подклассами для принятия соответствующего действия при встрече параграфа команды POD (обозначенного строкой,начинающейся со слова &quot;=&quot;).Когда на входе появляется такая директива POD,этот метод вызывается и передается:</target>
        </trans-unit>
        <trans-unit id="4057fa0aee2966d0f3fb518e4370c12ff228c00a" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when an interior sequence is encountered. An interior sequence is an embedded command within a block of text which appears as a command name (usually a single uppercase character) followed immediately by a string of text which is enclosed in angle brackets. This method is passed the sequence command &lt;code&gt;$seq_cmd&lt;/code&gt; and the corresponding text &lt;code&gt;$seq_arg&lt;/code&gt; . It is invoked by the &lt;b&gt;interpolate()&lt;/b&gt; method for each interior sequence that occurs in the string that it is passed. It should return the desired text string to be used in place of the interior sequence. The &lt;code&gt;$pod_seq&lt;/code&gt; argument is a reference to a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object which contains further information about the interior sequence. Please see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details if you need to access this additional information.</source>
          <target state="translated">Этот метод следует переопределить подклассами, чтобы предпринять соответствующие действия при обнаружении внутренней последовательности. Внутренняя последовательность - это встроенная команда в блоке текста, которая отображается как имя команды (обычно это один символ верхнего регистра), за которым сразу следует строка текста, заключенная в угловые скобки. В этот метод передается последовательность команды &lt;code&gt;$seq_cmd&lt;/code&gt; и соответствующий текст &lt;code&gt;$seq_arg&lt;/code&gt; . Он вызывается методом &lt;b&gt;interpolate ()&lt;/b&gt; для каждой внутренней последовательности, которая встречается в переданной строке. Он должен вернуть желаемую текстовую строку, которая будет использоваться вместо внутренней последовательности. &lt;code&gt;$pod_seq&lt;/code&gt; аргумент является ссылкой на &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; объект, который содержит дополнительную информацию о внутренней последовательности. Пожалуйста, смотрите &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; для получения подробной информации, если вам нужна эта дополнительная информация.</target>
        </trans-unit>
        <trans-unit id="429d3f42da5b40589bd5bfe3cdeaeea4b58f3cb7" translate="yes" xml:space="preserve">
          <source>This method takes a filename and does the following:</source>
          <target state="translated">Этот метод берет имя файла и делает следующее:</target>
        </trans-unit>
        <trans-unit id="7d455696794a1091f3f69965ce8778b043cee526" translate="yes" xml:space="preserve">
          <source>This method takes an input filehandle (which is assumed to already be opened for reading) and reads the entire input stream looking for blocks (paragraphs) of POD documentation to be processed. If no first argument is given the default input filehandle &lt;code&gt;STDIN&lt;/code&gt; is used.</source>
          <target state="translated">Этот метод принимает дескриптор входного файла (который, как предполагается, уже открыт для чтения) и считывает весь входной поток в поисках блоков (абзацев) документации POD для обработки. Если не указан первый аргумент, используется дескриптор входного файла по умолчанию &lt;code&gt;STDIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d21cbfa9655bea409751abece40beb185c2a106" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt; , that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt; . Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt; . It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">Этот метод принимает необязательный параметр &lt;code&gt;$flush_type&lt;/code&gt; , который управляет тем, как будет выполняться промывка. По умолчанию используется &lt;code&gt;$flush_type&lt;/code&gt; - &lt;code&gt;Z_FINISH&lt;/code&gt; . Другие допустимые значения для &lt;code&gt;$flush_type&lt;/code&gt; : &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; и &lt;code&gt;Z_BLOCK&lt;/code&gt; . Настоятельно рекомендуется устанавливать параметр &lt;code&gt;flush_type&lt;/code&gt; только в том случае, если вы полностью понимаете последствия того, что он делает - чрезмерное использование &lt;code&gt;flush&lt;/code&gt; может серьезно ухудшить достигнутый уровень сжатия. Подробности смотрите в документации по &lt;code&gt;zlib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a36ff48f2f3559090075d4ecd3d184fea06bced" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, it has the exact same effect as invoking &amp;lt;select()&amp;gt; with no arguments.</source>
          <target state="translated">Этот метод не принимает аргументов, он имеет тот же эффект, что и вызов &amp;lt;select ()&amp;gt; без аргументов.</target>
        </trans-unit>
        <trans-unit id="21a6dff8df6ddbca7896a9686976cc84571da4fe" translate="yes" xml:space="preserve">
          <source>This method translates all text (including any embedded interior sequences) in the given text string &lt;code&gt;$text&lt;/code&gt; and returns the interpolated result. The parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number corresponding to the beginning of &lt;code&gt;$text&lt;/code&gt; .</source>
          <target state="translated">Этот метод переводит весь текст (включая любые встроенные внутренние последовательности) в заданную текстовую строку &lt;code&gt;$text&lt;/code&gt; и возвращает интерполированный результат. Параметр &lt;code&gt;$line_num&lt;/code&gt; - это номер строки, соответствующий началу &lt;code&gt;$text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d98885f1731321cbbe841c4174d52925fb86ae4c" translate="yes" xml:space="preserve">
          <source>This method turns an arbitrary string into a valid XHTML ID attribute value. The rules enforced, following &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt;, are:</source>
          <target state="translated">Этот метод превращает произвольную строку в допустимое значение атрибута XHTML ID. Следующие &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt; следующие правила :</target>
        </trans-unit>
        <trans-unit id="5d3c6a2354f8ed5d57f49370abc6615f8bbe3512" translate="yes" xml:space="preserve">
          <source>This method used to be useful back when Test::Builder worked on Perls before 5.6 which didn't have qr//. Now its pretty useless.</source>
          <target state="translated">Этот метод был полезен еще когда Test::Builder работал на Perls до 5.6,в которых не было qr//.Теперь он довольно бесполезен.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
