<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="fad8357eef2bb53d17336573edc650a4cf157cf3" translate="yes" xml:space="preserve">
          <source>James E. Keenan &amp;lt;jkeen@verizon.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cf1bbb2770fa0d885d542ddaca96bfea96011e" translate="yes" xml:space="preserve">
          <source>James Keenan, &amp;lt;jkeenan@cpan.org&amp;gt;</source>
          <target state="translated">Джеймс Кинан, &amp;lt;jkeenan@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2c916c2a6f4627fbe67be340b96ec2857597184a" translate="yes" xml:space="preserve">
          <source>James Raspass &amp;lt;jraspass@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e4cd2d086a80816fd0c59891fecee24ad1a4c4" translate="yes" xml:space="preserve">
          <source>Jamo_Short_Name</source>
          <target state="translated">Jamo_Short_Name</target>
        </trans-unit>
        <trans-unit id="dc05d77338b63072590a6f49b15e48ec83a7bd95" translate="yes" xml:space="preserve">
          <source>Jan Dubois &amp;lt;jand@activestate.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf29f6cad3232704b33e962ef5194fad3b6817b" translate="yes" xml:space="preserve">
          <source>Japan</source>
          <target state="translated">Japan</target>
        </trans-unit>
        <trans-unit id="6ce48d285e726d9be92e6bf68e171d9553e0896e" translate="yes" xml:space="preserve">
          <source>Japanese Encodings</source>
          <target state="translated">Японские кодировки</target>
        </trans-unit>
        <trans-unit id="f0fae5d9347791c2b844b690a046bfe7552e453c" translate="yes" xml:space="preserve">
          <source>Japheth Cleaver added the bits to allow a forced install (-f).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6422bf1002562f4885ccb3e7c11949b9fc2f34" translate="yes" xml:space="preserve">
          <source>Japheth Cleaver added the bits to allow a forced install (&lt;code&gt;-f&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7b561acfebbb2aad1864ab89f7d4e5285c6e22" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi</source>
          <target state="translated">Джаркко Хиетаниеми</target>
        </trans-unit>
        <trans-unit id="a9a4e186a4a793bc3fef06e8162fa8ae0f705095" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;</source>
          <target state="translated">Яркко Хиетаниеми &amp;lt;</target>
        </trans-unit>
        <trans-unit id="13ce73395e162a5533c6ace927e40c80d2cab8fd" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;</source>
          <target state="translated">Яркко Хиетаниеми &amp;lt;jhi@iki.fi&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7adef0fede1e52584837e3b9fe09cbb854d77894" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; Bryan Logan &amp;lt;bryanlog@us.ibm.com&amp;gt; David Larson &amp;lt;larson1@us.ibm.com&amp;gt;</source>
          <target state="translated">Джаркко Хиетаниеми &amp;lt;jhi@iki.fi&amp;gt; Брайан Логан &amp;lt;bryanlog@us.ibm.com&amp;gt; Дэвид Ларсон &amp;lt;larson1@us.ibm.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="276f92ff10492dd51e70f45871039bf3b88b6a4b" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi's original</source>
          <target state="translated">Оригинал Джаркко Хиетаниеми</target>
        </trans-unit>
        <trans-unit id="04cfea13773f0ae1b7ac40ccd517f43dc7dcdad4" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, &amp;lt;jhi@hut.fi&amp;gt;</source>
          <target state="translated">Яркко Хиетаниеми, &amp;lt;jhi@hut.fi&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c6f1f3b8aba1c1fb078ca69f70f0d3a32db2b05e" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, &amp;lt;jhi@hut.fi&amp;gt;. Now maintained by Perl 5 porters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc2a5e3ff31736b8a57665e048886c573a122f3" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, conversion into libnetcfg for inclusion into Perl 5.8.</source>
          <target state="translated">Jarkko Hietaniemi,преобразование в libnetcfg для включения в Perl 5.8.</target>
        </trans-unit>
        <trans-unit id="692b885ac0ff146816113cee07c7dfe2ef0ba0a4" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi. Now maintained by perl5 porters.</source>
          <target state="translated">Джаркко Хиетаниеми.Теперь обслуживается perl5 носильщиками.</target>
        </trans-unit>
        <trans-unit id="f0bc884e41c8e0399ef072f3aad2d67eaa7fd5aa" translate="yes" xml:space="preserve">
          <source>JavaScript Traps</source>
          <target state="translated">JavaScript-ловушки</target>
        </trans-unit>
        <trans-unit id="f2ef0f46c9cd103d2be6f2673d4379b347904df1" translate="yes" xml:space="preserve">
          <source>Jean Delvare provided the following table of different common terminal emulators and their support for the various attributes and others have helped me flesh it out:</source>
          <target state="translated">Жан Дельвар предоставил следующую таблицу различных общих терминальных эмуляторов,и их поддержка различных атрибутов и других помогла мне наполнить ее содержанием:</target>
        </trans-unit>
        <trans-unit id="27f5b59f8afefe05a200ff5c9949b24e5ca9ea36" translate="yes" xml:space="preserve">
          <source>Jed</source>
          <target state="translated">Jed</target>
        </trans-unit>
        <trans-unit id="b63c65e75871d5c7820e4ea10cfd70f390f74d22" translate="yes" xml:space="preserve">
          <source>Jeff Okamoto &amp;lt;</source>
          <target state="translated">Джефф Окамото &amp;lt;</target>
        </trans-unit>
        <trans-unit id="7ec7c5d4610b8dd06ad086eed7d40f5d2aaef1a6" translate="yes" xml:space="preserve">
          <source>Jeff Okamoto, Tim Bunce, Nick Gianniotis, Steve Kelem, Gurusamy Sarathy and Larry Wall.</source>
          <target state="translated">Джефф Окамото,Тим Банс,Ник Джанниотис,Стив Келем,Гурусами Сарати и Ларри Уолл.</target>
        </trans-unit>
        <trans-unit id="2425ad3a84d8960ab9c2915a943fd7e28d7c0291" translate="yes" xml:space="preserve">
          <source>Jeremy Mates &amp;lt;jmates@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52232653f25fa8c0538602bfc7945ebf9d9b79a7" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden &amp;lt;jdhedden@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a656e0d05c4ded5764e8eee0b16063f85446f7" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden and Reini Urban provided greatly appreciated help to debug and polish &lt;code&gt;Sys::Syslog&lt;/code&gt; under Cygwin.</source>
          <target state="translated">Джерри Д. Хедден и Рейни Урбан оказали ценную помощь по отладке и полировке &lt;code&gt;Sys::Syslog&lt;/code&gt; под Cygwin.</target>
        </trans-unit>
        <trans-unit id="1a3cecc43a5465fa758b4f88b43cd646e6623b8f" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden, &amp;lt;jdhedden AT cpan DOT org&amp;gt;</source>
          <target state="translated">Джерри Д. Хедден, &amp;lt;jdhedden AT cpan DOT org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e5109d5f0b8672892d9cf43511b2568ff7ce2637" translate="yes" xml:space="preserve">
          <source>Jerry Gay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7ad312b85f19c8a09454b49798a0382227aa86" translate="yes" xml:space="preserve">
          <source>Jess Robinson &amp;lt;castaway@desert-island.me.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f1b3fc35d7e705b8692294a866fb025bdc15b4" translate="yes" xml:space="preserve">
          <source>Jim Brandt suggest and provided the initial implementation for the up-to-date and Changes features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549b2243ef15345835dfd4eb22ac64d2df0ea3a8" translate="yes" xml:space="preserve">
          <source>Jim Keenan fixed up various issues with _download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef645dbc725c293373ed9661992798b416e9b9b4" translate="yes" xml:space="preserve">
          <source>Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;, using the framework created by Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Джо Смит &amp;lt;Joe.Smith@inwap.com&amp;gt;, используя структуру, созданную Рассом Олбери &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="c865a479b23a538482933eec4ec96a06755b572a" translate="yes" xml:space="preserve">
          <source>Johan Vromans &amp;lt;jvromans@squirrel.nl&amp;gt;</source>
          <target state="translated">Йохан Вроманс &amp;lt;jvromans@squirrel.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="183447aad929b68cdb9a4bc6a0988222e172d912" translate="yes" xml:space="preserve">
          <source>Johan Vromans &amp;lt;jvromans@squirrel.nl&amp;gt; H. Merijn Brand &amp;lt;h.m.brand@xs4all.nl&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d401e67bf973d127449e78a2dab7a6e33bf82ed1" translate="yes" xml:space="preserve">
          <source>John Lightsey &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93554073e2a9ef40605d8eff344dac817dfa1a9" translate="yes" xml:space="preserve">
          <source>John Peacock &amp;lt;jpeacock@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfcbe7345fa5c91aff66147710f3cfd01971e09" translate="yes" xml:space="preserve">
          <source>Joins the separate strings of LIST into a single string with fields separated by the value of EXPR, and returns that new string. Example:</source>
          <target state="translated">Соединяет отдельные строки СПИСКА в единую строку с полями,разделенными значением EXPR,и возвращает эту новую строку.Пример:</target>
        </trans-unit>
        <trans-unit id="8701a18a17d809f2f5e1d9461286d81392c749a1" translate="yes" xml:space="preserve">
          <source>Jon Orwant</source>
          <target state="translated">Джон Оруант</target>
        </trans-unit>
        <trans-unit id="9535723b8f84ea59122230a47649084f0880997b" translate="yes" xml:space="preserve">
          <source>Jon Orwant &amp;lt;</source>
          <target state="translated">Джон Орвант &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e683318ce5a68c3c49c2481778c7d3eb5187cf39" translate="yes" xml:space="preserve">
          <source>Jonas B. Nielsen &amp;lt;jonasbn@hoarfrost.local&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b947fc83a952d44b7572b1e1134cb1af54db24" translate="yes" xml:space="preserve">
          <source>Josh Jore &amp;lt;jjore@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc19f76e720fe5e2b005501ad08de9eb7175b61" translate="yes" xml:space="preserve">
          <source>Joshua Chamas's Tie::Cache module may be useful as an expiration manager. (If you try this, let me know how it works out.)</source>
          <target state="translated">Модуль Tie::Cache Джошуа Чамаса может быть полезен в качестве менеджера по истечению срока действия.(Если вы попробуете,дайте мне знать,как это работает).</target>
        </trans-unit>
        <trans-unit id="272f944afb073e466e447521f217853887659759" translate="yes" xml:space="preserve">
          <source>Joshua ben Jore &amp;lt;jjore@cpan.org&amp;gt;</source>
          <target state="translated">Джошуа бен Джор &amp;lt;jjore@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f8f06875505d336c6444e4ca735af60cc7f95b69" translate="yes" xml:space="preserve">
          <source>Judicious JavaScript programmers should take note of the following:</source>
          <target state="translated">Внимательным JavaScript-программистам следует обратить внимание на следующее:</target>
        </trans-unit>
        <trans-unit id="829558e61eb4ee30d56d5ca3997b5726751317c0" translate="yes" xml:space="preserve">
          <source>Juerd Waalboer &amp;lt;#####@juerd.nl&amp;gt;</source>
          <target state="translated">Джурд Ваалбоер &amp;lt;##### @ juerd.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d89d24d0ba5d206a7a244711764b4287f3aa5c8f" translate="yes" xml:space="preserve">
          <source>Juerd Waalboer &amp;lt;#####@juerd.nl&amp;gt;, with the help of many Perl Monks.</source>
          <target state="translated">Juerd Waalboer &amp;lt;##### @ juerd.nl&amp;gt; с помощью многих монахов Perl.</target>
        </trans-unit>
        <trans-unit id="bd209361669e6039e2d46925b98964270ec9db84" translate="yes" xml:space="preserve">
          <source>July 26, 2005</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b31aa739648b445f7448224142630d141a4270e" translate="yes" xml:space="preserve">
          <source>June 12, 2007</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a23786af78acf626cd4573fa13a06ed0180b91" translate="yes" xml:space="preserve">
          <source>June 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d4e067e5679c035c82b3463849e985c82217de" translate="yes" xml:space="preserve">
          <source>June 2017, for Synology DSM 5.1.5022 and DSM 6.1-15101-4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4bec64b36dddd2d05eab7e4c0c50161f28ee85" translate="yes" xml:space="preserve">
          <source>Jungshik Shin's Hangul FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393e8d148b7c32a4801ca4b9adac481fc7a1b559" translate="yes" xml:space="preserve">
          <source>Junk on end of regexp in regex m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3e3f9c72e3b6a4486ec8a37b16219f4828a4df" translate="yes" xml:space="preserve">
          <source>Just a quick hint here for all those CGI programmers who can't figure out how on earth to get past that 'waiting for input' prompt, when running their CGI script from the command-line, try something like this:</source>
          <target state="translated">Просто небольшая подсказка для всех тех программистов CGI,которые не могут понять,как пройти мимо этой &quot;ожидающей ввода&quot; подсказки,при запуске своего CGI-скрипта из командной строки,попробуйте что-нибудь вроде этого:</target>
        </trans-unit>
        <trans-unit id="33892714232f2855fd91a542cad5d54aa9bb7133" translate="yes" xml:space="preserve">
          <source>Just as P5P collectively maintains the codebase, we collectively maintain the documentation. Writing a particular bit of documentation doesn't give an author control of the future of that documentation. At the same time, just as source code changes should match the style of their surrounding blocks, so should documentation changes.</source>
          <target state="translated">Подобно тому,как P5P коллективно ведет кодовую базу,мы коллективно ведем документацию.Написание определенного бита документации не дает автору контроля над будущим этой документации.В то же время,как изменения в исходном коде должны соответствовать стилю окружающих их блоков,так и изменения в документации.</target>
        </trans-unit>
        <trans-unit id="0aaf4ef0c9b344d1374053d108e2052e07431e98" translate="yes" xml:space="preserve">
          <source>Just as PERL_IMPLICIT_CONTEXT provides a way to bundle up everything that the interpreter knows about itself and pass it around, so too are there plans to allow the interpreter to bundle up everything it knows about the environment it's running on. This is enabled with the PERL_IMPLICIT_SYS macro. Currently it only works with USE_ITHREADS on Windows.</source>
          <target state="translated">Точно так же,как PERL_IMPLICIT_CONTEXT предоставляет способ собрать воедино всё,что интерпретатор знает о себе,и передать его по кругу,так же есть планы,позволяющие интерпретатору собрать воедино всё,что он знает об окружающей среде,в которой он запущен.Это включено с помощью макроса PERL_IMPLICIT_SYS.В настоящее время он работает только с USE_ITHREADS на Windows.</target>
        </trans-unit>
        <trans-unit id="62e8906be80151cd95246c62df9e4761d5bc2332" translate="yes" xml:space="preserve">
          <source>Just as above, but maps from characters (like &quot;\xE9&quot;, lowercase e-acute) to characters (like &quot;e&quot;).</source>
          <target state="translated">Точно так же,как и выше,но с картами от символов (например,&quot;\xE9&quot;,нижний регистр e-acute)до символов (например,&quot;e&quot;).</target>
        </trans-unit>
        <trans-unit id="f1702c1674bbdf9cb3b7adf0315e4e20270cbf30" translate="yes" xml:space="preserve">
          <source>Just as in all regular expressions, the pattern can be built up by including variables that are interpolated at regex compilation time. But its best to compile each sub-component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b1550eae10318438b9e4b01a4b0de0c550fc87" translate="yes" xml:space="preserve">
          <source>Just as in all regular expressions, the pattern can be built up by including variables that are interpolated at regex compilation time. Care must be taken to ensure that you are getting what you expect. For example:</source>
          <target state="translated">Как и во всех регулярных выражениях,шаблон можно построить,включив в него переменные,которые интерполируются во время компиляции регресса.Необходимо позаботиться о том,чтобы вы получили то,что ожидаете.Например:</target>
        </trans-unit>
        <trans-unit id="fe8a855ccb8465e6e734bba6c85f798237a3ef83" translate="yes" xml:space="preserve">
          <source>Just as in the previous regexp, the first quantifier &lt;code&gt;.??&lt;/code&gt; can match earliest at position &lt;code&gt;'a'&lt;/code&gt; , so it does. The second quantifier is greedy, so it matches &lt;code&gt;mm&lt;/code&gt; , and the third matches the rest of the string.</source>
          <target state="translated">Как и в предыдущем регулярном выражении, первый квантификатор &lt;code&gt;.??&lt;/code&gt; может соответствовать самому раннему в позиции &lt;code&gt;'a'&lt;/code&gt; , так и есть. Второй квантификатор является жадным, поэтому он соответствует &lt;code&gt;mm&lt;/code&gt; , а третий соответствует остальной части строки.</target>
        </trans-unit>
        <trans-unit id="b429e6fea7e7282b4255020ad5026d4f3fb6bfbd" translate="yes" xml:space="preserve">
          <source>Just as in the previous regexp, the first quantifier &lt;code&gt;.??&lt;/code&gt; can match earliest at position &lt;code&gt;'a'&lt;/code&gt;, so it does. The second quantifier is greedy, so it matches &lt;code&gt;mm&lt;/code&gt;, and the third matches the rest of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa745852ee956f0149292237b30dcf7a75e890" translate="yes" xml:space="preserve">
          <source>Just as in the shell, a backslashed bareword following the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; means the same thing as a single-quoted string does:</source>
          <target state="translated">Как и в оболочке, голое слово с обратной косой чертой после &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; означает то же самое, что и строка в одинарных кавычках:</target>
        </trans-unit>
        <trans-unit id="faebd7db1f892818770103ce78accf7713eb730f" translate="yes" xml:space="preserve">
          <source>Just as numeric comparisons can be autogenerated from the method for &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt; , string comparisons can be autogenerated from that for &lt;code&gt;'cmp'&lt;/code&gt; :</source>
          <target state="translated">Так же, как числовые сравнения могут быть автоматически сгенерированы из метода для &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt; , сравнения строк могут быть автоматически созданы из этого для &lt;code&gt;'cmp'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f4705ec7dd0e75b639ef6323350a11dcee5bb4b" translate="yes" xml:space="preserve">
          <source>Just as numeric comparisons can be autogenerated from the method for &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt;, string comparisons can be autogenerated from that for &lt;code&gt;'cmp'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df19f323bb6b48a43ad85680dc0529bf785f1c3" translate="yes" xml:space="preserve">
          <source>Just as with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt;, no shell escapes happen when you &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; a list. Further examples of this can be found in &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt;.</source>
          <target state="translated">Как и в случае с &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; , при выполнении функции &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; для списка не происходит выхода из оболочки . Другие примеры этого можно найти &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;в разделе Safe Pipe Opens в perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51995d8ca4bbd6f67f0a4012d50abbc2aa87fe84" translate="yes" xml:space="preserve">
          <source>Just as with &lt;code&gt;system()&lt;/code&gt;, no shell escapes happen when you &lt;code&gt;exec()&lt;/code&gt; a list. Further examples of this can be found in &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;&quot;Safe Pipe Opens&quot; in perlipc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e255de21718ad7422221bd6f42f8ec7acc85a6f3" translate="yes" xml:space="preserve">
          <source>Just as with any Perl subroutine, all of the arguments passed in &lt;code&gt;@_&lt;/code&gt; are aliases to the original argument. This includes the object itself. If you assign directly to &lt;code&gt;$_[0]&lt;/code&gt; you will change the contents of the variable that holds the reference to the object. We recommend that you don't do this unless you know exactly what you're doing.</source>
          <target state="translated">Как и в случае любой подпрограммы Perl, все аргументы, переданные в &lt;code&gt;@_&lt;/code&gt; , являются псевдонимами исходного аргумента. Сюда входит и сам объект. Если вы присвоите напрямую &lt;code&gt;$_[0]&lt;/code&gt; , вы измените содержимое переменной, которая содержит ссылку на объект. Мы рекомендуем вам не делать этого, если вы точно не знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="fccd05d91f9ee0d9fbbfbf38723d03e8a7c74f00" translate="yes" xml:space="preserve">
          <source>Just as with any signal, you can use &lt;code&gt;sigaction($rtsig, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, $oa)&lt;/code&gt; to retrieve the installed signal handler (or, rather, the signal action).</source>
          <target state="translated">Как и в случае с любым &lt;code&gt;sigaction($rtsig, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, $oa)&lt;/code&gt; сигналом, вы можете использовать sigaction ($ rtsig, undef , $ oa) для получения установленного обработчика сигнала (или, скорее, действия сигнала).</target>
        </trans-unit>
        <trans-unit id="1dd23c5eb258d91db69b09a02592a51973f21dd6" translate="yes" xml:space="preserve">
          <source>Just as with any signal, you can use &lt;code&gt;sigaction($rtsig, undef, $oa)&lt;/code&gt; to retrieve the installed signal handler (or, rather, the signal action).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc08a9e71893fc4c8e0aca93a96bf0beab842b5" translate="yes" xml:space="preserve">
          <source>Just because a lexical variable is lexically (also called statically) scoped to its enclosing block, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; FILE, this doesn't mean that within a function it works like a C static. It normally works more like a C auto, but with implicit garbage collection.</source>
          <target state="translated">Просто потому, что лексическая переменная лексически (также называемая статической) привязана к ее охватывающему блоку, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; FILE, это не означает, что внутри функции она работает как статическая C. Обычно он работает больше как автоматический C, но с неявной сборкой мусора.</target>
        </trans-unit>
        <trans-unit id="78056aba9593d70f12e87925bcfaacc1a8ab6644" translate="yes" xml:space="preserve">
          <source>Just because a lexical variable is lexically (also called statically) scoped to its enclosing block, &lt;code&gt;eval&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt; FILE, this doesn't mean that within a function it works like a C static. It normally works more like a C auto, but with implicit garbage collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c499a655f030c92a71b95e9b2689970ea91b8a" translate="yes" xml:space="preserve">
          <source>Just because you</source>
          <target state="translated">Только потому,что ты</target>
        </trans-unit>
        <trans-unit id="109e6f9598b8183bb06ce69968e5c56fc8392a6f" translate="yes" xml:space="preserve">
          <source>Just before HP took over Compaq, some systems were renamed. the link that contained the explanation is dead, so here's a short summary:</source>
          <target state="translated">Незадолго до того,как HP захватила Compaq,некоторые системы были переименованы.ссылка,которая содержала объяснение,мертва,так что вот краткое резюме:</target>
        </trans-unit>
        <trans-unit id="75a3cd456f36493a47889dab1eae3ee74e772ac3" translate="yes" xml:space="preserve">
          <source>Just before removing a directory (after having successfully removed everything it contained), &lt;code&gt;remove_tree&lt;/code&gt; attempted to set the permissions on the directory to ensure it could be removed and failed. Program execution continues, but the directory may possibly not be deleted.</source>
          <target state="translated">Непосредственно перед удалением каталога (после успешного удаления всего, что в нем содержится), &lt;code&gt;remove_tree&lt;/code&gt; попытался установить разрешения для каталога, чтобы гарантировать его удаление, и потерпел неудачу. Выполнение программы продолжается, но, возможно, каталог не будет удален.</target>
        </trans-unit>
        <trans-unit id="9d4933b209ef20fa5fe691ade0680077d951e65e" translate="yes" xml:space="preserve">
          <source>Just do it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff4cf2ef85b7a7babbfc6ed8ae94ad00cf8c95" translate="yes" xml:space="preserve">
          <source>Just don't forget that you have to put a semicolon on the end to finish the statement, as Perl doesn't know you're not going to try to do this:</source>
          <target state="translated">Только не забывайте,что вы должны поставить точку с запятой в конце,чтобы закончить заявление,так как Perl не знает,что вы не собираетесь пытаться сделать это:</target>
        </trans-unit>
        <trans-unit id="328525052fa36f8cc3be7cbb9e20c8b29808d7e3" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#Decimal-Versions&quot;&gt;&quot;Decimal Versions&quot;&lt;/a&gt;, Dotted-Decimal Versions can be used as &lt;a href=&quot;#Alpha-Versions&quot;&gt;&quot;Alpha Versions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6d762627d70bbe10fa5260237267dabf212dd8" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;, but implicitly appends a newline at the end of the LIST instead of any value &lt;a href=&quot;perlvar#%24%5C&quot;&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/a&gt; might have. To use FILEHANDLE without a LIST to print the contents of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to it, you must use a bareword filehandle like &lt;code&gt;FH&lt;/code&gt;, not an indirect one like &lt;code&gt;$fh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfcdab4ac1e20695bdf62962cb38182d5e54e17" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;$^E&lt;/code&gt;, in a numeric context &lt;code&gt;fileLastError()&lt;/code&gt; returns the numeric error value while in a string context it returns a text description of the error [actually it returns a Perl scalar that contains both values so &lt;code&gt;$x= fileLastError()&lt;/code&gt; causes &lt;code&gt;$x&lt;/code&gt; to give different values in string vs. numeric contexts].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3dbf5e42e97a50f069394cda4a6442ac1d1765" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, but implicitly appends a newline. &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; is simply an abbreviation for &lt;code&gt;{ &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . To use FILEHANDLE without a LIST to print the contents of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; .</source>
          <target state="translated">Точно так же, как &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , но неявно добавляет новую строку. &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; - это просто сокращение от &lt;code&gt;{ &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . Чтобы использовать FILEHANDLE без LIST для вывода в него содержимого &lt;code&gt;$_&lt;/code&gt; , вы должны использовать настоящий дескриптор файла, такой как &lt;code&gt;FH&lt;/code&gt; , а не косвенный, как &lt;code&gt;$fh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="602502b6c9a3a727e615412b86a9aecefaaebcdb" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, but implicitly appends a newline. &lt;code&gt;&lt;a href=&quot;say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; is simply an abbreviation for &lt;code&gt;{ &lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . To use FILEHANDLE without a LIST to print the contents of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; .</source>
          <target state="translated">Точно так же, как &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , но неявно добавляет новую строку. &lt;code&gt;&lt;a href=&quot;say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; - это просто сокращение от &lt;code&gt;{ &lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . Чтобы использовать FILEHANDLE без LIST для вывода в него содержимого &lt;code&gt;$_&lt;/code&gt; , вы должны использовать настоящий дескриптор файла, такой как &lt;code&gt;FH&lt;/code&gt; , а не косвенный, как &lt;code&gt;$fh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="841a87198bd8d5b2b617ad09071d079bbef63265" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;SAVEFREESV&lt;/code&gt; , but mortalizes &lt;code&gt;sv&lt;/code&gt; at the end of the current scope instead of decrementing its reference count. This usually has the effect of keeping &lt;code&gt;sv&lt;/code&gt; alive until the statement that called the currently live scope has finished executing.</source>
          <target state="translated">Точно так же, как &lt;code&gt;SAVEFREESV&lt;/code&gt; , но уничтожает &lt;code&gt;sv&lt;/code&gt; в конце текущей области вместо уменьшения его счетчика ссылок. Обычно это сохраняет &lt;code&gt;sv&lt;/code&gt; в живых до тех пор, пока не завершится выполнение оператора, который вызывал текущую живую область.</target>
        </trans-unit>
        <trans-unit id="d8849097832f945b1a9937bcaa379e174bc86623" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;SAVEFREESV&lt;/code&gt;, but mortalizes &lt;code&gt;sv&lt;/code&gt; at the end of the current scope instead of decrementing its reference count. This usually has the effect of keeping &lt;code&gt;sv&lt;/code&gt; alive until the statement that called the currently live scope has finished executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bed5460b2b3b0cfc33630f1100fa2264399cf7" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;my $f; $f = sub { $f-&amp;gt;() }&lt;/code&gt;, this example leaks memory. The name &lt;code&gt;baz&lt;/code&gt; is a reference to the subroutine, and the subroutine uses the name &lt;code&gt;baz&lt;/code&gt;; they keep each other alive (see &lt;a href=&quot;perlref#Circular-References&quot;&gt;&quot;Circular References&quot; in perlref&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdee811de63331b1e390b9478886674b8221df6d" translate="yes" xml:space="preserve">
          <source>Just like alternation, quantifiers are also susceptible to backtracking. Here is a step-by-step analysis of the example</source>
          <target state="translated">Как и чередование,квантификаторы также подвержены обратному движению.Вот пошаговый анализ примера.</target>
        </trans-unit>
        <trans-unit id="24cfeb3771fb43ef585a2f529448474ab41a12a3" translate="yes" xml:space="preserve">
          <source>Just like capa, but only uses a cache from the last time we asked the server, so as to avoid asking more than once.</source>
          <target state="translated">Так же,как и capa,но использует кэш только с последнего раза,когда мы запрашивали сервер,чтобы не спрашивать более одного раза.</target>
        </trans-unit>
        <trans-unit id="c07daab474d2a24a41bbf91648b44cb45c039da4" translate="yes" xml:space="preserve">
          <source>Just like have_compiler but for C++ instead of C.</source>
          <target state="translated">Так же,как и have_compiler,но для C++вместо C.</target>
        </trans-unit>
        <trans-unit id="1ed1a130170978e2a4e7086c7c7306a25c8e7b33" translate="yes" xml:space="preserve">
          <source>Just like special scalars and arrays, there are also special hashes. The most well known of these is &lt;code&gt;%ENV&lt;/code&gt; which contains environment variables. Read all about it (and other special variables) in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;.</source>
          <target state="translated">Как и специальные скаляры и массивы, существуют и специальные хеши. Самый известный из них - &lt;code&gt;%ENV&lt;/code&gt; который содержит переменные среды. Прочтите все об этом (и других специальных переменных) в &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19b37fcf66fa778fbd1b5d5fc50d7060df9d05e7" translate="yes" xml:space="preserve">
          <source>Just like the &quot;strict&quot; pragma any of these categories can be combined</source>
          <target state="translated">Так же,как и &quot;строгая&quot; прагма,любая из этих категорий может быть совмещена.</target>
        </trans-unit>
        <trans-unit id="82e865fa7feb693e6080cbf3d25a874d28e9c584" translate="yes" xml:space="preserve">
          <source>Just pressing Enter will do the most recent operation again - it's a blessing when stepping through miles of source code.</source>
          <target state="translated">Простое нажатие клавиши Enter повторит самую последнюю операцию-это благословение при прохождении миль по исходному коду.</target>
        </trans-unit>
        <trans-unit id="fe244a50fe6aded057e3eae12f0a93027edb2381" translate="yes" xml:space="preserve">
          <source>Just say:</source>
          <target state="translated">Просто скажи:</target>
        </trans-unit>
        <trans-unit id="d8c1011fd0f056428d5a8834a2c765887dde0f8b" translate="yes" xml:space="preserve">
          <source>Just set the integer value of the top stack entry to its negation.</source>
          <target state="translated">Просто установите целочисленное значение элемента верхнего стека в отрицательное.</target>
        </trans-unit>
        <trans-unit id="c7727ca967ac9b4f317d7c673ab3882351fa9d9d" translate="yes" xml:space="preserve">
          <source>Just simple slots for storing information about the line and the file the link was encountered in. Has to be filled in manually.</source>
          <target state="translated">Простые слоты для хранения информации о строке и файле,в котором встречалась ссылка.Нужно заполнять вручную.</target>
        </trans-unit>
        <trans-unit id="375852fdf41d2722bd019bb571f919722e750515" translate="yes" xml:space="preserve">
          <source>Just the Pod, the whole Pod, and nothing but the Pod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1d3328e0f08111bb8c2f1b7ffdbdee9651e208" translate="yes" xml:space="preserve">
          <source>Just to show that C programmers can write C in any programming language, if you prefer a more C-like solution, the following script makes the substitution have the same case, letter by letter, as the original. (It also happens to run about 240% slower than the Perlish solution runs.) If the substitution has more characters than the string being substituted, the case of the last character is used for the rest of the substitution.</source>
          <target state="translated">Просто чтобы показать,что программисты на Си могут писать Си на любом языке программирования,если вы предпочитаете более C-подобное решение,следующий скрипт делает замену таким же регистром,буква за буквой,как и оригинал.(Также случается,что подстановка выполняется примерно на 240% медленнее,чем решение Perlish.)Если подстановка имеет больше символов,чем подставляемая строка,то для остальной части подстановки используется регистр последнего символа.</target>
        </trans-unit>
        <trans-unit id="4a091e09bfa339a10150c33a9aaadd4282459277" translate="yes" xml:space="preserve">
          <source>Just what it says, you're missing that file. MakeMaker uses it to determine if perl has been rebuilt since the Makefile was made. It's a bit of a bug that it halts installation.</source>
          <target state="translated">Как раз то,что там написано,вы пропустили этот файл.MakeMaker использует его,чтобы определить,был ли perl перестроен с момента создания Makefile.Это небольшая ошибка,которая останавливает установку.</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="66d19ca0f4158063f6e062dbc4b43cb2360ddc04" translate="yes" xml:space="preserve">
          <source>KEY/VALUE PAIR LIST FUNCTIONS</source>
          <target state="translated">ФУНКЦИИ СПИСКА ПАР КЛЮЧ/ЗНАЧЕНИЕ</target>
        </trans-unit>
        <trans-unit id="ac97fd8044e211b8965191abd3e1372d4a6075d6" translate="yes" xml:space="preserve">
          <source>KEYS</source>
          <target state="translated">KEYS</target>
        </trans-unit>
        <trans-unit id="1294e49f760a91150a0bb4a9bd6180f089f5052a" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">KEYWORDS</target>
        </trans-unit>
        <trans-unit id="d873371555253b7c518cf82fe5be999156ffe1fc" translate="yes" xml:space="preserve">
          <source>KNOWN BUGS</source>
          <target state="translated">ЗНАНЫЕ БУМАГИ</target>
        </trans-unit>
        <trans-unit id="d7d37390d4b0162eaa199e8a40421a0fd151d9d4" translate="yes" xml:space="preserve">
          <source>KNOWN ISSUES</source>
          <target state="translated">ЗНАНИЯ</target>
        </trans-unit>
        <trans-unit id="49f7d6b044c08905cf6f12f8a90c2d7d80dd7870" translate="yes" xml:space="preserve">
          <source>KNOWN PROBLEMS</source>
          <target state="translated">ЗНАНЫЕ ПРОБЛЕМЫ</target>
        </trans-unit>
        <trans-unit id="2e6715471399a1b1ebfdc7f8ec81f013da1993a0" translate="yes" xml:space="preserve">
          <source>KOI8 - De Facto Standard for the Cyrillic world</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf874c052800335db296f8df012e4b563dd5c2" translate="yes" xml:space="preserve">
          <source>KS_C_5601-1987</source>
          <target state="translated">KS_C_5601-1987</target>
        </trans-unit>
        <trans-unit id="48303ff2b3e9c6f3ad91c4b4cea1dcbc0a240594" translate="yes" xml:space="preserve">
          <source>Kansas</source>
          <target state="translated">Kansas</target>
        </trans-unit>
        <trans-unit id="ff0775fcc23b465723521876b29263b74199fe74" translate="yes" xml:space="preserve">
          <source>Karen Etheridge</source>
          <target state="translated">Карен Этеридж</target>
        </trans-unit>
        <trans-unit id="3270844f69bfa9c56dba2d6c3b4cb338e5e7c9e1" translate="yes" xml:space="preserve">
          <source>Karen Etheridge &amp;lt;ether@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbc3244d892d46238fd249e292072bf980c75ba" translate="yes" xml:space="preserve">
          <source>Karl Williamson &lt;code&gt;khw@cpan.org&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6587b068c21cd74b421d84d8dd8d104ffb717b74" translate="yes" xml:space="preserve">
          <source>Kawai,Takanori provides a Japanese translation of a very old version of this manpage at &lt;a href=&quot;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&quot;&gt;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&lt;/a&gt;</source>
          <target state="translated">Кавай, Таканори предоставляет японский перевод очень старой версии этой справочной страницы по адресу &lt;a href=&quot;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&quot;&gt;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f36b6bb1852c24392fb3ee9a2879da24eb0750d" translate="yes" xml:space="preserve">
          <source>Kazakhstan</source>
          <target state="translated">Kazakhstan</target>
        </trans-unit>
        <trans-unit id="dcff63b147198a52939742818ee2ef592a205e7e" translate="yes" xml:space="preserve">
          <source>Keep features/concepts as orthogonal as possible.</source>
          <target state="translated">Сохраняйте функции/концепции как можно более ортогональными.</target>
        </trans-unit>
        <trans-unit id="8e7b10c1d652b6b04a656b434f5b39616ccf1a50" translate="yes" xml:space="preserve">
          <source>Keep hacking until the tests pass.</source>
          <target state="translated">Продолжайте взламывать,пока тесты не пройдут.</target>
        </trans-unit>
        <trans-unit id="af7d72158e7608d9c4b48305b5171ef45c75b0c8" translate="yes" xml:space="preserve">
          <source>Keep in mind that</source>
          <target state="translated">Имейте в виду,что</target>
        </trans-unit>
        <trans-unit id="ed0120a6a4cb952cfa71da323a4afdbfcf12e27d" translate="yes" xml:space="preserve">
          <source>Keep in mind that even if you think your code is not locale-aware, it may call a C library function that is. Hopefully the man page for such a function will indicate that dependency, but the documentation is imperfect.</source>
          <target state="translated">Имейте в виду,что даже если вы считаете,что ваш код не локализован,он может вызвать функцию библиотеки Си.Надеюсь,страница man для такой функции укажет на эту зависимость,но документация несовершенна.</target>
        </trans-unit>
        <trans-unit id="6b2fabd086693247681cb8a1ee02495591d5c9f6" translate="yes" xml:space="preserve">
          <source>Keep in mind that even if you think your code is not locale-aware, it may call a library function that is. Hopefully the man page for such a function will indicate that dependency, but the documentation is imperfect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f6615f078bb4d01730cb8fac56589317fa9a58" translate="yes" xml:space="preserve">
          <source>Keep in mind that only the first several &quot;odd-numbered&quot; buckets are used, so the information on size of the &quot;odd-numbered&quot; buckets which are not used is probably meaningless.</source>
          <target state="translated">Имейте в виду,что используются только первые несколько &quot;нечетных&quot; ведер,поэтому информация о размере &quot;нечетных&quot; ведер,которые не используются,вероятно,бессмысленна.</target>
        </trans-unit>
        <trans-unit id="4ef95230ae4c52baacdb1c4884acabd7049d178c" translate="yes" xml:space="preserve">
          <source>Keep in mind that these compiler and linker settings will also be used when building CPAN modules. For XS modules to be compiled as a universal binary, any libraries it links to must also be universal binaries. The system libraries that Apple includes with the 10.4u SDK are all universal, but user-installed libraries may need to be re-installed as universal binaries.</source>
          <target state="translated">Помните,что эти настройки компилятора и компоновщика также будут использоваться при сборке CPAN модулей.Для того,чтобы модули XS были скомпилированы как универсальный бинарный файл,любые библиотеки,на которые он ссылается,также должны быть универсальными бинарными файлами.Системные библиотеки,которые Apple включает в SDK 10.4u,все универсальны,но установленные пользователем библиотеки могут потребовать переустановки в качестве универсальных двоичных файлов.</target>
        </trans-unit>
        <trans-unit id="9eeeda7b97916fa01cabcb38bff49279f0e6a0bb" translate="yes" xml:space="preserve">
          <source>Keep in mind that you can always supply</source>
          <target state="translated">Имейте в виду,что вы всегда можете поставить</target>
        </trans-unit>
        <trans-unit id="64a46910748217f86efd6627ba753bed01e58a81" translate="yes" xml:space="preserve">
          <source>Keep info about source lines on which a subroutine is defined.</source>
          <target state="translated">Сохраняйте информацию об исходных линиях,на которых определена подпрограмма.</target>
        </trans-unit>
        <trans-unit id="f47e40b91fc5362642fcbe01770e5ce787e6ccdc" translate="yes" xml:space="preserve">
          <source>Keep it fast, simple, and useful.</source>
          <target state="translated">Держите его быстрым,простым и полезным.</target>
        </trans-unit>
        <trans-unit id="a180636219ad9f73429c85412c6186e17a5910d6" translate="yes" xml:space="preserve">
          <source>Keep it open and exciting to use/patch/advocate Perl everywhere.</source>
          <target state="translated">Держите его открытым и увлекательным,чтобы использовать/заплатить/освободить Perl повсюду.</target>
        </trans-unit>
        <trans-unit id="c51474355aad094e34cfbd22e2141d08f6d33f4f" translate="yes" xml:space="preserve">
          <source>Keep more files open than the system permits</source>
          <target state="translated">Держите больше файлов открытыми,чем позволяет система</target>
        </trans-unit>
        <trans-unit id="14b49f2a3e5ec0e1cdb997e3d03cb485633984fa" translate="yes" xml:space="preserve">
          <source>Keep sets of symbol names palatable to the VMS linker</source>
          <target state="translated">Сохраняйте наборы имен символов,подходящих для компоновщика VMS.</target>
        </trans-unit>
        <trans-unit id="35e8f597cb9e9a9f82f4e1bd085531a453e9fc6c" translate="yes" xml:space="preserve">
          <source>Keep statics grouped into bins based on request sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a15ca125f2b3af86ad1584e6c4e2aafb908eae" translate="yes" xml:space="preserve">
          <source>Keep your documentation near the code it documents (&quot;inline&quot; documentation). Include POD for a given method right above that method's subroutine. This makes it easier to keep the documentation up to date, and avoids having to document each piece of code twice (once in POD and once in comments).</source>
          <target state="translated">Храните документацию рядом с кодом,который она документирует (&quot;встроенная&quot; документация).Включите POD для данного метода прямо над подпрограммой этого метода.Это облегчает поддержание документации в актуальном состоянии и позволяет избежать необходимости документировать каждый фрагмент кода дважды (один раз в POD и один раз в комментариях).</target>
        </trans-unit>
        <trans-unit id="76d3b7f70d495b2b8a3270d608b55e23f648e0ce" translate="yes" xml:space="preserve">
          <source>Keeping track of the highest cached record. This would allow reads-in-a-row to skip the cache lookup faster (if reading from 1..N with empty cache at start, the last cached value will be always N-1).</source>
          <target state="translated">Слежу за самыми высокими кэшированными записями.Это позволит пропустить поиск в кэше быстрее (если чтение с 1..N с пустым кэшем в начале,то последнее кэшированное значение всегда будет N-1).</target>
        </trans-unit>
        <trans-unit id="4c7c7465de1db7f41ca1d8bdef4219bff0d7c120" translate="yes" xml:space="preserve">
          <source>Ken Williams &amp;lt;ken@mathforum.org&amp;gt;</source>
          <target state="translated">Кен Уильямс &amp;lt;ken@mathforum.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ad60c49c47f2bac654c72d8e78538a479b9e1298" translate="yes" xml:space="preserve">
          <source>Ken Williams &amp;lt;kwilliams@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6eb55c5e49157861d18ebcd27f647197104aae7" translate="yes" xml:space="preserve">
          <source>Ken Williams wrote the original CPAN Meta Spec (also known as the &quot;META.yml spec&quot;) in 2003 and maintained it through several revisions with input from various members of the community. In 2005, Randy Sims redrafted it from HTML to POD for the version 1.2 release. Ken continued to maintain the spec through version 1.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd59a29e35516d1b9c3ad5018ade24ad931f61e" translate="yes" xml:space="preserve">
          <source>Ken Williams, &amp;lt;ken@mathforum.org&amp;gt;</source>
          <target state="translated">Кен Уильямс, &amp;lt;ken@mathforum.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0d1222a0218c97e36123b63438f7b4e4edcb6a3e" translate="yes" xml:space="preserve">
          <source>Ken Williams, kwilliams@cpan.org</source>
          <target state="translated">Кен Уильямс,kwilliams@cpan.org</target>
        </trans-unit>
        <trans-unit id="a1b34f9f925d8a7063c51b6911f446a276179b5f" translate="yes" xml:space="preserve">
          <source>Kenichi Ishigaki &amp;lt;ishigaki@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c191406f2405d085c884671d550970ada2c6b1" translate="yes" xml:space="preserve">
          <source>Kenichi Ishigaki, &amp;lt;ishigaki[at]cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0c77223410ec7a299fe0a1261f164a0c42279d" translate="yes" xml:space="preserve">
          <source>Kenneth Albanowski (&amp;lt;kjahds@kjahds.com&amp;gt;), subsequently</source>
          <target state="translated">Кеннет Альбановски (&amp;lt;kjahds@kjahds.com&amp;gt;), впоследствии</target>
        </trans-unit>
        <trans-unit id="653197d7093377e03793ff947a865bba7483d32a" translate="yes" xml:space="preserve">
          <source>Kent Fredric &amp;lt;kentfredric@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8469bfeb77eb9b1deeb56784d6fba56dcad80b56" translate="yes" xml:space="preserve">
          <source>Kent Fredric &amp;lt;kentnl@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ee2290090510397bed2e3bc84d4a991ae891b5" translate="yes" xml:space="preserve">
          <source>Kephra</source>
          <target state="translated">Kephra</target>
        </trans-unit>
        <trans-unit id="348f36b3e5bbe51567b4fb414536380d7187542b" translate="yes" xml:space="preserve">
          <source>Kernel threads are the next step in thread evolution. The OS knows about kernel threads, and makes allowances for them. The main difference between a kernel thread and a user-mode thread is blocking. With kernel threads, things that block a single thread don't block other threads. This is not the case with user-mode threads, where the kernel blocks at the process level and not the thread level.</source>
          <target state="translated">Нитки ядра-следующий шаг в эволюции нитей.Операционная система знает о потоках ядра и учитывает их.Основное различие между потоком ядра и потоком пользовательского режима заключается в блокировке.В случае с потоками ядра вещи,блокирующие один поток,не блокируют другие.Это не так в случае с потоками пользовательского режима,где кернел блокирует на уровне процесса,а не на уровне потоков.</target>
        </trans-unit>
        <trans-unit id="259173b7d729d8dc6a66caf8b3aace35a75e8f99" translate="yes" xml:space="preserve">
          <source>Kevin Ryde</source>
          <target state="translated">Кевин Райд</target>
        </trans-unit>
        <trans-unit id="ae72a3031e0506a2cc9019c8072a580c048ea952" translate="yes" xml:space="preserve">
          <source>Kevin Ryde &amp;lt;user42@zip.com.au&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a297e34f70da8957366c0d560c60295f4ab16d2a" translate="yes" xml:space="preserve">
          <source>Key feature milestones include:</source>
          <target state="translated">Основные вехи в этой области включают в себя:</target>
        </trans-unit>
        <trans-unit id="bc06e1d8824d5b7cbd20d018550616dba1eeb7a3" translate="yes" xml:space="preserve">
          <source>Key naming</source>
          <target state="translated">Ключевое имя</target>
        </trans-unit>
        <trans-unit id="a3bc13a9d5bc9bf56b75f62ed64233e64f24fdcc" translate="yes" xml:space="preserve">
          <source>Key value pairs from the right hash are merged to the left hash. Key collisions are only allowed if their values are the same. This merge function will recurse into nested hash refs following the same merge rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c71372d5d9156fb958ad05c3a06f64214fe7926" translate="yes" xml:space="preserve">
          <source>Key/Value Hash Slices</source>
          <target state="translated">Хэш-фрагменты ключа/значения</target>
        </trans-unit>
        <trans-unit id="0a8746998a05aa11ad9c2dab8f6c1868e6458dab" translate="yes" xml:space="preserve">
          <source>Key/value pairs are extra information about the module. Fields include:</source>
          <target state="translated">Пары ключ/значение являются дополнительной информацией о модуле.Поля включают в себя:</target>
        </trans-unit>
        <trans-unit id="6662c40bac78a8fe5e23219b77087fbe7647cb15" translate="yes" xml:space="preserve">
          <source>Keyboard</source>
          <target state="translated">Keyboard</target>
        </trans-unit>
        <trans-unit id="26057b24ccfdf1266160f8baf076207f8248b2c2" translate="yes" xml:space="preserve">
          <source>Keyed on perl version this contains ISO formatted versions of the release dates, as gleaned from &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt;.</source>
          <target state="translated">С ключом к версии perl, он содержит версии дат выпуска в формате ISO, &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;взятые&lt;/a&gt; из perlhist .</target>
        </trans-unit>
        <trans-unit id="96d27593b7b7961c5ceaead578c38d771573f7f6" translate="yes" xml:space="preserve">
          <source>Keyed on perl version this contains ISO formatted versions of the release dates, as gleaned from &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlhist&quot;&gt;perlhist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d923b20fce2535a3664621e531ef080ff7f9cd6a" translate="yes" xml:space="preserve">
          <source>Keys that are removed and used by run_subtest:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8db1e0c3088ee11dfc93f5419a78c6f0fd5645" translate="yes" xml:space="preserve">
          <source>Keywords related to Perl modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60139b7db3e9d2b51751c4b82ebfa525574e434a" translate="yes" xml:space="preserve">
          <source>Keywords related to classes and object-orientation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c704cf16aa5b97aad8158132dfa370f5b954af" translate="yes" xml:space="preserve">
          <source>Keywords related to scoping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a3090a3a955be7eca29e8ad0e959206c052266" translate="yes" xml:space="preserve">
          <source>Keywords related to the control flow of your Perl program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac519cac59842ef7ce692b39ea336e75df75601a" translate="yes" xml:space="preserve">
          <source>Killing the parent process</source>
          <target state="translated">Убийство родительского процесса</target>
        </trans-unit>
        <trans-unit id="76e63bc788196f0fc365bdd0b40b720b363e2116" translate="yes" xml:space="preserve">
          <source>Kirrily &quot;Skud&quot; Robert &amp;lt;skud@cpan.org&amp;gt;</source>
          <target state="translated">Киррили &quot;Skud&quot; Роберт &amp;lt;skud@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="132f84c02455b94d400579a7b40a518ce274e293" translate="yes" xml:space="preserve">
          <source>Know what you're testing. Read the docs, and the source.</source>
          <target state="translated">Знай,что ты проверяешь.Прочитайте документы и источник.</target>
        </trans-unit>
        <trans-unit id="90303445974fa3fe293cc60d64eaeca6bb4d14c9" translate="yes" xml:space="preserve">
          <source>Known Problems</source>
          <target state="translated">Известные проблемы</target>
        </trans-unit>
        <trans-unit id="eb6d28effd6acc1d20ab0115a46d456361c67007" translate="yes" xml:space="preserve">
          <source>Known Problems with Perl on Hurd</source>
          <target state="translated">Известные проблемы с Perl на Hurd</target>
        </trans-unit>
        <trans-unit id="2e89de469fa00e2ab9c34571ade9b38ab1c2cab2" translate="yes" xml:space="preserve">
          <source>Known broken in version 0.07. Apparently works fine in 0.06 though. Patch has been submitted to fix the issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d461ba80b969b65622127de6110a76e9ec3b7a" translate="yes" xml:space="preserve">
          <source>Known broken in versions: 1.0.9 and older</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35d4f63dc3fe926a9db173d1f73bb17b3726246" translate="yes" xml:space="preserve">
          <source>Known problems</source>
          <target state="translated">Известные проблемы</target>
        </trans-unit>
        <trans-unit id="773f5eaba0582fa827eb62a803e54c124b33061b" translate="yes" xml:space="preserve">
          <source>Known to be broken for 5.8.0 (but 5.6.1 and 5.7.2 can be used):</source>
          <target state="translated">Известно,что сломано для 5.8.0 (но можно использовать 5.6.1 и 5.7.2):</target>
        </trans-unit>
        <trans-unit id="140071254cfb3eb18c0425b733d34c90893547ed" translate="yes" xml:space="preserve">
          <source>Komodo</source>
          <target state="translated">Komodo</target>
        </trans-unit>
        <trans-unit id="cf8178f760b75a0d75931dde9fe9ac37025b060d" translate="yes" xml:space="preserve">
          <source>Korean Encodings</source>
          <target state="translated">корейское кодирование</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="c142a9ba26a24e1b73db61760826e298c4c0ddcb" translate="yes" xml:space="preserve">
          <source>L [abw]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5009766b33ae437bdfad28ba25b247aa809447e" translate="yes" xml:space="preserve">
          <source>LANGUAGE CLASS HIERARCHIES</source>
          <target state="translated">ИЕРАРХИИ ЯЗЫКОВЫХ КЛАССОВ</target>
        </trans-unit>
        <trans-unit id="306bdaf58d73ea39af3b1402b65b299e6a4795ee" translate="yes" xml:space="preserve">
          <source>LAST UPDATE</source>
          <target state="translated">ПОСЛЕДНЕЕЕ ОБНОВЛЕНИЕ</target>
        </trans-unit>
        <trans-unit id="aeec63655fed08c1f334fcc126280614a35bdd93" translate="yes" xml:space="preserve">
          <source>LATIN CAPITAL LETTER SHARP S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27af00b4882cabde6c2deac4be8c6e592a196d2a" translate="yes" xml:space="preserve">
          <source>LATIN SMALL LETTER LONG S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956ece64434b3c753877daa6b0151c6f7f8ddbc" translate="yes" xml:space="preserve">
          <source>LATIN1_TO_NATIVE</source>
          <target state="translated">LATIN1_TO_NATIVE</target>
        </trans-unit>
        <trans-unit id="823feb18075201a2009bf899a2b4bee49397d8df" translate="yes" xml:space="preserve">
          <source>LC_TIME</source>
          <target state="translated">LC_TIME</target>
        </trans-unit>
        <trans-unit id="f7314006ff40a8dc21e31c8bdeffdcf14d801b8d" translate="yes" xml:space="preserve">
          <source>LD</source>
          <target state="translated">LD</target>
        </trans-unit>
        <trans-unit id="90ca2bc5ab4dabeeb219828932780cc0dfc4ed8f" translate="yes" xml:space="preserve">
          <source>LDDLFLAGS</source>
          <target state="translated">LDDLFLAGS</target>
        </trans-unit>
        <trans-unit id="931f97ed06ff46676353746b763aa77d0db02597" translate="yes" xml:space="preserve">
          <source>LDFROM</source>
          <target state="translated">LDFROM</target>
        </trans-unit>
        <trans-unit id="7c53807c1836659b4436f686a99f72b3f7ea4a20" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS and EXTRALIBS are always identical under Win32, and BSLOADLIBS and LD_RUN_PATH are always empty (this may change in future).</source>
          <target state="translated">LDLOADLIBS и EXTRALIBS всегда идентичны под Win32,а BSLOADLIBS и LD_RUN_PATH всегда пусты (это может измениться в будущем).</target>
        </trans-unit>
        <trans-unit id="27d827eb4792696500b4c73ad4ddf3c959ae3870" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS and LD_RUN_PATH</source>
          <target state="translated">LDLOADLIBS и LD_RUN_PATH</target>
        </trans-unit>
        <trans-unit id="1635e0d5ca894812009c83cf6cdbe20b68728252" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS contains both the libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; and the CRTLs, if any, specified in Config.pm. EXTRALIBS contains just those libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; . BSLOADLIBS and LD_RUN_PATH are always empty.</source>
          <target state="translated">LDLOADLIBS содержит библиотеки, найденные на основе &lt;code&gt;$potential_libs&lt;/code&gt; possible_libs, и CRTL, если таковые имеются, указанные в Config.pm. EXTRALIBS содержит только те библиотеки, которые были найдены на основе &lt;code&gt;$potential_libs&lt;/code&gt; possible_libs . BSLOADLIBS и LD_RUN_PATH всегда пусты.</target>
        </trans-unit>
        <trans-unit id="7f16bd8ecb3686b81b8608aa7cbe6a0280958ee3" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS contains both the libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; and the CRTLs, if any, specified in Config.pm. EXTRALIBS contains just those libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt;. BSLOADLIBS and LD_RUN_PATH are always empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256f68025172870d1f3c1210b89212eca54d2c93" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS's default is changed to $Config{libs}.</source>
          <target state="translated">По умолчанию LDLOADLIBS изменен на $Config{libs}.</target>
        </trans-unit>
        <trans-unit id="31a999d2e445df6d94c2d10d2f899c4b7a408247" translate="yes" xml:space="preserve">
          <source>LD_LIBRARY_PATH</source>
          <target state="translated">LD_LIBRARY_PATH</target>
        </trans-unit>
        <trans-unit id="a79d4f252799bf618ff38cdfc040adec85827f0f" translate="yes" xml:space="preserve">
          <source>LEAVE</source>
          <target state="translated">LEAVE</target>
        </trans-unit>
        <trans-unit id="9492fe99bfc78ed50462f6bcf892cde2a90aadb5" translate="yes" xml:space="preserve">
          <source>LEAVE_SRC</source>
          <target state="translated">LEAVE_SRC</target>
        </trans-unit>
        <trans-unit id="4d725158342230fd771b20f0bfaa69c6356a93a2" translate="yes" xml:space="preserve">
          <source>LEAVE_with_name</source>
          <target state="translated">LEAVE_with_name</target>
        </trans-unit>
        <trans-unit id="38a42fd39e3bbdd76ba2dba65bea762f7aea0428" translate="yes" xml:space="preserve">
          <source>LEGACY</source>
          <target state="translated">LEGACY</target>
        </trans-unit>
        <trans-unit id="93eefcbd1b5574d386a865e095b07bc538e3663b" translate="yes" xml:space="preserve">
          <source>LEGACY API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1a39d7d1db940985ed14aca646db0082b3b567" translate="yes" xml:space="preserve">
          <source>LEGACY SUPPORT METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bfcddc6a90029e35325994614f31d2dd6cb263" translate="yes" xml:space="preserve">
          <source>LEN</source>
          <target state="translated">LEN</target>
        </trans-unit>
        <trans-unit id="8753fd6c3b8da3cc6d317b80329ed3b40b2aa912" translate="yes" xml:space="preserve">
          <source>LETTERS</source>
          <target state="translated">LETTERS</target>
        </trans-unit>
        <trans-unit id="f481cc60f17adbd0734ec4396c3eec7ff4f97ae1" translate="yes" xml:space="preserve">
          <source>LEVEL</source>
          <target state="translated">LEVEL</target>
        </trans-unit>
        <trans-unit id="fb391320cf8346ac5c53b8c936b575054a4cdd50" translate="yes" xml:space="preserve">
          <source>LIB</source>
          <target state="translated">LIB</target>
        </trans-unit>
        <trans-unit id="8ebe6b4ea1f79cdf5a0cfe5997e4373110b1513a" translate="yes" xml:space="preserve">
          <source>LIB should only be set at &lt;code&gt;perl Makefile.PL&lt;/code&gt; time but is allowed as a MakeMaker argument. It has the effect of setting both INSTALLPRIVLIB and INSTALLSITELIB to that value regardless any explicit setting of those arguments (or of PREFIX). INSTALLARCHLIB and INSTALLSITEARCH are set to the corresponding architecture subdirectory.</source>
          <target state="translated">LIB должен быть установлен только во время &lt;code&gt;perl Makefile.PL&lt;/code&gt; но разрешен как аргумент MakeMaker. Он имеет эффект установки этого значения как для INSTALLPRIVLIB, так и для INSTALLSITELIB независимо от любой явной установки этих аргументов (или PREFIX). INSTALLARCHLIB и INSTALLSITEARCH устанавливаются в соответствующий подкаталог архитектуры.</target>
        </trans-unit>
        <trans-unit id="8788c623d0db3031e8b87cadf67d1df4c5a2fb41" translate="yes" xml:space="preserve">
          <source>LIBPERL_A</source>
          <target state="translated">LIBPERL_A</target>
        </trans-unit>
        <trans-unit id="00484abc2f0a64aaebb7808382f0c80f8b800d94" translate="yes" xml:space="preserve">
          <source>LIBPTH, BASE_IMPORT, NLM_VERSION, MPKTOOL, TOOLPATH, BOOT_SYMBOL, NLM_SHORT_NAME, INCLUDE, PATH, MM_NW5_REVISION</source>
          <target state="translated">LIBPTH,BASE_IMPORT,NLM_VERSION,MPKTOOL,TOOLPATH,BOOT_SYMBOL,NLM_SHORT_NAME,INCLUDE,PATH,MM_NW5_REVISION</target>
        </trans-unit>
        <trans-unit id="ceb9c454e341a6406ce1dfc1e42b2e34632e5126" translate="yes" xml:space="preserve">
          <source>LIBS</source>
          <target state="translated">LIBS</target>
        </trans-unit>
        <trans-unit id="6e0ad2b047414107e8ce2f294fa40d216b5b68f9" translate="yes" xml:space="preserve">
          <source>LICENCE</source>
          <target state="translated">LICENCE</target>
        </trans-unit>
        <trans-unit id="0417c3cd20e5957970bf6e0315ba11993f41a4ef" translate="yes" xml:space="preserve">
          <source>LICENCE AND COPYRIGHT</source>
          <target state="translated">ЛИЦЕНЗИЯ И АВТОРСКОЕ ПРАВО</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="00e15f5838907cd7e1d4b00639d57748e292cb00" translate="yes" xml:space="preserve">
          <source>LIGHTWEIGHT CALLBACKS</source>
          <target state="translated">ОБЛЕГЧЁННЫЕ ОБРАТНЫЕ ВЫЗОВЫ</target>
        </trans-unit>
        <trans-unit id="6a872fa8c01524148478fdbe5a27dd0a23bde93f" translate="yes" xml:space="preserve">
          <source>LIKELY</source>
          <target state="translated">LIKELY</target>
        </trans-unit>
        <trans-unit id="929a3a64284b80f705b148843a13caea7da8d500" translate="yes" xml:space="preserve">
          <source>LIMITATIONS</source>
          <target state="translated">LIMITATIONS</target>
        </trans-unit>
        <trans-unit id="e0e14c87e0e2d089b660f73f34d498e64b436810" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of *-x*</source>
          <target state="translated">ОГРАНИЧЕНИЯ *-x*</target>
        </trans-unit>
        <trans-unit id="3850674ed5ef7e98d02bcb7884ce26a4ad1f0c16" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of -x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582303292e0d9bb459bbce59d367e726e77b22ef" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of &lt;b&gt;-x&lt;/b&gt;</source>
          <target state="translated">ОГРАНИЧЕНИЯ &lt;b&gt;-x&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="83fa9b97f00ca753b1e5690c43dd3d3361c9665b" translate="yes" xml:space="preserve">
          <source>LIMITS</source>
          <target state="translated">LIMITS</target>
        </trans-unit>
        <trans-unit id="528a45acf62927f5e3020d13509848f28121f5ca" translate="yes" xml:space="preserve">
          <source>LINE</source>
          <target state="translated">LINE</target>
        </trans-unit>
        <trans-unit id="0d7f037733ef398e4fa6caee3e4a76955c742eba" translate="yes" xml:space="preserve">
          <source>LINES</source>
          <target state="translated">LINES</target>
        </trans-unit>
        <trans-unit id="245f22e09d9e6429d729e76e192f663a73a52190" translate="yes" xml:space="preserve">
          <source>LINES_LEFT</source>
          <target state="translated">LINES_LEFT</target>
        </trans-unit>
        <trans-unit id="5a777a56deb32bdeb14873f18eb176dd79982214" translate="yes" xml:space="preserve">
          <source>LINKLIST</source>
          <target state="translated">LINKLIST</target>
        </trans-unit>
        <trans-unit id="2868dce7325577845cbfb4e0cec3533ac2b747a5" translate="yes" xml:space="preserve">
          <source>LINKTYPE</source>
          <target state="translated">LINKTYPE</target>
        </trans-unit>
        <trans-unit id="735cf1665d0fd36f4865e4bc7439abe369572e04" translate="yes" xml:space="preserve">
          <source>LIST</source>
          <target state="translated">LIST</target>
        </trans-unit>
        <trans-unit id="ec269b52cf8883c42dea5c960c258385e031be48" translate="yes" xml:space="preserve">
          <source>LIST DATA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c717fe4bbb26a57f5091a39f5ae5c04c8ba67f80" translate="yes" xml:space="preserve">
          <source>LIST OF LANGUAGES</source>
          <target state="translated">СПИСОК ЯЗЫКОВ</target>
        </trans-unit>
        <trans-unit id="7de1e2b32d16e9fef7b2a9299320e7f3351fbed7" translate="yes" xml:space="preserve">
          <source>LIST OF UTILITIES</source>
          <target state="translated">СПИСОК УТИЛИТ</target>
        </trans-unit>
        <trans-unit id="567a6688f397cbb26479212b5e88b04513465d6e" translate="yes" xml:space="preserve">
          <source>LIST-REDUCTION FUNCTIONS</source>
          <target state="translated">ФУНКЦИИ УМЕНЬШЕНИЯ СПИСКА</target>
        </trans-unit>
        <trans-unit id="143295635a11822b74bfc416ad32ab68ac277469" translate="yes" xml:space="preserve">
          <source>LISTENING FOR EVENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79350be1daad6ac703bf5442efacc2b70bd2d6d8" translate="yes" xml:space="preserve">
          <source>LISTs do automatic interpolation of sublists. That is, when a LIST is evaluated, each element of the list is evaluated in list context, and the resulting list value is interpolated into LIST just as if each individual element were a member of LIST. Thus arrays and hashes lose their identity in a LIST--the list</source>
          <target state="translated">Списки делают автоматическую интерполяцию подлистов.То есть,когда оценивается СПИСОК,каждый элемент списка оценивается в контексте списка,а полученное значение списка интерполируется в СПИСОК так же,как если бы каждый отдельный элемент был членом СПИСОК.Таким образом,массивы и хэши теряют свою идентичность в СПИСОКЕ-списке.</target>
        </trans-unit>
        <trans-unit id="755d87179ae52e75a5bb95a78c2b37c1c06b5cfe" translate="yes" xml:space="preserve">
          <source>LNM$FILE_DEV</source>
          <target state="translated">LNM$FILE_DEV</target>
        </trans-unit>
        <trans-unit id="6747cb39338593bcc94d449a6ee06b08744bc3ce" translate="yes" xml:space="preserve">
          <source>LOADING DRIVERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b95b1479e9e1e6747637c53ec6e7b5b14710300" translate="yes" xml:space="preserve">
          <source>LOCALE</source>
          <target state="translated">LOCALE</target>
        </trans-unit>
        <trans-unit id="ff495344ff0fb9c5d5d9ca658b1dad0e61447a28" translate="yes" xml:space="preserve">
          <source>LOCALE CATEGORIES</source>
          <target state="translated">МЕСТНЫЕ КАТЕГОРИИ</target>
        </trans-unit>
        <trans-unit id="169a463b713e3988d9c565945a1d24d03d787111" translate="yes" xml:space="preserve">
          <source>LOCALE PROBLEMS</source>
          <target state="translated">МЕСТНЫЕ ПРОБЛЕМЫ</target>
        </trans-unit>
        <trans-unit id="075620a74284e72caa558c43e5ac902b3bd47d6f" translate="yes" xml:space="preserve">
          <source>LOGDIR</source>
          <target state="translated">LOGDIR</target>
        </trans-unit>
        <trans-unit id="39f15a969419d44e933dbe07a4c0bebe3f003b8b" translate="yes" xml:space="preserve">
          <source>LOGGING</source>
          <target state="translated">LOGGING</target>
        </trans-unit>
        <trans-unit id="95b6b6c48c6cb1e24e041085cc38cb73e88d737e" translate="yes" xml:space="preserve">
          <source>LOOSE MATCHES</source>
          <target state="translated">СООТВЕТСТВУЮЩИЕ СООБЩЕНИЯ</target>
        </trans-unit>
        <trans-unit id="7c472534c424a35d726eafe69cf1b120cf34c7c5" translate="yes" xml:space="preserve">
          <source>LPT1</source>
          <target state="translated">LPT1</target>
        </trans-unit>
        <trans-unit id="4d71de40d2ab4755f078c64dc10f3df863c7dc76" translate="yes" xml:space="preserve">
          <source>LPT2</source>
          <target state="translated">LPT2</target>
        </trans-unit>
        <trans-unit id="dd4d7e2da6df8d44c6d4b3d53b6a80f8f29324f4" translate="yes" xml:space="preserve">
          <source>LVRET</source>
          <target state="translated">LVRET</target>
        </trans-unit>
        <trans-unit id="18cd8d5a0349b94405db9dec7298507ccea49b05" translate="yes" xml:space="preserve">
          <source>LaTeX docs</source>
          <target state="translated">LaTeX-документы</target>
        </trans-unit>
        <trans-unit id="a1b829eae747d240a349da9f0a9a29b98303f5a9" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;last %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f82157ea2c43397258b632846b3564c599e77f" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;next %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a081b428c42101382e62175975723a17e6430c" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;redo %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f308ee988ef0e728f295587e6cbde4a2216497cd" translate="yes" xml:space="preserve">
          <source>Lancaster Concensus: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/lancaster-consensus.md&quot;&gt;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/lancaster-consensus.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="f70518aa15c2b8187c80ac13806c15fba56111e6" translate="yes" xml:space="preserve">
          <source>Language Classes</source>
          <target state="translated">Языковые классы</target>
        </trans-unit>
        <trans-unit id="cfb711d350591217fd017e0b7ddd59e362322862" translate="yes" xml:space="preserve">
          <source>Language Extensions and Documentation Tools</source>
          <target state="translated">Расширения языка и инструменты документирования</target>
        </trans-unit>
        <trans-unit id="6bd54d34369f11dcd172dcc70f872fcab4fd9483" translate="yes" xml:space="preserve">
          <source>Language Handle Attributes and Internals</source>
          <target state="translated">Атрибуты языковых рукояток и интернэшнл</target>
        </trans-unit>
        <trans-unit id="c91e4f4c0ce2f8eae1ea5e261c4add9fa7392039" translate="yes" xml:space="preserve">
          <source>Language Specs</source>
          <target state="translated">Языковые спецификации</target>
        </trans-unit>
        <trans-unit id="f9d8878de4ae46e5debd26f638420ea68be31544" translate="yes" xml:space="preserve">
          <source>Language classes are what YourProjClass-&amp;gt;get_handle will try to load. It will look for them by taking each language-tag (&lt;b&gt;skipping&lt;/b&gt; it if it doesn't look like a language-tag or locale-tag!), turning it to all lowercase, turning dashes to underscores, and appending it to YourProjClass . &quot;::&quot;. So this:</source>
          <target state="translated">Языковые классы - это то, что YourProjClass-&amp;gt; get_handle попытается загрузить. Он будет искать их, беря каждый языковой тег ( &lt;b&gt;пропуская&lt;/b&gt; его, если он не похож на языковой тег или языковой тег!), Переводя его на строчные буквы, превращая тире в подчеркивание и добавляя его в YourProjClass. &quot;::&quot;. Итак, это:</target>
        </trans-unit>
        <trans-unit id="747c3b7de1d3c3e77b9c7320590e8b1ede8c25e3" translate="yes" xml:space="preserve">
          <source>Language classes may derive from other language classes (although they should have &quot;use</source>
          <target state="translated">Классы языка могут происходить из других языковых классов (хотя они должны иметь &quot;use</target>
        </trans-unit>
        <trans-unit id="a1e10c58f87505ae028c597e6cc528cbbe1058b2" translate="yes" xml:space="preserve">
          <source>Language tags are a formalism, described in RFC 3066 (obsoleting 1766), for declaring what language form (language and possibly dialect) a given chunk of information is in.</source>
          <target state="translated">Языковые теги-это формализм,описанный в RFC 3066 (устаревший 1766),для декларирования того,в какой языковой форме (язык и,возможно,диалект)находится данный фрагмент информации.</target>
        </trans-unit>
        <trans-unit id="97e909840ec23e6aa4c68a221630c55bfbbb900a" translate="yes" xml:space="preserve">
          <source>Language tags are not case-sensitive. en-US, en-us, En-Us, etc., are all the same tag, and denote the same language.</source>
          <target state="translated">Языковые теги не чувствительны к регистру.en-US,en-us,En-Us и т.д.,все они являются одними и теми же тегами и обозначают один и тот же язык.</target>
        </trans-unit>
        <trans-unit id="2041c3756bf5afe1a1cc3301a6ebbbd4f47a0037" translate="yes" xml:space="preserve">
          <source>Language tags are not country codes. In fact, they are often distinct codes, as with language tag ja for Japanese, and ISO 3166 country code &lt;code&gt;.jp&lt;/code&gt; for Japan.</source>
          <target state="translated">Языковые теги не являются кодами стран. Фактически, это часто разные коды, например языковой тег ja для японского языка и код страны ISO 3166 &lt;code&gt;.jp&lt;/code&gt; для Японии.</target>
        </trans-unit>
        <trans-unit id="6108174a71e0210309b5a122717007cd6591f45e" translate="yes" xml:space="preserve">
          <source>Language tags are not for computer languages.</source>
          <target state="translated">Языковые теги не предназначены для компьютерных языков.</target>
        </trans-unit>
        <trans-unit id="6368278c82dd6595f994cb8b61fde8b578ee7f10" translate="yes" xml:space="preserve">
          <source>Language tags are not locale IDs. A locale ID is written with a &quot;_&quot; instead of a &quot;-&quot;, (almost?) always matches &lt;code&gt;&lt;a href=&quot;../../functions/m&quot;&gt;m/^\w\w_\w\w\b/&lt;/a&gt;&lt;/code&gt;, and</source>
          <target state="translated">Языковые теги не являются идентификаторами локали. Идентификатор локали записывается с помощью символа &amp;laquo;_&amp;raquo; вместо &amp;laquo;-&amp;raquo;, (почти?) Всегда соответствует &lt;code&gt;&lt;a href=&quot;../../functions/m&quot;&gt;m/^\w\w_\w\w\b/&lt;/a&gt;&lt;/code&gt; и</target>
        </trans-unit>
        <trans-unit id="c3a10dc31440ea548103f890434cb5dc0e0cf98f" translate="yes" xml:space="preserve">
          <source>Language tags are not locale IDs. A locale ID is written with a &quot;_&quot; instead of a &quot;-&quot;, (almost?) always matches &lt;code&gt;m/^\w\w_\w\w\b/&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edaa0c28ca3e32511fbcd5b5f49058ccc534792" translate="yes" xml:space="preserve">
          <source>Language-Specific</source>
          <target state="translated">Language-Specific</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">Поддержка больших файлов</target>
        </trans-unit>
        <trans-unit id="cfd4c46c9150c3e9cafc48d2cf89b769398b7ba2" translate="yes" xml:space="preserve">
          <source>Large language group.</source>
          <target state="translated">Большая языковая группа.</target>
        </trans-unit>
        <trans-unit id="68cb5c276851e088e954a75127561094108d7ebb" translate="yes" xml:space="preserve">
          <source>Large numbers of other programmers will be using your code modules.</source>
          <target state="translated">Большое количество других программистов будут использовать ваши кодовые модули.</target>
        </trans-unit>
        <trans-unit id="aed9d519447abe0e1e87e2be7e3184966a86c56b" translate="yes" xml:space="preserve">
          <source>Larger increments or decrements are handy in those cases where a thread needs to check out or return a number of resources at once.</source>
          <target state="translated">Большие приращения или постановления удобны в тех случаях,когда поток должен проверить или вернуть сразу несколько ресурсов.</target>
        </trans-unit>
        <trans-unit id="fd62837b713bdee00d46e7ce620e1a597b3acf56" translate="yes" xml:space="preserve">
          <source>Larry Wall</source>
          <target state="translated">Стена Ларри</target>
        </trans-unit>
        <trans-unit id="d125a04b7cfbc6bf9a0d7e4500f4ff8af7def2b3" translate="yes" xml:space="preserve">
          <source>Larry Wall &amp;lt;larry@wall.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9800616a976bc743bc49de05b3ff6a81a8fed2bf" translate="yes" xml:space="preserve">
          <source>Larry Wall &amp;lt;larry@wall.org&amp;gt;, with the help of oodles of other folks.</source>
          <target state="translated">Ларри Уолл &amp;lt;larry@wall.org&amp;gt; с помощью кучи других людей.</target>
        </trans-unit>
        <trans-unit id="50431f0b84e94e89d59726aa67764d4b5cb64130" translate="yes" xml:space="preserve">
          <source>Larry Wall and others</source>
          <target state="translated">Ларри Уолл и другие</target>
        </trans-unit>
        <trans-unit id="0fb4b4d75483396b0cb6c4053090cf1353b0f053" translate="yes" xml:space="preserve">
          <source>Larry Wall designed the elegant inherited bootstrap mechanism and implemented the first Perl 5 dynamic loader using it.</source>
          <target state="translated">Larry Wall спроектировал элегантный унаследованный механизм загрузки и реализовал с его помощью первый динамический погрузчик Perl 5.</target>
        </trans-unit>
        <trans-unit id="49cef125f502490a3eaa452e5063337afd4e5415" translate="yes" xml:space="preserve">
          <source>Larry Wall, Sean M. Burke</source>
          <target state="translated">Ларри Уолл,Шон М.Берк.</target>
        </trans-unit>
        <trans-unit id="cad8518108cca44400e2368862a0f1a16bff95c7" translate="yes" xml:space="preserve">
          <source>Larry has his reasons for each of these things, but he doesn't claim that everyone else's mind works the same as his does.</source>
          <target state="translated">У Ларри есть свои причины для каждой из этих вещей,но он не утверждает,что чей-то разум работает так же,как у него.</target>
        </trans-unit>
        <trans-unit id="3e11f8268af6857ace69f95b629b0d80778d0d6d" translate="yes" xml:space="preserve">
          <source>Larry is allowed to change his mind about any matter at a later date, regardless of whether he previously invoked Rule 1.</source>
          <target state="translated">Ларри разрешается изменить свое решение по любому вопросу позднее,независимо от того,ссылался ли он ранее на правило 1.</target>
        </trans-unit>
        <trans-unit id="e3d699c187f5eebff127e90268deebe55f0277f7" translate="yes" xml:space="preserve">
          <source>Larry is always by definition right about how Perl should behave. This means he has final veto power on the core functionality.</source>
          <target state="translated">Ларри по определению всегда прав насчет того,как должен вести себя Перл.Это означает,что у него есть окончательное право вето на функционал ядра.</target>
        </trans-unit>
        <trans-unit id="91247cb31b4e3f24a173a3ed4edb3fbe905e9dfa" translate="yes" xml:space="preserve">
          <source>Larry said &quot;Although the Perl Slogan is</source>
          <target state="translated">Ларри сказал:&quot;Хотя слоган &quot;Перл&quot;...</target>
        </trans-unit>
        <trans-unit id="8840809999231d8845f9dcc8eb994457fd02a531" translate="yes" xml:space="preserve">
          <source>Larry sees Perl development along the lines of the US government: there's the Legislature (the porters), the Executive branch (the -pumpking), and the Supreme Court (Larry). The legislature can discuss and submit patches to the executive branch all they like, but the executive branch is free to veto them. Rarely, the Supreme Court will side with the executive branch over the legislature, or the legislature over the executive branch. Mostly, however, the legislature and the executive branch are supposed to get along and work out their differences without impeachment or court cases.</source>
          <target state="translated">Ларри видит развитие Perl по аналогии с правительством США:есть законодательная власть (носильщики),исполнительная власть (-насос)и Верховный суд (Ларри).Законодательная власть может обсуждать и представлять патчи исполнительной власти сколько угодно,но исполнительная власть свободна накладывать на них вето.Редко бывает,что Верховный суд встает на сторону исполнительной власти,а законодательная-исполнительной.В большинстве случаев,однако,предполагается,что законодательная и исполнительная ветви власти должны ладить и решать свои разногласия без импичмента или судебных дел.</target>
        </trans-unit>
        <trans-unit id="ae001311ff213d6955f7360f41d0eb019566259e" translate="yes" xml:space="preserve">
          <source>Lars Dieckow &amp;lt;daxim@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c4e4485ad3dbbdb5b5dd2e9dedc2315a7311d5" translate="yes" xml:space="preserve">
          <source>Last Changed</source>
          <target state="translated">Последний изменённый</target>
        </trans-unit>
        <trans-unit id="1210639f474f0d343df95007771fdc202b411de7" translate="yes" xml:space="preserve">
          <source>Last In, First Out. See also &lt;b&gt;FIFO&lt;/b&gt;. A LIFO is usually called a &lt;b&gt;stack&lt;/b&gt;.</source>
          <target state="translated">Последний вошел - первым ушел. См. Также &lt;b&gt;FIFO&lt;/b&gt; . LIFO обычно называют &lt;b&gt;стеком&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="40830c73142a53064766f6ffa38ec5fccd97ec73" translate="yes" xml:space="preserve">
          <source>Last Updated: Fri, 29 Oct 1999 22:50:30 +0200</source>
          <target state="translated">Последнее обновление:Приятель,29 октября 1999 22:50:30 +0200</target>
        </trans-unit>
        <trans-unit id="f1e5fc7462efd81797093d9980b1aa8171197971" translate="yes" xml:space="preserve">
          <source>Last but not least, here are various tips for safer coding. See also &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt; for libc/stdio replacements one should use.</source>
          <target state="translated">И последнее, но не менее важное: вот несколько советов по безопасному программированию. См. Также &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt; для замены libc / stdio, которую следует использовать.</target>
        </trans-unit>
        <trans-unit id="dceffa1b326ba5ef1523c69acacd202e09a06fa6" translate="yes" xml:space="preserve">
          <source>Last modified 2013-04-29.</source>
          <target state="translated">Последняя модификация 2013-04-29.</target>
        </trans-unit>
        <trans-unit id="5c3f1c04106319751d7e999882c029924d60d858" translate="yes" xml:space="preserve">
          <source>Last revised 14-Feb-1996, for Perl 5.002.</source>
          <target state="translated">Последний раз пересмотрен 14 февраля-1996 года,для Perl 5.002.</target>
        </trans-unit>
        <trans-unit id="c3eb2ac9f32e61251e1875ad9708ab6315be2573" translate="yes" xml:space="preserve">
          <source>Last revised 8-Oct-2010, for Perl 5.13.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c838bd278b91a142d60ea0e71aa5a59ad40e1552" translate="yes" xml:space="preserve">
          <source>Last update: 2008-10-29</source>
          <target state="translated">Последнее обновление:2008-10-29</target>
        </trans-unit>
        <trans-unit id="fc7ec2c58f8d11214b25d3966287144f54470cfe" translate="yes" xml:space="preserve">
          <source>Last update: Tue Apr 26 18:30:55 MDT 2011</source>
          <target state="translated">Последнее обновление:Tue Apr 26 18:30:55 MDT 2011</target>
        </trans-unit>
        <trans-unit id="fedbd273e34471c334909a9855d4fede2b18756d" translate="yes" xml:space="preserve">
          <source>Last updated for perl 5.23.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25a330cf94331e783b24031686ddd1e4f1da4ff" translate="yes" xml:space="preserve">
          <source>Last updated: 07 October 2014</source>
          <target state="translated">Последнее обновление:07 октября 2014 года</target>
        </trans-unit>
        <trans-unit id="e1651fd9e16da0fb6683f8baa5303f215ef932af" translate="yes" xml:space="preserve">
          <source>Last updated: 2012-02-08</source>
          <target state="translated">Последнее обновление:2012-02-08</target>
        </trans-unit>
        <trans-unit id="f1b2c64ff3a41edcd2ecadfbbdf23ab6e9aa3f07" translate="yes" xml:space="preserve">
          <source>Last updated: 30 April 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152779e4c8b9d8d930bb573d8f364d8d186f33dd" translate="yes" xml:space="preserve">
          <source>Lastly, the</source>
          <target state="translated">Наконец</target>
        </trans-unit>
        <trans-unit id="4d407485e169287b1c2aa3f4a4b85bc45bed7a87" translate="yes" xml:space="preserve">
          <source>Lastly, there is a special method for working under &lt;b&gt;-T&lt;/b&gt; and setuid/gid scripts:</source>
          <target state="translated">Наконец, есть специальный метод работы со скриптами &lt;b&gt;-T&lt;/b&gt; и setuid / gid:</target>
        </trans-unit>
        <trans-unit id="202e6182477b0bfd7c1ee15e20cf42a59755cdd1" translate="yes" xml:space="preserve">
          <source>Laszlo Molnar,</source>
          <target state="translated">Ласло Молнар,</target>
        </trans-unit>
        <trans-unit id="526c6b8794fab24bec118be16f23def6a69bab1c" translate="yes" xml:space="preserve">
          <source>Lately, ignoring or actively opposing compatibility with earlier versions of Perl has come into vogue. Sometimes, a change is proposed which wants to usurp syntax which previously had another meaning. Sometimes, a change wants to improve previously-crazy semantics.</source>
          <target state="translated">В последнее время в моду входит игнорирование или активное противодействие совместимости с более ранними версиями Perl.Иногда предлагается изменение,которое хочет узурпировать синтаксис,который ранее имел другое значение.Иногда изменение хочет улучшить ранее сумасшедшую семантику.</target>
        </trans-unit>
        <trans-unit id="36e7725e6d39280db73b49ece64538b8d66586a2" translate="yes" xml:space="preserve">
          <source>Later in the life of the object the methods may be queries with get() method and set() method (which accept multiple arguments).</source>
          <target state="translated">В дальнейшем в жизни объекта методами могут быть запросы с помощью метода get()и метода set()(которые принимают несколько аргументов).</target>
        </trans-unit>
        <trans-unit id="6e71bb4c4e3671df8bee4472c56c5267f4268f7f" translate="yes" xml:space="preserve">
          <source>Later invocations of coloralias() with the same ALIAS will override earlier aliases. There is no way to remove an alias.</source>
          <target state="translated">Более поздние вызовы coloralias()с тем же ALIAS будут перекрывать более ранние псевдонимы.Нет способа удалить псевдоним.</target>
        </trans-unit>
        <trans-unit id="c58245493d9e35fde84415d863d1963037986377" translate="yes" xml:space="preserve">
          <source>Later on, we'll pass this to Configure through -Dtargetenv</source>
          <target state="translated">Позже мы передадим это в &quot;Конфигурация&quot; через &quot;Дтаргенв&quot;.</target>
        </trans-unit>
        <trans-unit id="f8e3805b10e4c4f4b08c327d5a5b182642f7a406" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; on CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads&quot;&gt;http://search.cpan.org/search?module=threads&lt;/a&gt;</source>
          <target state="translated">Последняя версия &lt;a href=&quot;threads&quot;&gt;потоков&lt;/a&gt; на CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads&quot;&gt;http://search.cpan.org/search?module=threads&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab352e5ac1e025a34124fd8091aaf11aba38a34e" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; on CPAN: &lt;a href=&quot;https://metacpan.org/pod/threads&quot;&gt;https://metacpan.org/pod/threads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dfbb7924a9e791a0e250e51336f5378e1751eb" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt; on CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads%3A%3Ashared&quot;&gt;http://search.cpan.org/search?module=threads%3A%3Ashared&lt;/a&gt;</source>
          <target state="translated">Последняя версия &lt;a href=&quot;threads/shared&quot;&gt;потоков :: опубликована&lt;/a&gt; на CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads%3A%3Ashared&quot;&gt;http://search.cpan.org/search?module=threads%3A%3Ashared&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dd3a57a43ed9b942b39841e2da67e396eb27a54" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; on CPAN: &lt;a href=&quot;https://metacpan.org/pod/threads::shared&quot;&gt;https://metacpan.org/pod/threads::shared&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e8cec14c4a568ca92f36bd23fabb426a1d8b2d" translate="yes" xml:space="preserve">
          <source>Latin 1 (ISO 8859-1)</source>
          <target state="translated">Латинский 1 (ISO 8859-1)</target>
        </trans-unit>
        <trans-unit id="c5f5bb3b350774d7cda57104c55fb6c82b7ae7d9" translate="yes" xml:space="preserve">
          <source>Latvia</source>
          <target state="translated">Latvia</target>
        </trans-unit>
        <trans-unit id="35bde1b1448a3634844f710f6f0c19bb97cc5c1e" translate="yes" xml:space="preserve">
          <source>Laundering and Detecting Tainted Data</source>
          <target state="translated">Отмывание и обнаружение запятнанных данных</target>
        </trans-unit>
        <trans-unit id="467f628abddb4dcd106efd4dcaeb617681eb8f7d" translate="yes" xml:space="preserve">
          <source>Layer allows buffer snooping.</source>
          <target state="translated">Слой позволяет буферное шпионирование.</target>
        </trans-unit>
        <trans-unit id="cb8d6c688037b3d7cd03ae365bbe000a64676df9" translate="yes" xml:space="preserve">
          <source>Layer can translate between &quot;\n&quot; and CRLF line ends.</source>
          <target state="translated">Слой может переводить между &quot;\n&quot; и концами строк CRLF.</target>
        </trans-unit>
        <trans-unit id="b12b05c07cab44e1c8dc0e859b671ac3d7cccd05" translate="yes" xml:space="preserve">
          <source>Layer is line buffered. Write data should be passed to next layer down whenever a &quot;\n&quot; is seen. Any data beyond the &quot;\n&quot; should then be processed.</source>
          <target state="translated">Слой буферизован.Записываемые данные должны передаваться на следующий слой вниз всякий раз,когда видно &quot;\n&quot;.Любые данные за пределами &quot;\n&quot; должны быть обработаны.</target>
        </trans-unit>
        <trans-unit id="63a50a8c52a6d0d048f4fa59a33a9d88e95e80ac" translate="yes" xml:space="preserve">
          <source>Layer is performing Win32-like &quot;\n&quot; mapped to CR,LF for output and CR,LF mapped to &quot;\n&quot; for input. Normally the provided &quot;crlf&quot; layer is the only layer that need bother about this. &lt;code&gt;PerlIO_binmode()&lt;/code&gt; will mess with this flag rather than add/remove layers if the &lt;code&gt;PERLIO_K_CANCRLF&lt;/code&gt; bit is set for the layers class.</source>
          <target state="translated">Уровень выполняет Win32-подобный &amp;laquo;\ n&amp;raquo;, отображаемый на CR, LF для вывода и CR, LF, отображаемый на &amp;laquo;\ n&amp;raquo; для ввода. Обычно предоставленный слой &amp;laquo;crlf&amp;raquo; - единственный слой, который нужно беспокоить по этому поводу. &lt;code&gt;PerlIO_binmode()&lt;/code&gt; будет использовать этот флаг вместо добавления / удаления слоев, если для класса слоев установлен бит &lt;code&gt;PERLIO_K_CANCRLF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb03ef93aa3ad216c22ac53a17958f564d0c42cd" translate="yes" xml:space="preserve">
          <source>Layer is unbuffered - i.e. write to next layer down should occur for each write to this layer.</source>
          <target state="translated">Слой не буферизован-т.е.для каждой записи в этот слой должна происходить запись в следующий слой.</target>
        </trans-unit>
        <trans-unit id="9f3401294ca5c3ec99fdd44fd405f62db10c762f" translate="yes" xml:space="preserve">
          <source>Layer which calls &lt;code&gt;fread&lt;/code&gt; , &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fseek&lt;/code&gt; /&lt;code&gt;ftell&lt;/code&gt; etc. Note that as this is &quot;real&quot; stdio it will ignore any layers beneath it and go straight to the operating system via the C library as usual.</source>
          <target state="translated">Слой, который вызывает &lt;code&gt;fread&lt;/code&gt; , &lt;code&gt;fwrite&lt;/code&gt; и &lt;code&gt;fseek&lt;/code&gt; / &lt;code&gt;ftell&lt;/code&gt; и т. Д. Обратите внимание, что, поскольку это &amp;laquo;настоящий&amp;raquo; stdio, он будет игнорировать любые слои под ним и, как обычно, перейдет прямо в операционную систему через библиотеку C.</target>
        </trans-unit>
        <trans-unit id="433c9dfe2472dbf21d6a258158fca98f65d2907f" translate="yes" xml:space="preserve">
          <source>Layer which calls &lt;code&gt;fread&lt;/code&gt;, &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fseek&lt;/code&gt;/&lt;code&gt;ftell&lt;/code&gt; etc. Note that as this is &quot;real&quot; stdio it will ignore any layers beneath it and go straight to the operating system via the C library as usual. This layer implements both low level IO and buffering, but is rarely used on modern architectures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f055f18aeadcf43179462eaf15e54d98e16c8b02" translate="yes" xml:space="preserve">
          <source>Layers</source>
          <target state="translated">Layers</target>
        </trans-unit>
        <trans-unit id="1657b47a449f7c4cf8948737db9fde6acf3a60e8" translate="yes" xml:space="preserve">
          <source>Layers are specified with a leading colon by convention. You can specify a stack of multiple layers as a space-separated string. See &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for more information on the available layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff9f300fa7d1bbc3f849481cc645ec702a3625b" translate="yes" xml:space="preserve">
          <source>Layers can be made available by extension modules. When an unknown layer is encountered the PerlIO code will perform the equivalent of :</source>
          <target state="translated">Слои могут быть доступны с помощью модулей расширения.При обнаружении неизвестного слоя PerlIO-код будет выполнять эквивалент :</target>
        </trans-unit>
        <trans-unit id="0e3178f7991d7264f18bf3f06ccf8bf03e08f4f6" translate="yes" xml:space="preserve">
          <source>Layers in action.</source>
          <target state="translated">Слои в действии.</target>
        </trans-unit>
        <trans-unit id="90a85751546d30690f93cf14e09e26b8d8de391b" translate="yes" xml:space="preserve">
          <source>Layers it makes sense to include in the PERLIO environment variable are briefly summarized below. For more details see &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;.</source>
          <target state="translated">Слои, которые имеет смысл включать в переменную среды PERLIO, кратко описаны ниже. Подробнее см. &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69114be10292080f3d4afeef56cf245603257cc6" translate="yes" xml:space="preserve">
          <source>Layers vs Disciplines</source>
          <target state="translated">Слои против Дисциплин</target>
        </trans-unit>
        <trans-unit id="a41c1d3ed9255c2fe23288b7c102a2dc110d982d" translate="yes" xml:space="preserve">
          <source>Lazy people and beginners may now stop reading the manual.</source>
          <target state="translated">Ленивые люди и новички могут теперь перестать читать руководство.</target>
        </trans-unit>
        <trans-unit id="b9f359f1580c6817c9a64d72d3882cfe9dcbaef9" translate="yes" xml:space="preserve">
          <source>Le Sergent, T. and B. Berthomieu. &quot;Incremental MultiThreaded Garbage Collection on Virtually Shared Memory Architectures&quot; in Memory Management: Proc. of the International Workshop IWMM 92, St. Malo, France, September 1992, Yves Bekkers and Jacques Cohen, eds. Springer, 1992, ISBN 3540-55940-X (real-life thread applications).</source>
          <target state="translated">Ле Сержант,Ти и Б.Бертомие.&quot;Инкрементальная многопоточная сборка мусора на виртуальных архитектурах общей памяти&quot; в разделе &quot;Управление памятью&quot;:Труды международного семинара IWMM 92,Сент-Мало,Франция,сентябрь 1992 г.,Ив Беккерс и Жак Коэн,под ред.Спрингер,1992 г.,ISBN 3540-55940-X (применение в реальной жизни).</target>
        </trans-unit>
        <trans-unit id="bd162d2f93cdcba4f68be85d18fd26ee09a12efb" translate="yes" xml:space="preserve">
          <source>Leading and trailing colons can be used together if you need positional parameter values without the names. Note that in the case below, the &lt;code&gt;PERL_API&lt;/code&gt; params are returned in alphabetical order.</source>
          <target state="translated">Начальные и конечные двоеточия можно использовать вместе, если вам нужны значения позиционных параметров без имен. Обратите внимание, что в приведенном ниже &lt;code&gt;PERL_API&lt;/code&gt; параметры PERL_API возвращаются в алфавитном порядке.</target>
        </trans-unit>
        <trans-unit id="21aea14ed2f508e6237030730dc68ea8c248a0f7" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de4e5c4a9c26aff3dbb9f05745a468eb0274d0" translate="yes" xml:space="preserve">
          <source>Leading and trailing zeros are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46907cff7c02a850b549a727a75b341cfa614b27" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19eb901d0541a10b461432e6635be906ecd8d19" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="translated">Начальные пробелы игнорируются без предупреждения, как и любые конечные нецифровые цифры, такие как десятичная точка ( &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; обрабатывает только неотрицательные целые числа, а не отрицательные целые числа или числа с плавающей запятой).</target>
        </trans-unit>
        <trans-unit id="fb2634197a046f8fbd1bb749b3d21bb890485f5f" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;code&gt;&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="translated">Начальные пробелы игнорируются без предупреждения, как и любые конечные нецифровые цифры, такие как десятичная точка ( &lt;code&gt;&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; обрабатывает только неотрицательные целые числа, а не отрицательные целые числа или числа с плавающей запятой).</target>
        </trans-unit>
        <trans-unit id="ba3f4ebacb603a1ffae736f19b872df26ac931b0" translate="yes" xml:space="preserve">
          <source>Learn Perl and rewrite it. Seriously, there's no simple converter. Things that are awkward to do in the shell are easy to do in Perl, and this very awkwardness is what would make a shell-&amp;gt;perl converter nigh-on impossible to write. By rewriting it, you'll think about what you're really trying to do, and hopefully will escape the shell's pipeline datastream paradigm, which while convenient for some matters, causes many inefficiencies.</source>
          <target state="translated">Изучите Perl и перепишите его. Серьезно, простого конвертера не существует. То, что неудобно делать в оболочке, легко делать в Perl, и именно из-за этой неуклюжести преобразователь shell-&amp;gt; perl почти невозможно написать. Переписав его, вы подумаете о том, что вы действительно пытаетесь сделать, и, надеюсь, избежите парадигмы потока данных конвейера оболочки, которая, хотя и удобна для некоторых вопросов, вызывает много неэффективности.</target>
        </trans-unit>
        <trans-unit id="4dd0a48cec0f53000c96d709bef9efb450bae6d8" translate="yes" xml:space="preserve">
          <source>Leaving out the Notify option usually defaults an SMTP service to its default behavior equivalent to ['FAILURE'] notifications only, but again this may be dependent upon your site's SMTP configuration.</source>
          <target state="translated">Оставляя опцию Notify (Уведомление),обычно по умолчанию служба SMTP выполняет по умолчанию поведение,эквивалентное только уведомлениям ['FAILURE'],но опять же,это может зависеть от конфигурации SMTP вашего сайта.</target>
        </trans-unit>
        <trans-unit id="a4c7551b205677232e62bc969aaaea5621b25584" translate="yes" xml:space="preserve">
          <source>Lee Johnson &amp;lt;notfadeaway at btinternet dot com&amp;gt;</source>
          <target state="translated">Ли Джонсон &amp;lt;notfadeaway at btinternet dot com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b6a5edc3102ea975638e0ce2bb8f6982f95bead8" translate="yes" xml:space="preserve">
          <source>Left and right padding with any character, creating a new string:</source>
          <target state="translated">Левая и правая подкладка с любым символом,создание новой строки:</target>
        </trans-unit>
        <trans-unit id="7f1c7df67c81bb16bff18c751738160fab5ff982" translate="yes" xml:space="preserve">
          <source>Left and right padding with any character, modifying &lt;code&gt;$text&lt;/code&gt; directly:</source>
          <target state="translated">Отступ слева и справа любым символом, напрямую изменяющий &lt;code&gt;$text&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="af98dcfaae79ce4ac9aa9fbbe9635687fe2fe178" translate="yes" xml:space="preserve">
          <source>Left offset from pos() to start match at.</source>
          <target state="translated">Смещение влево от pos()для начала матча.</target>
        </trans-unit>
        <trans-unit id="32ff2067f2a9f0deffe08043bfbad0999ed3babf" translate="yes" xml:space="preserve">
          <source>LeftString</source>
          <target state="translated">LeftString</target>
        </trans-unit>
        <trans-unit id="fb74bcaf76999b5ef8dae81b1022d842c093fe10" translate="yes" xml:space="preserve">
          <source>Legacy</source>
          <target state="translated">Legacy</target>
        </trans-unit>
        <trans-unit id="177a7c67030b56d701d66da14735a0847871d1fb" translate="yes" xml:space="preserve">
          <source>Legacy Character Sets</source>
          <target state="translated">Наборы исторических персонажей</target>
        </trans-unit>
        <trans-unit id="45890076a74f7ba49cb141341bf0a665659f9168" translate="yes" xml:space="preserve">
          <source>Legacy Encodings</source>
          <target state="translated">Кодировки наследия</target>
        </trans-unit>
        <trans-unit id="ca20c7f742784eaf8c9542c65094bd868679305e" translate="yes" xml:space="preserve">
          <source>Legacy multi byte EBCDIC code pages XXX.</source>
          <target state="translated">Наследие многобайтовый EBCDIC кодовые страницы XXX.</target>
        </trans-unit>
        <trans-unit id="7d1f21ee00bf8431c5da8e1a72603db078d1e391" translate="yes" xml:space="preserve">
          <source>Legacy usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632363f7b0b4709b3208536a8ec83f44895c04cc" translate="yes" xml:space="preserve">
          <source>Legacy wrapper fro &lt;a href=&quot;Test2::EventFacet::Trace&quot;&gt;Test2::EventFacet::Trace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14ba2ec2e45438ad3facc4d4b02bd06eedc0c59" translate="yes" xml:space="preserve">
          <source>Legacy, fixed-width encodings defined by the ISO 10646 standard. UCS-2 is a 16-bit encoding. Unlike UTF-16, UCS-2 is not extensible beyond &lt;code&gt;U+FFFF&lt;/code&gt; , because it does not use surrogates. UCS-4 is a 32-bit encoding, functionally identical to UTF-32 (the difference being that UCS-4 forbids neither surrogates nor code points larger than &lt;code&gt;0x10_FFFF&lt;/code&gt; ).</source>
          <target state="translated">Устаревшие кодировки фиксированной ширины, определенные стандартом ISO 10646. UCS-2 - это 16-битная кодировка. В отличие от UTF-16, UCS-2 не расширяется за пределы &lt;code&gt;U+FFFF&lt;/code&gt; , потому что он не использует суррогаты. UCS-4 - это 32-битная кодировка, функционально идентичная UTF-32 (разница в том, что UCS-4 не запрещает ни суррогаты, ни кодовые точки, превышающие &lt;code&gt;0x10_FFFF&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b6664ed1e448ada62088f03c80e41e23a96a928" translate="yes" xml:space="preserve">
          <source>Legacy, fixed-width encodings defined by the ISO 10646 standard. UCS-2 is a 16-bit encoding. Unlike UTF-16, UCS-2 is not extensible beyond &lt;code&gt;U+FFFF&lt;/code&gt;, because it does not use surrogates. UCS-4 is a 32-bit encoding, functionally identical to UTF-32 (the difference being that UCS-4 forbids neither surrogates nor code points larger than &lt;code&gt;0x10_FFFF&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bd3b0c39f79b172b2c117ae638fd62dd4f1072" translate="yes" xml:space="preserve">
          <source>Legacy, this is currently a no-op that returns 0;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a83ae1dc6e4e324ce120afa5a8e7b91193b805" translate="yes" xml:space="preserve">
          <source>Legal &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; constructs that match no characters</source>
          <target state="translated">Допустимые конструкции &lt;code&gt;\p{}&lt;/code&gt; и &lt;code&gt;\P{}&lt;/code&gt; , не содержащие символов</target>
        </trans-unit>
        <trans-unit id="b01926f0986a11c72cf140417a7b70c5868b0797" translate="yes" xml:space="preserve">
          <source>Legal \p{} and \P{} constructs that match no characters</source>
          <target state="translated">Юридический \p{}и \P{}конструкции,не содержащие символов.</target>
        </trans-unit>
        <trans-unit id="8b37e0171cc1c8f695fff30ed31b832cbddee2f1" translate="yes" xml:space="preserve">
          <source>Legend of characters above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f35de278fd2499acf694739f13d5aa76297107" translate="yes" xml:space="preserve">
          <source>Leif Eriksen &amp;lt;leif dot eriksen at bigpond dot com&amp;gt;</source>
          <target state="translated">Лейф Эриксен &amp;lt;leif dot eriksen at bigpond dot com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6115881c5ecab4a82072aab1fbcafeaf5ae5a302" translate="yes" xml:space="preserve">
          <source>Length of the name.</source>
          <target state="translated">Длина имени.</target>
        </trans-unit>
        <trans-unit id="1deb1eed10d40a0d45e6e2d30e54152b66733959" translate="yes" xml:space="preserve">
          <source>Length to truncate the argument list when the &lt;code&gt;frame&lt;/code&gt; option's bit 4 is set.</source>
          <target state="translated">Длина для усечения списка аргументов, когда установлен бит 4 параметра &lt;code&gt;frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d1a91bdc1315d2ef3c37c514f4e0b41950b2992" translate="yes" xml:space="preserve">
          <source>Lengths and Widths</source>
          <target state="translated">Длина и ширина</target>
        </trans-unit>
        <trans-unit id="d32b0b56fe2109af2e400ced24b899e2e7e6bed2" translate="yes" xml:space="preserve">
          <source>Leon Timmermans &amp;lt;fawaka@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4d25e02c52538201b9cb795664e476bf2e16bc" translate="yes" xml:space="preserve">
          <source>Leon Timmermans &amp;lt;leont@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c763c85942db32f81cf9ff36bb94bec3c42bb459" translate="yes" xml:space="preserve">
          <source>Let Perldoc check Pod for errors</source>
          <target state="translated">Пусть Perldoc проверит Pod на ошибки</target>
        </trans-unit>
        <trans-unit id="236e4f11c45d6dc4aeeb3e3ee19570b2cee88f0e" translate="yes" xml:space="preserve">
          <source>Let Perldoc convert Pod to nroff</source>
          <target state="translated">Пусть Perldoc превратит Pod в nroff.</target>
        </trans-unit>
        <trans-unit id="974a4ac3dfc20423e93f62bd6d7257d2efff060e" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as ... Pod!</source>
          <target state="translated">Пусть Перлдок изобразит Под как ...Бод!</target>
        </trans-unit>
        <trans-unit id="89789b71272a03c7a7d2242762bf736542d90944" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as RTF</source>
          <target state="translated">Пусть Perldoc визуализирует Pod как RTF</target>
        </trans-unit>
        <trans-unit id="a09176a65c16f1ea87e512ddbd1ebf583706c4be" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as XML</source>
          <target state="translated">Пусть Perldoc визуализирует Pod как XML</target>
        </trans-unit>
        <trans-unit id="9dd1bef5afa3543070a44bc3e67a86b4a5626d33" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as man pages</source>
          <target state="translated">Пусть Perldoc визуализирует Pod как man-страницы</target>
        </trans-unit>
        <trans-unit id="cb573ad7df52482623e8e613fdbfbc5f59abce18" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as plaintext</source>
          <target state="translated">Пусть Perldoc визуализирует Pod как простой текст.</target>
        </trans-unit>
        <trans-unit id="d279d6ba36fcd7e038b9dea67ba4516a9df60977" translate="yes" xml:space="preserve">
          <source>Let Perldoc use Tk::Pod to render Pod</source>
          <target state="translated">Пусть Perldoc использует Tk::Pod для рендеринга Pod</target>
        </trans-unit>
        <trans-unit id="757e98b6ce9386f0fb646f3598168b1185dc8359" translate="yes" xml:space="preserve">
          <source>Let it be noted that the flakiness of indirect filehandles is not related to whether they're strings, typeglobs, objects, or anything else. It's the syntax of the fundamental operators. Playing the object game doesn't help you at all here.</source>
          <target state="translated">Отметим,что хлопьевидность косвенных файловых ручек не связана с тем,являются ли они строками,печатными шрифтами,объектами или чем-то еще.Это синтаксис фундаментальных операторов.Играть в игру с объектами здесь совсем не помогает.</target>
        </trans-unit>
        <trans-unit id="1fe958b2a6ee1393677c318cb2bd2d9b92f2cd48" translate="yes" xml:space="preserve">
          <source>Let it be stressed that</source>
          <target state="translated">Подчеркнем,что</target>
        </trans-unit>
        <trans-unit id="b48514691c5b46e8297541220211ccc8b070316c" translate="yes" xml:space="preserve">
          <source>Let the index expire after how many days?</source>
          <target state="translated">Пусть срок действия индекса истекает через сколько дней?</target>
        </trans-unit>
        <trans-unit id="c1338ab2b041d88118e285278d063d0f4210f6e9" translate="yes" xml:space="preserve">
          <source>Let us now discuss Unicode character classes, most usually called &quot;character properties&quot;. These are represented by the &lt;code&gt;\p{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; escape sequence. The negation of this is &lt;code&gt;\P{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt;. For example, to match lower and uppercase characters,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6104cb2c1f6570ab357e214a9780db2e76a15675" translate="yes" xml:space="preserve">
          <source>Let us now discuss Unicode character classes, most usually called &quot;character properties&quot;. These are represented by the &lt;code&gt;\p{name}&lt;/code&gt; escape sequence. Closely associated is the &lt;code&gt;\P{name}&lt;/code&gt; property, which is the negation of the &lt;code&gt;\p{name}&lt;/code&gt; one. For example, to match lower and uppercase characters,</source>
          <target state="translated">Давайте теперь обсудим классы символов Unicode, которые чаще всего называются &amp;laquo;свойствами символов&amp;raquo;. Они представлены escape-последовательностью &lt;code&gt;\p{name}&lt;/code&gt; . Тесно связано свойство &lt;code&gt;\P{name}&lt;/code&gt; , которое является отрицанием свойства &lt;code&gt;\p{name}&lt;/code&gt; . Например, чтобы сопоставить символы нижнего и верхнего регистра,</target>
        </trans-unit>
        <trans-unit id="d5b865b005185fbf91c141118661a5d11906d96e" translate="yes" xml:space="preserve">
          <source>Let's also fix the MANIFEST file so that it accurately reflects the contents of our extension. The single line that says &quot;mylib&quot; should be replaced by the following three lines:</source>
          <target state="translated">Также исправим MANIFEST файл так,чтобы он точно отражал содержимое нашего расширения.Одиночная строка с надписью &quot;mylib&quot; должна быть заменена следующими тремя строками:</target>
        </trans-unit>
        <trans-unit id="f577dbeceee6187e31fa08c5d2d55b7b25ccea26" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a package &lt;code&gt;Cool::Foo&lt;/code&gt; , which includes &lt;code&gt;Cool::Foo&lt;/code&gt; and &lt;code&gt;Cool::Bar&lt;/code&gt; modules each having a separate XS file. First we use the following</source>
          <target state="translated">Предположим, у нас есть пакет &lt;code&gt;Cool::Foo&lt;/code&gt; , который включает модули &lt;code&gt;Cool::Foo&lt;/code&gt; и &lt;code&gt;Cool::Bar&lt;/code&gt; каждый из которых имеет отдельный XS-файл. Сначала воспользуемся следующим</target>
        </trans-unit>
        <trans-unit id="f9cbac3ad4b48c1f15258c105ba2e7521b56e827" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a package &lt;code&gt;Cool::Foo&lt;/code&gt;, which includes &lt;code&gt;Cool::Foo&lt;/code&gt; and &lt;code&gt;Cool::Bar&lt;/code&gt; modules each having a separate XS file. First we use the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0ca95dec9c2d9636bc8d5032b2d5f394a81699" translate="yes" xml:space="preserve">
          <source>Let's begin by looking a simple scalar which is holding a string.</source>
          <target state="translated">Начнем с простого скаляра,который держит строку.</target>
        </trans-unit>
        <trans-unit id="bf0b81e7623e4177f0bbf011b090062ef49e50b2" translate="yes" xml:space="preserve">
          <source>Let's consider how different regexps would match &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; :</source>
          <target state="translated">Давайте посмотрим, как разные регулярные выражения будут соответствовать &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6aca9f9e3f0c9c3d03f0d9c58efc7677ff8a8ff8" translate="yes" xml:space="preserve">
          <source>Let's consider how different regexps would match &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df805a589a3384de86f5cf73ad97a197cc80b2b6" translate="yes" xml:space="preserve">
          <source>Let's consider what happens when the filtered code includes another module with use:</source>
          <target state="translated">Рассмотрим,что произойдет,когда отфильтрованный код включит в себя другой модуль,который будет использоваться:</target>
        </trans-unit>
        <trans-unit id="ae779227ca7a97ab41c0486c107dd88686a00384" translate="yes" xml:space="preserve">
          <source>Let's create a TCP server on &lt;code&gt;localhost:3333&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bb45ed6a20ca29516eecb8c27b4f1a78faa8d9" translate="yes" xml:space="preserve">
          <source>Let's edit the .xs file by adding this to the end of the file:</source>
          <target state="translated">Давайте отредактируем файл .xs,добавив его в конец файла:</target>
        </trans-unit>
        <trans-unit id="f7e0018c031b17ac0ce35fd9db664c3f00e8a38b" translate="yes" xml:space="preserve">
          <source>Let's examine the cogs of this byte mill, one by one. There's the &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; call, creating the items we intend to stuff into the &lt;code&gt;$env&lt;/code&gt; buffer: to each key (in &lt;code&gt;$_&lt;/code&gt; ) it adds the &lt;code&gt;=&lt;/code&gt; separator and the hash entry value. Each triplet is packed with the template code sequence &lt;code&gt;A*A*Z*&lt;/code&gt; that is repeated according to the number of keys. (Yes, that's what the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; function returns in scalar context.) To get the very last null byte, we add a &lt;code&gt;0&lt;/code&gt; at the end of the &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; list, to be packed with &lt;code&gt;C&lt;/code&gt; . (Attentive readers may have noticed that we could have omitted the 0.)</source>
          <target state="translated">Давайте рассмотрим винтики этой байтовой мельницы по очереди. Есть вызов &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; , создающий элементы, которые мы собираемся &lt;code&gt;$env&lt;/code&gt; буфер $ env : к каждому ключу (в &lt;code&gt;$_&lt;/code&gt; ) он добавляет разделитель &lt;code&gt;=&lt;/code&gt; и значение хеш-записи. Каждый триплет упакован шаблонной кодовой последовательностью &lt;code&gt;A*A*Z*&lt;/code&gt; которая повторяется в соответствии с количеством ключей. (Да, это то , что &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; функции возвращает в скалярном контексте.) Для того, чтобы получить самую последние нулевые байты, мы добавим &lt;code&gt;0&lt;/code&gt; в конце &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; списка, чтобы быть упаковано с &lt;code&gt;C&lt;/code&gt; . (Внимательные читатели могли заметить, что мы могли опустить 0.)</target>
        </trans-unit>
        <trans-unit id="03dd34b9bc34d0893db5fe1238852061dbc9990c" translate="yes" xml:space="preserve">
          <source>Let's examine the cogs of this byte mill, one by one. There's the &lt;code&gt;map&lt;/code&gt; call, creating the items we intend to stuff into the &lt;code&gt;$env&lt;/code&gt; buffer: to each key (in &lt;code&gt;$_&lt;/code&gt;) it adds the &lt;code&gt;=&lt;/code&gt; separator and the hash entry value. Each triplet is packed with the template code sequence &lt;code&gt;A*A*Z*&lt;/code&gt; that is repeated according to the number of keys. (Yes, that's what the &lt;code&gt;keys&lt;/code&gt; function returns in scalar context.) To get the very last null byte, we add a &lt;code&gt;0&lt;/code&gt; at the end of the &lt;code&gt;pack&lt;/code&gt; list, to be packed with &lt;code&gt;C&lt;/code&gt;. (Attentive readers may have noticed that we could have omitted the 0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e554ae494be1d13390f7359c0d05574c54b38a5" translate="yes" xml:space="preserve">
          <source>Let's examine the whole implementation, for practice:</source>
          <target state="translated">Давайте рассмотрим всю реализацию,на практике:</target>
        </trans-unit>
        <trans-unit id="cb0a55a99d6403d9b27402fcdfbf4d6ed2e005f9" translate="yes" xml:space="preserve">
          <source>Let's explore this feature a little more. We'll begin with the equivalent of</source>
          <target state="translated">Давайте рассмотрим эту особенность немного подробнее.Начнем с эквивалента</target>
        </trans-unit>
        <trans-unit id="ebfb13b002928ab00b844746320f412762e65aa3" translate="yes" xml:space="preserve">
          <source>Let's give it a try:</source>
          <target state="translated">Давай попробуем:</target>
        </trans-unit>
        <trans-unit id="4e14ae2cc2c4249d7ae1307778537f0e17717e46" translate="yes" xml:space="preserve">
          <source>Let's have a look at how Perl sees &lt;code&gt;$a = $b + $c&lt;/code&gt; :</source>
          <target state="translated">Давайте посмотрим, как Perl видит &lt;code&gt;$a = $b + $c&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6bcf594dd87bbdba596aaad50a05456d93f5c880" translate="yes" xml:space="preserve">
          <source>Let's have a look at how Perl sees &lt;code&gt;$a = $b + $c&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e928f3f516e4f40543bf011e7476bdaffeba6904" translate="yes" xml:space="preserve">
          <source>Let's look at another TCP client. This one connects to the TCP &quot;time&quot; service on a number of different machines and shows how far their clocks differ from the system on which it's being run:</source>
          <target state="translated">Давайте посмотрим на другого TCP-клиента.Он подключается к сервису &quot;времени&quot; TCP на нескольких разных машинах и показывает,насколько их часы отличаются от системы,на которой он запускается:</target>
        </trans-unit>
        <trans-unit id="0bfde5091a0fdc4b1dcc0dd94b94093ffcfd6f13" translate="yes" xml:space="preserve">
          <source>Let's look at each in turn, using as an example a tie class for scalars that allows the user to do something like:</source>
          <target state="translated">Рассмотрим каждый по очереди,используя в качестве примера класс привязки для скаляров,который позволяет пользователю делать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="8c38883dc5f76f55aab6aa025aff159c68fa3911" translate="yes" xml:space="preserve">
          <source>Let's look at each of these possible constructs in detail. There are separate sections on each of the following:</source>
          <target state="translated">Давайте подробно рассмотрим каждую из этих возможных конструкций.На каждой из них есть свои разделы:</target>
        </trans-unit>
        <trans-unit id="ad30ae9725c85002b6831ea9730f9076d479a5c8" translate="yes" xml:space="preserve">
          <source>Let's look at each of these principles in depth.</source>
          <target state="translated">Давайте глубоко рассмотрим каждый из этих принципов.</target>
        </trans-unit>
        <trans-unit id="176db7a51355c5004c1f239aa8667a05811318e4" translate="yes" xml:space="preserve">
          <source>Let's look at the example above, but with minimal quantifiers:</source>
          <target state="translated">Рассмотрим пример выше,но с минимальными квантификаторами:</target>
        </trans-unit>
        <trans-unit id="44d6bf690bfe89fee660e282315649dfc02c909f" translate="yes" xml:space="preserve">
          <source>Let's make a quick object and x-plode it, first we'll start the debugger: it wants some form of input from STDIN, so we give it something non-committal, a zero:</source>
          <target state="translated">Давайте сделаем быстрый объект и x-plode его,сначала запустим отладчик:он хочет какую-то форму ввода из STDIN,поэтому дадим ему что-то нефиксированное,ноль:</target>
        </trans-unit>
        <trans-unit id="8c36a08a96367b239dd26ec1d8f04af50262a733" translate="yes" xml:space="preserve">
          <source>Let's say you'd like your Perl program to process data stored in a nearby directory called &lt;code&gt;unsorted&lt;/code&gt;, which contains a number of textfiles. You'd also like your program to sort all the contents from these files into a single, alphabetically sorted list of unique lines before it starts processing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af4365a6067ebec1d91261e67cfd455affae6b4" translate="yes" xml:space="preserve">
          <source>Let's say your application is a server that will occasionally run Perl code from some arbitrary file. Your server has no way of knowing what code it's going to run. Very dangerous.</source>
          <target state="translated">Допустим,ваше приложение является сервером,который время от времени будет запускать Perl-код из какого-нибудь произвольного файла.Ваш сервер не имеет возможности узнать,какой код он будет запускать.Очень опасно.</target>
        </trans-unit>
        <trans-unit id="4d890463be6280c78f6b7f6a985632f09c2fa90e" translate="yes" xml:space="preserve">
          <source>Let's see a quick example of how all this is useful.</source>
          <target state="translated">Давайте посмотрим краткий пример того,как все это полезно.</target>
        </trans-unit>
        <trans-unit id="e32a2ed9f3b04c47c03460e3d9853725a7d0f999" translate="yes" xml:space="preserve">
          <source>Let's see what &lt;code&gt;Benchmark&lt;/code&gt; makes of this:</source>
          <target state="translated">Посмотрим, что по этому поводу делает &lt;code&gt;Benchmark&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="405776f1b44151a8af53d3cf919e2d8b537db4ed" translate="yes" xml:space="preserve">
          <source>Let's start in the middle, at line 4. This is a BINOP, a binary operator, which is at location &lt;code&gt;0x8179828&lt;/code&gt; . The specific operator in question is &lt;code&gt;sassign&lt;/code&gt; - scalar assignment - and you can find the code which implements it in the function &lt;code&gt;pp_sassign&lt;/code&gt; in</source>
          <target state="translated">Начнем с середины, со строки 4. Это бинарный оператор BINOP, расположенный по адресу &lt;code&gt;0x8179828&lt;/code&gt; . Конкретный рассматриваемый оператор - &lt;code&gt;sassign&lt;/code&gt; - скалярное присваивание - и вы можете найти код, который его реализует, в функции &lt;code&gt;pp_sassign&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="c82eef57c73c123759da862922f036bf0665286b" translate="yes" xml:space="preserve">
          <source>Let's start in the middle, at line 4. This is a BINOP, a binary operator, which is at location &lt;code&gt;0x8179828&lt;/code&gt;. The specific operator in question is &lt;code&gt;sassign&lt;/code&gt; - scalar assignment - and you can find the code which implements it in the function &lt;code&gt;pp_sassign&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1d4b156d0cb946936473b6a08e0d57dc7fd23f" translate="yes" xml:space="preserve">
          <source>Let's start with the second line. It says that the uppercase of code point 97 is 65; or &lt;code&gt;&lt;a href=&quot;../functions/uc&quot;&gt;uc(&quot;a&quot;)&lt;/a&gt;&lt;/code&gt; == &quot;A&quot;. But the line is for the entire range of code points 97 through 122. To get the mapping for any code point in this range, you take the offset it has from the beginning code point of the range, and add that to the mapping for that first code point. So, the mapping for 122 (&quot;z&quot;) is derived by taking the offset of 122 from 97 (=25) and adding that to 65, yielding 90 (&quot;z&quot;). Likewise for everything in between.</source>
          <target state="translated">Начнем со второй строчки. Он говорит, что верхний регистр кодовой точки 97 равен 65; или &lt;code&gt;&lt;a href=&quot;../functions/uc&quot;&gt;uc(&quot;a&quot;)&lt;/a&gt;&lt;/code&gt; == &quot;A&quot;. Но эта строка предназначена для всего диапазона кодовых точек с 97 по 122. Чтобы получить сопоставление для любой кодовой точки в этом диапазоне, вы берете смещение, которое она имеет от начальной кодовой точки диапазона, и добавляете это к сопоставлению для этого первая кодовая точка. Таким образом, отображение для 122 (&amp;laquo;z&amp;raquo;) получается путем взятия смещения 122 от 97 (= 25) и добавления его к 65, что дает 90 (&amp;laquo;z&amp;raquo;). То же самое и со всем, что между ними.</target>
        </trans-unit>
        <trans-unit id="283878194b8e2d4159d246c8407adfc9545545e1" translate="yes" xml:space="preserve">
          <source>Let's start with the second line. It says that the uppercase of code point 97 is 65; or &lt;code&gt;uc(&quot;a&quot;)&lt;/code&gt; == &quot;A&quot;. But the line is for the entire range of code points 97 through 122. To get the mapping for any code point in this range, you take the offset it has from the beginning code point of the range, and add that to the mapping for that first code point. So, the mapping for 122 (&quot;z&quot;) is derived by taking the offset of 122 from 97 (=25) and adding that to 65, yielding 90 (&quot;z&quot;). Likewise for everything in between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0880854fa8770ea11a4efe4579463972aa5ae537" translate="yes" xml:space="preserve">
          <source>Let's suppose you have some weird Martian encoding where pairs of ASCII uppercase letters encode single Martian letters (i.e. the two bytes &quot;CV&quot; make a single Martian letter, as do the two bytes &quot;SG&quot;, &quot;VS&quot;, &quot;XX&quot;, etc.). Other bytes represent single characters, just like ASCII.</source>
          <target state="translated">Допустим,у Вас есть какая-то странная марсианская кодировка,в которой пары заглавных букв ASCII кодируют одиночные марсианские буквы (т.е.два байта &quot;CV&quot; делают одну марсианскую букву,так же как и два байта &quot;SG&quot;,&quot;VS&quot;,&quot;XX&quot; и т.д.).Другие байты представляют собой одиночные символы,так же как и ASCII.</target>
        </trans-unit>
        <trans-unit id="8f09fe13c85ec276cd87ab04a04d40aac9612c6e" translate="yes" xml:space="preserve">
          <source>Let's suppose you've got to read in a data file like this:</source>
          <target state="translated">Предположим,вы должны прочитать в таком файле данных,как этот:</target>
        </trans-unit>
        <trans-unit id="2f7c544be1b70356d2951611060b9932dadf6ea2" translate="yes" xml:space="preserve">
          <source>Let's take a look at a portion of the .c file created for our extension. The file name is Mytest.c:</source>
          <target state="translated">Давайте рассмотрим часть .c файла,созданного для нашего расширения.Имя файла Mytest.c:</target>
        </trans-unit>
        <trans-unit id="ce5f83676281dd1446f1a5a503aee374bc369bcc" translate="yes" xml:space="preserve">
          <source>Let's take a look at the same program using a different profiler: &lt;code&gt;Devel::Profiler&lt;/code&gt; , a drop-in Perl-only replacement for &lt;code&gt;Devel::DProf&lt;/code&gt; . The usage is very slightly different in that instead of using the special &lt;code&gt;-d:&lt;/code&gt; flag, you pull &lt;code&gt;Devel::Profiler&lt;/code&gt; in directly as a module using &lt;code&gt;-M&lt;/code&gt; .</source>
          <target state="translated">Давайте посмотрим на ту же программу, использующую другой профилировщик: &lt;code&gt;Devel::Profiler&lt;/code&gt; , заменяющую только Perl замену &lt;code&gt;Devel::DProf&lt;/code&gt; . Использование очень немного отличается в том, что вместо использования специального флага &lt;code&gt;-d:&lt;/code&gt; вы извлекаете &lt;code&gt;Devel::Profiler&lt;/code&gt; напрямую как модуль с помощью &lt;code&gt;-M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51d206f459af5ffe821cbc3901dfba71c7b8ef1d" translate="yes" xml:space="preserve">
          <source>Let's take a look at the same program using a different profiler: &lt;code&gt;Devel::Profiler&lt;/code&gt;, a drop-in Perl-only replacement for &lt;code&gt;Devel::DProf&lt;/code&gt;. The usage is very slightly different in that instead of using the special &lt;code&gt;-d:&lt;/code&gt; flag, you pull &lt;code&gt;Devel::Profiler&lt;/code&gt; in directly as a module using &lt;code&gt;-M&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230698ed5211b94950bbc39ebf4a2cd8603f3243" translate="yes" xml:space="preserve">
          <source>Let's take a simple patch from start to finish.</source>
          <target state="translated">Давайте возьмем простой патч от начала до конца.</target>
        </trans-unit>
        <trans-unit id="2b003d41c47da4c513944208b256541b446c8a71" translate="yes" xml:space="preserve">
          <source>Let's take an example of manipulating a PV, from &lt;code&gt;sv_catpvn&lt;/code&gt; , in</source>
          <target state="translated">Давайте возьмем пример управления PV из &lt;code&gt;sv_catpvn&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="f81a1d5166b525293109d732fb53d9a2e8fb4f86" translate="yes" xml:space="preserve">
          <source>Let's take an example of manipulating a PV, from &lt;code&gt;sv_catpvn&lt;/code&gt;, in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3c67f07cd4da0245ca6a99400a337a71fe4ec4" translate="yes" xml:space="preserve">
          <source>Let's take an example. Suppose you're reading in data from a local format into a hash-of-hashes in Perl, turning that into a tree, walking the tree and then piping each node to an Acme Transmogrifier Server.</source>
          <target state="translated">Возьмем пример.Предположим,вы читаете данные из локального формата в хэш-хэш на Perl,превращаете их в дерево,ходите по дереву,а затем передаете каждый узел на сервер Acme Transmogrifier.</target>
        </trans-unit>
        <trans-unit id="08e16151674f7f96adbcc23b02310179ef6623cd" translate="yes" xml:space="preserve">
          <source>Let's take the following test directory structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39fd63d744cf93b2616319a85e2d2154efb3e45" translate="yes" xml:space="preserve">
          <source>Let's you write:</source>
          <target state="translated">Давай ты напишешь:</target>
        </trans-unit>
        <trans-unit id="2f17a5ca119319a7ec877e7a949710676dc887eb" translate="yes" xml:space="preserve">
          <source>Level 1 - Basic Unicode Support</source>
          <target state="translated">Уровень 1-Поддержка базового Юникода</target>
        </trans-unit>
        <trans-unit id="0de802e5c110593513199ad6be14e0d3e4934cee" translate="yes" xml:space="preserve">
          <source>Level 2 - Extended Unicode Support</source>
          <target state="translated">Уровень 2-расширенная поддержка Юникода</target>
        </trans-unit>
        <trans-unit id="bddac528f4922054293682b3a34528809353679b" translate="yes" xml:space="preserve">
          <source>Level 3 - Tailored Support</source>
          <target state="translated">Уровень 3-Индивидуальная поддержка</target>
        </trans-unit>
        <trans-unit id="af642ef849c39f332561002d12526780f4e80e2e" translate="yes" xml:space="preserve">
          <source>Level of verbosity. By default, the debugger leaves your exceptions and warnings alone, because altering them can break correctly running programs. It will attempt to print a message when uncaught INT, BUS, or SEGV signals arrive. (But see the mention of signals in &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b7cf7750bfaac558f7db0f6b00074662dc6814" translate="yes" xml:space="preserve">
          <source>Level of verbosity. By default, the debugger leaves your exceptions and warnings alone, because altering them can break correctly running programs. It will attempt to print a message when uncaught INT, BUS, or SEGV signals arrive. (But see the mention of signals in &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; below.)</source>
          <target state="translated">Уровень многословности. По умолчанию отладчик оставляет ваши исключения и предупреждения в покое, поскольку их изменение может нарушить корректно работающие программы. Он попытается распечатать сообщение при поступлении неперехваченных сигналов INT, BUS или SEGV. (Но см. Упоминание сигналов в &lt;a href=&quot;#BUGS&quot;&gt;ОШИБКАх&lt;/a&gt; ниже.)</target>
        </trans-unit>
        <trans-unit id="ed47f098118b3a4908065115144a054c9afe75d6" translate="yes" xml:space="preserve">
          <source>Levels</source>
          <target state="translated">Levels</target>
        </trans-unit>
        <trans-unit id="dd4d01b82f363523e943497a1acd58ad122c1d74" translate="yes" xml:space="preserve">
          <source>Lewis, Bill, and Daniel J. Berg. Multithreaded Programming with Pthreads. Prentice Hall, 1997, ISBN 0-13-443698-9 (a well-written introduction to threads).</source>
          <target state="translated">Льюис,Билл и Дэниел Дж.Берг.Многопоточное программирование с помощью Pthreads.Prentice Hall,1997,ISBN 0-13-443698-9 (хорошо написанное введение в нити).</target>
        </trans-unit>
        <trans-unit id="0130807d4961ca028150a643b43fa9d3af268eec" translate="yes" xml:space="preserve">
          <source>Lexer interface</source>
          <target state="translated">интерфейс Lexer</target>
        </trans-unit>
        <trans-unit id="7c46e8b2c6a1b67615cc4a28b1803b6611e259c0" translate="yes" xml:space="preserve">
          <source>Lexical (my) variables declared in scopes external to a subroutine appear in code2ref output text as package variables. This is a tricky problem, as perl has no native facility for referring to a lexical variable defined within a different scope, although &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; is a good start.</source>
          <target state="translated">Лексические (мои) переменные, объявленные в областях, внешних по отношению к подпрограмме, появляются в выходном тексте code2ref как переменные пакета. Это сложная проблема, поскольку perl не имеет встроенных средств для обращения к лексической переменной, определенной в другой области видимости, хотя &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; - хорошее начало.</target>
        </trans-unit>
        <trans-unit id="2a2592394276034b7da48f012e3e1835635e7937" translate="yes" xml:space="preserve">
          <source>Lexical (my) variables declared in scopes external to a subroutine appear in coderef2text output text as package variables. This is a tricky problem, as perl has no native facility for referring to a lexical variable defined within a different scope, although &lt;a href=&quot;padwalker&quot;&gt;PadWalker&lt;/a&gt; is a good start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21795cace48f4382f41c503a0895c632d1557532" translate="yes" xml:space="preserve">
          <source>Lexical Subroutines</source>
          <target state="translated">Лексические подпрограммы</target>
        </trans-unit>
        <trans-unit id="91090443b78c24e5208fa0b7749049adce1d8581" translate="yes" xml:space="preserve">
          <source>Lexical effect</source>
          <target state="translated">лексический эффект</target>
        </trans-unit>
        <trans-unit id="10e46358434f33f5da4b481844bfbc427a1eaf46" translate="yes" xml:space="preserve">
          <source>Lexical scopes of control structures are not bounded precisely by the braces that delimit their controlled blocks; control expressions are part of that scope, too. Thus in the loop</source>
          <target state="translated">Лексические области применения управляющих структур не ограничены точно скобками,разделяющими их управляемые блоки;управляющие выражения также являются частью этой области применения.Таким образом,в цикле</target>
        </trans-unit>
        <trans-unit id="c32019b3ed41f9870148e7d8a8bcc91664cf5db8" translate="yes" xml:space="preserve">
          <source>Lexical subroutines are only available under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'lexical_subs'&lt;/code&gt; pragma, which produces a warning unless the &quot;experimental::lexical_subs&quot; warnings category is disabled.</source>
          <target state="translated">Лексические подпрограммы доступны только в &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'lexical_subs'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'lexical_subs' , которая выдает предупреждение, если не отключена категория предупреждений &amp;laquo;экспериментальные :: lexical_subs&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="63259d01172ac59370a7ece5661c26923725e28e" translate="yes" xml:space="preserve">
          <source>Lexical variable introduced (declared with my()) for the first time.</source>
          <target state="translated">Впервые введена лексическая переменная (объявленная с помощью my()).</target>
        </trans-unit>
        <trans-unit id="6bec4b7b4f94bd2a84719ee4041560ade2de4cd8" translate="yes" xml:space="preserve">
          <source>Lexical variables (declared with &quot;my&quot;) are not visible within a format unless the format is declared within the scope of the lexical variable.</source>
          <target state="translated">Лексические переменные (объявленные с помощью &quot;my&quot;)не видны внутри формата,если только формат не объявлен в рамках лексической переменной.</target>
        </trans-unit>
        <trans-unit id="56e8fa65a6460263a21b0d0b067830070ec69c2a" translate="yes" xml:space="preserve">
          <source>Lexical warnings get around these limitations by allowing finer control over where warnings can or can't be tripped.</source>
          <target state="translated">Лексические предупреждения обходят эти ограничения,позволяя более точно контролировать,где предупреждения могут быть отключены,а где нет.</target>
        </trans-unit>
        <trans-unit id="dfa37e8913139b1f0a81171648bb039460ba6c8c" translate="yes" xml:space="preserve">
          <source>Lexically control overloading</source>
          <target state="translated">Лексический контроль перегрузки</target>
        </trans-unit>
        <trans-unit id="d71329c73390ebdefc7d3045a64e73de047c01c2" translate="yes" xml:space="preserve">
          <source>Lexing code (whether in the Perl core or not) moves this pointer past the characters that it consumes. It is also expected to perform some bookkeeping whenever a newline character is consumed. This movement can be more conveniently performed by the function &lt;a href=&quot;#lex_read_to&quot;&gt;&quot;lex_read_to&quot;&lt;/a&gt;, which handles newlines appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23a9b3c648b4ba0282c9679b9e53d7ed27aaf5d" translate="yes" xml:space="preserve">
          <source>Lexing code (whether in the Perl core or not) moves this pointer past the characters that it consumes. It is also expected to perform some bookkeeping whenever a newline character is consumed. This movement can be more conveniently performed by the function &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;, which handles newlines appropriately.</source>
          <target state="translated">Лексирующий код (в ядре Perl или нет) перемещает этот указатель за символы, которые он потребляет. Также ожидается, что при использовании символа новой строки будет выполняться некоторая бухгалтерия. Это перемещение может быть более удобно выполнено функцией &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt; , которая соответствующим образом обрабатывает новые строки.</target>
        </trans-unit>
        <trans-unit id="50c4503eb10cb7055e83f0b77d0c54ba198cb8a3" translate="yes" xml:space="preserve">
          <source>Lexing code attempted to stuff non-Latin-1 character into Latin-1 input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec3fbd307e04ea0a0267363d68414b3f6becd30" translate="yes" xml:space="preserve">
          <source>Lexing code internal error (%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdf2fc886297cee27c73397601ff4f39103c78d" translate="yes" xml:space="preserve">
          <source>Libnet Frequently Asked Questions</source>
          <target state="translated">Часто задаваемые вопросы Либнет</target>
        </trans-unit>
        <trans-unit id="e99e9a5a6c267649059fa8147d50e8a56d55d8c3" translate="yes" xml:space="preserve">
          <source>Libraries using &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings::warn&lt;/a&gt; for custom warning categories generally don't expect &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings::warn&lt;/a&gt; to be fatal and can wind up in an unexpected state as a result. For XS modules issuing categorized warnings, such unanticipated exceptions could also expose memory leak bugs.</source>
          <target state="translated">Библиотеки, использующие &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings :: warn&lt;/a&gt; для пользовательских категорий предупреждений, обычно не ожидают, что &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings :: warn&lt;/a&gt; будут фатальными и в результате могут оказаться в неожиданном состоянии. Для модулей XS, выдающих категоризированные предупреждения, такие непредвиденные исключения также могут выявить ошибки утечки памяти.</target>
        </trans-unit>
        <trans-unit id="dbfd43d16e8972c230e7e22188720b2bf73e76c5" translate="yes" xml:space="preserve">
          <source>Library ... not found</source>
          <target state="translated">Библиотека...не найдена</target>
        </trans-unit>
        <trans-unit id="51ac812d4d63215ce6bab6ff80843a9768d50aa3" translate="yes" xml:space="preserve">
          <source>Library modules should not in general export built-in names like &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; as part of their default &lt;code&gt;@EXPORT&lt;/code&gt; list, because these may sneak into someone else's namespace and change the semantics unexpectedly. Instead, if the module adds that name to &lt;code&gt;@EXPORT_OK&lt;/code&gt; , then it's possible for a user to import the name explicitly, but not implicitly. That is, they could say</source>
          <target state="translated">Модули библиотеки, как правило, не должны экспортировать встроенные имена, такие как &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; , как часть своего списка &lt;code&gt;@EXPORT&lt;/code&gt; по умолчанию , поскольку они могут проникнуть в чужое пространство имен и неожиданно изменить семантику. Вместо этого, если модуль добавляет это имя в &lt;code&gt;@EXPORT_OK&lt;/code&gt; , тогда пользователь может импортировать имя явно, но не неявно. То есть они могли сказать</target>
        </trans-unit>
        <trans-unit id="ad8c903818c8a82f08facfa60cb87854b48f3251" translate="yes" xml:space="preserve">
          <source>Library modules should not in general export built-in names like &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;chdir&lt;/code&gt; as part of their default &lt;code&gt;@EXPORT&lt;/code&gt; list, because these may sneak into someone else's namespace and change the semantics unexpectedly. Instead, if the module adds that name to &lt;code&gt;@EXPORT_OK&lt;/code&gt;, then it's possible for a user to import the name explicitly, but not implicitly. That is, they could say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189f5ddd187269a52ad75ba078f7fedb0f60d5fe" translate="yes" xml:space="preserve">
          <source>License String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8774f0e51de54365d13b10f234f9f0ab4b4c7b6" translate="yes" xml:space="preserve">
          <source>License is also granted to make and use derivative works provided that such works are identified as &quot;derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm&quot; in all material mentioning or referencing the derived work.</source>
          <target state="translated">Лицензия также предоставляется на создание и использование производных работ при условии,что такие работы идентифицируются как &quot;производные от RSA Data Security,Inc.MD5 Message-Digest Algorithm&quot; во всех материалах,в которых упоминается или упоминается производное произведение.</target>
        </trans-unit>
        <trans-unit id="8fb9dc902cb98efd9bae2b4a142dce7fcd9e3bb0" translate="yes" xml:space="preserve">
          <source>License to copy and use this software is granted provided that it is identified as the &quot;RSA Data Security, Inc. MD5 Message-Digest Algorithm&quot; in all material mentioning or referencing this software or this function.</source>
          <target state="translated">Лицензия на копирование и использование данного программного обеспечения предоставляется при условии,что оно идентифицируется как &quot;RSA Data Security,Inc.MD5 Message-Digest Algorithm&quot; во всех материалах,упоминающих или ссылающихся на это программное обеспечение или эту функцию.</target>
        </trans-unit>
        <trans-unit id="5924fd52bf49a8494e3d053dc865b25bbec5c6e6" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU General Public License version 1 or later, or the Artistic License.</source>
          <target state="translated">Лицензия GNU General Public License версии 1 или более поздней,или Художественная лицензия.</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">Licensing</target>
        </trans-unit>
        <trans-unit id="d5b616805cf9bfc9158dfb054c59875ea327a760" translate="yes" xml:space="preserve">
          <source>Life is not quite so transparent, however, when working with legacy encodings, I/O, and certain special cases:</source>
          <target state="translated">Однако жизнь не так прозрачна при работе с унаследованными кодировками,входами/выходами и некоторыми особыми случаями:</target>
        </trans-unit>
        <trans-unit id="ab3a00d7b8ef92b4d6db8938fdc867c976af1617" translate="yes" xml:space="preserve">
          <source>Lifetime of the parent process and pseudo-processes</source>
          <target state="translated">Жизненный цикл родительского процесса и псевдо-процессов</target>
        </trans-unit>
        <trans-unit id="cb79da38fbc832bc4294ccc8e4bcfcc8a2555134" translate="yes" xml:space="preserve">
          <source>Lightweight and lvalue version of &lt;code&gt;PAD_SV&lt;/code&gt; . Get or set the value at offset &lt;code&gt;po&lt;/code&gt; in the current pad. Unlike &lt;code&gt;PAD_SV&lt;/code&gt; , does not print diagnostics with -DX. For internal use only.</source>
          <target state="translated">Облегченная и lvalue версия &lt;code&gt;PAD_SV&lt;/code&gt; . Получить или установить значение смещения &lt;code&gt;po&lt;/code&gt; в текущем пэде. В отличие от &lt;code&gt;PAD_SV&lt;/code&gt; , не выводит диагностику с -DX. Только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="3fd57349d3d10bcc5e3acd29d060e929880bc515" translate="yes" xml:space="preserve">
          <source>Lightweight and lvalue version of &lt;code&gt;PAD_SV&lt;/code&gt;. Get or set the value at offset &lt;code&gt;po&lt;/code&gt; in the current pad. Unlike &lt;code&gt;PAD_SV&lt;/code&gt;, does not print diagnostics with -DX. For internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e02c95fe85052fcadf9745a5f1d0358088d936" translate="yes" xml:space="preserve">
          <source>Like</source>
          <target state="translated">Like</target>
        </trans-unit>
        <trans-unit id="c9df7c5b0e2428587b12f5f968c72b403b65e631" translate="yes" xml:space="preserve">
          <source>Like &quot;@*&quot;, this is a variable-width field. The value supplied must be a scalar variable. Perl puts the first line (up to the first &quot;\n&quot;) of the text into the field, and then chops off the front of the string so that the next time the variable is referenced, more of the text can be printed. The variable will</source>
          <target state="translated">Как и &quot;@*&quot;,это поле переменной ширины.Поставляемое значение должно быть скалярной переменной.Perl помещает первую строку (до первой &quot;\n&quot;)текста в поле,а затем отсекает передний край строки,чтобы при следующей ссылке на переменную можно было распечатать больше текста.Переменная будет</target>
        </trans-unit>
        <trans-unit id="9e4b27dce39ce4f15c0298254855f383991ad517" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;, but taint checks will issue warnings rather than fatal errors. These warnings can now be controlled normally with &lt;code&gt;no warnings qw(taint)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6efdf3c36a1c3613481963e9128916b7b900006" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#__FILE__&quot;&gt;&lt;code&gt;__FILE__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#__LINE__&quot;&gt;&lt;code&gt;__LINE__&lt;/code&gt;&lt;/a&gt;, the filename and line number returned here may be altered by the mechanism described at &lt;a href=&quot;perlsyn#Plain-Old-Comments-%28Not%21%29&quot;&gt;&quot;Plain Old Comments (Not!)&quot; in perlsyn&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f94085fda091b1e0d2fbb00f475b7933a977348" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;, the result may be an intermediate decomposition whose components are also decomposable. Use &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c138d511965d3d204a9ae2bc98753a226047b504" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;, the result may be an intermediate decomposition whose components are also decomposable. Use &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="translated">Как и &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; , результатом может быть промежуточная декомпозиция, компоненты которой также можно разложить. Используйте &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize,&lt;/a&gt; чтобы получить окончательное разложение за один шаг.</target>
        </trans-unit>
        <trans-unit id="266742b9f67b4fe1a275417eb72b7a676513b96c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94306a359339162936c27f41ca5369637110def5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d50417de331ddcfae6353b7aa1bfeeddd25071" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de5fd7897751225569f609d59202b32bba6024a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="9e492b6f65de514837e38acf884d2920be6c9c8e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="2de1e66c1756b6fab3c6fdb05cde4f4f25568233" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="4a253dd8613cfeb35cd85cfbea8043b7c360540b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7af63bad15b32edbd28ac2c10d2108aae562c31" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5b198e7e3473ff35bff47623cd4e88330d3954" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de93912de0e72db38bde2b8e898d77fc9dc7395b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="5f93afb3b500f705910109bc574d7e2b47ae58fd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="7bc8a6b9daffa5d612ad332627c80e1cbcfc7c28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="9cc1810855d64e33ce9ec26c456a64df0b593a05" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5cc8f19c22d392b66740ab20d62583c9f0b5cc" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3304e82e703cb693b770c7a91db4e251a771c7ab" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf7282f7430d0c1f55fb04bc9095993eb65be76" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="b5ef552d2079e488edcf076c50da8cfc2edf287e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="1d820027a36b428c792671f4c8e4ee5300a7823f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="d743c06e3451a81c72518baf7f72a34f8bfafe8d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3d816bbaf79a909295b456cf4eb6930c147304" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0b3ccbd7b43691247d71e63bb360cc3249f86a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1cef4e16a8379b39bb25b20396ecc27808f0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="f8b72f1ae998c27a3bc7952f2e79a7833ed58822" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="3d6eb33ec672f221ab14ac8aaae5ee9923295a95" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="58ca9ffe0ac8e2dd6af7ebd2c0acbcec2c0d7145" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; allows you to lie to a program about its name if you use the &lt;code&gt;system PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada44e107259fa024a8f358c79e51c738af229c1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;&quot;gv_fetchmeth_pvn&quot;&lt;/a&gt;, but lacks a flags parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54abf6089eca44394b7d1690bb3d38c0b82d3b35" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but lacks a flags parameter.</source>
          <target state="translated">Подобно &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt; , но без параметра flags.</target>
        </trans-unit>
        <trans-unit id="9d0651cf67afe661baee2be32bf57a134f79be82" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; .</source>
          <target state="translated">Подобно &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string,&lt;/a&gt; но хранит местоположение сбоя (в случае &amp;laquo;отказ utf8ness&amp;raquo;) или местоположение &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; + &lt;code&gt;len&lt;/code&gt; (в случае &amp;laquo;успех utf8ness&amp;raquo;) в &lt;code&gt;ep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4826c3546aa34ea2d0524b77459a729065bbf15b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;() but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; , and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; .</source>
          <target state="translated">Аналогично &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; (), но сохраняет местоположение сбоя (в случае &amp;laquo;сбой utf8ness&amp;raquo;) или местоположение &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; + &lt;code&gt;len&lt;/code&gt; (в случае &amp;laquo;успех utf8ness&amp;raquo;) в &lt;code&gt;ep&lt;/code&gt; , а также количество символов в кодировке UTF-8. в &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc4004ca168e21bab8a364acb13202ffa9c080d1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;&quot;lex_stuff_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df9351141888ffdcb4847144fedfdb9527ae3f1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="84cb2c197de2f7ed274dcc28b904a10591e12927" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#memEQ&quot;&gt;&quot;memEQ&quot;&lt;/a&gt;, but the second string is a literal enclosed in double quotes, &lt;code&gt;l1&lt;/code&gt; gives the number of bytes in &lt;code&gt;s1&lt;/code&gt;. Returns zero if equal, or non-zero if non-equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3235e7d6c4a5e5829587587808c18e328cb540d6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#memNE&quot;&gt;&quot;memNE&quot;&lt;/a&gt;, but the second string is a literal enclosed in double quotes, &lt;code&gt;l1&lt;/code&gt; gives the number of bytes in &lt;code&gt;s1&lt;/code&gt;. Returns zero if non-equal, or zero if non-equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8418e841d048f747af15fb53b44957357d83e046" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nextafter&quot;&gt;&quot;nextafter&quot;&lt;/a&gt;, but potentially more accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855a9fc9268cf7c56dbfa870587e398be59edc5f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nextafter&quot;&gt;nextafter&lt;/a&gt;, but potentially more accurate.</source>
          <target state="translated">Как &lt;a href=&quot;#nextafter&quot;&gt;nextafter&lt;/a&gt; , но потенциально более точный.</target>
        </trans-unit>
        <trans-unit id="0b2228c60a5736c212cccec834eca9e330073dae" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nexttoward&quot;&gt;&quot;nexttoward&quot;&lt;/a&gt;, but potentially less accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3abb505c749731ad1d3986f391df84d9a744972" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nexttoward&quot;&gt;nexttoward&lt;/a&gt;, but potentially less accurate.</source>
          <target state="translated">Подобно &lt;a href=&quot;#nexttoward&quot;&gt;следующему&lt;/a&gt; , но потенциально менее точному.</target>
        </trans-unit>
        <trans-unit id="014996f423e4b3ba0964db2cda0c7b80baa25ee8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d8988dd3bbcc7667d93d474b90133547c697bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b66ec47b251b957cd7b2fb7f4d9c455c7a47ef" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b06f3c6974466e0dcb566dbe47f6fad84aa5a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="23a489d2aec93a2d851cb278177881615d6f059f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="401a90792585ceca6e1448d38f3a439e9e9ccb83" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="d7b205ac37d25afe008f83aeca2addd7bbdc67d3" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf2aa2fcc789bbf185be046592fbdbb502d45ba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5349abc807ca4a5e1b628b9c96aba7c6b34dcba3" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046451b0d57dcef450722c52bfda2597acd52bb7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , но принимает скаляр Perl вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="6a998ebee49893ba076a8800f452b0183aae9a49" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , но принимает буквальную строку вместо пары строка / длина и без предварительно вычисленного хеша.</target>
        </trans-unit>
        <trans-unit id="65d696e7d641f983cc3e14984e6670f40737f36e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , но принимает строку с завершающим нулем вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="8ee6b83a5c63efaa127609c27748de883a7f6ea1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#remainder&quot;&gt;&quot;remainder&quot;&lt;/a&gt; but also returns the low-order bits of the quotient (n) [C99]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a963885aaf0f61482fbaede4f9fc78877a13624a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#remainder&quot;&gt;remainder&lt;/a&gt; but also returns the low-order bits of the quotient (n) [C99]</source>
          <target state="translated">Подобен &lt;a href=&quot;#remainder&quot;&gt;остатку,&lt;/a&gt; но также возвращает младшие биты частного (n) [C99]</target>
        </trans-unit>
        <trans-unit id="684022cdfa09a338010e59568f2b520d497d9055" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#round&quot;&gt;&quot;round&quot;&lt;/a&gt;, but as integer, as opposed to floating point [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5282dab906515d5042c87772d3d7af38dc7d497" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;, but as integer, as opposed to floating point [C99].</source>
          <target state="translated">Как и &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; , но как целое число, а не с плавающей запятой [C99].</target>
        </trans-unit>
        <trans-unit id="5ca6b661daea1fb2637dc5c26cdc951e025782cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#setpayload&quot;&gt;&quot;setpayload&quot;&lt;/a&gt; but also makes the NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13069e76221341c8aade28e20a2776be321b753c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#strtod&quot;&gt;&quot;strtod&quot;&lt;/a&gt; but for long doubles. Defined only if the system supports long doubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05cbd07aa430b94f88ef1127d9cc3feb4a35b92" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#strtod&quot;&gt;strtod&lt;/a&gt; but for long doubles. Defined only if the system supports long doubles.</source>
          <target state="translated">Как &lt;a href=&quot;#strtod&quot;&gt;strtod,&lt;/a&gt; но для длинных дублей. Определяется, только если система поддерживает длинные удвоения.</target>
        </trans-unit>
        <trans-unit id="e5d85e8e0de6544839fe7d3c4073f5a3d09bc76d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_pv&quot;&gt;&quot;sv_does_pv&quot;&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f5fd00ec8eac8e99d9f1474911e3920a009bb9" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_pv&quot;&gt;sv_does_pv&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="translated">Подобно &lt;a href=&quot;#sv_does_pv&quot;&gt;sv_does_pv&lt;/a&gt; , но не принимает параметр &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ff8c36e121f1fd60e63b43a1210b091d9a7c4d4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;&quot;sv_does_sv&quot;&lt;/a&gt;, but takes a nul-terminated string instead of an SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4661a4afd9ad32e2ec4db3ef6fa0574da2c1a43" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;&quot;sv_does_sv&quot;&lt;/a&gt;, but takes a string/length pair instead of an SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad65fa317ddd80710d2963974312eb533dd0432b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt;, but takes a nul-terminated string instead of an SV.</source>
          <target state="translated">Подобно &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt; , но принимает строку с завершающим нулем вместо SV.</target>
        </trans-unit>
        <trans-unit id="aa34ede2432b39dab6d8a29f4520f696d8b17636" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt;, but takes a string/length pair instead of an SV.</source>
          <target state="translated">Подобно &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt; , но принимает пару строка / длина вместо SV.</target>
        </trans-unit>
        <trans-unit id="8055d83feddf7b95aa6c67e74cf6d04e1a0e5710" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt;. Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt;. This is the numeric version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b51c5f83e0f401b76b918dc53d982582a6c6707" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt;. Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt;. This is the string version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b144d9f1c5c01a2bcc227e28eeb2d1477818c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;like()&lt;/code&gt;. Checks if $thing matches the given &lt;code&gt;$regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b3623d431ec18655cbbc9fbf8897411d047d8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;unlike()&lt;/code&gt;. Checks if $thing &lt;b&gt;does not match&lt;/b&gt; the given &lt;code&gt;$regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0270db3e4b83c7917acde896050328f249d7140a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt; . Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . This is the numeric version.</source>
          <target state="translated">Как &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; &amp;laquo;s &lt;code&gt;isnt()&lt;/code&gt; . Проверяет, есть ли у &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . Это числовая версия.</target>
        </trans-unit>
        <trans-unit id="a5f74c54ee73f3446f105290901ca9cf61ea643a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt; . Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . This is the string version.</source>
          <target state="translated">Как &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; &amp;laquo;s &lt;code&gt;isnt()&lt;/code&gt; . Проверяет, есть ли у &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . Это строковая версия.</target>
        </trans-unit>
        <trans-unit id="9693737cd3c58d515bd81ab55ef59b90671ceaba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;like()&lt;/code&gt; . Checks if $thing matches the given &lt;code&gt;$regex&lt;/code&gt; .</source>
          <target state="translated">Как &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; &amp;laquo;S , &lt;code&gt;like()&lt;/code&gt; . Проверяет, соответствует ли $ thing заданному &lt;code&gt;$regex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="348be5230ca4cb8628d5a3ede0642c968809d567" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;unlike()&lt;/code&gt; . Checks if $thing &lt;b&gt;does not match&lt;/b&gt; the given &lt;code&gt;$regex&lt;/code&gt; .</source>
          <target state="translated">Как &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; &amp;laquo;S в &lt;code&gt;unlike()&lt;/code&gt; . Проверяет, &lt;b&gt;не соответствует&lt;/b&gt; ли $ thing заданному &lt;code&gt;$regex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75959408f273f7b39d4c26886da9ddb8ba9ee269" translate="yes" xml:space="preserve">
          <source>Like &lt;b&gt;-T&lt;/b&gt;, but taint checks will issue warnings rather than fatal errors. These warnings can now be controlled normally with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
qw(taint)&lt;/code&gt; .</source>
          <target state="translated">Подобно &lt;b&gt;-T&lt;/b&gt; , но при проверке заражения будут выдаваться предупреждения, а не фатальные ошибки. Теперь этими предупреждениями можно управлять в обычном режиме &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings qw(taint)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d3972f6bfa689ac944e15f05e77cbb13096271" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt; , the &lt;code&gt;extract_bracketed&lt;/code&gt; function takes up to three optional scalar arguments: a string to extract from, a delimiter specifier, and a prefix pattern. As before, a missing prefix defaults to optional whitespace and a missing text defaults to &lt;code&gt;$_&lt;/code&gt; . However, a missing delimiter specifier defaults to &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (see below).</source>
          <target state="translated">Как и &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt; , функция &lt;code&gt;extract_bracketed&lt;/code&gt; принимает до трех необязательных скалярных аргументов: строку для извлечения, спецификатор разделителя и шаблон префикса. Как и прежде, отсутствующий префикс по умолчанию представляет собой необязательный пробел, а отсутствующий текст - по умолчанию &lt;code&gt;$_&lt;/code&gt; . Однако отсутствующий спецификатор разделителя по умолчанию равен &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="8d7efc2799c6c0aeefd629283955bc733e276d0d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt;, the &lt;code&gt;extract_bracketed&lt;/code&gt; function takes up to three optional scalar arguments: a string to extract from, a delimiter specifier, and a prefix pattern. As before, a missing prefix defaults to optional whitespace and a missing text defaults to &lt;code&gt;$_&lt;/code&gt;. However, a missing delimiter specifier defaults to &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8638e9c741c1e67ac1a4fb8957038d6a39847eb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt; , but if the value is omitted, the</source>
          <target state="translated">Как &lt;code&gt;:i&lt;/code&gt; , но если значение опущено,</target>
        </trans-unit>
        <trans-unit id="6c3eb9fc5ff253146a577da27d5894ba1dc92861" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt; , but if the value is omitted, the current value for the option will be incremented.</source>
          <target state="translated">Как &lt;code&gt;:i&lt;/code&gt; , но если значение не указано, текущее значение параметра будет увеличено.</target>
        </trans-unit>
        <trans-unit id="e917fcd099f7bf9447127b4c6b34e7b279996d9c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt;, but if the value is omitted, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9edf6df4e0a9dec710ce6226ae54af4b423720" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt;, but if the value is omitted, the current value for the option will be incremented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72498a7bf2cc1e79678e63ab406b0c7a1e1f22d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN&quot;&gt;&quot;ckWARN&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if the warning category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4e8837fe47e35448f28c70d5f0b43b109c2e8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN&quot;&gt;&quot;ckWARN&quot;&lt;/a&gt;&lt;/code&gt;, but takes two warnings categories as input, and returns TRUE if either is enabled. If either category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN2_d&quot;&gt;&quot;ckWARN2_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419e26b6ee286b6d83d0487c5a57940285a7f404" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN2&quot;&gt;&quot;ckWARN2&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if either warning category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b75aa92dfd27a10af7448f298956a33a06201" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN2&quot;&gt;&quot;ckWARN2&quot;&lt;/a&gt;&lt;/code&gt;, but takes three warnings categories as input, and returns TRUE if any is enabled. If any of the categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN3_d&quot;&gt;&quot;ckWARN3_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from any other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f4ea75511cd5867b17de10a3c9cc97f03000e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN3&quot;&gt;&quot;ckWARN3&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if any of the warning categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea073c6d4d2f3be717fe763a8236d2fa3983dd14" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN3&quot;&gt;&quot;ckWARN3&quot;&lt;/a&gt;&lt;/code&gt;, but takes four warnings categories as input, and returns TRUE if any is enabled. If any of the categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN4_d&quot;&gt;&quot;ckWARN4_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from any other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7a6a2e8726ab7252364cc04fd4ea666ebc8c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN4&quot;&gt;&quot;ckWARN4&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if any of the warning categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6b184b57730c77a791a10594697539485e24b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d139eda757264428ce8d6faad0998e0c3769736" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271b223e0f3ecc184afda4eb4579d5e8c1de58c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cbb5f193b52a523e82c581210653da96c02968" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fe020358fe6e2a30b7f3e56ff293f970a16478" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_fixed_width_buf_flags&quot;&gt;&quot;is_utf8_fixed_width_buf_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure in the &lt;code&gt;ep&lt;/code&gt; pointer. If the function returns TRUE, &lt;code&gt;*ep&lt;/code&gt; will point to the beginning of any partial character at the end of the buffer; if there is no partial character &lt;code&gt;*ep&lt;/code&gt; will contain &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184619f40e2d3b96236b99f26b9009ae016b50d2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_fixed_width_buf_loc_flags&quot;&gt;&quot;is_utf8_fixed_width_buf_loc_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the number of complete, valid characters found in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7227ef07854b8cfd22e221bfeaf5dae02357c44a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;&lt;/code&gt; but upon failure, stores the location of the first UTF-8 variant character in the &lt;code&gt;ep&lt;/code&gt; pointer; if all characters are UTF-8 invariant, this function does not change the contents of &lt;code&gt;*ep&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86cd12bd56f8c4d5a287a0fc3cdf7a1222db664" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string&quot;&gt;&quot;is_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff1a503be987f0032effdacb189b36936341632" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string&quot;&gt;&quot;is_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc892fe53ef825e8f87599d3f0987cfffdb6bdb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c58aaf9e5b4c34db9f382e35942b79704f88a22" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac14a2fc2052bfda8c74ae275ad47bc11891894" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_valid_partial_char&quot;&gt;&quot;is_utf8_valid_partial_char&quot;&lt;/a&gt;&lt;/code&gt;, it returns a boolean giving whether or not the input is a valid UTF-8 encoded partial character, but it takes an extra parameter, &lt;code&gt;flags&lt;/code&gt;, which can further restrict which code points are considered valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ae8be3d24ca6a297e15b0d7fafe2dba59e2100" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ninstr&quot;&gt;&quot;ninstr&quot;&lt;/a&gt;&lt;/code&gt;, but instead finds the final (rightmost) occurrence of a sequence of bytes within another sequence, returning &lt;code&gt;NULL&lt;/code&gt; if there is no such occurrence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec6b1469cf896b7423c3e7e32f92d207da0b8f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; allows you to lie to a program about its name if you use the &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Как и &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; позволяет вам солгать программе о ее имени, если вы используете &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; синтаксис PROGRAM LIST . Опять же, см. &lt;a href=&quot;exec&quot;&gt;Exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53ce9db24e9d8151cb0d5ad673fbb551695d8498" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; allows you to lie to a program about its name if you use the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;#exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Как и &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; позволяет вам солгать программе о ее имени, если вы используете &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; синтаксис PROGRAM LIST . Опять же, см. &lt;a href=&quot;#exec&quot;&gt;Exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c07f470d836169d71198d296d47952ad2947c4f8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $variable&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; creates a lexical alias to the package subroutine of the same name.</source>
          <target state="translated">Как и &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $variable&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; создает лексический псевдоним одноименной подпрограммы пакета.</target>
        </trans-unit>
        <trans-unit id="71fcf0aeb3b2b8b93c5a529ba638d8c163bace8e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;perlapi#utf8_to_uvchr_buf&quot;&gt;&quot;utf8_to_uvchr_buf&quot; in perlapi&lt;/a&gt;&lt;/code&gt;, but should only be called when it is known that the next character in the input UTF-8 string &lt;code&gt;s&lt;/code&gt; is well-formed (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bfeaa61a4310c58029cc704a58399ca890239c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;=&lt;/code&gt; , but designates the argument as optional. If omitted, an empty string will be assigned to string values options, and the value zero to numeric options.</source>
          <target state="translated">Подобно &lt;code&gt;=&lt;/code&gt; , но обозначает аргумент как необязательный. Если опущено, пустая строка будет присвоена параметрам строковых значений, а значение 0 - числовым параметрам.</target>
        </trans-unit>
        <trans-unit id="4ede365bb483e8de4140eea3631854060b2e0a3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;=&lt;/code&gt;, but designates the argument as optional. If omitted, an empty string will be assigned to string values options, and the value zero to numeric options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a58c5a4f4c388955ace0d1b2c081730bec782ab" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ARRAY&lt;/code&gt; , but takes an index as an argument to get only one element, rather than a list of all of them.</source>
          <target state="translated">Подобно &lt;code&gt;ARRAY&lt;/code&gt; , но принимает в качестве аргумента индекс для получения только одного элемента, а не их списка всех.</target>
        </trans-unit>
        <trans-unit id="f172ba9b7b9b3d5863cfacf3230b6e0158d82632" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ARRAY&lt;/code&gt;, but takes an index as an argument to get only one element, rather than a list of all of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904d0219765a58ae524cd174247fe80e59898174" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; is currently called with no parameters other than the invocant package name, although that may change. Similarly, to allow for future expansion, the return value should be a single &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; value.</source>
          <target state="translated">Как и &lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; в настоящее время вызывается без каких-либо параметров, кроме имени вызывающего пакета, хотя это может измениться. Точно так же, чтобы разрешить расширение в будущем, возвращаемое значение должно быть единственным значением &lt;code&gt;0&lt;/code&gt; или &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f940b8493916ee3f27829022bc4c4a8f402337a1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;CLONE&lt;/code&gt;, &lt;code&gt;CLONE_SKIP&lt;/code&gt; is currently called with no parameters other than the invocant package name, although that may change. Similarly, to allow for future expansion, the return value should be a single &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712167b0cb1cf028d5ac0a7f89ae0f319bb50f60" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Copy&lt;/code&gt; but returns &lt;code&gt;dest&lt;/code&gt;. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400aa1515ac06a94cb93b93ac9f5493878616d4c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Copy&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Как &lt;code&gt;Copy&lt;/code&gt; , но возвращает dest. Полезно для поощрения компиляторов к оптимизации хвостового вызова.</target>
        </trans-unit>
        <trans-unit id="14537197538893226d82efeb48b7a358e65846d7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Moose&lt;/code&gt; , &lt;code&gt;Class::Accessor&lt;/code&gt; generates accessor methods and a constructor for your class.</source>
          <target state="translated">Как и &lt;code&gt;Moose&lt;/code&gt; , &lt;code&gt;Class::Accessor&lt;/code&gt; генерирует методы доступа и конструктор для вашего класса.</target>
        </trans-unit>
        <trans-unit id="41aea6605b986b34eea2def3a336d7bee9c15525" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Moose&lt;/code&gt;, &lt;code&gt;Class::Accessor&lt;/code&gt; generates accessor methods and a constructor for your class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1911709504f680e61bf78568c4b6d9d06b0561" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Move&lt;/code&gt; but returns &lt;code&gt;dest&lt;/code&gt;. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc10814cde731762cb07a8de6fded71423754dc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Move&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Как &lt;code&gt;Move&lt;/code&gt; , но возвращает dest. Полезно для поощрения компиляторов к оптимизации хвостового вызова.</target>
        </trans-unit>
        <trans-unit id="63bea6acc9be28a6d3cb950aea732759df8ac57d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvIV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;SvIV&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="8f72df42d4357277ebaaa7626ab2ec8434c74b44" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvNV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;SvNV&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="f987f68efd96052a6b0a92226467d6e95b9160b3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV&lt;/code&gt; , но при необходимости сначала преобразует sv в байтовое представление.</target>
        </trans-unit>
        <trans-unit id="d5b21bddc458bd8cbfcd7db407bfa101b7f02dfa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to byte representation first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVbyte&lt;/code&gt; otherwise.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV&lt;/code&gt; , но при необходимости сначала преобразует sv в байтовое представление. Гарантия оценить св только один раз; в &lt;code&gt;SvPVbyte&lt;/code&gt; случае используйте более эффективный SvPVbyte .</target>
        </trans-unit>
        <trans-unit id="020487c29dd87ab0c92e767efba3c8f41b9bfcc7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV&lt;/code&gt; , но при необходимости сначала преобразует sv в utf8.</target>
        </trans-unit>
        <trans-unit id="a5a0c092212799a2ed1d29176de9f03d368894bf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to utf8 first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVutf8&lt;/code&gt; otherwise.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV&lt;/code&gt; , но при необходимости сначала преобразует sv в utf8. Гарантия оценить св только один раз; в &lt;code&gt;SvPVutf8&lt;/code&gt; случае используйте более эффективный SvPVutf8 .</target>
        </trans-unit>
        <trans-unit id="728e33d136e3d988de2e0baba97a509be6c9c1b3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как и &lt;code&gt;SvPV&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="9f644bfac194a0b755578b81e47d7586566e4504" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but doesn't set a length variable.</source>
          <target state="translated">Как &lt;code&gt;SvPV&lt;/code&gt; , но не устанавливает переменную длины.</target>
        </trans-unit>
        <trans-unit id="153041f77422ab93c76bcbcf6550af4c15800fa0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but will force the SV into containing a string (&lt;code&gt;SvPOK&lt;/code&gt; ), and only a string (&lt;code&gt;SvPOK_only&lt;/code&gt; ), by hook or by crook. You need force if you are going to update the &lt;code&gt;SvPVX&lt;/code&gt; directly. Processes get magic.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV&lt;/code&gt; , но принудит SV содержать строку ( &lt;code&gt;SvPOK&lt;/code&gt; ) и только строку ( &lt;code&gt;SvPOK_only&lt;/code&gt; ) всеми правдами и неправдами. Вам понадобится сила, если вы собираетесь напрямую обновить &lt;code&gt;SvPVX&lt;/code&gt; . Процессы становятся волшебными.</target>
        </trans-unit>
        <trans-unit id="d21fc8eebda239f78f40ff861ae346674bc44746" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but will force the SV into containing a string (&lt;code&gt;SvPOK&lt;/code&gt;), and only a string (&lt;code&gt;SvPOK_only&lt;/code&gt;), by hook or by crook. You need force if you are going to update the &lt;code&gt;SvPVX&lt;/code&gt; directly. Processes get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349b9b0f215cc3428bdddf241602ce0c2e78c72b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94d5ef1f314f46efc3bd3d45f2affc66f0be81f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVutf8&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826e9ea9cb83ae3e7f9096a1ec17389c37388921" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVbyte&lt;/code&gt; otherwise. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141f76de6b791c79da422cfe3133860c38f0a7b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d303190c56047f26fce52e3043032426e788042e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Аналогичен &lt;code&gt;SvPV_force&lt;/code&gt; , но при необходимости сначала преобразует sv в байтовое представление.</target>
        </trans-unit>
        <trans-unit id="e339b69da0fc6099ae5122846dd6d16329909d09" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to byte representation first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVbyte_force&lt;/code&gt; otherwise.</source>
          <target state="translated">Аналогичен &lt;code&gt;SvPV_force&lt;/code&gt; , но при необходимости сначала преобразует sv в байтовое представление. Гарантия оценить св только один раз; в &lt;code&gt;SvPVbyte_force&lt;/code&gt; случае используйте более эффективный SvPVbyte_force .</target>
        </trans-unit>
        <trans-unit id="33e41cb5a5972955c89d4da04933a8a79726a21b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Как &lt;code&gt;SvPV_force&lt;/code&gt; , но при необходимости сначала преобразует sv в utf8.</target>
        </trans-unit>
        <trans-unit id="85dee70f70d9f59dd1fd504ab0aa00e6dc082a6e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to utf8 first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVutf8_force&lt;/code&gt; otherwise.</source>
          <target state="translated">Как &lt;code&gt;SvPV_force&lt;/code&gt; , но при необходимости сначала преобразует sv в utf8. Гарантия оценить св только один раз; в &lt;code&gt;SvPVutf8_force&lt;/code&gt; случае используйте более эффективный SvPVutf8_force .</target>
        </trans-unit>
        <trans-unit id="2ed49f80c2155ad585761ac04bf59edd4a6a0831" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but doesn't process get magic.</source>
          <target state="translated">Как &lt;code&gt;SvPV_force&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="de31ac38b3310b9f71eaea9b2b9823bca2371b5b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef89cf67971528e31aab7836397b698e7ac2bf5f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVutf8_force&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64af48e8fcfd9300a6f250966560fbb0e199baa6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVbyte_force&lt;/code&gt; otherwise. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a9095d2fee3653ae330358ffc4695a81e6b02f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cf6163858835eb56fc5636d4aa26add2cda002" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but doesn't process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd41cfed5f0aafc487ed8b935e2fe00690512ae4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV_nolen&lt;/code&gt; , но сначала преобразует sv в байтовое представление, если это необходимо.</target>
        </trans-unit>
        <trans-unit id="569d8ee3b9025e7d46c4e22dc014e9293f09b9cf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Подобно &lt;code&gt;SvPV_nolen&lt;/code&gt; , но при необходимости сначала преобразует sv в utf8.</target>
        </trans-unit>
        <trans-unit id="c6ed04996a1df68aa8ad7cc1586c48a5135a6669" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;SvPV_nolen&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="84b7cb4480c3132c8864625842015ea55fab81e1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa0a4e5ab6512583ca715ed04c79ddb474737cc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a865431f8a7ccfcbc629a801cbd5a4e318acecb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cce88bb70d307b5b0e2ee525ca3357c9496281e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte&lt;/code&gt;, but when &lt;code&gt;sv&lt;/code&gt; is undef, returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fb5185aac038bc23863cae1034fcc526a2af60" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte_or_null&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a2791b53267404eb74d9bbda43c3aea418ea86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406f4865185c362d6a5d331cd6d62f6ed4d4d970" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8&lt;/code&gt;, but when &lt;code&gt;sv&lt;/code&gt; is undef, returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf879f0e51a10965057e3cd31f489e3ff76dc7b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8_or_null&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab106c9006a177a2bcf08f263e2472e6c9b25246" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV&lt;/code&gt; , but does any set magic required afterwards.</source>
          <target state="translated">Подобно &lt;code&gt;SvSetSV&lt;/code&gt; , но после этого выполняет все необходимые настройки.</target>
        </trans-unit>
        <trans-unit id="18661798a6626e7bf7cdbb46868b189d21d7ee00" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV&lt;/code&gt;, but does any set magic required afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388de52bdbcc28141b225f26cb9f3fe2e05660c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , but does any set magic required afterwards.</source>
          <target state="translated">Подобно &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , но после этого выполняет любую требуемую магию.</target>
        </trans-unit>
        <trans-unit id="0ed8a9070212dcdaecafb195378164bb65737213" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV_nosteal&lt;/code&gt;, but does any set magic required afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a27275be863ed7ef192a76ef76e83185d113390" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvUV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;SvUV&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="c145fe31e7a9856cfd103483b939c0b69292c062" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Zero&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Как и &lt;code&gt;Zero&lt;/code&gt; , но возвращает dest. Полезно для поощрения компиляторов к оптимизации хвостового вызова.</target>
        </trans-unit>
        <trans-unit id="e95906df0f28c9ef1e7b84894c91761f182cafd1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_bin()&lt;/code&gt; but with a '0b' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293678ff919e37219d0e5d9a7fb067403eb39d97" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_hex()&lt;/code&gt; but with a '0x' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c679af24785cdf880157af3d3d87fd5d4c630443" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_oct()&lt;/code&gt; but with a '0' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a30913145132e032417d97e9d5716e5d07e3a09" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;article&lt;/code&gt; but only fetches the body of the article.</source>
          <target state="translated">Подобно &lt;code&gt;article&lt;/code&gt; но получает только текст статьи.</target>
        </trans-unit>
        <trans-unit id="dbf2edb5cf6acda874d56c0ec8d6a027b38ecd7b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;article&lt;/code&gt; but only fetches the headers for the article.</source>
          <target state="translated">Нравится &lt;code&gt;article&lt;/code&gt; но извлекает только заголовки статьи.</target>
        </trans-unit>
        <trans-unit id="698d6282638ff97d91804a4f1cf2ced815c09a43" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cond_wait&lt;/code&gt; , this function may take a shared, &lt;b&gt;locked&lt;/b&gt; variable as an additional parameter; in this case the first parameter is an &lt;b&gt;unlocked&lt;/b&gt; condition variable protected by a distinct lock variable.</source>
          <target state="translated">Как и &lt;code&gt;cond_wait&lt;/code&gt; , эта функция может принимать совместно используемую &lt;b&gt;заблокированную&lt;/b&gt; переменную в качестве дополнительного параметра; в этом случае первый параметр - это переменная состояния &lt;b&gt;разблокировки,&lt;/b&gt; защищенная отдельной переменной блокировки.</target>
        </trans-unit>
        <trans-unit id="c585c7b6a19c2570f8a734ae16123cf56bb4a904" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cond_wait&lt;/code&gt;, this function may take a shared, &lt;b&gt;locked&lt;/b&gt; variable as an additional parameter; in this case the first parameter is an &lt;b&gt;unlocked&lt;/b&gt; condition variable protected by a distinct lock variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58a5c550c804eb437e5a9f29a412c2a917db541" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;copy&lt;/code&gt; , &lt;code&gt;rmscopy&lt;/code&gt; returns 1 on success. If an error occurs, it sets &lt;code&gt;$!&lt;/code&gt; , deletes the output file, and returns 0.</source>
          <target state="translated">Как и &lt;code&gt;copy&lt;/code&gt; , &lt;code&gt;rmscopy&lt;/code&gt; возвращает 1 в случае успеха. В случае ошибки устанавливает &lt;code&gt;$!&lt;/code&gt; , удаляет выходной файл и возвращает 0.</target>
        </trans-unit>
        <trans-unit id="09aa3572893f32ca36724882d530f081b2c921bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;rmscopy&lt;/code&gt; returns 1 on success. If an error occurs, it sets &lt;code&gt;$!&lt;/code&gt;, deletes the output file, and returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62662a2fcd9593969fecb7744ceb2295a389997a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt; , but it prints to the &lt;code&gt;output()&lt;/code&gt; handle so it will not normally be seen by the user except in verbose mode.</source>
          <target state="translated">Подобно &lt;code&gt;diag()&lt;/code&gt; , но он печатает в дескрипторе &lt;code&gt;output()&lt;/code&gt; поэтому обычно он не будет виден пользователем, кроме как в подробном режиме.</target>
        </trans-unit>
        <trans-unit id="983d206f2bed9edbbc722e7d5cdb62e2a06346c5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt; , except the message will not be seen when the test is run in a harness. It will only be visible in the verbose TAP stream.</source>
          <target state="translated">Как и в случае с &lt;code&gt;diag()&lt;/code&gt; , за исключением того, что сообщение не будет отображаться при запуске теста с привязкой. Он будет виден только в подробном потоке TAP.</target>
        </trans-unit>
        <trans-unit id="30ef0020e2af04e6653b9cacfc8060419afe5437" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt;, but it prints to the &lt;code&gt;output()&lt;/code&gt; handle so it will not normally be seen by the user except in verbose mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538ead19e35b8089406067731ca6a5943e4b5625" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt;, except the message will not be seen when the test is run in a harness. It will only be visible in the verbose TAP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca575f5cd45b0a03fd8f03890b4f05a0793bc86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;gv_stashpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;gv_stashpvn&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="8691e2305cbe58536b7649210914f3f94532f0e6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;gv_stashpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a99146718e4827b551f9b9e65221a90a0c6896f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_fetch&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;hv_fetch&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="912f545edccc3d2ff98e523743c3a82e5bacfc8d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_fetch&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b54ec87ed43945667a5780ba1140342cbc85083" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_store&lt;/code&gt; , but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="translated">Подобно &lt;code&gt;hv_store&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина и опускает параметр хеширования.</target>
        </trans-unit>
        <trans-unit id="1d2d05d84f4bcf370e8da5d7a89dc98a3d07cfd1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_store&lt;/code&gt;, but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cafedf7339223e94c98617ca5452de6e823831" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;is_regexp&lt;/code&gt; this function will not be confused by overloading or blessing of the object.</source>
          <target state="translated">Как и &lt;code&gt;is_regexp&lt;/code&gt; , эту функцию не перепутает перегрузка или благословение объекта.</target>
        </trans-unit>
        <trans-unit id="ec33eb3b85c09c1867b94d4c5d38b36ea16437ca" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;newSVpvn&lt;/code&gt; , но принимает буквальную строку с окончанием &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="1133f5bdbc277f0a43759c96e6e4a136a1b3e3c6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6def24d08af466796e4eeead658a36b729d71197" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_flags&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;newSVpvn_flags&lt;/code&gt; , но принимает буквальную строку с завершением &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="abd374fbe3d53f171a59b273311808bb8110bbbb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_flags&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1c507c68363b1af9c5557f4eef915d6b55b26a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt; , but takes a &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;newSVpvn_share&lt;/code&gt; , но принимает строку с окончанием &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="3dd80874ef095a04d51bc5aa179476376e4130b1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair and omits the hash parameter.</source>
          <target state="translated">Подобно &lt;code&gt;newSVpvn_share&lt;/code&gt; , но принимает буквальную строку с завершением &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина и опускает параметр хеширования.</target>
        </trans-unit>
        <trans-unit id="d6eb188b6893f815d9a8bdb27b5ac56dcb122551" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt;, but takes a &lt;code&gt;NUL&lt;/code&gt;-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49fe9b556cc6794a2516353379f67e130b7ce84" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt;, but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40e017fad124c7546ce8fa47f9cf471e202cba4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVsv&lt;/code&gt; but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11236bc0b511fb5ce2d7100079100494df2e3d25" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;our $variable&lt;/code&gt;, &lt;code&gt;our sub&lt;/code&gt; creates a lexical alias to the package subroutine of the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6a38afce596ffe8e2f194c11ba3be9d30f3333" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;pasv_xfer&lt;/code&gt; but the file is stored on the remote server using the STOU command.</source>
          <target state="translated">Подобно &lt;code&gt;pasv_xfer&lt;/code&gt; , но файл сохраняется на удаленном сервере с помощью команды STOU.</target>
        </trans-unit>
        <trans-unit id="7fdced39cfee983640cff74a2b9f6b6a909daee3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;require_ok&lt;/code&gt; , but it will &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; the $module in question and only loads modules, not files.</source>
          <target state="translated">Подобно &lt;code&gt;require_ok&lt;/code&gt; , но он будет &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; рассматриваемый $ module и загружать только модули, а не файлы.</target>
        </trans-unit>
        <trans-unit id="8aa98318e2c42a18d337bece9c82948798cd16dd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;require_ok&lt;/code&gt;, but it will &lt;code&gt;use&lt;/code&gt; the $module in question and only loads modules, not files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85e64ea446b94b53e6b0a98b79acffa9e65509e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;savepvn&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;savepvn&lt;/code&gt; , но принимает буквальную строку с завершением &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="ab6359be0dee3e4a9294e68cf9fca3c1e4336929" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;savepvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f07f68a2d9761eca21ebc3401a1a91fade1e35" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;skip()&lt;/code&gt; , only it will declare the test as failing and TODO. Similar to</source>
          <target state="translated">Как и &lt;code&gt;skip()&lt;/code&gt; , только он объявит тест как неуспешный и TODO. Похожий на</target>
        </trans-unit>
        <trans-unit id="3b33b5f95e762241c8de2a57e4c85b1137e8f8d8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;skip()&lt;/code&gt;, only it will declare the test as failing and TODO. Similar to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb9b95fcba79da2d66d4cd56bc634f774dac146" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;summary()&lt;/code&gt; , but with a lot more detail.</source>
          <target state="translated">То же, что и &lt;code&gt;summary()&lt;/code&gt; , но с более подробной информацией.</target>
        </trans-unit>
        <trans-unit id="8ab77eb4986ee757a37bdc02456676abd72f396c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;summary()&lt;/code&gt;, but with a lot more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc85a8c4d9155e4879660bb0fb6db949fdb86fb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_2pv()&lt;/code&gt; , but doesn't return the length too. You should usually use the macro wrapper &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; instead.</source>
          <target state="translated">Подобно &lt;code&gt;sv_2pv()&lt;/code&gt; , но также не возвращает длину. Вместо этого обычно следует использовать оболочку макроса &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1750e6fee439d6a5d7c30bcaadc82f4b76654a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_2pv()&lt;/code&gt;, but doesn't return the length too. You should usually use the macro wrapper &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ad4ddf0b006c6eedf3f81dcaf16c9a74e085e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catpv&lt;/code&gt; , но и волшебство ручек &amp;laquo;Set&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="74ec50e9ddcc0b0b4bd0d08a497824bb0da8c599" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catpv&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="dbe6953fefa65c174375eefeb7061a1d8d28d608" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96301ae15c375b77c0b44d75ba25e64a78136a72" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catpvf&lt;/code&gt; , но и волшебство ручек &amp;laquo;Set&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d094247c032470d6a00c5c42225cd27f4c338e8b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbd5c1c6aa34bdcc67b11a771b5ad797b082fb9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catpvn&lt;/code&gt; , но и ручки &amp;laquo;набор&amp;raquo; волшебный.</target>
        </trans-unit>
        <trans-unit id="52a1bc2daa3eca49de27291192d60d01346616bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_catpvn&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="1e9ddae012626cb7e4439d9980907c822af4371b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catpvn&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="1a2180c80e256d3412ef812a310798be5ad6256e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b542066a6f682efb528d954086e468e249dbea7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56485c39e91b575f9eb207ecfc300725f3983593" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_flags&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_catpvn_flags&lt;/code&gt; , но принимает буквальную строку с завершением &lt;code&gt;NUL&lt;/code&gt; вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="b8dc77061b45695e2a25d3d8ac47661d896a65ef" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_flags&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f05c96d8dfa46b087685cde4a872c91ee4af9a0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_mg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_catpvn_mg&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="fade09434f240ea70c6ba8138d1c0f20965adbe6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_mg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d239fc60878c8dca9fcf1e90342df6ee45eef1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_nomg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_catpvn_nomg&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="9553515af5d9ec9e4a899f2411b3c5de81d5b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_nomg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fccee46cd5a2dbdef0b3ef34ed13318240c0cba" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_catsv&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="4126df4d71505019e5bb56c7d0ec65e860e57dbf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Как &lt;code&gt;sv_catsv&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="e282341ebef2e50ac8d4be165f9aa0f02c29868c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb27b8554deaad725f9af3d8c8e7188da8e9d19b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_copypv&lt;/code&gt;, but doesn't invoke get magic first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e046d3517a7992d7d1e0d29443cd29e124206320" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_mortalcopy&lt;/code&gt;, but the extra &lt;code&gt;flags&lt;/code&gt; are passed to the &lt;code&gt;sv_setsv_flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d38cbaa11df45cfca68f415fbd38548adbd2370" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setiv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setiv&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="123ae4a5c669f8bb24b8cf176b2e86ba9cbfc11d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setiv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5a47bbf6d640fdec1cfafd760bfcac50991da5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setnv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_setnv&lt;/code&gt; , но и волшебство ручек &amp;laquo;Set&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5eccffc67f571a8b3181f46b612067a5e6120f2c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setnv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d50840cdec742cb9632278831faf80f40688dc0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setpv&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="c985c9690a312c499374407655b6ef9ec2e3e6e4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56d7c6489caae9851ec3dcbcf0456ce3751a5c3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setpvf&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="e2888cf79b645f5b449d1b4c6efb91b8ec3971c7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0fa3335ee153a3cf62cbff610e08349e8ad4b2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpviv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_setpviv&lt;/code&gt; , но и ручки &amp;laquo;набор&amp;raquo; волшебный.</target>
        </trans-unit>
        <trans-unit id="8d6dbd83d6e02627b8bee537343e41f6ed49077f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpviv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60536ff4b89cb5040f19feec4be6721d10632d63" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setpvn&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="550ac76e7931e655b1382b031643a9cb5f52950b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setpvn&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="481f4a0f0ab1f9f4574bd5faf772b821ede1d4a1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0931cea12270dd86a07ee0a9b6ee1091a8ce19a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4532add555cdc643bf47f76523943ddddd111761" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn_mg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setpvn_mg&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="1d27898179a76dbb0e01036ba711d50a1c17a52f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn_mg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ab2d21a73ed79e392dc24ffd68bc21b0539241" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setref_pvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setref_pvn&lt;/code&gt; , но принимает буквальную строку вместо пары строка / длина.</target>
        </trans-unit>
        <trans-unit id="9100e36266ee96c2294edf8f453c2726c48b65aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setref_pvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2af716b65ba49b4f611a8f9a63df24afbfd34e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setsv&lt;/code&gt; , но также обрабатывает магию &quot;set&quot;.</target>
        </trans-unit>
        <trans-unit id="029cf42c4714d829664184f54a69a5ea13d859b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setsv&lt;/code&gt; , но не обрабатывает магию.</target>
        </trans-unit>
        <trans-unit id="45071495c613f505020d1cfedfcf720566ba6c27" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae58ef52e0fd2638f20a33b2c2ee3d70d45b7c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setuv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_setuv&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="6cf4c4e06956eb2dfc680c6ee569d41126786590" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setuv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc41b001c50d7d45a00cf8022d9c1f06a67020a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_usepvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Как &lt;code&gt;sv_usepvn&lt;/code&gt; , но и ручки &amp;laquo;набор&amp;raquo; волшебный.</target>
        </trans-unit>
        <trans-unit id="00375d68772b5a6b2aa4d91a6b9d96252b296a38" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_usepvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48c5ccb5f58e5511c541b8f7b2bd77d2574234d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_downgrade&lt;/code&gt;, but does not process get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19779d3638b6a1460d46c2178e7d9265d9957c6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_downgrade&lt;/code&gt;, but with additional &lt;code&gt;flags&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, processes get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca37005148896df7fa5618334163dda55501b5e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_upgrade&lt;/code&gt;, but doesn't do magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4a9fe99bea434f521ad5e3db444369a722ea86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_upgrade_flags&lt;/code&gt;, but has an additional parameter &lt;code&gt;extra&lt;/code&gt;, which is the number of unused bytes the string of &lt;code&gt;sv&lt;/code&gt; is guaranteed to have free after it upon return. This allows the caller to reserve extra space that it intends to fill, to avoid extra grows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4287363f537b02349404ef50aa3650a2da519053" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vcatpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_vcatpvf&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="07a25ef8f06b26f172176af25178325ccea0a52b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vcatpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14adf015575fe99f6c00f91da82a21970e20b8bd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vsetpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Подобно &lt;code&gt;sv_vsetpvf&lt;/code&gt; , но также обрабатывает магию &quot;установки&quot;.</target>
        </trans-unit>
        <trans-unit id="c99a7a12d3c14e8e4681f2d062967a1eb814fa0a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vsetpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383c55580a503d9f345eddab42a79557f296499" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;system&lt;/code&gt;, backticks put the child process exit code in &lt;code&gt;$?&lt;/code&gt;. If you'd like to manually inspect failure, you can check all possible failure modes by inspecting &lt;code&gt;$?&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ce5b4a9c5792e4e3d807965bc2f0706dc489a6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;todo()&lt;/code&gt; but only returns the value of &lt;code&gt;$TODO&lt;/code&gt; ignoring &lt;code&gt;todo_start()&lt;/code&gt; .</source>
          <target state="translated">Подобно &lt;code&gt;todo()&lt;/code&gt; но возвращает только значение &lt;code&gt;$TODO&lt;/code&gt; игнорируя &lt;code&gt;todo_start()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56964d94313ff89750dbfac18fe4fbc021ee2504" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;todo()&lt;/code&gt; but only returns the value of &lt;code&gt;$TODO&lt;/code&gt; ignoring &lt;code&gt;todo_start()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c255f9b56f3d7d5035702059d9768bd0f276412" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::enabled&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908551960f131fd786c42f778071d30b61bb4476" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::fatal_enabled&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7a76c841e5f7c9a4c21b318b86a7b486c96e50" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::warn&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2a4468163a8d06d15e520d4c62bc8d67e5d7bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::warnif&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824220de4c99cc183f3e468cfbca9236675ff6fd" translate="yes" xml:space="preserve">
          <source>Like C, Perl does a certain amount of expression evaluation at compile time whenever it determines that all arguments to an operator are static and have no side effects. In particular, string concatenation happens at compile time between literals that don't do variable substitution. Backslash interpolation also happens at compile time. You can say</source>
          <target state="translated">Как и C,Perl выполняет определенный объем обработки выражений при компиляции всякий раз,когда определяет,что все аргументы к оператору статичны и не имеют побочных эффектов.В частности,конкатенация строк происходит во время компиляции между литералами,которые не производят подстановку переменных.Обратная косая интерполяция также происходит во время компиляции.Можно сказать</target>
        </trans-unit>
        <trans-unit id="13593327ac22cf57826e7691f4f7f418be9cc890" translate="yes" xml:space="preserve">
          <source>Like CPAN::Bundle::inst_file, but returns the $VERSION</source>
          <target state="translated">Как и CPAN::Bundle::inst_file,но возвращает $VERSION</target>
        </trans-unit>
        <trans-unit id="180b470a6637521531543b80ac419cbc37898af4" translate="yes" xml:space="preserve">
          <source>Like Open3 but without STDERR capture.</source>
          <target state="translated">Как Open3,но без захвата STDERR.</target>
        </trans-unit>
        <trans-unit id="2a63fd6efd31d5a247539ef7d4f8ae9b22c58256" translate="yes" xml:space="preserve">
          <source>Like PERLPREFIX, but only for the site install locations.</source>
          <target state="translated">Как и PERLPREFIX,но только для мест установки на месте.</target>
        </trans-unit>
        <trans-unit id="991d27f54f9be6d1ccfe86b4d87c281614bb46a9" translate="yes" xml:space="preserve">
          <source>Like PERLPREFIX, but only for the vendor install locations.</source>
          <target state="translated">Как и PERLPREFIX,но только для мест установки производителя.</target>
        </trans-unit>
        <trans-unit id="3763cf6a811e93d689892e612d95e5287de00f17" translate="yes" xml:space="preserve">
          <source>Like PERLRUN, except it uses FULLPERL.</source>
          <target state="translated">Как и PERLRUN,за исключением того,что он использует FULLPERL.</target>
        </trans-unit>
        <trans-unit id="8dff3350726fa7fbd1b6410bcef4d0a73c7217e0" translate="yes" xml:space="preserve">
          <source>Like PERLRUNINST, except it uses FULLPERL.</source>
          <target state="translated">Как и PERLRUNINST,за исключением того,что он использует FULLPERL.</target>
        </trans-unit>
        <trans-unit id="5841126e64b3c89df76665c26ca814c87d8e1ffb" translate="yes" xml:space="preserve">
          <source>Like PREFIX, it sets several INSTALL* attributes at once. Unlike PREFIX it is easy to predict where the module will end up. The installation pattern looks like this:</source>
          <target state="translated">Как и PREFIX,он устанавливает сразу несколько атрибутов INSTALL*.В отличие от PREFIX,легко предсказать,где модуль окажется.Шаблон установки выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="3eac640353c06a496dbb32cf64186b352fd16578" translate="yes" xml:space="preserve">
          <source>Like T_REFREF, except it does strict type checking (inheritance is not supported).</source>
          <target state="translated">Как и T_REFREF,за исключением строгой проверки типов (наследование не поддерживается).</target>
        </trans-unit>
        <trans-unit id="b94e5c472f080d505351ce0495c57a8957e2a984" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt; . Checks if &lt;code&gt;$got == $expected&lt;/code&gt; . This is the numeric version.</source>
          <target state="translated">Подобно Test :: More's &lt;code&gt;is()&lt;/code&gt; . Проверяет, если &lt;code&gt;$got == $expected&lt;/code&gt; . Это числовая версия.</target>
        </trans-unit>
        <trans-unit id="cc96ef3fc2347f9c271af1895e169a768a31a74a" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt; . Checks if &lt;code&gt;$got eq $expected&lt;/code&gt; . This is the string version.</source>
          <target state="translated">Как Test :: More's &lt;code&gt;is()&lt;/code&gt; . Проверяет, есть ли &lt;code&gt;$got eq $expected&lt;/code&gt; . Это строковая версия.</target>
        </trans-unit>
        <trans-unit id="17f62623a10758c4c3b6761435cb5075609a1791" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt;. Checks if &lt;code&gt;$got == $expected&lt;/code&gt;. This is the numeric version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9447f392d01121cd67915dc61b0ec4cea9fd56" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt;. Checks if &lt;code&gt;$got eq $expected&lt;/code&gt;. This is the string version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7c9b4de7f16b968c9df459ba87fa3286f45be" translate="yes" xml:space="preserve">
          <source>Like UTF-8, UTF-16 is a variable-width encoding, but where UTF-8 uses 8-bit code units, UTF-16 uses 16-bit code units. All code points occupy either 2 or 4 bytes in UTF-16: code points &lt;code&gt;U+0000..U+FFFF&lt;/code&gt; are stored in a single 16-bit unit, and code points &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; in two 16-bit units. The latter case is using</source>
          <target state="translated">Как и UTF-8, UTF-16 - это кодировка переменной ширины, но там, где UTF-8 использует 8-битные кодовые единицы, UTF-16 использует 16-битные кодовые единицы. Все кодовые точки занимают 2 или 4 байта в UTF-16: кодовые точки &lt;code&gt;U+0000..U+FFFF&lt;/code&gt; хранятся в одном 16-битном блоке, а кодовые точки &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; в двух 16-битных единицы. В последнем случае используется</target>
        </trans-unit>
        <trans-unit id="8dbb04c45e23e298185620fabadd06b7455bdd6a" translate="yes" xml:space="preserve">
          <source>Like UTF-8, but EBCDIC-safe, in the way that UTF-8 is ASCII-safe. This means that all the basic characters (which includes all those that have ASCII equivalents (like &lt;code&gt;&quot;A&quot;&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; ,</source>
          <target state="translated">Подобен UTF-8, но безопасен для EBCDIC, так же как UTF-8 безопасен для ASCII. Это означает, что все основные символы (включая все те, которые имеют эквиваленты ASCII (например, &lt;code&gt;&quot;A&quot;&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e6170cafe214afdbb40c4ffbbff65c6aeebd0ba1" translate="yes" xml:space="preserve">
          <source>Like UTF-8, but EBCDIC-safe, in the way that UTF-8 is ASCII-safe. This means that all the basic characters (which includes all those that have ASCII equivalents (like &lt;code&gt;&quot;A&quot;&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;&quot;%&quot;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6834a3fade58397a1a46bf4fd2e951ded5a49d5e" translate="yes" xml:space="preserve">
          <source>Like a forked process, but without &lt;b&gt;fork&lt;/b&gt;&amp;rsquo;s inherent memory protection. A thread is lighter weight than a full process, in that a process could have multiple threads running around in it, all fighting over the same process&amp;rsquo;s memory space unless steps are taken to protect threads from one another.</source>
          <target state="translated">Как разветвленный процесс, но без защиты памяти, присущей &lt;b&gt;вилке&lt;/b&gt; . Поток имеет меньший вес, чем полный процесс, поскольку в нем может выполняться несколько потоков, и все они борются за пространство памяти одного и того же процесса, если не предприняты шаги для защиты потоков друг от друга.</target>
        </trans-unit>
        <trans-unit id="78469c56db0b66e6f31da051cfaed2326cdc6d30" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, &lt;a href=&quot;#length-EXPR&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;length(Encode::encode('UTF-8', EXPR))&lt;/code&gt; (you'll have to &lt;code&gt;use Encode&lt;/code&gt; first). See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2266dcab58f5b4cb8dc0bb09fd899c041599a2" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, length() normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; (you'll have to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; first). See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Как и все символьные операции Perl, length () обычно работает с логическими символами, а не с физическими байтами. Чтобы узнать, сколько байтов займет строка, закодированная как UTF-8, используйте &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; ( сначала вам нужно будет &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; ). См. &lt;a href=&quot;encode&quot;&gt;Кодирование&lt;/a&gt; и &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78626057c138b9f0db027cda4d5b95c4d7adde63" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, length() normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;&lt;a href=&quot;length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; (you'll have to &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; first). See &lt;a href=&quot;../encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Как и все символьные операции Perl, length () обычно работает с логическими символами, а не с физическими байтами. Чтобы узнать, сколько байтов займет строка, закодированная как UTF-8, используйте &lt;code&gt;&lt;a href=&quot;length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; ( сначала вам нужно будет &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; ). См. &lt;a href=&quot;../encode&quot;&gt;Кодирование&lt;/a&gt; и &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b262f2d7a83664abc258a4d3c715339214f8a1b0" translate="yes" xml:space="preserve">
          <source>Like chapters in many books, all top-level Perl source files (along with a few others here and there) begin with an epigrammatic inscription that alludes, indirectly and metaphorically, to the material you're about to read.</source>
          <target state="translated">Как и главы во многих книгах,все первоисточники на Perl верхнего уровня (наряду с некоторыми другими здесь и там)начинаются с эпиграмматической надписи,которая косвенно и метафорически намекает на материал,который вы собираетесь прочитать.</target>
        </trans-unit>
        <trans-unit id="c0d2dcb20ae20f18b840f20ba286a29e5869333a" translate="yes" xml:space="preserve">
          <source>Like config_sh() but returns, as a list, only the config entries who's names match the $regex.</source>
          <target state="translated">Как и config_sh(),но возвращает в виде списка только те записи config,имена которых совпадают с $regex.</target>
        </trans-unit>
        <trans-unit id="f227f0321acaa416e145c904a4d8ec45847b8d64" translate="yes" xml:space="preserve">
          <source>Like expand, but returns objects of the appropriate type, i.e. CPAN::Bundle objects for bundles, CPAN::Module objects for modules, and CPAN::Distribution objects for distributions. Note: it does not expand to CPAN::Author objects.</source>
          <target state="translated">Подобно расширению,но возвращает объекты соответствующего типа,т.е.CPAN::Bundle objects for bundles,CPAN::Module objects for modules,и CPAN::Distribution objects for distribution.Замечание:он не расширяется до объектов CPAN::Author.</target>
        </trans-unit>
        <trans-unit id="7987e14ecfb530ef395d93bea0916098ba25cf44" translate="yes" xml:space="preserve">
          <source>Like many OO interfaces, the new() method is used to initialize version objects. If two arguments are passed to &lt;code&gt;new()&lt;/code&gt;, the &lt;b&gt;second&lt;/b&gt; one will be used as if it were prefixed with &quot;v&quot;. This is to support historical use of the &lt;code&gt;qw&lt;/code&gt; operator with the CVS variable $Revision, which is automatically incremented by CVS every time the file is committed to the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f385d834d0c261050be5f51ac316a9238769d175" translate="yes" xml:space="preserve">
          <source>Like many languages, Perl provides for user-defined subroutines. These may be located anywhere in the main program, loaded in from other files via the &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; keywords, or generated on the fly using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or anonymous subroutines. You can even call a function indirectly using a variable containing its name or a CODE reference.</source>
          <target state="translated">Как и многие языки, Perl предоставляет пользовательские подпрограммы. Они могут располагаться где угодно в основной программе, загружаться из других файлов с помощью ключевых слов &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; или генерироваться &amp;laquo;на лету&amp;raquo; с использованием &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; или анонимных подпрограмм. Вы даже можете вызвать функцию косвенно, используя переменную, содержащую ее имя или ссылку на КОД.</target>
        </trans-unit>
        <trans-unit id="fa955621946321cd50075e261d09e1a7c92c1f08" translate="yes" xml:space="preserve">
          <source>Like many languages, Perl provides for user-defined subroutines. These may be located anywhere in the main program, loaded in from other files via the &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt; keywords, or generated on the fly using &lt;code&gt;eval&lt;/code&gt; or anonymous subroutines. You can even call a function indirectly using a variable containing its name or a CODE reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff1e677a357242f787d00ffe6b33170f4a5ab49" translate="yes" xml:space="preserve">
          <source>Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bb042c0a5ea5166342c8b0ad6d2f8a2141fbc4" translate="yes" xml:space="preserve">
          <source>Like octal escapes, there are two forms of hexadecimal escapes, but both start with the sequence &lt;code&gt;\x&lt;/code&gt; . This is followed by either exactly two hexadecimal digits forming a number, or a hexadecimal number of arbitrary length surrounded by curly braces. The hexadecimal number is the code point of the character you want to express.</source>
          <target state="translated">Как и восьмеричные escape-последовательности, есть две формы шестнадцатеричных escape-последовательностей, но обе начинаются с последовательности &lt;code&gt;\x&lt;/code&gt; . За ним следуют либо ровно две шестнадцатеричные цифры, образующие число, либо шестнадцатеричное число произвольной длины, окруженное фигурными скобками. Шестнадцатеричное число - это кодовая точка символа, который вы хотите выразить.</target>
        </trans-unit>
        <trans-unit id="8a3985e9eb051df5a5554fc58d279011c3ff1a77" translate="yes" xml:space="preserve">
          <source>Like octal escapes, there are two forms of hexadecimal escapes, but both start with the sequence &lt;code&gt;\x&lt;/code&gt;. This is followed by either exactly two hexadecimal digits forming a number, or a hexadecimal number of arbitrary length surrounded by curly braces. The hexadecimal number is the code point of the character you want to express.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea93e43cdaa94011eb7f20af4624fc89df3b75e2" translate="yes" xml:space="preserve">
          <source>Like other pragmas (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; , for example), features have a lexical effect. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature qw(foo)&lt;/code&gt; will only make the feature &quot;foo&quot; available from that point to the end of the enclosing block.</source>
          <target state="translated">Как и другие прагмы (например, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; ), функции имеют лексический эффект. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature qw(foo)&lt;/code&gt; сделает доступной функцию &amp;laquo;foo&amp;raquo; только от этой точки до конца включающего блока.</target>
        </trans-unit>
        <trans-unit id="60f22d4af04544396e97c0fdb822358710ad0090" translate="yes" xml:space="preserve">
          <source>Like other pragmas (&lt;code&gt;use strict&lt;/code&gt;, for example), features have a lexical effect. &lt;code&gt;use feature qw(foo)&lt;/code&gt; will only make the feature &quot;foo&quot; available from that point to the end of the enclosing block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e331233743ae8af2fc425fe1e46364f44f02fcf9" translate="yes" xml:space="preserve">
          <source>Like property names, there is typically at least a short name for each such property-value, and a long name. If you know any name of the property-value (which you can get by &lt;a href=&quot;#prop_values%28%29&quot;&gt;&quot;prop_values()&quot;&lt;/a&gt;, you can use &lt;code&gt;prop_value_aliases&lt;/code&gt;() to get the long name (when called in scalar context), or a list of all the names, with the short name in the 0th element, the long name in the next element, and any other synonyms in the remaining elements, in no particular order, except that any all-numeric synonyms will be last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84dcad78456fba45a7cd86383d5b5d51df6ab7d" translate="yes" xml:space="preserve">
          <source>Like property names, there is typically at least a short name for each such property-value, and a long name. If you know any name of the property-value (which you can get by &lt;a href=&quot;#prop_values()&quot;&gt;prop_values()&lt;/a&gt;, you can use &lt;code&gt;prop_value_aliases&lt;/code&gt; () to get the long name (when called in scalar context), or a list of all the names, with the short name in the 0th element, the long name in the next element, and any other synonyms in the remaining elements, in no particular order, except that any all-numeric synonyms will be last.</source>
          <target state="translated">Как и имена свойств, для каждого такого значения свойства обычно существует как минимум короткое имя и длинное имя. Если вы знаете какое-либо имя значения свойства (которое можно получить с помощью &lt;a href=&quot;#prop_values()&quot;&gt;prop_values ​​()&lt;/a&gt; , вы можете использовать &lt;code&gt;prop_value_aliases&lt;/code&gt; () для получения длинного имени (при вызове в скалярном контексте) или списка всех имен с коротким имя в 0-м элементе, длинное имя в следующем элементе и любые другие синонимы в оставшихся элементах в произвольном порядке, за исключением того, что любые полностью числовые синонимы будут последними.</target>
        </trans-unit>
        <trans-unit id="199b34f10e1b7c8e7aa443166b2eaa7617b87f12" translate="yes" xml:space="preserve">
          <source>Like sv_copypv, but doesn't invoke get magic first.</source>
          <target state="translated">Как sv_copypv,но сначала не вызывай магию.</target>
        </trans-unit>
        <trans-unit id="fa3c089315a35ab69068f31035a53de1242b1f4a" translate="yes" xml:space="preserve">
          <source>Like sv_utf8_upgrade, but doesn't do magic on &lt;code&gt;sv&lt;/code&gt; .</source>
          <target state="translated">Подобно sv_utf8_upgrade, но не творит чудеса с &lt;code&gt;sv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491235f5863c419144ac401911f4034bbb235829" translate="yes" xml:space="preserve">
          <source>Like sv_utf8_upgrade_flags, but has an additional parameter &lt;code&gt;extra&lt;/code&gt; , which is the number of unused bytes the string of 'sv' is guaranteed to have free after it upon return. This allows the caller to reserve extra space that it intends to fill, to avoid extra grows.</source>
          <target state="translated">Подобно sv_utf8_upgrade_flags, но имеет дополнительный параметр &lt;code&gt;extra&lt;/code&gt; , который представляет собой количество неиспользуемых байтов, после которых строка 'sv' гарантированно будет свободна после возврата. Это позволяет вызывающему абоненту зарезервировать дополнительное пространство, которое он намеревается заполнить, чтобы избежать дополнительного увеличения.</target>
        </trans-unit>
        <trans-unit id="b473e807de38ef5585564f3999d8d88c0c2f9ac9" translate="yes" xml:space="preserve">
          <source>Like the</source>
          <target state="translated">Как и</target>
        </trans-unit>
        <trans-unit id="1ec8b78d751f8503bdfc1aa5c17c2c7732f46241" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#%28%3Fadlupimnsx-imnsx%29&quot;&gt;&quot;(?adlupimnsx-imnsx)&quot;&lt;/a&gt; construct, &lt;code&gt;aa&lt;/code&gt; and &lt;code&gt;&quot;a&quot;&lt;/code&gt; override each other, as do &lt;code&gt;xx&lt;/code&gt; and &lt;code&gt;&quot;x&quot;&lt;/code&gt;. They are not additive. So, doing something like &lt;code&gt;(?xx-x:foo)&lt;/code&gt; turns off all &lt;code&gt;&quot;x&quot;&lt;/code&gt; behavior for matching &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e09e117230303a3e7e1540483add81bffa29662" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#Unicode-Properties&quot;&gt;Unicode properties&lt;/a&gt;, most of the POSIX properties match the same regardless of whether case-insensitive (&lt;code&gt;/i&lt;/code&gt;) matching is in effect or not. The two exceptions are &lt;code&gt;[:upper:]&lt;/code&gt; and &lt;code&gt;[:lower:]&lt;/code&gt;. Under &lt;code&gt;/i&lt;/code&gt;, they each match the union of &lt;code&gt;[:upper:]&lt;/code&gt; and &lt;code&gt;[:lower:]&lt;/code&gt;.</source>
          <target state="translated">Как и &lt;a href=&quot;#Unicode-Properties&quot;&gt;свойства Unicode&lt;/a&gt; , большинство свойств POSIX совпадают независимо от того, действует ли совпадение без учета регистра ( &lt;code&gt;/i&lt;/code&gt; ) или нет. Двумя исключениями являются &lt;code&gt;[:upper:]&lt;/code&gt; и &lt;code&gt;[:lower:]&lt;/code&gt; . Под &lt;code&gt;/i&lt;/code&gt; они соответствуют объединению &lt;code&gt;[:upper:]&lt;/code&gt; и &lt;code&gt;[:lower:]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56e82ac0ce55d077dfdc075b06ddac56ad8fd05e" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, if a &lt;code&gt;readline&lt;/code&gt; expression is used as the condition of a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; loop, then it will be implicitly assigned to &lt;code&gt;$_&lt;/code&gt;. If either a &lt;code&gt;readline&lt;/code&gt; expression or an explicit assignment of a &lt;code&gt;readline&lt;/code&gt; expression to a scalar is used as a &lt;code&gt;while&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt; condition, then the condition actually tests for definedness of the expression's value, not for its regular truth value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf3175a68d636ecf9925b34e6ff6a44a156b660" translate="yes" xml:space="preserve">
          <source>Like the existing DBM Filter functionality, this module arranges for the &lt;code&gt;$_&lt;/code&gt; variable to be populated with the key or value that a filter will check. This usually means that most DBM filters tend to be very short.</source>
          <target state="translated">Как и существующая функция фильтра DBM, этот модуль обеспечивает заполнение переменной &lt;code&gt;$_&lt;/code&gt; ключом или значением, которое будет проверяться фильтром. Обычно это означает, что большинство фильтров DBM имеют тенденцию быть очень короткими.</target>
        </trans-unit>
        <trans-unit id="2aa9d0e9009ba5b1538c8cb1249a579d95be7bcd" translate="yes" xml:space="preserve">
          <source>Like the flattened incoming parameter list, the return list is also flattened on return. So all you have managed to do here is stored everything in &lt;code&gt;@a&lt;/code&gt; and made &lt;code&gt;@b&lt;/code&gt; empty. See &lt;a href=&quot;#Pass-by-Reference&quot;&gt;&quot;Pass by Reference&quot;&lt;/a&gt; for alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cce6c08fa97ca0be477f0721fb283a52d10b11" translate="yes" xml:space="preserve">
          <source>Like the flattened incoming parameter list, the return list is also flattened on return. So all you have managed to do here is stored everything in &lt;code&gt;@a&lt;/code&gt; and made &lt;code&gt;@b&lt;/code&gt; empty. See &lt;a href=&quot;#Pass-by-Reference&quot;&gt;Pass by Reference&lt;/a&gt; for alternatives.</source>
          <target state="translated">Подобно уплощенному списку входящих параметров, возвращаемый список также выравнивается при возврате. Итак, все, что вам удалось здесь сделать, это сохранить все в &lt;code&gt;@a&lt;/code&gt; и сделать &lt;code&gt;@b&lt;/code&gt; пустым. См. Альтернативные варианты в разделе &amp;laquo; &lt;a href=&quot;#Pass-by-Reference&quot;&gt;Передача по ссылке&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afd075e21a0c597db0ab2821856e88ceb5961fd6" translate="yes" xml:space="preserve">
          <source>Like the normal &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt;, except it reports according to your &lt;code&gt;level()&lt;/code&gt; .</source>
          <target state="translated">Как обычный &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; , за исключением того, что он сообщает в соответствии с вашим &lt;code&gt;level()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d1f3b5af74d0fcd2065711ea1d65ad1437e3ca2" translate="yes" xml:space="preserve">
          <source>Like the normal &lt;code&gt;caller()&lt;/code&gt;, except it reports according to your &lt;code&gt;level()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2b0ec03adb313bc91ba8220b07bc1ab800f57" translate="yes" xml:space="preserve">
          <source>Like the other methods, the input parameter is not checked for validity. &lt;code&gt;undef&lt;/code&gt; or containing non-digits has the same effect as 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200195811a3c205ce0d87247b5aab2a0a4c65d8e" translate="yes" xml:space="preserve">
          <source>Like their AV counterparts, &lt;code&gt;hv_clear&lt;/code&gt; deletes all the entries in the hash table but does not actually delete the hash table. The &lt;code&gt;hv_undef&lt;/code&gt; deletes both the entries and the hash table itself.</source>
          <target state="translated">Как и их AV-аналоги, &lt;code&gt;hv_clear&lt;/code&gt; удаляет все записи в хеш-таблице, но фактически не удаляет хеш-таблицу. &lt;code&gt;hv_undef&lt;/code&gt; удаляет обе записи и сам хэш - таблицу.</target>
        </trans-unit>
        <trans-unit id="e82abff5c6c10139b1928c82bbe909480a69e24a" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl binary that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Скорее всего,это происходит для двоичного файла perl,который был установлен неправильно.Исправьте,проведя правильную установку.</target>
        </trans-unit>
        <trans-unit id="5195e8e0970c4f356d29e2dc5df49c188d971cda" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl library tree that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Очень похоже на то,что дерево perl-библиотек было установлено некорректно.Исправьте,проведя правильную установку.</target>
        </trans-unit>
        <trans-unit id="5a2da7a5f3225b97435c319fa8a430eb74f8dc5d" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Вероятно,это произойдет для perl,который не был установлен должным образом.Исправьте,проведя правильную установку.</target>
        </trans-unit>
        <trans-unit id="fc78654c95e5eb9c78fd54cff382380c29359dd7" translate="yes" xml:space="preserve">
          <source>Likely you forgot the &lt;code&gt;/x&lt;/code&gt; modifier or there was a typo in the pattern. For example, did you really mean to match a form-feed? If so, all the ASCII vertical space control characters are representable by escape sequences which won't present such a jarring appearance as your pattern does when displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87358f4e2ddd3816d7f56b79a06ec5e87b2b467" translate="yes" xml:space="preserve">
          <source>Likely, you should use this only for debugging anyway.</source>
          <target state="translated">Скорее всего,тебе стоит использовать это только для отладки.</target>
        </trans-unit>
        <trans-unit id="5e2ad79894aa707c67ca50ba4a61384758d0873a" translate="yes" xml:space="preserve">
          <source>Likewise on all other OS levels. Then execute the following command, and fill in its choices</source>
          <target state="translated">Так же и на всех других уровнях ОС.Затем выполните следующую команду и заполните ее выбор.</target>
        </trans-unit>
        <trans-unit id="907735ad554b354d50508dedc314aa895182b86c" translate="yes" xml:space="preserve">
          <source>Likewise the call in:</source>
          <target state="translated">Точно так же,как и звонок:</target>
        </trans-unit>
        <trans-unit id="65ed6c9aec28bb7eb33858993a0680b4d9a0419f" translate="yes" xml:space="preserve">
          <source>Likewise,</source>
          <target state="translated">Likewise,</target>
        </trans-unit>
        <trans-unit id="c02c1537f9374adb04ab89c0867bc362683b8992" translate="yes" xml:space="preserve">
          <source>Likewise, &lt;code&gt;o conf KEY &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt; LIST&lt;/code&gt; passes the LIST to the corresponding splice command.</source>
          <target state="translated">Точно так же &lt;code&gt;o conf KEY &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt; LIST&lt;/code&gt; передает LIST соответствующей команде splice.</target>
        </trans-unit>
        <trans-unit id="886e8885f96bc8b4a5e209980f534b6f61eacaf4" translate="yes" xml:space="preserve">
          <source>Likewise, Filter::Simple is also smart enough to Do The Right Thing if you use Exporter:</source>
          <target state="translated">Аналогично,фильтр::Simple также достаточно умен,чтобы сделать правильную вещь,если вы используете Exporter:</target>
        </trans-unit>
        <trans-unit id="160bda2110bdb1f3a950ddf5accf544eb0786069" translate="yes" xml:space="preserve">
          <source>Likewise, declaring any variables with the &lt;code&gt;:Loud&lt;/code&gt; attribute within the package:</source>
          <target state="translated">Точно так же объявление любых переменных с атрибутом &lt;code&gt;:Loud&lt;/code&gt; в пакете:</target>
        </trans-unit>
        <trans-unit id="84a02ce9b38a8238dd6e99f162e9536e66631ce0" translate="yes" xml:space="preserve">
          <source>Likewise, install &quot;iPKGui Beta&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6adecc01f3598897c4c9f089b3d20664151e435" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; formats pack a string that's that many bits long. Each such format generates 1 bit of the result. These are typically followed by a repeat count like &lt;code&gt;B8&lt;/code&gt; or &lt;code&gt;B64&lt;/code&gt; .</source>
          <target state="translated">Точно так же форматы &lt;code&gt;b&lt;/code&gt; и &lt;code&gt;B&lt;/code&gt; упаковывают строку длиной столько бит. Каждый такой формат генерирует 1 бит результата. Обычно за ними следует счетчик повторов, например &lt;code&gt;B8&lt;/code&gt; или &lt;code&gt;B64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a9dd269cb5956c09af91c5ffea1e001451d2341" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; formats pack a string that's that many bits long. Each such format generates 1 bit of the result. These are typically followed by a repeat count like &lt;code&gt;B8&lt;/code&gt; or &lt;code&gt;B64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e8f9ee995abe8e9c9ec7e9aaf53f3578e6a6e8" translate="yes" xml:space="preserve">
          <source>Likewise, there is no public API to read values from the temporaries stack. Instead. the macros &lt;code&gt;SAVETMPS&lt;/code&gt; and &lt;code&gt;FREETPMS&lt;/code&gt; are used. The &lt;code&gt;SAVETMPS&lt;/code&gt; macro establishes the base levels of the temporaries stack, by capturing the current value of &lt;code&gt;PL_tmps_ix&lt;/code&gt; into &lt;code&gt;PL_tmps_floor&lt;/code&gt; and saving the previous value to the save stack. Thereafter, whenever &lt;code&gt;FREETMPS&lt;/code&gt; is invoked all of the temporaries that have been pushed since that level are reclaimed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cbdf24c8a85f92cd82aa3a094249d6de02bf8f" translate="yes" xml:space="preserve">
          <source>Likewise, to create a class hierarchy in which every initializer inherited by a new object is invoked:</source>
          <target state="translated">Аналогично,для создания иерархии классов вызывается каждый инициализатор,унаследованный новым объектом:</target>
        </trans-unit>
        <trans-unit id="b2d941fa8901c396508e50ff7018851261440d12" translate="yes" xml:space="preserve">
          <source>Likewise, when using the &lt;a href=&quot;autosplit&quot;&gt;&lt;code&gt;AutoSplit&lt;/code&gt;&lt;/a&gt; module, try to keep your functions to 8.3 naming and case-insensitive conventions; or, at the least, make it so the resulting files have a unique (case-insensitively) first 8 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bd46189954c3a64d496328cd96089f6f4f9542" translate="yes" xml:space="preserve">
          <source>Likewise, when using the &lt;code&gt;AutoSplit&lt;/code&gt; module, try to keep your functions to 8.3 naming and case-insensitive conventions; or, at the least, make it so the resulting files have a unique (case-insensitively) first 8 characters.</source>
          <target state="translated">Точно так же, используя модуль &lt;code&gt;AutoSplit&lt;/code&gt; , старайтесь, чтобы ваши функции соответствовали правилам именования 8.3 и регистронезависимости; или, по крайней мере, сделать так, чтобы итоговые файлы имели уникальные (без учета регистра) первые 8 символов.</target>
        </trans-unit>
        <trans-unit id="622e4bdf3675a214ecc2d659e2770e558df61e8a" translate="yes" xml:space="preserve">
          <source>Limit on the value of Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73edeb8158f532278a32208dcd47fe3a3d7f86f" translate="yes" xml:space="preserve">
          <source>Limit recursion depth to N levels when dumping structures. Negative values are interpreted as infinity. Default: infinity.</source>
          <target state="translated">Ограничить глубину рекурсии до N уровней при свалке конструкций.Отрицательные значения интерпретируются как бесконечность.По умолчанию:бесконечность.</target>
        </trans-unit>
        <trans-unit id="2d1726e76688b7950a8162233fc1e17657b1edf0" translate="yes" xml:space="preserve">
          <source>Limitation with regard to &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">Ограничение в отношении &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55330d97525455296ae0e4b51ff25bb7abdac5c6" translate="yes" xml:space="preserve">
          <source>Limitation with regard to _</source>
          <target state="translated">Ограничение в отношении _</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="b39570022e2b6b41ec90b798a2544b51d29caf01" translate="yes" xml:space="preserve">
          <source>Limitations of Perl under AmigaOS 4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e092ad529e2081e851e343be794f7609f24237" translate="yes" xml:space="preserve">
          <source>Limits of time_t</source>
          <target state="translated">Пределы времени_t</target>
        </trans-unit>
        <trans-unit id="6234e2f414d2b26733b9fd769dba962a7fcc3692" translate="yes" xml:space="preserve">
          <source>Limits on Numbers of Open Files on Solaris.</source>
          <target state="translated">Лимиты на номера открытых файлов на Solaris.</target>
        </trans-unit>
        <trans-unit id="a139366c419ef510c76cf49f4a191349fd578640" translate="yes" xml:space="preserve">
          <source>Line 1 is a macro, and its definition is dependent on your operating system. Line 3 references &lt;code&gt;PL_do_undump&lt;/code&gt; , a global variable - all global variables in Perl start with &lt;code&gt;PL_&lt;/code&gt; . This tells you whether the current running program was created with the &lt;code&gt;-u&lt;/code&gt; flag to perl and then</source>
          <target state="translated">Строка 1 - это макрос, и его определение зависит от вашей операционной системы. Строка 3 ссылается на &lt;code&gt;PL_do_undump&lt;/code&gt; , глобальную переменную - все глобальные переменные в Perl начинаются с &lt;code&gt;PL_&lt;/code&gt; . Это говорит вам, была ли текущая запущенная программа создана с флагом &lt;code&gt;-u&lt;/code&gt; для perl, а затем</target>
        </trans-unit>
        <trans-unit id="0b0e9f3f9db20ac76f95740a88474a1af455f6f4" translate="yes" xml:space="preserve">
          <source>Line 1 is a macro, and its definition is dependent on your operating system. Line 3 references &lt;code&gt;PL_do_undump&lt;/code&gt;, a global variable - all global variables in Perl start with &lt;code&gt;PL_&lt;/code&gt;. This tells you whether the current running program was created with the &lt;code&gt;-u&lt;/code&gt; flag to perl and then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d4d7a9a244a3d12dfe7fb244172b4a39165816" translate="yes" xml:space="preserve">
          <source>Line 1 tells us we're looking at an SV which lives at &lt;code&gt;0xa04ecbc&lt;/code&gt; in memory. SVs themselves are very simple structures, but they contain a pointer to a more complex structure. In this case, it's a PV, a structure which holds a string value, at location &lt;code&gt;0xa041450&lt;/code&gt; . Line 2 is the reference count; there are no other references to this data, so it's 1.</source>
          <target state="translated">Строка 1 сообщает нам, что мы смотрим на SV, который &lt;code&gt;0xa04ecbc&lt;/code&gt; в памяти по адресу 0xa04ecbc . Сами SV - очень простые структуры, но они содержат указатель на более сложную структуру. В данном случае это PV, структура, которая содержит строковое значение в местоположении &lt;code&gt;0xa041450&lt;/code&gt; . Строка 2 - это счетчик ссылок; других ссылок на эти данные нет, так что это 1.</target>
        </trans-unit>
        <trans-unit id="8257e528d7a56dcca4db122b50b35bdc95c95709" translate="yes" xml:space="preserve">
          <source>Line 1 tells us we're looking at an SV which lives at &lt;code&gt;0xa04ecbc&lt;/code&gt; in memory. SVs themselves are very simple structures, but they contain a pointer to a more complex structure. In this case, it's a PV, a structure which holds a string value, at location &lt;code&gt;0xa041450&lt;/code&gt;. Line 2 is the reference count; there are no other references to this data, so it's 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852a5525bd0666646b8baf89f18138582eb7fb29" translate="yes" xml:space="preserve">
          <source>Line 1, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Filter::cpp&lt;/code&gt; , includes and installs the &lt;code&gt;cpp&lt;/code&gt; filter module. All source filters work this way. The use statement is compiled and executed at compile time, before any more of the file is read, and it attaches the cpp filter to the source stream behind the scenes. Now the data flow looks like this:</source>
          <target state="translated">Строка 1, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Filter::cpp&lt;/code&gt; , включает и устанавливает модуль фильтра &lt;code&gt;cpp&lt;/code&gt; . Так работают все исходные фильтры. Оператор use компилируется и выполняется во время компиляции, прежде чем будет прочитана какая-либо часть файла, и прикрепляет фильтр cpp к исходному потоку за кулисами. Теперь поток данных выглядит так:</target>
        </trans-unit>
        <trans-unit id="7d80c9fd96dedf73af4c56122f85ab0c0aa067ae" translate="yes" xml:space="preserve">
          <source>Line 1, &lt;code&gt;use Filter::cpp&lt;/code&gt;, includes and installs the &lt;code&gt;cpp&lt;/code&gt; filter module. All source filters work this way. The use statement is compiled and executed at compile time, before any more of the file is read, and it attaches the cpp filter to the source stream behind the scenes. Now the data flow looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe884af42f04d28c78e5fe62707a6228b47c52d" translate="yes" xml:space="preserve">
          <source>Line 10 does the actual catenation: the &lt;code&gt;Move&lt;/code&gt; macro moves a chunk of memory around: we move the string &lt;code&gt;ptr&lt;/code&gt; to the end of the PV - that's the start of the PV plus its current length. We're moving &lt;code&gt;len&lt;/code&gt; bytes of type &lt;code&gt;char&lt;/code&gt; . After doing so, we need to tell Perl we've extended the string, by altering &lt;code&gt;CUR&lt;/code&gt; to reflect the new length. &lt;code&gt;SvEND&lt;/code&gt; is a macro which gives us the end of the string, so that needs to be a &lt;code&gt;&quot;\0&quot;&lt;/code&gt; .</source>
          <target state="translated">Строка 10 выполняет фактическое связывание: макрос &lt;code&gt;Move&lt;/code&gt; перемещает фрагмент памяти: мы перемещаем строку &lt;code&gt;ptr&lt;/code&gt; в конец PV - это начало PV плюс его текущая длина. Мы перемещаем &lt;code&gt;len&lt;/code&gt; байтов типа &lt;code&gt;char&lt;/code&gt; . После этого нам нужно сообщить Perl, что мы расширили строку, изменив &lt;code&gt;CUR&lt;/code&gt; , чтобы отразить новую длину. &lt;code&gt;SvEND&lt;/code&gt; - это макрос, который дает нам конец строки, поэтому он должен быть &lt;code&gt;&quot;\0&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="343b8ed5119a25daa7a642907594c94fca594fc8" translate="yes" xml:space="preserve">
          <source>Line 10 does the actual catenation: the &lt;code&gt;Move&lt;/code&gt; macro moves a chunk of memory around: we move the string &lt;code&gt;ptr&lt;/code&gt; to the end of the PV - that's the start of the PV plus its current length. We're moving &lt;code&gt;len&lt;/code&gt; bytes of type &lt;code&gt;char&lt;/code&gt;. After doing so, we need to tell Perl we've extended the string, by altering &lt;code&gt;CUR&lt;/code&gt; to reflect the new length. &lt;code&gt;SvEND&lt;/code&gt; is a macro which gives us the end of the string, so that needs to be a &lt;code&gt;&quot;\0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ce4818db70a98f47c9e31ba9a951fb125f8128" translate="yes" xml:space="preserve">
          <source>Line 10 is the null op: this does exactly nothing. What is that doing there? If you see the null op, it's a sign that something has been optimized away after parsing. As we mentioned in &lt;a href=&quot;#Optimization&quot;&gt;&quot;Optimization&quot;&lt;/a&gt;, the optimization stage sometimes converts two operations into one, for example when fetching a scalar variable. When this happens, instead of rewriting the op tree and cleaning up the dangling pointers, it's easier just to replace the redundant operation with the null op. Originally, the tree would have looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7912d365642f9e0b2b596d940dc9036620ccc8" translate="yes" xml:space="preserve">
          <source>Line 10 is the null op: this does exactly nothing. What is that doing there? If you see the null op, it's a sign that something has been optimized away after parsing. As we mentioned in &lt;a href=&quot;#Optimization&quot;&gt;Optimization&lt;/a&gt;, the optimization stage sometimes converts two operations into one, for example when fetching a scalar variable. When this happens, instead of rewriting the op tree and cleaning up the dangling pointers, it's easier just to replace the redundant operation with the null op. Originally, the tree would have looked like this:</source>
          <target state="translated">Строка 10 - это нулевая операция: это ничего не делает. Что это там делает? Если вы видите пустую операцию, это означает, что что-то было оптимизировано после анализа. Как мы уже упоминали в &lt;a href=&quot;#Optimization&quot;&gt;оптимизации&lt;/a&gt; , этап оптимизации иногда превращает две операции в одну, например , при выборке скалярную переменную. Когда это происходит, вместо того, чтобы переписывать дерево операций и очищать висящие указатели, проще просто заменить избыточную операцию нулевой операцией. Первоначально дерево выглядело бы так:</target>
        </trans-unit>
        <trans-unit id="264f13994058273b1e958110b35aba9f84b7d3f9" translate="yes" xml:space="preserve">
          <source>Line 13 manipulates the flags; since we've changed the PV, any IV or NV values will no longer be valid: if we have &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; we don't want to use the old IV of 10. &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; is a special UTF-8-aware version of &lt;code&gt;SvPOK_only&lt;/code&gt; , a macro which turns off the IOK and NOK flags and turns on POK. The final &lt;code&gt;SvTAINT&lt;/code&gt; is a macro which launders tainted data if taint mode is turned on.</source>
          <target state="translated">Строка 13 управляет флагами; поскольку мы изменили PV, любые значения IV или NV больше не будут действительными: если у нас &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; мы не хотим использовать старый IV, &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; 10. SvPOK_only_utf8 - это специальная версия &lt;code&gt;SvPOK_only&lt;/code&gt; , поддерживающая UTF-8 , макрос, который отключает флаги IOK и NOK и включает POK. Последний &lt;code&gt;SvTAINT&lt;/code&gt; - это макрос, который стирает испорченные данные, если включен режим заражения.</target>
        </trans-unit>
        <trans-unit id="f14c02821009fa7c46a173af60df4534a9b06517" translate="yes" xml:space="preserve">
          <source>Line 13 manipulates the flags; since we've changed the PV, any IV or NV values will no longer be valid: if we have &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; we don't want to use the old IV of 10. &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; is a special UTF-8-aware version of &lt;code&gt;SvPOK_only&lt;/code&gt;, a macro which turns off the IOK and NOK flags and turns on POK. The final &lt;code&gt;SvTAINT&lt;/code&gt; is a macro which launders tainted data if taint mode is turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755dd87e19fd3ba2af902fab337428ef967e0ea8" translate="yes" xml:space="preserve">
          <source>Line 3 are the flags for this SV - it's OK to use it as a PV, it's a read-only SV (because it's a constant) and the data is a PV internally. Next we've got the contents of the string, starting at location &lt;code&gt;0xa0484e0&lt;/code&gt; .</source>
          <target state="translated">Строка 3 - это флаги для этого SV - его можно использовать как PV, это SV только для чтения (потому что это константа), а данные - это PV. Далее у нас есть содержимое строки, начиная с адреса &lt;code&gt;0xa0484e0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6d733118bea452010f0639494cd9d297ac988a2" translate="yes" xml:space="preserve">
          <source>Line 3 are the flags for this SV - it's OK to use it as a PV, it's a read-only SV (because it's a constant) and the data is a PV internally. Next we've got the contents of the string, starting at location &lt;code&gt;0xa0484e0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40714861418609c0c173cdb387c1235ef584feb6" translate="yes" xml:space="preserve">
          <source>Line 4 calls a function in</source>
          <target state="translated">На линии 4 вызывается функция</target>
        </trans-unit>
        <trans-unit id="b40e00c673cb8c91399cf977ab21f4560a36a721" translate="yes" xml:space="preserve">
          <source>Line 4 checks what type of token we are expecting. &lt;code&gt;Aop&lt;/code&gt; returns a token. If you search for &lt;code&gt;Aop&lt;/code&gt; elsewhere in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce643cab9a4e3c9a722892a06301bcddec99baf" translate="yes" xml:space="preserve">
          <source>Line 5 gives us the current length of the string - note that this does &lt;b&gt;not&lt;/b&gt; include the null terminator. Line 6 is not the length of the string, but the length of the currently allocated buffer; as the string grows, Perl automatically extends the available storage via a routine called &lt;code&gt;SvGROW&lt;/code&gt; .</source>
          <target state="translated">Строка 5 дает нам текущую длину строки - обратите внимание, что она &lt;b&gt;не&lt;/b&gt; включает нулевой терминатор. Строка 6 - это не длина строки, а длина выделенного в данный момент буфера; по мере роста строки Perl автоматически расширяет доступное хранилище с помощью процедуры &lt;code&gt;SvGROW&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="379de365d1a548a0387a33346f31194909c467b1" translate="yes" xml:space="preserve">
          <source>Line 5 gives us the current length of the string - note that this does &lt;b&gt;not&lt;/b&gt; include the null terminator. Line 6 is not the length of the string, but the length of the currently allocated buffer; as the string grows, Perl automatically extends the available storage via a routine called &lt;code&gt;SvGROW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e801a645ef8652f9762283242a90486b96636e4b" translate="yes" xml:space="preserve">
          <source>Line 5 is another variable declaration - all variable declarations start with &lt;code&gt;d&lt;/code&gt; - which pops from the top of the argument stack two NVs (hence &lt;code&gt;nn&lt;/code&gt; ) and puts them into the variables &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; , hence the &lt;code&gt;rl&lt;/code&gt; . These are the two operands to the addition operator. Next, we call &lt;code&gt;SETn&lt;/code&gt; to set the NV of the return value to the result of adding the two values. This done, we return - the &lt;code&gt;RETURN&lt;/code&gt; macro makes sure that our return value is properly handled, and we pass the next operator to run back to the main run loop.</source>
          <target state="translated">Строка 5 - это еще одно объявление переменной - все объявления переменных начинаются с &lt;code&gt;d&lt;/code&gt; - которое выталкивает из вершины стека аргументов два NV (отсюда &lt;code&gt;nn&lt;/code&gt; ) и помещает их в переменные &lt;code&gt;right&lt;/code&gt; и &lt;code&gt;left&lt;/code&gt; , следовательно, &lt;code&gt;rl&lt;/code&gt; . Это два операнда оператора сложения. Затем мы вызываем &lt;code&gt;SETn&lt;/code&gt; , чтобы установить NV возвращаемого значения как результат сложения двух значений. После этого мы возвращаемся - макрос &lt;code&gt;RETURN&lt;/code&gt; обеспечивает правильную обработку нашего возвращаемого значения, и мы передаем следующий оператор для возврата в основной цикл выполнения.</target>
        </trans-unit>
        <trans-unit id="9ab0a06fa26dc1e693bbb46194cc19123ec14b86" translate="yes" xml:space="preserve">
          <source>Line 6 installs the city name into the appropriate array. &lt;code&gt;$table{$country}&lt;/code&gt; now holds a reference to the array of cities seen in that country so far. Line 6 is exactly like</source>
          <target state="translated">Строка 6 устанавливает название города в соответствующий массив. &lt;code&gt;$table{$country}&lt;/code&gt; теперь содержит ссылку на массив городов, замеченных на данный момент в этой стране. Строка 6 в точности похожа на</target>
        </trans-unit>
        <trans-unit id="c2ba84f7598874c7f48acd427ca1d636fc55bdcd" translate="yes" xml:space="preserve">
          <source>Line 6 is another variable declaration - all variable declarations start with &lt;code&gt;d&lt;/code&gt; - which pops from the top of the argument stack two NVs (hence &lt;code&gt;nn&lt;/code&gt;) and puts them into the variables &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;, hence the &lt;code&gt;rl&lt;/code&gt;. These are the two operands to the addition operator. Next, we call &lt;code&gt;SETn&lt;/code&gt; to set the NV of the return value to the result of adding the two values. This done, we return - the &lt;code&gt;RETURN&lt;/code&gt; macro makes sure that our return value is properly handled, and we pass the next operator to run back to the main run loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48a3eb6c3c3e42eae96423913fd8ffbda526837" translate="yes" xml:space="preserve">
          <source>Line Buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe50eaa50ff37a3814f18a6020ab1131445d28" translate="yes" xml:space="preserve">
          <source>Line Listing Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62686b06fae48d96cf870eba5c52faaa0c94ec93" translate="yes" xml:space="preserve">
          <source>Line number that will be executed next.</source>
          <target state="translated">Номер строки,которая будет выполнена следующим.</target>
        </trans-unit>
        <trans-unit id="4c2e43f7c549f47cf9031361a83c442a60f08003" translate="yes" xml:space="preserve">
          <source>Line up corresponding items vertically.</source>
          <target state="translated">Выровняйте соответствующие пункты по вертикали.</target>
        </trans-unit>
        <trans-unit id="90a0a22c457fd80684a0398fb72051a69780b70d" translate="yes" xml:space="preserve">
          <source>Line up corresponding things vertically, especially if it'd be too long to fit on one line anyway.</source>
          <target state="translated">Выровняйте соответствующие вещи по вертикали,особенно если они все равно будут слишком длинными,чтобы поместиться на одной линии.</target>
        </trans-unit>
        <trans-unit id="fddad56552c576f0323dae03070effe7302ccb5f" translate="yes" xml:space="preserve">
          <source>Line up your transliterations when it makes sense:</source>
          <target state="translated">Выстраивайте свои транслитерации,когда это имеет смысл:</target>
        </trans-unit>
        <trans-unit id="4dd6f945e5b458504f42d21fe69947944476c20f" translate="yes" xml:space="preserve">
          <source>Line wrapping to form simple paragraphs</source>
          <target state="translated">Обёртывание в линию для формирования простых абзацев</target>
        </trans-unit>
        <trans-unit id="3c31b396df21c211f23a01f3c792334d1e4f696c" translate="yes" xml:space="preserve">
          <source>Line-by-line debugging. Causes &lt;code&gt;DB::DB()&lt;/code&gt; subroutine to be called for each statement executed. Also causes saving source code lines (like 0x400).</source>
          <target state="translated">Построчная отладка. Вызывает подпрограмму &lt;code&gt;DB::DB()&lt;/code&gt; для каждого выполненного оператора. Также вызывает сохранение строк исходного кода (например, 0x400).</target>
        </trans-unit>
        <trans-unit id="4a4c07d14ccbabaacd2cac3e3e1dcd6526decdb6" translate="yes" xml:space="preserve">
          <source>Lines 2-4 acquire a city and country name. Line 5 looks to see if the country is already present as a key in the hash. If it's not, the program uses the &lt;code&gt;[]&lt;/code&gt; notation (&lt;a href=&quot;#Make-Rule-2&quot;&gt;&lt;b&gt;Make Rule 2&lt;/b&gt;&lt;/a&gt;) to manufacture a new, empty anonymous array of cities, and installs a reference to it into the hash under the appropriate key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6544069544ff400a2f96a13aacecf88aefcebba3" translate="yes" xml:space="preserve">
          <source>Lines 2-4 acquire a city and country name. Line 5 looks to see if the country is already present as a key in the hash. If it's not, the program uses the &lt;code&gt;[]&lt;/code&gt; notation (&lt;b&gt;Make Rule 2&lt;/b&gt;) to manufacture a new, empty anonymous array of cities, and installs a reference to it into the hash under the appropriate key.</source>
          <target state="translated">Строки 2-4 получают название города и страны. Строка 5 проверяет, присутствует ли уже страна в качестве ключа в хэше. Если это не так, программа использует нотацию &lt;code&gt;[]&lt;/code&gt; ( &lt;b&gt;Правило создания 2&lt;/b&gt; ) для создания нового пустого анонимного массива городов и устанавливает ссылку на него в хэш под соответствующим ключом.</target>
        </trans-unit>
        <trans-unit id="f9204249863f9ef26ff51a8eb193e8408a39e90b" translate="yes" xml:space="preserve">
          <source>Lines 2-7 are responsible for building the structure in the first place. Here they are again:</source>
          <target state="translated">Линии 2-7 отвечают за строительство сооружения в первую очередь.Вот они опять:</target>
        </trans-unit>
        <trans-unit id="de6cda1578fd7d9e7a9658f2b0c6b2f1938e7d0c" translate="yes" xml:space="preserve">
          <source>Lines are wrapped at &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columns (default value: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; should be set to the full width of your output device. In fact, every resulting line will have length of no more than &lt;code&gt;$columns - 1&lt;/code&gt; .</source>
          <target state="translated">Строки переносятся в &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columns (значение по умолчанию: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; должна быть установлена ​​на всю ширину вашего устройства вывода. Фактически каждая результирующая строка будет иметь длину не более &lt;code&gt;$columns - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd8be9ac7f4d3de35a2d0dba7d82ca50f5c0336" translate="yes" xml:space="preserve">
          <source>Lines are wrapped at &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columns (default value: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; should be set to the full width of your output device. In fact, every resulting line will have length of no more than &lt;code&gt;$columns - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b80c81ac338346fa6d5a46950a43da0e9261d9f" translate="yes" xml:space="preserve">
          <source>Linguistic tailoring for DUCET via Unicode::Collate</source>
          <target state="translated">Лингвистический пошив для DUCET через Unicode::Collate</target>
        </trans-unit>
        <trans-unit id="911361fa28ffec535144574ef716816f8b8cd069" translate="yes" xml:space="preserve">
          <source>Link count not updated because hard links are not quite that hard (They are sort of half-way between hard and soft links). (AmigaOS)</source>
          <target state="translated">Ссылки не обновляются,потому что жесткие ссылки не совсем такие уж и жесткие (они как бы находятся на полпути между жесткими и мягкими ссылками).(AmigaOS)</target>
        </trans-unit>
        <trans-unit id="1bd9f440f54676f1bb94923dc077847ab746b4ad" translate="yes" xml:space="preserve">
          <source>Link dynamic extensions with AddressSanitizer. You must manually specify &lt;code&gt;-shared&lt;/code&gt; because using &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; will prevent Configure from setting a default value for &lt;code&gt;lddlflags&lt;/code&gt; , which usually contains &lt;code&gt;-shared&lt;/code&gt; (at least on Linux).</source>
          <target state="translated">Свяжите динамические расширения с AddressSanitizer. Вы должны вручную указать &lt;code&gt;-shared&lt;/code&gt; , потому что использование &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; не позволит Configure установить значение по умолчанию для &lt;code&gt;lddlflags&lt;/code&gt; , которое обычно содержит &lt;code&gt;-shared&lt;/code&gt; (по крайней мере, в Linux).</target>
        </trans-unit>
        <trans-unit id="8e4a85ad0592eae3d98b608b03a13168bab41ac1" translate="yes" xml:space="preserve">
          <source>Link dynamic extensions with AddressSanitizer. You must manually specify &lt;code&gt;-shared&lt;/code&gt; because using &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; will prevent Configure from setting a default value for &lt;code&gt;lddlflags&lt;/code&gt;, which usually contains &lt;code&gt;-shared&lt;/code&gt; (at least on Linux).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f974c23cae7ac7ab09ab4582a91560c7102a2b" translate="yes" xml:space="preserve">
          <source>Link the perl executable with AddressSanitizer.</source>
          <target state="translated">Соедините исполняемый файл perl с AddressSanitizer.</target>
        </trans-unit>
        <trans-unit id="41c90512ffda6347e72f72d0a6f190da9ca1b80a" translate="yes" xml:space="preserve">
          <source>Link this text to that manual page. E.g., &lt;code&gt;L&amp;lt;Perl Error Messages|perldiag&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Свяжите этот текст с этой страницей руководства. Например, &lt;code&gt;L&amp;lt;Perl Error Messages|perldiag&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da1dd85543ffc6fef88aec54ac7001cdb21f6577" translate="yes" xml:space="preserve">
          <source>Link this text to that section in that manual page. E.g., &lt;code&gt;L&amp;lt;postfix &quot;if&quot;|perlsyn/&quot;Statement Modifiers&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Свяжите этот текст с этим разделом на странице руководства. Например, &lt;code&gt;L&amp;lt;postfix &quot;if&quot;|perlsyn/&quot;Statement Modifiers&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a893b38edbd5af20fcd220578252e31f67b32a6" translate="yes" xml:space="preserve">
          <source>Link this text to that section in this manual page. E.g., &lt;code&gt;L&amp;lt;the various attributes|/&quot;Member Data&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Свяжите этот текст с этим разделом на этой странице руководства. Например, &lt;code&gt;L&amp;lt;the various attributes|/&quot;Member Data&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a75b0dcbc63f378ca4b7ba049d880c48c223d9a" translate="yes" xml:space="preserve">
          <source>Link to a Perl manual page (e.g., &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt; ). Note that &lt;code&gt;name&lt;/code&gt; should not contain spaces. This syntax is also occasionally used for references to Unix man pages, as in &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">Ссылка на страницу руководства Perl (например, &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt; ). Обратите внимание, что &lt;code&gt;name&lt;/code&gt; не должно содержать пробелов. Этот синтаксис также иногда используется для ссылок на страницы руководства Unix, например, в &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8989d4395dabd5c3aa39385b5b23f283a370aec" translate="yes" xml:space="preserve">
          <source>Link to a Perl manual page (e.g., &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt;). Note that &lt;code&gt;name&lt;/code&gt; should not contain spaces. This syntax is also occasionally used for references to Unix man pages, as in &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebcbb26d8410e15ec0a3bf942439d1fa6f0dc0e" translate="yes" xml:space="preserve">
          <source>Link to a section in other manual page. E.g., &lt;code&gt;L&amp;lt;perlsyn/&quot;For Loops&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Ссылка на раздел на другой странице руководства. Например, &lt;code&gt;L&amp;lt;perlsyn/&quot;For Loops&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a4be78347858c96ca4af009ad12e83b583efec3" translate="yes" xml:space="preserve">
          <source>Link to a section in this manual page. E.g., &lt;code&gt;L&amp;lt;/&quot;Object Methods&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Ссылка на раздел на этой странице руководства. Например, &lt;code&gt;L&amp;lt;/&quot;Object Methods&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c060793b58b5034337a483732320e10661d5f930" translate="yes" xml:space="preserve">
          <source>Linker Problems in Irix</source>
          <target state="translated">Проблемы со связью в Ирикс</target>
        </trans-unit>
        <trans-unit id="91ca4118a066d9e15d3000d362f4707600eb85a4" translate="yes" xml:space="preserve">
          <source>Linking with C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632c0116497fe7ec21df3b6015a06dceee2c2e46" translate="yes" xml:space="preserve">
          <source>Links to an absolute URL. For example, &lt;code&gt;L&amp;lt;&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;The Perl Home Page|&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Ссылки на абсолютный URL. Например, &lt;code&gt;L&amp;lt;&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; или &lt;code&gt;L&amp;lt;The Perl Home Page|&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70dabca050ab89452a19f7ca28b4c05e928c7006" translate="yes" xml:space="preserve">
          <source>Links to an absolute URL. For example, &lt;code&gt;L&amp;lt;http://www.perl.org/&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;The Perl Home Page|http://www.perl.org/&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="83bd0efc45cc0fd69905b50d3c8ace24dff4bd31" translate="yes" xml:space="preserve">
          <source>Linux (x86, ARM, IA64)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec4f23be8f3036b01885e23831c9d8422f8e25f" translate="yes" xml:space="preserve">
          <source>Linux Magazine</source>
          <target state="translated">Linux Magazine</target>
        </trans-unit>
        <trans-unit id="2187306118c639d0411d3a1f0eea679c435e121f" translate="yes" xml:space="preserve">
          <source>Linux-specific shortcuts to specify the &lt;code&gt;O_NONBLOCK&lt;/code&gt; and &lt;code&gt;FD_CLOEXEC&lt;/code&gt; flags during a &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket(2)&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">Специфичные для Linux ярлыки для указания флагов &lt;code&gt;O_NONBLOCK&lt;/code&gt; и &lt;code&gt;FD_CLOEXEC&lt;/code&gt; во время вызова &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket(2)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27bd3b3373ebdc99eec5274a7f58493e52c3e65c" translate="yes" xml:space="preserve">
          <source>Linux-specific shortcuts to specify the &lt;code&gt;O_NONBLOCK&lt;/code&gt; and &lt;code&gt;FD_CLOEXEC&lt;/code&gt; flags during a &lt;code&gt;socket(2)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaedd94529deff9e35130dfc5ae5796d73c29a7" translate="yes" xml:space="preserve">
          <source>LinuxThreads is now obsolete on Linux, and caching &lt;code&gt;getpid()&lt;/code&gt; like this made embedding perl unnecessarily complex (since you'd have to manually update the value of $$), so now &lt;code&gt;$$&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; will always return the same values as the underlying C library.</source>
          <target state="translated">LinuxThreads теперь устарел в Linux, и кеширование &lt;code&gt;getpid()&lt;/code&gt; подобное этому, сделало встраивание perl излишне сложным (так как вам придется вручную обновлять значение $$), поэтому теперь &lt;code&gt;$$&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; всегда будут возвращать те же значения, что и базовая библиотека C.</target>
        </trans-unit>
        <trans-unit id="dc8491ab221544187737048d61360d36010b4180" translate="yes" xml:space="preserve">
          <source>LinuxThreads is now obsolete on Linux, and caching &lt;code&gt;getpid()&lt;/code&gt; like this made embedding perl unnecessarily complex (since you'd have to manually update the value of $$), so now &lt;code&gt;$$&lt;/code&gt; and &lt;code&gt;getppid()&lt;/code&gt; will always return the same values as the underlying C library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="29c9d470de128561132f93d1517a546cc93f2ef7" translate="yes" xml:space="preserve">
          <source>List (default all) actions, breakpoints and watch expressions</source>
          <target state="translated">Список (по умолчанию все)действий,точки останова и выражения наблюдения</target>
        </trans-unit>
        <trans-unit id="4f52dc39b8b924455cea92e15110632fa2352d9b" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;incr+1&lt;/code&gt; lines starting at &lt;code&gt;min&lt;/code&gt; .</source>
          <target state="translated">Список &lt;code&gt;incr+1&lt;/code&gt; строк, начиная с &lt;code&gt;min&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2df285394e85b16a4d8402b790e30140168156" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;incr+1&lt;/code&gt; lines starting at &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605938e2092b0e1418a4f6b86421f6d6aadd1b04" translate="yes" xml:space="preserve">
          <source>List Operators (Rightward)</source>
          <target state="translated">Список операторов (вправо)</target>
        </trans-unit>
        <trans-unit id="ea9c7040ec8c47c48d227dc0186264691d25d357" translate="yes" xml:space="preserve">
          <source>List a single line.</source>
          <target state="translated">Перечислите одну строчку.</target>
        </trans-unit>
        <trans-unit id="43aa9239459d3ee11976e9110444e7fe09843446" translate="yes" xml:space="preserve">
          <source>List all build directories of distributions that have been tested successfully but have not yet been installed. See also &lt;code&gt;install_tested&lt;/code&gt; .</source>
          <target state="translated">Перечислите все каталоги сборки дистрибутивов, которые были успешно протестированы, но еще не установлены. См. Также &lt;code&gt;install_tested&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da3c7994a3d61d34d9ca024ec7ac9503eb70a17" translate="yes" xml:space="preserve">
          <source>List all installed modules with their versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370cf490cd3daa93894252ec5158b9c077c837f2" translate="yes" xml:space="preserve">
          <source>List assignment in scalar context returns the number of elements produced by the expression on the right side of the assignment:</source>
          <target state="translated">Присвоение списка в скалярном контексте возвращает количество элементов,произведенных выражением в правой части назначения:</target>
        </trans-unit>
        <trans-unit id="45a5a84ab7f0560a41223626f7533a814734e050" translate="yes" xml:space="preserve">
          <source>List constants</source>
          <target state="translated">Константы списка</target>
        </trans-unit>
        <trans-unit id="55d8dbd99ddbc695154ff187f15da85365e9e00f" translate="yes" xml:space="preserve">
          <source>List constants are lists, not arrays. To index or slice them, they must be placed in parentheses.</source>
          <target state="translated">Константы списков-это списки,а не массивы.Чтобы индексировать или разрезать их,они должны быть помещены в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="c9230863aaf9811a194bc857bc0390c6326f13d9" translate="yes" xml:space="preserve">
          <source>List constants are not inlined unless you are using Perl v5.20 or higher. In v5.20 or higher, they are still not read-only, but that may change in future versions.</source>
          <target state="translated">Константы списка не включаются,если только вы не используете Perl v5.20 или выше.В версии 5.20 или выше они все еще не доступны только для чтения,но могут измениться в будущих версиях.</target>
        </trans-unit>
        <trans-unit id="5d9c4f2773006f355714dc08c4a64f23012ee969" translate="yes" xml:space="preserve">
          <source>List directories as they are searched</source>
          <target state="translated">Составить список каталогов по мере поиска</target>
        </trans-unit>
        <trans-unit id="0865484d5c94ce11961bf51a22181df567484e88" translate="yes" xml:space="preserve">
          <source>List first window of lines from subroutine.</source>
          <target state="translated">Перечислите первое окно линий из подпрограммы.</target>
        </trans-unit>
        <trans-unit id="31c6b16c6806f38a9abbe22903640ceb79a76b77" translate="yes" xml:space="preserve">
          <source>List form of piped open not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ff7a57a5555c3820cb313b589ff3e43f5801b3" translate="yes" xml:space="preserve">
          <source>List lines &lt;code&gt;min&lt;/code&gt; through &lt;code&gt;max&lt;/code&gt; . &lt;code&gt;l -&lt;/code&gt; is synonymous to &lt;code&gt;-&lt;/code&gt; .</source>
          <target state="translated">Список строк с &lt;code&gt;min&lt;/code&gt; По &lt;code&gt;max&lt;/code&gt; . &lt;code&gt;l -&lt;/code&gt; синоним &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6413580d4bb0dff3a638f87f617274c7d3fa5ba" translate="yes" xml:space="preserve">
          <source>List lines &lt;code&gt;min&lt;/code&gt; through &lt;code&gt;max&lt;/code&gt;. &lt;code&gt;l -&lt;/code&gt; is synonymous to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2f29a334d30972bc8a9045f68baae0dc3ec6d8" translate="yes" xml:space="preserve">
          <source>List next window of lines.</source>
          <target state="translated">Составьте список следующего окна строк.</target>
        </trans-unit>
        <trans-unit id="5359c0166343c48f9f035c401a1a6fd47a5d3c30" translate="yes" xml:space="preserve">
          <source>List of</source>
          <target state="translated">Список</target>
        </trans-unit>
        <trans-unit id="f96221500e5dff9b2e5b2d0d52441200d3fe59bd" translate="yes" xml:space="preserve">
          <source>List of CHECK values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b2bf307cdc3add3b560b3cf9c6d9638160226a" translate="yes" xml:space="preserve">
          <source>List of _CHECK_ values</source>
          <target state="translated">Список значений _CHECK_</target>
        </trans-unit>
        <trans-unit id="3fbb95646db607d6a530d90010130a90b221c352" translate="yes" xml:space="preserve">
          <source>List of four elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e3128876d62127f71da94d3596564663a283a7" translate="yes" xml:space="preserve">
          <source>List of handlers that have been registered.</source>
          <target state="translated">Список дрессировщиков,которые были зарегистрированы.</target>
        </trans-unit>
        <trans-unit id="942be8ea6b09c5850208d901ada25608760abbb7" translate="yes" xml:space="preserve">
          <source>List of libraries that need to be linked with when linking a perl binary which includes this extension. Only those libraries that actually exist are included. These are written to a file and used when linking perl.</source>
          <target state="translated">Список библиотек,с которыми необходимо связываться при линковке бинарного файла perl,включающего это расширение.В него включаются только те библиотеки,которые реально существуют.Они записываются в файл и используются при компоновке perl.</target>
        </trans-unit>
        <trans-unit id="25c88a0a5acb1948d9832032688b4c20061ebe55" translate="yes" xml:space="preserve">
          <source>List of lines in currently loaded file.</source>
          <target state="translated">Список строк в загруженном в данный момент файле.</target>
        </trans-unit>
        <trans-unit id="e2c751f0916c7f646852ece1bcfc81eae8d05b8f" translate="yes" xml:space="preserve">
          <source>List of object files, defaults to '$(BASEEXT)$(OBJ_EXT)', but can be a long string or an array containing all object files, e.g. &quot;tkpBind.o tkpButton.o tkpCanvas.o&quot; or [&quot;tkpBind.o&quot;, &quot;tkpButton.o&quot;, &quot;tkpCanvas.o&quot;]</source>
          <target state="translated">Список объектных файлов,по умолчанию '$(BASEEXT)$(OBJ_EXT)',но может быть длинной строкой или массивом,содержащим все объектные файлы,например &quot;tkpBind.o tkpButton.o tkpCanvas.o&quot; или [&quot;tkpBind.o&quot;,&quot;tkpButton.o&quot;,&quot;tkpCanvas.o&quot;].</target>
        </trans-unit>
        <trans-unit id="5c1db3ac864f059bce7875da034cf8c723ca64e1" translate="yes" xml:space="preserve">
          <source>List of those libraries that are needed but can be linked in dynamically at run time on this platform. SunOS/Solaris does not need this because ld records the information (from LDLOADLIBS) into the object file. This list is used to create a .bs (bootstrap) file.</source>
          <target state="translated">Список тех библиотек,которые необходимы,но могут быть динамически связаны во время работы на этой платформе.SunOS/Solaris в этом не нуждается,потому что ld записывает информацию (из LDLOADLIBS)в объектный файл.Этот список используется для создания файла .bs (bootstrap).</target>
        </trans-unit>
        <trans-unit id="5a0cf49d555f62d3d4e052b6541ec31f30e51960" translate="yes" xml:space="preserve">
          <source>List of those libraries which can or must be linked into the shared library when created using ld. These may be static or dynamic libraries. LD_RUN_PATH is a colon separated list of the directories in LDLOADLIBS. It is passed as an environment variable to the process that links the shared library.</source>
          <target state="translated">Список библиотек,которые могут или должны быть скомпонованы в общую библиотеку при создании с помощью ld.Это могут быть статические или динамические библиотеки.LD_RUN_PATH-это разделенный двоеточием список каталогов в LDLOADLIBS.Он передается как переменная окружения процессу,связывающему разделяемую библиотеку.</target>
        </trans-unit>
        <trans-unit id="ebae2310224ffad36ada7ef466a7460f111ae936" translate="yes" xml:space="preserve">
          <source>List of three arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97ad6178a15f3564cecdb6dad31b0f188dfe5e" translate="yes" xml:space="preserve">
          <source>List of three elements. Second is an array reference; third is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc4309268bf3b8e9ff25ca0646ecdbee8a86829" translate="yes" xml:space="preserve">
          <source>List of two elements: &lt;code&gt;typemap&lt;/code&gt; element from &lt;code&gt;%args&lt;/code&gt;; current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2868b38546ebc5d5d8fcc48449cbafe99e0ffc2a" translate="yes" xml:space="preserve">
          <source>List out all pre-prompt Perl command actions.</source>
          <target state="translated">Перечислить все предварительные действия команды Perl.</target>
        </trans-unit>
        <trans-unit id="b2fda16ba9c5deaf514c003911417714fab1f6a2" translate="yes" xml:space="preserve">
          <source>List out post-prompt Perl command actions.</source>
          <target state="translated">Перечислить действия после выполнения команды Perl.</target>
        </trans-unit>
        <trans-unit id="b85c9a7b9160438294dae5b78f69ab7f0a89edb4" translate="yes" xml:space="preserve">
          <source>List out pre-prompt debugger commands.</source>
          <target state="translated">Перечислить команды предварительного отладчика.</target>
        </trans-unit>
        <trans-unit id="c433826fb0a01d3298adbd1cec75ac79e366fe70" translate="yes" xml:space="preserve">
          <source>List previous window of lines.</source>
          <target state="translated">Перечислить предыдущее окно строк.</target>
        </trans-unit>
        <trans-unit id="6828bea1ce4a116f7cab52f1ff715d22eb63c991" translate="yes" xml:space="preserve">
          <source>List subroutine names [not] matching the regex.</source>
          <target state="translated">Перечислите имена подпрограмм [не],совпадающие с регексом.</target>
        </trans-unit>
        <trans-unit id="080ba82727d1a06b5322db16c03b125c4027029d" translate="yes" xml:space="preserve">
          <source>List the modules by the specified authors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d9bedea128205ac0ccf6ba46b2275b7e0355dc" translate="yes" xml:space="preserve">
          <source>List value constructors</source>
          <target state="translated">Конструкторы стоимости перечня</target>
        </trans-unit>
        <trans-unit id="3b83ab8a9c9e9daa0f3c240465a14ac3cfec98b6" translate="yes" xml:space="preserve">
          <source>List values are denoted by separating individual values by commas (and enclosing the list in parentheses where precedence requires it):</source>
          <target state="translated">Значения списка обозначаются путем разделения отдельных значений запятыми (и заключением списка в круглые скобки в тех случаях,когда этого требует приоритет):</target>
        </trans-unit>
        <trans-unit id="9c332d7d437db4bb1a089aef08dedde1d03aa848" translate="yes" xml:space="preserve">
          <source>List values in scalar context</source>
          <target state="translated">Список значений в скалярном контексте</target>
        </trans-unit>
        <trans-unit id="3e21f245885fcb8d2afb9ad390e31a12b2893368" translate="yes" xml:space="preserve">
          <source>List which methods may be called on the result of the evaluated expression. The expression may evaluated to a reference to a blessed object, or to a package name.</source>
          <target state="translated">Перечислить,какие методы могут быть вызваны по результатам оцениваемого выражения.Выражение может быть вычислено по ссылке на благословенный объект или по имени пакета.</target>
        </trans-unit>
        <trans-unit id="d8403bab2922ebc2678fad6cf5cb327231181154" translate="yes" xml:space="preserve">
          <source>List::Util</source>
          <target state="translated">List::Util</target>
        </trans-unit>
        <trans-unit id="0553bce08d5ad663737a32d66e461a6fde4d42cc" translate="yes" xml:space="preserve">
          <source>List::Util - A selection of general-utility list subroutines</source>
          <target state="translated">Список::Util-Подборка подпрограмм общепользовательского списка</target>
        </trans-unit>
        <trans-unit id="e6ae9327a79eb9d0433ed0271e4debca709ad198" translate="yes" xml:space="preserve">
          <source>List::Util::XS</source>
          <target state="translated">List::Util::XS</target>
        </trans-unit>
        <trans-unit id="6a577f2f652a9865e261b6b1b9108f10eb35a6b7" translate="yes" xml:space="preserve">
          <source>List::Util::XS - Indicate if List::Util was compiled with a C compiler</source>
          <target state="translated">List::Util::XS-Укажите,был ли List::Util скомпилирован компилятором C</target>
        </trans-unit>
        <trans-unit id="577f684095ccbc8608cf104c7d53ed608fc27e62" translate="yes" xml:space="preserve">
          <source>Listed below are functions that are either completely unimplemented or else have been implemented differently on various platforms. Following each description will be, in parentheses, a list of platforms that the description applies to.</source>
          <target state="translated">Ниже перечислены функции,которые либо полностью не реализованы,либо были реализованы по-разному на разных платформах.После каждого описания в круглых скобках будет приведен список платформ,к которым относится описание.</target>
        </trans-unit>
        <trans-unit id="4785b15f1934e1c153e7966e7a875d6c72382735" translate="yes" xml:space="preserve">
          <source>Listed below are functions that are either completely unimplemented or else have been implemented differently on various platforms. Preceding each description will be, in parentheses, a list of platforms that the description applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c518fb067439705f3ff5fa5b4a62b9be3afa31ae" translate="yes" xml:space="preserve">
          <source>Listen</source>
          <target state="translated">Listen</target>
        </trans-unit>
        <trans-unit id="484fc3879bbb2d1bc964407cad68611698ffceb6" translate="yes" xml:space="preserve">
          <source>Listen =&amp;gt; INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dea679b659a4bf77b36d5e329bc16ce43947db3" translate="yes" xml:space="preserve">
          <source>Listen should be an integer value or left unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2100cb1ce0771ebf5c66d34af2b3109940abd61" translate="yes" xml:space="preserve">
          <source>Listing available encodings</source>
          <target state="translated">Список доступных кодировок</target>
        </trans-unit>
        <trans-unit id="0827ddb4ed49430cfb1658042c94b816fe2859f3" translate="yes" xml:space="preserve">
          <source>Lists all available encodings, one per line, in case-insensitive order. Note that only the canonical names are listed; many aliases exist. For example, the names are case-insensitive, and many standard and common aliases work, such as &quot;latin1&quot; for &quot;ISO-8859-1&quot;, or &quot;ibm850&quot; instead of &quot;cp850&quot;, or &quot;winlatin1&quot; for &quot;cp1252&quot;. See &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt; for a full discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd09e23888b88d8b373ca4d91ed87f3200a2d3a8" translate="yes" xml:space="preserve">
          <source>Lists all available encodings, one per line, in case-insensitive order. Note that only the canonical names are listed; many aliases exist. For example, the names are case-insensitive, and many standard and common aliases work, such as &quot;latin1&quot; for &quot;ISO-8859-1&quot;, or &quot;ibm850&quot; instead of &quot;cp850&quot;, or &quot;winlatin1&quot; for &quot;cp1252&quot;. See &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; for a full discussion.</source>
          <target state="translated">Перечисляет все доступные кодировки, по одной в строке, без учета регистра. Обратите внимание, что перечислены только канонические имена; существует много псевдонимов. Например, имена нечувствительны к регистру, и работают многие стандартные и распространенные псевдонимы, такие как &amp;laquo;latin1&amp;raquo; для &amp;laquo;ISO-8859-1&amp;raquo;, &amp;laquo;ibm850&amp;raquo; вместо &amp;laquo;cp850&amp;raquo; или &amp;laquo;winlatin1&amp;raquo; для &amp;laquo;cp1252&amp;raquo;. . См. &lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt; для полного обсуждения.</target>
        </trans-unit>
        <trans-unit id="e4e9b933aa47588e5dca2e5d37752f783428eced" translate="yes" xml:space="preserve">
          <source>Lists known issues and incompatibilities; &lt;code&gt;&lt;a href=&quot;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&quot;&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Список известных проблем и несовместимостей; &lt;code&gt;&lt;a href=&quot;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&quot;&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="974b5b0f1238cd291d1764b895cc33d03520382a" translate="yes" xml:space="preserve">
          <source>Lists known issues and incompatibilities; &lt;code&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b97602e24bdf80cc94582bec0e02d773290ecc" translate="yes" xml:space="preserve">
          <source>Lists may be assigned to only when each element of the list is itself legal to assign to:</source>
          <target state="translated">Списки могут быть назначены только в том случае,если каждый элемент списка сам по себе является законным для назначения:</target>
        </trans-unit>
        <trans-unit id="c5a2888cd48d3f7aa2e98cd01aee025fae061e84" translate="yes" xml:space="preserve">
          <source>Literal ASCII TAB characters are now allowed in strings (and treated as &lt;code&gt;\t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0213917f82ae95d80bb5989c7abf1f8ddda65a97" translate="yes" xml:space="preserve">
          <source>Literal conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527da73e406ed03ebcb72acc86b11111c4a02fcb" translate="yes" xml:space="preserve">
          <source>Literal uses of &lt;code&gt;{&lt;/code&gt; were deprecated in Perl 5.20, and some uses of it started to give deprecation warnings since. These cases were made fatal in Perl 5.26. Due to an oversight, not all cases of a use of a literal &lt;code&gt;{&lt;/code&gt; got a deprecation warning. Some cases started warning in Perl 5.26, and were made fatal in Perl 5.30. Other cases started in Perl 5.28, and were made fatal in 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5147c26642d830ab230197606d4cf605ea045572" translate="yes" xml:space="preserve">
          <source>Literal vertical space in [] is illegal except under /x in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a788cee27d549015a0786732c662e05cdd7567" translate="yes" xml:space="preserve">
          <source>Lithuania</source>
          <target state="translated">Lithuania</target>
        </trans-unit>
        <trans-unit id="91575e88330ca0a393b09df24c2f9572b830580f" translate="yes" xml:space="preserve">
          <source>Ll</source>
          <target state="translated">Ll</target>
        </trans-unit>
        <trans-unit id="ddcb77ff769ea54ca622848f6bedd4004fa4f4fa" translate="yes" xml:space="preserve">
          <source>Load</source>
          <target state="translated">Load</target>
        </trans-unit>
        <trans-unit id="7006eb18a426109e42c387f4ebcfd765f549c2c8" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;local::lib&lt;/code&gt; (think like &lt;code&gt;-I&lt;/code&gt; for loading lib paths). Too bad &lt;code&gt;-l&lt;/code&gt; was already taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec750aae1f96446e6d4c2da3ed090454e5eb47c" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;&quot;MATH LIBRARY&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb2a396182dae27999fc6c1e32de77266a8eaa5" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;MATH LIBRARY&lt;/a&gt;.</source>
          <target state="translated">Загрузите другую математическую библиотеку, см. &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;MATH LIBRARY&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97f3b50d057eea8062f2d58a28647a93d5cccf56" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#Math-Library&quot;&gt;&quot;Math Library&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a359a67f4a6d92b34e91186041854ab36b846b" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#Math-Library&quot;&gt;Math Library&lt;/a&gt;.</source>
          <target state="translated">Загрузите другую математическую &lt;a href=&quot;#Math-Library&quot;&gt;библиотеку&lt;/a&gt; , см. Математическую библиотеку .</target>
        </trans-unit>
        <trans-unit id="26c9c83eb2148dde20d87505b058099c18e18cdd" translate="yes" xml:space="preserve">
          <source>Load a harness replacement class.</source>
          <target state="translated">Загрузите класс замены ремней.</target>
        </trans-unit>
        <trans-unit id="3ab8a70aafed206e446c89069a6d6fa487286375" translate="yes" xml:space="preserve">
          <source>Load functions only on demand</source>
          <target state="translated">Загрузка функций только по требованию</target>
        </trans-unit>
        <trans-unit id="1a6bf14720b01e30066247880d6ebc3b8752469c" translate="yes" xml:space="preserve">
          <source>Load subroutines only on demand</source>
          <target state="translated">Загружать подпрограммы только по требованию</target>
        </trans-unit>
        <trans-unit id="d792f29bac65ac823df5b7bb2984ae1cc96bc863" translate="yes" xml:space="preserve">
          <source>Load the C Fcntl.h defines</source>
          <target state="translated">Загрузить C Fcntl.h определяет.</target>
        </trans-unit>
        <trans-unit id="41ca4f17e3678d8fa4513a23c57b7eb4caf19350" translate="yes" xml:space="preserve">
          <source>Load the file that has the CPAN configuration data. This should have the same format as the standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240fa313380982dac95b53cefb0c75077c026845" translate="yes" xml:space="preserve">
          <source>Load the state from a file</source>
          <target state="translated">Загрузить состояние из файла</target>
        </trans-unit>
        <trans-unit id="15cac79f7c6e29d135cac8ed345f5ee74ad107b9" translate="yes" xml:space="preserve">
          <source>Load various IO modules</source>
          <target state="translated">Загрузка различных модулей ввода-вывода</target>
        </trans-unit>
        <trans-unit id="59ee7110b16f2ee9279e975045a71b3b2753da6e" translate="yes" xml:space="preserve">
          <source>LoadFile</source>
          <target state="translated">LoadFile</target>
        </trans-unit>
        <trans-unit id="9cd272bfb77c57c025d780a7adea2d2f4a39e607" translate="yes" xml:space="preserve">
          <source>Loading DLLs and ordinals in DLLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9030f4b47aa2abda4199dcc7ac6f1cb72c9d6947" translate="yes" xml:space="preserve">
          <source>Loads &lt;code&gt;ExtUtils::Typemaps::Excommunicated&lt;/code&gt;, instantiates an object, and dumps it as an embeddable typemap for use directly in your XS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478aa4ede7f109d8fe9ce74fc47e542819bd58d3" translate="yes" xml:space="preserve">
          <source>Loads Perl library from &lt;code&gt;$exedir/../dll/lib/&lt;/code&gt;.</source>
          <target state="translated">Загружает библиотеку Perl из &lt;code&gt;$exedir/../dll/lib/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a90cb96849f4ba39ef789f1926fb83b5216a75c" translate="yes" xml:space="preserve">
          <source>Loads a dynamic link library into memory and returns its module handle. This handle can be used with Win32::GetProcAddress() and Win32::FreeLibrary(). This function is deprecated. Use the Win32::API module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5210c4cd9f4652e7e267673947f320fe973e2f" translate="yes" xml:space="preserve">
          <source>Loads a specified module and imports the default functions to the specified package.</source>
          <target state="translated">Загружает указанный модуль и импортирует функции по умолчанию в указанный пакет.</target>
        </trans-unit>
        <trans-unit id="27e6bb733433394f480bba5733da627a3f3f2045" translate="yes" xml:space="preserve">
          <source>Loads a specified module and imports the default functions.</source>
          <target state="translated">Загружает указанный модуль и импортирует функции по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0912e26f46f2862f9bc8f741f795bbefe5ccdd67" translate="yes" xml:space="preserve">
          <source>Loads a specified module to the specified package.</source>
          <target state="translated">Загружает указанный модуль в указанный пакет.</target>
        </trans-unit>
        <trans-unit id="6ec299bdf7d010c1eee08526d7bd0161603d96f6" translate="yes" xml:space="preserve">
          <source>Loads a specified module.</source>
          <target state="translated">Загружает указанный модуль.</target>
        </trans-unit>
        <trans-unit id="e32cb3524fbd8048df24f387ab1d261efd4fc528" translate="yes" xml:space="preserve">
          <source>Loads the DLL LIBRARYNAME and calls the function DllRegisterServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb5e0e921899c7d9aa0924124cdcb6c8851e055" translate="yes" xml:space="preserve">
          <source>Loads the DLL LIBRARYNAME and calls the function DllUnregisterServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194a22a082c50fda80d3d163aa9acda90d655677" translate="yes" xml:space="preserve">
          <source>Loads the handler classes defined in &lt;a href=&quot;#config&quot;&gt;&quot;config&quot;&lt;/a&gt;. For example, given a config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a312f5b131e98b974541ced8733bc202310a2a5" translate="yes" xml:space="preserve">
          <source>Loads the handler classes defined in &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt;. For example, given a config:</source>
          <target state="translated">Загружает классы обработчиков, определенные в &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; . Например, учитывая конфиг:</target>
        </trans-unit>
        <trans-unit id="2288e3df6687abb6b74ab409c03ac48535ed3150" translate="yes" xml:space="preserve">
          <source>Loads the module whose name is pointed to by the string part of &lt;code&gt;name&lt;/code&gt;. Note that the actual module name, not its filename, should be given. Eg, &quot;Foo::Bar&quot; instead of &quot;Foo/Bar.pm&quot;. ver, if specified and not NULL, provides version semantics similar to &lt;code&gt;use Foo::Bar VERSION&lt;/code&gt;. The optional trailing arguments can be used to specify arguments to the module's &lt;code&gt;import()&lt;/code&gt; method, similar to &lt;code&gt;use Foo::Bar VERSION LIST&lt;/code&gt;; their precise handling depends on the flags. The flags argument is a bitwise-ORed collection of any of &lt;code&gt;PERL_LOADMOD_DENY&lt;/code&gt;, &lt;code&gt;PERL_LOADMOD_NOIMPORT&lt;/code&gt;, or &lt;code&gt;PERL_LOADMOD_IMPORT_OPS&lt;/code&gt; (or 0 for no flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6dda1ab28094112405a17ad65b1a4c1c089d63" translate="yes" xml:space="preserve">
          <source>Loads the module whose name is pointed to by the string part of name. Note that the actual module name, not its filename, should be given. Eg, &quot;Foo::Bar&quot; instead of &quot;Foo/Bar.pm&quot;. flags can be any of PERL_LOADMOD_DENY, PERL_LOADMOD_NOIMPORT, or PERL_LOADMOD_IMPORT_OPS (or 0 for no flags). ver, if specified and not NULL, provides version semantics similar to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION&lt;/code&gt; . The optional trailing SV* arguments can be used to specify arguments to the module's import() method, similar to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION LIST&lt;/code&gt; . They must be terminated with a final NULL pointer. Note that this list can only be omitted when the PERL_LOADMOD_NOIMPORT flag has been used. Otherwise at least a single NULL pointer to designate the default import list is required.</source>
          <target state="translated">Загружает модуль, имя которого указано в строковой части имени. Обратите внимание, что следует указывать фактическое имя модуля, а не его имя файла. Например, &amp;laquo;Foo :: Bar&amp;raquo; вместо &amp;laquo;Foo / Bar.pm&amp;raquo;. flags может быть любым из PERL_LOADMOD_DENY, PERL_LOADMOD_NOIMPORT или PERL_LOADMOD_IMPORT_OPS (или 0 для отсутствия флагов). ver, если указано, а не NULL, обеспечивает семантику версии, аналогичную &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION&lt;/code&gt; . Необязательные завершающие аргументы SV * могут использоваться для указания аргументов для метода import () модуля, аналогично &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION LIST&lt;/code&gt; . Они должны заканчиваться окончательным указателем NULL. Обратите внимание, что этот список может быть опущен только при использовании флага PERL_LOADMOD_NOIMPORT. В противном случае требуется хотя бы один указатель NULL для обозначения списка импорта по умолчанию.</target>
        </trans-unit>
        <trans-unit id="9af5b63a9cb9853b15da20ea4f2739623dc82021" translate="yes" xml:space="preserve">
          <source>Loc.U</source>
          <target state="translated">Loc.U</target>
        </trans-unit>
        <trans-unit id="2c161b9d2652a245b17c473e85af35d98c964e27" translate="yes" xml:space="preserve">
          <source>Loc_ar.U</source>
          <target state="translated">Loc_ar.U</target>
        </trans-unit>
        <trans-unit id="40cd835b717a79093cb71f794169679d3511a012" translate="yes" xml:space="preserve">
          <source>Loc_sed.U</source>
          <target state="translated">Loc_sed.U</target>
        </trans-unit>
        <trans-unit id="b62225661a9783f7a6a2c6e6f754c699e4dfbc8e" translate="yes" xml:space="preserve">
          <source>Local Locales</source>
          <target state="translated">Местные отделения</target>
        </trans-unit>
        <trans-unit id="00b7d8ac28ed6d0a7686172cc54cac83dde1640a" translate="yes" xml:space="preserve">
          <source>Local configuration data for libnet</source>
          <target state="translated">Данные локальной конфигурации для libnet</target>
        </trans-unit>
        <trans-unit id="2073176912b2b8b08756b78673e90f32f9412f5a" translate="yes" xml:space="preserve">
          <source>Local hosts should normally respond to pings within milliseconds. However, on a very congested network it may take up to 3 seconds or longer to receive an echo packet from the remote host. If the timeout is set too low under these conditions, it will appear that the remote host is not reachable (which is almost the truth).</source>
          <target state="translated">Местные хозяева обычно должны реагировать на пинги в течение миллисекунд.Однако,в очень перегруженной сети получение эхо-пакета от удаленного хоста может занять до 3 секунд или дольше.Если таймаут установлен слишком низко в этих условиях,то будет казаться,что удаленный хост недоступен (что почти правда).</target>
        </trans-unit>
        <trans-unit id="5ce134969fa4b38910928473dcd30b211050ffe0" translate="yes" xml:space="preserve">
          <source>Local patches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c690298b945c1b37cc5a68671d9b773af108fb2" translate="yes" xml:space="preserve">
          <source>Local settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b6cc762cf095afa6ac2b3f63960344e064751c" translate="yes" xml:space="preserve">
          <source>LocalAddr =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3479965474a90e55723b0f25860802c53406e91d" translate="yes" xml:space="preserve">
          <source>LocalAddrInfo =&amp;gt; ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dabe6c778984c0b6509601202090746e803410" translate="yes" xml:space="preserve">
          <source>LocalHost =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9b0a319772622c356126ecbc602688d6563804" translate="yes" xml:space="preserve">
          <source>LocalPort</source>
          <target state="translated">LocalPort</target>
        </trans-unit>
        <trans-unit id="0b1eb8a4f4bc001c793e0eea29e95b79014c3314" translate="yes" xml:space="preserve">
          <source>LocalPort =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e824d201d4911c9432bae5428ad07c94b3eaabb9" translate="yes" xml:space="preserve">
          <source>LocalService =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d14f2f76fdd1296a6f5facde16712babc39964d" translate="yes" xml:space="preserve">
          <source>Locale '%s' contains (at least) the following characters which have unexpected meanings: %s The Perl program will use the expected meanings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0705df55ca759471ac9bb2feda1c0edcd06beb2b" translate="yes" xml:space="preserve">
          <source>Locale '%s' may not work well.%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d6a411ea768d6e339737cbc631007347c4656b" translate="yes" xml:space="preserve">
          <source>Locale is not completely independent. The</source>
          <target state="translated">Локал не полностью независим.</target>
        </trans-unit>
        <trans-unit id="2ecddee9e3454bdf482ac7866a6d45e31677a35b" translate="yes" xml:space="preserve">
          <source>Locale-aware XS code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944d1183f1e4f233c0975643c2ef4f71a04349e2" translate="yes" xml:space="preserve">
          <source>Locale-related functions and macros</source>
          <target state="translated">Локальные функции и макросы</target>
        </trans-unit>
        <trans-unit id="e8ffa7590c272791934be71fefca2983045527a4" translate="yes" xml:space="preserve">
          <source>Locale/*.pl</source>
          <target state="translated">Locale/*.pl</target>
        </trans-unit>
        <trans-unit id="1f8d3cc6a62e48187b6914a4e521248e770e765b" translate="yes" xml:space="preserve">
          <source>Locale::Country</source>
          <target state="translated">Locale::Country</target>
        </trans-unit>
        <trans-unit id="711ea7f4d30a8250ee3539542d2d19015e5ecdec" translate="yes" xml:space="preserve">
          <source>Locale::Country - standard codes for country identification</source>
          <target state="translated">Местоположение::Страна-стандартные коды для идентификации страны</target>
        </trans-unit>
        <trans-unit id="745a3f2e63c8527b20fd7a0effbd2a4f6ce52b10" translate="yes" xml:space="preserve">
          <source>Locale::Currency</source>
          <target state="translated">Locale::Currency</target>
        </trans-unit>
        <trans-unit id="c9d7708330810bdeae6d8e6f009ab34981fb3578" translate="yes" xml:space="preserve">
          <source>Locale::Currency - standard codes for currency identification</source>
          <target state="translated">Местоположение::Валюта-стандартные коды для идентификации валюты.</target>
        </trans-unit>
        <trans-unit id="a2f93f9cc8bf81f232cf25c9d6170a176bd3c8f2" translate="yes" xml:space="preserve">
          <source>Locale::Language</source>
          <target state="translated">Locale::Language</target>
        </trans-unit>
        <trans-unit id="cbd3f9670295ab004a97a8799e46f114e838f7c9" translate="yes" xml:space="preserve">
          <source>Locale::Language - standard codes for language identification</source>
          <target state="translated">Местоположение::Язык-стандартные коды для языковой идентификации</target>
        </trans-unit>
        <trans-unit id="a9d8403dd9e14d9c4a74e42c449f4f4083d77a9b" translate="yes" xml:space="preserve">
          <source>Locale::Maketext</source>
          <target state="translated">Locale::Maketext</target>
        </trans-unit>
        <trans-unit id="58f6640492c0aec7031aee510f4ce0bcac4b2a22" translate="yes" xml:space="preserve">
          <source>Locale::Maketext - framework for localization</source>
          <target state="translated">Местоположение::Maketext-рамки для локализации</target>
        </trans-unit>
        <trans-unit id="e28b946d05a8b6576abf4d9a367dd68f9175de8e" translate="yes" xml:space="preserve">
          <source>Locale::Maketext does not use any special syntax to differentiate bracket notation methods from normal class or object methods. This design makes it vulnerable to format string attacks whenever it is used to process strings provided by untrusted users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b3c0ab0595b5cdd83722214636b337ad110e39" translate="yes" xml:space="preserve">
          <source>Locale::Maketext does support blacklist and whitelist functionality to limit which methods may be called as bracket notation methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffc03bfc5c484b62d9372e1420bdf253f5b3f52" translate="yes" xml:space="preserve">
          <source>Locale::Maketext offers a variety of methods, which fall into three categories:</source>
          <target state="translated">Местоположение::Maketext предлагает различные методы,которые делятся на три категории:</target>
        </trans-unit>
        <trans-unit id="0376cece04f73d6cbbeda92b6c96963d0c327dc4" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Cookbook</source>
          <target state="translated">Locale::Maketext::Cookbook</target>
        </trans-unit>
        <trans-unit id="e7d10311ab56423a10a6401a972e219ed34731ef" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Cookbook - recipes for using Locale::Maketext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5723d6c0c42ee05086667e38fd4249fe7082e8c" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Guts</source>
          <target state="translated">Locale::Maketext::Guts</target>
        </trans-unit>
        <trans-unit id="63bea57dac9566b0aa40481ae087dc206e13e8ee" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Guts - Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Локаль::Maketext::Guts-Утраченный модуль для загрузки Локаль::Maketext код utf8</target>
        </trans-unit>
        <trans-unit id="b14392dcdae7ce47ee917b41b3e73f1a3b72f5e1" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::GutsLoader</source>
          <target state="translated">Locale::Maketext::GutsLoader</target>
        </trans-unit>
        <trans-unit id="9810a1053985ebcf2f9b5544107826a653c00a65" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::GutsLoader - Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Локаль::Maketext::GutsLoader-Утраченный модуль для загрузки Локаль::Maketext код utf8</target>
        </trans-unit>
        <trans-unit id="a239b132192c48779d9a0ee403ad81c93ab75902" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Simple</source>
          <target state="translated">Locale::Maketext::Simple</target>
        </trans-unit>
        <trans-unit id="a942c8cd15bd2125fe42db2a486e9feebf1cfa35" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Simple - Simple interface to Locale::Maketext::Lexicon</source>
          <target state="translated">Место проведения акции::Макетакст::Простой-Простой интерфейс к Место проведения акции::Макетакст::Лексикон</target>
        </trans-unit>
        <trans-unit id="31310b7b3a3180c515d5a42eececda4ed908af34" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::TPJ13</source>
          <target state="translated">Locale::Maketext::TPJ13</target>
        </trans-unit>
        <trans-unit id="b7159c2a5a142d4334282c641ce964b49b8e476c" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::TPJ13 -- article about software localization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee43c469c3726bd84652212d4ca88cc335a5967" translate="yes" xml:space="preserve">
          <source>Locale::Script</source>
          <target state="translated">Locale::Script</target>
        </trans-unit>
        <trans-unit id="8f438e3df7fafcc383b453fd3213f4653605e9c0" translate="yes" xml:space="preserve">
          <source>Locale::Script - standard codes for script identification</source>
          <target state="translated">Locale::Script-стандартные коды для идентификации скрипта</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="92e24d2019e2a32f9830f5f805e70b0e0aef8c2f" translate="yes" xml:space="preserve">
          <source>Locales according to the default UCA rules include am (Amharic) without &lt;code&gt;[reorder Ethi]&lt;/code&gt;, bg (Bulgarian) without &lt;code&gt;[reorder Cyrl]&lt;/code&gt;, chr (Cherokee) without &lt;code&gt;[reorder Cher]&lt;/code&gt;, de (German), en (English), fr (French), ga (Irish), id (Indonesian), it (Italian), ka (Georgian) without &lt;code&gt;[reorder Geor]&lt;/code&gt;, mn (Mongolian) without &lt;code&gt;[reorder Cyrl Mong]&lt;/code&gt;, ms (Malay), nl (Dutch), pt (Portuguese), ru (Russian) without &lt;code&gt;[reorder Cyrl]&lt;/code&gt;, sw (Swahili), zu (Zulu).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8764300ec3ae038b44ac23ce898f50ceb30676b" translate="yes" xml:space="preserve">
          <source>Locales are supported. There may be glitches when a locale is another EBCDIC code page which has some of the &lt;a href=&quot;#The-13-variant-characters&quot;&gt;code-page variant characters&lt;/a&gt; in other positions.</source>
          <target state="translated">Поддерживаются локали. Могут возникнуть сбои, если языковой стандарт является другой кодовой страницей EBCDIC, в которой некоторые &lt;a href=&quot;#The-13-variant-characters&quot;&gt;символы варианта&lt;/a&gt; кодовой страницы находятся в других позициях.</target>
        </trans-unit>
        <trans-unit id="33d4312ea8caf12dbb4ec71dca19ee7924926ead" translate="yes" xml:space="preserve">
          <source>Localization and Perl: gettext breaks, Maketext fixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f83a14354ab144fa1eeefe381bdddf7ef6a4b6" translate="yes" xml:space="preserve">
          <source>Localization of elements of composite types</source>
          <target state="translated">Локализация элементов композитных типов</target>
        </trans-unit>
        <trans-unit id="87574e6a695fdc9051fd38476db62bcaa8e7cafd" translate="yes" xml:space="preserve">
          <source>Localization of globs</source>
          <target state="translated">Локализация глобусов</target>
        </trans-unit>
        <trans-unit id="f2f69b5bf206324f99fe659a46e5c54c241d441a" translate="yes" xml:space="preserve">
          <source>Localization of special variables</source>
          <target state="translated">Локализация специальных переменных</target>
        </trans-unit>
        <trans-unit id="56adc662b2ff25957a5294f0112a3c7b0d263e47" translate="yes" xml:space="preserve">
          <source>Localized deletion of elements of composite types</source>
          <target state="translated">Локализованное удаление элементов составных типов</target>
        </trans-unit>
        <trans-unit id="e60da19033e636198e96d7e490201c9c1369d134" translate="yes" xml:space="preserve">
          <source>Localizing &lt;code&gt;$.&lt;/code&gt; will not localize the filehandle's line count</source>
          <target state="translated">Локализация &lt;code&gt;$.&lt;/code&gt; не будет локализовать количество строк дескриптора файла</target>
        </trans-unit>
        <trans-unit id="8364e7e87819604234599a1511218996199f997e" translate="yes" xml:space="preserve">
          <source>Localizing changes</source>
          <target state="translated">Локализующие изменения</target>
        </trans-unit>
        <trans-unit id="f408eed5847840b83469388030b3326ba3bf4885" translate="yes" xml:space="preserve">
          <source>Localizing tied arrays or hashes does not work. After exiting the scope the arrays or the hashes are not restored.</source>
          <target state="translated">Локализация привязанных массивов или хэшей не работает.После выхода из области видимости массивы или хэши не восстанавливаются.</target>
        </trans-unit>
        <trans-unit id="00e0ebc3f4b2567f4695fa9503d51f87733e190d" translate="yes" xml:space="preserve">
          <source>Locate directory of original perl script</source>
          <target state="translated">Найти каталог оригинального perl скрипта</target>
        </trans-unit>
        <trans-unit id="c6294c5b9baff7ccda4385a76937e4c98b9c0e02" translate="yes" xml:space="preserve">
          <source>Locate the CV corresponding to the currently executing sub or eval. If &lt;code&gt;db_seqp&lt;/code&gt; is non_null, skip CVs that are in the DB package and populate &lt;code&gt;*db_seqp&lt;/code&gt; with the cop sequence number at the point that the DB:: code was entered. (This allows debuggers to eval in the scope of the breakpoint rather than in the scope of the debugger itself.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffe84cd97aaf675f786b03919bbd1aad3c3fe1d" translate="yes" xml:space="preserve">
          <source>Locate the CV corresponding to the currently executing sub or eval. If db_seqp is non_null, skip CVs that are in the DB package and populate *db_seqp with the cop sequence number at the point that the DB:: code was entered. (This allows debuggers to eval in the scope of the breakpoint rather than in the scope of the debugger itself.)</source>
          <target state="translated">Найдите автобиографию,соответствующую выполняемой в данный момент суб-или оценочной суб-или оценочной суб-или оценочной суб-биографии.Если db_seqp-non_null,пропустите CV,которые находятся в пакете БД,и заполните *db_seqp номером последовательности cop в точке,где был введен код БД::.(Это позволяет отладчику оценивать код в области видимости точки останова,а не в области видимости самого отладчика).</target>
        </trans-unit>
        <trans-unit id="f5cb0ec5fe28860a73ac5e9c7f201c2864475a69" translate="yes" xml:space="preserve">
          <source>Locates the full path to the script bin directory to allow the use of paths relative to the bin directory.</source>
          <target state="translated">Обнаруживает полный путь к директории bin скрипта,чтобы разрешить использование путей относительно директории bin.</target>
        </trans-unit>
        <trans-unit id="90f656c2cec82492063f2f19f63b0344475a8752" translate="yes" xml:space="preserve">
          <source>Location of Perl</source>
          <target state="translated">Местоположение Перл</target>
        </trans-unit>
        <trans-unit id="e526b099baebb5894aa471d61a7294aea38b4fdb" translate="yes" xml:space="preserve">
          <source>Lock the database with fd &amp;amp; flock.</source>
          <target state="translated">Заблокируйте базу данных с помощью fd &amp;amp; flock.</target>
        </trans-unit>
        <trans-unit id="877d08a97c129fe96b732f20ebe8f52e02d93eca" translate="yes" xml:space="preserve">
          <source>Locking and error checking are left as an exercise for the reader. Don't forget them or you'll be quite sorry.</source>
          <target state="translated">Блокировка и проверка ошибок оставлены в качестве упражнения для читателя.Не забывайте их,а то пожалеете.</target>
        </trans-unit>
        <trans-unit id="5c812093b2212c9a68f04fea78f378e5c17f025b" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access [by specifying &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;$uShare&lt;/code&gt;] doesn't prevent access to the partitions on the disk nor their file systems. So other processes can still access any raw sectors within a partition and can use the file system on the disk as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e083fbbbc4d1d6973e64d911c09f30a9d157b0ca" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access doesn't prevent access to the physical drive that the partition is on so other processes can still access the raw sectors that way. Locking this for exclusive access &lt;b&gt;does&lt;/b&gt; prevent other processes from opening the same raw partition and &lt;b&gt;does&lt;/b&gt; prevent access to the file system on it. It even prevents the current process from accessing the file system on that partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95da6ca83293caed356315f7966585c98bbeb01" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access prevents all access to the floppy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cac3a963a1045fd348fae956e2fc8becb2159a" translate="yes" xml:space="preserve">
          <source>Locking: The Trouble with fd</source>
          <target state="translated">Блокировка:Проблема с ФД</target>
        </trans-unit>
        <trans-unit id="a0ee9e59f4952196e4f063486823a5e6655ed2ab" translate="yes" xml:space="preserve">
          <source>Locks and unlocks the value for an individual key of a hash. The value of a locked key cannot be changed.</source>
          <target state="translated">Блокировка и разблокировка значения для отдельного ключа хэша.Значение заблокированного ключа не может быть изменено.</target>
        </trans-unit>
        <trans-unit id="409c237554d2d89fa246a166165492e5479e6006" translate="yes" xml:space="preserve">
          <source>Locks are a handy tool to synchronize access to data, and using them properly is the key to safe shared data. Unfortunately, locks aren't without their dangers, especially when multiple locks are involved. Consider the following code:</source>
          <target state="translated">Блокировки являются удобным инструментом для синхронизации доступа к данным,и их правильное использование является ключом к безопасному совместному использованию данных.К сожалению,замки не лишены своих опасностей,особенно когда речь идет о множественных блокировках.Рассмотрим следующий код:</target>
        </trans-unit>
        <trans-unit id="d77ca7a462f2ee37cd5eeb13d2720840dd8f730e" translate="yes" xml:space="preserve">
          <source>Locks are recursive, which means it's okay for a thread to lock a variable more than once. The lock will last until the outermost &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; on the variable goes out of scope. For example:</source>
          <target state="translated">Блокировки рекурсивны, что означает, что поток может блокировать переменную более одного раза. Блокировка будет длиться до тех пор, пока внешняя &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; переменной не выйдет за пределы области видимости. Например:</target>
        </trans-unit>
        <trans-unit id="c5da8053ebc549397001271ac2e0aa42fd2e1379" translate="yes" xml:space="preserve">
          <source>Locks are recursive, which means it's okay for a thread to lock a variable more than once. The lock will last until the outermost &lt;code&gt;lock()&lt;/code&gt; on the variable goes out of scope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0486b135937b6c03b868507a94d272ff8ac6f4" translate="yes" xml:space="preserve">
          <source>Locks on variables only affect &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; calls--they do</source>
          <target state="translated">Блокировки переменных влияют только на вызовы &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; - они влияют</target>
        </trans-unit>
        <trans-unit id="bf6b3c933353830be1f6195e3ebd4e20c5282db3" translate="yes" xml:space="preserve">
          <source>Locks on variables only affect &lt;code&gt;lock&lt;/code&gt; calls--they do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da97798dad8ca8d2be91a6ab0264ebfef22de7d" translate="yes" xml:space="preserve">
          <source>Locks record for a read operation for this process, while allowing other accessors to read the record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a4fe30048f2f9c89009d31801cebec1a5e7be" translate="yes" xml:space="preserve">
          <source>Locks record for write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2494e49f95e86d62c9e1df9443b971b1071d1eb2" translate="yes" xml:space="preserve">
          <source>Log all messages up to debug:</source>
          <target state="translated">Записывайте все сообщения до отладки:</target>
        </trans-unit>
        <trans-unit id="ac20548f5a2664c1934f84717b314a50501d6ebb" translate="yes" xml:space="preserve">
          <source>Log an error that can't be ignored.</source>
          <target state="translated">Зарегистрируйте ошибку,которую нельзя игнорировать.</target>
        </trans-unit>
        <trans-unit id="9f24d2b09c179c98a526a557d74f3d2be5514fb4" translate="yes" xml:space="preserve">
          <source>Log an error unless &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt; .</source>
          <target state="translated">Зарегистрируйте ошибку, если &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="352c5f44c11749156243d487f189c562b58e4995" translate="yes" xml:space="preserve">
          <source>Log an error unless &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598cba7875d82844d0ea4fd50137d27e20e9822b" translate="yes" xml:space="preserve">
          <source>Log critical messages, errors and warnings:</source>
          <target state="translated">Журнал критических сообщений,ошибок и предупреждений:</target>
        </trans-unit>
        <trans-unit id="1cc66c8eb58fd8fd2198272ffebc6331b40fb88c" translate="yes" xml:space="preserve">
          <source>Log debugging info to STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a127fbcd6604ca1cf80302b78e02d5ba87eed29" translate="yes" xml:space="preserve">
          <source>Log everything except informational messages:</source>
          <target state="translated">Регистрируйте все,кроме информационных сообщений:</target>
        </trans-unit>
        <trans-unit id="346e7edbc99f3e01ce84957ff3c99842429de19b" translate="yes" xml:space="preserve">
          <source>Log into the remote FTP server with the given login information. If no arguments are given then the &lt;code&gt;Net::FTP&lt;/code&gt; uses the &lt;code&gt;Net::Netrc&lt;/code&gt; package to lookup the login information for the connected host. If no information is found then a login of</source>
          <target state="translated">Войдите на удаленный FTP-сервер с указанной регистрационной информацией. Если аргументы не указаны, то &lt;code&gt;Net::FTP&lt;/code&gt; использует пакет &lt;code&gt;Net::Netrc&lt;/code&gt; для поиска информации для входа на подключенный хост. Если информации не найдено, то логин</target>
        </trans-unit>
        <trans-unit id="38711dd5aba31d74455f59112be713add52892b6" translate="yes" xml:space="preserve">
          <source>Log to UDP port on &lt;code&gt;$remotehost&lt;/code&gt; instead of logging locally:</source>
          <target state="translated">Войдите в порт UDP на &lt;code&gt;$remotehost&lt;/code&gt; вместо того, чтобы вести журнал локально:</target>
        </trans-unit>
        <trans-unit id="5e1bf4e3758f68132ff0d122f3d8b036581a8776" translate="yes" xml:space="preserve">
          <source>Log::Dispatch::Config::TestLog</source>
          <target state="translated">Log::Dispatch::Config::TestLog</target>
        </trans-unit>
        <trans-unit id="ef88b916547cdcd540b35fe969c4a4a3e3015dad" translate="yes" xml:space="preserve">
          <source>Logarithm base two [C99].</source>
          <target state="translated">База 2 логарифма [C99].</target>
        </trans-unit>
        <trans-unit id="126a3068c345063640bada367b1b3170b97166a9" translate="yes" xml:space="preserve">
          <source>Logging if DEBUG (constant)</source>
          <target state="translated">Регистрация,если DEBUG (константа)</target>
        </trans-unit>
        <trans-unit id="786908e4097f50192db248aa36b5528e31277867" translate="yes" xml:space="preserve">
          <source>Logical And</source>
          <target state="translated">Логический И</target>
        </trans-unit>
        <trans-unit id="4f0fe5e6156db1c8f396f9ada6968d19b442623d" translate="yes" xml:space="preserve">
          <source>Logical Defined-Or</source>
          <target state="translated">Логическое Определённое-Ор</target>
        </trans-unit>
        <trans-unit id="27999dc9087d157951951d7c5ab5c57a64718d42" translate="yes" xml:space="preserve">
          <source>Logical Not</source>
          <target state="translated">Логическое Нет</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27af685856a54b17004644154867c40474db6e5" translate="yes" xml:space="preserve">
          <source>Logical or and Exclusive Or</source>
          <target state="translated">Логический или и эксклюзивный Или</target>
        </trans-unit>
        <trans-unit id="eaac42db96179506f42bd718fb8ac139cdc3650b" translate="yes" xml:space="preserve">
          <source>Logical paths specified by system variables containing comma-separated search lists are also allowed; hence &lt;code&gt;System:Modules&lt;/code&gt; is a valid filename, and the filesystem will prefix &lt;code&gt;Modules&lt;/code&gt; with each section of &lt;code&gt;System$Path&lt;/code&gt; until a name is made that points to an object on disk. Writing to a new file &lt;code&gt;System:Modules&lt;/code&gt; would be allowed only if &lt;code&gt;System$Path&lt;/code&gt; contains a single item list. The filesystem will also expand system variables in filenames if enclosed in angle brackets, so &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; would look for the file &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt; . The obvious implication of this is that &lt;b&gt;fully qualified filenames can start with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/b&gt; and should be protected when &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; is used for input.</source>
          <target state="translated">Также разрешены логические пути, указанные системными переменными, содержащими списки поиска, разделенные запятыми; следовательно, &lt;code&gt;System:Modules&lt;/code&gt; - это допустимое имя файла, и файловая система будет использовать префикс &lt;code&gt;Modules&lt;/code&gt; с каждым разделом &lt;code&gt;System$Path&lt;/code&gt; пока не будет создано имя, указывающее на объект на диске. Запись в новую файловую &lt;code&gt;System:Modules&lt;/code&gt; будут разрешены, только если &lt;code&gt;System$Path&lt;/code&gt; содержит единственный список элементов. Файловая система также будет расширять системные переменные в именах файлов, если они заключены в угловые скобки, поэтому &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; будет искать файл &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt; . Очевидным следствием этого является то, что &lt;b&gt;полные имена файлов могут начинаться с &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/b&gt;и должен быть защищен, когда &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; используется для ввода.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
