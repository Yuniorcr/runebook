<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="466f242a777ff54f7c93093c4d90a137e616e30f" translate="yes" xml:space="preserve">
          <source>incremental</source>
          <target state="translated">incremental</target>
        </trans-unit>
        <trans-unit id="3cc46d20365996efe5ff1d4a9e0d401d68f186ed" translate="yes" xml:space="preserve">
          <source>indent</source>
          <target state="translated">indent</target>
        </trans-unit>
        <trans-unit id="bb563dfba453db67bbec56ac010da0ffa7c3928b" translate="yes" xml:space="preserve">
          <source>indentlevel</source>
          <target state="translated">indentlevel</target>
        </trans-unit>
        <trans-unit id="5db560de5f46f68f2cf6566c95097f8e2f035630" translate="yes" xml:space="preserve">
          <source>independent subexpression</source>
          <target state="translated">самостоятельное самовыражение</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="43f884af0bc6ff4672586657430c850be72e55ba" translate="yes" xml:space="preserve">
          <source>index STR,SUBSTR</source>
          <target state="translated">индекс STR,SUBSTR</target>
        </trans-unit>
        <trans-unit id="99e8de47a322ff3d13bd1a7ab53b04a9be460a7c" translate="yes" xml:space="preserve">
          <source>index STR,SUBSTR,POSITION</source>
          <target state="translated">индекс STR,SUBSTR,ПОЗИЦИЯ</target>
        </trans-unit>
        <trans-unit id="bd7ea36f65e58c5c7bbf8dd9aceaaa73c4fd1c3b" translate="yes" xml:space="preserve">
          <source>indicate an exceptional condition: &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when its argument is an empty array,</source>
          <target state="translated">указывает на исключительное условие: &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если его аргумент - пустой массив,</target>
        </trans-unit>
        <trans-unit id="48ba91ecc2fdf08cfe5fd27747c3c8e58cadd255" translate="yes" xml:space="preserve">
          <source>indicate an exceptional condition: &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when its argument is an empty array,</source>
          <target state="translated">указывает на исключительное условие: &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если его аргумент - пустой массив,</target>
        </trans-unit>
        <trans-unit id="7a89f7b99b7459c3e3a376ab2fa2510f98bafcc8" translate="yes" xml:space="preserve">
          <source>indicates a problem with the permissions on your /tmp directory within the HFS. To correct that problem issue the command:</source>
          <target state="translated">указывает на проблему с разрешениями в каталоге /tmp в HFS.Чтобы исправить эту проблему,выдайте команду:</target>
        </trans-unit>
        <trans-unit id="46adef8d549f47ce21751c1f181a46c1b9f28795" translate="yes" xml:space="preserve">
          <source>indicates that the name is a corrected form for the original name (which remains valid) for the same code point.</source>
          <target state="translated">указывает на то,что имя является исправленной формой для первоначального имени (которое остается действительным)для той же самой кодовой точки.</target>
        </trans-unit>
        <trans-unit id="aafce730a5c69801b1cd038fde73b5890228164a" translate="yes" xml:space="preserve">
          <source>indicates that the t/io/openpid.t test of Perl has passed but done so with extraneous messages on stderr from CEE.</source>
          <target state="translated">указывает на то,что тест t/io/openpid.t Perl прошел,но сделал это с посторонними сообщениями на stderr из ЦВЕ.</target>
        </trans-unit>
        <trans-unit id="8beeb2fce58d3cf706cd79c74605d5f6cec09a88" translate="yes" xml:space="preserve">
          <source>indicates that we're running this test as part of the perl core test suite. This is useful for modules that have a dual life on CPAN.</source>
          <target state="translated">указывает на то,что мы проводим этот тест как часть набора тестов perl core.Это полезно для модулей,которые имеют двойной срок службы CPAN.</target>
        </trans-unit>
        <trans-unit id="f809e25f7ab91ace25f0a3090dbe01b370226459" translate="yes" xml:space="preserve">
          <source>indicates the kind of subroutine:</source>
          <target state="translated">указывает на тип подпрограммы:</target>
        </trans-unit>
        <trans-unit id="b02c8cb9a48d2ffe0d568aa710cf9a12f602ddf6" translate="yes" xml:space="preserve">
          <source>indicates whether to use effective (true) or real (false) ids. The method interprets the &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; fields, and returns whether or not the current process would be allowed the specified access.</source>
          <target state="translated">указывает, использовать ли эффективные (истинные) или реальные (ложные) идентификаторы. Метод интерпретирует поля &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; и &lt;code&gt;gid&lt;/code&gt; и возвращает, будет ли текущему процессу разрешен указанный доступ.</target>
        </trans-unit>
        <trans-unit id="483df761d9cb026b9fc15456c941640572afafa1" translate="yes" xml:space="preserve">
          <source>indirect filehandle</source>
          <target state="translated">непрямая файловая папка</target>
        </trans-unit>
        <trans-unit id="fcda6fabde0a3b0d0a1cfb866dfe701d0a8396cb" translate="yes" xml:space="preserve">
          <source>indirs</source>
          <target state="translated">indirs</target>
        </trans-unit>
        <trans-unit id="0cedd5bbf169e21b494623b26255ee592a3b4610" translate="yes" xml:space="preserve">
          <source>inetd(8)</source>
          <target state="translated">inetd(8)</target>
        </trans-unit>
        <trans-unit id="d6dbadb30700039562565904023976ef1620b170" translate="yes" xml:space="preserve">
          <source>infers</source>
          <target state="translated">infers</target>
        </trans-unit>
        <trans-unit id="f11b6d2142b8785dcbce524760b8a5eefaf8a51c" translate="yes" xml:space="preserve">
          <source>inflate</source>
          <target state="translated">inflate</target>
        </trans-unit>
        <trans-unit id="2f55f97803b98ce7727f4f32861d8b9d60ec8076" translate="yes" xml:space="preserve">
          <source>inflate $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">надуть $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="b6aa8886133566b84aa50528606b6d86540c9b75" translate="yes" xml:space="preserve">
          <source>inflateInit2</source>
          <target state="translated">inflateInit2</target>
        </trans-unit>
        <trans-unit id="f5442a6076f59c3a613b48a99fadcb1f1fb6506c" translate="yes" xml:space="preserve">
          <source>inflateSync</source>
          <target state="translated">inflateSync</target>
        </trans-unit>
        <trans-unit id="554b53fb93ab9b3811936a10d5be83b8a3f3155d" translate="yes" xml:space="preserve">
          <source>info is indented with respect to the backtracking level. Other incidental information appears interspersed within.</source>
          <target state="translated">информация изрезана по отношению к уровню отступления.Другая случайная информация отображается перемежающейся внутри.</target>
        </trans-unit>
        <trans-unit id="57d5da7aaccaec3f7654dc61728d28ae4e5d6035" translate="yes" xml:space="preserve">
          <source>ing dynamically loading extensions would not work with</source>
          <target state="translated">динамически загружаемые удлинители не будут работать с</target>
        </trans-unit>
        <trans-unit id="e93b4a3fb9f2ae1924b54eb33df09d70945cd655" translate="yes" xml:space="preserve">
          <source>inherits from &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;.</source>
          <target state="translated">наследуется от &lt;a href=&quot;exporter&quot;&gt;Экспортера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e39975c1cdd0e165540e4c4297a8811904a676b" translate="yes" xml:space="preserve">
          <source>init_ABSTRACT</source>
          <target state="translated">init_ABSTRACT</target>
        </trans-unit>
        <trans-unit id="7cda590f08b4740a6590d7c44f166ba347919601" translate="yes" xml:space="preserve">
          <source>init_DIRFILESEP</source>
          <target state="translated">init_DIRFILESEP</target>
        </trans-unit>
        <trans-unit id="022f97d2b72f11b72258f24adb9af75996565df6" translate="yes" xml:space="preserve">
          <source>init_INST</source>
          <target state="translated">init_INST</target>
        </trans-unit>
        <trans-unit id="5cadb1507731d78b120c5b699141c83cf1ebcdb1" translate="yes" xml:space="preserve">
          <source>init_INSTALL</source>
          <target state="translated">init_INSTALL</target>
        </trans-unit>
        <trans-unit id="f607f848017aa48f552d6587df059baa8185c0c1" translate="yes" xml:space="preserve">
          <source>init_INSTALL_from_PREFIX</source>
          <target state="translated">init_INSTALL_from_PREFIX</target>
        </trans-unit>
        <trans-unit id="6d4ca819ebd448eadb26fae424a1daafae5538db" translate="yes" xml:space="preserve">
          <source>init_MAKE</source>
          <target state="translated">init_MAKE</target>
        </trans-unit>
        <trans-unit id="9375d2ed65f4648645abb14f2a07f4d4bfc7513c" translate="yes" xml:space="preserve">
          <source>init_VERSION</source>
          <target state="translated">init_VERSION</target>
        </trans-unit>
        <trans-unit id="9a0421852ea0c4dcae1cfa28534cd586cdf0e7d5" translate="yes" xml:space="preserve">
          <source>init_dist</source>
          <target state="translated">init_dist</target>
        </trans-unit>
        <trans-unit id="7d0fbcbecc897f6ad65c1d6d94207049fabca61c" translate="yes" xml:space="preserve">
          <source>init_from_INSTALL_BASE</source>
          <target state="translated">init_from_INSTALL_BASE</target>
        </trans-unit>
        <trans-unit id="d7c9b833e00c346f0bab160ef687e581517f1629" translate="yes" xml:space="preserve">
          <source>init_linker</source>
          <target state="translated">init_linker</target>
        </trans-unit>
        <trans-unit id="e3ab6049dd8bbaac48b18159b44f042e9d537459" translate="yes" xml:space="preserve">
          <source>init_others</source>
          <target state="translated">init_others</target>
        </trans-unit>
        <trans-unit id="e31881026ec06ae1c137294de90fc6573deb157b" translate="yes" xml:space="preserve">
          <source>init_platform</source>
          <target state="translated">init_platform</target>
        </trans-unit>
        <trans-unit id="019990422924c9d39c643c5b10dac864649676c5" translate="yes" xml:space="preserve">
          <source>init_tools</source>
          <target state="translated">init_tools</target>
        </trans-unit>
        <trans-unit id="8ad7d21c71b049b7003ba31b5f1322974df77ac8" translate="yes" xml:space="preserve">
          <source>initial</source>
          <target state="translated">initial</target>
        </trans-unit>
        <trans-unit id="d01e6b638f63d0ce474e5d2056a42868e8e743f1" translate="yes" xml:space="preserve">
          <source>initial special characters (denoting hashes, subroutines and typeglobs), and you said something like &lt;code&gt;*foo * foo&lt;/code&gt; that might be interpreted as either of them. We assumed you meant the infix operator, but please try to make it more clear -- in the example given, you might write &lt;code&gt;*foo * foo()&lt;/code&gt; if you really meant to multiply a glob by the result of calling a function.</source>
          <target state="translated">начальные специальные символы (обозначающие хэши, подпрограммы и typeglobs), и вы сказали что-то вроде &lt;code&gt;*foo * foo&lt;/code&gt; которое может быть интерпретировано как любое из них. Мы предположили, что вы имели в виду инфиксный оператор, но, пожалуйста, постарайтесь прояснить его - в приведенном примере вы можете написать &lt;code&gt;*foo * foo()&lt;/code&gt; если вы действительно хотели умножить глобус на результат вызова функции.</target>
        </trans-unit>
        <trans-unit id="398108d3cc7ae14b27f679220599912f6c8a2948" translate="yes" xml:space="preserve">
          <source>inplace operation (the -i switch) without backup file</source>
          <target state="translated">работа на месте (переключатель -i)без резервного файла</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="075102130b9c2bee418af0f0abf0c05eb6428b5b" translate="yes" xml:space="preserve">
          <source>input fileglob string</source>
          <target state="translated">входная файловая строка</target>
        </trans-unit>
        <trans-unit id="14fafbea21b2afc4ac197a41c562da03ba2fd623" translate="yes" xml:space="preserve">
          <source>input_line_number</source>
          <target state="translated">input_line_number</target>
        </trans-unit>
        <trans-unit id="44b7f604ecb19d542ee06bc079099d93cfbfd8e9" translate="yes" xml:space="preserve">
          <source>inputfile</source>
          <target state="translated">inputfile</target>
        </trans-unit>
        <trans-unit id="dbf3f1e65ed994aafa92d37f106f81eb0f116b8d" translate="yes" xml:space="preserve">
          <source>insert is the first of a chain of nodes to be inserted in place of the nodes. If NULL, no nodes are inserted.</source>
          <target state="translated">вставка является первой из цепочки узлов,вставляемой вместо узлов.Если NULL,то узлы не вставляются.</target>
        </trans-unit>
        <trans-unit id="fcc537881cd1d5bcddabf48fa8809c7471176de0" translate="yes" xml:space="preserve">
          <source>inside</source>
          <target state="translated">inside</target>
        </trans-unit>
        <trans-unit id="0d1a9a751997ac8a3af8a0e66a529b769c64f9e8" translate="yes" xml:space="preserve">
          <source>inside a &quot;=begin</source>
          <target state="translated">внутри &quot;=начало</target>
        </trans-unit>
        <trans-unit id="0404efe3ff82a89c15bd12e264f4ad6b4b5b9a26" translate="yes" xml:space="preserve">
          <source>inside a 5th eval in the program;</source>
          <target state="translated">в рамках 5-й оценки в программе;</target>
        </trans-unit>
        <trans-unit id="42069c6395d15e1204e32a0c3d074ee53152dec6" translate="yes" xml:space="preserve">
          <source>inside a given script</source>
          <target state="translated">внутри определённого скрипта</target>
        </trans-unit>
        <trans-unit id="89e02e198979d4b18ae44228f038f8bbcc90e3f2" translate="yes" xml:space="preserve">
          <source>inside out</source>
          <target state="translated">досконально</target>
        </trans-unit>
        <trans-unit id="1318be358545620d758b5fbfc720522057898255" translate="yes" xml:space="preserve">
          <source>inside-out</source>
          <target state="translated">inside-out</target>
        </trans-unit>
        <trans-unit id="ffae41ad3ecb9c4be51654fdbdec2294d08ba3a9" translate="yes" xml:space="preserve">
          <source>inside-out classes</source>
          <target state="translated">внутренние занятия</target>
        </trans-unit>
        <trans-unit id="89fb511ffe93ee7826661ca1e3bb468dc1ad0ff2" translate="yes" xml:space="preserve">
          <source>install</source>
          <target state="translated">install</target>
        </trans-unit>
        <trans-unit id="40e1b335d61258d5a48f641159e6957a1ff5ea0a" translate="yes" xml:space="preserve">
          <source>install.exe</source>
          <target state="translated">install.exe</target>
        </trans-unit>
        <trans-unit id="e1e2b964389a44069f6393f7f404e4082b21b782" translate="yes" xml:space="preserve">
          <source>installation</source>
          <target state="translated">installation</target>
        </trans-unit>
        <trans-unit id="cc1194708f9e63bdff55fc192202228c34612f10" translate="yes" xml:space="preserve">
          <source>installed already, make sure that no copies or perl are currently running. Later steps of the build may fail since an older version of</source>
          <target state="translated">уже установленные,убедитесь,что ни одна копия или perl не запущена в данный момент.Более поздние этапы сборки могут завершиться неудачей,так как более старая версия</target>
        </trans-unit>
        <trans-unit id="50ce7e3f521a0c513361fb30e1f4fe7052c98c9b" translate="yes" xml:space="preserve">
          <source>installed as</source>
          <target state="translated">установленный как</target>
        </trans-unit>
        <trans-unit id="3a29dc65c6a5ec09f964c6e29d915690b9661711" translate="yes" xml:space="preserve">
          <source>installed on your system, and you installed perl manpages, use something like this:</source>
          <target state="translated">установленных в вашей системе,и вы установили perl manpages,используйте что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="2907a7c430f00ce076d72256002da217245f85b6" translate="yes" xml:space="preserve">
          <source>installed under another name.</source>
          <target state="translated">установленных под другим именем.</target>
        </trans-unit>
        <trans-unit id="b211760ff4348121f2719ef634ab34586418d866" translate="yes" xml:space="preserve">
          <source>installed, you can follow WWW links from this document in</source>
          <target state="translated">установлено,вы можете перейти по WWW ссылкам из этого документа в разделе</target>
        </trans-unit>
        <trans-unit id="0b6c2e3cc55e3bb4fce5a65f78016fe2471ddee9" translate="yes" xml:space="preserve">
          <source>installprefix.U</source>
          <target state="translated">installprefix.U</target>
        </trans-unit>
        <trans-unit id="637fb636ffe280ca72d9b5ea3567bce61300bc40" translate="yes" xml:space="preserve">
          <source>installs the memoized version of &lt;code&gt;fib&lt;/code&gt; as &lt;code&gt;fastfib&lt;/code&gt; ; without the &lt;code&gt;INSTALL&lt;/code&gt; option it would have replaced the old &lt;code&gt;fib&lt;/code&gt; with the memoized version.</source>
          <target state="translated">устанавливает мемоизированную версию &lt;code&gt;fib&lt;/code&gt; как &lt;code&gt;fastfib&lt;/code&gt; ; без &lt;code&gt;INSTALL&lt;/code&gt; вариант было бы заменить старую &lt;code&gt;fib&lt;/code&gt; с memoized версии.</target>
        </trans-unit>
        <trans-unit id="1f09b06690d13eb940215681daf48fc97f3a138c" translate="yes" xml:space="preserve">
          <source>installstyle.U</source>
          <target state="translated">installstyle.U</target>
        </trans-unit>
        <trans-unit id="4eb977bcd33ca38c1e0b488eac44ee25547efd26" translate="yes" xml:space="preserve">
          <source>installvars</source>
          <target state="translated">installvars</target>
        </trans-unit>
        <trans-unit id="213d3b87dbe505b0072f3929805c83c8a5257052" translate="yes" xml:space="preserve">
          <source>instantiate an Expect object that reads from the console, waits for some regular expressions and enters some answers</source>
          <target state="translated">инстанцирует объект Expect,который читает из консоли,ждет некоторых регулярных выражений и вводит некоторые ответы.</target>
        </trans-unit>
        <trans-unit id="6d20c05e1fc41e487c521873baf51d86fd2da739" translate="yes" xml:space="preserve">
          <source>instead do it thru maketext, using no variable interpolation in the key:</source>
          <target state="translated">Вместо этого делайте это через maketext,не используя интерполяцию переменных в ключе:</target>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">вместо</target>
        </trans-unit>
        <trans-unit id="2f1647312ffbefd675d8f528a8e37c5009e71a69" translate="yes" xml:space="preserve">
          <source>instead of WriteMakefile().</source>
          <target state="translated">вместо WriteMakefile().</target>
        </trans-unit>
        <trans-unit id="eba0c6725752796c17e07a2937a561d006b6b15d" translate="yes" xml:space="preserve">
          <source>instead of as equivalent to a &quot;C&quot; formatting code containing only &quot;$foo-&quot;, and then a &quot;bar&amp;gt;&quot; outside the &quot;C&quot; formatting code. This problem has since been solved by the addition of syntaxes like this:</source>
          <target state="translated">вместо эквивалента коду форматирования &quot;C&quot;, содержащему только &quot;$ foo-&quot;, а затем &quot;bar&amp;gt;&quot; вне кода форматирования &quot;C&quot;. С тех пор эта проблема была решена путем добавления таких синтаксисов:</target>
        </trans-unit>
        <trans-unit id="339af1c38f4492cc861c0d877b7a58adb6e97b45" translate="yes" xml:space="preserve">
          <source>instead of directory names (strictly speaking, a string like &quot;:a&quot; is a path, but not a name, since it contains a punctuation character &quot;:&quot;).</source>
          <target state="translated">вместо имен каталогов (строго говоря,такая строка как &quot;:a&quot;-это путь,но не имя,так как она содержит знак препинания &quot;:&quot;).</target>
        </trans-unit>
        <trans-unit id="71c621eff819164ca1ecdbe04a4dc834c714be8e" translate="yes" xml:space="preserve">
          <source>instead of file for the source of text.</source>
          <target state="translated">вместо файла с исходным текстом.</target>
        </trans-unit>
        <trans-unit id="88c26c2da878553e470eabd76716a5185e744b60" translate="yes" xml:space="preserve">
          <source>instead of having to write these:</source>
          <target state="translated">вместо того,чтобы писать это:</target>
        </trans-unit>
        <trans-unit id="91a313e739687b01fbf17ae071a8b7960e77caf3" translate="yes" xml:space="preserve">
          <source>instead of importing it from &lt;code&gt;Scalar::Util&lt;/code&gt; . It should now be possible to disable DESTROY and CLONE. Note that while it isn't disabled, DESTROY will be called before the garbage collection of field hashes, so it will be invoked with a functional object and will continue to function.</source>
          <target state="translated">вместо импорта из &lt;code&gt;Scalar::Util&lt;/code&gt; . Теперь должно быть возможно отключить DESTROY и CLONE. Обратите внимание, что пока он не отключен, DESTROY будет вызываться перед сборкой мусора хэшей полей, поэтому он будет вызываться с функциональным объектом и продолжит работу.</target>
        </trans-unit>
        <trans-unit id="ca19eef2eb91cd974e6c0056c5fddda19bfec434" translate="yes" xml:space="preserve">
          <source>instead of this:</source>
          <target state="translated">вместо этого:</target>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">а не..:</target>
        </trans-unit>
        <trans-unit id="bcd1c0a3df4642e2147982d69e49b696e53ddfb8" translate="yes" xml:space="preserve">
          <source>instead since</source>
          <target state="translated">поскольку</target>
        </trans-unit>
        <trans-unit id="55e45921eb338b868da29d4463e5c0b1a7fa032c" translate="yes" xml:space="preserve">
          <source>instead). All tests are run from the</source>
          <target state="translated">Вместо этого).Все тесты выполняются из</target>
        </trans-unit>
        <trans-unit id="6568964b0e39083c6acb94093d9e6cd117dbe508" translate="yes" xml:space="preserve">
          <source>instead.</source>
          <target state="translated">instead.</target>
        </trans-unit>
        <trans-unit id="5864cc31660892914a70fe91105e62ed75ab49ed" translate="yes" xml:space="preserve">
          <source>instead. Accepted for backward compatibility; this option no longer does anything.</source>
          <target state="translated">Вместо этого.Принято для обратной совместимости;эта опция больше ничего не делает.</target>
        </trans-unit>
        <trans-unit id="ef03d77059a00bfd1c11d4cbfef75cdec7cdddf4" translate="yes" xml:space="preserve">
          <source>instead. Example:</source>
          <target state="translated">Вместо этого.Пример:</target>
        </trans-unit>
        <trans-unit id="204889318f37ff1d1f1f6f99292b41699b359695" translate="yes" xml:space="preserve">
          <source>instead. The first argument is the modulus, the second is the angle (in radians, the full circle is 2*pi). (Mnemonic: &lt;code&gt;e&lt;/code&gt; is used as a notation for complex numbers in the polar form).</source>
          <target state="translated">вместо. Первый аргумент - это модуль, второй - угол (в радианах полный круг равен 2 * пи). (Мнемоника: &lt;code&gt;e&lt;/code&gt; используется для обозначения комплексных чисел в полярной форме).</target>
        </trans-unit>
        <trans-unit id="7645f7261302e0c93107f96c3a0a2f2e386a7465" translate="yes" xml:space="preserve">
          <source>instmodsh</source>
          <target state="translated">instmodsh</target>
        </trans-unit>
        <trans-unit id="70e40b33ec9352c176bca23475fd76d8a67b5973" translate="yes" xml:space="preserve">
          <source>instmodsh - A shell to examine installed modules</source>
          <target state="translated">instmodsh-оболочка для изучения установленных модулей.</target>
        </trans-unit>
        <trans-unit id="1d52ae13ac6814d64753bd650c8b9eb068671b1f" translate="yes" xml:space="preserve">
          <source>instrumenting</source>
          <target state="translated">instrumenting</target>
        </trans-unit>
        <trans-unit id="cf024bf7ff5c78f4291e2a56cf869c898842d0fd" translate="yes" xml:space="preserve">
          <source>instubperl.U</source>
          <target state="translated">instubperl.U</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="6c36204b30c264dd8c654c40f76b604c80780842" translate="yes" xml:space="preserve">
          <source>int EXPR</source>
          <target state="translated">внутри EXPR</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="81edaa310efa3869e0192600c26c36ecc2b41f19" translate="yes" xml:space="preserve">
          <source>integer - Perl pragma to use integer arithmetic instead of floating point</source>
          <target state="translated">целое число-Perl прагма использовать целочисленную арифметику вместо плавающей запятой</target>
        </trans-unit>
        <trans-unit id="1f7eb7b938a62fcc0eef0f61d44ced570ecec276" translate="yes" xml:space="preserve">
          <source>integer subscript</source>
          <target state="translated">целочисленный индекс</target>
        </trans-unit>
        <trans-unit id="5cbf2e209eef789477d4a083088b0b6f85e093bb" translate="yes" xml:space="preserve">
          <source>integers and numbers with decimal points are allowed in front of an exponent. Then exponents, like the overall sign, are independent of whether we are matching numbers with or without decimal points, and can be 'decoupled' from the mantissa. The overall form of the regexp now becomes clear:</source>
          <target state="translated">Допускаются целые числа и числа с десятичными точками перед экспонентом.Тогда экспоненты,как и общий знак,не зависят от того,сопоставляем ли мы числа с десятичными точками или без них,и могут быть &quot;отвязаны&quot; от мантиссы.Общая форма регэкспоната теперь становится понятной:</target>
        </trans-unit>
        <trans-unit id="8530773c89ade420faa71319e7ce6daa712ea89c" translate="yes" xml:space="preserve">
          <source>intended as a general cross-platform interface to all your C building needs. That would have been a much more ambitious goal!</source>
          <target state="translated">предназначенный в качестве общего кроссплатформенного интерфейса для всех потребностей вашего здания C.Это было бы гораздо более амбициозной целью!</target>
        </trans-unit>
        <trans-unit id="41b2a346afcb03862127323893afda0250576026" translate="yes" xml:space="preserve">
          <source>intention</source>
          <target state="translated">intention</target>
        </trans-unit>
        <trans-unit id="e5d84f3be36511b9cf0c6417bb410c050384d434" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;) to make very customized executables.</source>
          <target state="translated">интерфейс (см. &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; ) для создания очень настраиваемых исполняемых файлов.</target>
        </trans-unit>
        <trans-unit id="34b8b656f661dde4a485cdae2859f84de092702d" translate="yes" xml:space="preserve">
          <source>interface (see &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;), such things are easy to do repeating the steps outlined in &lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;Making executables with a custom collection of statically loaded extensions&lt;/a&gt;, and doing more comprehensive edits to main() of</source>
          <target state="translated">интерфейса (см. &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; ), такие вещи легко сделать, повторив шаги, описанные в разделе &lt;a href=&quot;#Making-executables-with-a-custom-collection-of-statically-loaded-extensions&quot;&gt;Создание исполняемых файлов с настраиваемой коллекцией статически загружаемых расширений&lt;/a&gt; , и внесение более полных изменений в main () из</target>
        </trans-unit>
        <trans-unit id="9404540d9f00d3c17c19b97f44fa1073b9f1c94f" translate="yes" xml:space="preserve">
          <source>interface provided by zlib.</source>
          <target state="translated">интерфейс,предоставляемый zlib.</target>
        </trans-unit>
        <trans-unit id="46e1a61d83495a69cfaa8d84253bec174db2a0fe" translate="yes" xml:space="preserve">
          <source>interface to the dynamic linking mechanisms available on many platforms. Its primary purpose is to implement cheap automatic dynamic loading of Perl modules.</source>
          <target state="translated">интерфейс к механизмам динамической связи,доступным на многих платформах.Его основным назначением является реализация дешевой автоматической динамической загрузки Perl-модулей.</target>
        </trans-unit>
        <trans-unit id="902ee24d0f5c369c83561e631220c869f56c159a" translate="yes" xml:space="preserve">
          <source>interface_hairy.h</source>
          <target state="translated">interface_hairy.h</target>
        </trans-unit>
        <trans-unit id="58abb7dae834bec7c2231a51b0e43d7b2f1dcd1e" translate="yes" xml:space="preserve">
          <source>interface_simple.h</source>
          <target state="translated">interface_simple.h</target>
        </trans-unit>
        <trans-unit id="c48322cd43b3f5db0aa919df16088078ec067df7" translate="yes" xml:space="preserve">
          <source>interior-sequence storage will not be reclaimed upon destruction!</source>
          <target state="translated">Внутреннее хранение после разрушения не восстанавливается!</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="e51ec2956340bd90ad015ad9b1a44eb41fe13048" translate="yes" xml:space="preserve">
          <source>internal error: useconds &amp;lt; 0 (unsigned ... signed ...)</source>
          <target state="translated">внутренняя ошибка: useconds &amp;lt;0 (без знака ... со знаком ...)</target>
        </trans-unit>
        <trans-unit id="8bc675a4bbcb339a374caa4cff4d8cc8a867b3a0" translate="yes" xml:space="preserve">
          <source>internally. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is just a synonym for &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; , which is magical. (The pseudo code above doesn't work because it treats &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; as non-magical.)</source>
          <target state="translated">внутренне. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; - это просто синоним &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; , что волшебно. (Приведенный выше псевдокод не работает, поскольку он рассматривает &lt;code&gt;&amp;lt;ARGV&amp;gt;&lt;/code&gt; как немагический.)</target>
        </trans-unit>
        <trans-unit id="f95a7232cfa16eef01e2e32a3d063b6807475100" translate="yes" xml:space="preserve">
          <source>interp</source>
          <target state="translated">interp</target>
        </trans-unit>
        <trans-unit id="dd17e57867fd7c7c09f592d502367e7a72bee660" translate="yes" xml:space="preserve">
          <source>interp.c</source>
          <target state="translated">interp.c</target>
        </trans-unit>
        <trans-unit id="5ec54f35edbea363d07d169d7643fe49322214d6" translate="yes" xml:space="preserve">
          <source>interpolate within double quotes, nor do single quotes impede evaluation of variables when used within double quotes.</source>
          <target state="translated">интерполировать внутри двойных кавычек,а одиночные кавычки не препятствуют оценке переменных при использовании внутри двойных кавычек.</target>
        </trans-unit>
        <trans-unit id="21842adaec06e4938f4774dc8dc13c419d06b021" translate="yes" xml:space="preserve">
          <source>interpolate, see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">интерполировать, см. &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7365365ce3b1fe060f6c2b335e7ead37819acbe2" translate="yes" xml:space="preserve">
          <source>interpreted as a signed integer</source>
          <target state="translated">интерпретированное как подписанное целое число</target>
        </trans-unit>
        <trans-unit id="22798399388200f939f1d84f974aacbf98336d00" translate="yes" xml:space="preserve">
          <source>interpreter has to be &lt;b&gt;compiled&lt;/b&gt; differently for each platform because it is implemented in C, but programs written in the Perl language are largely platform independent.</source>
          <target state="translated">Интерпретатор должен &lt;b&gt;компилироваться по-&lt;/b&gt; разному для каждой платформы, потому что он реализован на C, но программы, написанные на языке Perl, в значительной степени независимы от платформы.</target>
        </trans-unit>
        <trans-unit id="09d29e0b1909ff0aa3805759c7f1db36d575f073" translate="yes" xml:space="preserve">
          <source>interpreter threads</source>
          <target state="translated">интерпретационные потоки</target>
        </trans-unit>
        <trans-unit id="d897bf481c6d3038f32cd50b3a8b5f6cf56b6348" translate="yes" xml:space="preserve">
          <source>interrupted</source>
          <target state="translated">interrupted</target>
        </trans-unit>
        <trans-unit id="5e40097f4262a60de6a010dd128b47db45b0fccb" translate="yes" xml:space="preserve">
          <source>intflags</source>
          <target state="translated">intflags</target>
        </trans-unit>
        <trans-unit id="a379c85f8c69a0d3679d831f2b58817f66b078af" translate="yes" xml:space="preserve">
          <source>into</source>
          <target state="translated">into</target>
        </trans-unit>
        <trans-unit id="80a3fceeaea68858a65bb33607e442ea25c1e2b4" translate="yes" xml:space="preserve">
          <source>into UTF-8, and similarly converts character code points. This is used when the script is a combination of ASCII (for the variable names and punctuation,</source>
          <target state="translated">в UTF-8,и аналогичным образом преобразует символьные точки кода.Это используется,когда скрипт представляет собой комбинацию ASCII (для имен переменных и пунктуации,</target>
        </trans-unit>
        <trans-unit id="5efbb46a90ecb3ca1fecc85280ad96184eda7b36" translate="yes" xml:space="preserve">
          <source>into Unix format before being written to the zip file.</source>
          <target state="translated">в Unix-формат перед записью в zip-файл.</target>
        </trans-unit>
        <trans-unit id="5a8ec964fb55903ea9af77229da3a4f176eca61a" translate="yes" xml:space="preserve">
          <source>into a &lt;code&gt;lineseq&lt;/code&gt; list op, which is returned.</source>
          <target state="translated">в &lt;code&gt;lineseq&lt;/code&gt; список оп, который возвращается.</target>
        </trans-unit>
        <trans-unit id="09bdc6967275516d660dcb43a692aac47b477ffa" translate="yes" xml:space="preserve">
          <source>into a list op if it is not one already, and then converts it into the specified</source>
          <target state="translated">в список опций,если его еще нет,а затем конвертирует его в указанный</target>
        </trans-unit>
        <trans-unit id="0e21ff0e56d846baee28d588470952974dd44859" translate="yes" xml:space="preserve">
          <source>into the package by &lt;code&gt;filter_add&lt;/code&gt; , unless the reference was already blessed.</source>
          <target state="translated">в пакет с помощью &lt;code&gt;filter_add&lt;/code&gt; , если ссылка уже не была благословлена.</target>
        </trans-unit>
        <trans-unit id="4f339c3e14932662ae9d0559ad77c63d4936a2d3" translate="yes" xml:space="preserve">
          <source>into this:</source>
          <target state="translated">в это:</target>
        </trans-unit>
        <trans-unit id="760aebbce7f663b4ebc868367cc05da9ede071dc" translate="yes" xml:space="preserve">
          <source>intrpvar.h</source>
          <target state="translated">intrpvar.h</target>
        </trans-unit>
        <trans-unit id="ad345dd991761a50f9adb9059b18cd2ed01ff85e" translate="yes" xml:space="preserve">
          <source>intsize.U</source>
          <target state="translated">intsize.U</target>
        </trans-unit>
        <trans-unit id="2bb8530511b63a0c151d59eadae559d3b4f9fc74" translate="yes" xml:space="preserve">
          <source>intuit</source>
          <target state="translated">intuit</target>
        </trans-unit>
        <trans-unit id="b712b0f1d2c4286763eab08ade92c1091ec6dd8d" translate="yes" xml:space="preserve">
          <source>invalid, potentially earning a different error message than the error message (or warning, or event) generated by a merely unknown (but theoretically valid) htmlname, as in &quot;E&amp;lt;qacute&amp;gt;&quot; [sic]. However, Pod parsers are not required to make this distinction.</source>
          <target state="translated">недействительный, потенциально вызывающий другое сообщение об ошибке, чем сообщение об ошибке (или предупреждение, или событие), сгенерированное просто неизвестным (но теоретически допустимым) htmlname, как в &quot;E &amp;lt;qacute&amp;gt;&quot; [sic]. Однако парсеры Pod не обязаны делать это различие.</target>
        </trans-unit>
        <trans-unit id="1292ad671fbfc4d35ca913ab3b9a0129dc90d413" translate="yes" xml:space="preserve">
          <source>inverse operation should be applied in the Fetch method.</source>
          <target state="translated">обратная операция должна быть применена в методе Fetch.</target>
        </trans-unit>
        <trans-unit id="4d2aa1cd14486c3a4a5f5b5f91ebfce00891a815" translate="yes" xml:space="preserve">
          <source>invoke the method call like this:</source>
          <target state="translated">вызвать вызов метода вот так:</target>
        </trans-unit>
        <trans-unit id="9d2e89cb161a40179909f64d20244135bf4c608d" translate="yes" xml:space="preserve">
          <source>invoke the overload method with &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; as an argument. Instead the above table is consulted as normal, and based on the type of &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt;, overloading may or may not be invoked. For simple strings or numbers, &quot;in&quot; becomes equivalent to this:</source>
          <target state="translated">вызвать метод перегрузки с &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; в качестве аргумента. Вместо этого к приведенной выше таблице обращаются как обычно, и в зависимости от типа &lt;code&gt;&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; перегрузка может или не может быть вызвана. Для простых строк или чисел &quot;in&quot; эквивалентно этому:</target>
        </trans-unit>
        <trans-unit id="a5f53a1db4bd0284aa3660bede417a2b6d5db51f" translate="yes" xml:space="preserve">
          <source>invokes the &lt;b&gt;parse_from_filehandle()&lt;/b&gt; method passing it the corresponding input and output filehandles.</source>
          <target state="translated">вызывает метод &lt;b&gt;parse_from_filehandle (),&lt;/b&gt; передавая ему соответствующие дескрипторы файлов ввода и вывода.</target>
        </trans-unit>
        <trans-unit id="271383556324a922b015d9d5abb777b3b680293a" translate="yes" xml:space="preserve">
          <source>invoking it for the directory's contents. It does a postorder traversal instead of a preorder traversal, working from the bottom of the directory tree up where &lt;code&gt;find()&lt;/code&gt; works from the top of the tree down.</source>
          <target state="translated">вызывая его для содержимого каталога. Он выполняет обратный обход вместо предварительного обхода, работая снизу дерева каталогов вверх, а &lt;code&gt;find()&lt;/code&gt; работает сверху вниз.</target>
        </trans-unit>
        <trans-unit id="1eb7e48254406f0ad58f032dc48fe49432e4957e" translate="yes" xml:space="preserve">
          <source>io/pipe.t</source>
          <target state="translated">io/pipe.t</target>
        </trans-unit>
        <trans-unit id="1ad14cf4402c59fea497f745d3df4a52f09e403b" translate="yes" xml:space="preserve">
          <source>ioctl</source>
          <target state="translated">ioctl</target>
        </trans-unit>
        <trans-unit id="ac706755d569c148cde69cf903fa0e404d5fb464" translate="yes" xml:space="preserve">
          <source>ioctl FILEHANDLE,FUNCTION,SCALAR</source>
          <target state="translated">ИОКТЛ ФИЛЬЯХАНДЛ,ФУНКЦИЯ,СКАЛАР</target>
        </trans-unit>
        <trans-unit id="81c3f83f167f0c364e4d909401dd2fbced2eb5c4" translate="yes" xml:space="preserve">
          <source>ioctl.h</source>
          <target state="translated">ioctl.h</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="463b46fb59560ec9a4f45c2879fbeca62bdbadb9" translate="yes" xml:space="preserve">
          <source>is #included, it redefines the aTHX and aTHX_ macros to call a function that will return the context. Thus, something like:</source>
          <target state="translated">#included,он переопределяет макросы aTHX и aTHX_для вызова функции,которая вернет контекст.Таким образом,что-то вроде:</target>
        </trans-unit>
        <trans-unit id="869c55ae7392038ca2ada25a5b705659a6fc2134" translate="yes" xml:space="preserve">
          <source>is - and it has the same effect.)</source>
          <target state="translated">это-и это имеет тот же эффект.)</target>
        </trans-unit>
        <trans-unit id="83b4bd82f5c3073fcab6cd52e2b883488c825747" translate="yes" xml:space="preserve">
          <source>is 0, encoding and decoding replace any malformed character with a</source>
          <target state="translated">0,кодировка и декодирование заменяют любой некорректный символ на</target>
        </trans-unit>
        <trans-unit id="0bda6c393b81ec62986133bc68d16a600e5376b4" translate="yes" xml:space="preserve">
          <source>is 0, or the routine croaks if</source>
          <target state="translated">это 0,или рутина хрипит,если</target>
        </trans-unit>
        <trans-unit id="9433dff76d69aeb49c9f1b1e6a810eef80d46303" translate="yes" xml:space="preserve">
          <source>is 1, methods immediately die with an error message. Therefore, when</source>
          <target state="translated">это 1,методы немедленно погибают с сообщением об ошибке.Поэтому,когда</target>
        </trans-unit>
        <trans-unit id="a4d2c83b695d00259b2771edae5aa2d42137fabb" translate="yes" xml:space="preserve">
          <source>is 1, you should trap exceptions with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;, unless you really want to let it &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">равно 1, вам следует перехватывать исключения с помощью &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; , если вы действительно не хотите, чтобы это &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08b01d36edc2dd6fddbc0756fbe9c5513a659ab8" translate="yes" xml:space="preserve">
          <source>is 1.</source>
          <target state="translated">это 1.</target>
        </trans-unit>
        <trans-unit id="8c0ff8e969bcd171ef8d6c4cddc51856c058ecf8" translate="yes" xml:space="preserve">
          <source>is 1. When a character whose ord value is larger than 0xFFFF is encountered, its place is filled with \x{FFFD} if</source>
          <target state="translated">это 1.когда встречается символ,чей порядковый номер больше 0xFFFF,его место заполняется \x{FFFFD}if</target>
        </trans-unit>
        <trans-unit id="79d529e67b476b62851937c5b23067cd4ce1b5bd" translate="yes" xml:space="preserve">
          <source>is 3 and</source>
          <target state="translated">3 и</target>
        </trans-unit>
        <trans-unit id="9522c6460c5f6f20c4307e7bed6822d3f2d77897" translate="yes" xml:space="preserve">
          <source>is 3. A single &lt;code&gt;ITEM&lt;/code&gt; is always inlined.</source>
          <target state="translated">равно 3. Один &lt;code&gt;ITEM&lt;/code&gt; всегда встроен.</target>
        </trans-unit>
        <trans-unit id="b5c84ec496d8b224c85fc14573a3862152ff5122" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;C&lt;/code&gt; (for &lt;code&gt;common&lt;/code&gt; ) if the best possible fold is a single code point (</source>
          <target state="translated">- &lt;code&gt;C&lt;/code&gt; (для &lt;code&gt;common&lt;/code&gt; ), если наилучшая возможная складка - это одна кодовая точка (</target>
        </trans-unit>
        <trans-unit id="939984a83e875f30897be52391d8f5b35e2e83eb" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;FooPtr&lt;/code&gt;</source>
          <target state="translated">это &lt;code&gt;FooPtr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65816c93586e4c56d14bdf38227bc0d35e22af9d" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;Foo__Bar&lt;/code&gt;</source>
          <target state="translated">это &lt;code&gt;Foo__Bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e4470db40e21830b033effb525cbd3a1872e1d1" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;I&lt;/code&gt; , and</source>
          <target state="translated">это &lt;code&gt;I&lt;/code&gt; , и</target>
        </trans-unit>
        <trans-unit id="c6bcb94dd29106e50e5e67679cd655c28bdf7f7a" translate="yes" xml:space="preserve">
          <source>is &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; , &lt;code&gt;OP_ORASSIGN&lt;/code&gt; , or &lt;code&gt;OP_DORASSIGN&lt;/code&gt; , then a suitable conditional optree is constructed. If</source>
          <target state="translated">равно &lt;code&gt;OP_ANDASSIGN&lt;/code&gt; , &lt;code&gt;OP_ORASSIGN&lt;/code&gt; или &lt;code&gt;OP_DORASSIGN&lt;/code&gt; , то создается подходящее условное дерево опций. Если</target>
        </trans-unit>
        <trans-unit id="ce21611a14027ecfce0b71f876f7d06f5a1d8b5b" translate="yes" xml:space="preserve">
          <source>is NULL).</source>
          <target state="translated">это NULL).</target>
        </trans-unit>
        <trans-unit id="4ad590898ac06ec587af8f66311fb1bbc1535303" translate="yes" xml:space="preserve">
          <source>is a GV supplying the name that should be used by the check function to refer to the callee of the &lt;code&gt;entersub&lt;/code&gt; op if it needs to emit any diagnostics. It is permitted to apply the check function in non-standard situations, such as to a call to a different subroutine or to a method call.</source>
          <target state="translated">представляет собой GV, предоставляющий имя, которое должно использоваться функцией проверки для обращения к вызываемому &lt;code&gt;entersub&lt;/code&gt; op, если ему необходимо выдать какие-либо диагностические сообщения. Разрешено применять функцию проверки в нестандартных ситуациях, например, к вызову другой подпрограммы или к вызову метода.</target>
        </trans-unit>
        <trans-unit id="08d3d68a728efcdd2ab6530d7d5ecfbfb371a2be" translate="yes" xml:space="preserve">
          <source>is a Perl</source>
          <target state="translated">это Perl</target>
        </trans-unit>
        <trans-unit id="130739bc618160f7f1fc5c5a9ff8b4322613f98e" translate="yes" xml:space="preserve">
          <source>is a Perl subroutine that takes no arguments (that's the</source>
          <target state="translated">это подпрограмма на Perl,которая не принимает никаких аргументов (это</target>
        </trans-unit>
        <trans-unit id="b8059014bc71acfd20332d69515ec64768947e28" translate="yes" xml:space="preserve">
          <source>is a blessed reference or a package name</source>
          <target state="translated">благословенная ссылка или название пакета</target>
        </trans-unit>
        <trans-unit id="37b225c02472425d591d858f478440711108fafc" translate="yes" xml:space="preserve">
          <source>is a combination of the &lt;code&gt;&quot;al&quot;&lt;/code&gt; type and the &lt;code&gt;&quot;ae&quot;&lt;/code&gt; type. Some of the map array elements have the forms given by &lt;code&gt;&quot;al&quot;&lt;/code&gt; , and the rest are the empty string. The property &lt;code&gt;NFKC_Casefold&lt;/code&gt; has this form. An example slice is:</source>
          <target state="translated">представляет собой комбинацию типа &lt;code&gt;&quot;al&quot;&lt;/code&gt; типа &lt;code&gt;&quot;ae&quot;&lt;/code&gt; . Некоторые элементы массива карты имеют форму, заданную &lt;code&gt;&quot;al&quot;&lt;/code&gt; , а остальные представляют собой пустую строку. Свойство &lt;code&gt;NFKC_Casefold&lt;/code&gt; имеет такую ​​форму. Пример среза:</target>
        </trans-unit>
        <trans-unit id="61c94ee116f6a0b02686534706f14ab4ac28cf95" translate="yes" xml:space="preserve">
          <source>is a command-line interface to CPAN.pm. It allows you to install modules or distributions from CPAN, or just get information about them, and a lot more. It is similar to the command line mode of the &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; module,</source>
          <target state="translated">это интерфейс командной строки для CPAN.pm. Он позволяет вам устанавливать модули или дистрибутивы из CPAN, или просто получать информацию о них, и многое другое. Он похож на режим командной строки модуля &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="8330f641c616959b5dc4d2a1018e6e7abd8aea60" translate="yes" xml:space="preserve">
          <source>is a command-line interface to the test-running functionality of</source>
          <target state="translated">это интерфейс командной строки к функциональным возможностям тестирования</target>
        </trans-unit>
        <trans-unit id="a3f3d9feee7e7a4f2fbdd3512e2a38e4a55fb2b5" translate="yes" xml:space="preserve">
          <source>is a common abbreviation for a character</source>
          <target state="translated">общая аббревиатура для персонажа</target>
        </trans-unit>
        <trans-unit id="9febe7f9f7abef798cc6a59cd722795b25995da6" translate="yes" xml:space="preserve">
          <source>is a compiler to convert Perl XS code into C code. It is typically run by the makefiles created by &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">- компилятор для преобразования кода Perl XS в код C. Обычно он запускается make-файлами, созданными &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90882a351b430362ddbaa59a277b7ed39fa5a7e3" translate="yes" xml:space="preserve">
          <source>is a computer science term with a precise but hard-to-explain meaning. Usually, closures are implemented in Perl as anonymous subroutines with lasting references to lexical variables outside their own scopes. These lexicals magically refer to the variables that were around when the subroutine was defined (deep binding).</source>
          <target state="translated">это термин информатики с точным,но трудно объяснимым значением.Обычно замыкания реализуются в Perl в виде анонимных подпрограмм с длительными ссылками на лексические переменные вне их собственной области применения.Эти лексики волшебным образом ссылаются на переменные,которые были вокруг,когда была определена подпрограмма (глубокая привязка).</target>
        </trans-unit>
        <trans-unit id="bff47d2ce40b707b0845e92b4a96b5d4dc076d28" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to return. If the member is not set this will return a default value. The return type depends on</source>
          <target state="translated">это жетон cpp,указывающий,какую запись возвращать.Если член не установлен,он вернет значение по умолчанию.Тип возврата зависит от</target>
        </trans-unit>
        <trans-unit id="e5f9de05e11db96a337f0d1eb38539a88b5409b2" translate="yes" xml:space="preserve">
          <source>is a cpp token indicating which entry to set. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt; for details about the available members and how they are used. This macro evaluates its argument more than once.</source>
          <target state="translated">- токен cpp, указывающий, какую запись установить. См. &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Пользовательские операторы в perlguts&lt;/a&gt; для получения подробной информации о доступных членах и о том, как они используются. Этот макрос оценивает свой аргумент более одного раза.</target>
        </trans-unit>
        <trans-unit id="8b175b89be18442a11782bc701cae16d7d0a17b0" translate="yes" xml:space="preserve">
          <source>is a decimal number, and XML uses &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; where</source>
          <target state="translated">является десятичным числом, а XML использует &lt;code&gt;&amp;amp;#x&lt;i&gt;HHHH&lt;/i&gt;;&lt;/code&gt; где</target>
        </trans-unit>
        <trans-unit id="867e37e0ad95e37a79d195114de1a83f0d632684" translate="yes" xml:space="preserve">
          <source>is a fixed string that must appear at a particular offset from the beginning of the match. A</source>
          <target state="translated">это фиксированная строка,которая должна появляться при определенном смещении от начала матча.A</target>
        </trans-unit>
        <trans-unit id="61f3bde037bf2172e594d6db29ca0978f1c08a37" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular de-serialization via thaw(), and</source>
          <target state="translated">это флаг,указывающий,находимся ли мы в dclone()или в обычной десериализации через thaw(),и</target>
        </trans-unit>
        <trans-unit id="177a8f74fbd5fb5c45bffdbce71939307bad58c8" translate="yes" xml:space="preserve">
          <source>is a flag indicating whether we're in a dclone() or a regular serialization via store() or freeze().</source>
          <target state="translated">это флаг,указывающий,находимся ли мы в dclone()или в обычной сериализации через store()или freeze().</target>
        </trans-unit>
        <trans-unit id="6e2e892937bca1eea5ee9c95d0d5e5e5f11395dd" translate="yes" xml:space="preserve">
          <source>is a form of if-then-else statement that allows one to choose which patterns are to be matched, based on some condition. There are two types of conditional expression: &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; and &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt;. &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; is like an &lt;code&gt;'if () {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched. If the &lt;code&gt;condition&lt;/code&gt; is false, the &lt;code&gt;yes-regexp&lt;/code&gt; will be skipped and Perl will move onto the next regexp element. The second form is like an &lt;code&gt;'if () {} else {}'&lt;/code&gt; statement in Perl. If the &lt;code&gt;condition&lt;/code&gt; is true, the &lt;code&gt;yes-regexp&lt;/code&gt; will be matched, otherwise the &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; will be matched.</source>
          <target state="translated">- это форма оператора if-then-else, которая позволяет выбрать, какие шаблоны должны быть сопоставлены, на основе некоторого условия. Есть два типа условных выражений: &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; и &lt;code&gt;(?(condition)yes-regexp|no-regexp)&lt;/code&gt; . &lt;code&gt;(?(condition)yes-regexp)&lt;/code&gt; похоже на оператор &lt;code&gt;'if () {}'&lt;/code&gt; в Perl. Если &lt;code&gt;condition&lt;/code&gt; истинно, будет &lt;code&gt;yes-regexp&lt;/code&gt; соответствие yes-regexp . Если &lt;code&gt;condition&lt;/code&gt; ложно, &lt;code&gt;yes-regexp&lt;/code&gt; будет пропущено, и Perl перейдет к следующему элементу regexp. Вторая форма похожа на оператор &lt;code&gt;'if () {} else {}'&lt;/code&gt; в Perl. Если &lt;code&gt;condition&lt;/code&gt; верно, то &lt;code&gt;yes-regexp&lt;/code&gt; будут сопоставлены, в противном случае будет сопоставлено &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-regexp&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a2da8cb2cec1f20323fe27b5dacfdea89a7e07" translate="yes" xml:space="preserve">
          <source>is a hashref (as passed to &lt;code&gt;C_constant&lt;/code&gt; and &lt;code&gt;match_clause&lt;/code&gt; .</source>
          <target state="translated">- это хэш-ссылка (переданная в &lt;code&gt;C_constant&lt;/code&gt; и &lt;code&gt;match_clause&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="792c669ddbc9146f9c82edec4f8d983c193844e7" translate="yes" xml:space="preserve">
          <source>is a hexadecimal number, also inserts a character into a string. The character it inserts is the one whose Unicode code point (ordinal value) is equal to the number. For example, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; is the Unicode (white background, black foreground) smiley face equivalent to &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; . Also note, &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; can mean a regex quantifier instead of a character name, when the</source>
          <target state="translated">является шестнадцатеричным числом, также вставляет символ в строку. Он вставляет тот символ, у которого кодовая точка Unicode (порядковое значение) равна номеру. Например, &lt;code&gt;&quot;\N{U+263a}&quot;&lt;/code&gt; - это смайлик в Юникоде (белый фон, черный передний план), эквивалентный &lt;code&gt;&quot;\N{WHITE SMILING FACE}&quot;&lt;/code&gt; . Также обратите внимание, что &lt;code&gt;\N{&lt;i&gt;...&lt;/i&gt;}&lt;/code&gt; может означать квантификатор регулярного выражения вместо имени символа, когда</target>
        </trans-unit>
        <trans-unit id="0370087df9b1f80bb3aab519d6395ef994f93a7f" translate="yes" xml:space="preserve">
          <source>is a module meta-data file pioneered by Module::Build and automatically generated as part of the 'distdir' target (and thus 'dist'). See &lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;Module Meta-Data in ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="translated">- это файл метаданных модуля, впервые созданный Module :: Build и автоматически сгенерированный как часть цели distdir (и, следовательно, dist). См. Раздел &amp;laquo; &lt;a href=&quot;../makemaker#Module-Meta-Data&quot;&gt;Метаданные модуля&amp;raquo; в ExtUtils :: MakeMaker&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5615f55577e2ec9ec2ce738441f4f048adaa11" translate="yes" xml:space="preserve">
          <source>is a name for a character that has been documented but was never in any actual standard.</source>
          <target state="translated">это имя для символа,который был задокументирован,но никогда не был в каком-то реальном стандарте.</target>
        </trans-unit>
        <trans-unit id="a64ade54cc01a4b8ab579c03320b508d3b51d58b" translate="yes" xml:space="preserve">
          <source>is a name for the Unicode character, as specified in the Unicode standard. For instance, if we wanted to represent or match the astrological sign for the planet Mercury, we could use</source>
          <target state="translated">это имя для символа Юникод,как указано в стандарте Юникод.Например,если мы хотим представить или сопоставить астрологический знак для планеты Меркурий,мы могли бы использовать</target>
        </trans-unit>
        <trans-unit id="2afe30cfa025d1ad86d16c1371192737e35d27e5" translate="yes" xml:space="preserve">
          <source>is a not-very-meaningful hex checksum), and run</source>
          <target state="translated">это не-все-всегда-значит-гекс-счетная сумма),и беги.</target>
        </trans-unit>
        <trans-unit id="fc99a02b05cb226b1a73a69a63bbd1617e2aa050" translate="yes" xml:space="preserve">
          <source>is a number (or comma separated pair of numbers (see &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;QUANTIFIERS in perlreref&lt;/a&gt;), and is not related to this pragma.</source>
          <target state="translated">является числом (или парой чисел, разделенных запятыми (см. &lt;a href=&quot;perlreref#QUANTIFIERS&quot;&gt;QUANTIFIERS в perlreref&lt;/a&gt; ), и не имеет отношения к этой прагме.</target>
        </trans-unit>
        <trans-unit id="4a38b8230fcc77e55d3807d6b5a4aaef15592a7b" translate="yes" xml:space="preserve">
          <source>is a number in hexadecimal that gives the code point that Unicode has assigned to the desired character. It is customary but not required to use leading zeros to pad the number to 4 digits. Thus &lt;code&gt;\N{U+0041}&lt;/code&gt; means &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; , and you will rarely see it written without the two leading zeros. &lt;code&gt;\N{U+0041}&lt;/code&gt; means &quot;A&quot; even on EBCDIC machines (where the ordinal value of &quot;A&quot; is not 0x41).</source>
          <target state="translated">представляет собой шестнадцатеричное число, обозначающее кодовую точку, присвоенную Unicode желаемому символу. Обычно, но не обязательно, использовать ведущие нули для дополнения числа до 4 цифр. Таким образом, &lt;code&gt;\N{U+0041}&lt;/code&gt; означает &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; , и вы редко увидите ее написанную без двух ведущих нулей. &lt;code&gt;\N{U+0041}&lt;/code&gt; означает &amp;laquo;A&amp;raquo; даже на машинах EBCDIC (где порядковое значение &amp;laquo;A&amp;raquo; не равно 0x41).</target>
        </trans-unit>
        <trans-unit id="9f403a1abf70edece08e0c80d52724deac025b2c" translate="yes" xml:space="preserve">
          <source>is a number.</source>
          <target state="translated">это номер.</target>
        </trans-unit>
        <trans-unit id="6d72cdfe9071b403de5c891b1782a09bdb8b7a77" translate="yes" xml:space="preserve">
          <source>is a numeric suffix), and other duplicate references to substructures within &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">- числовой суффикс) и другие повторяющиеся ссылки на подструктуры в &lt;code&gt;$VAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1caf25c615a60e7db02057f097ce6ef82bd0a961" translate="yes" xml:space="preserve">
          <source>is a numeric suffix. Will return a list of strings in a list context.</source>
          <target state="translated">это числовой суффикс.Возвращает список строк в контексте списка.</target>
        </trans-unit>
        <trans-unit id="5450267d9d9934e68cfc043e8aa906ed9b69bfee" translate="yes" xml:space="preserve">
          <source>is a package name</source>
          <target state="translated">название пакета</target>
        </trans-unit>
        <trans-unit id="a6b5bcbb54d5f0f80b9f08f8fbaf2ea009b106b5" translate="yes" xml:space="preserve">
          <source>is a pointer to the &lt;code&gt;entersub&lt;/code&gt; op, which may be replaced by the check function, and</source>
          <target state="translated">является указателем на &lt;code&gt;entersub&lt;/code&gt; , которую можно заменить функцией проверки, и</target>
        </trans-unit>
        <trans-unit id="4e118cb5d55603d5852d3f949969f69eb230e7be" translate="yes" xml:space="preserve">
          <source>is a pointer to the C function that is to be added to that opcode's check chain, and</source>
          <target state="translated">это указатель на функцию C,который будет добавлен в цепочку проверки этого опкода,и</target>
        </trans-unit>
        <trans-unit id="8f2f096033e5e09b15119337208eeca0b44d4133" translate="yes" xml:space="preserve">
          <source>is a pointer.</source>
          <target state="translated">это указатель.</target>
        </trans-unit>
        <trans-unit id="dece3ef8f9c2a4f9d52c4c4c5d98bb83ab5bfede" translate="yes" xml:space="preserve">
          <source>is a positive (unsigned) decimal number of any length is an absolute reference to a capturing group.</source>
          <target state="translated">положительное (неподписанное)десятичное число любой длины является абсолютной ссылкой на группу захвата.</target>
        </trans-unit>
        <trans-unit id="4edbb45f32f48cd1511fdfb6115d66414ec1fbfb" translate="yes" xml:space="preserve">
          <source>is a positive integer and</source>
          <target state="translated">является положительным целым числом и</target>
        </trans-unit>
        <trans-unit id="165f46eaddab8fb19180056f4de237d41d7417b2" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed.</source>
          <target state="translated">это предварительно вычисленный хэш строки ключа,или ноль,если он не был предварительно вычислен.</target>
        </trans-unit>
        <trans-unit id="7069eb9cb165fec523e6308bce4b06c05a39cb8c" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar copy of the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">- это предварительно вычисленный хэш ключевой строки или ноль, если он не был предварительно вычислен. Возвращает смертельную скалярную копию значения, связанного с ключом, или &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; если с ключом не связано никакого значения.</target>
        </trans-unit>
        <trans-unit id="5da7fecbae6781f458a7622c0a97efc463b638d6" translate="yes" xml:space="preserve">
          <source>is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar representing the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">- это предварительно вычисленный хэш ключевой строки или ноль, если он не был предварительно вычислен. Возвращает смертный скаляр, представляющий значение, связанное с ключом, или &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; если с ключом нет значения.</target>
        </trans-unit>
        <trans-unit id="1da3d543f80049c240b6604f0deb64866fbd0017" translate="yes" xml:space="preserve">
          <source>is a preprocessing token indicating which entry to set. The type of</source>
          <target state="translated">это маркер предварительной обработки,указывающий,какую запись установить.Тип</target>
        </trans-unit>
        <trans-unit id="d9012ca0d0ddb846debfb4395c94c7b45828744f" translate="yes" xml:space="preserve">
          <source>is a preprocessing token; the type of</source>
          <target state="translated">это маркер препроцессирования;тип</target>
        </trans-unit>
        <trans-unit id="a7b7145b8e2f4d29a4eac42b3b05b4ed146ab52f" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to disable.</source>
          <target state="translated">это токен препроцессора,указывающий,какую запись отключить.</target>
        </trans-unit>
        <trans-unit id="fbe9b4cd270e1fcc591a419f6eee763dc9c340d8" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to enable. This will assert (under -DDEBUGGING) if the entry doesn't contain a valid pointer.</source>
          <target state="translated">это токен препроцессора,указывающий,какую запись включить.Это будет утверждать (в разделе -DDEBUGING),если запись не содержит правильного указателя.</target>
        </trans-unit>
        <trans-unit id="ea5ce0a59c714754786219bdd5275aeb9e974151" translate="yes" xml:space="preserve">
          <source>is a preprocessor token indicating which entry to return. If the appropriate flag is not set this will return NULL. The type of the return value depends on which entry you ask for.</source>
          <target state="translated">это токен препроцессора,указывающий,какую запись возвращать.Если соответствующий флаг не установлен,то возвращается NULL.Тип возвращаемого значения зависит от того,какую запись вы запрашиваете.</target>
        </trans-unit>
        <trans-unit id="38ca9aff9fa5b538144546880af0d48a59e862b4" translate="yes" xml:space="preserve">
          <source>is a profiling tool available in many Unix platforms which uses</source>
          <target state="translated">это инструмент профилирования,доступный на многих Unix-платформах,который использует</target>
        </trans-unit>
        <trans-unit id="d57a2c635ead24e8cb41d2f62c0df6efe7ec2d7c" translate="yes" xml:space="preserve">
          <source>is a pure</source>
          <target state="translated">чистый</target>
        </trans-unit>
        <trans-unit id="c05fe253a73eaf5c843bec936db4e04771e23194" translate="yes" xml:space="preserve">
          <source>is a reference to a hash, keyed by name, values being the hashrefs in the</source>
          <target state="translated">это ссылка на хэш,с ключом по имени,значения которого являются хэшами в</target>
        </trans-unit>
        <trans-unit id="9987d31f4281509d0e0c9da093d035205a293365" translate="yes" xml:space="preserve">
          <source>is a regex that matches</source>
          <target state="translated">это регекс,который совпадает</target>
        </trans-unit>
        <trans-unit id="3dca816cf7d96a1f946c0cb0d43d7b15ae0dd1ff" translate="yes" xml:space="preserve">
          <source>is a sequence of digits (not starting with 0) whose value reflects the paren-number of the capture group to recurse to. &lt;code&gt;(?R)&lt;/code&gt; recurses to the beginning of the whole pattern. &lt;code&gt;(?0)&lt;/code&gt; is an alternate syntax for &lt;code&gt;(?R)&lt;/code&gt;. If</source>
          <target state="translated">представляет собой последовательность цифр (не начинающуюся с 0), значение которой отражает порядковый номер группы захвата, к которой требуется выполнить рекурсию. &lt;code&gt;(?R)&lt;/code&gt; возвращается к началу всего шаблона. &lt;code&gt;(?0)&lt;/code&gt; - альтернативный синтаксис для &lt;code&gt;(?R)&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="bba78d1bb88089201797aae5c1cab963b9424243" translate="yes" xml:space="preserve">
          <source>is a set of flags indicating the kind of pad entry required, which will be set in the value SV for the allocated pad entry:</source>
          <target state="translated">это набор флагов,указывающих на тип требуемой записи колодки,которая будет установлена в значении SV для записи выделенной колодки:</target>
        </trans-unit>
        <trans-unit id="91abdb027092f65d2c1008ca97d5e66bca8c6cd6" translate="yes" xml:space="preserve">
          <source>is a simple matter of writing:</source>
          <target state="translated">это простой вопрос письма:</target>
        </trans-unit>
        <trans-unit id="60d1efccf0a496e682102a0ca23ae84351984489" translate="yes" xml:space="preserve">
          <source>is a single Han ideograph).</source>
          <target state="translated">единственный идеограф Хан).</target>
        </trans-unit>
        <trans-unit id="7f0804766ef794c650875e5cd6577f8ca62d3808" translate="yes" xml:space="preserve">
          <source>is a single character, it is used as both the left and right quote; if</source>
          <target state="translated">является одиночным символом,используется как левая,так и правая кавычки;если</target>
        </trans-unit>
        <trans-unit id="40a10a304b7ecaf941deb45a42636381388f5a3b" translate="yes" xml:space="preserve">
          <source>is a single user-visible &lt;b&gt;character&lt;/b&gt;, which may in turn be several characters (&lt;b&gt;codepoints&lt;/b&gt;) long. For example, a carriage return plus a line feed is a single grapheme but two characters, while a &amp;ldquo;ȫ&amp;rdquo; is a single grapheme but one, two, or even three characters, depending on &lt;b&gt;normalization&lt;/b&gt;.</source>
          <target state="translated">является одним видимым пользователем &lt;b&gt;символом&lt;/b&gt; , который, в свою очередь, может состоять из нескольких символов ( &lt;b&gt;кодовых точек&lt;/b&gt; ). Например, возврат каретки плюс перевод строки - это одна графема, но два символа, а &amp;laquo;ȫ&amp;raquo; - это одна графема, но с одним, двумя или даже тремя символами, в зависимости от &lt;b&gt;нормализации&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="94a42c80703dda187cbf9d8dc635962500cae627" translate="yes" xml:space="preserve">
          <source>is a small utility that produces a diff between an extracted archive and an unextracted one. (Note that this utility requires the &lt;code&gt;Text::Diff&lt;/code&gt; module to function properly; this module isn't distributed with perl, but is available from the CPAN.)</source>
          <target state="translated">это небольшая утилита, которая производит различие между извлеченным и не извлеченным архивом. (Обратите внимание, что для правильной работы этой утилиты требуется модуль &lt;code&gt;Text::Diff&lt;/code&gt; ; этот модуль не распространяется с perl, но доступен на CPAN.)</target>
        </trans-unit>
        <trans-unit id="0317915857aed0b904067e1c9f03cf0d3827f112" translate="yes" xml:space="preserve">
          <source>is a space-separated list of the login names of the members of the group.</source>
          <target state="translated">это разделенный пробелами список имен участников группы.</target>
        </trans-unit>
        <trans-unit id="94df1f18f1035b39bcc002ff85383c1903d30b19" translate="yes" xml:space="preserve">
          <source>is a special case of</source>
          <target state="translated">особый случай</target>
        </trans-unit>
        <trans-unit id="1e4503fa2022262b8888da1041ba3a96a491c954" translate="yes" xml:space="preserve">
          <source>is a strictly positive integer. There are exactly</source>
          <target state="translated">это строго положительное целое число.Точно</target>
        </trans-unit>
        <trans-unit id="22b4d0a1706395e3dc8904448c577180ebc49623" translate="yes" xml:space="preserve">
          <source>is a string of three octal digits, matches the character whose coded character set value is</source>
          <target state="translated">это строка из трех восьмеричных цифр,соответствующая символу,чье кодированное значение набора символов равно</target>
        </trans-unit>
        <trans-unit id="9237185425d334578430573eb80cfb1d7070152b" translate="yes" xml:space="preserve">
          <source>is a string value that will be printed if the test fails. This should be some useful information about the test, pertaining to why it failed, and/or a description of the test. For example:</source>
          <target state="translated">это строковое значение,которое будет распечатано в случае неудачи теста.Это должна быть некоторая полезная информация о тесте,относящаяся к причине его неудачи,и/или описание теста.Например:</target>
        </trans-unit>
        <trans-unit id="f5d49daf4b07c85bc3e9c9ef9d8fffc8d3e3f192" translate="yes" xml:space="preserve">
          <source>is a string, it is interpreted as a method name - which may (in the usual way) be inherited from another class.</source>
          <target state="translated">это строка,она интерпретируется как имя метода-которое может (обычным образом)наследоваться от другого класса.</target>
        </trans-unit>
        <trans-unit id="3586b680080fd5641b2ceb505391e64b157c6d54" translate="yes" xml:space="preserve">
          <source>is a string.</source>
          <target state="translated">это струна.</target>
        </trans-unit>
        <trans-unit id="4ed0c07d66bccd475fa1593c086fc3fa98dec2eb" translate="yes" xml:space="preserve">
          <source>is a subclass of Pod::Simple.</source>
          <target state="translated">это подкласс Pod::Simple.</target>
        </trans-unit>
        <trans-unit id="0c003c50abcb5c5b0264289df696a4d0a86e8994" translate="yes" xml:space="preserve">
          <source>is a syntax error. The &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; module (standard as of v5.8, and from CPAN before then) is able to do this properly.</source>
          <target state="translated">это синтаксическая ошибка. Модуль &lt;code&gt;&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;&lt;/code&gt; (стандартный начиная с v5.8 и от CPAN до этого) может делать это правильно.</target>
        </trans-unit>
        <trans-unit id="2876ee2f7992b444410c106ba7451d0d11add079" translate="yes" xml:space="preserve">
          <source>is a tar-like program, written in pure Perl.</source>
          <target state="translated">это смолоподобная программа,написанная на чистом Перле.</target>
        </trans-unit>
        <trans-unit id="789ff2609c0abca97040f597d9fb835495dbcb55" translate="yes" xml:space="preserve">
          <source>is a type.</source>
          <target state="translated">это тип.</target>
        </trans-unit>
        <trans-unit id="ffb330a620d2c555f748134ae75b69f801c184e1" translate="yes" xml:space="preserve">
          <source>is a utility to apply pattern matching to the contents of files in a tar archive.</source>
          <target state="translated">это утилита для применения шаблонов,совпадающих с содержимым файлов в tar-архиве.</target>
        </trans-unit>
        <trans-unit id="5a8daa6bdde6d599bc39901138a55ee1a90e8f3c" translate="yes" xml:space="preserve">
          <source>is actually</source>
          <target state="translated">на самом деле</target>
        </trans-unit>
        <trans-unit id="18ace8663c11e15c7ea7af0769d0b51ea8be5d9e" translate="yes" xml:space="preserve">
          <source>is actually a wrapper to call &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; with appropriate parameters and it accepts extra parameters and forwards them to &lt;code&gt;nmake&lt;/code&gt; command as additional arguments. You should pass target this way.</source>
          <target state="translated">фактически является оболочкой для вызова &lt;code&gt;nmake -f makefile.ce&lt;/code&gt; с соответствующими параметрами, принимает дополнительные параметры и пересылает их команде &lt;code&gt;nmake&lt;/code&gt; в качестве дополнительных аргументов. Таким образом вы должны пройти мимо цели.</target>
        </trans-unit>
        <trans-unit id="9fbb21c8780d25c2d62c14d525ba4493fed3f009" translate="yes" xml:space="preserve">
          <source>is actually nothing more than a link to the (executable)</source>
          <target state="translated">на самом деле не более чем ссылка на (исполняемый файл).</target>
        </trans-unit>
        <trans-unit id="5c143cd7b595ecaec566bd11322616c254969521" translate="yes" xml:space="preserve">
          <source>is adopted and becomes the name entry; it must already contain the name string.</source>
          <target state="translated">принимается и становится именной записью;она уже должна содержать строку с именем.</target>
        </trans-unit>
        <trans-unit id="f0396ad875d583a36bd13679febb8581f2d969c0" translate="yes" xml:space="preserve">
          <source>is aggregate (eg</source>
          <target state="translated">является агрегатом (например</target>
        </trans-unit>
        <trans-unit id="bb8fcae34915a333a3718d00db6629dab07f6c3d" translate="yes" xml:space="preserve">
          <source>is aliased to a constant in the look</source>
          <target state="translated">навеян на константу во внешнем виде</target>
        </trans-unit>
        <trans-unit id="ef7ecbbb686b7c87fdcabe5489a7fa8b747a3327" translate="yes" xml:space="preserve">
          <source>is all lowercase, then the &lt;code&gt;CAPITAL&lt;/code&gt; variant is ignored, otherwise the &lt;code&gt;SMALL&lt;/code&gt; variant is ignored, and both</source>
          <target state="translated">все в нижнем регистре, тогда вариант &lt;code&gt;CAPITAL&lt;/code&gt; игнорируется, иначе вариант &lt;code&gt;SMALL&lt;/code&gt; игнорируется, и оба</target>
        </trans-unit>
        <trans-unit id="33ba30df2d642bce79e623dcea9beec8c9b22ce4" translate="yes" xml:space="preserve">
          <source>is allowed so that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; would not break under stricture.</source>
          <target state="translated">разрешено, чтобы &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;$AUTOLOAD&lt;/code&gt; не нарушал ограничения.</target>
        </trans-unit>
        <trans-unit id="46fdc8e9a838eea8febbedf9514625b10566e73a" translate="yes" xml:space="preserve">
          <source>is almost exactly like saying:</source>
          <target state="translated">это почти то же самое,что сказать:</target>
        </trans-unit>
        <trans-unit id="0a5481b3e3d73092971b7b67886c83a33452d0d4" translate="yes" xml:space="preserve">
          <source>is already stored as</source>
          <target state="translated">уже хранится как</target>
        </trans-unit>
        <trans-unit id="e58ea1e0a6e29d9ef790e92565bf38a0d8bec6a6" translate="yes" xml:space="preserve">
          <source>is already stored as native 8 bit, then this is a no-op. Can be used to make sure that the UTF-8 flag is off, e.g. when you want to make sure that the substr() or length() function works with the usually faster byte algorithm.</source>
          <target state="translated">уже хранится как родной 8-ми бит,значит,это нет.Может использоваться для того,чтобы убедиться,что флаг UTF-8 выключен,например,когда вы хотите убедиться,что функция substr()или length()работает с обычно более быстрым байтовым алгоритмом.</target>
        </trans-unit>
        <trans-unit id="4ac0b49408848578e35ac08e94a2eb89181b4b85" translate="yes" xml:space="preserve">
          <source>is also checked if it exists in any of the given search directories. This ensures that e.g. &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; is found.</source>
          <target state="translated">также проверяется, существует ли он в любом из указанных каталогов поиска. Это гарантирует, что, например, будет найден &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a6684732c17ab02c8bf39ac150678f88574a5f9" translate="yes" xml:space="preserve">
          <source>is also run unconditionally. But for</source>
          <target state="translated">также управляется безоговорочно.Но за</target>
        </trans-unit>
        <trans-unit id="4b33a9f079edd28e14aa0e8744a90b1c55a32145" translate="yes" xml:space="preserve">
          <source>is always interpreted exactly as specified. Otherwise, if the</source>
          <target state="translated">всегда интерпретируется точно так,как указано.В противном случае,если</target>
        </trans-unit>
        <trans-unit id="91b6c84b698378cb0b4e7eec5833aff6a0180f6a" translate="yes" xml:space="preserve">
          <source>is always non-negative, so &lt;code&gt;[x,pi]&lt;/code&gt; is really &lt;code&gt;-x&lt;/code&gt; , a negative number) and the above definition states that</source>
          <target state="translated">всегда неотрицательно, поэтому &lt;code&gt;[x,pi]&lt;/code&gt; на самом деле &lt;code&gt;-x&lt;/code&gt; , отрицательное число), и в приведенном выше определении говорится, что</target>
        </trans-unit>
        <trans-unit id="2da11ce46f8ece756162bb2bd4909c483184c069" translate="yes" xml:space="preserve">
          <source>is always used instead of</source>
          <target state="translated">всегда используется вместо</target>
        </trans-unit>
        <trans-unit id="da8ff8262fd46aff0c9a7c13fdec487e6709caf8" translate="yes" xml:space="preserve">
          <source>is an &lt;code&gt;enum&lt;/code&gt; . If a reference an array is passed then the first element is used in place of the &lt;code&gt;#ifdef&lt;/code&gt; line, and the second element in place of the &lt;code&gt;#endif&lt;/code&gt; . This allows pre-processor constructions such as</source>
          <target state="translated">это &lt;code&gt;enum&lt;/code&gt; . Если передается ссылка на массив, то первый элемент используется вместо строки &lt;code&gt;#ifdef&lt;/code&gt; , а второй элемент вместо &lt;code&gt;#endif&lt;/code&gt; . Это позволяет использовать такие конструкции препроцессора, как</target>
        </trans-unit>
        <trans-unit id="e407c507e8202b86ad93aac32e3005d18c456577" translate="yes" xml:space="preserve">
          <source>is an abstract entity. It is not bound to any particular integer width, especially not to the C language &lt;code&gt;char&lt;/code&gt; . Unicode is language-neutral and display-neutral: it does not encode the language of the text, and it does not generally define fonts or other graphical layout details. Unicode operates on characters and on text built from those characters.</source>
          <target state="translated">это абстрактная сущность. Он не связан с какой - либо конкретной целочисленной ширины, особенно не на языке С &lt;code&gt;char&lt;/code&gt; . Unicode не зависит от языка и отображения: он не кодирует язык текста и обычно не определяет шрифты или другие детали графического макета. Unicode работает с символами и текстом, созданным из этих символов.</target>
        </trans-unit>
        <trans-unit id="5b08b5f167ddd80c250223169363f388a08ecb4a" translate="yes" xml:space="preserve">
          <source>is an alias of Encode::Encoder-&amp;gt;new(). This one is exported on demand.</source>
          <target state="translated">является псевдонимом Encode :: Encoder-&amp;gt; new (). Этот экспортируется по запросу.</target>
        </trans-unit>
        <trans-unit id="72d90656006280a94921d89ee421ad3991654b7e" translate="yes" xml:space="preserve">
          <source>is an alternate name for a character</source>
          <target state="translated">альтернативное имя для персонажа</target>
        </trans-unit>
        <trans-unit id="25511ab968aa9c3ee55dc28d290edd3e8efa06cf" translate="yes" xml:space="preserve">
          <source>is an appropriate suffix for the platform.</source>
          <target state="translated">это подходящий суффикс для платформы.</target>
        </trans-unit>
        <trans-unit id="7c8e05cc3c89a308a1e47e52a0132a344b0c0867" translate="yes" xml:space="preserve">
          <source>is an array of all the layers destined for the &lt;code&gt;PerlIO *&lt;/code&gt; , and any arguments passed to them,</source>
          <target state="translated">- это массив всех слоев, предназначенных для &lt;code&gt;PerlIO *&lt;/code&gt; , и любых переданных им аргументов,</target>
        </trans-unit>
        <trans-unit id="0d1781574c62d77c8d78bcf079651e77516db6c7" translate="yes" xml:space="preserve">
          <source>is an executable image containing the main entry point for Perl, as well as some initialization code. It should be placed in a public directory, and made world executable. In order to run Perl with command line arguments, you should define a foreign command to invoke this image.</source>
          <target state="translated">это исполняемое изображение,содержащее основную точку входа для Perl,а также некоторый код инициализации.Он должен быть помещен в общий каталог и сделан исполняемым в мире.Чтобы запустить Perl с аргументами командной строки,необходимо определить постороннюю команду для вызова этого образа.</target>
        </trans-unit>
        <trans-unit id="da2e040dacc739036641a30943ec92d4d35fb00f" translate="yes" xml:space="preserve">
          <source>is an executable image which contains all of the basic functionality of Perl, but cannot take advantage of Perl XS extensions and has a hard-wired list of library locations for loading pure-Perl modules. It is used extensively to build and test Perl and various extensions, but is not installed.</source>
          <target state="translated">это исполняемый образ,который содержит все основные функциональные возможности Perl,но не может воспользоваться расширениями Perl XS и имеет жесткий список мест расположения библиотек для загрузки чисто Perl-модулей.Он широко используется для сборки и тестирования Perl и различных расширений,но не установлен.</target>
        </trans-unit>
        <trans-unit id="295e5d231e93271cf2e87ff53177a2085d57895e" translate="yes" xml:space="preserve">
          <source>is an interface to &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; - paste in your error message to it, and it'll explain it for you.</source>
          <target state="translated">- это интерфейс для &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; - вставьте в него сообщение об ошибке, и он вам все объяснит.</target>
        </trans-unit>
        <trans-unit id="03aebc26e2a8086c7faa0ae9cd0a6e9a5014db91" translate="yes" xml:space="preserve">
          <source>is an older tool, originally intended for the development of XS modules, which comes packaged with the Perl distribution.</source>
          <target state="translated">это старый инструмент,изначально предназначенный для разработки модулей XS,который поставляется в комплекте с дистрибутивом Perl.</target>
        </trans-unit>
        <trans-unit id="c81e7450f22acc425e61712a1eaf2d872d794637" translate="yes" xml:space="preserve">
          <source>is an op that has been optimized away by perl. They're displayed with a sequence-number of '-', because they are not executed (they don't appear in previous example), they're printed here because they reflect the parse.</source>
          <target state="translated">это операция,которая была оптимизирована Перлом.Они отображаются с порядковым номером '-',потому что они не выполняются (они не появляются в предыдущем примере),они выводятся здесь,потому что отражают разбор.</target>
        </trans-unit>
        <trans-unit id="9d5e6dcb345ffb1eb11d5479427e9235760d76bd" translate="yes" xml:space="preserve">
          <source>is an optional preconstructed &lt;code&gt;enterloop&lt;/code&gt; op to use in the loop; if it is null then a suitable op will be constructed automatically.</source>
          <target state="translated">- необязательная &lt;code&gt;enterloop&lt;/code&gt; для использования в цикле; если он равен нулю, то подходящая операция будет построена автоматически.</target>
        </trans-unit>
        <trans-unit id="acf27be8c27b564ea715f62509eb99be46454cb1" translate="yes" xml:space="preserve">
          <source>is another German-speaking magazine for Perl beginners (see &lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tf&lt;/a&gt; ).</source>
          <target state="translated">- еще один немецкоязычный журнал для начинающих Perl (см. &lt;a href=&quot;http://perl-zeitung.at.tf&quot;&gt;http://perl-zeitung.at.tf&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="aa85c7e6136b506253070be8f818e9007d9cfdee" translate="yes" xml:space="preserve">
          <source>is any integer.</source>
          <target state="translated">это любое целое число.</target>
        </trans-unit>
        <trans-unit id="be3f59631fae1d8b0922b826e41efeee4ec99b4a" translate="yes" xml:space="preserve">
          <source>is any integer. atan2(0, 0) is undefined, and if the complex arguments are used for atan2(), a division by zero will happen if z1**2+z2**2 == 0.</source>
          <target state="translated">является любым целым числом.atan2(0,0)неопределен,а если использовать сложные аргументы для atan2(),то деление на ноль произойдет,если z1**2+z2**2 ==0.</target>
        </trans-unit>
        <trans-unit id="5783bc43b68f92b02879e3b2c43e9bdd7ca36459" translate="yes" xml:space="preserve">
          <source>is any of the above or an unblessed reference</source>
          <target state="translated">является любой из вышеперечисленных или неоценимой ссылкой</target>
        </trans-unit>
        <trans-unit id="30e4914477a91ec9b94e791e584cbb65619eeac2" translate="yes" xml:space="preserve">
          <source>is as above. Note that it is possible for calls to &lt;code&gt;pre_&lt;/code&gt; and &lt;code&gt;post_end&lt;/code&gt; to nest, if there is something on the save stack that calls string eval.</source>
          <target state="translated">как указано выше. Обратите внимание, что вызовы &lt;code&gt;pre_&lt;/code&gt; и &lt;code&gt;post_end&lt;/code&gt; могут быть вложенными, если в стеке сохранения есть что-то, вызывающее строку eval.</target>
        </trans-unit>
        <trans-unit id="36eb847ac03124888eb9b23e1494c3b3077980d8" translate="yes" xml:space="preserve">
          <source>is asking for trouble, since</source>
          <target state="translated">просит неприятностей,так как</target>
        </trans-unit>
        <trans-unit id="df9814075a8a9994907bb7e926342f5cd51701bc" translate="yes" xml:space="preserve">
          <source>is associated with the matched string, and is reset by each assignment to pos(). Zero-length matches at the end of the previous match are ignored during &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">связан с совпавшей строкой и сбрасывается при каждом присвоении pos (). Совпадения нулевой длины в конце предыдущего совпадения игнорируются во время &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6941b5c781a0a521041b5c1dd8c16baced227b53" translate="yes" xml:space="preserve">
          <source>is at &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html&lt;/a&gt; -- much of it is just things of interest to protocol designers, but it explains some basic concepts, like the distinction between locales and language-tags.</source>
          <target state="translated">находится по адресу &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc2277.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc2277.html&lt;/a&gt; - большая часть этого просто интересна разработчикам протоколов, но в нем объясняются некоторые базовые концепции, такие как различие между языками и языковыми тегами.</target>
        </trans-unit>
        <trans-unit id="3695a320bebe6f3e9a28f189a22d75b358931b52" translate="yes" xml:space="preserve">
          <source>is at least 3, &lt;code&gt;for&lt;/code&gt; loops will be translated into equivalent while loops with continue blocks; for instance</source>
          <target state="translated">равно не менее 3, циклы &lt;code&gt;for&lt;/code&gt; будут переведены в эквивалентные циклы while с блоками continue; например</target>
        </trans-unit>
        <trans-unit id="a932359d1eeb1e12e4da8b3878fa5ee714a70634" translate="yes" xml:space="preserve">
          <source>is at least 5, &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declarations will be translated into &lt;code&gt;BEGIN&lt;/code&gt; blocks containing calls to &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;; for instance,</source>
          <target state="translated">составляет не менее 5, объявления &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; будут переведены в блоки &lt;code&gt;BEGIN&lt;/code&gt; , содержащие вызовы &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ; например,</target>
        </trans-unit>
        <trans-unit id="c119f702a61cc525d7584c5eac4566db8774adc2" translate="yes" xml:space="preserve">
          <source>is at least 512kbyte (you can check this with: &lt;code&gt;stubedit cc1.exe&lt;/code&gt; ).</source>
          <target state="translated">составляет не менее 512 Кбайт (вы можете проверить это с помощью: &lt;code&gt;stubedit cc1.exe&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f1edba509463471e4477759e68744d683b69a1f8" translate="yes" xml:space="preserve">
          <source>is at least 7, &lt;code&gt;if&lt;/code&gt; statements will be translated into equivalent expressions using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;?:&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; ; for instance</source>
          <target state="translated">равно не менее 7, &lt;code&gt;if&lt;/code&gt; операторы будут переведены в эквивалентные выражения с помощью &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; , &lt;code&gt;?:&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; ; например</target>
        </trans-unit>
        <trans-unit id="3ebcba5300e1807510d46aa9590e6c6a47b91326" translate="yes" xml:space="preserve">
          <source>is basically equivalent to</source>
          <target state="translated">в сущности эквивалентен</target>
        </trans-unit>
        <trans-unit id="f2a370a954d86dc4cfe469a68c83fd68b9353b30" translate="yes" xml:space="preserve">
          <source>is basically equivalent to this:</source>
          <target state="translated">в основном эквивалентна этому:</target>
        </trans-unit>
        <trans-unit id="ffc0ffcd2f24cb5977dd7a038df50d731e24c9b9" translate="yes" xml:space="preserve">
          <source>is basically equivalent to:</source>
          <target state="translated">в основном эквивалентна:</target>
        </trans-unit>
        <trans-unit id="efa6ff7d8cd2f270c8d3889d8b02bcd7a2b0379a" translate="yes" xml:space="preserve">
          <source>is be a hashref of types the constant function will return. In ExtUtils::Constant::XS this method is used to returns a hashref keyed IV NV PV SV to show which combination of pointers will be needed in the C argument list generated by C_constant_other_params_definition and C_constant_other_params</source>
          <target state="translated">является хэшрефом типов,который вернется константной функцией.В ExtUtils::Constant::XS этот метод используется для возврата хэшрефа с ключом IV NV PV SV,чтобы показать,какая комбинация указателей будет необходима в списке аргументов C,генерируемом C_constant_other_params_definition и C_constant_other_params</target>
        </trans-unit>
        <trans-unit id="beed228bb7571f61ef1254143747172d93f725df" translate="yes" xml:space="preserve">
          <source>is because &quot;:&quot; often comes up in paths, like &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; .)</source>
          <target state="translated">потому что &quot;:&quot; часто встречается в путях, например &lt;code&gt;&quot;c:/perl/lib&quot;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="b00405322d6959fc080131bfe766ce7448452d15" translate="yes" xml:space="preserve">
          <source>is being compiled you may (depending on the operating system release) see an additional compiler flag being used: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; . This is normal and refers to a feature that is relevant only if you use the &lt;code&gt;filetest&lt;/code&gt; pragma. In older releases of the operating system the feature was broken and the NO_EFF_ONLY_OK instructs Perl not to use the feature.</source>
          <target state="translated">компилируется, вы можете (в зависимости от выпуска операционной системы) увидеть, что используется дополнительный флаг компилятора: &lt;code&gt;-DNO_EFF_ONLY_OK&lt;/code&gt; . Это нормально и относится к функции, которая актуальна, только если вы используете прагму &lt;code&gt;filetest&lt;/code&gt; . В более старых версиях операционной системы функция была неработоспособна, и NO_EFF_ONLY_OK предписывает Perl не использовать эту функцию.</target>
        </trans-unit>
        <trans-unit id="5a7b7ea63bcfd4e7e919847cbe05a532d715b559" translate="yes" xml:space="preserve">
          <source>is being used, false if not.</source>
          <target state="translated">используется,фальшиво,если нет.</target>
        </trans-unit>
        <trans-unit id="46adb9ce162b644638d5f6ea5ff817ff62b057cb" translate="yes" xml:space="preserve">
          <source>is being used, the Perl subroutine is specified as a C string. In this case the subroutine name has been 'hard-wired' into the code.</source>
          <target state="translated">используется,подпрограмма Perl указана в виде строки C.В этом случае имя подпрограмм было 'жестко прошито' в код.</target>
        </trans-unit>
        <trans-unit id="9a77723c3a569791ba0daaaeffeea04df4037001" translate="yes" xml:space="preserve">
          <source>is better than</source>
          <target state="translated">лучше,чем</target>
        </trans-unit>
        <trans-unit id="e0502ca9d9f39e4be66fbcd074913732a28c22e5" translate="yes" xml:space="preserve">
          <source>is bigger then the group level.</source>
          <target state="translated">больше,чем на групповом уровне.</target>
        </trans-unit>
        <trans-unit id="343082504b9a0655ece30e29661825f00250e1d3" translate="yes" xml:space="preserve">
          <source>is built using</source>
          <target state="translated">построен с использованием</target>
        </trans-unit>
        <trans-unit id="0854b2a1714cc6445ab7e4ddf8c2db426ce57837" translate="yes" xml:space="preserve">
          <source>is built,</source>
          <target state="translated">построен,</target>
        </trans-unit>
        <trans-unit id="cf600e83596fbcfa5796fa75f5e47d5ff1240570" translate="yes" xml:space="preserve">
          <source>is built. This is a single executable (without DLL), intended to run on Win32, and it will facilitate remaining build process; all binaries built after it are foreign and should not run locally.</source>
          <target state="translated">построен.Это один исполняемый файл (без DLL),предназначенный для запуска на Win32,и он облегчит процесс сборки оставшихся файлов;все исполняемые файлы,собранные после него,являются чужими и не должны запускаться локально.</target>
        </trans-unit>
        <trans-unit id="5255e100819691e64fa9b4a02162efc6ad2a7971" translate="yes" xml:space="preserve">
          <source>is called</source>
          <target state="translated">называется</target>
        </trans-unit>
        <trans-unit id="0226beba7cd0e825fb4e38da5573e429bdef0536" translate="yes" xml:space="preserve">
          <source>is called like this</source>
          <target state="translated">так называется</target>
        </trans-unit>
        <trans-unit id="01efdfc207c40685a40505df8a8c6de053fd276d" translate="yes" xml:space="preserve">
          <source>is called thus</source>
          <target state="translated">так называется</target>
        </trans-unit>
        <trans-unit id="d6879492c8d67c42189022fa109e24255ed0a45a" translate="yes" xml:space="preserve">
          <source>is called, the interpreter's syntax parse tree and symbol tables are cleaned up, and global variables are reset. The second assignment to &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; is needed because perl_construct resets it to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">вызывается, дерево синтаксического анализа интерпретатора и таблицы символов очищаются, а глобальные переменные сбрасываются. Второе присвоение &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; необходимо, потому что perl_construct сбрасывает его на &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e0ec575b76e364e00644cc1e1456d4682a0ca12" translate="yes" xml:space="preserve">
          <source>is called. If</source>
          <target state="translated">называется.Если</target>
        </trans-unit>
        <trans-unit id="ec4d308b2a7ec41f333fa7e39a6baafd8199536a" translate="yes" xml:space="preserve">
          <source>is completed, control reverts back to Perl more or less immediately.</source>
          <target state="translated">завершено,управление более или менее немедленно возвращается на Perl.</target>
        </trans-unit>
        <trans-unit id="9808d99a48eef922543021cb1dd28efe676ff96c" translate="yes" xml:space="preserve">
          <source>is computed to be</source>
          <target state="translated">рассчитывается</target>
        </trans-unit>
        <trans-unit id="26d5193d0879df7801befc090d32f16dea7f62bc" translate="yes" xml:space="preserve">
          <source>is considerably slower.)</source>
          <target state="translated">значительно медленнее.)</target>
        </trans-unit>
        <trans-unit id="7457b7ec85de496d14e61652a0482492c7d41031" translate="yes" xml:space="preserve">
          <source>is considered an octal escape (but something like &lt;code&gt;\18&lt;/code&gt; is the same as &lt;code&gt;\0018&lt;/code&gt; ; that is, the octal escape &lt;code&gt;&quot;\001&quot;&lt;/code&gt; followed by a literal digit &lt;code&gt;&quot;8&quot;&lt;/code&gt; ).</source>
          <target state="translated">считается восьмеричным escape-символом (но что-то вроде &lt;code&gt;\18&lt;/code&gt; совпадает с &lt;code&gt;\0018&lt;/code&gt; ; то есть восьмеричный escape-символ &lt;code&gt;&quot;\001&quot;&lt;/code&gt; за которым следует буквальная цифра &lt;code&gt;&quot;8&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0c6c59d53731eb4d62ce728fe5d323178a21c69a" translate="yes" xml:space="preserve">
          <source>is consumed by this function and becomes part of the returned op tree.</source>
          <target state="translated">потребляется этой функцией и становится частью возвращаемого дерева операций.</target>
        </trans-unit>
        <trans-unit id="dc258a7b37a09c5a513defc7421c502e2dfc41b4" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the &lt;code&gt;refcounted_he&lt;/code&gt; . Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">копируется этой функцией, которая, таким образом, не получает права собственности на какие-либо ссылки на нее, и последующие изменения скаляра не будут отражены в значении, видимом в &lt;code&gt;refcounted_he&lt;/code&gt; . Сложные типы скаляров не будут храниться со ссылочной целостностью, а будут преобразованы в строки.</target>
        </trans-unit>
        <trans-unit id="fbf2c8c541938c6077a677f840135912410a3a25" translate="yes" xml:space="preserve">
          <source>is copied by this function, which thus does not take ownership of any reference to it, and later changes to the scalar will not be reflected in the value visible in the cop hints hash. Complex types of scalar will not be stored with referential integrity, but will be coerced to strings.</source>
          <target state="translated">копируется этой функцией,которая,таким образом,не берет на себя права собственности ни на одну ссылку на нее,и последующие изменения скаляра не будут отражаться в значении,видимом в хэше подсказок копирования.Сложные типы скаляров не будут храниться со ссылкой на целостность,а будут принуждаться к строкам.</target>
        </trans-unit>
        <trans-unit id="30e3ef0b8ff559774ec5ed938edd84b1f238cb9b" translate="yes" xml:space="preserve">
          <source>is copied to a new hash, which has the &lt;code&gt;%^H&lt;/code&gt; -specific magic added to it. A pointer to the new hash is returned.</source>
          <target state="translated">копируется в новый хэш, к которому добавлена ​​магия, специфичная для &lt;code&gt;%^H&lt;/code&gt; Возвращается указатель на новый хэш.</target>
        </trans-unit>
        <trans-unit id="747f6e21ce3daf93f93dd4472373d8de083a21bc" translate="yes" xml:space="preserve">
          <source>is created using &lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt; environment variable, via &lt;code&gt;tempnam&lt;/code&gt; .</source>
          <target state="translated">создается с использованием переменной среды &lt;code&gt;TMP&lt;/code&gt; или &lt;code&gt;TEMP&lt;/code&gt; через &lt;code&gt;tempnam&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a61d9fe71ed76708341c4ca0d849865f0cdc3b4" translate="yes" xml:space="preserve">
          <source>is currently unused and ignored. In future it may be used to pass in information used to change the C indentation style used.] The best way to maintain consistency is to pass in a hash reference and let this function update it.</source>
          <target state="translated">в настоящее время не используется и игнорируется.В будущем она может быть использована для передачи информации,используемой для изменения стиля отступа C].Лучший способ поддерживать согласованность-передать ссылку на хэш и позволить этой функции обновить ее.</target>
        </trans-unit>
        <trans-unit id="9813a16c1f4cea91b9c2c265d663c4bd1846f7de" translate="yes" xml:space="preserve">
          <source>is currently unused and must be zero.</source>
          <target state="translated">в настоящее время не используется и должен быть равен нулю.</target>
        </trans-unit>
        <trans-unit id="99e47089baf7bf5a97290b50bc31baafb3fecfdf" translate="yes" xml:space="preserve">
          <source>is currently unused and should always be 1.</source>
          <target state="translated">в настоящее время не используется и всегда должен быть 1.</target>
        </trans-unit>
        <trans-unit id="e342eb67743e357f6c505cac08784c21c4ae08f3" translate="yes" xml:space="preserve">
          <source>is dead simple: for given cross-architecture places in @INC a path where perl modules are, and right</source>
          <target state="translated">мертвецки проста:для данной кросс-архитектуры места в @INC путь,где находятся perl модули,и вправо</target>
        </trans-unit>
        <trans-unit id="c705d4c7e0b74c44541c11aa71e1a8a9918a05c8" translate="yes" xml:space="preserve">
          <source>is defined as a fixed string that can appear at any point in a range of positions relative to the start of the match. For example,</source>
          <target state="translated">определяется как фиксированная строка,которая может появиться в любой точке в диапазоне позиций относительно начала матча.Например,</target>
        </trans-unit>
        <trans-unit id="ecb2ca25d83a1d9ea96055686343475429c34ffd" translate="yes" xml:space="preserve">
          <source>is defined as being a substring that must appear for the pattern to match. An</source>
          <target state="translated">определяется как подстрока,которая должна появиться,чтобы деталь соответствовала..</target>
        </trans-unit>
        <trans-unit id="1da1038b5104f0f95e494512f9adf3b8d6beaf10" translate="yes" xml:space="preserve">
          <source>is defined, such as when running under GNV bash.</source>
          <target state="translated">определяется,например,при работе под GNV bash.</target>
        </trans-unit>
        <trans-unit id="deb74afad5c0f4e11684626863d8cd55cb9bdeee" translate="yes" xml:space="preserve">
          <source>is defined, then it is used to avoid &lt;code&gt;memEQ&lt;/code&gt; for short names, or to generate a comment to highlight the position of the character in the &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">определен, затем он используется, чтобы избежать использования &lt;code&gt;memEQ&lt;/code&gt; для коротких имен или для создания комментария, чтобы выделить позицию символа в операторе &lt;code&gt;switch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="991181f3df7a8cdf4f7168cba333bb5158ffb3d9" translate="yes" xml:space="preserve">
          <source>is delimited by bracketing quotes, the</source>
          <target state="translated">ограничена заключенными в скобки кавычками.</target>
        </trans-unit>
        <trans-unit id="0aab59497e397eb628c4ae4e65530bcc8256b5ef" translate="yes" xml:space="preserve">
          <source>is designed to test whether a particular code snippet has been compiled into an optree containing specified numbers of particular op types. This is good for testing whether optimisations which alter ops, such as converting an &lt;code&gt;aelem&lt;/code&gt; op into an &lt;code&gt;aelemfast&lt;/code&gt; op, are really doing that.</source>
          <target state="translated">предназначен для проверки того, был ли скомпилирован конкретный фрагмент кода в optree, содержащем указанное количество определенных типов операций. Это хорошо для проверки того, действительно ли &lt;code&gt;aelemfast&lt;/code&gt; операции, которые изменяют операции, такие как преобразование &lt;code&gt;aelem&lt;/code&gt; в операцию aelemfast .</target>
        </trans-unit>
        <trans-unit id="416051867536031c9c339fabd2716eb40c91334e" translate="yes" xml:space="preserve">
          <source>is directed to &lt;b&gt;STDOUT&lt;/b&gt;, unlike the pragma.</source>
          <target state="translated">направлен на &lt;b&gt;STDOUT&lt;/b&gt; , в отличие от прагмы.</target>
        </trans-unit>
        <trans-unit id="9553c90ac38c53c0080494be25343dc34ae22d57" translate="yes" xml:space="preserve">
          <source>is effectively</source>
          <target state="translated">фактически</target>
        </trans-unit>
        <trans-unit id="73b6c5e895538dd2917ae4f7b4e4274c97cfa6db" translate="yes" xml:space="preserve">
          <source>is empty if</source>
          <target state="translated">пустой,если</target>
        </trans-unit>
        <trans-unit id="f685ee609385b240742c6531d09c2e99375d25df" translate="yes" xml:space="preserve">
          <source>is empty). Note that this describes the contents of</source>
          <target state="translated">пусто).Обратите внимание,что это описывает содержание</target>
        </trans-unit>
        <trans-unit id="c70ff529c1678e6d6f8a86a860dfe6b90b65a6d1" translate="yes" xml:space="preserve">
          <source>is empty, or is exactly one code with at least four hexdigits which can be used as an alternative case folding when the calling program cannot cope with the fold being a sequence of multiple code points. If</source>
          <target state="translated">пустой,или это ровно один код с как минимум четырьмя гекс-цифрами,который может быть использован как альтернативный вариант сгибания регистра,когда вызывающая программа не может справиться с тем,что сгиб представляет собой последовательность из нескольких точек кода.Если</target>
        </trans-unit>
        <trans-unit id="b82f1aa4dc1e11bb0291658e76619710db88ea38" translate="yes" xml:space="preserve">
          <source>is empty, the</source>
          <target state="translated">пустая,</target>
        </trans-unit>
        <trans-unit id="0e207ae2f0db5023f32cc9020e3ddf2c71a2b3cc" translate="yes" xml:space="preserve">
          <source>is equal to the C variable &lt;code&gt;name&lt;/code&gt; . If</source>
          <target state="translated">равно переменным С &lt;code&gt;name&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">равносильно</target>
        </trans-unit>
        <trans-unit id="bc2b09c98193f0e5662cbf8b53fad07d5e736c01" translate="yes" xml:space="preserve">
          <source>is equivalent to the following Perl-like pseudo code:</source>
          <target state="translated">эквивалентен следующему псевдокоду Перла:</target>
        </trans-unit>
        <trans-unit id="32a86d7541273833cc59233715d55c78fd068962" translate="yes" xml:space="preserve">
          <source>is equivalent to the more verbose</source>
          <target state="translated">эквивалентен более многословному</target>
        </trans-unit>
        <trans-unit id="058019ba79ba28b16d81510fd9c7be6426e9a31b" translate="yes" xml:space="preserve">
          <source>is equivalent to the original path for all systems but VMS.</source>
          <target state="translated">эквивалентен оригинальному пути для всех систем,кроме VMS.</target>
        </trans-unit>
        <trans-unit id="8a799343991654a6923d4110f493e02c300d895c" translate="yes" xml:space="preserve">
          <source>is equivalent to this Perl code:</source>
          <target state="translated">эквивалентен этому коду Perl:</target>
        </trans-unit>
        <trans-unit id="5cffe5ee80305aeabc52048276f1acf872533639" translate="yes" xml:space="preserve">
          <source>is equivalent to this:</source>
          <target state="translated">эквивалентно этому:</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">эквивалентно:</target>
        </trans-unit>
        <trans-unit id="6c01ad008c1dcafb297a57e15952c3a221508e1b" translate="yes" xml:space="preserve">
          <source>is evaluated in &lt;b&gt;list context&lt;/b&gt; and interpolated into the list value.</source>
          <target state="translated">оценивается в &lt;b&gt;контексте списка&lt;/b&gt; и интерполируется в значение списка.</target>
        </trans-unit>
        <trans-unit id="304cd7bde8c8a066e9ddc11f5d17d8c69ab28cfc" translate="yes" xml:space="preserve">
          <source>is exactly equivalent to</source>
          <target state="translated">в точности эквивалентен</target>
        </trans-unit>
        <trans-unit id="5868f5f052497727f3a75d03017159c24abf653a" translate="yes" xml:space="preserve">
          <source>is explicitly used, false if an external</source>
          <target state="translated">явно используется,ложно,если внешний</target>
        </trans-unit>
        <trans-unit id="9f231ca4498f5e3002502cfac3a6b5698c2f1ac4" translate="yes" xml:space="preserve">
          <source>is extracted and decoded for</source>
          <target state="translated">извлекается и декодируется для</target>
        </trans-unit>
        <trans-unit id="c507073afeb7ab580d7916aa3aef230ed3bfced7" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;decode&lt;/code&gt; should make a &quot;best effort&quot; to convert the string - for example by using Unicode's &quot;\x{FFFD}&quot; as a replacement character.</source>
          <target state="translated">имеет значение false, то &lt;code&gt;decode&lt;/code&gt; должно предпринять &amp;laquo;максимальные усилия&amp;raquo; для преобразования строки - например, используя Unicode &quot;\ x {FFFD}&quot; в качестве символа замены.</target>
        </trans-unit>
        <trans-unit id="66ef51ab90721c11c96b9fd1112297ae5c3bc612" translate="yes" xml:space="preserve">
          <source>is false then &lt;code&gt;encode&lt;/code&gt; MUST make a &quot;best effort&quot; to convert the string - for example, by using a replacement character.</source>
          <target state="translated">ложно, то &lt;code&gt;encode&lt;/code&gt; ДОЛЖНО приложить максимум усилий для преобразования строки - например, с помощью символа замены.</target>
        </trans-unit>
        <trans-unit id="85c8ac4c204bffb12a6b2e5264aea8475c7fa00f" translate="yes" xml:space="preserve">
          <source>is false unless the old $x happened to have the value &lt;code&gt;123&lt;/code&gt; .</source>
          <target state="translated">ложно, если старый $ x не имел значение &lt;code&gt;123&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59641b07163bb2532f0e133b6081758f8b622aff" translate="yes" xml:space="preserve">
          <source>is find. The returned object is what does the actual encoding or decoding.</source>
          <target state="translated">это находка.Возвращаемый объект-это то,что делает фактическое кодирование или декодирование.</target>
        </trans-unit>
        <trans-unit id="19134d8f14cf9efb45a39a603eab01b599496a36" translate="yes" xml:space="preserve">
          <source>is first looked up in the list of standard Unicode character names.</source>
          <target state="translated">впервые просматривается в списке стандартных имен символов Юникода.</target>
        </trans-unit>
        <trans-unit id="28844e6770c7541b46bf5769a48ab89a32b3a220" translate="yes" xml:space="preserve">
          <source>is formatted as:</source>
          <target state="translated">отформатировано как:</target>
        </trans-unit>
        <trans-unit id="a5bf27e9e737c2b17d8bda56643008ebf40f5d55" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$buffer&lt;/code&gt; will be have all data up to the flush point removed. This can then be passed to the &lt;code&gt;deflate&lt;/code&gt; method.</source>
          <target state="translated">найден, возвращается &lt;code&gt;Z_OK&lt;/code&gt; и в &lt;code&gt;$buffer&lt;/code&gt; будут удалены все данные до точки сброса. Затем это можно передать методу &lt;code&gt;deflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b39d821e927a0c9d0363f2727cc57c75893ba1d" translate="yes" xml:space="preserve">
          <source>is found, &lt;code&gt;Z_OK&lt;/code&gt; is returned and &lt;code&gt;$input&lt;/code&gt; will be have all data up to the flush point removed. This data can then be passed to the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method to be uncompressed.</source>
          <target state="translated">найден, &lt;code&gt;Z_OK&lt;/code&gt; возвращается, а в &lt;code&gt;$input&lt;/code&gt; будут удалены все данные до точки сброса. Затем эти данные можно передать в метод &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; для распаковки.</target>
        </trans-unit>
        <trans-unit id="4ad43a18a515527a341bfc4d3a6681a6fd357b43" translate="yes" xml:space="preserve">
          <source>is found, Perl will investigate its first line etc. The only hardwired limit on the recursion depth is implicit: there is a limit 4 on the number of additional arguments inserted before the actual arguments given to system(). In particular, if no additional arguments are specified on the &quot;magic&quot; first lines, then the limit on the depth is 4.</source>
          <target state="translated">найден,Перл исследует его первую строчку и т.д.Единственное жестко прописанное ограничение на глубину рекурсии неявно:существует ограничение 4 на количество дополнительных аргументов,вставляемых перед фактическими аргументами,передаваемыми в system().В частности,если в первых строках &quot;магии&quot; не указаны дополнительные аргументы,то ограничение на глубину составляет 4.</target>
        </trans-unit>
        <trans-unit id="1f1b1a9afa41f162ae23bb3a01d9f047e652e6e1" translate="yes" xml:space="preserve">
          <source>is four characters, the first two are used as the left quote and the second two as the right quote.</source>
          <target state="translated">это четыре символа,первые два используются как левая кавычка,а вторые два-как правая кавычка.</target>
        </trans-unit>
        <trans-unit id="6f9a16a4dd16d307d04182c223f1289cfcd07c67" translate="yes" xml:space="preserve">
          <source>is generated automatically from</source>
          <target state="translated">генерируется автоматически из</target>
        </trans-unit>
        <trans-unit id="bd2a87dbabce881cfa0ac191619b95b7f30ff0e2" translate="yes" xml:space="preserve">
          <source>is generated by &lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; from</source>
          <target state="translated">генерируется &lt;code&gt;ExtUtils::Miniperl&lt;/code&gt; из</target>
        </trans-unit>
        <trans-unit id="97061dcc49398ed7873f16a75d7351365d5bd949" translate="yes" xml:space="preserve">
          <source>is greater than 10, the digit for 11 will be 'a', and so on. If</source>
          <target state="translated">больше 10,цифра 11 будет &quot;а&quot;,и так далее.Если</target>
        </trans-unit>
        <trans-unit id="c6cff08bd14f0967385302adf53b41c3a3d439b0" translate="yes" xml:space="preserve">
          <source>is greater than 36, the digit for 37 will be 'A', and so on until 62. Values greater than 62 are not currently supported. The default is 36.</source>
          <target state="translated">больше 36,цифра для 37 будет &quot;А&quot;,и так далее до 62.Значения больше 62 в настоящее время не поддерживаются.По умолчанию 36.</target>
        </trans-unit>
        <trans-unit id="ffe49080789a404d2d720870ea3296af02ff6123" translate="yes" xml:space="preserve">
          <source>is greater than zero then it gives the number of arguments passed to &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, otherwise it will be 1 if for example &lt;code&gt;PerlIO_open&lt;/code&gt; was called. In simple cases SvPV_nolen(*args) is the pathname to open.</source>
          <target state="translated">больше нуля, то он дает количество аргументов, переданных для &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , иначе будет 1, если, например, был вызван &lt;code&gt;PerlIO_open&lt;/code&gt; . В простых случаях SvPV_nolen (* args) - это путь для открытия.</target>
        </trans-unit>
        <trans-unit id="b7ead90991363b6d52dd34fbbeb13fb170062d0a" translate="yes" xml:space="preserve">
          <source>is held as bytes (both these states are 'consistent'). Main reason for this routine is to allow Perl's test suite to check that operations have left strings in a consistent state. You most probably want to use utf8::is_utf8() instead.</source>
          <target state="translated">удерживается в байтах (оба эти состояния &quot;консистентны&quot;).Основная причина этой рутины в том,чтобы позволить тестовому комплекту Perl проверить,что операции оставили строки в последовательном состоянии.Скорее всего,вы захотите использовать вместо этого функцию utf8::is_utf8().</target>
        </trans-unit>
        <trans-unit id="f6524de4ede507c0f25877cf9853d0bde2075a2e" translate="yes" xml:space="preserve">
          <source>is hex, as in &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; . A leading &quot;0&quot; means that</source>
          <target state="translated">шестнадцатеричный, как в &lt;code&gt;E&amp;lt;0x201E&amp;gt;&lt;/code&gt; . Ведущий &amp;laquo;0&amp;raquo; означает, что</target>
        </trans-unit>
        <trans-unit id="ee2f8650f57b54260f06fc232faca4874614507a" translate="yes" xml:space="preserve">
          <source>is identical to</source>
          <target state="translated">идентичен</target>
        </trans-unit>
        <trans-unit id="22ee8461739b14ea02f3b9c0b9c9eb44d2a1409e" translate="yes" xml:space="preserve">
          <source>is implemented as a Perl module. The structure of the module can take one of two broadly similar formats. To distinguish between them, the first will be referred to as</source>
          <target state="translated">реализован в виде модуля Perl.Структура модуля может принимать один из двух широко схожих форматов.Для того чтобы отличить их,первый будет называться</target>
        </trans-unit>
        <trans-unit id="b176c796440a7e55c89af58d299f53bc936cfeff" translate="yes" xml:space="preserve">
          <source>is implemented using the Perl module &lt;a href=&quot;digest/sha&quot;&gt;Digest::SHA&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt;.</source>
          <target state="translated">реализуется с помощью модуля Perl &lt;a href=&quot;digest/sha&quot;&gt;Digest :: SHA&lt;/a&gt; или &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1e051efb59784127a6ed01a9c76c742681c671e" translate="yes" xml:space="preserve">
          <source>is implemented, but bugs remain in &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; with them, mostly fixed by 5.14, and essentially entirely by 5.18.</source>
          <target state="translated">реализована, но ошибки остаются в &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//i&lt;/a&gt;&lt;/code&gt; вместе с ними, в основном исправленные в версии 5.14 и практически полностью в версии 5.18.</target>
        </trans-unit>
        <trans-unit id="608c8bcda4c8d3f4fd99afdca20fc7d478aadc35" translate="yes" xml:space="preserve">
          <source>is implied if neither a template nor a directory are supplied.</source>
          <target state="translated">подразумевается,если ни шаблон,ни каталог не предоставлены.</target>
        </trans-unit>
        <trans-unit id="029ccc41ee21c1341d1578997e21239d4d69dd57" translate="yes" xml:space="preserve">
          <source>is in a consistent state regarding UTF-8. Will return true if it is well-formed UTF-8 and has the UTF-8 flag on &lt;b&gt;or&lt;/b&gt; if</source>
          <target state="translated">находится в согласованном состоянии относительно UTF-8. Вернет true, если это правильно сформированный UTF-8 и установлен флаг UTF-8, &lt;b&gt;или&lt;/b&gt; если</target>
        </trans-unit>
        <trans-unit id="6da1d29c95b983c26f31a22e5a9c05d88563966c" translate="yes" xml:space="preserve">
          <source>is in effect:</source>
          <target state="translated">в действии:</target>
        </trans-unit>
        <trans-unit id="fca20ec285ed27cbaefdb07ee844b5ac0358c904" translate="yes" xml:space="preserve">
          <source>is in fact</source>
          <target state="translated">на самом деле</target>
        </trans-unit>
        <trans-unit id="e384cbeffbac9cd924ef4dc73d622e1a5322584a" translate="yes" xml:space="preserve">
          <source>is in the customary packed binary format used for Perl strings.</source>
          <target state="translated">находится в обычном упакованном двоичном формате,используемом для строк Perl.</target>
        </trans-unit>
        <trans-unit id="cac7c1be39dca233019b8ffda50806e1b4a70009" translate="yes" xml:space="preserve">
          <source>is included. Other possible values include</source>
          <target state="translated">включено.Другие возможные значения включают</target>
        </trans-unit>
        <trans-unit id="5138f4117c88d0c0de8e325485d990c34725fde1" translate="yes" xml:space="preserve">
          <source>is intended to rhyme with</source>
          <target state="translated">предназначено для рифмования с</target>
        </trans-unit>
        <trans-unit id="18bc197f96cca45c02a3aaa837ac2696dd0f97ab" translate="yes" xml:space="preserve">
          <source>is interpolated in the usual way. Something like &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; has no &lt;code&gt;\E&lt;/code&gt; inside. Instead, it has &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\\&lt;/code&gt; , and &lt;code&gt;E&lt;/code&gt; , so the result is the same as for &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; . As a general rule, backslashes between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; may lead to counterintuitive results. So, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; is converted to &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt;, which is the same as &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (since TAB is not alphanumeric). Note also that:</source>
          <target state="translated">интерполируется обычным образом. Что-то вроде &lt;code&gt;&quot;\Q\\E&quot;&lt;/code&gt; не имеет внутри &lt;code&gt;\E&lt;/code&gt; Вместо этого в нем есть &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\\&lt;/code&gt; и &lt;code&gt;E&lt;/code&gt; , поэтому результат такой же, как для &lt;code&gt;&quot;\\\\E&quot;&lt;/code&gt; . Как правило, обратная косая черта между &lt;code&gt;\Q&lt;/code&gt; и &lt;code&gt;\E&lt;/code&gt; может привести к противоречивым результатам. Итак, &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; преобразуется в &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta(&quot;\t&quot;)&lt;/a&gt;&lt;/code&gt; , что аналогично &lt;code&gt;&quot;\\\t&quot;&lt;/code&gt; (поскольку TAB не является буквенно-цифровым). Также обратите внимание, что:</target>
        </trans-unit>
        <trans-unit id="77a8d3d60ed8be450c9ffcc1d60689ed94aa9704" translate="yes" xml:space="preserve">
          <source>is interpolated the same way as</source>
          <target state="translated">интерполированно так же,как</target>
        </trans-unit>
        <trans-unit id="6645e23e420237e998b6d2cedfb1dc6622827f9f" translate="yes" xml:space="preserve">
          <source>is interpreted as being in decimal, as in &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">интерпретируется как десятичное, как в &lt;code&gt;E&amp;lt;181&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22c75022beb252e282558c71e996793c6d980a55" translate="yes" xml:space="preserve">
          <source>is invalid as</source>
          <target state="translated">недействителен,так как</target>
        </trans-unit>
        <trans-unit id="e8ffd60ca890c4ec9f93077049a6c161e0914d97" translate="yes" xml:space="preserve">
          <source>is invoked to create right</source>
          <target state="translated">используется для создания права</target>
        </trans-unit>
        <trans-unit id="29af8a8fa79689fd5e71210eb1c3ba564cdffa85" translate="yes" xml:space="preserve">
          <source>is invoked, which in turn steps in</source>
          <target state="translated">вызывается,который,в свою очередь,шаг за шагом</target>
        </trans-unit>
        <trans-unit id="cfee822da79f87e0f9bf29a70b1f7e186da8af5d" translate="yes" xml:space="preserve">
          <source>is just a funny way to write</source>
          <target state="translated">просто забавный способ писать</target>
        </trans-unit>
        <trans-unit id="b044360009bd48fa7435baabf472b05cb3e2087e" translate="yes" xml:space="preserve">
          <source>is just an alias for</source>
          <target state="translated">всего лишь псевдоним для</target>
        </trans-unit>
        <trans-unit id="a1bbe39e9abe31cecf6dbbe9e345b36bee6a8e2e" translate="yes" xml:space="preserve">
          <source>is just one code point, then</source>
          <target state="translated">это всего лишь одна кодовая точка,тогда</target>
        </trans-unit>
        <trans-unit id="fb4747d98d1d42af6b094401a12cd8de28b86f5d" translate="yes" xml:space="preserve">
          <source>is kept open without a name while the output is redirected to a new file with the original</source>
          <target state="translated">остается открытым без имени,в то время как выходные данные перенаправляются в новый файл с оригиналом</target>
        </trans-unit>
        <trans-unit id="f2943b59aed5e708de53a3b73d4947169b635ec4" translate="yes" xml:space="preserve">
          <source>is largely like</source>
          <target state="translated">во многом похоже</target>
        </trans-unit>
        <trans-unit id="9188ab140ad2e7ca45c0eacb2137ae4084f8e251" translate="yes" xml:space="preserve">
          <source>is latitude (northward positive, southward negative) and</source>
          <target state="translated">это широта (север положительный,юг отрицательный)и</target>
        </trans-unit>
        <trans-unit id="9f6334181abd08a5e5386bd949a39504d56e205a" translate="yes" xml:space="preserve">
          <source>is like</source>
          <target state="translated">похожий</target>
        </trans-unit>
        <trans-unit id="48ed010598288313ecc15c5c568a57c8a8397db8" translate="yes" xml:space="preserve">
          <source>is like &lt;code&gt;&quot;s&quot;&lt;/code&gt; in that all the map array elements are scalars, but here they are restricted to all being integers, and some have to be adjusted (hence the name &lt;code&gt;&quot;a&quot;&lt;/code&gt; ) to get the correct result. For example, in:</source>
          <target state="translated">похож на &lt;code&gt;&quot;s&quot;&lt;/code&gt; в том, что все элементы массива карты являются скалярами, но здесь они ограничены, чтобы все были целыми числами, и некоторые из них должны быть скорректированы (отсюда и название &lt;code&gt;&quot;a&quot;&lt;/code&gt; ), чтобы получить правильный результат. Например, в:</target>
        </trans-unit>
        <trans-unit id="f732dd47aa6f4ff2876b84adc0d6e54cc3222968" translate="yes" xml:space="preserve">
          <source>is like doing this:</source>
          <target state="translated">это все равно,что делать это:</target>
        </trans-unit>
        <trans-unit id="59b5273750d4d23e41112610a3e421f40227d715" translate="yes" xml:space="preserve">
          <source>is linked into the pad, and its &lt;code&gt;CvOUTSIDE&lt;/code&gt; link to the outer scope is weakened to avoid a reference loop.</source>
          <target state="translated">связан с площадкой, и его ссылка &lt;code&gt;CvOUTSIDE&lt;/code&gt; на внешнюю область видимости ослаблена, чтобы избежать цикла ссылок.</target>
        </trans-unit>
        <trans-unit id="f78b503f16d85a9efd1beacafcdfdaf3f270807f" translate="yes" xml:space="preserve">
          <source>is located in</source>
          <target state="translated">находится в</target>
        </trans-unit>
        <trans-unit id="fa07b54f5a9fd2750d4f4d0986e9e9fdb812fef7" translate="yes" xml:space="preserve">
          <source>is longitude (eastward positive, westward negative).</source>
          <target state="translated">это долгота (на восток положительная,на запад отрицательная).</target>
        </trans-unit>
        <trans-unit id="8e42e7821439f1d14a05038b954f5c84e7ed25c3" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in script</source>
          <target state="translated">выглядит как буква в сценарии</target>
        </trans-unit>
        <trans-unit id="cb4ca3c72721f7c4253dd2277262b9ddc4ed46e6" translate="yes" xml:space="preserve">
          <source>is looked up as a letter in the given scripts (in the specified order). Customized aliases can override these, and are explained in &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES&lt;/a&gt;.</source>
          <target state="translated">ищется как буква в данных скриптах (в указанном порядке). Настроенные псевдонимы могут переопределять их, и объясняются в &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;ПОЛЬЗОВАТЕЛЬСКИХ псевдонимах&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65a9de9318bd902cd3babdefa5b0b92ad233e720" translate="yes" xml:space="preserve">
          <source>is made active via fork()/exec(), which may lead to some resources taken from the system (even if we do not count extra work needed for fork()ing).</source>
          <target state="translated">становится активной через fork()/exec(),что может привести к тому,что некоторые ресурсы будут взяты из системы (даже если мы не будем считать лишнюю работу,необходимую для fork()ing).</target>
        </trans-unit>
        <trans-unit id="239548bf60aa08580ca32f625ff4309e8f81b542" translate="yes" xml:space="preserve">
          <source>is made equivalent to</source>
          <target state="translated">приравнивается к</target>
        </trans-unit>
        <trans-unit id="70f7caafd49cafb298f6bed5bd8a09a8a7b6e1f0" translate="yes" xml:space="preserve">
          <source>is marked internally as encoded in UTF-8. Functionally the same as Encode::is_utf8().</source>
          <target state="translated">помечено внутри как закодированное в UTF-8.Функционально она такая же,как и Encode::is_utf8().</target>
        </trans-unit>
        <trans-unit id="cafeb6d4161aa2a759fa9cb04517c81a82e79352" translate="yes" xml:space="preserve">
          <source>is merely a shortcut for</source>
          <target state="translated">это всего лишь короткий путь для</target>
        </trans-unit>
        <trans-unit id="cc1707c0c187b01916ee3df94ec53bf20d5e805b" translate="yes" xml:space="preserve">
          <source>is mirrored in bidirectional text</source>
          <target state="translated">отражён двунаправленный текст</target>
        </trans-unit>
        <trans-unit id="2ed56127ce2edce69beb7e4554959d32a6773da2" translate="yes" xml:space="preserve">
          <source>is more appropriate. The process of converting the complex number into a string that can be displayed is known as</source>
          <target state="translated">более уместно.Процесс преобразования комплексного числа в строку,которая может быть отображена,известен как</target>
        </trans-unit>
        <trans-unit id="df959619050e76c8841c515d15b08c043ee77963" translate="yes" xml:space="preserve">
          <source>is more sophisticated, and uses the &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; module, thus using this test target supposes that perl mostly works. The main advantage for our purposes is that it prints a detailed summary of failed tests at the end. Also, unlike</source>
          <target state="translated">более сложен и использует модуль &lt;a href=&quot;test/harness&quot;&gt;Test :: Harness&lt;/a&gt; , поэтому использование этой тестовой цели предполагает, что perl в основном работает. Основное преимущество для наших целей заключается в том, что в конце он выводит подробный отчет о неудачных тестах. Кроме того, в отличие от</target>
        </trans-unit>
        <trans-unit id="0858c3a91f7c4ca07fe54237280827493469443b" translate="yes" xml:space="preserve">
          <source>is more than just a C header. It's also a Perl script that can check your source code. It will suggest hints and portability notes, and can even make suggestions on how to change your code. You can run it like any other Perl program:</source>
          <target state="translated">это больше,чем просто заголовок &quot;С&quot;.Это также Perl скрипт,который может проверить ваш исходный код.Он будет предлагать подсказки и примечания по переносимости,и даже может вносить предложения о том,как изменить ваш код.Вы можете запустить его,как любую другую программу на Perl:</target>
        </trans-unit>
        <trans-unit id="73b99ca814cd9f3692bee8c058c4c6db3425b4f7" translate="yes" xml:space="preserve">
          <source>is much more memory-efficient than either</source>
          <target state="translated">гораздо более эффективен с точки зрения памяти,чем любой другой</target>
        </trans-unit>
        <trans-unit id="f364fbd6a7a0be0bd077f092be562b8bbd3797f6" translate="yes" xml:space="preserve">
          <source>is needed to get through the test suite.</source>
          <target state="translated">необходимо,чтобы пройти через тестовый набор.</target>
        </trans-unit>
        <trans-unit id="6a14b970b88d3b4ba0134624be5559b774fcc9e5" translate="yes" xml:space="preserve">
          <source>is needed.</source>
          <target state="translated">...нужен.</target>
        </trans-unit>
        <trans-unit id="9d94e3f31359c70b6973e6ab915dd0761fd3dfe4" translate="yes" xml:space="preserve">
          <source>is never checked (so if it does not exists when its content is needed, the user of %hash may be confused).</source>
          <target state="translated">никогда не проверяется (поэтому,если он не существует,когда его содержимое необходимо,пользователь %hash может запутаться).</target>
        </trans-unit>
        <trans-unit id="d1c931dd86f631640926b9290e424da1679547cd" translate="yes" xml:space="preserve">
          <source>is non-&lt;code&gt;NULL&lt;/code&gt; , it will be set to a pointer to the frame for the sub call itself.</source>
          <target state="translated">не &lt;code&gt;NULL&lt;/code&gt; , он будет установлен как указатель на фрейм для самого подвызова.</target>
        </trans-unit>
        <trans-unit id="5e581b526692a62a2e9311d15e92a68ee14d4cf1" translate="yes" xml:space="preserve">
          <source>is non-null, it supplies the name of a label to attach to the state op; this function takes ownership of the memory pointed at by</source>
          <target state="translated">не является исчерпывающим,он поставляет название метки для прикрепления к состоянию op;эта функция получает право собственности на память,на которую указывает</target>
        </trans-unit>
        <trans-unit id="10e7f3d3e39943812d42aa325a0624806d73fc1d" translate="yes" xml:space="preserve">
          <source>is non-null, it's a lexical reference to a package variable, and this identifies the package. The following flags can be OR'ed together:</source>
          <target state="translated">не является исчерпывающим,это лексическая ссылка на переменную пакета,и это идентифицирует пакет.Следующие флаги могут быть OR'ed вместе:</target>
        </trans-unit>
        <trans-unit id="6de6591eb61d37cb2280e26d54c5fd16117e3fea" translate="yes" xml:space="preserve">
          <source>is non-null, the name is for a typed lexical, and this identifies the type. If</source>
          <target state="translated">не является нулловым,имя предназначено для типизированной лексики,и это идентифицирует тип.Если</target>
        </trans-unit>
        <trans-unit id="57de99dddfaf807ff4ccc5d2881dd47c080db528" translate="yes" xml:space="preserve">
          <source>is non-zero then</source>
          <target state="translated">ненулевой тогда</target>
        </trans-unit>
        <trans-unit id="e82fdbe87df063bbd6188f48b5ff47c8f53b5e5b" translate="yes" xml:space="preserve">
          <source>is not</source>
          <target state="translated">не</target>
        </trans-unit>
        <trans-unit id="2442a9efabb42df6d9155ee7e736901c656341f1" translate="yes" xml:space="preserve">
          <source>is not &lt;code&gt;NULL&lt;/code&gt; then this is a &lt;code&gt;PerlIO_reopen&lt;/code&gt; . Perl itself does not use this (yet?) and semantics are a little vague.</source>
          <target state="translated">не &lt;code&gt;NULL&lt;/code&gt; , то это &lt;code&gt;PerlIO_reopen&lt;/code&gt; . Сам Perl не использует это (пока?), И семантика немного расплывчата.</target>
        </trans-unit>
        <trans-unit id="5dbf0d4a2783568bc0ec6653623e5d748ba64d73" translate="yes" xml:space="preserve">
          <source>is not NULL. Since we don't have to check the NULLness, it's faster and smaller.</source>
          <target state="translated">не НУЛЛ.Так как нам не нужно проверять NULL,она быстрее и меньше.</target>
        </trans-unit>
        <trans-unit id="09afe42e6e5a8f0e386f1909d4abd2a189d4f310" translate="yes" xml:space="preserve">
          <source>is not NULL. The macro doesn't need to return a meaningful value, or check for NULLness, so it's smaller and faster.</source>
          <target state="translated">не НУЛЛ.Макросу не нужно возвращать значимое значение или проверять на NULL,поэтому он меньше и быстрее.</target>
        </trans-unit>
        <trans-unit id="1ffb843df2c6536477027470d90d6811acce8f6a" translate="yes" xml:space="preserve">
          <source>is not a directory that you can chdir to, possibly because it doesn't exist.</source>
          <target state="translated">это не каталог,в который вы можете обратиться,возможно,потому что его не существует.</target>
        </trans-unit>
        <trans-unit id="cd05864506055467d4c1543f9ab79897eee73f31" translate="yes" xml:space="preserve">
          <source>is not a full pathname found in the values of %INC, it is considered a regex.</source>
          <target state="translated">не является полным именем,найденным в значениях %INC,он считается регексом.</target>
        </trans-unit>
        <trans-unit id="ca37ad081732791ac7c3c488d1b688611146a3d5" translate="yes" xml:space="preserve">
          <source>is not a multiple of 8, use the</source>
          <target state="translated">не кратное 8,используйте</target>
        </trans-unit>
        <trans-unit id="90cfc06661f28638ad5685d595f94c84092a1299" translate="yes" xml:space="preserve">
          <source>is not a reference, it is &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;-ed in order to allow &lt;code&gt;$1&lt;/code&gt; etc. to be substituted. The example is one way to alias names as used in X11 fonts to the MIME names for the iso-8859-* family. Note the double quotes inside the single quotes.</source>
          <target state="translated">не является ссылкой, это &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; -ed для того , чтобы позволить &lt;code&gt;$1&lt;/code&gt; и т.д. , чтобы быть заменен. Пример - это один из способов присвоения псевдонимов, используемых в шрифтах X11, именам MIME для семейства iso-8859- *. Обратите внимание на двойные кавычки внутри одинарных.</target>
        </trans-unit>
        <trans-unit id="cc27d44385271fc935f660f9829b5e1b57bf2fba" translate="yes" xml:space="preserve">
          <source>is not a string.</source>
          <target state="translated">это не струна.</target>
        </trans-unit>
        <trans-unit id="fe97c6a25e6e10b05fea34af623f7790fa5fba36" translate="yes" xml:space="preserve">
          <source>is not a string. Do not treat the return value as indicative of success or failure, because that isn't what it means: it is only the previous setting.</source>
          <target state="translated">это не струна.Не относитесь к возвращаемому значению как к признаку успеха или неудачи,потому что это не то,что означает:это только предыдущая установка.</target>
        </trans-unit>
        <trans-unit id="da2c1159c594f4eb414e53a0a7777f80e553cdef" translate="yes" xml:space="preserve">
          <source>is not allowed, but</source>
          <target state="translated">не допускается,но</target>
        </trans-unit>
        <trans-unit id="606701e8f5f91b1f859064528c6c90e0850405fe" translate="yes" xml:space="preserve">
          <source>is not already a list of the right type, it will be upgraded into one. If either</source>
          <target state="translated">это еще не список нужного типа,он будет обновлен в один.Если любой из них</target>
        </trans-unit>
        <trans-unit id="8d605d2cddd686b63627dcedefd81881d4aede9c" translate="yes" xml:space="preserve">
          <source>is not available.</source>
          <target state="translated">не доступен.</target>
        </trans-unit>
        <trans-unit id="0e07acfe6e445415bc80f4539e83f2e5479627c6" translate="yes" xml:space="preserve">
          <source>is not defined, then Perl defaults to consulting first the logical name tables specified by</source>
          <target state="translated">не определено,то по умолчанию Perl,сначала обращается к таблицам логических имен,указанным в параметрах</target>
        </trans-unit>
        <trans-unit id="3b35dc3fb767643d25e161d97495375b6c8925d3" translate="yes" xml:space="preserve">
          <source>is not empty, and it is the same as</source>
          <target state="translated">не пустой,и это то же самое.</target>
        </trans-unit>
        <trans-unit id="133cd8c37eb7f1bc84f3898facc206421e336545" translate="yes" xml:space="preserve">
          <source>is not found in any of $lh's %Lexicon hashes. What happens if a key is not found, is discussed in a later section, &quot;Controlling Lookup Failure&quot;.</source>
          <target state="translated">не найден ни в одной из лексиконных хешей за $lh.Что произойдет,если ключ не будет найден,обсуждается в следующем разделе &quot;Управление сбоем при поиске&quot;.</target>
        </trans-unit>
        <trans-unit id="20608bdf427071b3f2b3bc63e3ca5ad5dba32b48" translate="yes" xml:space="preserve">
          <source>is not found, then Perl looks for an executable</source>
          <target state="translated">не найден,тогда Перл ищет исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="33010be083ed65d0281dbcb74bf9325a0f99e09d" translate="yes" xml:space="preserve">
          <source>is not given, skip all constants that are defined in a C enumeration. Otherwise skip only those constants that are defined in an enum whose name matches</source>
          <target state="translated">не дано,пропустите все константы,которые определены в C перечислении.Иначе пропустите только те константы,которые определены в перечислении,имя которых совпадает</target>
        </trans-unit>
        <trans-unit id="3339d9443dad98ccb99bf9de00b6ef263750537d" translate="yes" xml:space="preserve">
          <source>is not in PERL5LIB.</source>
          <target state="translated">не в PERL5LIB.</target>
        </trans-unit>
        <trans-unit id="9ee2f3e24f21d916d1b9f7d8d204a62832704191" translate="yes" xml:space="preserve">
          <source>is not necessary,</source>
          <target state="translated">не нужно,</target>
        </trans-unit>
        <trans-unit id="3f84e0c82fe1616e060e2332dff93b4abd3bb7e3" translate="yes" xml:space="preserve">
          <source>is not ok, as the regex engine will end up trying to compile the pattern &lt;code&gt;\&lt;/code&gt; , which it will consider a syntax error.</source>
          <target state="translated">это не нормально, так как механизм регулярных выражений в конечном итоге попытается скомпилировать шаблон &lt;code&gt;\&lt;/code&gt; , что будет сочтено синтаксической ошибкой.</target>
        </trans-unit>
        <trans-unit id="1de141eaa0f30aab49d63c7c0d6cb5d7b40c44a8" translate="yes" xml:space="preserve">
          <source>is not passed if the layer is at the bottom of the stack, for this reason and to maintain some level of &quot;compatibility&quot; with TIEHANDLE classes it is passed last.</source>
          <target state="translated">не передается,если слой находится внизу стека,по этой причине и для поддержания некоторого уровня &quot;совместимости&quot; с классами TIEHANDLE передается последним.</target>
        </trans-unit>
        <trans-unit id="14ca5e3fc9da5c9523747e734197510c25796d8c" translate="yes" xml:space="preserve">
          <source>is not portable. Leave out the last comma.</source>
          <target state="translated">не портативный.Оставьте последнюю запятую.</target>
        </trans-unit>
        <trans-unit id="f5ac0afcf1f3987905381d9349d990f0a6872ecc" translate="yes" xml:space="preserve">
          <source>is not required and not implemented.</source>
          <target state="translated">не требуется и не реализуется.</target>
        </trans-unit>
        <trans-unit id="a5cf5f3c675f9c2d68cf66e1262d7c525fab832d" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">не возвращается явно из &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="461edf58bab13d0e289e3fd343d9a0a8b3513001" translate="yes" xml:space="preserve">
          <source>is not returned explicitly from &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">не возвращается явно из &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d97eb902a0ef031b420e6b9b05fccbf862f0b26" translate="yes" xml:space="preserve">
          <source>is not specified: &lt;b&gt;xsubpp&lt;/b&gt; can see that it needs to generate a function call section, and will autogenerate the OUTPUT section too. Thus one can shortcut the XSUB to become:</source>
          <target state="translated">не указан: &lt;b&gt;xsubpp&lt;/b&gt; может видеть, что ему нужно сгенерировать раздел вызова функции, и также автоматически сгенерирует раздел OUTPUT. Таким образом, можно сократить XSUB, чтобы стать:</target>
        </trans-unit>
        <trans-unit id="46d1ac57316dccf7b303f8434af4c18ee03b0a0b" translate="yes" xml:space="preserve">
          <source>is not supported).</source>
          <target state="translated">не поддерживается).</target>
        </trans-unit>
        <trans-unit id="660e55295ec134f5c48bc724bc723675d1a1b8fd" translate="yes" xml:space="preserve">
          <source>is not the same as</source>
          <target state="translated">отличается от</target>
        </trans-unit>
        <trans-unit id="c20017ff75bdfb50ee3a50480bd863b1895d08c4" translate="yes" xml:space="preserve">
          <source>is not transparent. The</source>
          <target state="translated">не прозрачен.</target>
        </trans-unit>
        <trans-unit id="a2f7dc60b1a7a427469f140199570b1bd8f899c4" translate="yes" xml:space="preserve">
          <source>is not yet implemented (dummy function). (Perl has a workaround.)</source>
          <target state="translated">еще не реализована (фиктивная функция).(У Перла есть обходной путь.)</target>
        </trans-unit>
        <trans-unit id="8e0d75ab66ac6c358071d7ce5aa3ae1d338105d6" translate="yes" xml:space="preserve">
          <source>is nothing to worry about at all.</source>
          <target state="translated">совсем не о чем беспокоиться.</target>
        </trans-unit>
        <trans-unit id="7206590a99801f0070757ea643074d99c5330488" translate="yes" xml:space="preserve">
          <source>is now different from</source>
          <target state="translated">теперь отличается от</target>
        </trans-unit>
        <trans-unit id="296c2ce8ed25f67f0112e54c6f7348b8ee269520" translate="yes" xml:space="preserve">
          <source>is now misinterpreted as</source>
          <target state="translated">теперь неверно истолковывается как</target>
        </trans-unit>
        <trans-unit id="784e257d270f346aebf3530a8118df2e3e970f3c" translate="yes" xml:space="preserve">
          <source>is null, the other is returned unchanged.</source>
          <target state="translated">является нулевым,другой возвращается без изменений.</target>
        </trans-unit>
        <trans-unit id="1cd25b0094b3720a6cc3ba23740121d376548889" translate="yes" xml:space="preserve">
          <source>is null, the state op is returned. Otherwise the state op is combined with</source>
          <target state="translated">ноль,операция в штате возвращается.В противном случае операция состояния комбинируется с</target>
        </trans-unit>
        <trans-unit id="bfd34bbffb3bec2ae854bed4fe93b5b4df09d7c5" translate="yes" xml:space="preserve">
          <source>is octal, as in &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; . Otherwise</source>
          <target state="translated">является восьмеричным, как в &lt;code&gt;E&amp;lt;075&amp;gt;&lt;/code&gt; . В противном случае</target>
        </trans-unit>
        <trans-unit id="e59f8572639c6d7abe84f59ed23f115265c34830" translate="yes" xml:space="preserve">
          <source>is officially available in gcc 3.0 and later. You can build a profiled version of</source>
          <target state="translated">официально доступен в gcc 3.0 и более поздних версиях.Вы можете построить профильную версию</target>
        </trans-unit>
        <trans-unit id="bb3335ba98001fe8c8858bb517435edad14df2ff" translate="yes" xml:space="preserve">
          <source>is often the quickest way to compute SHA message digests. The user simply feeds data to the script through files or standard input, and then collects the results from standard output.</source>
          <target state="translated">часто является самым быстрым способом вычисления дайджестов SHA-сообщений.Пользователь просто передает данные в скрипт через файлы или стандартный вход,а затем собирает результаты со стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="7c869452ca51dc4f4b90e7e682e32efa15fa5d08" translate="yes" xml:space="preserve">
          <source>is often used interchangeably with it.</source>
          <target state="translated">часто используется как взаимозаменяемый.</target>
        </trans-unit>
        <trans-unit id="5031d72b525717047dc6fd15f90430cc40172acd" translate="yes" xml:space="preserve">
          <source>is omitted,</source>
          <target state="translated">пропущено,</target>
        </trans-unit>
        <trans-unit id="59383e02842c6ecb450610847b00c5496ed1ae05" translate="yes" xml:space="preserve">
          <source>is omitted, list them all.</source>
          <target state="translated">пропущено,перечислите их всех.</target>
        </trans-unit>
        <trans-unit id="bed8ec63611bd49c0e67878865bfd9f59745945e" translate="yes" xml:space="preserve">
          <source>is omitted, set an action on the line about to be executed. The sequence of steps taken by the debugger is</source>
          <target state="translated">опускается,устанавливается действие на строке,которая вот-вот будет выполнена.Последовательность шагов,выполняемых отладчиком,составляет</target>
        </trans-unit>
        <trans-unit id="1454936324f5b838ad8702f3a4e912fdb73181b3" translate="yes" xml:space="preserve">
          <source>is omitted, sets &lt;code&gt;$\&lt;/code&gt; to the current value of &lt;code&gt;$/&lt;/code&gt; . For instance, to trim lines to 80 columns:</source>
          <target state="translated">опускается, устанавливает &lt;code&gt;$\&lt;/code&gt; на текущее значение &lt;code&gt;$/&lt;/code&gt; . Например, чтобы обрезать строки до 80 столбцов:</target>
        </trans-unit>
        <trans-unit id="4bb3e6d01d8abb5873707a404b01ed088d627c52" translate="yes" xml:space="preserve">
          <source>is omitted. If that viewer is &lt;b&gt;man&lt;/b&gt;, the current &lt;code&gt;Config&lt;/code&gt; information is used to invoke &lt;b&gt;man&lt;/b&gt; using the proper MANPATH or &lt;b&gt;-M&lt;/b&gt;</source>
          <target state="translated">опущено. Если этот зритель - &lt;b&gt;man&lt;/b&gt; , текущая информация &lt;code&gt;Config&lt;/code&gt; используется для вызова &lt;b&gt;man&lt;/b&gt; с использованием правильного MANPATH или &lt;b&gt;-M.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="808a9a0b7d1e742f272682180efba6d96e49b61e" translate="yes" xml:space="preserve">
          <source>is one of &lt;code&gt;S_IRUSR&lt;/code&gt; , &lt;code&gt;S_IWUSR&lt;/code&gt; or &lt;code&gt;S_IXUSR&lt;/code&gt; from the &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; module, and</source>
          <target state="translated">является одним из &lt;code&gt;S_IRUSR&lt;/code&gt; , &lt;code&gt;S_IWUSR&lt;/code&gt; или &lt;code&gt;S_IXUSR&lt;/code&gt; из модуля &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; , и</target>
        </trans-unit>
        <trans-unit id="774717fd7c9c7ce3270b72d058c209e6053fc8a0" translate="yes" xml:space="preserve">
          <source>is one of the 10 exceptional cases (or things like them) listed below, it is used directly as a boolean.</source>
          <target state="translated">является одним из 10 исключительных случаев (или подобных им),перечисленных ниже,он используется непосредственно в качестве булева.</target>
        </trans-unit>
        <trans-unit id="c53bf86436bbbd29af464847d3f11c3b0b08cbf8" translate="yes" xml:space="preserve">
          <source>is one of those defined in the Unicode standard. For Unicode 5.1, they are defined in Section 3.13 &lt;code&gt;Default Case Operations&lt;/code&gt; available at &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt;. These are for context-sensitive casing.</source>
          <target state="translated">является одним из тех, что определены в стандарте Unicode. Для Unicode 5.1 они определены в разделе 3.13 &amp;laquo; &lt;code&gt;Default Case Operations&lt;/code&gt; регистром по умолчанию&amp;raquo;, доступном по адресу &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.1.0/&quot;&gt;http://www.unicode.org/versions/Unicode5.1.0/&lt;/a&gt; . Это для контекстно-зависимого корпуса.</target>
        </trans-unit>
        <trans-unit id="840b280f15a6b38ff8c9a2baa67e8c9188a87b38" translate="yes" xml:space="preserve">
          <source>is open, or use &quot;r+&quot; to indicate a read/write stream.</source>
          <target state="translated">открыт,или используйте &quot;r+&quot; для обозначения потока чтения/записи.</target>
        </trans-unit>
        <trans-unit id="c683506eb9e31819d71640bdc2f2478d3f6ce65d" translate="yes" xml:space="preserve">
          <source>is opened for writing.</source>
          <target state="translated">открыт для написания.</target>
        </trans-unit>
        <trans-unit id="79749dba2b390bb7475fce2507f0f4eb5987e332" translate="yes" xml:space="preserve">
          <source>is optional and defaults to rest of the array.</source>
          <target state="translated">является необязательным и по умолчанию относится к остальной части массива.</target>
        </trans-unit>
        <trans-unit id="915a141436744a90f3e02d0dd1d609a72b2c593a" translate="yes" xml:space="preserve">
          <source>is optional and defaults to zero, negative values count back from the end of the array.</source>
          <target state="translated">является необязательным и по умолчанию равен нулю,отрицательные значения отсчитываются от конца массива.</target>
        </trans-unit>
        <trans-unit id="df5063ae13199d816cf6966e77f57c23f1e15e7b" translate="yes" xml:space="preserve">
          <source>is optional, make sure that this switch is followed by at least one other switch if you omit</source>
          <target state="translated">является необязательным,убедитесь,что за этим переключателем следует,по крайней мере,один другой переключатель,если вы опустили</target>
        </trans-unit>
        <trans-unit id="6dd01b70fcde3901a9b8cd6f99e52b559931ae66" translate="yes" xml:space="preserve">
          <source>is optional.</source>
          <target state="translated">необязательно.</target>
        </trans-unit>
        <trans-unit id="d3403c1182056f32036e1b0b051b43fe6e7e8805" translate="yes" xml:space="preserve">
          <source>is optional. If omitted, the encoding specified in the environment variable &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODING &lt;/a&gt; is used. If this isn't set, or the resolved-to encoding is not known to &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt;, the error &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; will be thrown.</source>
          <target state="translated">не является обязательным. Если не указано, используется кодировка, указанная в переменной среды &lt;a href=&quot;perlrun#PERL_ENCODING&quot;&gt;PERL_ENCODING&lt;/a&gt; . Если это не установлено или разрешенная кодировка неизвестна для &lt;code&gt;&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;&lt;/code&gt; , будет &lt;code&gt;Unknown encoding '&lt;i&gt;ENCNAME&lt;/i&gt;'&lt;/code&gt; ошибка Неизвестная кодировка &amp;laquo; &lt;i&gt;ENCNAME&lt;/i&gt; &amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="460daaa5dcc2cb35dc81c46bff6ccd69c45e1b70" translate="yes" xml:space="preserve">
          <source>is passed to &lt;code&gt;SvPV_flags&lt;/code&gt; , and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="translated">передается в &lt;code&gt;SvPV_flags&lt;/code&gt; и обычно должен быть &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; для обработки магии.</target>
        </trans-unit>
        <trans-unit id="dd20141170d229f9cc0136383909cd4f633a749b" translate="yes" xml:space="preserve">
          <source>is passed to the RE engine for compilation.</source>
          <target state="translated">передается двигателю RE для компиляции.</target>
        </trans-unit>
        <trans-unit id="a9eb96dfee227401a57fda9e8cbf3aa10f225974" translate="yes" xml:space="preserve">
          <source>is platform specific and may not be available for a specific port of Perl.</source>
          <target state="translated">является специфическим для платформы и может быть недоступен для определенного порта Perl.</target>
        </trans-unit>
        <trans-unit id="25efb0ba5cb2478bde4a9a44864c9da4f454d8ed" translate="yes" xml:space="preserve">
          <source>is possible</source>
          <target state="translated">возможно</target>
        </trans-unit>
        <trans-unit id="523f09771ac3cf4731742b1c80be3d254a1ba53f" translate="yes" xml:space="preserve">
          <source>is preceded by a plus or minus sign then it is assumed to be relative, with negative numbers indicating preceding capture groups and positive ones following. Thus &lt;code&gt;(?-1)&lt;/code&gt; refers to the most recently declared group, and &lt;code&gt;(?+1)&lt;/code&gt; indicates the next group to be declared. Note that the counting for relative recursion differs from that of relative backreferences, in that with recursion unclosed groups &lt;b&gt;are&lt;/b&gt; included.</source>
          <target state="translated">предшествует знак плюс или минус, тогда он считается относительным, с отрицательными числами, указывающими предыдущие группы захвата, и положительными последующими. Таким образом &lt;code&gt;(?-1)&lt;/code&gt; относится к последней объявленной группе, а &lt;code&gt;(?+1)&lt;/code&gt; указывает на следующую группу, которая будет объявлена. Обратите внимание , что подсчет для относительных рекурсии отличается от относительных обратных ссылок, в том , что с помощью рекурсии незамкнутых групп &lt;b&gt;будут&lt;/b&gt; включены.</target>
        </trans-unit>
        <trans-unit id="e7ca6ab06ff93674a9f398734b75e0712f956c08" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles.</source>
          <target state="translated">предпочтительнее,чем системный мальчик.В противном случае значение будет нулевым.Эта переменная предназначена для генерации Makefiles.</target>
        </trans-unit>
        <trans-unit id="bd9425232ec1477789dd62e49cd5398771156271" translate="yes" xml:space="preserve">
          <source>is preferred over the system malloc. Otherwise the value is null. This variable is intended for generating Makefiles. See mallocsrc.</source>
          <target state="translated">предпочтительнее,чем системный мальчик.В противном случае значение будет нулевым.Эта переменная предназначена для генерации Makefiles.См.mallocsrc.</target>
        </trans-unit>
        <trans-unit id="f67f67cd9d10cfa55835748252e70c39d94e9642" translate="yes" xml:space="preserve">
          <source>is present but is not a positive number matching &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">присутствует, но не является положительным числом, совпадающим с &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A(\d*\.)?\d+\z/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd6cfac1ce57b9138644859e222534e07b64b3f7" translate="yes" xml:space="preserve">
          <source>is present in EMX, but is not functional, it is emulated by perl. To disable the emulations, set environment variable &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; .</source>
          <target state="translated">присутствует в EMX, но не работает, его эмулирует perl. Чтобы отключить эмуляцию, установите переменную среды &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0eb8a82dec3aea4891c7d0fdc7c4040cbf80deac" translate="yes" xml:space="preserve">
          <source>is present. On Unix, this means that &lt;code&gt;$no_file&lt;/code&gt; true makes this return ( '', $path, '' ).</source>
          <target state="translated">настоящее. В Unix это означает, что &lt;code&gt;$no_file&lt;/code&gt; true возвращает значение ('', $ path, '').</target>
        </trans-unit>
        <trans-unit id="fae39eb0e249041dca8ecd4c4e5c73741b3158c8" translate="yes" xml:space="preserve">
          <source>is printed with proper indentation.</source>
          <target state="translated">напечатан с соответствующим отступом.</target>
        </trans-unit>
        <trans-unit id="f9b801d1d0e729e303069ae25d8e485d81ece8ba" translate="yes" xml:space="preserve">
          <source>is probably overkill for this. Something as simple as a &lt;code&gt;#define&lt;/code&gt; will do too:</source>
          <target state="translated">для этого, наверное, перебор. Подойдет и такая простая &lt;code&gt;#define&lt;/code&gt; как #define :</target>
        </trans-unit>
        <trans-unit id="c75e0ceb23f1e1bd5d1ae898ae5b3a046e750c35" translate="yes" xml:space="preserve">
          <source>is processed before processing &lt;code&gt;PERLDB_OPTS&lt;/code&gt; . If</source>
          <target state="translated">обрабатывается перед обработкой &lt;code&gt;PERLDB_OPTS&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="dd2e5ec393361241bdf00bf003cfd5d912213a01" translate="yes" xml:space="preserve">
          <source>is replicated. This latter is useful for counting characters in a class or for squashing character sequences in a class.</source>
          <target state="translated">реплицируется.Последнее полезно для подсчета символов в классе или для скрещивания последовательностей символов в классе.</target>
        </trans-unit>
        <trans-unit id="5127b5091f9438f482f3b3e9a135487ed542c34c" translate="yes" xml:space="preserve">
          <source>is reported by mkmanifest() if $Verbose is set and a file is added to MANIFEST. $Verbose is set to 1 by default.</source>
          <target state="translated">Сообщается mkmanifest(),если установлен $Verbose и файл добавлен в MANIFEST.$Verbose по умолчанию установлен в 1.</target>
        </trans-unit>
        <trans-unit id="bb20d2b460123fa620831fa74f056496b2769aa8" translate="yes" xml:space="preserve">
          <source>is reported if &lt;code&gt;MANIFEST&lt;/code&gt; could not be opened.</source>
          <target state="translated">сообщается, если не удалось открыть &lt;code&gt;MANIFEST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="328906540cfc4914dc5ef9e9058dee50029d2b82" translate="yes" xml:space="preserve">
          <source>is reported if a file is found which is not in &lt;code&gt;MANIFEST&lt;/code&gt; .</source>
          <target state="translated">сообщается, если найден файл, которого нет в &lt;code&gt;MANIFEST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="552d792cd22a56b9bb40ff5d893f66da4e73233e" translate="yes" xml:space="preserve">
          <source>is reported if a file is skipped due to an entry in &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; .</source>
          <target state="translated">сообщается, если файл пропущен из-за записи в &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeed03f4804268d15748142d4e8831e16972eca4" translate="yes" xml:space="preserve">
          <source>is reported if a file mentioned in a &lt;code&gt;MANIFEST&lt;/code&gt; file does not exist.</source>
          <target state="translated">сообщается, если файл, упомянутый в файле &lt;code&gt;MANIFEST&lt;/code&gt; , не существует.</target>
        </trans-unit>
        <trans-unit id="62f90f7410ef6025437546070986df3097b81356" translate="yes" xml:space="preserve">
          <source>is requested, Perl will not look for</source>
          <target state="translated">запрашивается,Перл не будет искать</target>
        </trans-unit>
        <trans-unit id="732d7871b8b24cfa3bee53313dd1156e83c03669" translate="yes" xml:space="preserve">
          <source>is required if you want to start your program without a VIO window present, but not &lt;code&gt;detach&lt;/code&gt; ed (run &lt;code&gt;help detach&lt;/code&gt; for more info). Very useful for extensions which use PM, like &lt;code&gt;Perl/Tk&lt;/code&gt; or &lt;code&gt;OpenGL&lt;/code&gt; .</source>
          <target state="translated">требуется, если вы хотите запустить свою программу без присутствующего окна VIO, но не &lt;code&gt;detach&lt;/code&gt; ( для получения дополнительной информации запустите &lt;code&gt;help detach&lt;/code&gt; ). Очень полезно для расширений, использующих PM, таких как &lt;code&gt;Perl/Tk&lt;/code&gt; или &lt;code&gt;OpenGL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e6d5c50073dedc878c0bb174986728a65c26611" translate="yes" xml:space="preserve">
          <source>is reserved and must be zero. If it is not in the current pad but appears in the pad of any lexically enclosing scope, then a pseudo-entry for it is added in the current pad. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if no such lexical is in scope.</source>
          <target state="translated">зарезервировано и должно быть равно нулю. Если он не находится в текущем блоке, но появляется в блоке любой лексически охватывающей области видимости, тогда в текущем блоке добавляется псевдозапись для него. Возвращает смещение в текущем &lt;code&gt;NOT_IN_PAD&lt;/code&gt; или NOT_IN_PAD, если такого лексического слова нет в области видимости.</target>
        </trans-unit>
        <trans-unit id="dab1f8b59686974bbcd2707bc651d6707dac406f" translate="yes" xml:space="preserve">
          <source>is returned.</source>
          <target state="translated">возвращается.</target>
        </trans-unit>
        <trans-unit id="3b418f45ad77bc3826b32d08799dfded45d89432" translate="yes" xml:space="preserve">
          <source>is roughly equivalent to:</source>
          <target state="translated">примерно эквивалентно:</target>
        </trans-unit>
        <trans-unit id="b84a5263098f0e0c514dc8fe7d67295e56c987dc" translate="yes" xml:space="preserve">
          <source>is run on source code files, like this</source>
          <target state="translated">запускается на файлах с исходным кодом,вот так</target>
        </trans-unit>
        <trans-unit id="505ded7fa9f0c714268c66ac7bb3b81302192c94" translate="yes" xml:space="preserve">
          <source>is semantically ambiguous, in a way that makes formatting decisions a bit difficult. On the one hand, it could be mention of an item &quot;Neque&quot;, mention of another item &quot;Porro&quot;, and mention of another item &quot;Quisquam Est&quot;, with just the last one requiring the explanatory paragraph &quot;Qui dolorem ipsum quia dolor...&quot;; and then an item &quot;Ut Enim&quot;. In that case, you'd want to format it like so:</source>
          <target state="translated">семантически неоднозначна,что немного затрудняет форматирование решений.С одной стороны,это может быть упоминание пункта &quot;Неке&quot;,упоминание другого пункта &quot;Порро&quot; и упоминание другого пункта &quot;Кискам Эст&quot;,причем только последний пункт требует пояснительной формулировки &quot;Qui dolorem ipsum quia dolor...&quot;,а затем пункт &quot;Ut Enim&quot;.В таком случае,вы захотите отформатировать его так:</target>
        </trans-unit>
        <trans-unit id="7722d64cd0eafe5303c971058e1fcb33e1d6e14c" translate="yes" xml:space="preserve">
          <source>is semantically equivalent to the list:</source>
          <target state="translated">семантически эквивалентен списку:</target>
        </trans-unit>
        <trans-unit id="2126556a279c8048a27fc92ce2d017bedadfc33a" translate="yes" xml:space="preserve">
          <source>is set accordingly.</source>
          <target state="translated">установлен соответственно.</target>
        </trans-unit>
        <trans-unit id="9fa2db030f6de6d0d8d463059f009a0bd838f324" translate="yes" xml:space="preserve">
          <source>is set explicitly. Additionally, C</source>
          <target state="translated">установлено явно.Дополнительно,C</target>
        </trans-unit>
        <trans-unit id="f33cd6497df379b7aa55e16988255762f6cc5079" translate="yes" xml:space="preserve">
          <source>is set to 2 if it isn't set already (see &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt;).</source>
          <target state="translated">устанавливается в 2, если он еще не установлен (см. &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL в perlhacktips&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b4d53f643e8f5289626164f0873fffe60309f8d" translate="yes" xml:space="preserve">
          <source>is set to &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; , encoding and decoding immediately return the portion of the data that has been processed so far when an error occurs. The data argument is overwritten with everything after that point; that is, the unprocessed portion of the data. This is handy when you have to call &lt;code&gt;decode&lt;/code&gt; repeatedly in the case where your source data may contain partial multi-byte character sequences, (that is, you are reading with a fixed-width buffer). Here's some sample code to do exactly that:</source>
          <target state="translated">установлен на &lt;code&gt;Encode::FB_QUIET&lt;/code&gt; , кодирование и декодирование немедленно возвращают часть данных, которые были обработаны до сих пор, когда возникает ошибка. Аргумент данных перезаписывается всем, что находится после этой точки; то есть необработанная часть данных. Это удобно, когда вам нужно повторно вызывать &lt;code&gt;decode&lt;/code&gt; в случае, когда ваши исходные данные могут содержать частичные многобайтовые последовательности символов (то есть вы читаете с буфером фиксированной ширины). Вот пример кода, чтобы сделать именно это:</target>
        </trans-unit>
        <trans-unit id="fbfb9653688f76b59517a59a6f2dc20d0b7fcf79" translate="yes" xml:space="preserve">
          <source>is set to MEDIUM or higher.</source>
          <target state="translated">установлен на СРЕДНИЙ или выше.</target>
        </trans-unit>
        <trans-unit id="c2ad4f726f3cb1586df04ee0538b5e72441b3f80" translate="yes" xml:space="preserve">
          <source>is set to the length of the scanned string, and</source>
          <target state="translated">устанавливается длина сканируемой строки,и</target>
        </trans-unit>
        <trans-unit id="1cee3f4a0dcf9c9aac5c7b81e0001cba5602885c" translate="yes" xml:space="preserve">
          <source>is set up so that the logical name &lt;code&gt;story&lt;/code&gt; is found, rather than a CLI symbol or CRTL &lt;code&gt;environ&lt;/code&gt; element with the same name.</source>
          <target state="translated">настроен таким образом , что логическое имя &lt;code&gt;story&lt;/code&gt; найдена, а не символ CLI или CRTL &lt;code&gt;environ&lt;/code&gt; элемент с таким же именем.</target>
        </trans-unit>
        <trans-unit id="ca6947993695dc137eeb97b7855ecc954a5db745" translate="yes" xml:space="preserve">
          <source>is set, then the source string to encode() or decode() will be overwritten in place. If you're not interested in this, then bitwise-OR it with the bitmask.</source>
          <target state="translated">устанавливается,после чего исходная строка для encode()или decode()будет перезаписана на месте.Если вас это не интересует,то битовая маска-или она с битовой маской.</target>
        </trans-unit>
        <trans-unit id="bbdac3cf799e738c5a8da93062efb7bc674a7966" translate="yes" xml:space="preserve">
          <source>is shorter than the</source>
          <target state="translated">короче</target>
        </trans-unit>
        <trans-unit id="09e367c3fc5cc8d794bb19d7c88ac5b3dbdeee84" translate="yes" xml:space="preserve">
          <source>is similar to:</source>
          <target state="translated">похожа:</target>
        </trans-unit>
        <trans-unit id="252ba6878cfe0ead48b091a1c7b126be1c7dff77" translate="yes" xml:space="preserve">
          <source>is simply a named option of &lt;b&gt;Pod::Parser&lt;/b&gt; with a value that corresponds to a certain specified behavior. These various behaviors of &lt;b&gt;Pod::Parser&lt;/b&gt; may be enabled/disabled by setting or unsetting one or more</source>
          <target state="translated">- это просто именованная опция &lt;b&gt;Pod :: Parser&lt;/b&gt; со значением, которое соответствует определенному заданному поведению. Эти различные варианты поведения &lt;b&gt;Pod :: Parser&lt;/b&gt; можно включить / отключить, установив или отключив один или несколько</target>
        </trans-unit>
        <trans-unit id="a84848b3c3eaf21ad8fc8af050d6c81e580ed346" translate="yes" xml:space="preserve">
          <source>is simply opened and read; no special modes or I/O disciplines are used. To change this, set the optional</source>
          <target state="translated">просто открывается и считывается;никаких специальных режимов или дисциплин ввода/вывода не используется.Чтобы изменить это,установите опцию</target>
        </trans-unit>
        <trans-unit id="fbcaf1a2e7b687efcdea29a64a0429d2d73c416e" translate="yes" xml:space="preserve">
          <source>is skipped, including all its sub-directories. The default is to 'die' in such a case.</source>
          <target state="translated">пропущена,включая все ее подкаталоги.По умолчанию в таком случае &quot;умирают&quot;.</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">медленнее</target>
        </trans-unit>
        <trans-unit id="d049167d37668316c130f710bc1870b3a57a2719" translate="yes" xml:space="preserve">
          <source>is something that produces a stream of TAP for the parser to consume, such as an executable file, a text file, an archive, an IO handle, a database, etc. &lt;code&gt;TAP::Parser::Source&lt;/code&gt; s encapsulate these</source>
          <target state="translated">это что-то, что создает поток TAP для использования анализатором, например исполняемый файл, текстовый файл, архив, дескриптор ввода-вывода, базу данных и т. д. &lt;code&gt;TAP::Parser::Source&lt;/code&gt; инкапсулируют их</target>
        </trans-unit>
        <trans-unit id="e9ef489bd0e8e4faddde7bba7424e123d5cb2cdf" translate="yes" xml:space="preserve">
          <source>is substituted, and resulting binaries will be a mess.</source>
          <target state="translated">подменяется,и получившиеся двоичные файлы будут беспорядочными.</target>
        </trans-unit>
        <trans-unit id="598b73ec92930dcb2052eb812846ae6b23e7a9f4" translate="yes" xml:space="preserve">
          <source>is suggested instead. See also &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG in perlhacktips&lt;/a&gt;.</source>
          <target state="translated">предлагается вместо этого. См. Также &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG в perlhacktips&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f36c7e47ba89397191d8268fee1d7e7b3176375" translate="yes" xml:space="preserve">
          <source>is supported by Encode, any source encoding is fine.</source>
          <target state="translated">поддерживается Encode,любая исходная кодировка в порядке.</target>
        </trans-unit>
        <trans-unit id="f26f422c33326b47a62f1cb9a45fdcf68258f29a" translate="yes" xml:space="preserve">
          <source>is that it indiscriminately applies the specified transformation to the entire text of your source program. So something like:</source>
          <target state="translated">это то,что она без разбора применяет указанное преобразование ко всему тексту исходной программы.Значит,что-то вроде:</target>
        </trans-unit>
        <trans-unit id="988ce70c85eae79d0fe25b4054ce79630b89879b" translate="yes" xml:space="preserve">
          <source>is the OP that needs optimizing;</source>
          <target state="translated">это ОП,которую нужно оптимизировать;</target>
        </trans-unit>
        <trans-unit id="338540b0e9d83bd77bd1013d1cc68e0e7753e278" translate="yes" xml:space="preserve">
          <source>is the OP that requested the eval, and will normally be an &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; , &lt;code&gt;OP_DOFILE&lt;/code&gt; or &lt;code&gt;OP_REQUIRE&lt;/code&gt; .</source>
          <target state="translated">- это OP, который запросил eval, обычно это &lt;code&gt;OP_ENTEREVAL&lt;/code&gt; , &lt;code&gt;OP_DOFILE&lt;/code&gt; или &lt;code&gt;OP_REQUIRE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="503522920752d3b808908bb7e985e21cf9217310" translate="yes" xml:space="preserve">
          <source>is the Unicode code point (in any number of hex digits) of the character that cannot be found in the character repertoire of the encoding.</source>
          <target state="translated">это точка юникода (в любом количестве гекс-цифр)символа,которая не может быть найдена в репертуаре символов кодировки.</target>
        </trans-unit>
        <trans-unit id="b435409a7d8e12b8eb19aeb5a153ffd1f9f409bc" translate="yes" xml:space="preserve">
          <source>is the access mode and the encoding format to open the file with;</source>
          <target state="translated">это режим доступа и формат кодирования,с помощью которого можно открыть файл;</target>
        </trans-unit>
        <trans-unit id="5fa370b47b540f6499c736b9b14daa48b0750be8" translate="yes" xml:space="preserve">
          <source>is the body of the block. Returns the block, possibly modified.</source>
          <target state="translated">это тело блока.Возвращает блок,возможно,модифицированный.</target>
        </trans-unit>
        <trans-unit id="0ae28d04d97b4db2036c9e56276e357f10acc52e" translate="yes" xml:space="preserve">
          <source>is the class we are attaching to,</source>
          <target state="translated">это тот класс,к которому мы присоединяемся,</target>
        </trans-unit>
        <trans-unit id="88c2f81141fada39655c45626c041dad52ddc90e" translate="yes" xml:space="preserve">
          <source>is the debugging one. When called with an argument, switches to debugging or non-debugging dispatcher depending on the argument (active for newly-entered subs/etc only). (The returned value is for the dispatcher before the modification.)</source>
          <target state="translated">это отладочный.При вызове с аргументом,переключается на отладочный или не отладочный диспетчер в зависимости от аргумента (активен только для вновь введенных sub/etc).(Возвращаемое значение предназначено для диспетчера перед модификацией).</target>
        </trans-unit>
        <trans-unit id="82c52d1d716f93b650732617909547f222352c02" translate="yes" xml:space="preserve">
          <source>is the direct equivalent of this bit of Perl</source>
          <target state="translated">является прямым эквивалентом этого бита Perl.</target>
        </trans-unit>
        <trans-unit id="1fb2b7c32e3e6b82afdc74d9253d0b3262b0d7c9" translate="yes" xml:space="preserve">
          <source>is the empty string. Otherwise, it is an inferior, but still better-than-nothing alternative folding to</source>
          <target state="translated">это пустая строка.В противном случае,она уступает,но все же лучше,чем ничего,альтернатива складыванию в</target>
        </trans-unit>
        <trans-unit id="b4e2abd936326e926d92e153325a90b9130254a2" translate="yes" xml:space="preserve">
          <source>is the external name of the file you want opened.</source>
          <target state="translated">это внешнее имя файла,который вы хотите открыть.</target>
        </trans-unit>
        <trans-unit id="acae083d8f7267d56411d4d8123fe8329504c47b" translate="yes" xml:space="preserve">
          <source>is the famous imaginary number introduced above. Conversion between this form and the cartesian form &lt;code&gt;a + bi&lt;/code&gt; is immediate:</source>
          <target state="translated">- известное мнимое число, представленное выше. Преобразование между этой формой и декартовой формой &lt;code&gt;a + bi&lt;/code&gt; происходит немедленно:</target>
        </trans-unit>
        <trans-unit id="e5958b1e8af4ba98be9cc22430ff29e15f04e50c" translate="yes" xml:space="preserve">
          <source>is the file to read for POD source (the POD can be embedded in code). If</source>
          <target state="translated">это файл для чтения для источника POD (POD может быть встроен в код).Если</target>
        </trans-unit>
        <trans-unit id="4a902a3b5a686c36c34a6d4895c350e6d72563d5" translate="yes" xml:space="preserve">
          <source>is the hex representation of the octet that could not be decoded to utf8. When you encode, &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; will be inserted, where</source>
          <target state="translated">- это шестнадцатеричное представление октета, которое не удалось декодировать в utf8. При кодировании будет вставлен &lt;code&gt;\x{&lt;i&gt;HHHH&lt;/i&gt;}&lt;/code&gt; , где</target>
        </trans-unit>
        <trans-unit id="504ac0735ae10a95e2b5ee3e369194696677007c" translate="yes" xml:space="preserve">
          <source>is the hexadecimal number.</source>
          <target state="translated">это шестнадцатеричное число.</target>
        </trans-unit>
        <trans-unit id="98790fd2c6f05473e5c44b7acdc0f6b4506f2f5e" translate="yes" xml:space="preserve">
          <source>is the index into that array of the layer being called. The macro &lt;code&gt;PerlIOArg&lt;/code&gt; will return a (possibly &lt;code&gt;NULL&lt;/code&gt; ) SV * for the argument passed to the layer.</source>
          <target state="translated">- это индекс в этом массиве вызываемого слоя. Макрос &lt;code&gt;PerlIOArg&lt;/code&gt; вернет (возможно, &lt;code&gt;NULL&lt;/code&gt; ) SV * для аргумента, переданного на уровень.</target>
        </trans-unit>
        <trans-unit id="142db92371cc5426856fa3d444ddae687efa8615" translate="yes" xml:space="preserve">
          <source>is the last argument in the list.</source>
          <target state="translated">это последний аргумент в списке.</target>
        </trans-unit>
        <trans-unit id="a14b49226b3bbb81004f3cb1f765bb5fef97f5a8" translate="yes" xml:space="preserve">
          <source>is the list-type op, and</source>
          <target state="translated">это операция по списку,и</target>
        </trans-unit>
        <trans-unit id="f82606a57221f2b4b38ede02bc6cd6626d56d5e3" translate="yes" xml:space="preserve">
          <source>is the list-type op.</source>
          <target state="translated">это операция по списку.</target>
        </trans-unit>
        <trans-unit id="cafab01435fe922ebcb5d5cff02f00617e1abe22" translate="yes" xml:space="preserve">
          <source>is the mapped drive to the sys: volume of the server where Perl on NetWare is installed. Now typing</source>
          <target state="translated">это отображенный диск к sys:тому сервера,на котором установлен Perl на NetWare.Теперь ввод</target>
        </trans-unit>
        <trans-unit id="5fa4a40ee43f92498170d49135ea24ebd1ead4cd" translate="yes" xml:space="preserve">
          <source>is the moral equivalent of these two:</source>
          <target state="translated">это моральный эквивалент этих двух:</target>
        </trans-unit>
        <trans-unit id="14b3a81aac7cf79ce51c3e68af0806f7f4937ca7" translate="yes" xml:space="preserve">
          <source>is the most popular. UTF-8 is a variable length encoding that encodes Unicode characters as 1 to 4 bytes. Other encodings include UTF-16 and UTF-32 and their big- and little-endian variants (UTF-8 is byte-order independent). The ISO/IEC 10646 defines the UCS-2 and UCS-4 encoding forms.</source>
          <target state="translated">самый популярный.UTF-8-это кодировка переменной длины,которая кодирует символы Юникода от 1 до 4 байт.Другие кодировки включают UTF-16 и UTF-32 и их большие и маленькие варианты (UTF-8 не зависит от порядка байт).ISO/IEC 10646 определяет формы кодирования UCS-2 и UCS-4.</target>
        </trans-unit>
        <trans-unit id="0b4974b8d2e6f377f9801c3b800b1ac0b7c4207d" translate="yes" xml:space="preserve">
          <source>is the name of the extension, with all &lt;code&gt;::&lt;/code&gt; replaced by &lt;code&gt;.&lt;/code&gt; (e.g. the library module for extension Foo::Bar would be copied to a</source>
          <target state="translated">- это имя расширения, в котором all &lt;code&gt;::&lt;/code&gt; заменяется на &lt;code&gt;.&lt;/code&gt; (например, библиотечный модуль для расширения Foo :: Bar будет скопирован в</target>
        </trans-unit>
        <trans-unit id="fdcdffe2e65ad3302d98757411e195b4ad6675af" translate="yes" xml:space="preserve">
          <source>is the name of the module to load. If the string specified does not contain the package separator characters &quot;::&quot;, it is assumed to refer to the full module name &quot;DBM_Filter::name&quot;. This means that the full names for canned filters, &quot;null&quot; and &quot;utf8&quot;, included with this module are:</source>
          <target state="translated">это название загружаемого модуля.Если указанная строка не содержит символов разделителя пакетов &quot;::&quot;,то предполагается,что она относится к полному имени модуля &quot;DBM_Filter::name&quot;.Это означает,что полными именами для консервированных фильтров являются &quot;null&quot; и &quot;utf8&quot;,входящие в состав этого модуля:</target>
        </trans-unit>
        <trans-unit id="0de37e5050d6ab02ac54039af959dc47e7ba20d0" translate="yes" xml:space="preserve">
          <source>is the name of the package, and is only used in comments inside the generated C code.</source>
          <target state="translated">это имя пакета,и используется только в комментариях внутри сгенерированного кода на C.</target>
        </trans-unit>
        <trans-unit id="45440de46c4177a6572cf02f38585860def2ca1a" translate="yes" xml:space="preserve">
          <source>is the name, and the &lt;code&gt;[:&lt;/code&gt; and &lt;code&gt;:]&lt;/code&gt; delimiters. POSIX character classes only appear</source>
          <target state="translated">это имя и разделители &lt;code&gt;[:&lt;/code&gt; и &lt;code&gt;:]&lt;/code&gt; . Отображаются только классы символов POSIX</target>
        </trans-unit>
        <trans-unit id="896190cdbc3b73377c85418c4564a09f6ac5486e" translate="yes" xml:space="preserve">
          <source>is the number assigned to a character: for example, in EBCDIC the character &quot;A&quot; is usually assigned the number 193. In Unicode, the character &quot;A&quot; is assigned the number 65. All the code points in ASCII and Latin-1 (ISO 8859-1) have the same meaning in Unicode. All three of the recognized EBCDIC code sets have 256 code points, and in each code set, all 256 code points are mapped to equivalent Latin1 code points. Obviously, &quot;A&quot; will map to &quot;A&quot;, &quot;B&quot; =&amp;gt; &quot;B&quot;, &quot;%&quot; =&amp;gt; &quot;%&quot;, etc., for all printable characters in Latin1 and these code pages.</source>
          <target state="translated">- это номер, присвоенный символу: например, в EBCDIC символу &amp;laquo;A&amp;raquo; обычно присваивается номер 193. В Unicode символу &amp;laquo;A&amp;raquo; присваивается номер 65. Все кодовые точки в ASCII и Latin-1 ( ISO 8859-1) имеют то же значение в Unicode. Все три распознанных кодовых набора EBCDIC имеют 256 кодовых точек, и в каждом кодовом наборе все 256 кодовых точек отображаются в эквивалентные кодовые точки Latin1. Очевидно, что &amp;laquo;A&amp;raquo; будет отображаться на &amp;laquo;A&amp;raquo;, &amp;laquo;B&amp;raquo; =&amp;gt; &amp;laquo;B&amp;raquo;, &amp;laquo;%&amp;raquo; =&amp;gt; &amp;laquo;%&amp;raquo; и т.д. для всех печатаемых символов в Latin1 и этих кодовых страницах.</target>
        </trans-unit>
        <trans-unit id="44a3ced633aa8e3d881613e20fe3ca4570b01d8e" translate="yes" xml:space="preserve">
          <source>is the number of spaces to indent, defaulting to 6.</source>
          <target state="translated">это количество пробелов для отступов,по умолчанию 6.</target>
        </trans-unit>
        <trans-unit id="f35768e77df2a6fcb46d380fc0c5c7af5c55fc6d" translate="yes" xml:space="preserve">
          <source>is the object to serialize,</source>
          <target state="translated">это объект для сериализации,</target>
        </trans-unit>
        <trans-unit id="490225a54a9ac66bcdb59f92017f41f299257ed1" translate="yes" xml:space="preserve">
          <source>is the op being considered, normally an &lt;code&gt;rv2cv&lt;/code&gt; op. A pointer to the identified subroutine is returned, if it could be determined statically, and a null pointer is returned if it was not possible to determine statically.</source>
          <target state="translated">рассматривается &lt;code&gt;rv2cv&lt;/code&gt; , обычно это операция rv2cv . Возвращается указатель на идентифицированную подпрограмму, если ее можно определить статически, и возвращается нулевой указатель, если статическое определение невозможно.</target>
        </trans-unit>
        <trans-unit id="346d72197b82381e3d135c3fd096d1560c48b51d" translate="yes" xml:space="preserve">
          <source>is the op to append to the list.</source>
          <target state="translated">это операция по добавлению в список.</target>
        </trans-unit>
        <trans-unit id="2c471482064fafead892cdf7b22397b6be3fe1e9" translate="yes" xml:space="preserve">
          <source>is the op to prepend to the list, and</source>
          <target state="translated">это операция по подготовке к списку,и</target>
        </trans-unit>
        <trans-unit id="aaf68fac1b03ed7c6353ab95af2dd6b8cc61684c" translate="yes" xml:space="preserve">
          <source>is the op tree, and</source>
          <target state="translated">это дерево операций,и</target>
        </trans-unit>
        <trans-unit id="3684b3a23a1a941786c7c86346c047661fcfe052" translate="yes" xml:space="preserve">
          <source>is the opcode of a binary operator, such as &lt;code&gt;OP_BIT_OR&lt;/code&gt; , then an op is constructed that performs the binary operation and assigns the result to the left argument. Either way, if</source>
          <target state="translated">- это код операции двоичного оператора, такого как &lt;code&gt;OP_BIT_OR&lt;/code&gt; , тогда создается операция, которая выполняет двоичную операцию и присваивает результат левому аргументу. В любом случае, если</target>
        </trans-unit>
        <trans-unit id="a0a985ac039d3d2ad165d51298ff6ea64e498ec2" translate="yes" xml:space="preserve">
          <source>is the opcode.</source>
          <target state="translated">это опкод.</target>
        </trans-unit>
        <trans-unit id="185ceb5c9d854b05a21926141803af21e0fce555" translate="yes" xml:space="preserve">
          <source>is the outer pad name that this one mirrors. The returned pad name has the PADNAMEt_OUTER flag already set.</source>
          <target state="translated">это имя внешней подушечки,что это зеркало.Возвращаемое имя пэда уже имеет установленный флаг PADNAMEt_OUTER.</target>
        </trans-unit>
        <trans-unit id="a6ee3b580c0eceeeca1f85f9032f86a8c10b6343" translate="yes" xml:space="preserve">
          <source>is the pad offset of the scalar lexical variable that will be affected. If it is 0, the global $_ will be used.</source>
          <target state="translated">это смещение подушечки скалярной лексической переменной,которая будет затронута.Если она равна 0,то будет использована глобальная $_.</target>
        </trans-unit>
        <trans-unit id="075349611fc93d2e62829ba77d41e494ad441dd4" translate="yes" xml:space="preserve">
          <source>is the perl version the code should be backwards compatible with. It defaults to the version of perl running the subroutine. If</source>
          <target state="translated">это perl-версия,с которой код должен быть обратно совместим.По умолчанию это версия perl,запущенная в подпрограмме.Если</target>
        </trans-unit>
        <trans-unit id="2e519216b0de8348846fa9b4a5055de6958ae755" translate="yes" xml:space="preserve">
          <source>is the point whose coordinates are (a, b). Actually, it would be the vector originating from (0, 0) to (a, b). It follows that the addition of two complex numbers is a vectorial addition.</source>
          <target state="translated">это точка,координаты которой (a,b).Фактически,это будет вектор,начинающийся от (0,0)до (a,b).Из этого следует,что сложение двух комплексных чисел является векторным сложением.</target>
        </trans-unit>
        <trans-unit id="2cc4f790eddde04d02f931089ea9bbb40ba3a6a4" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name after the last &lt;code&gt;::&lt;/code&gt; , which translates to the full file specification of the shareable image.</source>
          <target state="translated">- это часть имени расширения после последнего &lt;code&gt;::&lt;/code&gt; , которая переводится в полную спецификацию файла совместно используемого изображения.</target>
        </trans-unit>
        <trans-unit id="2d16c45482f74eb9930301a0ecafdb6a012a8de5" translate="yes" xml:space="preserve">
          <source>is the portion of the extension's name following the last &lt;code&gt;::&lt;/code&gt; ), containing the XS code,</source>
          <target state="translated">- это часть имени расширения, следующая за последним &lt;code&gt;::&lt;/code&gt; ) , содержащая код XS,</target>
        </trans-unit>
        <trans-unit id="ff4bfee209d75ed4a7ac713cfc5d716f2c1e2be4" translate="yes" xml:space="preserve">
          <source>is the previous OP optimized, whose &lt;code&gt;op_next&lt;/code&gt; points to</source>
          <target state="translated">оптимизирован предыдущий OP, &lt;code&gt;op_next&lt;/code&gt; которого указывает на</target>
        </trans-unit>
        <trans-unit id="7959ce09f1e3e9e7ae880e926860f28302895b7e" translate="yes" xml:space="preserve">
          <source>is the primary name of this option. When a program executes under &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (recommended), these variables must be pre-declared with our() or &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; .</source>
          <target state="translated">- это основное название этой опции. Когда программа выполняется в режиме &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (рекомендуется), эти переменные должны быть предварительно объявлены с помощью our () или &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc92b1dcb6d32cc02b0b929328d0aa4e792bcfc8" translate="yes" xml:space="preserve">
          <source>is the property of a particular build of perl, and does not depend on the current process. If you do not provide the optional argument to the functions mstats_fillhash(), fill_mstats(), mstats2hash(), then the information in fields &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; is not updated.</source>
          <target state="translated">является свойством конкретной сборки Perl и не зависит от текущего процесса. Если вы не предоставите необязательный аргумент для функций mstats_fillhash (), fill_mstats (), mstats2hash (), то информация в полях &lt;code&gt;mem_size&lt;/code&gt; , &lt;code&gt;available_size&lt;/code&gt; не обновляется.</target>
        </trans-unit>
        <trans-unit id="e0a2bbcb355a7bdbc9b5d8f8dbd1d6a1892216c8" translate="yes" xml:space="preserve">
          <source>is the reason for version-specific mangling of the DLL name for perl DLL.</source>
          <target state="translated">является причиной изменения имени DLL для perl DLL.</target>
        </trans-unit>
        <trans-unit id="533e118d459a0417538dc17219094be54c0e410e" translate="yes" xml:space="preserve">
          <source>is the recommended way to report bugs in the perl interpreter itself or any of the standard library modules back to the developers; please read through the documentation for</source>
          <target state="translated">это рекомендуемый способ сообщить об ошибках в самом интерпретаторе perl или любом из модулей стандартной библиотеки разработчикам;пожалуйста,прочтите документацию для</target>
        </trans-unit>
        <trans-unit id="059ae99546fd6d2b968c421a21e81f0cc4cf52d3" translate="yes" xml:space="preserve">
          <source>is the recommended wide native character-aware way of saying</source>
          <target state="translated">это рекомендуемый способ сказать на родном языке.</target>
        </trans-unit>
        <trans-unit id="b99ef0d01d54e7d02d4e29eb81f05081577ed0c4" translate="yes" xml:space="preserve">
          <source>is the root of the optree representing the scope; it is a double pointer so you can replace the OP if you need to.</source>
          <target state="translated">это корень опции,представляющей область видимости;это двойной указатель,так что вы можете заменить операционную систему,если вам нужно.</target>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="translated">такой же,как</target>
        </trans-unit>
        <trans-unit id="5664826178886ed6dc31d7a56be756161e89003e" translate="yes" xml:space="preserve">
          <source>is the same as this:</source>
          <target state="translated">это то же самое:</target>
        </trans-unit>
        <trans-unit id="ea9ca7dc351fef7638a53b6e78fc2c745436b2f0" translate="yes" xml:space="preserve">
          <source>is the same as using the program:</source>
          <target state="translated">это то же самое,что и использование программы:</target>
        </trans-unit>
        <trans-unit id="c789dc7dbbbae7937501c4047bbd4ca49aed4ac3" translate="yes" xml:space="preserve">
          <source>is the savestack index returned by &lt;code&gt;block_start&lt;/code&gt; , and</source>
          <target state="translated">это индекс сохраненного пакета, возвращаемый &lt;code&gt;block_start&lt;/code&gt; , и</target>
        </trans-unit>
        <trans-unit id="4a63caa46b829fcb01fe4a8c31e68b7e20d84a2f" translate="yes" xml:space="preserve">
          <source>is the scalar value to store for this key.</source>
          <target state="translated">это скалярное значение,которое нужно сохранить для этого ключа.</target>
        </trans-unit>
        <trans-unit id="cb053ed2ecf771fb84e4c68638f701622bf37193" translate="yes" xml:space="preserve">
          <source>is the serialized string you returned to the engine in &lt;code&gt;STORABLE_freeze&lt;/code&gt; , and there may be an optional list of references, in the same order you gave them at serialization time, pointing to the deserialized objects (which have been processed courtesy of the Storable engine).</source>
          <target state="translated">- это сериализованная строка, которую вы вернули механизму в &lt;code&gt;STORABLE_freeze&lt;/code&gt; , и может быть необязательный список ссылок в том же порядке, который вы указали им во время сериализации, указывающий на десериализованные объекты (которые были обработаны благодаря механизму Storable).</target>
        </trans-unit>
        <trans-unit id="681d5ca1a6522883a0d7e74c2ad38f23f79e4445" translate="yes" xml:space="preserve">
          <source>is the shortest distance between two points on a sphere. The distance is in &lt;code&gt;$rho&lt;/code&gt; units. The &lt;code&gt;$rho&lt;/code&gt; is optional, it defaults to 1 (the unit sphere), therefore the distance defaults to radians.</source>
          <target state="translated">- кратчайшее расстояние между двумя точками на сфере. Расстояние в единицах &lt;code&gt;$rho&lt;/code&gt; . &lt;code&gt;$rho&lt;/code&gt; является необязательным, он по умолчанию 1 (единичной сфере), поэтому расстояние по умолчанию радианов.</target>
        </trans-unit>
        <trans-unit id="bb152e814624de7f776388475643c5915a6bbc02" translate="yes" xml:space="preserve">
          <source>is the stored string for the resource object.</source>
          <target state="translated">это сохраненная строка для объекта ресурса.</target>
        </trans-unit>
        <trans-unit id="7666856489819ec07e5e68fda7968ecdf4b7481e" translate="yes" xml:space="preserve">
          <source>is the string &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; .</source>
          <target state="translated">это строка &lt;code&gt;&quot;\0X\0\0YZ&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4af45b7011bdf9dc23ddbc9ab955c3a70b8a6852" translate="yes" xml:space="preserve">
          <source>is the string length, not the number of strings. With an explicit repeat count for pack, the packed string is adjusted to that length. For example:</source>
          <target state="translated">это длина строки,а не количество строк.При явном подсчете количества повторений для пакета,упакованная строка подстраивается под эту длину.Например:</target>
        </trans-unit>
        <trans-unit id="a38238d720532a1187dfe70331e701543f8d69a2" translate="yes" xml:space="preserve">
          <source>is the type returned by &lt;code&gt;ITEM&lt;/code&gt; s that don't specify their type. It defaults to the value of &lt;code&gt;default_type()&lt;/code&gt; .</source>
          <target state="translated">- это тип, возвращаемый &lt;code&gt;ITEM&lt;/code&gt; которые не указывают свой тип. По умолчанию используется значение &lt;code&gt;default_type()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62dd259d4f7a6605999861260db4a925294adb84" translate="yes" xml:space="preserve">
          <source>is the unknown layer.</source>
          <target state="translated">это неизвестный слой.</target>
        </trans-unit>
        <trans-unit id="7ebb9cb388028784d1ffeb685835e29c39c8a750" translate="yes" xml:space="preserve">
          <source>is the version of Perl you're using, as supplied in &lt;code&gt;$]&lt;/code&gt; , with '.' converted to '_'), or</source>
          <target state="translated">это версия Perl, которую вы используете, как указано в &lt;code&gt;$]&lt;/code&gt; , с '.' преобразован в '_'), или</target>
        </trans-unit>
        <trans-unit id="334b91284c73938e4e816a510966fc314842a93e" translate="yes" xml:space="preserve">
          <source>is translated once when Perl starts up; any changes you make while Perl is running do not affect the behavior of &lt;code&gt;%ENV&lt;/code&gt; . If</source>
          <target state="translated">переводится один раз при запуске Perl; любые изменения, которые вы вносите во время работы Perl, не влияют на поведение &lt;code&gt;%ENV&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="a86d775dd40947cb031e2e57ff35692497a46818" translate="yes" xml:space="preserve">
          <source>is treated as number of spaces to indent by. If &lt;code&gt;declare_types&lt;/code&gt; is true a &lt;code&gt;$types&lt;/code&gt; is always declared in the perl code generated, if defined and false never declared, and if undefined &lt;code&gt;$types&lt;/code&gt; is only declared if the values in</source>
          <target state="translated">рассматривается как количество пробелов для отступа. Если &lt;code&gt;declare_types&lt;/code&gt; истинно, &lt;code&gt;$types&lt;/code&gt; всегда объявляется в сгенерированном коде perl, если определено, а false никогда не объявляется, и если undefined &lt;code&gt;$types&lt;/code&gt; объявляется только в том случае, если значения в</target>
        </trans-unit>
        <trans-unit id="10fa8676748c59212055af40992e63bcbc7c643b" translate="yes" xml:space="preserve">
          <source>is true (not empty or zero), generates the value of</source>
          <target state="translated">является истинным (не пустым или нулевым),генерирует значение</target>
        </trans-unit>
        <trans-unit id="48302db9668c7d7b445abda36a22e6062f411e8f" translate="yes" xml:space="preserve">
          <source>is true on all platforms. If you want native code points for the low 256, use the &lt;code&gt;&quot;W&quot;&lt;/code&gt; template. This means that the equivalences</source>
          <target state="translated">верно на всех платформах. Если вам нужен собственный код для младших 256, используйте шаблон &lt;code&gt;&quot;W&quot;&lt;/code&gt; . Это означает, что эквивалентности</target>
        </trans-unit>
        <trans-unit id="067d235b3d6dbb909f945abdb70f31cbc437b930" translate="yes" xml:space="preserve">
          <source>is true when we're part of a deep clone operation,</source>
          <target state="translated">это правда,когда мы участвуем в операции по глубокому клонированию,</target>
        </trans-unit>
        <trans-unit id="779d38fac96628c599fdd2384e085d60ba46ca15" translate="yes" xml:space="preserve">
          <source>is true, also checks whether</source>
          <target state="translated">верно,также проверяет.</target>
        </trans-unit>
        <trans-unit id="45f8f7c6ce5b54b9230f2a84836b12d460e6184b" translate="yes" xml:space="preserve">
          <source>is true, ignore case. The default is to honour case.</source>
          <target state="translated">это правда,не обращай внимания на дело.По умолчанию,это честь дела.</target>
        </trans-unit>
        <trans-unit id="4056d1d8ea1ba0fdc400bcac4f4b8f6e5cb5bd11" translate="yes" xml:space="preserve">
          <source>is true, it SHOULD modify</source>
          <target state="translated">это правда,это ДОЛЖНО изменить</target>
        </trans-unit>
        <trans-unit id="e01d069b2f9d59305c080956514566b0ca93db4c" translate="yes" xml:space="preserve">
          <source>is true, returns false.</source>
          <target state="translated">это правда,возвращает ложь.</target>
        </trans-unit>
        <trans-unit id="4c6f61c4a55f03174097ae702fb602dd769db21e" translate="yes" xml:space="preserve">
          <source>is true, search by dictionary order (ignore anything but word characters and whitespace). The default is honour all characters.</source>
          <target state="translated">верно,поиск по словарному порядку (игнорируйте что угодно,только не символы слова и пробелы).По умолчанию используется чествование всех символов.</target>
        </trans-unit>
        <trans-unit id="ec9b11fcd9e9d4abe8ffa5611c1f06b9f3b4638a" translate="yes" xml:space="preserve">
          <source>is true, the AUTOLOAD subroutine falls back on AutoLoader::AUTOLOAD for all names that the constant() routine doesn't recognise.</source>
          <target state="translated">true,подпрограмма AUTOLOAD возвращается к AutoLoader::AUTOLOAD для всех имён,которые не распознает рутина константы().</target>
        </trans-unit>
        <trans-unit id="1c557d39d34bad4891cbefb6c9ce51864c16f310" translate="yes" xml:space="preserve">
          <source>is true, the scheme above allows the encoding to do as much as it can and tell the layer above how much that was. What is lacking at present is a mechanism to report what went wrong. The most likely interface will be an additional method call to the object, or perhaps (to avoid forcing per-stream objects on otherwise stateless encodings) an additional parameter.</source>
          <target state="translated">верно,схема выше позволяет кодировке сделать как можно больше и сказать вышестоящему слою,сколько это было.Чего в настоящее время не хватает,так это механизма сообщения о том,что пошло не так.Наиболее вероятным интерфейсом будет дополнительный вызов метода к объекту,или,возможно,(чтобы избежать принуждения per-stream объектов в противном случае без кодировок)дополнительный параметр.</target>
        </trans-unit>
        <trans-unit id="a5fb713f23256ce8adf865a7bb140abb92cbc783" translate="yes" xml:space="preserve">
          <source>is two characters, the first character is used as the left quote and the second as the right quoted; and if</source>
          <target state="translated">это два символа,первый символ используется в качестве левой кавычки,а второй-в качестве правой кавычки;и если</target>
        </trans-unit>
        <trans-unit id="da08ff0a55825cc7ad3dbe2e4beefb9e6a6ab73b" translate="yes" xml:space="preserve">
          <source>is unlinked.</source>
          <target state="translated">не связан.</target>
        </trans-unit>
        <trans-unit id="99206005453caddd66236543e24f39a90d1fd368" translate="yes" xml:space="preserve">
          <source>is used &lt;b&gt;instead&lt;/b&gt; of &lt;code&gt;Compress::Zlib&lt;/code&gt; .</source>
          <target state="translated">используется &lt;b&gt;вместо&lt;/b&gt; из &lt;code&gt;Compress::Zlib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82cf7ac9ae1725690fb609a1273cc9ea666cc709" translate="yes" xml:space="preserve">
          <source>is used instead of &lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt;.</source>
          <target state="translated">используется вместо &lt;code&gt;\x{&lt;i&gt;XXXX&lt;/i&gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db853bb4b5bdcd8035b1c491d509b51c38d42af0" translate="yes" xml:space="preserve">
          <source>is used instead. So we have</source>
          <target state="translated">используется вместо этого.Итак,у нас есть</target>
        </trans-unit>
        <trans-unit id="38f21bebe9090675b3b7c95faffad6681c98ff75" translate="yes" xml:space="preserve">
          <source>is used to call a method from a Perl class. The parameter &lt;code&gt;methname&lt;/code&gt; corresponds to the name of the method to be called. Note that the class that the method belongs to is passed on the Perl stack rather than in the parameter list. This class can be either the name of the class (for a static method) or a reference to an object (for a virtual method). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more information on static and virtual methods and &lt;a href=&quot;#Using-call_method&quot;&gt;Using call_method&lt;/a&gt; for an example of using</source>
          <target state="translated">используется для вызова метода из класса Perl. Параметр &lt;code&gt;methname&lt;/code&gt; соответствует имени вызываемого метода. Обратите внимание, что класс, к которому принадлежит метод, передается в стеке Perl, а не в списке параметров. Этот класс может быть либо именем класса (для статического метода), либо ссылкой на объект (для виртуального метода). См. &lt;a href=&quot;perlobj&quot;&gt;Perlobj&lt;/a&gt; для получения дополнительной информации о статических и виртуальных методах и &lt;a href=&quot;#Using-call_method&quot;&gt;Использование call_method&lt;/a&gt; для примера использования</target>
        </trans-unit>
        <trans-unit id="174c45b58d93e19a1bf9b115b40967fdc9b93c7c" translate="yes" xml:space="preserve">
          <source>is used to create a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">используется для создания &lt;a href=&quot;parser/source&quot;&gt;TAP :: Parser :: Source,&lt;/a&gt; который передается &lt;a href=&quot;#iterator_factory_class&quot;&gt;классу iterator_factory_class,&lt;/a&gt; который, в свою очередь, определяет, как обрабатывать источник, и создает для него &amp;lt;TAP :: Parser :: Iterator&amp;gt;. Итератор используется анализатором для чтения в потоке TAP.</target>
        </trans-unit>
        <trans-unit id="3d08f94f5cb97d407acf7f344990711fbd64478a" translate="yes" xml:space="preserve">
          <source>is used to refer to UTF-8 on ASCII and ISO Latin based platforms and UTF-EBCDIC on EBCDIC based platforms.</source>
          <target state="translated">используется для обозначения UTF-8 на платформах ASCII и ISO на латинице и UTF-EBCDIC на платформах EBCDIC.</target>
        </trans-unit>
        <trans-unit id="caef3d98540ddc9f2f1ce1a294bcbe58f435fe11" translate="yes" xml:space="preserve">
          <source>is used to store this status.</source>
          <target state="translated">используется для хранения этого статуса.</target>
        </trans-unit>
        <trans-unit id="d148088d7797718280b1177b22c2c5191737877f" translate="yes" xml:space="preserve">
          <source>is used, the following &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;s are used:</source>
          <target state="translated">используются следующие &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; типы:</target>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="translated">используется.</target>
        </trans-unit>
        <trans-unit id="0c7240c81a5b6100a1329f457d83532b0ff32851" translate="yes" xml:space="preserve">
          <source>is used. If no password is given and the login is</source>
          <target state="translated">используется.Если пароль не указан,а логин-это</target>
        </trans-unit>
        <trans-unit id="fe97f79326aa164bdecbb65e7fb757c2dd7af24b" translate="yes" xml:space="preserve">
          <source>is used. When you decode, the Unicode REPLACEMENT CHARACTER, code point U+FFFD, is used. If the data is supposed to be UTF-8, an optional lexical warning of warning category &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; is given.</source>
          <target state="translated">используется. Когда вы декодируете, используется Unicode REPLACEMENT CHARACTER, кодовая точка U + FFFD. Если предполагается, что данные должны быть в кодировке UTF-8, выдается необязательное лексическое предупреждение категории предупреждения &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12235ad06fa18edfce70787b2cda7be75ef01ddb" translate="yes" xml:space="preserve">
          <source>is useful because it allows other code (typically parser support code or caching variables) to be defined before the filter is invoked. However, there is often no need for such a separation.</source>
          <target state="translated">полезен,так как позволяет определить другой код (обычно код поддержки парсера или кэширование переменных)перед вызовом фильтра.Однако,часто нет необходимости в таком разделении.</target>
        </trans-unit>
        <trans-unit id="4e47b26bd8204f22d84b37cecf46b2ae865ef9fd" translate="yes" xml:space="preserve">
          <source>is useful.</source>
          <target state="translated">полезно.</target>
        </trans-unit>
        <trans-unit id="40a7b397fd325b5ecbf0d373914724c1f6367724" translate="yes" xml:space="preserve">
          <source>is usually 1 for on, but higher values trigger additional warnings. See &lt;a href=&quot;#Warnings&quot;&gt;Warnings&lt;/a&gt;.</source>
          <target state="translated">обычно 1 для включения, но более высокие значения вызывают дополнительные предупреждения. См. &lt;a href=&quot;#Warnings&quot;&gt;Предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69bc4bb7fd74f861f5b8bca772f152dcc604661a" translate="yes" xml:space="preserve">
          <source>is valid and matches '0', '1', any alphabetic character, and the percent sign.</source>
          <target state="translated">является действительным и совпадает с '0','1',любым алфавитным символом и знаком процента.</target>
        </trans-unit>
        <trans-unit id="d231156292aeca125ab2ff401f5be71547c7f695" translate="yes" xml:space="preserve">
          <source>is where the main processing for the filter is done.</source>
          <target state="translated">это место,где производится основная обработка фильтра.</target>
        </trans-unit>
        <trans-unit id="30e01163fe1949f10b45b91d1e13f0c7637e25e7" translate="yes" xml:space="preserve">
          <source>is written into the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array, while the value previously stored there is written to</source>
          <target state="translated">записывается в массив &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; , а ранее сохраненное значение записывается в</target>
        </trans-unit>
        <trans-unit id="680b8b11b1f1a95b7c654104af2981b4c44a0974" translate="yes" xml:space="preserve">
          <source>is your blessed reference for this particular instance.</source>
          <target state="translated">это ваша благословенная ссылка на этот конкретный случай.</target>
        </trans-unit>
        <trans-unit id="637ede9f0bac88412365638ad04d0f903dece281" translate="yes" xml:space="preserve">
          <source>is zero or</source>
          <target state="translated">равен нулю или</target>
        </trans-unit>
        <trans-unit id="da78c7a4809cb6ce24ac8e29b2195288ba32cd34" translate="yes" xml:space="preserve">
          <source>is zero, then a plain scalar or list assignment is constructed. Which type of assignment it is is automatically determined.</source>
          <target state="translated">является нулем,затем строится простое скалярное или списочное присвоение.Какое именно присвоение определяется автоматически.</target>
        </trans-unit>
        <trans-unit id="623d50572aae446dc358fd966327ce8c9a0ed204" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the lowercase mapping for</source>
          <target state="translated">это,если не пустое,строчное отображение для</target>
        </trans-unit>
        <trans-unit id="3d7682c10121c3528254ad891855f87cf827fae6" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the titlecase mapping for</source>
          <target state="translated">это,если не пустое,картирование титульных дел для</target>
        </trans-unit>
        <trans-unit id="17656293490b52e28e817d6f958f58501e80a596" translate="yes" xml:space="preserve">
          <source>is, if non-empty, the uppercase mapping for</source>
          <target state="translated">это,если не пустое,заглавное отображение для</target>
        </trans-unit>
        <trans-unit id="cb18cfba59a431e4fe8a80b174c133778446c806" translate="yes" xml:space="preserve">
          <source>is, in short, an idhash with auto-registry. When an object (or, indeed, any reference) is used as a fieldhash key, the fieldhash is automatically registered for garbage collection with the object, as if &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; had been called.</source>
          <target state="translated">короче говоря, idhash с авторегистрацией. Когда объект (или, действительно, любая ссылка) используется в качестве ключа fieldhash, fieldhash автоматически регистрируется для сборки мусора с объектом, как если бы был вызван &lt;code&gt;register $obj, \ %fieldhash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2eb3ddf53a44d0014465dbf2511b96e2ca53542f" translate="yes" xml:space="preserve">
          <source>is_even()</source>
          <target state="translated">is_even()</target>
        </trans-unit>
        <trans-unit id="11dbccec36ef1a03c703d514dd31a8d0c0798066" translate="yes" xml:space="preserve">
          <source>is_int()</source>
          <target state="translated">is_int()</target>
        </trans-unit>
        <trans-unit id="81c4be558fcd3af8cca4b285c2962c5989f928f3" translate="yes" xml:space="preserve">
          <source>is_make_type</source>
          <target state="translated">is_make_type</target>
        </trans-unit>
        <trans-unit id="5e192aa23e81e4d04b32a6b074858b9c768cac41" translate="yes" xml:space="preserve">
          <source>is_neg()/is_negative()</source>
          <target state="translated">is_neg()/is_negative()</target>
        </trans-unit>
        <trans-unit id="2ffcb1a862f4b027f0ab6152305df1200860e1b3" translate="yes" xml:space="preserve">
          <source>is_odd()</source>
          <target state="translated">is_odd()</target>
        </trans-unit>
        <trans-unit id="70c8f014e9c6a6d99e78620643d9bc507b9fb363" translate="yes" xml:space="preserve">
          <source>is_one()</source>
          <target state="translated">is_one()</target>
        </trans-unit>
        <trans-unit id="aeee4fc11afe65037967eaa9c965d8912ecf4589" translate="yes" xml:space="preserve">
          <source>is_pos()/is_positive()</source>
          <target state="translated">is_pos()/is_positive()</target>
        </trans-unit>
        <trans-unit id="e07cc517821b5551e950dff4acb3c80a32d29930" translate="yes" xml:space="preserve">
          <source>is_utf8</source>
          <target state="translated">is_utf8</target>
        </trans-unit>
        <trans-unit id="1ddb13cfa4feb404c5ec5eefd16e3616cef8e112" translate="yes" xml:space="preserve">
          <source>is_zero()</source>
          <target state="translated">is_zero()</target>
        </trans-unit>
        <trans-unit id="8ffda1fa78645c009ffa2b7d1f049da6785b1dfd" translate="yes" xml:space="preserve">
          <source>isdual</source>
          <target state="translated">isdual</target>
        </trans-unit>
        <trans-unit id="ee2ebf5133051bf39cd49d499acea403e44a4978" translate="yes" xml:space="preserve">
          <source>isn't</source>
          <target state="translated">isn't</target>
        </trans-unit>
        <trans-unit id="9d94e5f09ea80b838abc637f6cc2137bf9b40766" translate="yes" xml:space="preserve">
          <source>isn't available,</source>
          <target state="translated">не доступен,</target>
        </trans-unit>
        <trans-unit id="b643075840def260815468ce095b78f495761c52" translate="yes" xml:space="preserve">
          <source>isn't available, it converts it to plain text with the external command</source>
          <target state="translated">не доступен,он преобразует его в обычный текст с помощью внешней команды.</target>
        </trans-unit>
        <trans-unit id="e16b96ecf693e658c2424ac211a1dfdc920c5a12" translate="yes" xml:space="preserve">
          <source>isn't given, it defaults to &lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">не указан, по умолчанию используется &lt;code&gt;STDIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75e52afea6c5f5fb7c62edc35d62baf474ddc2bf" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2man&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">не указан, форматированный вывод записывается в &lt;code&gt;STDOUT&lt;/code&gt; . Несколько файлов POD могут быть обработаны в одном вызове &lt;b&gt;pod2man&lt;/b&gt; (экономия времени загрузки модуля и компиляции) путем предоставления нескольких пар</target>
        </trans-unit>
        <trans-unit id="464bc0306867e48eb03dffa3c82d60e097b5207c" translate="yes" xml:space="preserve">
          <source>isn't given, the formatted output is written to &lt;code&gt;STDOUT&lt;/code&gt; . Several POD files can be processed in the same &lt;b&gt;pod2text&lt;/b&gt; invocation (saving module load and compile times) by providing multiple pairs of</source>
          <target state="translated">не указан, форматированный вывод записывается в &lt;code&gt;STDOUT&lt;/code&gt; . Несколько файлов POD могут быть обработаны в одном вызове &lt;b&gt;pod2text&lt;/b&gt; (сохраняя время загрузки модуля и компиляции), предоставляя несколько пар</target>
        </trans-unit>
        <trans-unit id="96d2a4fbb9059f5330274f55be6262e3cbc96904" translate="yes" xml:space="preserve">
          <source>issue 21. See &lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;http://interglacial.com/tpj/21/&lt;/a&gt;</source>
          <target state="translated">выпуск 21. См. &lt;a href=&quot;http://interglacial.com/tpj/21/&quot;&gt;http://interglacial.com/tpj/21/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1da083affe279217f988b36f92bb98ac176b46e" translate="yes" xml:space="preserve">
          <source>issymlink.U</source>
          <target state="translated">issymlink.U</target>
        </trans-unit>
        <trans-unit id="45098fc2aa4e6608f56f987d63d68920609dbbd1" translate="yes" xml:space="preserve">
          <source>isvstring</source>
          <target state="translated">isvstring</target>
        </trans-unit>
        <trans-unit id="073c2d116dfe6c35185754930917fb5ca91ecdec" translate="yes" xml:space="preserve">
          <source>isweak</source>
          <target state="translated">isweak</target>
        </trans-unit>
        <trans-unit id="6c5522ca8af86fc5069b737bb8892b3ea61002c2" translate="yes" xml:space="preserve">
          <source>it</source>
          <target state="translated">it</target>
        </trans-unit>
        <trans-unit id="05a4caf354063cd0b1c1282164b973f1a8b3ca03" translate="yes" xml:space="preserve">
          <source>it as though it were a two-dimensional one. This is actually the way almost all C multidimensional arrays work as well.</source>
          <target state="translated">как будто он двумерный.На самом деле так работают почти все многомерные массивы C.</target>
        </trans-unit>
        <trans-unit id="61d4d6f86f6911f9c0b355a4b638b81c72da1544" translate="yes" xml:space="preserve">
          <source>it depends</source>
          <target state="translated">зависит от</target>
        </trans-unit>
        <trans-unit id="e9ed3745b6da2ff65c1330a469e0e606269e1aea" translate="yes" xml:space="preserve">
          <source>it does any key lookups. Anything more complicated than a simple scalar variable must use methods 2 or 3 below. However, a &quot;simple scalar&quot; includes an identifier that itself uses method 1 recursively. Therefore, the following prints &quot;howdy&quot;.</source>
          <target state="translated">он делает любые ключевые поиски.Что-либо более сложное,чем простая скалярная переменная,должно использовать методы 2 или 3,приведенные ниже.Однако,&quot;простой скаляр&quot; включает в себя идентификатор,который сам рекурсивно использует метод 1.Поэтому ниже выведено &quot;howdy&quot;.</target>
        </trans-unit>
        <trans-unit id="ba8e66e3faac8aa41508246830eac4c0ce1367d9" translate="yes" xml:space="preserve">
          <source>it does.</source>
          <target state="translated">так и есть.</target>
        </trans-unit>
        <trans-unit id="0586fd2e9ea179909692618fde703704590b2778" translate="yes" xml:space="preserve">
          <source>it doesn't make sense for &lt;code&gt;$result&lt;/code&gt; to be tainted.</source>
          <target state="translated">нет смысла испортить &lt;code&gt;$result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67860f13d2c0675d8e22bfdbbcae1da9fb06bf2d" translate="yes" xml:space="preserve">
          <source>it has been determined whether or not it is part of a POD paragraph). The parameter &lt;code&gt;$text&lt;/code&gt; is the input line; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number of the corresponding text line.</source>
          <target state="translated">было определено, является ли он частью параграфа POD). Параметр &lt;code&gt;$text&lt;/code&gt; - это строка ввода; а параметр &lt;code&gt;$line_num&lt;/code&gt; - это номер строки соответствующей текстовой строки.</target>
        </trans-unit>
        <trans-unit id="3870d4bae6a615c7d0c3110b61ef4d9f15473beb" translate="yes" xml:space="preserve">
          <source>it has no prototype (&lt;code&gt;PROTOTYPE&lt;/code&gt; field is missing).</source>
          <target state="translated">у него нет прототипа ( отсутствует поле &lt;code&gt;PROTOTYPE&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1690d6efd12aa7c091debf143ad3278ea0ef7e39" translate="yes" xml:space="preserve">
          <source>it is executed directly instead of via your system's command shell (see below).</source>
          <target state="translated">он выполняется напрямую,а не через командную оболочку вашей системы (см.ниже).</target>
        </trans-unit>
        <trans-unit id="0c696ff0d66734bc1af537a36f453902c087a5ec" translate="yes" xml:space="preserve">
          <source>it is implemented, they just need to know</source>
          <target state="translated">он реализован,им просто нужно знать.</target>
        </trans-unit>
        <trans-unit id="5aff30627b547c2a01a9bb55f014f8a4f50a64aa" translate="yes" xml:space="preserve">
          <source>it is necessary to make a note of their addresses--thus the two variables &lt;code&gt;sva&lt;/code&gt; and &lt;code&gt;svb&lt;/code&gt; .</source>
          <target state="translated">необходимо сделать отметку своих адресов - таким образом две переменного &lt;code&gt;sva&lt;/code&gt; и &lt;code&gt;svb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e9959c9fffd7b05f3976705116788c5f70c5388" translate="yes" xml:space="preserve">
          <source>it is necessary to use either this:</source>
          <target state="translated">необходимо использовать либо это:</target>
        </trans-unit>
        <trans-unit id="310129d7662f2f9acf2e335aff9582946ee14a1c" translate="yes" xml:space="preserve">
          <source>it is not currently executed (see &lt;code&gt;DEPTH&lt;/code&gt; );</source>
          <target state="translated">в настоящее время он не выполняется (см. &lt;code&gt;DEPTH&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="0a9795eca7a07fa1ec5f54c4aca84e9b6ddd94be" translate="yes" xml:space="preserve">
          <source>it is probably because your LD_LIBRARY_PATH environment variable includes a directory which is a symlink to /usr/lib (such as /lib). The reason this causes a problem is quite subtle. The file libdl.so.1.0 actually *only* contains functions which generate 'stub interception failed' errors! The runtime linker intercepts links to &quot;/usr/lib/libdl.so.1.0&quot; and links in internal implementations of those functions instead. [Thanks to Tim Bunce for this explanation.]</source>
          <target state="translated">вероятно,потому,что переменная окружения LD_LIBRARY_PATH включает каталог,который является сим-ссылкой на /usr/lib (например,/lib).Причина,по которой это вызывает проблему,довольно тонкая.Файл libdl.so.1.0 фактически *только*содержит функции,которые генерируют ошибки 'stub interception failure'! Линкер среды выполнения перехватывает ссылки на &quot;/usr/lib/libdl.so.1.0&quot; и ссылки во внутренних реализациях этих функций.[Спасибо Тиму Бансу за это объяснение.]</target>
        </trans-unit>
        <trans-unit id="612612823271c4dd6d5f3ffd06e4c196c2f4cc3b" translate="yes" xml:space="preserve">
          <source>it is the parser who called the handler. The second line will print backtrace and die if &lt;code&gt;Carp&lt;/code&gt; was available. The third line will be executed only if &lt;code&gt;Carp&lt;/code&gt; was not available.</source>
          <target state="translated">обработчик вызвал парсер. Вторая строка напечатает обратную трассировку и умрет, если &lt;code&gt;Carp&lt;/code&gt; был доступен. Третья строка будет выполнена, только если &lt;code&gt;Carp&lt;/code&gt; не было.</target>
        </trans-unit>
        <trans-unit id="b58c9409bf16cf04174e7afa22fe71b231a9b517" translate="yes" xml:space="preserve">
          <source>it means you need to (re)run the</source>
          <target state="translated">это значит,что тебе нужно (пере)запустить</target>
        </trans-unit>
        <trans-unit id="8f446b862762106f931a1429d6239d02e83adc85" translate="yes" xml:space="preserve">
          <source>it prints two lines of output, a perhaps more useful outcome.</source>
          <target state="translated">он печатает две строки вывода,возможно,более полезный результат.</target>
        </trans-unit>
        <trans-unit id="3a6a63104db0674a31400a90bd3f6dedc040f2d3" translate="yes" xml:space="preserve">
          <source>it really means</source>
          <target state="translated">это действительно означает</target>
        </trans-unit>
        <trans-unit id="13fd5928c332d6966fcfc1b3936835e1f2fdd3ce" translate="yes" xml:space="preserve">
          <source>it should match, we would use the &lt;b&gt;anchor&lt;/b&gt; metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; . The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Some examples:</source>
          <target state="translated">он должен совпадать, мы будем использовать метасимволы &lt;b&gt;привязки &lt;/b&gt; &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;$&lt;/code&gt; . Якорь &lt;code&gt;^&lt;/code&gt; означает совпадение в начале строки, а якорь &lt;code&gt;$&lt;/code&gt; означает совпадение в конце строки или перед новой строкой в ​​конце строки. Некоторые примеры:</target>
        </trans-unit>
        <trans-unit id="e296f0161e64279421db490742dbd931d8bc8114" translate="yes" xml:space="preserve">
          <source>it uses.</source>
          <target state="translated">он использует.</target>
        </trans-unit>
        <trans-unit id="9740d8c8a2509877b0874f04a9fb40b6504cad81" translate="yes" xml:space="preserve">
          <source>it was given. There are a few types of Iterators available by default, all sub-classes of &lt;a href=&quot;parser/iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;. Choosing which iterator to use is the responsibility of the</source>
          <target state="translated">это было дано. По умолчанию доступно несколько типов итераторов, все подклассы &lt;a href=&quot;parser/iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt; . Выбор итератора для использования является обязанностью</target>
        </trans-unit>
        <trans-unit id="90f05049b267c672ac20306b59373a3c6dd17d68" translate="yes" xml:space="preserve">
          <source>it will be opened for reading. Likewise, the second argument will be written to. If the second argument does not exist but the parent directory does exist, then it will be created. Trying to copy a file into a non-existent directory is an error. Trying to copy a file on top of itself is also an error. &lt;code&gt;copy&lt;/code&gt; will not overwrite read-only files.</source>
          <target state="translated">он будет открыт для чтения. Точно так же будет записан второй аргумент. Если второй аргумент не существует, но родительский каталог существует, он будет создан. Попытка скопировать файл в несуществующий каталог - ошибка. Попытка скопировать файл поверх самого себя также является ошибкой. &lt;code&gt;copy&lt;/code&gt; не будет перезаписывать файлы, доступные только для чтения.</target>
        </trans-unit>
        <trans-unit id="85077e36260e1c964f3bb3d589eff39a4e93a0b6" translate="yes" xml:space="preserve">
          <source>it will still be a gv.</source>
          <target state="translated">это все равно будет ГВ.</target>
        </trans-unit>
        <trans-unit id="25c14feb4e8e18138f532db9509b63ad8f630a23" translate="yes" xml:space="preserve">
          <source>it would be better to keep a hash around like %USER_VARS and have variable references actually refer to entries in that hash:</source>
          <target state="translated">Было бы лучше держать хэш примерно как %USER_VARS и иметь ссылки на переменные,фактически ссылающиеся на записи в этом хэше:</target>
        </trans-unit>
        <trans-unit id="e5c94463c2fd1216a37265c6eb1ebb573441081f" translate="yes" xml:space="preserve">
          <source>it).</source>
          <target state="translated">it).</target>
        </trans-unit>
        <trans-unit id="7ab962e80665cb9cc68421c37b838570afc27fae" translate="yes" xml:space="preserve">
          <source>it.</source>
          <target state="translated">it.</target>
        </trans-unit>
        <trans-unit id="0a0be36bcf81cae54b4e92e27a7da272f28892ba" translate="yes" xml:space="preserve">
          <source>it; and it also doubles as a note about why it's being skipped. So in the first codeblock above, read the code as &quot;skip if MSWin -- (otherwise) test whether &lt;code&gt;thing($foo)&lt;/code&gt; is &lt;code&gt;thing($bar)&lt;/code&gt; &quot; or for the second case, &quot;skip unless MSWin...&quot;.</source>
          <target state="translated">Это; и он также служит примечанием о том, почему его пропускают. Таким образом , в первом кодоблок выше, читать код как &amp;laquo;пропустить , если MSWin - ( в противном случае) тест ли &lt;code&gt;thing($foo)&lt;/code&gt; является &lt;code&gt;thing($bar)&lt;/code&gt; &amp;raquo; или во втором случае, &amp;laquo;не пропустить , если MSWin ...&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="90665ca6c8810138a69c5d8421143bbaa3be9fa1" translate="yes" xml:space="preserve">
          <source>italic</source>
          <target state="translated">italic</target>
        </trans-unit>
        <trans-unit id="939d66a4b75f040c931e31b7a89333e45cd668cc" translate="yes" xml:space="preserve">
          <source>iterate</source>
          <target state="translated">iterate</target>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="translated">iterator</target>
        </trans-unit>
        <trans-unit id="4131f600eefaae3bd0bdca31fdfbd0ee66fd34df" translate="yes" xml:space="preserve">
          <source>iterator factory</source>
          <target state="translated">завод итераторов</target>
        </trans-unit>
        <trans-unit id="3bdff15b39ed0956a3ac055e7cb35e717df3ac4f" translate="yes" xml:space="preserve">
          <source>iterators</source>
          <target state="translated">iterators</target>
        </trans-unit>
        <trans-unit id="02b745e9b5e2fad4405c0c56805599232ff0da14" translate="yes" xml:space="preserve">
          <source>ithreads</source>
          <target state="translated">ithreads</target>
        </trans-unit>
        <trans-unit id="729ee8658c32bfd976df663131e9d855fadb0bd2" translate="yes" xml:space="preserve">
          <source>its parent classes are called (in depth-first, left-to-right order).</source>
          <target state="translated">его родительские классы вызываются (в порядке глубины-первый,слева направо).</target>
        </trans-unit>
        <trans-unit id="81f3fb4eaedb1a632822e8e071eaf79b0daa2a96" translate="yes" xml:space="preserve">
          <source>itself is perfectly fine and probably best to quote from, provided you can find a suitable quote there.</source>
          <target state="translated">само по себе идеально подходит и,возможно,лучше всего цитировать,при условии,что вы можете найти подходящее предложение там.</target>
        </trans-unit>
        <trans-unit id="a6597c4b9bc3a39747ccb10ba2dc28b25654f99e" translate="yes" xml:space="preserve">
          <source>itself, or the UNIX error message when it is not (i.e.</source>
          <target state="translated">себя или сообщение об ошибке UNIX,когда это не так (т.е.</target>
        </trans-unit>
        <trans-unit id="a448ee962c26966eb9ffb37083bad9b8255c68a0" translate="yes" xml:space="preserve">
          <source>itself. &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; was made available for hashes, and weak references now call uvar &lt;code&gt;get&lt;/code&gt; magic after a weakref has been cleared. The first feature is used to make field hashes intercept their keys upon access. The second one triggers garbage collection.</source>
          <target state="translated">сам. &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; был доступен для хэшей, а слабые ссылки теперь вызывают магию uvar &lt;code&gt;get&lt;/code&gt; после очистки weakref. Первая функция используется для того, чтобы хэши полей перехватывали свои ключи при доступе. Второй запускает сборку мусора.</target>
        </trans-unit>
        <trans-unit id="9080b7d46b4fc0390c228c28d01f17857e481e91" translate="yes" xml:space="preserve">
          <source>itself. This implements standard prototype processing. It can be changed, for a particular subroutine, by &lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker&lt;/a&gt;.</source>
          <target state="translated">сам. Это реализует стандартную обработку прототипа. Его можно изменить для конкретной подпрограммы с помощью &lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e65c84ea5ae8f9cb5f144e8560472c4a38ee73a9" translate="yes" xml:space="preserve">
          <source>itself: &lt;code&gt;NaN&lt;/code&gt; != &lt;code&gt;NaN&lt;/code&gt; .</source>
          <target state="translated">само: &lt;code&gt;NaN&lt;/code&gt; ! = &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e42ca91c60743cbedfdb7a86d0e6ca643050fa2" translate="yes" xml:space="preserve">
          <source>itself; you'll need some other means, (like &lt;a href=&quot;#charprop()&quot;&gt;charprop()&lt;/a&gt; or &lt;a href=&quot;#casespec()&quot;&gt;casespec()&lt;/a&gt; to get the full mapping.</source>
          <target state="translated">сам; вам понадобятся другие средства (например, &lt;a href=&quot;#charprop()&quot;&gt;charprop ()&lt;/a&gt; или &lt;a href=&quot;#casespec()&quot;&gt;casepec (),&lt;/a&gt; чтобы получить полное отображение.</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="ccb3219ddb6265babc86f9f9b3767241cd3c266d" translate="yes" xml:space="preserve">
          <source>jhi!at!iki.fi</source>
          <target state="translated">jhi!at!iki.fi</target>
        </trans-unit>
        <trans-unit id="89bd3e10c41e1404acf15c04b11b8f2b9abbc72b" translate="yes" xml:space="preserve">
          <source>jhi@iki.fi</source>
          <target state="translated">jhi@iki.fi</target>
        </trans-unit>
        <trans-unit id="b8c394cc17419bc3809e014896111af95fe7d3a9" translate="yes" xml:space="preserve">
          <source>job to watch CPAN, you could list all modules that need updating. First a quick and dirty way:</source>
          <target state="translated">задание смотреть CPAN,вы можете перечислить все модули,которые нуждаются в обновлении.Сначала быстрый и грязный способ:</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="5f399a3111bea0589bf7db3e0dfaba80af64407b" translate="yes" xml:space="preserve">
          <source>join EXPR,LIST</source>
          <target state="translated">присоединяйся к ЭКСПР,СПИСОК</target>
        </trans-unit>
        <trans-unit id="62d2c6aa803cca4cf9c65aa3e227bf0b61706b76" translate="yes" xml:space="preserve">
          <source>join is the same as catfile.</source>
          <target state="translated">соединение такое же,как и кошачий профиль.</target>
        </trans-unit>
        <trans-unit id="ca46fff3e67ab1620d4b1bde0a7edc21da9ca6b3" translate="yes" xml:space="preserve">
          <source>json_backend</source>
          <target state="translated">json_backend</target>
        </trans-unit>
        <trans-unit id="d95b79cfc988b3b165ceb830a9c8932d1b52cf18" translate="yes" xml:space="preserve">
          <source>just</source>
          <target state="translated">just</target>
        </trans-unit>
        <trans-unit id="eb0fc5922423716c9914d354f8212f007cc1f6ca" translate="yes" xml:space="preserve">
          <source>just like perl itself:</source>
          <target state="translated">как и сам Перл:</target>
        </trans-unit>
        <trans-unit id="f9d5ea726b7acb7a642a990df1dd7b92e603dab0" translate="yes" xml:space="preserve">
          <source>just the inverse of &lt;code&gt;:crlf&lt;/code&gt; : other layers which would affect the binary nature of the stream are also removed or disabled.</source>
          <target state="translated">просто инверсия &lt;code&gt;:crlf&lt;/code&gt; : другие слои, которые могут повлиять на двоичную природу потока, также удаляются или отключаются.</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="725ad17778a9ca9c4dcb68f53d1af1a0f509df54" translate="yes" xml:space="preserve">
          <source>k*pi/n</source>
          <target state="translated">k*pi/n</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="e2929051408c4d0d174e1354d7182008186218cd" translate="yes" xml:space="preserve">
          <source>key replacement</source>
          <target state="translated">замена ключа</target>
        </trans-unit>
        <trans-unit id="0ec928f0548a391077ef8e978657769f625ace95" translate="yes" xml:space="preserve">
          <source>keylen</source>
          <target state="translated">keylen</target>
        </trans-unit>
        <trans-unit id="a9d95efcc011e377892f55ea4ef1cf8af1bde1da" translate="yes" xml:space="preserve">
          <source>keypv</source>
          <target state="translated">keypv</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="163ff7ee9e20183b56bf466efd2816a9b2392c0c" translate="yes" xml:space="preserve">
          <source>keys ARRAY</source>
          <target state="translated">клавиши АРРЕЯ</target>
        </trans-unit>
        <trans-unit id="63c866479b55938ab0686f9368e0bdc3b1e2f798" translate="yes" xml:space="preserve">
          <source>keys EXPR</source>
          <target state="translated">клавиши EXPR</target>
        </trans-unit>
        <trans-unit id="a39fdcb0ec2b35fbb1b985ec7492d546a128c563" translate="yes" xml:space="preserve">
          <source>keys HASH</source>
          <target state="translated">клавиши HASH</target>
        </trans-unit>
        <trans-unit id="4401f84be4185188a39d2f59b42a57a00108ee4e" translate="yes" xml:space="preserve">
          <source>keys and values are NULL terminated. Unfortunately when Perl writes to DBM databases it doesn't use NULL termination, so your Perl application will have to manage NULL termination itself. When you write to the database you will have to use something like this:</source>
          <target state="translated">клавиши и значения NULL завершены.К сожалению,когда Perl записывает в DBM базы данных,он не использует NULL-терминации,поэтому ваше Perl приложение должно будет само управлять NULL-терминацией.Когда вы пишете в базу данных,вам придется использовать нечто подобное:</target>
        </trans-unit>
        <trans-unit id="0a2a3d72597603ea8cff70de3f7051f49cb67f9f" translate="yes" xml:space="preserve">
          <source>keys and values.</source>
          <target state="translated">ключи и ценности.</target>
        </trans-unit>
        <trans-unit id="6589889c96d31e938e419098b015444a16a2c3a2" translate="yes" xml:space="preserve">
          <source>kflags</source>
          <target state="translated">kflags</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="a4bc7bbb272a294f330eb938da9fb51c2fcc02c3" translate="yes" xml:space="preserve">
          <source>kill SIGNAL</source>
          <target state="translated">убить СИГНАЛА</target>
        </trans-unit>
        <trans-unit id="504bcebca3affd57921d61d9a779cae627657943" translate="yes" xml:space="preserve">
          <source>kill SIGNAL, LIST</source>
          <target state="translated">убить СИГНАЛА,СПИСОК</target>
        </trans-unit>
        <trans-unit id="23b08d7df16abcdad774dace7145903fd2c37725" translate="yes" xml:space="preserve">
          <source>kill(3)</source>
          <target state="translated">kill(3)</target>
        </trans-unit>
        <trans-unit id="8c834f073d4d1ae81525a98626e15bf01e8a71bd" translate="yes" xml:space="preserve">
          <source>kind of session by using the arguments &lt;code&gt;/fs&lt;/code&gt;, &lt;code&gt;/pm&lt;/code&gt; or &lt;code&gt;/win&lt;/code&gt; switches of the command &lt;code&gt;start&lt;/code&gt; (of</source>
          <target state="translated">вид сеанса с помощью переключателей аргументов &lt;code&gt;/fs&lt;/code&gt; , &lt;code&gt;/pm&lt;/code&gt; или &lt;code&gt;/win&lt;/code&gt; команды &lt;code&gt;start&lt;/code&gt; (of</target>
        </trans-unit>
        <trans-unit id="97accafb53377fd569bc568d3ffe8da985a568ef" translate="yes" xml:space="preserve">
          <source>know</source>
          <target state="translated">know</target>
        </trans-unit>
        <trans-unit id="dd21e4f392e3c1d0f7571bd4b34164706b1a24c3" translate="yes" xml:space="preserve">
          <source>know with absolute certainty</source>
          <target state="translated">знать с абсолютной уверенностью</target>
        </trans-unit>
        <trans-unit id="263c649e2937afe094a801dc2f1f8ff91cdebe67" translate="yes" xml:space="preserve">
          <source>known_to_exist</source>
          <target state="translated">known_to_exist</target>
        </trans-unit>
        <trans-unit id="4a8d3339c1aceb6e28d45d54ff0a8e537fcb31e8" translate="yes" xml:space="preserve">
          <source>ksh527rt.zip</source>
          <target state="translated">ksh527rt.zip</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="d6658a9defae77f1757cb09d67b818757cd24486" translate="yes" xml:space="preserve">
          <source>lack</source>
          <target state="translated">lack</target>
        </trans-unit>
        <trans-unit id="ff1aba81fe7b089d82562a718b3ef9c7213d6698" translate="yes" xml:space="preserve">
          <source>langinfo(3)</source>
          <target state="translated">langinfo(3)</target>
        </trans-unit>
        <trans-unit id="931a14650ec8c7a040f2eefd85a897f9590dc3c8" translate="yes" xml:space="preserve">
          <source>langinfo.h</source>
          <target state="translated">langinfo.h</target>
        </trans-unit>
        <trans-unit id="e11523c5ff23fc1600aca2d8ee5adb542c5ce4b3" translate="yes" xml:space="preserve">
          <source>language</source>
          <target state="translated">language</target>
        </trans-unit>
        <trans-unit id="07fd754169cbc14f32d8424ed7ff8efb4e828cf8" translate="yes" xml:space="preserve">
          <source>language code</source>
          <target state="translated">код языка</target>
        </trans-unit>
        <trans-unit id="71d7102c1da6fbbced9f583db6704477f11ced56" translate="yes" xml:space="preserve">
          <source>language_territory</source>
          <target state="translated">language_territory</target>
        </trans-unit>
        <trans-unit id="0265a28be8ae180d9d231879cc522733ad7d4408" translate="yes" xml:space="preserve">
          <source>languages</source>
          <target state="translated">languages</target>
        </trans-unit>
        <trans-unit id="2f1e0b0dc470f71151ce6738e9f7be38a0687dde" translate="yes" xml:space="preserve">
          <source>large enough to take one return value.</source>
          <target state="translated">достаточно большой,чтобы принять одно возвратное значение.</target>
        </trans-unit>
        <trans-unit id="741ba1f0f1533ece02fff2b65d8dc483692f9691" translate="yes" xml:space="preserve">
          <source>larry (at) wall.org</source>
          <target state="translated">larry (at)wall.org</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="b30b6273b59dad174d1c29542b336882ec42ce47" translate="yes" xml:space="preserve">
          <source>last EXPR</source>
          <target state="translated">последний ЭКСПР</target>
        </trans-unit>
        <trans-unit id="8d3bc2f9e8b72940971c417ffcb4831427b7f071" translate="yes" xml:space="preserve">
          <source>last LABEL</source>
          <target state="translated">последняя МАРКА</target>
        </trans-unit>
        <trans-unit id="6fbebf65db8c9e119786b6069e55d8a57449239d" translate="yes" xml:space="preserve">
          <source>last successful match</source>
          <target state="translated">последний успешный матч</target>
        </trans-unit>
        <trans-unit id="6fc4291b99bc40e0a1e6058f237b9032e2a2cb98" translate="yes" xml:space="preserve">
          <source>last_error()</source>
          <target state="translated">last_error()</target>
        </trans-unit>
        <trans-unit id="5f4c3aef2b495c636e2cc379a207951285dc8022" translate="yes" xml:space="preserve">
          <source>laszlo.molnar@eth.ericsson.se</source>
          <target state="translated">laszlo.molnar@eth.ericsson.se</target>
        </trans-unit>
        <trans-unit id="d54c2aa2f61603022c71493f093f0c718419ca13" translate="yes" xml:space="preserve">
          <source>layer</source>
          <target state="translated">layer</target>
        </trans-unit>
        <trans-unit id="388d8a5d86f4ff95a659c127ad269f1e2328643c" translate="yes" xml:space="preserve">
          <source>layer uses native &quot;handle&quot; IO rather than a Unix-like numeric file descriptor layer. Known to be buggy in this release (5.14).</source>
          <target state="translated">слой использует собственный IO &quot;handle&quot;,а не Unix-подобный слой числовых файловых дескрипторов.Известна ошибка в этом релизе (5.14).</target>
        </trans-unit>
        <trans-unit id="9f422a843a976db035a8ac6578fed83f92e8401c" translate="yes" xml:space="preserve">
          <source>layer uses the native &quot;handle&quot; IO rather than the unix-like numeric file descriptor layer. Known to be buggy as of perl 5.8.2.</source>
          <target state="translated">слой использует собственный IO &quot;handle&quot;,а не уникс-подобный слой числовых файловых дескрипторов.Известен как багги по версии 5.8.2.</target>
        </trans-unit>
        <trans-unit id="668165d561c62f330e96b629c4cdbaaa6a959900" translate="yes" xml:space="preserve">
          <source>layers</source>
          <target state="translated">layers</target>
        </trans-unit>
        <trans-unit id="7a01ac075bef9978a02e0d617581075e7ef656ff" translate="yes" xml:space="preserve">
          <source>lc</source>
          <target state="translated">lc</target>
        </trans-unit>
        <trans-unit id="981c93d3cfc093341a5e23cfb2960d27a0bd9b18" translate="yes" xml:space="preserve">
          <source>lc EXPR</source>
          <target state="translated">lc EXPR</target>
        </trans-unit>
        <trans-unit id="03dac16c5a7ea4584e45233fb1fe739d834da705" translate="yes" xml:space="preserve">
          <source>lcfirst</source>
          <target state="translated">lcfirst</target>
        </trans-unit>
        <trans-unit id="4bf10c7c0cf1b946d82e323d34632248cbe61a5a" translate="yes" xml:space="preserve">
          <source>lcfirst EXPR</source>
          <target state="translated">lcfirst EXPR</target>
        </trans-unit>
        <trans-unit id="b9a7e2303793d6c9a795bf7a60a5c58ebb7bae1d" translate="yes" xml:space="preserve">
          <source>ld.script</source>
          <target state="translated">ld.script</target>
        </trans-unit>
        <trans-unit id="593b743b207e10ff55ec63e71a46c07909d0880a" translate="yes" xml:space="preserve">
          <source>le</source>
          <target state="translated">le</target>
        </trans-unit>
        <trans-unit id="2543258632dcde1c9dda11f400265f9020598acd" translate="yes" xml:space="preserve">
          <source>leaves drive as it is.</source>
          <target state="translated">оставляет ехать как есть.</target>
        </trans-unit>
        <trans-unit id="bee3025990c10dd732e7c46a8b2b715a1dcda3b5" translate="yes" xml:space="preserve">
          <source>leaves the &lt;code&gt;%hash&lt;/code&gt; empty rather than with its original contents.</source>
          <target state="translated">оставляет &lt;code&gt;%hash&lt;/code&gt; пустым, а не с исходным содержимым.</target>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="translated">left</target>
        </trans-unit>
        <trans-unit id="4737fa4317b3dbfbe0793f4d77a61ff4da1af746" translate="yes" xml:space="preserve">
          <source>leftmost</source>
          <target state="translated">leftmost</target>
        </trans-unit>
        <trans-unit id="2f936e05c77962997bd534a0c03a5b28d0a9e6e7" translate="yes" xml:space="preserve">
          <source>legitimately return &lt;code&gt;-1&lt;/code&gt; . The proper way to handle such calls is to assign &lt;code&gt;$!=0&lt;/code&gt; before the call, then check the value of &lt;code&gt;$!&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; .</source>
          <target state="translated">законно вернуть &lt;code&gt;-1&lt;/code&gt; . Правильный способ обработки таких вызовов - присвоить &lt;code&gt;$!=0&lt;/code&gt; перед вызовом, а затем проверить значение &lt;code&gt;$!&lt;/code&gt; если &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fb3cd5ef7f4ba25ee7e799860a861432c55551d" translate="yes" xml:space="preserve">
          <source>legitimately return &lt;code&gt;-1&lt;/code&gt; . The proper way to handle such calls is to assign &lt;code&gt;$!=0&lt;/code&gt; before the call, then check the value of &lt;code&gt;$!&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; .</source>
          <target state="translated">законно вернуть &lt;code&gt;-1&lt;/code&gt; . Правильный способ обработки таких вызовов - присвоить &lt;code&gt;$!=0&lt;/code&gt; перед вызовом, а затем проверить значение &lt;code&gt;$!&lt;/code&gt; если &lt;code&gt;&lt;a href=&quot;syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="53200d1265f64527de5997006b46bed16c623ba8" translate="yes" xml:space="preserve">
          <source>length EXPR</source>
          <target state="translated">длина EXPR</target>
        </trans-unit>
        <trans-unit id="12126f713e2c6e2b378ad7286a6bc4fa4da0d2f3" translate="yes" xml:space="preserve">
          <source>length()</source>
          <target state="translated">length()</target>
        </trans-unit>
        <trans-unit id="17ad2831729fd442f864db7688784dfbf7955cba" translate="yes" xml:space="preserve">
          <source>length-item</source>
          <target state="translated">length-item</target>
        </trans-unit>
        <trans-unit id="0b439cf4e10f87567e60f4b7818ecd57383dc7f0" translate="yes" xml:space="preserve">
          <source>less</source>
          <target state="translated">less</target>
        </trans-unit>
        <trans-unit id="78efad5671f5e78b02faa6a4a581a424dceb0730" translate="yes" xml:space="preserve">
          <source>less - perl pragma to request less of something</source>
          <target state="translated">меньше-perl прагма требовать меньше чего-то</target>
        </trans-unit>
        <trans-unit id="02f3496dc7765194620a1d6fcb556b38dd666197" translate="yes" xml:space="preserve">
          <source>less time</source>
          <target state="translated">меньшее время</target>
        </trans-unit>
        <trans-unit id="4c213394c05bbaa2e6986dee2a278be573c9f3eb" translate="yes" xml:space="preserve">
          <source>less(1) manpage</source>
          <target state="translated">минус(1)манпаж</target>
        </trans-unit>
        <trans-unit id="111d45df9732173914935953b636771bd1fe2f90" translate="yes" xml:space="preserve">
          <source>lets us evaluate individual Perl strings, and then extract variables for coercion into C types. The following program,</source>
          <target state="translated">позволяет оценить отдельные строки Perl,а затем извлечь переменные для принуждения в типы C.Следующая программа,</target>
        </trans-unit>
        <trans-unit id="ad60c535ff88e85bf0254452fe3934f24e9668d5" translate="yes" xml:space="preserve">
          <source>level</source>
          <target state="translated">level</target>
        </trans-unit>
        <trans-unit id="bb1350a57d9ad1cedc41dbe6c123e723b0969cc3" translate="yes" xml:space="preserve">
          <source>level &lt;code&gt;PerlIO *&lt;/code&gt; is a pointer to a &lt;code&gt;PerlIOl *&lt;/code&gt; - i.e. a pointer to a pointer to the struct. This allows the application level &lt;code&gt;PerlIO *&lt;/code&gt; to remain constant while the actual &lt;code&gt;PerlIOl *&lt;/code&gt; underneath changes. (Compare perl's &lt;code&gt;SV *&lt;/code&gt; which remains constant while its &lt;code&gt;sv_any&lt;/code&gt; field changes as the scalar's type changes.) An IO stream is then in general represented as a pointer to this linked-list of &quot;layers&quot;.</source>
          <target state="translated">level &lt;code&gt;PerlIO *&lt;/code&gt; - это указатель на &lt;code&gt;PerlIOl *&lt;/code&gt; , то есть указатель на указатель на структуру. Это позволяет &lt;code&gt;PerlIO *&lt;/code&gt; уровня приложения оставаться постоянным, в то время как фактический &lt;code&gt;PerlIOl *&lt;/code&gt; под ним изменяется. (Сравните &lt;code&gt;SV *&lt;/code&gt; perl, который остается постоянным, в то время как его поле &lt;code&gt;sv_any&lt;/code&gt; изменяется по мере изменения типа скаляра.) Поток ввода-вывода затем обычно представляется как указатель на этот связанный список &amp;laquo;слоев&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6a34b2d4b71d3ddc27cc52fb35135ac1c5dbe44f" translate="yes" xml:space="preserve">
          <source>level. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\$a)&lt;/a&gt;&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a)&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\\$a)&lt;/a&gt;&lt;/code&gt; is not.</source>
          <target state="translated">уровень. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\$a)&lt;/a&gt;&lt;/code&gt; эквивалентно &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock($a)&lt;/a&gt;&lt;/code&gt; , а &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock(\\$a)&lt;/a&gt;&lt;/code&gt; - нет.</target>
        </trans-unit>
        <trans-unit id="743e8359279cf7f0547f8ae5b735a7cf348aa31e" translate="yes" xml:space="preserve">
          <source>level:</source>
          <target state="translated">level:</target>
        </trans-unit>
        <trans-unit id="f560237bb64a4ed60f6ec30a321ae364eeccfc8d" translate="yes" xml:space="preserve">
          <source>levels deep, as if the &lt;code&gt;dumpDepth&lt;/code&gt; option had been temporarily set to</source>
          <target state="translated">уровней, как если &lt;code&gt;dumpDepth&lt;/code&gt; опция dumpDepth была временно установлена ​​на</target>
        </trans-unit>
        <trans-unit id="87c2760ff0fd836e950d1f3773814e8602f382f6" translate="yes" xml:space="preserve">
          <source>lewart!at!uiuc.edu</source>
          <target state="translated">lewart!at!uiuc.edu</target>
        </trans-unit>
        <trans-unit id="7f9b3be17a93e598368695b2b13dcc4f05f4fa36" translate="yes" xml:space="preserve">
          <source>lexical scope</source>
          <target state="translated">лексический охват</target>
        </trans-unit>
        <trans-unit id="a98b7cb4e1d62107700706f49e9bed1cbf5694db" translate="yes" xml:space="preserve">
          <source>lexical variables created with my(). Typically it would be the first declaration in a file included by the &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; operators. You can switch into a package in more than one place; it merely influences which symbol table is used by the compiler for the rest of that block. You can refer to variables and filehandles in other packages by prefixing the identifier with the package name and a double colon: &lt;code&gt;$Package::Variable&lt;/code&gt; . If the package name is null, the &lt;code&gt;main&lt;/code&gt; package is assumed. That is, &lt;code&gt;$::sail&lt;/code&gt; is equivalent to &lt;code&gt;$main::sail&lt;/code&gt; .</source>
          <target state="translated">лексические переменные, созданные с помощью my (). Обычно это первое объявление в файле, включаемом операторами &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; . Вы можете переключиться на пакет более чем в одном месте; он просто влияет на то, какая таблица символов используется компилятором для остальной части этого блока. Вы можете ссылаться на переменные и дескрипторы файлов в других пакетах, добавив к идентификатору имя пакета и двойное двоеточие: &lt;code&gt;$Package::Variable&lt;/code&gt; . Если имя пакета равно нулю, предполагается , что это &lt;code&gt;main&lt;/code&gt; пакет. То есть &lt;code&gt;$::sail&lt;/code&gt; эквивалентно &lt;code&gt;$main::sail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e71249801b330ab4aa5e2053a29f296dbb0e328f" translate="yes" xml:space="preserve">
          <source>lexically-scoped variables, which are created with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;. Typically it would be the first declaration in a file included by &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;. You can switch into a package in more than one place, since this only determines which default symbol table the compiler uses for the rest of that block. You can refer to identifiers in other packages than the current one by prefixing the identifier with the package name and a double colon, as in &lt;code&gt;$SomePack::var&lt;/code&gt; or &lt;code&gt;ThatPack::INPUT_HANDLE&lt;/code&gt; . If package name is omitted, the &lt;code&gt;main&lt;/code&gt; package as assumed. That is, &lt;code&gt;$::sail&lt;/code&gt; is equivalent to &lt;code&gt;$main::sail&lt;/code&gt; (as well as to &lt;code&gt;$main'sail&lt;/code&gt; , still seen in ancient code, mostly from Perl 4).</source>
          <target state="translated">переменные с лексической областью видимости, которые создаются с помощью &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; . Обычно это первое объявление в файле, включенном с помощью &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; . Вы можете переключиться на пакет более чем в одном месте, поскольку это только определяет, какую таблицу символов по умолчанию компилятор использует для остальной части этого блока. Вы можете ссылаться на идентификаторы в других пакетах, кроме текущего, поставив перед идентификатором имя пакета и двойное двоеточие, как в &lt;code&gt;$SomePack::var&lt;/code&gt; или &lt;code&gt;ThatPack::INPUT_HANDLE&lt;/code&gt; . Если имя пакета не указано , подразумевается &lt;code&gt;main&lt;/code&gt; пакет. То есть &lt;code&gt;$::sail&lt;/code&gt; эквивалентно &lt;code&gt;$main::sail&lt;/code&gt; (а также &lt;code&gt;$main'sail&lt;/code&gt; , который все еще встречается в древнем коде, в основном из Perl 4).</target>
        </trans-unit>
        <trans-unit id="3d04adc74c945063bcc590f133adcf214df94a9c" translate="yes" xml:space="preserve">
          <source>lexically-scoped variables, which are created with &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;. Typically it would be the first declaration in a file included by &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;. You can switch into a package in more than one place, since this only determines which default symbol table the compiler uses for the rest of that block. You can refer to identifiers in other packages than the current one by prefixing the identifier with the package name and a double colon, as in &lt;code&gt;$SomePack::var&lt;/code&gt; or &lt;code&gt;ThatPack::INPUT_HANDLE&lt;/code&gt; . If package name is omitted, the &lt;code&gt;main&lt;/code&gt; package as assumed. That is, &lt;code&gt;$::sail&lt;/code&gt; is equivalent to &lt;code&gt;$main::sail&lt;/code&gt; (as well as to &lt;code&gt;$main'sail&lt;/code&gt; , still seen in ancient code, mostly from Perl 4).</source>
          <target state="translated">переменные с лексической областью видимости, которые создаются с помощью &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; . Обычно это первое объявление в файле, включенном с помощью &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; . Вы можете переключиться на пакет более чем в одном месте, поскольку это только определяет, какую таблицу символов по умолчанию компилятор использует для остальной части этого блока. Вы можете ссылаться на идентификаторы в других пакетах, кроме текущего, поставив перед идентификатором имя пакета и двойное двоеточие, как в &lt;code&gt;$SomePack::var&lt;/code&gt; или &lt;code&gt;ThatPack::INPUT_HANDLE&lt;/code&gt; . Если имя пакета не указано , подразумевается &lt;code&gt;main&lt;/code&gt; пакет. То есть &lt;code&gt;$::sail&lt;/code&gt; эквивалентно &lt;code&gt;$main::sail&lt;/code&gt; (а также &lt;code&gt;$main'sail&lt;/code&gt; , который все еще встречается в древнем коде, в основном из Perl 4).</target>
        </trans-unit>
        <trans-unit id="f8df771d8fad6fc4d6a6e0fdcf32235fee4d432f" translate="yes" xml:space="preserve">
          <source>lha -mraxe x perl-$VERSION-bin.lha</source>
          <target state="translated">лха -мракс x перл-$ВЕРСИОН-бин.лха</target>
        </trans-unit>
        <trans-unit id="9d062bafff17ba8b9a1215c4c51485134d509d91" translate="yes" xml:space="preserve">
          <source>lib</source>
          <target state="translated">lib</target>
        </trans-unit>
        <trans-unit id="b2f1aa4618f8511782e93f2b2456425e658657ba" translate="yes" xml:space="preserve">
          <source>lib - manipulate @INC at compile time</source>
          <target state="translated">lib-манипулировать @INC во время компиляции.</target>
        </trans-unit>
        <trans-unit id="3e4e355eb6719577404ce98223a2b88d539b0d05" translate="yes" xml:space="preserve">
          <source>lib and lib</source>
          <target state="translated">свобода и свобода</target>
        </trans-unit>
        <trans-unit id="2f44e7def4cb27180b53a038d394266e50a43a80" translate="yes" xml:space="preserve">
          <source>lib.exe is normally used to build libraries, but link.exe with the /lib option also works, so change win32/config.vc to use it instead:</source>
          <target state="translated">lib.exe обычно используется для сборки библиотек,но линк.exe с опцией /lib также работает,так что измените win32/config.vc,чтобы использовать его вместо этого:</target>
        </trans-unit>
        <trans-unit id="70070d20d4c6e863f10cb8b6749cc4b4efaf6027" translate="yes" xml:space="preserve">
          <source>lib/</source>
          <target state="translated">lib/</target>
        </trans-unit>
        <trans-unit id="6e588d0eb09843bb85142c36159b59cc3a27a40b" translate="yes" xml:space="preserve">
          <source>lib/Config.pm</source>
          <target state="translated">lib/Config.pm</target>
        </trans-unit>
        <trans-unit id="88d614c0b84efc336051bce3e13eb562d0b8f337" translate="yes" xml:space="preserve">
          <source>lib/ExtUtils</source>
          <target state="translated">lib/ExtUtils</target>
        </trans-unit>
        <trans-unit id="6cb8d15061262831ec39b62c9b20c092a3811f47" translate="yes" xml:space="preserve">
          <source>lib/ExtUtils/typemap</source>
          <target state="translated">lib/ExtUtils/typemap</target>
        </trans-unit>
        <trans-unit id="b5f40c50a611e165a0d206a1e6ef0db737b90e30" translate="yes" xml:space="preserve">
          <source>lib/File.Copy.t</source>
          <target state="translated">lib/File.Copy.t</target>
        </trans-unit>
        <trans-unit id="359125af2199801e53d858f9b4a05dcfff8322c6" translate="yes" xml:space="preserve">
          <source>lib/File/Find/taint.t will complain if '.' is in your PATH. The PATH test is triggered because cwd calls `fullpath -t`.</source>
          <target state="translated">lib/File/Find/taint.t будет жаловаться,если '...' находится в вашем PATH.Тест PATH срабатывает,потому что cwd вызывает `fullpath -t`.</target>
        </trans-unit>
        <trans-unit id="90bdcb6812853a7d5bb4ee449e1c2c3938e5b2d9" translate="yes" xml:space="preserve">
          <source>lib/Foo/Bar.pm</source>
          <target state="translated">lib/Foo/Bar.pm</target>
        </trans-unit>
        <trans-unit id="ee16f92d5b61d6587e8d9ccdeea55a375ff6035b" translate="yes" xml:space="preserve">
          <source>lib/Net/Ping/t/450_service.t</source>
          <target state="translated">lib/Net/Ping/t/450_service.t</target>
        </trans-unit>
        <trans-unit id="d42828e03450bbbdcf272afa864cdef4d3a51548" translate="yes" xml:space="preserve">
          <source>lib/Net/Ping/t/510_ping_udp.t</source>
          <target state="translated">lib/Net/Ping/t/510_ping_udp.t</target>
        </trans-unit>
        <trans-unit id="c3d52f60d978ab23a551b74a528a88ef76b18b9a" translate="yes" xml:space="preserve">
          <source>lib/Tie/File/t/09_gen_rs</source>
          <target state="translated">lib/Tie/File/t/09_gen_rs</target>
        </trans-unit>
        <trans-unit id="4c33170bdd26012203a6bd904dd58f36f73a7acd" translate="yes" xml:space="preserve">
          <source>lib/encoding.pm</source>
          <target state="translated">lib/encoding.pm</target>
        </trans-unit>
        <trans-unit id="7c2f483f24dee82ab5e37fd3f7bc02bfb93f9406" translate="yes" xml:space="preserve">
          <source>lib/filehand.t</source>
          <target state="translated">lib/filehand.t</target>
        </trans-unit>
        <trans-unit id="7a322f1fd2b67495d6c867548d84c9ad2bdbe5bf" translate="yes" xml:space="preserve">
          <source>lib/io_pipe.t</source>
          <target state="translated">lib/io_pipe.t</target>
        </trans-unit>
        <trans-unit id="3a9b601afa6c15ad5a349cf79626adae81beecac" translate="yes" xml:space="preserve">
          <source>lib/io_sock.t</source>
          <target state="translated">lib/io_sock.t</target>
        </trans-unit>
        <trans-unit id="825cd0dceebc1d8a0d92ad3966e3ba313c1b1a28" translate="yes" xml:space="preserve">
          <source>lib/lib.pm</source>
          <target state="translated">lib/lib.pm</target>
        </trans-unit>
        <trans-unit id="923b9d7545d00ab27b36e6bb97d33d75634fd485" translate="yes" xml:space="preserve">
          <source>lib/locale</source>
          <target state="translated">lib/locale</target>
        </trans-unit>
        <trans-unit id="0c546992c69ba3886efe8a1a342e4bdbdd95501f" translate="yes" xml:space="preserve">
          <source>lib/locale.t</source>
          <target state="translated">lib/locale.t</target>
        </trans-unit>
        <trans-unit id="d1217cb3b51bf20fe9331bf068816bab61666762" translate="yes" xml:space="preserve">
          <source>lib/open2.t</source>
          <target state="translated">lib/open2.t</target>
        </trans-unit>
        <trans-unit id="7ba11ac14c123959f471691ad31f8b9e84071f76" translate="yes" xml:space="preserve">
          <source>lib/open3.t</source>
          <target state="translated">lib/open3.t</target>
        </trans-unit>
        <trans-unit id="dca0301922534d763ca928ed51e26d8d7783ac18" translate="yes" xml:space="preserve">
          <source>lib/os2_base.t</source>
          <target state="translated">lib/os2_base.t</target>
        </trans-unit>
        <trans-unit id="b8a31ed89dabfffde341b60fd6def6e2c4cc790d" translate="yes" xml:space="preserve">
          <source>lib/perl5</source>
          <target state="translated">lib/perl5</target>
        </trans-unit>
        <trans-unit id="6ba6abb3f64776aa2bb42c96ddc804d4f76ad985" translate="yes" xml:space="preserve">
          <source>lib/strict.pm</source>
          <target state="translated">lib/strict.pm</target>
        </trans-unit>
        <trans-unit id="cf7fc3fcb8b41426b779c987cf3aca145cf46d4c" translate="yes" xml:space="preserve">
          <source>lib/strict.t</source>
          <target state="translated">lib/strict.t</target>
        </trans-unit>
        <trans-unit id="ddf8ccfcb95095226146ff022a9d2f0be94e8d6a" translate="yes" xml:space="preserve">
          <source>lib/syslog.pl</source>
          <target state="translated">lib/syslog.pl</target>
        </trans-unit>
        <trans-unit id="1166bbdf921fa064d4af52b7666490126994f4a9" translate="yes" xml:space="preserve">
          <source>lib/unicore</source>
          <target state="translated">lib/unicore</target>
        </trans-unit>
        <trans-unit id="cb9a2c1b60529371b5aabb0dec31114a2cd72447" translate="yes" xml:space="preserve">
          <source>lib/unicore/To/Foo.pl</source>
          <target state="translated">lib/unicore/To/Foo.pl</target>
        </trans-unit>
        <trans-unit id="2747fd594c4b9098dce15bd69891f3bc7497352a" translate="yes" xml:space="preserve">
          <source>lib/utf8_heavy.pl</source>
          <target state="translated">lib/utf8_heavy.pl</target>
        </trans-unit>
        <trans-unit id="24de2ffa9a7f68a0eaa022fb4d1fc4463cfa7e32" translate="yes" xml:space="preserve">
          <source>libc.U</source>
          <target state="translated">libc.U</target>
        </trans-unit>
        <trans-unit id="9a7905485cd7dad121e13853f453e6168bd685d8" translate="yes" xml:space="preserve">
          <source>libc.so</source>
          <target state="translated">libc.so</target>
        </trans-unit>
        <trans-unit id="ee31a39d4f700ded23ada0ac425f08d9e326043b" translate="yes" xml:space="preserve">
          <source>libcrypt.a</source>
          <target state="translated">libcrypt.a</target>
        </trans-unit>
        <trans-unit id="bb4b26014a9639424988e36bd9e9631832ba04ee" translate="yes" xml:space="preserve">
          <source>libfoo.so.x.y</source>
          <target state="translated">libfoo.so.x.y</target>
        </trans-unit>
        <trans-unit id="9829f920f0965cefd46bd5339f19e3726df34195" translate="yes" xml:space="preserve">
          <source>libname.*</source>
          <target state="translated">libname.*</target>
        </trans-unit>
        <trans-unit id="6084610ec2669c79b3e40c2f469167b5d6ed050c" translate="yes" xml:space="preserve">
          <source>libnetcfg</source>
          <target state="translated">libnetcfg</target>
        </trans-unit>
        <trans-unit id="90297287291496c46cc19f11bcc1f29641bcddf1" translate="yes" xml:space="preserve">
          <source>libnetcfg - configure libnet</source>
          <target state="translated">libnetcfg-настроить libnet</target>
        </trans-unit>
        <trans-unit id="63602837884f246bbae970ebe1bf1483d5d73d94" translate="yes" xml:space="preserve">
          <source>libperl and Prebinding</source>
          <target state="translated">расклейка и переплёт</target>
        </trans-unit>
        <trans-unit id="f7ae8185c2b40033375a90176334bf18119d8934" translate="yes" xml:space="preserve">
          <source>libperl.U</source>
          <target state="translated">libperl.U</target>
        </trans-unit>
        <trans-unit id="4c488f9ca04f4580fea44d70fa258f265b01e0cc" translate="yes" xml:space="preserve">
          <source>libperl.a</source>
          <target state="translated">libperl.a</target>
        </trans-unit>
        <trans-unit id="ce9ec3d509b9cb6dfb7bd31e34ac9c1c393f59bd" translate="yes" xml:space="preserve">
          <source>libperl.a equivalent to be linked to dynamic extensions.</source>
          <target state="translated">libperl.a равнозначен динамическим расширениям.</target>
        </trans-unit>
        <trans-unit id="c5125c991d100a81bb2ab1cf4fc9d757db8bfc62" translate="yes" xml:space="preserve">
          <source>libperl.so</source>
          <target state="translated">libperl.so</target>
        </trans-unit>
        <trans-unit id="db5e46f473e00611def3d06a7cfd97ddab2aa182" translate="yes" xml:space="preserve">
          <source>libperl.so.xxx</source>
          <target state="translated">libperl.so.xxx</target>
        </trans-unit>
        <trans-unit id="ca2af9f2d6220fa51e710bd922000bfeed15c0dc" translate="yes" xml:space="preserve">
          <source>libpth.U</source>
          <target state="translated">libpth.U</target>
        </trans-unit>
        <trans-unit id="bbb082b7d49e9ad809e7f9a2a142296533c655d0" translate="yes" xml:space="preserve">
          <source>libraries for these Perl modules in the places where Perl builder can find it. Use the perl builder: change to an empty directory, create a &quot;dummy&quot;</source>
          <target state="translated">библиотек для этих Perl-модулей в тех местах,где его может найти сборщик Perl.Использовать сборщик Perl:перейти в пустой каталог,создать &quot;манекен&quot;.</target>
        </trans-unit>
        <trans-unit id="8880a921e4238ca055e788428a2b131cc2e7f2b9" translate="yes" xml:space="preserve">
          <source>library and the CPAN module Devel::Symdump make use of this.</source>
          <target state="translated">Используйте эту библиотеку и CPAN модуль Devel::Symdump.</target>
        </trans-unit>
        <trans-unit id="2f7cc5c519e417b541aeee641af55dc3a4f0071e" translate="yes" xml:space="preserve">
          <source>library provides some of the features of &lt;a href=&quot;test/more&quot;&gt;Test::More&lt;/a&gt;, but avoids loading most modules and uses as few core features as possible.</source>
          <target state="translated">библиотека предоставляет некоторые возможности &lt;a href=&quot;test/more&quot;&gt;Test :: More&lt;/a&gt; , но избегает загрузки большинства модулей и использует как можно меньше основных функций.</target>
        </trans-unit>
        <trans-unit id="1e947160fbbc3e7ddc94d7fbd4dacb40584ed854" translate="yes" xml:space="preserve">
          <source>library, it combines the features of the</source>
          <target state="translated">библиотека,она сочетает в себе черты</target>
        </trans-unit>
        <trans-unit id="9077bdb27b2b8fc9d2176658752393ca1567f26a" translate="yes" xml:space="preserve">
          <source>library.</source>
          <target state="translated">library.</target>
        </trans-unit>
        <trans-unit id="0778ef88b4665f4828dc51d97a9ae6838afa94b7" translate="yes" xml:space="preserve">
          <source>libs.U</source>
          <target state="translated">libs.U</target>
        </trans-unit>
        <trans-unit id="144fc6d389a583f77c5db29ae574196dcd379d0e" translate="yes" xml:space="preserve">
          <source>libscan</source>
          <target state="translated">libscan</target>
        </trans-unit>
        <trans-unit id="655f1ebeeea52ff6ced2d5d719c659190eb535f6" translate="yes" xml:space="preserve">
          <source>libswanted.</source>
          <target state="translated">libswanted.</target>
        </trans-unit>
        <trans-unit id="d2b824675a5f9e2232ba65db94d4f79ecf3f41d5" translate="yes" xml:space="preserve">
          <source>lies with its &lt;code&gt;NOFILE&lt;/code&gt; define on some systems, so you may have to set</source>
          <target state="translated">лежит в его &lt;code&gt;NOFILE&lt;/code&gt; , определенном в некоторых системах, поэтому вам, возможно, придется установить</target>
        </trans-unit>
        <trans-unit id="595dc278b205ed9d7c9ccf298b931232c9af0f83" translate="yes" xml:space="preserve">
          <source>like PAD_SET_CUR, but without the save</source>
          <target state="translated">как PAD_SET_CUR,но без сохранения...</target>
        </trans-unit>
        <trans-unit id="e95ce206fd1a318d3e2f9217a8174734c6d41c1c" translate="yes" xml:space="preserve">
          <source>like a function, therefore it</source>
          <target state="translated">как функция,поэтому она</target>
        </trans-unit>
        <trans-unit id="e75ea1c71ebd23a635b7661517fc60719e8aaa98" translate="yes" xml:space="preserve">
          <source>like compound statements, but aren't--they're just TERMs in an expression--and thus need an explicit termination when used as the last item in a statement.</source>
          <target state="translated">как составные операторы,но они не являются...они просто TERM в выражении...и поэтому нуждаются в явном прекращении при использовании в качестве последнего элемента в выражении.</target>
        </trans-unit>
        <trans-unit id="37f4b3cd257d5cd56ad06fcb46e522be8648e4d5" translate="yes" xml:space="preserve">
          <source>like numbers; using an array as though it were a scalar; if your subroutines recurse more than 100 deep; and innumerable other things.</source>
          <target state="translated">как числа;использование массива как скаляра;если ваши подпрограммы повторяются более чем на 100 глубин;и бесчисленное множество других вещей.</target>
        </trans-unit>
        <trans-unit id="0bda6e11e3d8223f3fcb2ce089532445618666fd" translate="yes" xml:space="preserve">
          <source>like script.</source>
          <target state="translated">как сценарий.</target>
        </trans-unit>
        <trans-unit id="16edf2fbf12671a4b8e8311124a75cf929f82f3d" translate="yes" xml:space="preserve">
          <source>like this:</source>
          <target state="translated">вот так:</target>
        </trans-unit>
        <trans-unit id="7c4d7e807c0f90aca43d9fe1a786427248bc77ec" translate="yes" xml:space="preserve">
          <source>like to use double quotes, except that in this particular situation, you can just use symbolic references instead, as in case 6.</source>
          <target state="translated">любят использовать двойные кавычки,за исключением того,что в данной конкретной ситуации можно просто использовать символические ссылки,как в случае с 6.</target>
        </trans-unit>
        <trans-unit id="3dd3164fb4c19bfd6a7a909b343e98a2715ee1fe" translate="yes" xml:space="preserve">
          <source>likely</source>
          <target state="translated">likely</target>
        </trans-unit>
        <trans-unit id="c50ed56476fa6fe2fc32cf117ca281f12027cc8b" translate="yes" xml:space="preserve">
          <source>limits itself to real numbers, but an extra &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement brings full complex support, along with a full set of mathematical functions typically associated with and/or extended to complex numbers.</source>
          <target state="translated">ограничивается действительными числами, но дополнительный оператор &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; обеспечивает полную комплексную поддержку вместе с полным набором математических функций, обычно связанных с комплексными числами и / или расширенных до них.</target>
        </trans-unit>
        <trans-unit id="264f39cab871e4cfd65b3a002f7255888bb5ed97" translate="yes" xml:space="preserve">
          <source>line</source>
          <target state="translated">line</target>
        </trans-unit>
        <trans-unit id="ee6d4c6d5ba67c8947633c21df6ef3227697ec48" translate="yes" xml:space="preserve">
          <source>line (split into two lines above) contains optimizer information. In the example shown, the optimizer found that the match should contain a substring &lt;code&gt;de&lt;/code&gt; at offset 1, plus substring &lt;code&gt;gh&lt;/code&gt; at some offset between 3 and infinity. Moreover, when checking for these substrings (to abandon impossible matches quickly), Perl will check for the substring &lt;code&gt;gh&lt;/code&gt; before checking for the substring &lt;code&gt;de&lt;/code&gt; . The optimizer may also use the knowledge that the match starts (at the &lt;code&gt;first&lt;/code&gt;</source>
          <target state="translated">Строка (разделенная на две строки выше) содержит информацию оптимизатора. В показанном примере оптимизатор обнаружил, что совпадение должно содержать подстроку &lt;code&gt;de&lt;/code&gt; со смещением 1 и подстроку &lt;code&gt;gh&lt;/code&gt; с некоторым смещением от 3 до бесконечности. Более того, при проверке этих подстрок (чтобы быстро отказаться от невозможных совпадений) Perl будет проверять наличие подстроки &lt;code&gt;gh&lt;/code&gt; перед проверкой подстроки &lt;code&gt;de&lt;/code&gt; . Оптимизатор также может использовать информацию о том, что совпадение начинается (при &lt;code&gt;first&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5cff435ab18a0c579f485626794be0f63bb4f09" translate="yes" xml:space="preserve">
          <source>line 13 is where the action is, so let's continue down to there via the letter '&lt;b&gt;c&lt;/b&gt;', which by the way, inserts a 'one-time-only' breakpoint at the given line or sub routine:</source>
          <target state="translated">Строка 13 - это то место, где находится действие, так что давайте продолжим туда через букву ' &lt;b&gt;c&lt;/b&gt; ', которая, кстати, вставляет 'одноразовую' точку останова в данной строке или подпрограмме:</target>
        </trans-unit>
        <trans-unit id="5d4e605b7f432bb8eb53818c4166fc813e3df040" translate="yes" xml:space="preserve">
          <source>line ends with &quot;\015\012&quot;, and strip what you don't need from the output. This applies especially to socket I/O and autoflushing, discussed next.</source>
          <target state="translated">строка заканчивается на &quot;\015\012&quot;,и вырезает из вывода то,что вам не нужно.Это особенно относится к вводу/выводу сокетов и автопромывке,о чем мы поговорим далее.</target>
        </trans-unit>
        <trans-unit id="edd5e2ef9789c510bbe128704d9a7e7e3a40e4ec" translate="yes" xml:space="preserve">
          <source>line within the string.</source>
          <target state="translated">строка внутри строки.</target>
        </trans-unit>
        <trans-unit id="c6289336f78366e3f6883b22aef27803c8a7ebe5" translate="yes" xml:space="preserve">
          <source>lines in list context. When performing open, close, or any other operation besides &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; on files, or even when talking about the handle, do</source>
          <target state="translated">строки в контексте списка. При выполнении операции открытия, закрытия или любой другой операции, кроме &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; с файлами, или даже когда речь идет о дескрипторе, выполните</target>
        </trans-unit>
        <trans-unit id="205e5d4f320847b243dd453a04b92b3be65db4ad" translate="yes" xml:space="preserve">
          <source>lines indented. You can do something like this:</source>
          <target state="translated">линии с зазубринами.Ты можешь сделать что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="4f0aa52d656a3d75867f784b7e9c5d23bf1321c0" translate="yes" xml:space="preserve">
          <source>link</source>
          <target state="translated">link</target>
        </trans-unit>
        <trans-unit id="893b6bbee2e15aca199ac12f4ec7f3df9dd66111" translate="yes" xml:space="preserve">
          <source>link OLDFILE,NEWFILE</source>
          <target state="translated">ссылка OLDFILE,NEWFILE</target>
        </trans-unit>
        <trans-unit id="0bd588874c06c526798eba96d6fe06b8a35dbd20" translate="yes" xml:space="preserve">
          <source>lint, splint</source>
          <target state="translated">нитки,шина</target>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">list</target>
        </trans-unit>
        <trans-unit id="28d839de275cc2a482580b54daa9f1746f8afd3b" translate="yes" xml:space="preserve">
          <source>list as parameters. It will return the corresponding threads object, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if thread creation failed.</source>
          <target state="translated">список как параметры. Он вернет соответствующий объект потока или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если создание потока не удалось.</target>
        </trans-unit>
        <trans-unit id="f85c5f6f515fbe630e0696ceae1fdb9ade45ddad" translate="yes" xml:space="preserve">
          <source>list option</source>
          <target state="translated">вариант списка</target>
        </trans-unit>
        <trans-unit id="912fff8dfa7230c9dbc1aafaee034c4c28b60135" translate="yes" xml:space="preserve">
          <source>list. (No parameters are modified, and there can be keys in the</source>
          <target state="translated">Список.(Параметры не изменяются,и могут быть клавиши в списке</target>
        </trans-unit>
        <trans-unit id="2147a9e5f9e89b70810c82ff8e12817130d6ca10" translate="yes" xml:space="preserve">
          <source>listen</source>
          <target state="translated">listen</target>
        </trans-unit>
        <trans-unit id="97b87c18960b2a4b1aa17d3d60a1e2f067cb6abb" translate="yes" xml:space="preserve">
          <source>listen SOCKET,QUEUESIZE</source>
          <target state="translated">Слушай,Сокет,КУЭВЕЗИЗ.</target>
        </trans-unit>
        <trans-unit id="6eccfbe291f324971af6784befbc212824e44176" translate="yes" xml:space="preserve">
          <source>listing</source>
          <target state="translated">listing</target>
        </trans-unit>
        <trans-unit id="61edd61d4a7f28bee492d0997de8c193d478da66" translate="yes" xml:space="preserve">
          <source>lists all of the perl release versions we got the CoreList for.</source>
          <target state="translated">перечисляет все версии perl-релиза,для которых мы получили CoreList.</target>
        </trans-unit>
        <trans-unit id="f7d6ae69a9d9939d5b81776dd44d0b872ad9cead" translate="yes" xml:space="preserve">
          <source>lists all of the perl releases and when they were released</source>
          <target state="translated">перечисляет все perl-релизы и когда они были выпущены.</target>
        </trans-unit>
        <trans-unit id="bf9d5a0c63cc1fc18dff839271fcc51b66b70299" translate="yes" xml:space="preserve">
          <source>lists all the files that are skipped due to your &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; file.</source>
          <target state="translated">перечисляет все файлы, которые были пропущены из-за вашего файла &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78bebc9e06a6bb16d146b4c83c431c4203e08d0a" translate="yes" xml:space="preserve">
          <source>lists all versions of the given module (or the matching modules, in case you used a module regexp) in the perls Module::CoreList knows about.</source>
          <target state="translated">перечисляет все версии данного модуля (или соответствующих модулей,если вы использовали модуль regexp)в perls,о которых знает Module::CoreList.</target>
        </trans-unit>
        <trans-unit id="b82e8dc76d2fa200f820190cf7479ebc1fa8a830" translate="yes" xml:space="preserve">
          <source>lists the first version bundle of each named feature given</source>
          <target state="translated">перечисляет первую версию пакета каждой из названных функций.</target>
        </trans-unit>
        <trans-unit id="d1e347c1c3866cd9970a92c783f2374e855dfc81" translate="yes" xml:space="preserve">
          <source>listval</source>
          <target state="translated">listval</target>
        </trans-unit>
        <trans-unit id="a568a4ea954740f26f018035ad22bd41cdf0373e" translate="yes" xml:space="preserve">
          <source>literal string</source>
          <target state="translated">буквальная строка</target>
        </trans-unit>
        <trans-unit id="aadf46ad52b563db141c6a8b633250cb09e7740c" translate="yes" xml:space="preserve">
          <source>little-endian</source>
          <target state="translated">little-endian</target>
        </trans-unit>
        <trans-unit id="3c01627cf1f82343852c754d030ad8d0be18a589" translate="yes" xml:space="preserve">
          <source>ln</source>
          <target state="translated">ln</target>
        </trans-unit>
        <trans-unit id="cf7069ab52b9c27c85a59ee69245b2ba15153409" translate="yes" xml:space="preserve">
          <source>ln -s /usr/bin/yacc /usr/local/bin/byacc</source>
          <target state="translated">ln -s /usr/bin/yacc /usr/local/bin/byacc</target>
        </trans-unit>
        <trans-unit id="f846b4e0eb20fc2b44a3afedf8b1b609fc0fca6f" translate="yes" xml:space="preserve">
          <source>lns.U</source>
          <target state="translated">lns.U</target>
        </trans-unit>
        <trans-unit id="5dbc716c4600097b85b9e51d6aeb77a4363b03ed" translate="yes" xml:space="preserve">
          <source>load</source>
          <target state="translated">load</target>
        </trans-unit>
        <trans-unit id="3d8b45aabc48663acb50c783dcbd10a487867965" translate="yes" xml:space="preserve">
          <source>load_file</source>
          <target state="translated">load_file</target>
        </trans-unit>
        <trans-unit id="d931ba99f1cad82cf3a02b00a20a3f743f4ee781" translate="yes" xml:space="preserve">
          <source>load_json_string</source>
          <target state="translated">load_json_string</target>
        </trans-unit>
        <trans-unit id="bd8a4ef9325f42d52a1f59df9bc59169ed33632d" translate="yes" xml:space="preserve">
          <source>load_string</source>
          <target state="translated">load_string</target>
        </trans-unit>
        <trans-unit id="b4efc8581e40d4d5a86d685e30ad1f651200415c" translate="yes" xml:space="preserve">
          <source>load_yaml_string</source>
          <target state="translated">load_yaml_string</target>
        </trans-unit>
        <trans-unit id="045e2b94f169be3f08f90975694f8e56dc61553f" translate="yes" xml:space="preserve">
          <source>loaded by the full name.</source>
          <target state="translated">загруженный полным именем.</target>
        </trans-unit>
        <trans-unit id="f75ac2bde00caf8de4fa91abaeb94784e5f4eab9" translate="yes" xml:space="preserve">
          <source>loaded from the prescribed path.</source>
          <target state="translated">загруженный с прописанной траектории.</target>
        </trans-unit>
        <trans-unit id="66fa096aca860773a9d6550be668afcc4230e726" translate="yes" xml:space="preserve">
          <source>loaded into memory may be found. Running &lt;code&gt;make test&lt;/code&gt; becomes meaningless, since the test are checking a previous build of perl (this situation is detected and reported by</source>
          <target state="translated">загружены в память могут быть найдены. Запуск &lt;code&gt;make test&lt;/code&gt; становится бессмысленным, поскольку тест проверяет предыдущую сборку perl (эта ситуация обнаруживается и сообщается</target>
        </trans-unit>
        <trans-unit id="19e743edea24c4104fc7fe924db8d02f050e371f" translate="yes" xml:space="preserve">
          <source>loaded into memory, so this will work even for gigantic files.</source>
          <target state="translated">загружается в память,так что это будет работать даже для гигантских файлов.</target>
        </trans-unit>
        <trans-unit id="2c5d6b3e71d391fb38863da485679ad7763ae3b1" translate="yes" xml:space="preserve">
          <source>loading Pod::Simple (or any Pod::Simple-based class). If you try loading Pod::Simple::Debug after &amp;amp;Pod::Simple::DEBUG is already defined, Pod::Simple::Debug will throw a fatal error to the effect that &quot;It's too late to call Pod::Simple::Debug&quot;.</source>
          <target state="translated">загрузка Pod :: Simple (или любого класса на основе Pod :: Simple). Если вы попытаетесь загрузить Pod :: Simple :: Debug после того, как &amp;amp; Pod :: Simple :: DEBUG уже определен, Pod :: Simple :: Debug выдаст фатальную ошибку с таким эффектом: &amp;laquo;Слишком поздно вызывать Pod :: Simple: :Отлаживать&quot;.</target>
        </trans-unit>
        <trans-unit id="40231aeb561483c2e9b7f30ccfb552f54ea27351" translate="yes" xml:space="preserve">
          <source>loading Pod::Usage, e.g.:</source>
          <target state="translated">Загрузка Под::Использование,например:</target>
        </trans-unit>
        <trans-unit id="52c558e9f725f5eecc9cc18448c82dff5fda24be" translate="yes" xml:space="preserve">
          <source>lobal.</source>
          <target state="translated">lobal.</target>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="0cbe83985a317bab5abeb5d93600be89b7c5646f" translate="yes" xml:space="preserve">
          <source>local $Carp::RefArgFormatter = sub { require Data::Dumper; Data::Dumper::Dump($_[0]); # not necessarily safe };</source>
          <target state="translated">local $Carp::RefArgFormatter=sub{require Data::Dumper;Data::Dumper::Dump($_[0]);#not necessarily safe };</target>
        </trans-unit>
        <trans-unit id="909cbe434e5f5b8da8ff01039ce1157dbfef1f18" translate="yes" xml:space="preserve">
          <source>local EXPR</source>
          <target state="translated">местный EXPR</target>
        </trans-unit>
        <trans-unit id="0e038a42cca30122c3324dfda646d3f079374dd5" translate="yes" xml:space="preserve">
          <source>locale</source>
          <target state="translated">locale</target>
        </trans-unit>
        <trans-unit id="7151be2e63c3df71d6e8d99768469da377d7fa3e" translate="yes" xml:space="preserve">
          <source>locale - Perl pragma to use or avoid POSIX locales for built-in operations</source>
          <target state="translated">локаль-Perl прагма для использования или избежания POSIX локалей для встроенных операций</target>
        </trans-unit>
        <trans-unit id="1526fa886e4977a40dd22b26ef4633fd869bd50f" translate="yes" xml:space="preserve">
          <source>locale(3)</source>
          <target state="translated">locale(3)</target>
        </trans-unit>
        <trans-unit id="86aeaf8b02747cdecdb29ee87a018a9a2691796a" translate="yes" xml:space="preserve">
          <source>locales</source>
          <target state="translated">locales</target>
        </trans-unit>
        <trans-unit id="f25bccd744fab3255bb82bac88c618963868a33f" translate="yes" xml:space="preserve">
          <source>localtime</source>
          <target state="translated">localtime</target>
        </trans-unit>
        <trans-unit id="e7279c8fdf3a31ca3fe4bd189153443f4e05d1ab" translate="yes" xml:space="preserve">
          <source>localtime EXPR</source>
          <target state="translated">локальный ЭКСПР</target>
        </trans-unit>
        <trans-unit id="e728eb1d2aa50c88d1b5113f3c08c408b33f7c6f" translate="yes" xml:space="preserve">
          <source>localtime() has the same range as &lt;a href=&quot;#gmtime&quot;&gt;gmtime&lt;/a&gt;, but because time zone rules change its accuracy for historical and future times may degrade but usually by no more than an hour.</source>
          <target state="translated">localtime () имеет тот же диапазон, что и &lt;a href=&quot;#gmtime&quot;&gt;gmtime&lt;/a&gt; , но из-за того, что правила часовых поясов меняют его точность для исторического и будущего времени, его точность может ухудшиться, но обычно не более чем на час.</target>
        </trans-unit>
        <trans-unit id="87acf50613d511daa509bb42f0542f5b1c19c877" translate="yes" xml:space="preserve">
          <source>locates an auto/$module directory by searching @INC</source>
          <target state="translated">находит директорию auto/$module с помощью поиска @INC</target>
        </trans-unit>
        <trans-unit id="e117797422d35ce52f036963c7e9603e9955b5c7" translate="yes" xml:space="preserve">
          <source>lock</source>
          <target state="translated">lock</target>
        </trans-unit>
        <trans-unit id="1919d11e33aa63b6546864f63b6597f39b8a192c" translate="yes" xml:space="preserve">
          <source>lock THING</source>
          <target state="translated">блокировка ТИНГ</target>
        </trans-unit>
        <trans-unit id="4fd9900cf61416fbc707cdb91586e771328338b2" translate="yes" xml:space="preserve">
          <source>lock() is a &quot;weak keyword&quot; : this means that if you've defined a function by this name (before any calls to it), that function will be called instead. If you are not under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; this does nothing. See &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt;.</source>
          <target state="translated">lock () - это &amp;laquo;слабое ключевое слово&amp;raquo;: это означает, что если вы определили функцию с этим именем (до каких-либо ее вызовов), вместо нее будет вызываться эта функция. Если вы не &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; это ничего не делает. См. &lt;a href=&quot;threads/shared&quot;&gt;Темы :: shared&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abe78de368255b02f9df70ea914e277e25b6377a" translate="yes" xml:space="preserve">
          <source>lock() is a &quot;weak keyword&quot; : this means that if you've defined a function by this name (before any calls to it), that function will be called instead. If you are not under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; this does nothing. See &lt;a href=&quot;../threads/shared&quot;&gt;threads::shared&lt;/a&gt;.</source>
          <target state="translated">lock () - это &amp;laquo;слабое ключевое слово&amp;raquo;: это означает, что если вы определили функцию с этим именем (до каких-либо ее вызовов), вместо нее будет вызываться эта функция. Если вы не &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; это ничего не делает. См. &lt;a href=&quot;../threads/shared&quot;&gt;Темы :: shared&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="863f64ee1d9d5efee40adfed316ef446406844eb" translate="yes" xml:space="preserve">
          <source>lock_hash() locks an entire hash and any hashes it references recursively, making all keys and values read-only. No value can be changed, no keys can be added or deleted.</source>
          <target state="translated">lock_hash()блокирует весь хэш и любые хэши,на которые он ссылается,рекурсивно,делая все ключи и значения доступными только для чтения.Никакое значение не может быть изменено,никакие ключи не могут быть добавлены или удалены.</target>
        </trans-unit>
        <trans-unit id="6e20cbb081d83245b2bb382d13f9e870688dc039" translate="yes" xml:space="preserve">
          <source>lock_hash() locks an entire hash, making all keys and values read-only. No value can be changed, no keys can be added or deleted.</source>
          <target state="translated">lock_hash()блокирует весь хэш,делая все ключи и значения доступными только для чтения.Никакое значение не может быть изменено,никакие ключи не могут быть добавлены или удалены.</target>
        </trans-unit>
        <trans-unit id="5ef7ffb55ca09d3d5d38cd41fdec246b7fc33293" translate="yes" xml:space="preserve">
          <source>lockf(3) does not provide shared locking, and requires that the filehandle be open for writing (or appending, or read/writing).</source>
          <target state="translated">lockf(3)не обеспечивает общей блокировки и требует,чтобы файловая ручка была открыта для записи (или добавления,или чтения/записи).</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="54eea61dc30d30177daa813ed0f7f137bf06484b" translate="yes" xml:space="preserve">
          <source>log EXPR</source>
          <target state="translated">журнал EXPR</target>
        </trans-unit>
        <trans-unit id="38dd66928079819674d735fcd8176fe58a1d7607" translate="yes" xml:space="preserve">
          <source>logical</source>
          <target state="translated">logical</target>
        </trans-unit>
        <trans-unit id="2736fab291f04e69b62d490c3c09361f5b82461a" translate="yes" xml:space="preserve">
          <source>login</source>
          <target state="translated">login</target>
        </trans-unit>
        <trans-unit id="bd3027fa569ea15ca76d84db21c67e2d514c1a5a" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="translated">long</target>
        </trans-unit>
        <trans-unit id="964256f0b5a7ed1218974634ed187c4c92086abb" translate="yes" xml:space="preserve">
          <source>long long</source>
          <target state="translated">длинная продолжительность</target>
        </trans-unit>
        <trans-unit id="7d84a9b5ce80cfa867e1b0ac7d47e4d29748d95d" translate="yes" xml:space="preserve">
          <source>longdblfio.U</source>
          <target state="translated">longdblfio.U</target>
        </trans-unit>
        <trans-unit id="e09315fa02d775f3e707a7af455093a1c240583b" translate="yes" xml:space="preserve">
          <source>look</source>
          <target state="translated">look</target>
        </trans-unit>
        <trans-unit id="1f7270b39ba4bb2153715c2af7ce320c7e916470" translate="yes" xml:space="preserve">
          <source>look like it's in Bracket Notation, then we compile it into a sub, replace the string in the %Lexicon with the new coderef, and then we return &amp;amp;$new_sub($lh, ...parameters...).</source>
          <target state="translated">выглядит так, как будто это в скобках, затем мы компилируем его в подпрограмму, заменяем строку в% Lexicon новой кодовой ссылкой, а затем мы возвращаем &amp;amp; $ new_sub ($ lh, ... parameters ...).</target>
        </trans-unit>
        <trans-unit id="4ea4a55106332cc0e3e98059d31fe812e8daa531" translate="yes" xml:space="preserve">
          <source>look like it's in Bracket Notation, we return it (after replacing it with a scalarref, in its %Lexicon).</source>
          <target state="translated">выглядит так,как будто он в нотации кронштейна,мы его возвращаем (после замены на скалярф,в его %Lexicon).</target>
        </trans-unit>
        <trans-unit id="449d83a43fb8f44703b6233399d95013a4f778c2" translate="yes" xml:space="preserve">
          <source>looks</source>
          <target state="translated">looks</target>
        </trans-unit>
        <trans-unit id="d348e2927721192d9116c1514b2bf2fc9569cebe" translate="yes" xml:space="preserve">
          <source>looks_like_number</source>
          <target state="translated">looks_like_number</target>
        </trans-unit>
        <trans-unit id="1df823e482339eb6067f4134408b0b8b28411a78" translate="yes" xml:space="preserve">
          <source>loop</source>
          <target state="translated">loop</target>
        </trans-unit>
        <trans-unit id="26ac4aa37ac3a8c344fa2f4dc185d3cd479310b1" translate="yes" xml:space="preserve">
          <source>loses</source>
          <target state="translated">loses</target>
        </trans-unit>
        <trans-unit id="dcf6aa5497e08b90320d9690984d4484444426af" translate="yes" xml:space="preserve">
          <source>lot</source>
          <target state="translated">lot</target>
        </trans-unit>
        <trans-unit id="ee0f49a57ae240afc1fdf80f72c423ec5f89a8ae" translate="yes" xml:space="preserve">
          <source>low surrogate</source>
          <target state="translated">низкая заменитель</target>
        </trans-unit>
        <trans-unit id="4bd963634a0c819a99b8db72f5c098cd1267dff4" translate="yes" xml:space="preserve">
          <source>low surrogates</source>
          <target state="translated">низкие заменители</target>
        </trans-unit>
        <trans-unit id="346e3ee198e98146993894d3de8ecab1a86c3e80" translate="yes" xml:space="preserve">
          <source>lower</source>
          <target state="translated">lower</target>
        </trans-unit>
        <trans-unit id="ebfdec641529d4b59a54e18f8b0e9730f85939fb" translate="yes" xml:space="preserve">
          <source>ls</source>
          <target state="translated">ls</target>
        </trans-unit>
        <trans-unit id="d9ce6d596c2632648fbd8ae6abcd3839f4cbb692" translate="yes" xml:space="preserve">
          <source>lseektype.U</source>
          <target state="translated">lseektype.U</target>
        </trans-unit>
        <trans-unit id="f2b316c5eafa6a056cc0e67989b8ce0c3cc03333" translate="yes" xml:space="preserve">
          <source>lstat</source>
          <target state="translated">lstat</target>
        </trans-unit>
        <trans-unit id="b54245096d5a4f9a2027cbfb28564d6c86ecc831" translate="yes" xml:space="preserve">
          <source>lstat DIRHANDLE</source>
          <target state="translated">ДИРХАНДЛИЯ</target>
        </trans-unit>
        <trans-unit id="c54191eaa53899f1ea11fa61b91001f8f60c7ebb" translate="yes" xml:space="preserve">
          <source>lstat EXPR</source>
          <target state="translated">lstat EXPR</target>
        </trans-unit>
        <trans-unit id="9e33e8fdda61ba945a2beddf3e01162c9c5ee7ca" translate="yes" xml:space="preserve">
          <source>lstat FILEHANDLE</source>
          <target state="translated">ФИЛЬЕФАНДЛЬ</target>
        </trans-unit>
        <trans-unit id="5f3acfbeb4f6fa5007dd1137ab1e96149af87281" translate="yes" xml:space="preserve">
          <source>lt</source>
          <target state="translated">lt</target>
        </trans-unit>
        <trans-unit id="18b585d78a0bf7afe6b384a11fedeb39b40868ae" translate="yes" xml:space="preserve">
          <source>lwp-request</source>
          <target state="translated">lwp-request</target>
        </trans-unit>
        <trans-unit id="38d66abc1f9579784448422d6ef39d1f7b4a9a86" translate="yes" xml:space="preserve">
          <source>lxlite</source>
          <target state="translated">lxlite</target>
        </trans-unit>
        <trans-unit id="31d03f8441e634cf0d99448eb5ca7fb3a9fe93d9" translate="yes" xml:space="preserve">
          <source>lynx</source>
          <target state="translated">lynx</target>
        </trans-unit>
        <trans-unit id="056d9d3521478c299c29bed581f1dbf09b2a149a" translate="yes" xml:space="preserve">
          <source>lynx.exe</source>
          <target state="translated">lynx.exe</target>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="ef3e064abfa5be0f0367ed020edf5681b79671ea" translate="yes" xml:space="preserve">
          <source>m modifier (//m): Treat string as a set of multiple lines. &lt;code&gt;'.'&lt;/code&gt; matches any character except &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are able to match at the start or end of</source>
          <target state="translated">Модификатор m (// m): рассматривать строку как набор из нескольких строк. &lt;code&gt;'.'&lt;/code&gt; соответствует любому символу, кроме &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; и &lt;code&gt;$&lt;/code&gt; могут совпадать в начале или в конце</target>
        </trans-unit>
        <trans-unit id="d369c164073498644b846b81b69cc5f2c8e49c37" translate="yes" xml:space="preserve">
          <source>m//</source>
          <target state="translated">m//</target>
        </trans-unit>
        <trans-unit id="efd431e9222340418322dc8973ecdf9d041d4b17" translate="yes" xml:space="preserve">
          <source>made further support of WinCE port.</source>
          <target state="translated">сделал дальнейшую поддержку порта WinCE.</target>
        </trans-unit>
        <trans-unit id="29328b216c9d886a2b144cfaf368cc216c4398ba" translate="yes" xml:space="preserve">
          <source>madler@alumni.caltech.edu</source>
          <target state="translated">madler@alumni.caltech.edu</target>
        </trans-unit>
        <trans-unit id="b40981aab75932c5b2f555f50769d878e44913d7" translate="yes" xml:space="preserve">
          <source>magic</source>
          <target state="translated">magic</target>
        </trans-unit>
        <trans-unit id="b7161d3acd757800a629497aac7ae100d1b7c5ec" translate="yes" xml:space="preserve">
          <source>magic is called from &lt;code&gt;hv_fetch_common&lt;/code&gt; and &lt;code&gt;hv_delete_common&lt;/code&gt; through the function &lt;code&gt;hv_magic_uvar_xkey&lt;/code&gt; , which defines the interface. The call happens for hashes with &quot;uvar&quot; magic if the &lt;code&gt;ufuncs&lt;/code&gt; structure has equal values in the &lt;code&gt;uf_val&lt;/code&gt; and &lt;code&gt;uf_set&lt;/code&gt; fields. Hashes are unaffected if (and as long as) these fields hold different values.</source>
          <target state="translated">magic вызывается из &lt;code&gt;hv_fetch_common&lt;/code&gt; и &lt;code&gt;hv_delete_common&lt;/code&gt; через функцию &lt;code&gt;hv_magic_uvar_xkey&lt;/code&gt; , которая определяет интерфейс. Вызов происходит для хэшей с магией uvar, если структура &lt;code&gt;ufuncs&lt;/code&gt; имеет равные значения в &lt;code&gt;uf_val&lt;/code&gt; и &lt;code&gt;uf_set&lt;/code&gt; . Хеши не изменяются, если (и до тех пор, пока) эти поля содержат разные значения.</target>
        </trans-unit>
        <trans-unit id="079bca4a77639199d9427705b1cf84c0a19765df" translate="yes" xml:space="preserve">
          <source>mail(1)</source>
          <target state="translated">mail(1)</target>
        </trans-unit>
        <trans-unit id="eeef5463e27b68c50752d7ef6cafa5c83c09c659" translate="yes" xml:space="preserve">
          <source>mailing list.</source>
          <target state="translated">список рассылки.</target>
        </trans-unit>
        <trans-unit id="7af2ad103447ffa690c8bf6319632e78d6f0d6c9" translate="yes" xml:space="preserve">
          <source>mailx(1)</source>
          <target state="translated">mailx(1)</target>
        </trans-unit>
        <trans-unit id="b28b7af69320201d1cf206ebf28373980add1451" translate="yes" xml:space="preserve">
          <source>main</source>
          <target state="translated">main</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">make</target>
        </trans-unit>
        <trans-unit id="9e69b01eeaaedb92e327eadc021b5cbd52d18cd7" translate="yes" xml:space="preserve">
          <source>make alone puts all relevant files into directories that are named by the macros INST_LIB, INST_ARCHLIB, INST_SCRIPT, INST_MAN1DIR and INST_MAN3DIR. All these default to something below ./blib if you are</source>
          <target state="translated">make alone помещает все соответствующие файлы в каталоги,которые именуются макросами INST_LIB,INST_ARCHLIB,INST_SCRIPT,INST_MAN1DIR и INST_MAN3DIR.Все эти значения по умолчанию находятся ниже ./blib,если вы</target>
        </trans-unit>
        <trans-unit id="b1414dbd638a7bbedecef3cb42a63b4bb33b205a" translate="yes" xml:space="preserve">
          <source>make even Unix programmers &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; your binary streams, or open them with &lt;code&gt;:raw&lt;/code&gt; , but that's the only way to get at them portably anyway.</source>
          <target state="translated">пусть даже Unix-программисты &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; ваши двоичные потоки в режим binmode или открывают их с помощью &lt;code&gt;:raw&lt;/code&gt; , но это единственный способ получить их переносимо.</target>
        </trans-unit>
        <trans-unit id="0d2b3e56a2cf0fb81a8aabdc9bbedad97cba9aad" translate="yes" xml:space="preserve">
          <source>make inst_perl by default writes some documentation of what has been done into the file &lt;code&gt;$(INSTALLARCHLIB)/perllocal.pod&lt;/code&gt;. This can be bypassed by calling make pure_inst_perl.</source>
          <target state="translated">make inst_perl по умолчанию записывает некоторую документацию о том, что было сделано, в файл &lt;code&gt;$(INSTALLARCHLIB)/perllocal.pod&lt;/code&gt; . Этого можно избежать, вызвав make pure_inst_perl.</target>
        </trans-unit>
        <trans-unit id="8ac56d2d6c13acc3594f87eb880d15f820a757b2" translate="yes" xml:space="preserve">
          <source>make install</source>
          <target state="translated">произвести установку</target>
        </trans-unit>
        <trans-unit id="9c18e5a4d2fb6411ebee37c34f994e64f9e94356" translate="yes" xml:space="preserve">
          <source>make install by default writes some documentation of what has been done into the file &lt;code&gt;$(INSTALLARCHLIB)/perllocal.pod&lt;/code&gt;. This feature can be bypassed by calling make pure_install.</source>
          <target state="translated">make install по умолчанию записывает некоторую документацию о том, что было сделано, в файл &lt;code&gt;$(INSTALLARCHLIB)/perllocal.pod&lt;/code&gt; . Эту функцию можно обойти, вызвав make pure_install.</target>
        </trans-unit>
        <trans-unit id="b634bb60968f9245e0b837dbb860fc9ffa16de85" translate="yes" xml:space="preserve">
          <source>make test</source>
          <target state="translated">проверка производства</target>
        </trans-unit>
        <trans-unit id="40662a75d2fa6f986ff7fbe892d23df6bb7f669d" translate="yes" xml:space="preserve">
          <source>make testdb</source>
          <target state="translated">тестировать</target>
        </trans-unit>
        <trans-unit id="4ecb1448927b482d2e8630e628eb858e97dc0d70" translate="yes" xml:space="preserve">
          <source>make them</source>
          <target state="translated">заставлять их</target>
        </trans-unit>
        <trans-unit id="d91e90d7b776eb0d1d15817fe6d9b9372c6ca037" translate="yes" xml:space="preserve">
          <source>make use of the new qr// construct to pre-compile the regexes they use (whereas &lt;code&gt;extract_tagged&lt;/code&gt; uses standard string variable interpolation to create tag-matching patterns).</source>
          <target state="translated">использовать новую конструкцию qr // для предварительной компиляции используемых ими регулярных выражений (в то время как &lt;code&gt;extract_tagged&lt;/code&gt; использует стандартную интерполяцию строковых переменных для создания шаблонов сопоставления тегов).</target>
        </trans-unit>
        <trans-unit id="07526accda1c04050bb9f1a4a62f07c9471df9de" translate="yes" xml:space="preserve">
          <source>make.U</source>
          <target state="translated">make.U</target>
        </trans-unit>
        <trans-unit id="2cbb62d014b07c1a418026eadfae3d532ee66600" translate="yes" xml:space="preserve">
          <source>make_set_make=&lt;code&gt;#&lt;/code&gt; # If your make program handles this for you,</source>
          <target state="translated">make_set_make = &lt;code&gt;#&lt;/code&gt; # Если ваша программа make сделает это за вас,</target>
        </trans-unit>
        <trans-unit id="fd96c8498d2dc48d3f78f6335afc6ed3167f9b8c" translate="yes" xml:space="preserve">
          <source>make_set_make=&lt;code&gt;MAKE=$make&lt;/code&gt; # if it doesn't.</source>
          <target state="translated">make_set_make = &lt;code&gt;MAKE=$make&lt;/code&gt; # если нет.</target>
        </trans-unit>
        <trans-unit id="e7f82c3f566634f9aff062dc010c174e747e8a43" translate="yes" xml:space="preserve">
          <source>makefile.ce</source>
          <target state="translated">makefile.ce</target>
        </trans-unit>
        <trans-unit id="4639a6cdf16268dfbcbc2737352c50221d37ade4" translate="yes" xml:space="preserve">
          <source>makemakerdflt_target</source>
          <target state="translated">makemakerdflt_target</target>
        </trans-unit>
        <trans-unit id="b7c7ada5c449e7874dd51a68b3d5e3334a63dd58" translate="yes" xml:space="preserve">
          <source>makes $this an alias for $that, @this an alias for @that, %this an alias for %that, &amp;amp;this an alias for &amp;amp;that, etc. Much safer is to use a reference. This:</source>
          <target state="translated">делает $ this псевдонимом для $ that, @this псевдонимом для @that,% this псевдонимом для% that, &amp;amp; this псевдонимом для &amp;amp; that и т. д. Намного безопаснее использовать ссылку. Это:</target>
        </trans-unit>
        <trans-unit id="cdfc243f5581fcd0011d9aa44285de89f3c7df86" translate="yes" xml:space="preserve">
          <source>makes 2 copies of $large_string (one for $copy and another for the quotes), whereas</source>
          <target state="translated">делает 2 копии строки $large_string (одна для $копирования,другая для котировок),в то время как</target>
        </trans-unit>
        <trans-unit id="83d231e9f1a700e735290aed581501d7d6b03c61" translate="yes" xml:space="preserve">
          <source>makes Perl use the PATH environment variable to search for the program unless the name of the program contains path separators.</source>
          <target state="translated">заставляет Perl использовать переменную окружения PATH для поиска программы,если только имя программы не содержит разделителей путей.</target>
        </trans-unit>
        <trans-unit id="a67bd44e2ab0599fe88c8688792d8ffd48560740" translate="yes" xml:space="preserve">
          <source>makes Tk event loop run when waiting for user input (i.e., during &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; method).</source>
          <target state="translated">заставляет цикл событий Tk запускаться при ожидании ввода пользователя (т.е. во время метода &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="27400b1510032cb064769829374860147cea9dd5" translate="yes" xml:space="preserve">
          <source>makes the command line stand out by using termcap data. The argument to &lt;code&gt;ornaments&lt;/code&gt; should be 0, 1, or a string of a form &lt;code&gt;&quot;aa,bb,cc,dd&quot;&lt;/code&gt; . Four components of this string should be names of</source>
          <target state="translated">выделяет командную строку за счет использования данных termcap. Аргумент &lt;code&gt;ornaments&lt;/code&gt; должен быть 0, 1 или строка вида &lt;code&gt;&quot;aa,bb,cc,dd&quot;&lt;/code&gt; . Четыре компонента этой строки должны быть именами</target>
        </trans-unit>
        <trans-unit id="0639604e49ec4ac0f7eb55dc4af289d8dc7167a4" translate="yes" xml:space="preserve">
          <source>makes this layer available, although</source>
          <target state="translated">делает этот слой доступным,хотя</target>
        </trans-unit>
        <trans-unit id="d6c675249ee9adbb1c9a261647a95be4a6a19ac1" translate="yes" xml:space="preserve">
          <source>maketext_filter</source>
          <target state="translated">maketext_filter</target>
        </trans-unit>
        <trans-unit id="aec3541d23c3a9a173e7827c3070f5f73393d1e0" translate="yes" xml:space="preserve">
          <source>making clear how the parameters are actually passed to &lt;code&gt;foo&lt;/code&gt; .</source>
          <target state="translated">проясняя, как параметры фактически передаются в &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e1aeea708e4eb994e02aebaa248131fc82125c0" translate="yes" xml:space="preserve">
          <source>malloc() may want to subdivide a bigger bucket into smaller buckets. If only a part of the deceased bucket is left unsubdivided, the rest is kept as an element of a linked list. This field gives the total size of these chunks.</source>
          <target state="translated">malloc()может захотеть разделить большее ведро на более мелкие.Если только часть умершего ведра остается неразделенной,остальная часть сохраняется как элемент связанного списка.В этом поле указывается общий размер этих кусков.</target>
        </trans-unit>
        <trans-unit id="9a76da154fe4a39e34c734b4cb5bf0dd07eb6ae3" translate="yes" xml:space="preserve">
          <source>malloc(0), realloc(0), calloc(0, 0) are non-portable. To be portable allocate at least one byte. (In general you should rarely need to work at this low level, but instead use the various malloc wrappers.)</source>
          <target state="translated">malloc(0),realloc(0),calloc(0,0)не переносятся.Чтобы быть переносимым выделите хотя бы один байт.(В общем,работать на таком низком уровне нужно редко,а вместо этого использовать различные обертки malloc).</target>
        </trans-unit>
        <trans-unit id="222c4a1e90126e2bfcc4b636a85b99c97fd45171" translate="yes" xml:space="preserve">
          <source>malloc.c</source>
          <target state="translated">malloc.c</target>
        </trans-unit>
        <trans-unit id="8596070207a7af9e2362faacf985b07bd76e5e93" translate="yes" xml:space="preserve">
          <source>malloc.o</source>
          <target state="translated">malloc.o</target>
        </trans-unit>
        <trans-unit id="095a5ce7f546af45133c8dc13868feb3acd7faf2" translate="yes" xml:space="preserve">
          <source>mallocsrc.U</source>
          <target state="translated">mallocsrc.U</target>
        </trans-unit>
        <trans-unit id="8175e3c8753aeb1696959f72ede260ebf3ea14c5" translate="yes" xml:space="preserve">
          <source>man</source>
          <target state="translated">man</target>
        </trans-unit>
        <trans-unit id="1c078d0bf4b8dd2e699b069f52b58d7001d16869" translate="yes" xml:space="preserve">
          <source>man page for details.</source>
          <target state="translated">man page для подробностей.</target>
        </trans-unit>
        <trans-unit id="194c36c280a775b2ab3c6204dbb72dea5795ab10" translate="yes" xml:space="preserve">
          <source>man(1)</source>
          <target state="translated">man(1)</target>
        </trans-unit>
        <trans-unit id="b716e508bc702ecd96357df137bb55e7d7979571" translate="yes" xml:space="preserve">
          <source>man(5)</source>
          <target state="translated">man(5)</target>
        </trans-unit>
        <trans-unit id="6208d80a4c0588585c80b00796bde79230ebcf13" translate="yes" xml:space="preserve">
          <source>man(7)</source>
          <target state="translated">man(7)</target>
        </trans-unit>
        <trans-unit id="a3d5158a4aaa199267a8ea6269070ad8aee11093" translate="yes" xml:space="preserve">
          <source>man1dir.U</source>
          <target state="translated">man1dir.U</target>
        </trans-unit>
        <trans-unit id="5bdc3c414d10b0ba2f02bd89b3aa370710faefed" translate="yes" xml:space="preserve">
          <source>man3dir.U</source>
          <target state="translated">man3dir.U</target>
        </trans-unit>
        <trans-unit id="7519267064103f8587f3413cf85843cf6d5b51d6" translate="yes" xml:space="preserve">
          <source>man_url_postfix</source>
          <target state="translated">man_url_postfix</target>
        </trans-unit>
        <trans-unit id="3b4afef27bb9c55d4b3898de6def46e2bd5cde2d" translate="yes" xml:space="preserve">
          <source>man_url_prefix</source>
          <target state="translated">man_url_prefix</target>
        </trans-unit>
        <trans-unit id="967c38874059d9c308cfa6fc765c16a4bc26c1d7" translate="yes" xml:space="preserve">
          <source>manext</source>
          <target state="translated">manext</target>
        </trans-unit>
        <trans-unit id="11208e62cf970ecedb0289935540a9e036a965ed" translate="yes" xml:space="preserve">
          <source>mangle the names according to the scheme of new perl and copy the DLLs to these names;</source>
          <target state="translated">изменить имена по схеме нового perl и скопировать DLLs на эти имена;</target>
        </trans-unit>
        <trans-unit id="70f62c5995ffc0a3d8482ebc9cb103ec54f10822" translate="yes" xml:space="preserve">
          <source>manifypods</source>
          <target state="translated">manifypods</target>
        </trans-unit>
        <trans-unit id="cf1b33c2d9cb1cb8c907a395cf2d9daa37137777" translate="yes" xml:space="preserve">
          <source>manifypods_target</source>
          <target state="translated">manifypods_target</target>
        </trans-unit>
        <trans-unit id="0bd558ad5a573716c4a7500ed4950000799f0e6e" translate="yes" xml:space="preserve">
          <source>manpage</source>
          <target state="translated">manpage</target>
        </trans-unit>
        <trans-unit id="8e402ff24e7c6da97aa72971b48ed83bd2075972" translate="yes" xml:space="preserve">
          <source>manpage, on an &quot;empty&quot; program, like this:</source>
          <target state="translated">manpage,на &quot;пустой&quot; программе,как эта:</target>
        </trans-unit>
        <trans-unit id="8fa0fbe8ca06dbd114197c43c3e2ca36a4dd604e" translate="yes" xml:space="preserve">
          <source>manpage. One way to invoke the &lt;code&gt;iconv&lt;/code&gt; shell utility from within perl would be to:</source>
          <target state="translated">справочная страница. Один из способов вызвать утилиту оболочки &lt;code&gt;iconv&lt;/code&gt; из perl:</target>
        </trans-unit>
        <trans-unit id="109e419351c9d9b869f96b375f5b2571c17c6c46" translate="yes" xml:space="preserve">
          <source>manpath</source>
          <target state="translated">manpath</target>
        </trans-unit>
        <trans-unit id="0c2876386539d906bac3a839a472cb5f4cd8a5ad" translate="yes" xml:space="preserve">
          <source>mansrc.U</source>
          <target state="translated">mansrc.U</target>
        </trans-unit>
        <trans-unit id="6cadfcb71363f4d7fc9f2fab3fbedb185b558f8c" translate="yes" xml:space="preserve">
          <source>mantissa() and exponent() return the said parts of the BigFloat as BigInts such that:</source>
          <target state="translated">mantissa()и exponent()возвращают упомянутые части BigFloat как BigInts:</target>
        </trans-unit>
        <trans-unit id="9c1dd14bb9ad9842019c5e71e79ebfe090ea86ba" translate="yes" xml:space="preserve">
          <source>mantissa(), exponent() and parts()</source>
          <target state="translated">mantissa(),exponent()и parts()</target>
        </trans-unit>
        <trans-unit id="37fcf1fa5d0a864017cd95b422637963af01817c" translate="yes" xml:space="preserve">
          <source>manual pages.</source>
          <target state="translated">ручные страницы.</target>
        </trans-unit>
        <trans-unit id="f25470201a131e127feab62862c4c9a8b033b071" translate="yes" xml:space="preserve">
          <source>many</source>
          <target state="translated">many</target>
        </trans-unit>
        <trans-unit id="ef49cb3336572ee03ae671c687d0c1aa65f08ca5" translate="yes" xml:space="preserve">
          <source>many-colored</source>
          <target state="translated">many-colored</target>
        </trans-unit>
        <trans-unit id="9208f9af655701e0391c8136db59433892d1977a" translate="yes" xml:space="preserve">
          <source>many.</source>
          <target state="translated">many.</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="7ae7c2d920d4746221d2021411af1be6f94a2b1e" translate="yes" xml:space="preserve">
          <source>map BLOCK LIST</source>
          <target state="translated">список литературы</target>
        </trans-unit>
        <trans-unit id="252b6dc296dd87752c7fc87bc48e8a3a3ae93df2" translate="yes" xml:space="preserve">
          <source>map EXPR,LIST</source>
          <target state="translated">карта ЭКСПР,СПИСОК</target>
        </trans-unit>
        <trans-unit id="821b7db1bf69055d3819db82de2c55389a73409b" translate="yes" xml:space="preserve">
          <source>mapping</source>
          <target state="translated">mapping</target>
        </trans-unit>
        <trans-unit id="d060c381b2b7e474f3327039365d540bdd00ae54" translate="yes" xml:space="preserve">
          <source>marcus.harnisch (at) gmx.net</source>
          <target state="translated">marcus.harness (at)gmx.net</target>
        </trans-unit>
        <trans-unit id="db947d9543645af5118ec8eb4a4ca3b85f177330" translate="yes" xml:space="preserve">
          <source>marker or a &quot;package Name;&quot;-style specification.</source>
          <target state="translated">маркер или &quot;Имя пакета;&quot;-спецификация в стиле.</target>
        </trans-unit>
        <trans-unit id="f81924e45a3409b8f19c0c8c0ccc8adb925131f4" translate="yes" xml:space="preserve">
          <source>markers. The original MANIFEST.SKIP is saved as MANIFEST.SKIP.bak.</source>
          <target state="translated">маркеры.Оригинальный MANIFEST.SKIP сохраняется как MANIFEST.SKIP.bak.</target>
        </trans-unit>
        <trans-unit id="453a611042ddc2540cd6e814ad412629e5dbe987" translate="yes" xml:space="preserve">
          <source>mask (MASK)</source>
          <target state="translated">маска (МАСК)</target>
        </trans-unit>
        <trans-unit id="c3b8534fda7efd1489afb5fd6145c2c0ee4c5741" translate="yes" xml:space="preserve">
          <source>match any of its subsections:</source>
          <target state="translated">совпадают с любым из его подразделов:</target>
        </trans-unit>
        <trans-unit id="f757168687a351b24f3d7929cacb9c38a3f6d2ba" translate="yes" xml:space="preserve">
          <source>match at the start of the string. Thus the first quantifier has to match everything up to the first &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;. The second minimal quantifier matches just one &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; and the third quantifier matches the rest of the string.</source>
          <target state="translated">совпадение в начале строки. Таким образом, первый квантор должен соответствовать всему до первого &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; . Второй минимальный квантификатор соответствует только одному &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; , а третий квантор соответствует остальной части строки.</target>
        </trans-unit>
        <trans-unit id="0923e6d77fc5fe3e77019fe165e62059bca66c51" translate="yes" xml:space="preserve">
          <source>match is chosen if the</source>
          <target state="translated">совпадение выбрано,если</target>
        </trans-unit>
        <trans-unit id="ab40f8ad7e88d02d55d990bcb5fbfb20c5681919" translate="yes" xml:space="preserve">
          <source>match is of zero length.</source>
          <target state="translated">совпадение нулевой длины.</target>
        </trans-unit>
        <trans-unit id="0d82094c1c07e4a73c286a3d423db8f6e4f8dc59" translate="yes" xml:space="preserve">
          <source>match is what is matched by &lt;code&gt;\w&lt;/code&gt; . Thus zero-length matches alternate with one-character-long matches.</source>
          <target state="translated">match - это то, что соответствует &lt;code&gt;\w&lt;/code&gt; . Таким образом, совпадения нулевой длины чередуются с совпадениями длиной в один символ.</target>
        </trans-unit>
        <trans-unit id="04818134b60c58c656e4b991d38166d6f3076c39" translate="yes" xml:space="preserve">
          <source>match of this pattern. This effectively means that the regex engine &quot;skips&quot; forward to this position on failure and tries to match again, (assuming that there is sufficient room to match).</source>
          <target state="translated">совпадает с этим образцом.Это фактически означает,что регрессионный двигатель &quot;пропускает&quot; вперед в это положение при неудаче и пытается снова совпасть (при условии,что для совпадения достаточно места).</target>
        </trans-unit>
        <trans-unit id="2aeb93bd6b0ddbe1b2affadead65a4a0403777df" translate="yes" xml:space="preserve">
          <source>match the current Perl interpreter's version ID, suppressing</source>
          <target state="translated">совпадает с идентификатором текущей версии переводчика Perl,подавляя</target>
        </trans-unit>
        <trans-unit id="632d2ed159e13f1f7bc205ac4fd10f5389ed2386" translate="yes" xml:space="preserve">
          <source>match the current Perl interpreter's version id, suppressing</source>
          <target state="translated">совпадает с идентификатором текущей версии переводчика Perl,подавляя</target>
        </trans-unit>
        <trans-unit id="f743d4858548a263762a36939a95c6da7ebf0d4d" translate="yes" xml:space="preserve">
          <source>match()</source>
          <target state="translated">match()</target>
        </trans-unit>
        <trans-unit id="9e7284baae613a8be9f37e0730061d6f042d8cb6" translate="yes" xml:space="preserve">
          <source>match, it will</source>
          <target state="translated">матч,он будет</target>
        </trans-unit>
        <trans-unit id="a84c1c52c5a0ad6ba6d17b82c8afb7e48375a135" translate="yes" xml:space="preserve">
          <source>match.c</source>
          <target state="translated">match.c</target>
        </trans-unit>
        <trans-unit id="3269d7265825aa798534517571d41a494aee9d44" translate="yes" xml:space="preserve">
          <source>match:</source>
          <target state="translated">match:</target>
        </trans-unit>
        <trans-unit id="f0ba4ba845edb2f7aae00a27910035ffbe2d4394" translate="yes" xml:space="preserve">
          <source>match_attributes</source>
          <target state="translated">match_attributes</target>
        </trans-unit>
        <trans-unit id="bef3c6a271cefa51790a544a7f9ec2bab5650c92" translate="yes" xml:space="preserve">
          <source>matched regex is used. Delimiters other than '/' may be used for both this operator and the following ones. The leading &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; can be omitted if the delimiter is '/'.</source>
          <target state="translated">используется согласованное регулярное выражение. Разделители, отличные от '/', могут использоваться как для этого оператора, так и для следующих. Ведущие &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; могут быть опущены , если разделитель &amp;laquo;/&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ac80938af61d76d029e10bff3eeaa4d9936caf68" translate="yes" xml:space="preserve">
          <source>matched regular expression is used instead. In this case, only the &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; flags on the empty pattern are honored; the other flags are taken from the original pattern. If no match has previously succeeded, this will (silently) act instead as a genuine empty pattern (which will always match).</source>
          <target state="translated">Вместо этого используется согласованное регулярное выражение. В этом случае учитываются только флаги &lt;code&gt;g&lt;/code&gt; и &lt;code&gt;c&lt;/code&gt; в пустом шаблоне; остальные флаги взяты из исходного шаблона. Если совпадение ранее не было успешным, это будет (молча) действовать как подлинный пустой шаблон (который всегда будет совпадать).</target>
        </trans-unit>
        <trans-unit id="cc01360a67b29b124b5c4fb0c967ca385d1fe670" translate="yes" xml:space="preserve">
          <source>matched with zero-length</source>
          <target state="translated">с нулевой длиной</target>
        </trans-unit>
        <trans-unit id="9f3e9242c63870528e4600bc635fca8f0f5d6e9c" translate="yes" xml:space="preserve">
          <source>matches</source>
          <target state="translated">matches</target>
        </trans-unit>
        <trans-unit id="49da147fbc1f65bec45fdffd10ec7c4b66da5f3d" translate="yes" xml:space="preserve">
          <source>matches a DNA sequence such that it either ends in &lt;code&gt;AAG&lt;/code&gt; , or some other base pair combination and &lt;code&gt;C&lt;/code&gt; . Note that the form is &lt;code&gt;(?(?&amp;lt;=AA)G|C)&lt;/code&gt; and not &lt;code&gt;(?((?&amp;lt;=AA))G|C)&lt;/code&gt;; for the lookahead, lookbehind or code assertions, the parentheses around the conditional are not needed.</source>
          <target state="translated">соответствует ДНК - последовательность , таким образом, что он либо оканчивается на &lt;code&gt;AAG&lt;/code&gt; , или какая - либо другая комбинация пар оснований и &lt;code&gt;C&lt;/code&gt; . Обратите внимание, что это форма &lt;code&gt;(?(?&amp;lt;=AA)G|C)&lt;/code&gt; а не &lt;code&gt;(?((?&amp;lt;=AA))G|C)&lt;/code&gt; ; для утверждений опережающего просмотра, просмотра назад или кода скобки вокруг условного выражения не нужны.</target>
        </trans-unit>
        <trans-unit id="b1ee14db482234ce9b2680f4f1530b16ee389867" translate="yes" xml:space="preserve">
          <source>matches a chunk of non-parentheses, possibly included in parentheses themselves.</source>
          <target state="translated">совпадает с куском неродителей,возможно,включенным в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="3babeacfb57a1f18f60b79e9f2e4dd3547207ea0" translate="yes" xml:space="preserve">
          <source>matches any four character string which begins with a and ends with d.</source>
          <target state="translated">совпадает с любой строкой из четырех символов,которая начинается с a и заканчивается с d.</target>
        </trans-unit>
        <trans-unit id="15bb6a71934f5939f8a50dcc56e36bba9679039e" translate="yes" xml:space="preserve">
          <source>matches any single character other than a close square bracket or a minus sign/dash.</source>
          <target state="translated">совпадает с любым другим символом,кроме закрытой квадратной скобки или знака минус/черточки.</target>
        </trans-unit>
        <trans-unit id="b44ccf9fc2b923e2e3c4186c16014a27d5a8ac30" translate="yes" xml:space="preserve">
          <source>matches any single printable alphanumeric ASCII character.</source>
          <target state="translated">совпадает с любым одним печатным буквенно-цифровым символом ASCII.</target>
        </trans-unit>
        <trans-unit id="3b42764c7627f67dcaba67e6658bbee63ee5b1a5" translate="yes" xml:space="preserve">
          <source>matches any string that ends with the string &quot;bdc&quot; including the string &quot;bdc&quot; (without quotes).</source>
          <target state="translated">соответствует любой строке,которая заканчивается на строку &quot;bdc&quot;,включая строку &quot;bdc&quot; (без кавычек).</target>
        </trans-unit>
        <trans-unit id="8bc98179220f92e19a1a58c53a9bd45d54ffdbd9" translate="yes" xml:space="preserve">
          <source>matches the character control-</source>
          <target state="translated">совпадает с контролем символов...</target>
        </trans-unit>
        <trans-unit id="b617fbb7b175fdd37c20c95f64db0a36c2293892" translate="yes" xml:space="preserve">
          <source>matches the format of the output produced by method</source>
          <target state="translated">соответствует формату вывода,произведённого методом</target>
        </trans-unit>
        <trans-unit id="9d19065b9d7370cf3c8d6c06d5f9d37ea4be7671" translate="yes" xml:space="preserve">
          <source>matches the literal character &quot;#&quot;. To specify a literal white space character, you can escape it with a backslash, like:</source>
          <target state="translated">соответствует буквальному символу &quot;#&quot;.Чтобы задать буквальный пробельный символ,вы можете избежать его с помощью обратного слеша,например:</target>
        </trans-unit>
        <trans-unit id="3bf2447768fbf2bf4b2e2e933543695b5244c31c" translate="yes" xml:space="preserve">
          <source>matches upper case things. You can avoid surprises by making the components into instances of this construct by compiling them:</source>
          <target state="translated">совпадает с верхним регистром.Вы можете избежать сюрпризов,сделав компоненты экземплярами этой конструкции,скомпилировав их:</target>
        </trans-unit>
        <trans-unit id="2d3fffffacfc445c265f143813f75c8f495ac85c" translate="yes" xml:space="preserve">
          <source>matches()</source>
          <target state="translated">matches()</target>
        </trans-unit>
        <trans-unit id="c504956e0c725a398bfd8daa901c16a757fa596e" translate="yes" xml:space="preserve">
          <source>matches, because &lt;code&gt;\N{TAMIL SYLLABLE KAU}&lt;/code&gt; is a named sequence consisting of the two characters matched against. Like the other instance where a bracketed class can match multiple characters, and for similar reasons, the class must not be inverted, and the named sequence may not appear in a range, even one where it is both endpoints. If these happen, it is a fatal error if the character class is within an extended &lt;a href=&quot;#Extended-Bracketed-Character-Classes&quot;&gt;(?[...]) &lt;/a&gt; class; and only the first code point is used (with a &lt;code&gt;regexp&lt;/code&gt; -type warning raised) otherwise.</source>
          <target state="translated">совпадает, потому что &lt;code&gt;\N{TAMIL SYLLABLE KAU}&lt;/code&gt; - это именованная последовательность, состоящая из двух совпадающих символов. Как и в другом случае, когда класс в квадратных скобках может соответствовать нескольким символам, и по тем же причинам класс не должен инвертироваться, а именованная последовательность может не появляться в диапазоне, даже если это обе конечные точки. Если это происходит, то это фатальная ошибка, если класс символов находится в расширенном &lt;a href=&quot;#Extended-Bracketed-Character-Classes&quot;&gt;(? [...])&lt;/a&gt; классе; и в противном случае используется только первая кодовая точка (с предупреждением типа &lt;code&gt;regexp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1cef80f4af3762f8acb0c8194e31a9dba7622c98" translate="yes" xml:space="preserve">
          <source>math.h</source>
          <target state="translated">math.h</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="f437d0830962615d329585b8ef177af37610c3a6" translate="yes" xml:space="preserve">
          <source>max_exec_len</source>
          <target state="translated">max_exec_len</target>
        </trans-unit>
        <trans-unit id="493a03ab2084312252ebbf79ad1dea22b9c876c0" translate="yes" xml:space="preserve">
          <source>maximal match</source>
          <target state="translated">максимальное совпадение</target>
        </trans-unit>
        <trans-unit id="6df17187720d1ee015cb9c87f10272784fdb90e6" translate="yes" xml:space="preserve">
          <source>maxopen</source>
          <target state="translated">maxopen</target>
        </trans-unit>
        <trans-unit id="85ce459f8b54d83030c84994d26698ee633e8e8a" translate="yes" xml:space="preserve">
          <source>maxstr</source>
          <target state="translated">maxstr</target>
        </trans-unit>
        <trans-unit id="f458ef050c0ca014fb8f2fdb27ac9b5f69123cfd" translate="yes" xml:space="preserve">
          <source>may</source>
          <target state="translated">may</target>
        </trans-unit>
        <trans-unit id="00dde7e4bcf57be92c2134af6a202a4c7c8c848d" translate="yes" xml:space="preserve">
          <source>may also be expressed as either of:</source>
          <target state="translated">также может быть выражено как одно из двух:</target>
        </trans-unit>
        <trans-unit id="adb0f7026052c31c6cf256420da26be99c3c65e2" translate="yes" xml:space="preserve">
          <source>may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются (но шрифт все равно изменяется для вывода troff).</target>
        </trans-unit>
        <trans-unit id="0ebe475a2d8b3a20ed9e93385b169f98908585ef" translate="yes" xml:space="preserve">
          <source>may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">также может быть установлено специальное значение &lt;code&gt;none&lt;/code&gt; , и в этом случае кавычки вокруг текста C &amp;lt;&amp;gt; не добавляются.</target>
        </trans-unit>
        <trans-unit id="e91b6ec2168ed3aab916a99a798fdf733920f81b" translate="yes" xml:space="preserve">
          <source>may also be used to create a skeleton pure Perl module. See the &lt;b&gt;-X&lt;/b&gt; option.</source>
          <target state="translated">также может использоваться для создания скелета чистого модуля Perl. См. &lt;b&gt;Параметр -X&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfd27998f76697059adfb326f43ad858caa7059" translate="yes" xml:space="preserve">
          <source>may be NULL.</source>
          <target state="translated">может быть НУЛЛ.</target>
        </trans-unit>
        <trans-unit id="33043a9fa22b41b4c6ac896111ccbaf62cc4a49e" translate="yes" xml:space="preserve">
          <source>may be a variable containing a code reference (in this case</source>
          <target state="translated">может быть переменной,содержащей кодовую ссылку (в этом случае</target>
        </trans-unit>
        <trans-unit id="ddec87a1f187c4d9316f5612b310194f0cb15447" translate="yes" xml:space="preserve">
          <source>may be a variable that contains a code reference.</source>
          <target state="translated">может быть переменной,содержащей ссылку на код.</target>
        </trans-unit>
        <trans-unit id="5633babe75c2fba985f3afda654bc7adbab1ef3a" translate="yes" xml:space="preserve">
          <source>may be an unknown concept to some readers. The ISO 8601 standard defines that weeks begin on a Monday and week 1 of the year is the week that includes both January 4th and the first Thursday of the year. In other words, if the first Monday of January is the 2nd, 3rd, or 4th, the preceding days of the January are part of the last week of the preceding year. Week numbers range from 1 to 53.</source>
          <target state="translated">может быть неизвестным для некоторых читателей понятием.Стандарт ISO 8601 определяет,что недели начинаются в понедельник,а неделя 1 года-это неделя,которая включает в себя как 4 января,так и первый четверг года.Другими словами,если первый понедельник января-это 2,3 или 4 января,то предшествующие дни января являются частью последней недели предыдущего года.Номера недель варьируются от 1 до 53.</target>
        </trans-unit>
        <trans-unit id="620555f380a18af4bd9b7ffcf6fcbb4d729e2b7b" translate="yes" xml:space="preserve">
          <source>may be better to avoid namespace conflict.</source>
          <target state="translated">может быть лучше избежать конфликта именных пространств.</target>
        </trans-unit>
        <trans-unit id="b16d2b73013f40d6be654ee941657374d7a6c7cc" translate="yes" xml:space="preserve">
          <source>may be called immediately, even before this function has returned.</source>
          <target state="translated">может быть вызвана немедленно,еще до того,как эта функция вернется.</target>
        </trans-unit>
        <trans-unit id="c01fdf6f3b149c78a69c314df24371c68b8a9d66" translate="yes" xml:space="preserve">
          <source>may be closer to the conjectural</source>
          <target state="translated">может быть ближе к конъюнктуре</target>
        </trans-unit>
        <trans-unit id="8aa5be6aba6ead8c673905a3dcd0c6a264703b5a" translate="yes" xml:space="preserve">
          <source>may be contained in the current directory, or in the home directory. Because this file is sourced in by Perl and may contain arbitrary commands, for security reasons, it must be owned by the superuser or the current user, and writable by no one but its owner.</source>
          <target state="translated">может содержаться в текущем каталоге или в домашнем каталоге.Поскольку этот файл исходит от Perl и может содержать произвольные команды,по соображениям безопасности,он должен принадлежать суперпользователю или текущему пользователю и быть записан только его владельцем.</target>
        </trans-unit>
        <trans-unit id="bc813d4cd4ffa7c7d85e1f0cd24c06e64f3ecb37" translate="yes" xml:space="preserve">
          <source>may be either null or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; to indicate that no value is to be associated with the key; this, as with any non-null value, takes precedence over the existence of a value for the key further along the chain.</source>
          <target state="translated">может иметь значение null или &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; чтобы указать, что с ключом не должно быть связано никакого значения; это, как и любое ненулевое значение, имеет приоритет над существованием значения для ключа дальше по цепочке.</target>
        </trans-unit>
        <trans-unit id="d2e64a32b347cd1852fb2ca8b5a92cd685b5142a" translate="yes" xml:space="preserve">
          <source>may be either the name of an encoding or an</source>
          <target state="translated">может быть либо именем кодировки,либо</target>
        </trans-unit>
        <trans-unit id="d0e4afe33850115d15d23bc351fa60444ff005a4" translate="yes" xml:space="preserve">
          <source>may be empty.</source>
          <target state="translated">может быть пустым.</target>
        </trans-unit>
        <trans-unit id="082c1d60436b887adb588f21fb8ea006b7e859aa" translate="yes" xml:space="preserve">
          <source>may be needed if you change your codepage</source>
          <target state="translated">может понадобиться,если вы смените кодовую страницу</target>
        </trans-unit>
        <trans-unit id="8c2925aa16e7b49e1bb20df5d9c41ab876a112dd" translate="yes" xml:space="preserve">
          <source>may be optimized to</source>
          <target state="translated">может быть оптимизировано до</target>
        </trans-unit>
        <trans-unit id="59a447a3f4fc5d32399811c9cccb0b4c9956f41d" translate="yes" xml:space="preserve">
          <source>may be rendered as: &quot;magic is enabled if you set &lt;code&gt;$Currency&lt;/code&gt; to '</source>
          <target state="translated">может быть отображено как: &quot;магия включена, если вы установите &lt;code&gt;$Currency&lt;/code&gt; на&quot;</target>
        </trans-unit>
        <trans-unit id="c617289a4345e3f601ec6da0eb0a234d7d3e338e" translate="yes" xml:space="preserve">
          <source>may be the name &lt;code&gt;:locale&lt;/code&gt; . This is for very specialized applications, and is documented in &lt;a href=&quot;#The-%3alocale-sub-pragma&quot;&gt;The :locale sub-pragma&lt;/a&gt; below.</source>
          <target state="translated">может быть название &lt;code&gt;:locale&lt;/code&gt; . Это для очень специализированных приложений и описано в &lt;a href=&quot;#The-%3alocale-sub-pragma&quot;&gt;подпрагме: locale&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="acb5ba8300233c06ee33f2092ef458d662a7286b" translate="yes" xml:space="preserve">
          <source>may be used to enter one line of program. If &lt;b&gt;-e&lt;/b&gt; is given, Perl will not look for a filename in the argument list. Multiple &lt;b&gt;-e&lt;/b&gt; commands may be given to build up a multi-line script. Make sure to use semicolons where you would in a normal program.</source>
          <target state="translated">может использоваться для ввода одной строки программы. Если задано &lt;b&gt;-e&lt;/b&gt; , Perl не будет искать имя файла в списке аргументов. Для создания многострочного сценария можно &lt;b&gt;указать&lt;/b&gt; несколько команд &lt;b&gt;-e&lt;/b&gt; . Убедитесь, что вы используете точку с запятой вместо обычной программы.</target>
        </trans-unit>
        <trans-unit id="91c85eab0a37caa5e5ee3e84d621bd38427c1f01" translate="yes" xml:space="preserve">
          <source>may contain variables, which will be interpolated every time the pattern search is evaluated, except for when the delimiter is a single quote. (Note that &lt;code&gt;$(&lt;/code&gt; , &lt;code&gt;$)&lt;/code&gt; , and &lt;code&gt;$|&lt;/code&gt; are not interpolated because they look like end-of-string tests.) Perl will not recompile the pattern unless an interpolated variable that it contains changes. You can force Perl to skip the test and never recompile by adding a &lt;code&gt;/o&lt;/code&gt; (which stands for &quot;once&quot;) after the trailing delimiter. Once upon a time, Perl would recompile regular expressions unnecessarily, and this modifier was useful to tell it not to do so, in the interests of speed. But now, the only reasons to use &lt;code&gt;/o&lt;/code&gt; are one of:</source>
          <target state="translated">может содержать переменные, которые будут интерполироваться каждый раз при оценке поиска по шаблону, за исключением случаев, когда разделителем является одинарная кавычка. (Обратите внимание, что &lt;code&gt;$(&lt;/code&gt; , &lt;code&gt;$)&lt;/code&gt; и &lt;code&gt;$|&lt;/code&gt; не интерполируются, потому что они выглядят как тесты конца строки.) Perl не будет перекомпилировать шаблон, если не изменится содержащаяся в нем интерполированная переменная. Вы можете заставить Perl пропустить тест и никогда не перекомпилировать, добавив &lt;code&gt;/o&lt;/code&gt; (что означает &amp;laquo;один раз&amp;raquo;) после конечного разделителя. Когда-то Perl перекомпилировал регулярные выражения без надобности, и этот модификатор был полезен, чтобы запретить ему это делать в интересах скорости. Но теперь единственная причина использовать &lt;code&gt;/o&lt;/code&gt; - одна из:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
