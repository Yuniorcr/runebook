<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="8ebd028848b2a2942ac465614616f32324230d21" translate="yes" xml:space="preserve">
          <source>Catching signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5024a9f7f3c46574351ad45dcdeceef2016767" translate="yes" xml:space="preserve">
          <source>Categories of modules range from text manipulation to network protocols to database integration to graphics. A categorized list of modules is also available from CPAN.</source>
          <target state="translated">Категории модулей варьируются от манипуляций с текстом до сетевых протоколов,от интеграции баз данных до графики.Категоризированный список модулей также доступен в CPAN.</target>
        </trans-unit>
        <trans-unit id="337a8f7bd3bdbf4fe42f0b9d4b42a95657d8e9f9" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_COLLATE&lt;/code&gt; : Collation</source>
          <target state="translated">Категория &lt;code&gt;LC_COLLATE&lt;/code&gt; : сопоставление</target>
        </trans-unit>
        <trans-unit id="63bd78675cb869e7c134fbca3753e02f0edb2b92" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_COLLATE&lt;/code&gt;: Collation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919d3be1151a8a62ff3f509b3510742d344c2496" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_COLLATE&lt;/code&gt;: Collation: Text Comparisons and Sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beec9c5a8a3b1200e13a31c08cab20f387038371" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_CTYPE&lt;/code&gt; : Character Types</source>
          <target state="translated">Категория &lt;code&gt;LC_CTYPE&lt;/code&gt; : Типы символов</target>
        </trans-unit>
        <trans-unit id="011933a95f9a8627bd8a8b00900841623f871c86" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_CTYPE&lt;/code&gt;: Character Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d237153062484cd9db84eb0e31d1a90b2c50d7ab" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_MESSAGES&lt;/code&gt;: Error and other messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38233af031be21177bea3a81f92c8363621b4861" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_MONETARY&lt;/code&gt; : Formatting of monetary amounts</source>
          <target state="translated">Категория &lt;code&gt;LC_MONETARY&lt;/code&gt; : Форматирование денежных сумм</target>
        </trans-unit>
        <trans-unit id="56775ec2542f69ddf365702c3138f3ad177fd92b" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_MONETARY&lt;/code&gt;: Formatting of monetary amounts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19550402e5a1f045b848054b7a9e298b524aa833" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_NUMERIC&lt;/code&gt; : Numeric Formatting</source>
          <target state="translated">Категория &lt;code&gt;LC_NUMERIC&lt;/code&gt; : числовое форматирование</target>
        </trans-unit>
        <trans-unit id="5e8cd7df31bcad9a7460bcc56674a80279c7718f" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_NUMERIC&lt;/code&gt;: Numeric Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef0947154dc11f8df87c645f41aa4495ea0e052" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_NUMERIC&lt;/code&gt;: Numeric formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55751e3a0413fc5462344716ab71e2bd8275874c" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_TIME&lt;/code&gt;: Date/Time formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf487ce36806c29e5298812ba0b7582489033c6" translate="yes" xml:space="preserve">
          <source>Category &lt;code&gt;LC_TIME&lt;/code&gt;: Respresentation of time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6caa2ce2c0ba347d49ead269d4ac916346dc572" translate="yes" xml:space="preserve">
          <source>Category Hierarchy</source>
          <target state="translated">Категориальная иерархия</target>
        </trans-unit>
        <trans-unit id="ad6f8c0088808eee492b45306c0d1b94608c6f08" translate="yes" xml:space="preserve">
          <source>Category LC_COLLATE: Collation</source>
          <target state="translated">Категория LC_COLLATE:Сопоставление</target>
        </trans-unit>
        <trans-unit id="0bdd88741c1732953327ff657fadb93b2ae039be" translate="yes" xml:space="preserve">
          <source>Category LC_COLLATE: Collation: Text Comparisons and Sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51fd3f6ab56831c7fdec8dd63db4d84c5e5ddfb" translate="yes" xml:space="preserve">
          <source>Category LC_CTYPE: Character Types</source>
          <target state="translated">Категория LC_CTYPE:Типы символов</target>
        </trans-unit>
        <trans-unit id="7682ad4955d10f9cf4cc9354213c179454f72007" translate="yes" xml:space="preserve">
          <source>Category LC_MONETARY: Formatting of monetary amounts</source>
          <target state="translated">Категория LC_MONETARY:Форматирование денежных сумм</target>
        </trans-unit>
        <trans-unit id="07571e7937ae3f96671e4cd556a4abc903111a57" translate="yes" xml:space="preserve">
          <source>Category LC_NUMERIC: Numeric Formatting</source>
          <target state="translated">Категория LC_NUMERIC:Числовое форматирование</target>
        </trans-unit>
        <trans-unit id="df2ca5e8366f7d90f63b83096b599541b20211a0" translate="yes" xml:space="preserve">
          <source>Category LC_TIME: Respresentation of time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5815523127907cea055a8c75d152a5931bf9635a" translate="yes" xml:space="preserve">
          <source>Causes records to be flushed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351f03ebcae4fdf4e90e88c26a354b4fb738e5ad" translate="yes" xml:space="preserve">
          <source>Causes symbolic links to be followed. Since directory trees with symbolic links (followed) may contain files more than once and may even have cycles, a hash has to be built up with an entry for each file. This might be expensive both in space and time for a large directory tree. See &lt;a href=&quot;#follow_fast&quot;&gt;&quot;follow_fast&quot;&lt;/a&gt; and &lt;a href=&quot;#follow_skip&quot;&gt;&quot;follow_skip&quot;&lt;/a&gt; below. If either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dc017dda24f39d24e2b45c927b49e37ad2e173" translate="yes" xml:space="preserve">
          <source>Causes symbolic links to be followed. Since directory trees with symbolic links (followed) may contain files more than once and may even have cycles, a hash has to be built up with an entry for each file. This might be expensive both in space and time for a large directory tree. See &lt;a href=&quot;#follow_fast&quot;&gt;follow_fast&lt;/a&gt; and &lt;a href=&quot;#follow_skip&quot;&gt;follow_skip&lt;/a&gt; below. If either</source>
          <target state="translated">Заставляет переходить по символическим ссылкам. Поскольку деревья каталогов с символическими ссылками (по которым следуют) могут содержать файлы более одного раза и могут даже иметь циклы, необходимо создать хэш с записью для каждого файла. Для большого дерева каталогов это может быть затратно как по пространству, так и по времени. См. &lt;a href=&quot;#follow_fast&quot;&gt;Follow_fast&lt;/a&gt; и &lt;a href=&quot;#follow_skip&quot;&gt;follow_skip&lt;/a&gt; ниже. Если либо</target>
        </trans-unit>
        <trans-unit id="d8a6af2ce96fea0e83364432bebd24ee2a299a63" translate="yes" xml:space="preserve">
          <source>Causes the script to sleep for (integer) EXPR seconds, or forever if no argument is given. Returns the integer number of seconds actually slept.</source>
          <target state="translated">Заставляет скрипт спать на (целые)EXPR секунды,или навсегда,если не задан ни один аргумент.Возвращает целое число фактически уснувших секунд.</target>
        </trans-unit>
        <trans-unit id="adc5b4e7301cfc17b319d4424a90aed30a644658" translate="yes" xml:space="preserve">
          <source>Causes this module to use Time::HiRes module, allowing milliseconds to be returned by subsequent calls to ping().</source>
          <target state="translated">Заставляет этот модуль использовать модуль Time::HiRes,позволяющий возвращать миллисекунды при последующих вызовах ping().</target>
        </trans-unit>
        <trans-unit id="37cbf6da85f81293291a3c0f70bd83d035bcf72f" translate="yes" xml:space="preserve">
          <source>Causing infinite loops etc.</source>
          <target state="translated">Вызывает бесконечные циклы и т.д.</target>
        </trans-unit>
        <trans-unit id="b643ecf0f138f7f21c8987e5e43245e6d526028e" translate="yes" xml:space="preserve">
          <source>Causing signals (especially SIGFPE and SIGALARM) to affect your process.</source>
          <target state="translated">Вызывающие сигналы (особенно SIGFPE и SIGALARM),которые влияют на Ваш процесс.</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="f78acd3020c7919c3876959d6358cd31ff6af003" translate="yes" xml:space="preserve">
          <source>Caution : use this option only if you know that your coderefs will be properly reconstructed by &lt;code&gt;B::Deparse&lt;/code&gt; .</source>
          <target state="translated">Внимание: используйте эту опцию только в том случае, если вы знаете, что ваши ссылки на код будут правильно реконструированы &lt;code&gt;B::Deparse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ad563e2579a1d16afd8a48937c2a4c8af5b92ac" translate="yes" xml:space="preserve">
          <source>Caution : use this option only if you know that your coderefs will be properly reconstructed by &lt;code&gt;B::Deparse&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dbd187de708ee21b01806ae5b0ca883102654a" translate="yes" xml:space="preserve">
          <source>Caveat</source>
          <target state="translated">Caveat</target>
        </trans-unit>
        <trans-unit id="6c45fe1a67bfe92ba6c4b2119ad5a8061d201ed7" translate="yes" xml:space="preserve">
          <source>Caveat: this is a bit of a kludge. In particular note that if anything that appears on STDERR looks like a test result the test harness will get confused. Use this option only if you understand the consequences and can live with the risk.</source>
          <target state="translated">Кэвит:это немного похоже на клешню.В частности,обратите внимание,что если что-то,что появится на STDERR,будет выглядеть как результат теста,то тестовый жгут будет сбит с толку.Используйте эту опцию только в том случае,если вы понимаете последствия и можете жить с риском.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="ff751acd8ebba60eb35fa0124046207c1b17cdf6" translate="yes" xml:space="preserve">
          <source>Caveats mentioned in the description of &lt;code&gt;$!&lt;/code&gt; generally apply to &lt;code&gt;$^E&lt;/code&gt; , also.</source>
          <target state="translated">Предостережения, упомянутые в описании &lt;code&gt;$!&lt;/code&gt; как правило , относятся к &lt;code&gt;$^E&lt;/code&gt; , а также.</target>
        </trans-unit>
        <trans-unit id="edc717de27ac4961ab4fdc9df6b9f7edd3ca7ed3" translate="yes" xml:space="preserve">
          <source>Caveats mentioned in the description of &lt;code&gt;&lt;a href=&quot;#%24%21&quot;&gt;&quot;$!&quot;&lt;/a&gt;&lt;/code&gt; generally apply to &lt;code&gt;$^E&lt;/code&gt;, also.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2480f4a426ee72a3f6daf975f41b3976cd3d2933" translate="yes" xml:space="preserve">
          <source>Caveats:</source>
          <target state="translated">Caveats:</target>
        </trans-unit>
        <trans-unit id="f904f3f198a1560f6503e45c25c6ea2281d83a7a" translate="yes" xml:space="preserve">
          <source>Central America</source>
          <target state="translated">Центральная Америка</target>
        </trans-unit>
        <trans-unit id="09fe478d9ba3d71f7c5e36ee02ee955b6c719e87" translate="yes" xml:space="preserve">
          <source>Centralized management of resources</source>
          <target state="translated">Централизованное управление ресурсами</target>
        </trans-unit>
        <trans-unit id="e7fb0f6eb972f6f903d5d8421fe8c063e2da1bee" translate="yes" xml:space="preserve">
          <source>Cerebral C and C++ programmers should take note of the following:</source>
          <target state="translated">Программистам на Церебральных Си и Си++следует обратить внимание на следующее:</target>
        </trans-unit>
        <trans-unit id="098ac784d3c3bb2be5336c055d431de5a978080e" translate="yes" xml:space="preserve">
          <source>Certain Perl operations that are set-up within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; retain that effect even outside the scope. These include:</source>
          <target state="translated">Определенные операции Perl, которые настраиваются в пределах области &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; сохраняют этот эффект даже за пределами области действия. Это включает:</target>
        </trans-unit>
        <trans-unit id="e4b96ee87d74a7f64e565d1787fa16238cdf53ec" translate="yes" xml:space="preserve">
          <source>Certain Perl operations that are set-up within the scope of a &lt;code&gt;use locale&lt;/code&gt; retain that effect even outside the scope. These include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e445bdfbac84e85f57db984a7caae903e4414a5a" translate="yes" xml:space="preserve">
          <source>Certain SV types are considered 'special'. They're represented by B::SPECIAL and are referred to by a number from the specialsv_list. This array maps that number back to the name of the SV (like 'Nullsv' or '&amp;amp;PL_sv_undef').</source>
          <target state="translated">Некоторые типы SV считаются &amp;laquo;особыми&amp;raquo;. Они представлены B :: SPECIAL и упоминаются числом из specialsv_list. Этот массив отображает это число обратно на имя SV (например, &amp;laquo;Nullsv&amp;raquo; или &amp;laquo;&amp;amp; PL_sv_undef&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="8edd6c5378e389e68c51d5a29d8332712fb8e453" translate="yes" xml:space="preserve">
          <source>Certain Win32 programs called from cygwin programs might need some environment variable, such as e.g. ADODB needs %COMMONPROGRAMFILES%. Call Cygwin::sync_winenv() to copy all Win32 environment variables to your process and note that cygwin will warn on every encounter of non-POSIX paths.</source>
          <target state="translated">Некоторым Win32-программам,вызываемым из cygwin-программ,может понадобиться некоторая переменная окружения,например,ADODB нужны %COMMONPROGRAMFILES%.Вызовите Cygwin::sync_winenv(),чтобы скопировать все переменные окружения Win32 в ваш процесс и заметьте,что cygwin будет предупреждать о каждой встрече не-POSIX путей.</target>
        </trans-unit>
        <trans-unit id="0c5660d59e9ee01e56352c20048bf93f027e41cc" translate="yes" xml:space="preserve">
          <source>Certain built-in Unix features help prevent this most of the time. For instance, filehandles have a &quot;close on exec&quot; flag, which is set</source>
          <target state="translated">Определенные встроенные функции Unix помогают предотвратить это в большинстве случаев.Например,файловые дескрипторы имеют флаг &quot;Закрыть при выполнении&quot;,который установлен</target>
        </trans-unit>
        <trans-unit id="3e1ceadd8b0aea91be4cf67f149af0de9a680656" translate="yes" xml:space="preserve">
          <source>Certain code points are considered problematic. These are Unicode surrogates, Unicode non-characters, and code points above the Unicode maximum of 0x10FFFF. By default these are considered regular code points, but certain situations warrant special handling for them, which can be specified using the &lt;code&gt;flags&lt;/code&gt; parameter. If &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;UTF8_DISALLOW_ILLEGAL_INTERCHANGE&lt;/code&gt;, all three classes are treated as malformations and handled as such. The flags &lt;code&gt;UTF8_DISALLOW_SURROGATE&lt;/code&gt;, &lt;code&gt;UTF8_DISALLOW_NONCHAR&lt;/code&gt;, and &lt;code&gt;UTF8_DISALLOW_SUPER&lt;/code&gt; (meaning above the legal Unicode maximum) can be set to disallow these categories individually. &lt;code&gt;UTF8_DISALLOW_ILLEGAL_INTERCHANGE&lt;/code&gt; restricts the allowed inputs to the strict UTF-8 traditionally defined by Unicode. Use &lt;code&gt;UTF8_DISALLOW_ILLEGAL_C9_INTERCHANGE&lt;/code&gt; to use the strictness definition given by &lt;a href=&quot;https://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;. The difference between traditional strictness and C9 strictness is that the latter does not forbid non-character code points. (They are still discouraged, however.) For more discussion see &lt;a href=&quot;perlunicode#Noncharacter-code-points&quot;&gt;&quot;Noncharacter code points&quot; in perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd014b85703f4f23ce05ad07fc9ca7afcd931605" translate="yes" xml:space="preserve">
          <source>Certain code points are considered problematic. These are Unicode surrogates, Unicode non-characters, and code points above the Unicode maximum of 0x10FFFF. By default these are considered regular code points, but certain situations warrant special handling for them. If &lt;code&gt;flags&lt;/code&gt; contains UTF8_DISALLOW_ILLEGAL_INTERCHANGE, all three classes are treated as malformations and handled as such. The flags UTF8_DISALLOW_SURROGATE, UTF8_DISALLOW_NONCHAR, and UTF8_DISALLOW_SUPER (meaning above the legal Unicode maximum) can be set to disallow these categories individually.</source>
          <target state="translated">Определенные кодовые точки считаются проблемными. Это суррогаты Unicode, несимволы Unicode и кодовые точки выше максимального значения Unicode, равного 0x10FFFF. По умолчанию они считаются обычными кодовыми точками, но некоторые ситуации требуют особого обращения с ними. Если &lt;code&gt;flags&lt;/code&gt; содержит UTF8_DISALLOW_ILLEGAL_INTERCHANGE, все три класса рассматриваются как дефекты и обрабатываются как таковые. Флаги UTF8_DISALLOW_SURROGATE, UTF8_DISALLOW_NONCHAR и UTF8_DISALLOW_SUPER (то есть выше допустимого максимума Unicode) могут быть установлены, чтобы запретить эти категории по отдельности.</target>
        </trans-unit>
        <trans-unit id="b02926fb30feba66eb4b4ce45a0942f1b38d9143" translate="yes" xml:space="preserve">
          <source>Certain file systems have a limited ability to store the times on a file at the expected level of precision. For example, the FAT and HPFS filesystem are unable to create dates on files with a finer granularity than two seconds. This is a limitation of the filesystems, not of utime().</source>
          <target state="translated">Некоторые файловые системы имеют ограниченную возможность хранить время в файле с ожидаемым уровнем точности.Например,файловая система FAT и HPFS не могут создавать даты на файлах с более высокой детализацией,чем две секунды.Это ограничение файловых систем,а не функция utime().</target>
        </trans-unit>
        <trans-unit id="37d5dc51bb3f3e8f5f3c6c97dff5e509bb4e1f21" translate="yes" xml:space="preserve">
          <source>Certain glyph variations for character display are standardized. This lists the non-Unihan ones; the Unihan ones are also not used by Perl, and are in a separate Unicode data base &lt;a href=&quot;http://www.unicode.org/ivd&quot;&gt;http://www.unicode.org/ivd&lt;/a&gt;</source>
          <target state="translated">Некоторые варианты глифов для отображения символов стандартизированы. Здесь перечислены не-Unihan; Unihan также не используются Perl и находятся в отдельной базе данных Unicode &lt;a href=&quot;http://www.unicode.org/ivd&quot;&gt;http://www.unicode.org/ivd&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c362ed86308dd88cab4afc90136f5546e68f6138" translate="yes" xml:space="preserve">
          <source>Certain glyph variations for character display are standardized. This lists the non-Unihan ones; the Unihan ones are also not used by Perl, and are in a separate Unicode data base &lt;a href=&quot;https://www.unicode.org/ivd&quot;&gt;http://www.unicode.org/ivd&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e533d3ad8c20d01d8ecf9ab421d4077df153545a" translate="yes" xml:space="preserve">
          <source>Certain instances became fatal in Perl 5.28; others in perl 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b6cb7913f706e7a5eacb52a20195ab75fdb53c" translate="yes" xml:space="preserve">
          <source>Certain internal algorithms used in the implementation of Perl can be attacked by choosing the input carefully to consume large amounts of either time or space or both. This can lead into the so-called</source>
          <target state="translated">Некоторые внутренние алгоритмы,используемые в реализации Perl,могут быть атакованы тщательным выбором входа,потребляющего большое количество либо времени,либо пространства,либо и того,и другого.Это может привести к так называемому</target>
        </trans-unit>
        <trans-unit id="96a386c331a35cc383e0fb0a983cc8532170d5c8" translate="yes" xml:space="preserve">
          <source>Certain internal hooks can be also set using the &lt;code&gt;%SIG&lt;/code&gt; hash. The routine indicated by &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; is called when a warning message is about to be printed. The warning message is passed as the first argument. The presence of a &lt;code&gt;__WARN__&lt;/code&gt; hook causes the ordinary printing of warnings to &lt;code&gt;STDERR&lt;/code&gt; to be suppressed. You can use this to save warnings in a variable, or turn warnings into fatal errors, like this:</source>
          <target state="translated">Некоторые внутренние перехватчики также могут быть установлены с помощью хэша &lt;code&gt;%SIG&lt;/code&gt; . Подпрограмма, обозначенная &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; вызывается, когда должно быть напечатано предупреждающее сообщение. Предупреждение передается как первый аргумент. Наличие &lt;code&gt;__WARN__&lt;/code&gt; приводит к подавлению обычной печати предупреждений в &lt;code&gt;STDERR&lt;/code&gt; . Вы можете использовать это, чтобы сохранить предупреждения в переменной или превратить предупреждения в фатальные ошибки, например:</target>
        </trans-unit>
        <trans-unit id="b64cf21b984a47fe95b3c69dcb71d4d0db67b02a" translate="yes" xml:space="preserve">
          <source>Certain properties are accessible also via core function calls. These are:</source>
          <target state="translated">Определенные свойства доступны также через вызовы основных функций.Это:</target>
        </trans-unit>
        <trans-unit id="d27dc694c4a5fbe7b1d7b9b68b009abd079b8811" translate="yes" xml:space="preserve">
          <source>Certain signals like SEGV, ILL, and BUS are generated by virtual memory addressing errors and similar &quot;faults&quot;. These are normally fatal: there is little a Perl-level handler can do with them. So Perl delivers them immediately rather than attempting to defer them.</source>
          <target state="translated">Некоторые сигналы,такие как SEGV,ILL и BUS,генерируются ошибками адресации виртуальной памяти и похожими &quot;ошибками&quot;.Обычно они фатальны:с ними мало что может сделать Perl-обработчик.Поэтому Perl доставляет их немедленно,а не пытается их отложить.</target>
        </trans-unit>
        <trans-unit id="50b8ebc63c7a4f1ab576c809f44f4ce8daaac27b" translate="yes" xml:space="preserve">
          <source>Certainly you could write your own code to do this &amp;mdash; or, once again, you could kick that work over to another program. In this case, &lt;code&gt;cat&lt;/code&gt;, running with its own &lt;code&gt;-n&lt;/code&gt; option to activate line numbering, should do the trick:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5c6a969ce5b67e0225d17c82fb95228c449920" translate="yes" xml:space="preserve">
          <source>Certificate verification requires a file containing trusted CA certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9669f7ca96bc0e47d1de13f6d426c2b99745d33f" translate="yes" xml:space="preserve">
          <source>Cf. &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536f525355145c06eb27b43dd05eceed140e4f71" translate="yes" xml:space="preserve">
          <source>Cf. &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">Ср. &lt;a href=&quot;#Prerequisites&quot;&gt;Предпосылки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33b90248a63c8f592d9dd961a96f1170c6b169a4" translate="yes" xml:space="preserve">
          <source>Ch. 15 of &lt;code&gt;Programming Perl (3rd Edition)&lt;/code&gt; by Larry Wall, Tom Christiansen, Jon Orwant; O'Reilly &amp;amp; Associates; ISBN 0-596-00027-8</source>
          <target state="translated">Гл. 15 из &lt;code&gt;Programming Perl (3rd Edition)&lt;/code&gt; Ларри Уолла, Тома Кристиансена, Джона Орванта; O'Reilly &amp;amp; Associates; ISBN 0-596-00027-8</target>
        </trans-unit>
        <trans-unit id="9fe7a1219b8f1fb95786f557bb47edce5064d4db" translate="yes" xml:space="preserve">
          <source>Ch. 15, pp. 403 of &lt;code&gt;Programming Perl (3rd Edition)&lt;/code&gt; by Larry Wall, Tom Christiansen, Jon Orwant; O'Reilly &amp;amp; Associates; ISBN 0-596-00027-8</source>
          <target state="translated">Гл. 15, стр. 403 &lt;code&gt;Programming Perl (3rd Edition)&lt;/code&gt; Ларри Уолла, Тома Кристиансена, Джона Орванта; O'Reilly &amp;amp; Associates; ISBN 0-596-00027-8</target>
        </trans-unit>
        <trans-unit id="c1d2b87261dd962ea7037f4bf10689856392c9bc" translate="yes" xml:space="preserve">
          <source>Chad Granum &amp;lt;exodist@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0c17600e124559bac5dc05a65044b12007a724" translate="yes" xml:space="preserve">
          <source>Chad Granum (EXODIST) &amp;lt;exodist@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b457e42384ae1fdfecf1f9dd9ea5b09206f240a0" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for meta data about the source. This defaults to an empty hashref. See &lt;a href=&quot;#assemble_meta&quot;&gt;&quot;assemble_meta&quot;&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d493056c1da57a03b23c818e0ed106583a75e9df" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for meta data about the source. This defaults to an empty hashref. See &lt;a href=&quot;#assemble_meta&quot;&gt;assemble_meta&lt;/a&gt; for more info.</source>
          <target state="translated">Привязка геттеров / сеттеров к метаданным об источнике. По умолчанию это пустой хэш-адрес. См. &lt;a href=&quot;#assemble_meta&quot;&gt;Assembly_meta&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="d37cf9e27bcdb9224f76d171f3ec04e137833197" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the configuration of the available source handlers. This is a hashref keyed on handler class whose values contain config to be passed onto the handlers during detection &amp;amp; creation. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">Привязка геттера / сеттера к конфигурации доступных исходных обработчиков. Это хэш-ссылка, привязанная к классу обработчика, значения которого содержат конфигурацию, которая будет передана обработчикам во время обнаружения и создания. Имена классов могут быть полными или сокращенными, например:</target>
        </trans-unit>
        <trans-unit id="b8e3ffd2df81751de57a2fcbade1ad6be4b71309" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the flag that dictates whether STDOUT and STDERR should be merged (where appropriate). Defaults to undef.</source>
          <target state="translated">Цепочки геттер/установщик для флага,который диктует,должны ли STDOUT и STDERR быть объединены (где это уместно).По умолчанию-undef.</target>
        </trans-unit>
        <trans-unit id="fa3fa390f5b11b8da2cbd991e38fe6758bc14f24" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the list of command-line arguments that should be passed to the source (where appropriate). Defaults to undef.</source>
          <target state="translated">Цепочки getter/setter для списка аргументов командной строки,которые должны быть переданы источнику (при необходимости).По умолчанию-undef.</target>
        </trans-unit>
        <trans-unit id="6875662647c6f1815155ad787b4b2ddda071cbb4" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the list of command-line switches that should be passed to the source (where appropriate). Defaults to undef.</source>
          <target state="translated">Цепочка getter/setter для списка переключателей командной строки,которые должны быть переданы источнику (при необходимости).По умолчанию-undef.</target>
        </trans-unit>
        <trans-unit id="484c910049e12d13347861a5be23f00c8321a0d6" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the raw TAP source. This is a reference, as it may contain large amounts of data (eg: raw TAP).</source>
          <target state="translated">Цепочки приёма/установки для источника TAP-сырца.Это ссылка,так как она может содержать большое количество данных (например:необработанный TAP).</target>
        </trans-unit>
        <trans-unit id="5de177d0512081cef9520546bf06381211cd6854" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the source's configuration, if any has been provided by the user. How it's used is up to you. This defaults to an empty hashref. See &lt;a href=&quot;#config_for&quot;&gt;&quot;config_for&quot;&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74174c42fd62072d6ee5d0a7398fa78f44559dff" translate="yes" xml:space="preserve">
          <source>Chaining getter/setter for the source's configuration, if any has been provided by the user. How it's used is up to you. This defaults to an empty hashref. See &lt;a href=&quot;#config_for&quot;&gt;config_for&lt;/a&gt; for more info.</source>
          <target state="translated">Привязка геттера / сеттера к конфигурации источника, если таковая была предоставлена ​​пользователем. Как его использовать - решать вам. По умолчанию это пустой хэш-адрес. См. &lt;a href=&quot;#config_for&quot;&gt;Config_for&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="5ffe17af6dc7344517f00a57c19ba135952528bf" translate="yes" xml:space="preserve">
          <source>Chang name from Module::Build::META-spec to CPAN::META::Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930947c88d29b6f085064df238c19e6c783d2627" translate="yes" xml:space="preserve">
          <source>Change and/or examine calling process's signal mask. This uses &lt;code&gt;POSIX::SigSet&lt;/code&gt; objects for the &lt;code&gt;sigset&lt;/code&gt; and &lt;code&gt;oldsigset&lt;/code&gt; arguments. Consult your system's &lt;code&gt;sigprocmask&lt;/code&gt; manpage for details.</source>
          <target state="translated">Измените и / или изучите сигнальную маску вызывающего процесса. Это использует объекты &lt;code&gt;POSIX::SigSet&lt;/code&gt; для аргументов &lt;code&gt;sigset&lt;/code&gt; и &lt;code&gt;oldsigset&lt;/code&gt; . За подробностями &lt;code&gt;sigprocmask&lt;/code&gt; к странице руководства sigprocmask вашей системы .</target>
        </trans-unit>
        <trans-unit id="47d396cd087a5a418e7353a4c45e6745ef5c9209" translate="yes" xml:space="preserve">
          <source>Change directory to /</source>
          <target state="translated">Изменить каталог на /</target>
        </trans-unit>
        <trans-unit id="6b35e50e6231ecd47c51f9d0f60727b3553c64b4" translate="yes" xml:space="preserve">
          <source>Change directory to the parent of the current directory.</source>
          <target state="translated">Изменить директорию на родительскую для текущей директории.</target>
        </trans-unit>
        <trans-unit id="6eba8b030681c63dbaca5c083fcb141f12c78bec" translate="yes" xml:space="preserve">
          <source>Change mode of $file to $mode.</source>
          <target state="translated">Изменить режим $файла на $-режим.</target>
        </trans-unit>
        <trans-unit id="61d995589ae611e0f4742d3a0cee92270e9ce91b" translate="yes" xml:space="preserve">
          <source>Change mode of $file to $mode. The mode can be a string or a number which is interpreted as octal whether or not a leading 0 is given.</source>
          <target state="translated">Изменить режим $файла на $-режим.Режим может быть строкой или числом,которое интерпретируется как восьмеричное,независимо от того,задан ли ведущий 0 или нет.</target>
        </trans-unit>
        <trans-unit id="3a726567b511b7efb1456c7410856f0769212a35" translate="yes" xml:space="preserve">
          <source>Change owner $file to $uname and $gname.</source>
          <target state="translated">Изменить владельца $файла на $uname и $gname.</target>
        </trans-unit>
        <trans-unit id="c8ee54b2a4c58db1f595c468254073b721477b33" translate="yes" xml:space="preserve">
          <source>Change owner of $file to $user. If a $group is given that is changed as well. You can also pass a single parameter with a colon separating the use and group as in 'root:wheel'.</source>
          <target state="translated">Смените владельца $файла на $пользователя.Если дана группа $,то и она тоже будет изменена.Вы также можете передать один параметр с двоеточием,разделяющим использование и группу,как в 'root:wheel'.</target>
        </trans-unit>
        <trans-unit id="aad1746f9b9be805d4a6fb33e7166d4914a6f334" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate object &lt;code&gt;$d&lt;/code&gt; .</source>
          <target state="translated">Измените настройки для объекта deflate &lt;code&gt;$d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a70b55acdbc806db3f9cf83ddddd7fdb5197c49" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate object &lt;code&gt;$d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d7824dc2aeadd89378b9289a40f5baa46baf4c" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate stream &lt;code&gt;$d&lt;/code&gt; .</source>
          <target state="translated">Измените настройки для дефляционного потока &lt;code&gt;$d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="855b623e66d74b9d1b178db74b447aa56559610a" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate stream &lt;code&gt;$d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11138eabf6401374fb6ae86928421d28ef54011" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate stream &lt;code&gt;$gz&lt;/code&gt; .</source>
          <target state="translated">Измените настройки для дефляционного потока &lt;code&gt;$gz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74de238b909fa3831ee3e337a8181b892ae78c10" translate="yes" xml:space="preserve">
          <source>Change settings for the deflate stream &lt;code&gt;$gz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc239982b98cfe5d4bf5a6e97925df8bb9b66869" translate="yes" xml:space="preserve">
          <source>Change style of array and hash dump. If true, short array may be printed on one line.</source>
          <target state="translated">Изменение стиля массива и хэш-дампа.Если переменная имеет значение true,то короткий массив может быть выведен на одну строку.</target>
        </trans-unit>
        <trans-unit id="fc31075534bc4e1f585b7495788835ad53a5ed8b" translate="yes" xml:space="preserve">
          <source>Change style of string dump. Default value of &lt;code&gt;tick&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt; , one can enable either double-quotish dump, or single-quotish by setting it to &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;. By default, characters with high bit set are printed</source>
          <target state="translated">Изменить стиль дампа строки. По умолчанию &lt;code&gt;tick&lt;/code&gt; установлена &lt;code&gt;auto&lt;/code&gt; , можно включить дамп в двойных или одинарных кавычках, установив для него значение &lt;code&gt;&quot;&lt;/code&gt; или &lt;code&gt;'&lt;/code&gt; . По умолчанию печатаются символы с установленным старшим битом.</target>
        </trans-unit>
        <trans-unit id="c7c77d36bf3e842d4b8fb4ade6b48c7e8524fbf5" translate="yes" xml:space="preserve">
          <source>Change style of string dump. Default value of &lt;code&gt;tick&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt;, one can enable either double-quotish dump, or single-quotish by setting it to &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;. By default, characters with high bit set are printed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62e18a300604c2d0b5ad8fe35bb69d2aa22ab89" translate="yes" xml:space="preserve">
          <source>Change the line reading:</source>
          <target state="translated">Измените показания линии:</target>
        </trans-unit>
        <trans-unit id="b8669f91f069c7f2a75dd91ca49f0f2e9423b632" translate="yes" xml:space="preserve">
          <source>Change the partition layout of the disk. &lt;code&gt;$pOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should be a &lt;code&gt;DISK_LAYOUT_INFORMATION&lt;/code&gt; data structure including several &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; data structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5ba9e028e71b7c3b6cfe8c3482bc252c2e3c53" translate="yes" xml:space="preserve">
          <source>Change the size of code list window (default is 10 lines).</source>
          <target state="translated">Изменить размер окна списка кодов (по умолчанию 10 строк).</target>
        </trans-unit>
        <trans-unit id="569c8a1e53a15c2ffb329e7aa5e5500846bb9b87" translate="yes" xml:space="preserve">
          <source>Change the style of array and hash output. If &lt;code&gt;compactDump&lt;/code&gt; , short array may be printed on one line.</source>
          <target state="translated">Измените стиль вывода массива и хэша. Если &lt;code&gt;compactDump&lt;/code&gt; , короткий массив может быть напечатан в одну строку.</target>
        </trans-unit>
        <trans-unit id="0572b73adc9b639f456597dd06554cd0f6cc05cd" translate="yes" xml:space="preserve">
          <source>Change the style of array and hash output. If &lt;code&gt;compactDump&lt;/code&gt;, short array may be printed on one line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddcd6267b5132268c1d3a6f92ad7c15283dd197" translate="yes" xml:space="preserve">
          <source>Change the style of string dump. The default value for &lt;code&gt;quote&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt; ; one can enable double-quotish or single-quotish format by setting it to &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;, respectively. By default, characters with their high bit set are printed verbatim.</source>
          <target state="translated">Измените стиль дампа строки. Значение по умолчанию для &lt;code&gt;quote&lt;/code&gt; - &lt;code&gt;auto&lt;/code&gt; ; можно включить формат двойных или одинарных кавычек, установив для него значение &lt;code&gt;&quot;&lt;/code&gt; или &lt;code&gt;'&lt;/code&gt; соответственно. По умолчанию символы с их старшим битом печатаются дословно.</target>
        </trans-unit>
        <trans-unit id="b59db7b54f3893729c4a3b0a52e805d2eba1378c" translate="yes" xml:space="preserve">
          <source>Change the style of string dump. The default value for &lt;code&gt;quote&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt;; one can enable double-quotish or single-quotish format by setting it to &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;, respectively. By default, characters with their high bit set are printed verbatim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eef76669da6afcc6f9856d189296d7117faccd7" translate="yes" xml:space="preserve">
          <source>Change the type of the partition. &lt;code&gt;$opOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should be a &lt;code&gt;SET_PARTITION_INFORMATION&lt;/code&gt; data structure which is just a single byte containing the new partition type [see the &lt;code&gt;&quot;:PARTITION_&quot;&lt;/code&gt; export class for a list of known types]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38de6175abf6da26b6853e84b1888d7d917d0994" translate="yes" xml:space="preserve">
          <source>Change this to</source>
          <target state="translated">Изменить это на</target>
        </trans-unit>
        <trans-unit id="0558571d851a8433aad3815610abfaf16dab150e" translate="yes" xml:space="preserve">
          <source>Change to an empty directory, and create a placeholder &amp;lt;Makefile.PL&amp;gt;:</source>
          <target state="translated">Перейдите в пустой каталог и создайте заполнитель &amp;lt;Makefile.PL&amp;gt;:</target>
        </trans-unit>
        <trans-unit id="bbbe466cbb3d9bd600f9492fe6485ab273c48d8c" translate="yes" xml:space="preserve">
          <source>Change to the &lt;code&gt;./pod&lt;/code&gt; directory of the build tree, download the Perl logo</source>
          <target state="translated">Перейдите в каталог &lt;code&gt;./pod&lt;/code&gt; дерева сборки, загрузите логотип Perl</target>
        </trans-unit>
        <trans-unit id="862ce088bc8e3f533e4bd14af7a6130330f00504" translate="yes" xml:space="preserve">
          <source>Change to the directory of extraction.</source>
          <target state="translated">Изменение в каталог извлечения.</target>
        </trans-unit>
        <trans-unit id="1a08104f60eb079d49d12cd925f4ebbd076f6abd" translate="yes" xml:space="preserve">
          <source>Change to the extension directory where its source files are present.</source>
          <target state="translated">Переход в каталог расширений,в котором находятся его исходные файлы.</target>
        </trans-unit>
        <trans-unit id="622a8441b6e400617adf70d8d715f1f671124897" translate="yes" xml:space="preserve">
          <source>Change to the installation directory (most probably ADE:), and extract the binary distribution:</source>
          <target state="translated">Перейдите в установочный каталог (скорее всего ADE:)и распакуйте бинарный дистрибутив:</target>
        </trans-unit>
        <trans-unit id="dbe22841ca5b7f3eb852bce99657eae649bc132d" translate="yes" xml:space="preserve">
          <source>Changed 'generated_by' to be mandatory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe067864c4ddea7a2cf4dd4257394cf887e48fd9" translate="yes" xml:space="preserve">
          <source>Changed 'license' to a list and revised the set of valid licenses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ee9857664bbd025f8dc08c9054192f5a4ba70b" translate="yes" xml:space="preserve">
          <source>Changed 'license' to be mandatory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfc844686b44976ffdf32afc2bbc6d5e84d1fb7" translate="yes" xml:space="preserve">
          <source>Changed 'name' to be mandatory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b579ee9bd8e733da6c1f683ab92dd52d015201d5" translate="yes" xml:space="preserve">
          <source>Changed 'optional_features'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1c9a853d9918f33e6f1e78a544dfe2b9f18d41" translate="yes" xml:space="preserve">
          <source>Changed 'resources' subkey 'bugtracker' to a hash for either web or mailto resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d61a8037cdd7d60908582796ac0f493b14a2fc" translate="yes" xml:space="preserve">
          <source>Changed 'resources' subkey 'repository' to a hash that clarifies repository type, url for browsing and url for checkout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af24ccd949d33a1adc74637fde3315e088baac1" translate="yes" xml:space="preserve">
          <source>Changed 'version' to be mandatory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093782d21f6c66e7970abb2b02096897e344f3cd" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;authored_by&lt;/code&gt; to &lt;a href=&quot;#author&quot;&gt;&quot;author&quot;&lt;/a&gt;, since that's always been what it's actually called in actual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91be31dca7e646c5ba6bd8ea6f84da13d38425e2" translate="yes" xml:space="preserve">
          <source>Changed specification of 'optional_features':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4160512942c89c6a796514c3260118220f95e06c" translate="yes" xml:space="preserve">
          <source>Changed to use new prereqs data structure instead of individual keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="d82ce619d11521a894a962f613af5bfbbfd623ad" translate="yes" xml:space="preserve">
          <source>Changes / enhancements you plan to make in the future.</source>
          <target state="translated">Изменения/улучшения,которые вы планируете внести в будущем.</target>
        </trans-unit>
        <trans-unit id="4371a5117e6fef40651394dbe58dc03dbb87745b" translate="yes" xml:space="preserve">
          <source>Changes EQUALIZE_TIMESTAMP to set revision date of target file to one second later than source file, since MMK interprets precisely equal revision dates for a source and target file as a sign that the target needs to be updated.</source>
          <target state="translated">Изменяет EQUALIZE_TIMESTAMP,чтобы установить дату ревизии целевого файла на одну секунду позже,чем исходный файл,так как MMK интерпретирует точно равные даты ревизий для исходного и целевого файла как признак того,что целевой файл нуждается в обновлении.</target>
        </trans-unit>
        <trans-unit id="81b572865eb4145038cce91d99f19dba42417f16" translate="yes" xml:space="preserve">
          <source>Changes are always applied directly to the main development branch, called &quot;blead&quot;. Some patches may be backported to a maintenance branch. If you think your patch is appropriate for the maintenance branch (see &lt;a href=&quot;perlpolicy#MAINTENANCE-BRANCHES&quot;&gt;&quot;MAINTENANCE BRANCHES&quot; in perlpolicy&lt;/a&gt;), please explain why when you submit it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2ce6a709b5b2cac8d8c837247b977c30d65233" translate="yes" xml:space="preserve">
          <source>Changes are always applied directly to the main development branch, called &quot;blead&quot;. Some patches may be backported to a maintenance branch. If you think your patch is appropriate for the maintenance branch (see &lt;a href=&quot;perlpolicy#MAINTENANCE-BRANCHES&quot;&gt;MAINTENANCE BRANCHES in perlpolicy&lt;/a&gt;), please explain why when you submit it.</source>
          <target state="translated">Изменения всегда применяются непосредственно к основной ветке разработки, называемой &amp;laquo;blead&amp;raquo;. Некоторые исправления могут быть перенесены в ветку обслуживания. Если вы считаете, что ваш патч подходит для обслуживающей ветви (см. &lt;a href=&quot;perlpolicy#MAINTENANCE-BRANCHES&quot;&gt;ПОДРАЗДЕЛЕНИЯ ОБСЛУЖИВАНИЯ в perlpolicy&lt;/a&gt; ), пожалуйста, объясните почему, когда вы его отправляете.</target>
        </trans-unit>
        <trans-unit id="1aa5832c7b70a5878149d5b5588b7d55b7c3bff5" translate="yes" xml:space="preserve">
          <source>Changes for h2xs as of Perl 5.8.x by Renee Baecker</source>
          <target state="translated">Изменения для h2xs на Perl 5.8.x от Renee Baecker</target>
        </trans-unit>
        <trans-unit id="62a553e5ccf5c46fdfc0ab8ea84db2a7f76cbebc" translate="yes" xml:space="preserve">
          <source>Changes how to run the linker.</source>
          <target state="translated">Изменения в запуске компоновщика.</target>
        </trans-unit>
        <trans-unit id="f786f1f1a07415a1d8f2db0065ca900fcd53b8f6" translate="yes" xml:space="preserve">
          <source>Changes in code reference aliasing</source>
          <target state="translated">Изменения кодовых ссылок на псевдонимы</target>
        </trans-unit>
        <trans-unit id="be9cab3f4b47428605082907ec95e1b8c3df99df" translate="yes" xml:space="preserve">
          <source>Changes that might break existing code, either on the perl or C level</source>
          <target state="translated">Изменения,которые могут нарушить существующий код,либо на уровне perl,либо на уровне C</target>
        </trans-unit>
        <trans-unit id="ef30b1765940718c3a97213ad99c566c80da7d35" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times on each file of a list of files. The first two elements of the list must be the NUMERIC access and modification times, in that order. Returns the number of files successfully changed. The inode change time of each file is set to the current time. For example, this code has the same effect as the Unix &lt;a href=&quot;http://man.he.net/man1/touch&quot;&gt;touch(1)&lt;/a&gt; command when the files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0ec37c30cf600ec53fc96678818cec2782658c" translate="yes" xml:space="preserve">
          <source>Changes the access and modification times on each file of a list of files. The first two elements of the list must be the NUMERIC access and modification times, in that order. Returns the number of files successfully changed. The inode change time of each file is set to the current time. For example, this code has the same effect as the Unix touch(1) command when the files</source>
          <target state="translated">Изменяет время доступа и модификации каждого файла списка файлов.Первые два элемента списка должны быть ЧИСЛОВЫМИ ВРЕМЯМИ доступа и модификации в этом порядке.Возвращает количество успешно измененных файлов.Время модификации каждого файла устанавливается на текущее время.Например,этот код имеет тот же эффект,что и команда Unix touch(1),когда файлы</target>
        </trans-unit>
        <trans-unit id="4b4b4c86467333f8b7a7b80f4a01e7d1918a1a32" translate="yes" xml:space="preserve">
          <source>Changes the name of a file; an existing file NEWNAME will be clobbered. Returns true for success, false otherwise.</source>
          <target state="translated">Изменяет имя файла;существующий файл Новое имя будет забито.Возвращает true для успеха,false иначе.</target>
        </trans-unit>
        <trans-unit id="e8b1fed7eb953f32d4b671261c0f298f432b77d6" translate="yes" xml:space="preserve">
          <source>Changes the owner (and group) of a list of files. The first two elements of the list must be the</source>
          <target state="translated">Изменение владельца (и группы)списка файлов.Первыми двумя элементами списка должны быть</target>
        </trans-unit>
        <trans-unit id="1c7b4f13f0f9f250ad54a523828fe1dadc6bd8b6" translate="yes" xml:space="preserve">
          <source>Changes the path separator with .</source>
          <target state="translated">Изменяет разделитель путей с помощью кнопки .</target>
        </trans-unit>
        <trans-unit id="2250a43272b4d912fcb35a54a90fbad3a0416b17" translate="yes" xml:space="preserve">
          <source>Changes the permissions of a list of files. The first element of the list must be the numeric mode, which should probably be an octal number, and which definitely should</source>
          <target state="translated">Изменяет права доступа к списку файлов.Первым элементом списка должен быть цифровой режим,который,вероятно,должен быть восьмеричным числом,и который,безусловно,должен</target>
        </trans-unit>
        <trans-unit id="9bd248973528630e1bf213ec672fc9ef7ebeb306" translate="yes" xml:space="preserve">
          <source>Changes the style of printout of strings. Possible values are &lt;code&gt;unctrl&lt;/code&gt; and &lt;code&gt;quote&lt;/code&gt; .</source>
          <target state="translated">Изменяет стиль распечатки строк. Возможные значения: &lt;code&gt;unctrl&lt;/code&gt; и &lt;code&gt;quote&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="746a717e68c80b6993dbf023afb108508405fcf6" translate="yes" xml:space="preserve">
          <source>Changes the style of printout of strings. Possible values are &lt;code&gt;unctrl&lt;/code&gt; and &lt;code&gt;quote&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08e00af7afee19133f68fcfa5c4f8c0f8fe0ac1" translate="yes" xml:space="preserve">
          <source>Changes the value of specified keys and returns the changed part.</source>
          <target state="translated">Изменяет значение указанных клавиш и возвращает измененную часть.</target>
        </trans-unit>
        <trans-unit id="3647bf8ac5df1429e21c0b23760ce2722ca59762" translate="yes" xml:space="preserve">
          <source>Changes the working directory to EXPR, if possible. If EXPR is omitted, changes to the directory specified by &lt;code&gt;$ENV{HOME}&lt;/code&gt; , if set; if not, changes to the directory specified by &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; . (Under VMS, the variable &lt;code&gt;$ENV{SYS$LOGIN}&lt;/code&gt; is also checked, and used if it is set.) If neither is set, &lt;code&gt;&lt;a href=&quot;chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; does nothing. It returns true on success, false otherwise. See the example under &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если возможно, меняет рабочий каталог на EXPR. Если EXPR опущен, изменяется в каталог, указанный в &lt;code&gt;$ENV{HOME}&lt;/code&gt; , если он установлен; в противном случае переходит в каталог, указанный в &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; . (В VMS переменная &lt;code&gt;$ENV{SYS$LOGIN}&lt;/code&gt; также проверяется и используется, если она установлена.) Если ни одна из них не установлена, &lt;code&gt;&lt;a href=&quot;chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; ничего не делает. В случае успеха возвращает true, в противном случае - false. См. Пример под &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1086b5985822b0db7454ba706dee00d51c0ece8" translate="yes" xml:space="preserve">
          <source>Changes the working directory to EXPR, if possible. If EXPR is omitted, changes to the directory specified by &lt;code&gt;$ENV{HOME}&lt;/code&gt; , if set; if not, changes to the directory specified by &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; . (Under VMS, the variable &lt;code&gt;$ENV{SYS$LOGIN}&lt;/code&gt; is also checked, and used if it is set.) If neither is set, &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; does nothing. It returns true on success, false otherwise. See the example under &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Если возможно, меняет рабочий каталог на EXPR. Если EXPR опущен, изменяется в каталог, указанный в &lt;code&gt;$ENV{HOME}&lt;/code&gt; , если он установлен; в противном случае переходит в каталог, указанный в &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; . (В VMS переменная &lt;code&gt;$ENV{SYS$LOGIN}&lt;/code&gt; также проверяется и используется, если она установлена.) Если ни одна из них не установлена, &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; ничего не делает. В случае успеха возвращает true, в противном случае - false. См. Пример под &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df4f043dbae922d023318ec21c602939a6ef560c" translate="yes" xml:space="preserve">
          <source>Changes the working directory to EXPR, if possible. If EXPR is omitted, changes to the directory specified by &lt;code&gt;$ENV{HOME}&lt;/code&gt;, if set; if not, changes to the directory specified by &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt;. (Under VMS, the variable &lt;code&gt;$ENV{'SYS$LOGIN'}&lt;/code&gt; is also checked, and used if it is set.) If neither is set, &lt;a href=&quot;#chdir-EXPR&quot;&gt;&lt;code&gt;chdir&lt;/code&gt;&lt;/a&gt; does nothing and fails. It returns true on success, false otherwise. See the example under &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fabf30bdd6213704e83eeade8922d6faf64b5fd" translate="yes" xml:space="preserve">
          <source>Changes to the array are reflected in the file immediately.</source>
          <target state="translated">Изменения в массиве сразу же отражаются в файле.</target>
        </trans-unit>
        <trans-unit id="6803890e536e93e672442636eafadf71854a5e67" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution associated with this module has been unpacked and opens a subshell there. Exiting the subshell returns.</source>
          <target state="translated">Изменения в директории,в которой был распакован дистрибутив,связанный с этим модулем,и открывается там подоболочка.Возвращается выход из подоболочки.</target>
        </trans-unit>
        <trans-unit id="e4202a82c344d58c60462a8105e61b62b6fab966" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution has been unpacked and opens a subshell there. Exiting the subshell returns.</source>
          <target state="translated">Изменения в каталоге,в котором был распакован дистрибутив,и открытие там оболочки.Возвращается выход из подоболочки.</target>
        </trans-unit>
        <trans-unit id="b8731050a8a7a9f8df1483a6a44fb58459c692c8" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution has been unpacked and runs &lt;code&gt;make clean&lt;/code&gt; there.</source>
          <target state="translated">Переходит в каталог, в который распакован дистрибутив, и запускает там &lt;code&gt;make clean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cf85dcec97c298d42a66cbcf92705947c20dbb8" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution has been unpacked and runs &lt;code&gt;make test&lt;/code&gt; there.</source>
          <target state="translated">Переходит в каталог, в который был распакован дистрибутив, и запускает там &lt;code&gt;make test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce66a23f208dbab005ac63aadf6ed1d3fdec95de" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution has been unpacked and runs something like</source>
          <target state="translated">Изменения в каталоге,в котором дистрибутив был распакован и выполняет что-то вроде</target>
        </trans-unit>
        <trans-unit id="936a954c5967e4fb0f809c16524179a6172e7265" translate="yes" xml:space="preserve">
          <source>Changes to the directory where the distribution has been unpacked and runs the external command &lt;code&gt;make install&lt;/code&gt; there. If &lt;code&gt;make&lt;/code&gt; has not yet been run, it will be run first. A &lt;code&gt;make test&lt;/code&gt; is issued in any case and if this fails, the install is cancelled. The cancellation can be avoided by letting &lt;code&gt;force&lt;/code&gt; run the &lt;code&gt;install&lt;/code&gt; for you.</source>
          <target state="translated">Переходит в каталог, в который распакован дистрибутив, и запускает там внешнюю команду &lt;code&gt;make install&lt;/code&gt; . Если &lt;code&gt;make&lt;/code&gt; еще не был запущен, он будет запущен первым. В любом случае выполняется &lt;code&gt;make test&lt;/code&gt; и если это не удается, установка отменяется. Отмены можно избежать, позволив &lt;code&gt;force&lt;/code&gt; запустить &lt;code&gt;install&lt;/code&gt; за вас.</target>
        </trans-unit>
        <trans-unit id="4d2f22b32c63b840e8428c9c499976b73e6154e7" translate="yes" xml:space="preserve">
          <source>Changing &lt;code&gt;IO::Socket&lt;/code&gt;'s default behaviour means that calling the &lt;code&gt;IO::Socket&lt;/code&gt; constructor with either &lt;code&gt;PF_INET&lt;/code&gt; or &lt;code&gt;PF_INET6&lt;/code&gt; as the &lt;code&gt;Domain&lt;/code&gt; parameter will yield an &lt;code&gt;IO::Socket::IP&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e076fc61139c9d1115b2d2eddf0b31da186ab91" translate="yes" xml:space="preserve">
          <source>Changing directory to &quot;&quot; does not fail ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3b3f1bc0445ad3c7b600875f43d2f0c065a2c3" translate="yes" xml:space="preserve">
          <source>Changing parts of a string via the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; operator. (We avoid use of this term to mean &lt;b&gt;variable interpolation&lt;/b&gt;.)</source>
          <target state="translated">Изменение частей строки с помощью оператора &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; . (Мы избегаем использования этого термина для обозначения &lt;b&gt;интерполяции переменных&lt;/b&gt; .)</target>
        </trans-unit>
        <trans-unit id="69dfdee69d05801ca9b633c050ee49949268fa02" translate="yes" xml:space="preserve">
          <source>Changing parts of a string via the &lt;code&gt;s///&lt;/code&gt; operator. (We avoid use of this term to mean &lt;b&gt;variable interpolation&lt;/b&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a71579d5e34f224f4b7a44cf8dcd2dbcaa9c26" translate="yes" xml:space="preserve">
          <source>Changing the BTREE sort order</source>
          <target state="translated">Изменение порядка сортировки BTREE</target>
        </trans-unit>
        <trans-unit id="e17474358ec9689585fdd62efb80f2dbb797c7f5" translate="yes" xml:space="preserve">
          <source>Changing the case of a scalar, that is, using &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; and &lt;code&gt;\l&lt;/code&gt; in double-quotish contexts, such as regular expression substitutions.</source>
          <target state="translated">Изменение регистра скаляра, то есть использование &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; и &lt;code&gt;\l&lt;/code&gt; в контекстах, заключенных в двойные кавычки, таких как регулярное выражение замены.</target>
        </trans-unit>
        <trans-unit id="1e56842505959df6ca38c46b4b80b41e13ef0bc5" translate="yes" xml:space="preserve">
          <source>Changing the case of a scalar, that is, using &lt;code&gt;uc()&lt;/code&gt;, &lt;code&gt;ucfirst()&lt;/code&gt;, &lt;code&gt;lc()&lt;/code&gt;, and &lt;code&gt;lcfirst()&lt;/code&gt;, or &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt; and &lt;code&gt;\l&lt;/code&gt; in double-quotish contexts, such as regular expression substitutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6f7a30e2f621822d21b001b70407e472b19e52" translate="yes" xml:space="preserve">
          <source>Changing the program's locale should be avoided by XS code. Nevertheless, certain non-Perl libraries called from XS, such as &lt;code&gt;Gtk&lt;/code&gt; do so. When this happens, Perl needs to be told that the locale has changed. Use this function to do so, before returning to Perl.</source>
          <target state="translated">Следует избегать изменения локали программы с помощью кода XS. Тем не менее, некоторые библиотеки, не относящиеся к Perl, вызываемые из XS, например &lt;code&gt;Gtk&lt;/code&gt; , делают это. Когда это происходит, Perl нужно сообщить, что языковой стандарт изменился. Используйте для этого эту функцию, прежде чем вернуться к Perl.</target>
        </trans-unit>
        <trans-unit id="c8e1948c28b77c30e8fb57b5aff7a3dda34db561" translate="yes" xml:space="preserve">
          <source>Character Class Tests</source>
          <target state="translated">Тесты на определение характера</target>
        </trans-unit>
        <trans-unit id="09d5ec3fa8dfa6626f64711e08afb866161e2c4e" translate="yes" xml:space="preserve">
          <source>Character Classes and other Special Escapes</source>
          <target state="translated">Классы персонажей и другие специальные пейзажи</target>
        </trans-unit>
        <trans-unit id="34a9fd5b966d1c074e2cee0432c22ae8d6ad1a1d" translate="yes" xml:space="preserve">
          <source>Character Data</source>
          <target state="translated">Характеристики Данные</target>
        </trans-unit>
        <trans-unit id="f710e107c2984efab355453a12a4c6ea080f5d29" translate="yes" xml:space="preserve">
          <source>Character Encoding Scheme</source>
          <target state="translated">Схема кодирования символов</target>
        </trans-unit>
        <trans-unit id="4cf0ae92275a457503e6f1502570311bf8750725" translate="yes" xml:space="preserve">
          <source>Character Encodings for Input and Output</source>
          <target state="translated">Кодировка символов для входа и выхода</target>
        </trans-unit>
        <trans-unit id="20ec21ca7596ab8473642f9e0c8182b338e1d924" translate="yes" xml:space="preserve">
          <source>Character Escapes</source>
          <target state="translated">Пейзажи персонажей</target>
        </trans-unit>
        <trans-unit id="70a24f05bd3a1beeddb3d790c2d17711c420ebac" translate="yes" xml:space="preserve">
          <source>Character Ranges</source>
          <target state="translated">Диапазоны характеров</target>
        </trans-unit>
        <trans-unit id="d2f44b6bf2d1636aa1643ea45ee60f381bdc2aa5" translate="yes" xml:space="preserve">
          <source>Character Ranges and Classes</source>
          <target state="translated">Диапазоны и классы персонажей</target>
        </trans-unit>
        <trans-unit id="def6212f0e6caec39a85ca7bef2c8e9c647d0bd2" translate="yes" xml:space="preserve">
          <source>Character and block devices. devmajor and devminor should specify the major and minor device numbers.</source>
          <target state="translated">Символ и блок устройства.девайсор и девайсор должны указывать основной и второстепенный номера устройства.</target>
        </trans-unit>
        <trans-unit id="fae5ab4ae64b19dd3884a0674108f420e439509e" translate="yes" xml:space="preserve">
          <source>Character case changing</source>
          <target state="translated">Изменение регистра символов</target>
        </trans-unit>
        <trans-unit id="5c948c7ed34065b8008d26ee3576913d72d9cc02" translate="yes" xml:space="preserve">
          <source>Character class.</source>
          <target state="translated">Класс персонажей.</target>
        </trans-unit>
        <trans-unit id="bf238be65bb5e7ebb05fdca2c63f71cc0a076a1a" translate="yes" xml:space="preserve">
          <source>Character classes</source>
          <target state="translated">Классы характера</target>
        </trans-unit>
        <trans-unit id="b8d7eaa1fb86bcd30ed62dcabd2cca16ff64d891" translate="yes" xml:space="preserve">
          <source>Character classes also have ordinary and special characters, but the sets of ordinary and special characters inside a character class are different than those outside a character class. The special characters for a character class are &lt;code&gt;-]\^$&lt;/code&gt; and are matched using an escape:</source>
          <target state="translated">Классы символов также имеют обычные и специальные символы, но наборы обычных и специальных символов внутри класса символов отличаются от наборов вне класса символов. Специальные символы для класса символов &lt;code&gt;-]\^$&lt;/code&gt; они сопоставляются с помощью escape- символа :</target>
        </trans-unit>
        <trans-unit id="334bc0b92c2c74eb72d0f1cbef4062f7de8fe371" translate="yes" xml:space="preserve">
          <source>Character classes in regular expressions match based on the character properties specified in the Unicode properties database.</source>
          <target state="translated">Классы символов в регулярных выражениях совпадают на основе свойств символов,указанных в базе данных свойств Юникода.</target>
        </trans-unit>
        <trans-unit id="11a965778572465b297760373bc0ab9a5fe50dd4" translate="yes" xml:space="preserve">
          <source>Character classification</source>
          <target state="translated">Классификация символов</target>
        </trans-unit>
        <trans-unit id="0c5cbf9ae05984cb96206744590414bbd855ee84" translate="yes" xml:space="preserve">
          <source>Character code set ID 0037 is a mapping of the ASCII plus Latin-1 characters (i.e. ISO 8859-1) to an EBCDIC set. 0037 is used in North American English locales on the OS/400 operating system that runs on AS/400 computers. CCSID 0037 differs from ISO 8859-1 in 236 places; in other words they agree on only 20 code point values.</source>
          <target state="translated">Набор символов ID 0037 представляет собой сопоставление символов ASCII плюс латинских-1 (т.е.ISO 8859-1)с набором EBCDIC.0037 используется в североамериканских английских локалях на операционной системе OS/400,которая работает на компьютерах AS/400.CCSID 0037 отличается от ISO 8859-1 236 местами;другими словами,они согласовывают только 20 значений кодовых точек.</target>
        </trans-unit>
        <trans-unit id="40746c1bc8caca4e8597fe4115baf09938eb4d04" translate="yes" xml:space="preserve">
          <source>Character code set ID 1047 is also a mapping of the ASCII plus Latin-1 characters (i.e. ISO 8859-1) to an EBCDIC set. 1047 is used under Unix System Services for OS/390 or z/OS, and OpenEdition for VM/ESA. CCSID 1047 differs from CCSID 0037 in eight places, and from ISO 8859-1 in 236.</source>
          <target state="translated">Набор символов ID 1047 также представляет собой сопоставление символов ASCII plus Latin-1 (т.е.ISO 8859-1)с набором EBCDIC.1047 используется в системных службах Unix для OS/390 или z/OS и OpenEdition для VM/ESA.CCSID 1047 отличается от CCSID 0037 на восемь позиций,и от ISO 8859-1 на 236.</target>
        </trans-unit>
        <trans-unit id="d32256dddf94c58de00208fb12aedf2f63688834" translate="yes" xml:space="preserve">
          <source>Character encodings in Perl</source>
          <target state="translated">Кодировка символов на Perl</target>
        </trans-unit>
        <trans-unit id="2d10d3301c84a1fea5306a9e0a3b17b5a412a339" translate="yes" xml:space="preserve">
          <source>Character following &quot;\c&quot; must be printable ASCII</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c549b491b9f34e1abcb580dad4e3f5293c2b051" translate="yes" xml:space="preserve">
          <source>Character following \%c must be '{' or a single-character Unicode property name in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0607657161e2340ffa7a4beebbbda12ccd68cf" translate="yes" xml:space="preserve">
          <source>Character in '%c' format wrapped in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5b2353a10cbca5544ef51fa95c440fa9cf183b" translate="yes" xml:space="preserve">
          <source>Character in 'C' format wrapped in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19980cf7dd07b0c2ceae0bcd55a36893092a1f6" translate="yes" xml:space="preserve">
          <source>Character in 'W' format wrapped in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e366b10c4a9e32d9917de4d038b754077537c5b7" translate="yes" xml:space="preserve">
          <source>Character in 'c' format wrapped in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704c519e45bb20896b1cac037d9dc1f99d2661e9" translate="yes" xml:space="preserve">
          <source>Character ranges in regular expression bracketed character classes ( e.g., &lt;code&gt;/[a-z]/&lt;/code&gt; ) and in the &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (also known as &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;) operator are not magically Unicode-aware. What this means is that &lt;code&gt;[A-Za-z]&lt;/code&gt; will not magically start to mean &quot;all alphabetic letters&quot; (not that it does mean that even for 8-bit characters; for those, if you are using locales (&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), use &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; ; and if not, use the 8-bit-aware property &lt;code&gt;\p{alpha}&lt;/code&gt; ).</source>
          <target state="translated">Диапазоны символов в классах символов в квадратных скобках регулярных выражений (например, &lt;code&gt;/[a-z]/&lt;/code&gt; ) и в операторе &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (также известном как &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; ) магическим образом не поддерживают Unicode. Это означает, что &lt;code&gt;[A-Za-z]&lt;/code&gt; не начнет волшебным образом означать &quot;все буквы алфавита&quot; (не то чтобы это означает, что даже для 8-битных символов; для них, если вы используете локали ( &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; ), используйте &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; ; в противном случае используйте 8-битное свойство &lt;code&gt;\p{alpha}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2aad3249cc0562f24dd1bcebe06ca0ccf5f52570" translate="yes" xml:space="preserve">
          <source>Character ranges in regular expression bracketed character classes ( e.g., &lt;code&gt;/[a-z]/&lt;/code&gt;) and in the &lt;code&gt;tr///&lt;/code&gt; (also known as &lt;code&gt;y///&lt;/code&gt;) operator are not magically Unicode-aware. What this means is that &lt;code&gt;[A-Za-z]&lt;/code&gt; will not magically start to mean &quot;all alphabetic letters&quot; (not that it does mean that even for 8-bit characters; for those, if you are using locales (&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), use &lt;code&gt;/[[:alpha:]]/&lt;/code&gt;; and if not, use the 8-bit-aware property &lt;code&gt;\p{alpha}&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab09560bcba17bdf766d4a698ea4d48d5665939a" translate="yes" xml:space="preserve">
          <source>Character set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562694c8fa3ccd4702e9b5a3b83e76744b7e6c8c" translate="yes" xml:space="preserve">
          <source>Character set modifier behavior prior to Perl 5.14</source>
          <target state="translated">Поведение модификатора набора символов до Perl 5.14</target>
        </trans-unit>
        <trans-unit id="e156811acff779a0efdf0149cf0ae9a427195a9d" translate="yes" xml:space="preserve">
          <source>Character set modifiers</source>
          <target state="translated">Модификаторы набора символов</target>
        </trans-unit>
        <trans-unit id="5b676207ec8a3106cd8805847b93ca527620baf4" translate="yes" xml:space="preserve">
          <source>Character sets and character encoding</source>
          <target state="translated">Наборы символов и кодировка символов</target>
        </trans-unit>
        <trans-unit id="854257539f57f0ac53768f96edc002447a2a13c6" translate="yes" xml:space="preserve">
          <source>Character(s) in '%c' format wrapped in pack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fad3deb369c1ebdb0a0b9d423ca12990358d04" translate="yes" xml:space="preserve">
          <source>Character(s) in '%c' format wrapped in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9c6f6d08e52935fa08236378969d99f092384" translate="yes" xml:space="preserve">
          <source>Characters in Pod documents may be conveyed either as literals, or by number in E&amp;lt;n&amp;gt; codes, or by an equivalent mnemonic, as in E&amp;lt;eacute&amp;gt; which is exactly equivalent to E&amp;lt;233&amp;gt;. The numbers are the Latin1/Unicode values, even on EBCDIC platforms.</source>
          <target state="translated">Символы в документах Pod могут передаваться либо как литералы, либо по номерам в кодах E &amp;lt;n&amp;gt;, либо с помощью эквивалентной мнемоники, как в E &amp;lt;eacute&amp;gt;, что в точности эквивалентно E &amp;lt;233&amp;gt;. Цифры представляют собой значения Latin1 / Unicode даже на платформах EBCDIC.</target>
        </trans-unit>
        <trans-unit id="dcec8944860f789b80b281bc04ffb139e54ea11c" translate="yes" xml:space="preserve">
          <source>Characters may be literals or any of the escape sequences accepted in double-quoted strings. But there is no interpolation, so &lt;code&gt;&quot;$&quot;&lt;/code&gt; and &lt;code&gt;&quot;@&quot;&lt;/code&gt; are treated as literals. A hyphen at the beginning or end, or preceded by a backslash is considered a literal. Escape sequence details are in &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;the table near the beginning of this section&lt;/a&gt;. It is a bug in Perl v5.22 that something like</source>
          <target state="translated">Символы могут быть литералами или любой из управляющих последовательностей, допускаемых в строках с двойными кавычками. Но здесь нет интерполяции, поэтому &lt;code&gt;&quot;$&quot;&lt;/code&gt; и &lt;code&gt;&quot;@&quot;&lt;/code&gt; обрабатываются как литералы. Дефис в начале или конце, или перед ним стоит обратная косая черта, считается буквальным. Детали escape-последовательности находятся в &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;таблице в начале этого раздела&lt;/a&gt; . Это ошибка в Perl v5.22, что-то вроде</target>
        </trans-unit>
        <trans-unit id="163cc83d116a56baee9fe03cafd587b92e5a5bb4" translate="yes" xml:space="preserve">
          <source>Characters may be literals, or (if the delimiters aren't single quotes) any of the escape sequences accepted in double-quoted strings. But there is never any variable interpolation, so &lt;code&gt;&quot;$&quot;&lt;/code&gt; and &lt;code&gt;&quot;@&quot;&lt;/code&gt; are always treated as literals. A hyphen at the beginning or end, or preceded by a backslash is also always considered a literal. Escape sequence details are in &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;the table near the beginning of this section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9963f5cdbae1775d9f83906b3a5cbef411c1ebf6" translate="yes" xml:space="preserve">
          <source>Characters may be specified using a metacharacter syntax much like that used in C: &quot;\n&quot; matches a newline, &quot;\t&quot; a tab, &quot;\r&quot; a carriage return, &quot;\f&quot; a form feed, etc. More generally, \</source>
          <target state="translated">Символы могут быть заданы с использованием синтаксиса мета-символов,аналогичного синтаксису,используемому в языке C:&quot;\n&quot; соответствует новой строке,&quot;\t&quot;-закладке,&quot;\r&quot;-возврату каретки,&quot;\f&quot;-подаче формы и т.д.В более общем плане,&quot;\&quot;.</target>
        </trans-unit>
        <trans-unit id="6677fa2bd945e79a1181804df0a34874fe2d47f6" translate="yes" xml:space="preserve">
          <source>Characters that are not coded in logical order and to be rearranged. If &lt;code&gt;UCA_Version&lt;/code&gt; is equal to or less than 11, default is:</source>
          <target state="translated">Символы, которые не закодированы в логическом порядке и подлежат изменению. Если &lt;code&gt;UCA_Version&lt;/code&gt; равно или меньше 11, значение по умолчанию:</target>
        </trans-unit>
        <trans-unit id="87ac5130c826b6e80d3a59535b9d6400acad5f5d" translate="yes" xml:space="preserve">
          <source>Characters that may carry a special meaning inside a character class are: &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, and are discussed below. They can be escaped with a backslash, although this is sometimes not needed, in which case the backslash may be omitted.</source>
          <target state="translated">Символы, которые могут иметь особое значение внутри класса символов: &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; и &lt;code&gt;]&lt;/code&gt; , обсуждаются ниже. Их можно экранировать с помощью обратной косой черты, хотя иногда в этом нет необходимости, и в этом случае обратную косую черту можно опустить.</target>
        </trans-unit>
        <trans-unit id="8852ce3ecb56edbb61a29ed226d95901da960cba" translate="yes" xml:space="preserve">
          <source>Characters that may carry a special meaning inside a character class are: &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, and are discussed below. They can be escaped with a backslash, although this is sometimes not needed, in which case the backslash may be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dafb52fa02eb41cdb895328b5e1fe67da8f211" translate="yes" xml:space="preserve">
          <source>Charles Bailey</source>
          <target state="translated">Чарльз Бейли</target>
        </trans-unit>
        <trans-unit id="d3be1cf05483936221b495528c8e656819916a6e" translate="yes" xml:space="preserve">
          <source>Charles Bailey &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e62c89e7209c56822c7a94ca2800f8e7a4f3ee5" translate="yes" xml:space="preserve">
          <source>Charles Bailey bailey@cor.newman.upenn.edu Craig Berry craigberry@mac.com Dan Sugalski dan@sidhe.org John Malmberg wb8tyw@qsl.net</source>
          <target state="translated">Чарльз Бейли bailey@cor.newman.upenn.edu Крейг Берри craigberry@mac.com Дэн Шугальский dan@sidhe.org Джон Мальмберг wb8tyw@qsl.net</target>
        </trans-unit>
        <trans-unit id="9de6174de33823948f5f6b768255de294e0aa21b" translate="yes" xml:space="preserve">
          <source>Charles Bailey bailey@newman.upenn.edu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cb7bacebab63abf9230cfeb35ec01ffa449880" translate="yes" xml:space="preserve">
          <source>Charles Wilson &amp;lt;cwilson@ece.gatech.edu&amp;gt;, Eric Fifer &amp;lt;egf7@columbia.edu&amp;gt;, alexander smishlajev &amp;lt;als@turnhere.com&amp;gt;, Steven Morlock &amp;lt;newspost@morlock.net&amp;gt;, Sebastien Barre &amp;lt;Sebastien.Barre@utc.fr&amp;gt;, Teun Burgers &amp;lt;burgers@ecn.nl&amp;gt;, Gerrit P. Haase &amp;lt;gp@familiehaase.de&amp;gt;, Reini Urban &amp;lt;rurban@cpan.org&amp;gt;, Jan Dubois &amp;lt;jand@activestate.com&amp;gt;, Jerry D. Hedden &amp;lt;jdhedden@cpan.org&amp;gt;.</source>
          <target state="translated">Чарльз Уилсон &amp;lt;cwilson@ece.gatech.edu&amp;gt;, Эрик Файфер &amp;lt;egf7@columbia.edu&amp;gt;, Александр Смишлаев &amp;lt;als@turnhere.com&amp;gt;, Стивен Морлок &amp;lt;newspost@morlock.net&amp;gt;, Себастьян Барре &amp;lt;Sebastien.Barre@utc .fr&amp;gt;, Теун Бургерс &amp;lt;burgers@ecn.nl&amp;gt;, Геррит П. Хаасе &amp;lt;gp@familiehaase.de&amp;gt;, Рейни Урбан &amp;lt;rurban@cpan.org&amp;gt;, Ян Дюбуа &amp;lt;jand@activestate.com&amp;gt;, Джерри Д. Хедден &amp;lt;jdhedden@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ec77758a3a3e74069b9047f26277c667bea10ea2" translate="yes" xml:space="preserve">
          <source>Charlie Gonzalez &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f45f4145d31345768a09969013e2d6f185c06a1" translate="yes" xml:space="preserve">
          <source>Chdir to the djgpp subdirectory of perl toplevel and type the following commands:</source>
          <target state="translated">Chdir в подкаталог djgpp верхнего уровня perl и введите следующие команды:</target>
        </trans-unit>
        <trans-unit id="9bd62971ab763d962e7526e5485d69c623bb9430" translate="yes" xml:space="preserve">
          <source>Check 2 data structures. Please note that this is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8940df58b96cd7c07fc9ea07120c785f6f8a4a5c" translate="yes" xml:space="preserve">
          <source>Check a remote host for reachability</source>
          <target state="translated">Проверьте удаленный хост на доступность</target>
        </trans-unit>
        <trans-unit id="e185048ce3c07f61069845d16a69507a66ba5ea9" translate="yes" xml:space="preserve">
          <source>Check again</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a845256cebed69e9f121b044f6c493f63a9f2a" translate="yes" xml:space="preserve">
          <source>Check for correct syntax of hyperlinks &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; . See &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; for details.</source>
          <target state="translated">Проверьте правильность синтаксиса гиперссылок &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; . См. Подробности в &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8bdc034e4189b4605128a06513999466ec157b0" translate="yes" xml:space="preserve">
          <source>Check for correct syntax of hyperlinks &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb3f832fd190f3b3ed53530b24afb5eea0c92cc" translate="yes" xml:space="preserve">
          <source>Check for duplicate declarations: report any of:</source>
          <target state="translated">Проверьте наличие дубликатов деклараций:сообщите о любом из них:</target>
        </trans-unit>
        <trans-unit id="958d7ef30eb1cb4c2c9bdb613326b0eabb0fd9a1" translate="yes" xml:space="preserve">
          <source>Check for malformed or non-existing entities &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">Проверить наличие уродливых или несуществующих сущностей &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b21e54ef9b2e545471d1f5d2abbe4bbee1c2e36" translate="yes" xml:space="preserve">
          <source>Check for malformed or non-existing entities &lt;code&gt;E&amp;lt;...&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9bacd3ffc2516115599a71ea7b04dc011ace75" translate="yes" xml:space="preserve">
          <source>Check for proper balancing of &lt;code&gt;=begin&lt;/code&gt; and &lt;code&gt;=end&lt;/code&gt; . The contents of such a block are generally ignored, i.e. no syntax checks are performed.</source>
          <target state="translated">Проверьте правильность балансировки &lt;code&gt;=begin&lt;/code&gt; и &lt;code&gt;=end&lt;/code&gt; . Содержимое такого блока обычно игнорируется, т.е. проверка синтаксиса не выполняется.</target>
        </trans-unit>
        <trans-unit id="40b5ca578f891471ab958e1c6e7d3033f2e0063b" translate="yes" xml:space="preserve">
          <source>Check for proper balancing of &lt;code&gt;=begin&lt;/code&gt; and &lt;code&gt;=end&lt;/code&gt;. The contents of such a block are generally ignored, i.e. no syntax checks are performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf90762a2de5be38eed8acc089a711c78e01421" translate="yes" xml:space="preserve">
          <source>Check for proper nesting and balancing of &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; and &lt;code&gt;=back&lt;/code&gt; .</source>
          <target state="translated">Проверьте правильность размещения и балансировки &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; и &lt;code&gt;=back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1a8d801a59730d1b931118bf7a048ef7c7f5fe9" translate="yes" xml:space="preserve">
          <source>Check for proper nesting and balancing of &lt;code&gt;=over&lt;/code&gt;, &lt;code&gt;=item&lt;/code&gt; and &lt;code&gt;=back&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb965418973274267147c8cc4fc0522a33ac593" translate="yes" xml:space="preserve">
          <source>Check for same nested interior-sequences (e.g. &lt;code&gt;L&amp;lt;...L&amp;lt;...&amp;gt;...&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">Проверьте наличие одинаковых вложенных внутренних последовательностей (например, &lt;code&gt;L&amp;lt;...L&amp;lt;...&amp;gt;...&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eacd44b00e12dfbcc0672a7ce6d8176f78df3437" translate="yes" xml:space="preserve">
          <source>Check for the cases 0 or 3 of cur_env.je_ret, only used inside an eval context.</source>
          <target state="translated">Проверьте случаи 0 или 3 из cur_env.je_ret,используемые только в контексте eval.</target>
        </trans-unit>
        <trans-unit id="cb0d6f75515a999669b8c1d54704fc6c80c44584" translate="yes" xml:space="preserve">
          <source>Check for unresolved document-internal links. This check may also reveal misspelled links that seem to be internal links but should be links to something else.</source>
          <target state="translated">Проверьте наличие нерассмотренных документов-внутренних ссылок.Эта проверка может также выявить неправильно написанные ссылки,которые кажутся внутренними,но должны быть ссылками на что-то другое.</target>
        </trans-unit>
        <trans-unit id="0a7651bd9a47f2d66aae82c5f9a35a8557e3c59a" translate="yes" xml:space="preserve">
          <source>Check if 2 events are related. In this case related means their traces share a signature meaning they were created with the same context (or at the very least by contexts which share an id, which is the same thing unless someone is doing something very bad).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8d920f49717c2489195caccccf8fc813cbdb8f" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;$INC{'Test2/API.pm'}&lt;/code&gt; is set, if it is then no indentation should be expected. If it is not set, then the old Test::Builder is in use, indentation should be expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303e071a39abc96fd64873d09760f15ff3fe8293" translate="yes" xml:space="preserve">
          <source>Check if IPC is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacbf644ebf224308eedfa346896f0e9559cf48e" translate="yes" xml:space="preserve">
          <source>Check if IPC is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf01f3e17393c98aa466478d49f4f03f393e125" translate="yes" xml:space="preserve">
          <source>Check if IPC is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43ba9dcdb432cd432fedcb03a03818ab2888c56" translate="yes" xml:space="preserve">
          <source>Check if Test2 believes it is the END phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcfb4ca0f8db976dcc8e24eb0fb303e039ca091" translate="yes" xml:space="preserve">
          <source>Check if a formatter has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fabbaa68065f92237c60138ecddb521d11db66" translate="yes" xml:space="preserve">
          <source>Check if all required arguments have been provided</source>
          <target state="translated">Проверьте,все ли необходимые аргументы были представлены</target>
        </trans-unit>
        <trans-unit id="a8509d0714b54138e112fcca7c6d8b6753f39078" translate="yes" xml:space="preserve">
          <source>Check if passed in handles are open for read/write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd3cde46049874971f2b8cfda5aded02ba4b0c9" translate="yes" xml:space="preserve">
          <source>Check if polling is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79df82175c5eb3e95e2c6cd96c98c735fe9a6fb" translate="yes" xml:space="preserve">
          <source>Check if the archive contains a certain file. It will return true if the file is in the archive, false otherwise.</source>
          <target state="translated">Проверьте,содержит ли архив определенный файл.Если файл находится в архиве,то возвращается true,в противном случае false.</target>
        </trans-unit>
        <trans-unit id="1f7e1fb3d76fef513d960c53a327dd45df04cd68" translate="yes" xml:space="preserve">
          <source>Check if the event or facets contain any diagnostics information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ca030276ce67bc4cd267b50bb04ea684a6e47a" translate="yes" xml:space="preserve">
          <source>Check if the event or facets make an assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0509ecd37d0266c697523223ef576efb2ecc36d9" translate="yes" xml:space="preserve">
          <source>Check if the event or facets need to be globally processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d1b49e029c5d15477edaf39f3e80aa24d78cc6" translate="yes" xml:space="preserve">
          <source>Check if the event or facets result in a failing state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee3d96627de58e67f2705fa8ea0075be28ff956" translate="yes" xml:space="preserve">
          <source>Check if the event or facets set a plan, and return the plan details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615b2a8a3b3592d24d4dbec7a82a4376dacd4cc3" translate="yes" xml:space="preserve">
          <source>Check if the event or facets should be rendered or hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4342d3f548c68cd8255f930076bf26fc2f17df34" translate="yes" xml:space="preserve">
          <source>Check if the event or facets should result in process termination, if so the exit code is returned (which could be 0). undef is returned if no termination is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ace7c9922868275872da3901e2c788cb488b0b" translate="yes" xml:space="preserve">
          <source>Check if the object is finalized. Finalization happens when either &lt;code&gt;ipc()&lt;/code&gt;, &lt;code&gt;stack()&lt;/code&gt;, or &lt;code&gt;format()&lt;/code&gt; are called on the object. Once finalization happens these fields are considered unchangeable (not enforced here, enforced by &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0866e80fc11cc3c7149102b7d0a5b3d1a6318d10" translate="yes" xml:space="preserve">
          <source>Check if the overall test run is a failure. Can also be used to set the pass/fail status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b03d03fd3a1c6a8cb9d842cd54e006e7f6354b" translate="yes" xml:space="preserve">
          <source>Check if the plan and counts match, but only if the tests have ended. If tests have not ended this will return undef, otherwise it will be a true/false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5e4799133ac0defe83d83d7bf340921f23b44a" translate="yes" xml:space="preserve">
          <source>Check if the state is set to loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998cc11daba6177490db3aeddca70b082c0a9284" translate="yes" xml:space="preserve">
          <source>Check if this event sets the testing plan. It will return an empty list if it does not. If it does set the plan it will return a list of 1 to 3 items in order: Expected Test Count, Test Directive, Reason for directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8420ecae3d4622430e248d264df7927020a881a" translate="yes" xml:space="preserve">
          <source>Check it's new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3059c728f920e1399329e5c1ad9c928030d581" translate="yes" xml:space="preserve">
          <source>Check out the MLDBM module, available on CPAN in the directory</source>
          <target state="translated">Проверьте модуль MLDBM,доступный на CPAN в каталоге</target>
        </trans-unit>
        <trans-unit id="da39caa4bdb8a551abdb17c85c154b129315c71f" translate="yes" xml:space="preserve">
          <source>Check out the source repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d20ca8b6c95c57523eed6a448e4762d5395b670" translate="yes" xml:space="preserve">
          <source>Check pod documents for syntax errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca159b8d6ca8bc89a6d10a26dae1e203c859a67d" translate="yes" xml:space="preserve">
          <source>Check that a hash is in an internally consistent state.</source>
          <target state="translated">Убедитесь,что гашиш находится во внутреннем состоянии.</target>
        </trans-unit>
        <trans-unit id="6c679ad8ca10d169e6a7df72723849d47a11c40b" translate="yes" xml:space="preserve">
          <source>Check that some temporary files did not make into the perl install tree. Run something like this</source>
          <target state="translated">Убедитесь,что некоторые временные файлы не попали в дерево установки perl.Запустите что-нибудь подобное</target>
        </trans-unit>
        <trans-unit id="ad7649629b85f92dfc5d446ddfd0a8b0ed94757d" translate="yes" xml:space="preserve">
          <source>Check that the input string does not match the regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d4a5814455d4d53950c67798588ac9e4929c9b" translate="yes" xml:space="preserve">
          <source>Check that the input string matches the regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9defd6564bb9099fa189d5588407b66bb7555daa" translate="yes" xml:space="preserve">
          <source>Check that you have &lt;b&gt;BSD&lt;/b&gt; libraries and headers installed, and - optionally - Berkeley DB headers and libraries, and crypt.</source>
          <target state="translated">Убедитесь, что у вас установлены библиотеки и заголовки &lt;b&gt;BSD&lt;/b&gt; , и - необязательно - заголовки и библиотеки Berkeley DB, а также crypt.</target>
        </trans-unit>
        <trans-unit id="1cfcc4548a2343eadc2629dda5508ccfded48bd5" translate="yes" xml:space="preserve">
          <source>Check that you have link386 installed. It comes standard with OS/2, but may be not installed due to customization. If typing</source>
          <target state="translated">Убедитесь,что у вас установлена link386.Он поставляется в стандартной комплектации с OS/2,но может не быть установлен из-за настройки.Если вы набираете</target>
        </trans-unit>
        <trans-unit id="79d08dd23471c409ed3ca7645ef7d274508c7b47" translate="yes" xml:space="preserve">
          <source>Check the &lt;code&gt;Benchmark&lt;/code&gt; docs for further useful techniques.</source>
          <target state="translated">Ознакомьтесь с документацией по &lt;code&gt;Benchmark&lt;/code&gt; для получения дополнительных полезных методов.</target>
        </trans-unit>
        <trans-unit id="14e9adf4a018a86aa09ce8983af2c630914d716c" translate="yes" xml:space="preserve">
          <source>Check the CPAN Testers if a module should work with your platform but it doesn't behave as you'd expect, or you aren't sure whether or not a module will work under your platform. If the module you want isn't listed there, you can test it yourself and let CPAN Testers know, you can join CPAN Testers, or you can request it be tested.</source>
          <target state="translated">Проверьте CPAN тестеры,должен ли модуль работать с Вашей платформой,но он ведет себя не так,как Вы ожидаете,или Вы не уверены,будет ли модуль работать под Вашей платформой.Если нужного модуля там нет,Вы можете протестировать его самостоятельно и сообщить CPAN тестировщикам,Вы можете присоединиться к CPAN тестировщикам,или Вы можете запросить,чтобы он был протестирован.</target>
        </trans-unit>
        <trans-unit id="5173a90532c2701f8f8cdb88adc2b6f4e6723f22" translate="yes" xml:space="preserve">
          <source>Check the PerlIO::via:: namespace on CPAN for examples of PerlIO layers implemented in Perl. To give you an idea how simple the implementation of a PerlIO layer can look, a simple example is included here.</source>
          <target state="translated">Проверьте PerlIO::via::пространство имен на CPAN для примеров слоев PerlIO,реализованных на Perl.Чтобы дать вам представление о том,как может выглядеть простая реализация слоя PerlIO,здесь приведен простой пример.</target>
        </trans-unit>
        <trans-unit id="1c7b70cf85fde5d10a4d6750e595901816be3c74" translate="yes" xml:space="preserve">
          <source>Check the Pod syntax of a document</source>
          <target state="translated">Проверить синтаксис Pod документа</target>
        </trans-unit>
        <trans-unit id="f91480d26f728c8f70780347d46c3882a8821adf" translate="yes" xml:space="preserve">
          <source>Check the contents of the distribution. Read the module's documentation, looking for reasons why you might have trouble using it with MacPerl. Look for</source>
          <target state="translated">Проверьте содержимое дистрибутива.Ознакомьтесь с документацией модуля и узнайте о причинах,по которым у вас могут возникнуть проблемы с использованием MacPerl.Ищите</target>
        </trans-unit>
        <trans-unit id="9e48cf52c63c2d0f64a711912719de261c9edcba" translate="yes" xml:space="preserve">
          <source>Check the validity of the stream if</source>
          <target state="translated">Проверьте действительность потока,если</target>
        </trans-unit>
        <trans-unit id="e9e8967b00a81a9d723ab21648f7d0d7f4c57338" translate="yes" xml:space="preserve">
          <source>Checkcc.U</source>
          <target state="translated">Checkcc.U</target>
        </trans-unit>
        <trans-unit id="ed045ab4ccfe5bf8141076961571d30ec378ba8c" translate="yes" xml:space="preserve">
          <source>Checking the environment entails either looking ahead on the trail, looking behind, or both. &lt;code&gt;'^'&lt;/code&gt; looks behind, to see that there are no characters before. &lt;code&gt;'$'&lt;/code&gt; looks ahead, to see that there are no characters after. &lt;code&gt;\b&lt;/code&gt; looks both ahead and behind, to see if the characters on either side differ in their &quot;word-ness&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a2acac5750a7cb12b97634f29af8ec944c5757" translate="yes" xml:space="preserve">
          <source>Checking the environment entails either looking ahead on the trail, looking behind, or both. &lt;code&gt;^&lt;/code&gt; looks behind, to see that there are no characters before. &lt;code&gt;$&lt;/code&gt; looks ahead, to see that there are no characters after. &lt;code&gt;\b&lt;/code&gt; looks both ahead and behind, to see if the characters on either side differ in their &quot;word-ness&quot;.</source>
          <target state="translated">Чтобы проверить окружающую среду, нужно либо смотреть вперед на тропу, либо назад, либо и то, и другое. &lt;code&gt;^&lt;/code&gt; оглядывается назад, чтобы убедиться, что раньше не было персонажей. &lt;code&gt;$&lt;/code&gt; смотрит вперед, чтобы убедиться, что после него нет символов. &lt;code&gt;\b&lt;/code&gt; смотрит вперед и назад, чтобы увидеть, отличаются ли символы с обеих сторон своей &amp;laquo;словесностью&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="241245aa2d17d53491de163e9619ea5f88ee1470" translate="yes" xml:space="preserve">
          <source>Checking the return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223804327875b075a53dd25f4221175abf389942" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt;. Tests:</source>
          <target state="translated">Проверяет &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; . Тесты:</target>
        </trans-unit>
        <trans-unit id="3a60535c47ae3686d1195136cbe426251f2f931d" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate()&lt;/a&gt;&lt;/code&gt; on a filehandle just opened for write - I do not know why this should or should not work.</source>
          <target state="translated">Проверяет &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate()&lt;/a&gt;&lt;/code&gt; на только что открытом дескрипторе файла на запись - я не знаю, почему это должно или не должно работать.</target>
        </trans-unit>
        <trans-unit id="564e49285a0398ab07e0e7063594b4b39a5abcbe" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;atime&lt;/code&gt; and &lt;code&gt;mtime&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; - unfortunately, HPFS provides only 2sec time granularity (for compatibility with FAT?).</source>
          <target state="translated">Проверки &lt;code&gt;atime&lt;/code&gt; и &lt;code&gt;mtime&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; - (? Для совместимости с FAT) , к сожалению, HPFS обеспечивает только 2SEC время зернистость.</target>
        </trans-unit>
        <trans-unit id="75de396b5f2c5c2cfac86d95628c89b9bf929036" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;atime&lt;/code&gt; and &lt;code&gt;mtime&lt;/code&gt; of &lt;code&gt;stat()&lt;/code&gt; - unfortunately, HPFS provides only 2sec time granularity (for compatibility with FAT?).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d374f3d87b169a9bc3fe67ed761b6e0e67e0f7" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;stat()&lt;/code&gt;. Tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c55bc933dd0fad49fed8b9abe30bb836a465793" translate="yes" xml:space="preserve">
          <source>Checks &lt;code&gt;truncate()&lt;/code&gt; on a filehandle just opened for write - I do not know why this should or should not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aa1e4bbcb9ef8e50cbb1ca2e0aa94d40c33e10" translate="yes" xml:space="preserve">
          <source>Checks for VMS directory spec as well as Unix separators.</source>
          <target state="translated">Проверка спецификации каталога VMS,а также Unix-разделителей.</target>
        </trans-unit>
        <trans-unit id="3af941bd688efd7585a7f0e144f9af47e846d7a5" translate="yes" xml:space="preserve">
          <source>Checks for the perl program under several common perl extensions.</source>
          <target state="translated">Проверяет perl программу в нескольких общих расширениях perl.</target>
        </trans-unit>
        <trans-unit id="f3d96161e784b66068319a1db708dc0748d310a2" translate="yes" xml:space="preserve">
          <source>Checks if a group with the given name has matched something.</source>
          <target state="translated">Проверяет,подходит ли группа с заданным именем.</target>
        </trans-unit>
        <trans-unit id="bd58afee7ae5bcf5112dbf01db1faa210e7afa56" translate="yes" xml:space="preserve">
          <source>Checks if a group with the given name has matched something. Full syntax: &lt;code&gt;(?(&amp;lt;name&amp;gt;)then|else)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b64ff69951ab67fee8d9d86a7a4cf97007ecbf7" translate="yes" xml:space="preserve">
          <source>Checks if the expression has been evaluated inside of recursion.</source>
          <target state="translated">Проверяет,было ли выражение оценено внутри рекурсии.</target>
        </trans-unit>
        <trans-unit id="d1da258437f3b81bdf80ad61adf62e4aecb30a13" translate="yes" xml:space="preserve">
          <source>Checks if the expression has been evaluated inside of recursion. Full syntax: &lt;code&gt;(?(R)&lt;i&gt;then&lt;/i&gt;|&lt;i&gt;else&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dad515448c742f2dc10676e5ccdb019e7a0c22" translate="yes" xml:space="preserve">
          <source>Checks if the expression has been evaluated while executing directly inside of the n-th capture group. This check is the regex equivalent of</source>
          <target state="translated">Проверяет,было ли выражение вычислено при выполнении непосредственно внутри n-ой группы захвата.Эта проверка является регекс-эквивалентом</target>
        </trans-unit>
        <trans-unit id="29b9caf4fecb2c45031e3e282976736db6a59c9c" translate="yes" xml:space="preserve">
          <source>Checks if the numbered capturing group has matched something.</source>
          <target state="translated">Проверяет,соответствует ли пронумерованная группа захвата чему-то.</target>
        </trans-unit>
        <trans-unit id="f5da775ed1b71b8b62ebf522a42da2fb67ee7606" translate="yes" xml:space="preserve">
          <source>Checks if the numbered capturing group has matched something. Full syntax: &lt;code&gt;(?(1)then|else)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7915221a7e3c9b01fb693fd7e47a678921143862" translate="yes" xml:space="preserve">
          <source>Checks if two arrays are equivalent. This is a deep check, so multi-level structures are handled correctly.</source>
          <target state="translated">Проверяет,эквивалентны ли два массива.Это глубокая проверка,поэтому многоуровневые структуры обрабатываются правильно.</target>
        </trans-unit>
        <trans-unit id="e40bfce6a6d81449f234a025589a2a5b020bf9fa" translate="yes" xml:space="preserve">
          <source>Checks to make sure the $module or $object can do these @methods (works with functions, too).</source>
          <target state="translated">Проверяет,может ли $модуль или $объект выполнять эти @методы (работает и с функциями).</target>
        </trans-unit>
        <trans-unit id="55b2f57a95767c489c56b01d1268c9dfc91fb618" translate="yes" xml:space="preserve">
          <source>Checks to see if an SV is tainted. Returns TRUE if it is, FALSE if not.</source>
          <target state="translated">Проверяет,не испорчен ли SV.Возвращает TRUE,если он загрязнен,FALSE,если нет.</target>
        </trans-unit>
        <trans-unit id="d3c0b5dd82119b45805bc8cb1d101b8d9a91fd41" translate="yes" xml:space="preserve">
          <source>Checks to see if the current operating system is one of the given flavors.</source>
          <target state="translated">Проверяет,является ли текущая операционная система одним из заданных вкусов.</target>
        </trans-unit>
        <trans-unit id="963de9ea3a8bb874b459828c02df2b61c6ee5c78" translate="yes" xml:space="preserve">
          <source>Checks to see if the given &lt;code&gt;$object-&amp;gt;isa($class)&lt;/code&gt; . Also checks to make sure the object was defined in the first place. Handy for this sort of thing:</source>
          <target state="translated">Проверяет, является ли данный &lt;code&gt;$object-&amp;gt;isa($class)&lt;/code&gt; . Также проверяет, был ли объект определен изначально. Подходит для таких вещей:</target>
        </trans-unit>
        <trans-unit id="daaaaf198d9542464bc1a7c79801e676fbfcfd1e" translate="yes" xml:space="preserve">
          <source>Checks to see if the given &lt;code&gt;$object-&amp;gt;isa($class)&lt;/code&gt;. Also checks to make sure the object was defined in the first place. Handy for this sort of thing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deed6108b030bfb42052b56fb5c535f65fcd83f1" translate="yes" xml:space="preserve">
          <source>Checks whether the argument would be either an infinity or &lt;code&gt;NaN&lt;/code&gt; when used as a number, but is careful not to trigger non-numeric or uninitialized warnings. it assumes the caller has done &lt;code&gt;SvGETMAGIC(sv)&lt;/code&gt; already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6373448a4e97de67ddcff713361ab246705ca8" translate="yes" xml:space="preserve">
          <source>Checks whether the pattern matches (or does not match, for the '!' variants).</source>
          <target state="translated">Проверяет,совпадает ли шаблон (или не совпадает,для вариантов '!').</target>
        </trans-unit>
        <trans-unit id="a0784bf4c9b988fb0a185f79b6a458b1ead9c855" translate="yes" xml:space="preserve">
          <source>Checks whether the pattern matches (or does not match, for the &lt;code&gt;&quot;!&quot;&lt;/code&gt; variants). Full syntax: &lt;code&gt;(?(?=&lt;i&gt;lookahead&lt;/i&gt;)&lt;i&gt;then&lt;/i&gt;|&lt;i&gt;else&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfac0fe5ba60bfef12b9f1265f8a0428c3029f8" translate="yes" xml:space="preserve">
          <source>Checksum field for the tar header</source>
          <target state="translated">Контрольное поле для заголовка смолы</target>
        </trans-unit>
        <trans-unit id="ffee64cf2b1c4af879bff0e274c6633e34c9742b" translate="yes" xml:space="preserve">
          <source>Child classes can override this method to change how default messages are formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52718161ef0f431cda10c0e79bdec6d20b2e152" translate="yes" xml:space="preserve">
          <source>Child classes can override this method to change how they're stringified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607b7fc55b056c24f1c8cacc3987ff9e25b1dcc5" translate="yes" xml:space="preserve">
          <source>Children's times are only included for terminated children.</source>
          <target state="translated">Детское время учитывается только для уволенных детей.</target>
        </trans-unit>
        <trans-unit id="349507e41dd8c71c10c9df6d2444b5e64a285691" translate="yes" xml:space="preserve">
          <source>Chile</source>
          <target state="translated">Chile</target>
        </trans-unit>
        <trans-unit id="d2eaf2aa1512d6596e0a5bae633537c6b8e779a3" translate="yes" xml:space="preserve">
          <source>China</source>
          <target state="translated">China</target>
        </trans-unit>
        <trans-unit id="189da622f3fbd822d1e732459ee0eddbbb7cd8ef" translate="yes" xml:space="preserve">
          <source>China-based Chinese Encodings</source>
          <target state="translated">китайское кодирование</target>
        </trans-unit>
        <trans-unit id="15dc18865567bcc98554a72a8036e1b64a8b85d5" translate="yes" xml:space="preserve">
          <source>Chinese</source>
          <target state="translated">Chinese</target>
        </trans-unit>
        <trans-unit id="d48a6b368170de01eb1a86e009fcbab8bf75cbe6" translate="yes" xml:space="preserve">
          <source>Chip Salzenberg &amp;lt;</source>
          <target state="translated">Чип Зальценберг &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e4bddc7a2d81236ab3d83bc9f7e071985e724af1" translate="yes" xml:space="preserve">
          <source>Choose a name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92e3f195464d519a284541bb4d50a0a8112bfbe" translate="yes" xml:space="preserve">
          <source>Choose a sensible and consistent version numbering scheme (X.YY is the common Perl module numbering scheme)</source>
          <target state="translated">Выберите разумную и последовательную схему нумерации версий (X.YY-общая схема нумерации модулей Perl).</target>
        </trans-unit>
        <trans-unit id="26d5375b27ee62ca78bfa742d3f1dc585cc2baa3" translate="yes" xml:space="preserve">
          <source>Choose an appropriate license (GPL/Artistic is a good default)</source>
          <target state="translated">Выберите подходящую лицензию (по умолчанию GPL/Художественная лицензия хороша).</target>
        </trans-unit>
        <trans-unit id="80fb4b6e80ff447b460548828bfa4306c5610812" translate="yes" xml:space="preserve">
          <source>Choose an appropriate name</source>
          <target state="translated">Выберите подходящее имя</target>
        </trans-unit>
        <trans-unit id="d82893eb0e9cc35f7e43c5d3e352d8ca738e05ba" translate="yes" xml:space="preserve">
          <source>Choose mnemonic identifiers. If you can't remember what mnemonic means, you've got a problem.</source>
          <target state="translated">Выберите мнемонические идентификаторы.Если ты не можешь вспомнить,что значит мнемонический,у тебя проблема.</target>
        </trans-unit>
        <trans-unit id="ed88e1b0d9bb812c4891cf57f9140a2970de186a" translate="yes" xml:space="preserve">
          <source>Choose wisely.</source>
          <target state="translated">Выбирай с умом.</target>
        </trans-unit>
        <trans-unit id="f68f3e0f920c046e7af5038b0261d7ac2b4646da" translate="yes" xml:space="preserve">
          <source>Chops off the last character of a string and returns the character chopped. It is much more efficient than &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/.$//s&lt;/a&gt;&lt;/code&gt; because it neither scans nor copies the string. If VARIABLE is omitted, chops &lt;code&gt;$_&lt;/code&gt; . If VARIABLE is a hash, it chops the hash's values, but not its keys, resetting the &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; iterator in the process.</source>
          <target state="translated">Отрезает последний символ строки и возвращает нарезанный символ. Он намного более эффективен, чем &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/.$//s&lt;/a&gt;&lt;/code&gt; поскольку не сканирует и не копирует строку. Если ПЕРЕМЕННАЯ опущена, отбрасывает &lt;code&gt;$_&lt;/code&gt; . Если VARIABLE является хешем, он обрезает значения хеша, но не его ключи, сбрасывая &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; итератор в процессе.</target>
        </trans-unit>
        <trans-unit id="06caa54c979ede41f81e5b2bef50565e9d2ae230" translate="yes" xml:space="preserve">
          <source>Chops off the last character of a string and returns the character chopped. It is much more efficient than &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s/.$//s&lt;/a&gt;&lt;/code&gt; because it neither scans nor copies the string. If VARIABLE is omitted, chops &lt;code&gt;$_&lt;/code&gt; . If VARIABLE is a hash, it chops the hash's values, but not its keys, resetting the &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; iterator in the process.</source>
          <target state="translated">Отрезает последний символ строки и возвращает нарезанный символ. Он намного более эффективен, чем &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s/.$//s&lt;/a&gt;&lt;/code&gt; поскольку не сканирует и не копирует строку. Если ПЕРЕМЕННАЯ опущена, отбрасывает &lt;code&gt;$_&lt;/code&gt; . Если VARIABLE является хешем, он обрезает значения хеша, но не его ключи, сбрасывая &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; итератор в процессе.</target>
        </trans-unit>
        <trans-unit id="75642c9b4de22cd87f57f3970064644e82310c40" translate="yes" xml:space="preserve">
          <source>Chops off the last character of a string and returns the character chopped. It is much more efficient than &lt;code&gt;s/.$//s&lt;/code&gt; because it neither scans nor copies the string. If VARIABLE is omitted, chops &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. If VARIABLE is a hash, it chops the hash's values, but not its keys, resetting the &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; iterator in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c578d45c5f714d41a2fcf7ac43a1d3b9259519c" translate="yes" xml:space="preserve">
          <source>Chris 'BinGOs' Williams &amp;lt;chris@bingosnet.co.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1bd8889480f6200aab39143b71843fe93d9348" translate="yes" xml:space="preserve">
          <source>Chris &lt;code&gt;BinGOs&lt;/code&gt; Williams &amp;lt;chris@bingosnet.co.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abee13b6939fa80fd30e20450da7f3b4b64b18ad" translate="yes" xml:space="preserve">
          <source>Chris Nehren &amp;lt;apeiron@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4680e00383524fe7680da1f5ed7fc999f0aaab2b" translate="yes" xml:space="preserve">
          <source>Chris Weyl &amp;lt;cweyl@alumni.drew.edu&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fdef0f255605951e0003542bf785af92a2896b" translate="yes" xml:space="preserve">
          <source>Christian Hansen &amp;lt;chansen@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d172830092c16e3b76f3bbe5147847756d9ac80" translate="yes" xml:space="preserve">
          <source>Christian Walde &amp;lt;walde.christian@googlemail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeace3b5b0b6d6ef61d3311fa7df4fd29dbde4ef" translate="yes" xml:space="preserve">
          <source>Christopher J. Madsen &amp;lt;cjm@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ccad4bb819b68a73cf3637ef33a5d1aeee9bf1" translate="yes" xml:space="preserve">
          <source>Chuck Adams &amp;lt;cja987@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d10419c85d39f36202cd562489c0cca977e3fc" translate="yes" xml:space="preserve">
          <source>Circular References</source>
          <target state="translated">Круглые ссылки</target>
        </trans-unit>
        <trans-unit id="29285dd5c7a27e978de25c300eb6e17434a810c3" translate="yes" xml:space="preserve">
          <source>Civility is simple: stick to the facts while avoiding demeaning remarks and sarcasm. It is not enough to be factual. You must also be civil. Responding in kind to incivility is not acceptable.</source>
          <target state="translated">Цивилизованность проста:придерживайтесь фактов,избегая при этом унизительных замечаний и сарказма.Недостаточно быть фактом.Вы также должны быть вежливы.Реакция в натуральной форме на бесцеремонность неприемлема.</target>
        </trans-unit>
        <trans-unit id="2dfb184266e164f25957890f2de49bc55597501a" translate="yes" xml:space="preserve">
          <source>Civility is simple: stick to the facts while avoiding demeaning remarks, belittling other individuals, sarcasm, or a presumption of bad faith. It is not enough to be factual. You must also be civil. Responding in kind to incivility is not acceptable. If you relay otherwise-unposted comments to the list from a third party, you take responsibility for the content of those comments, and you must therefore ensure that they are civil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90ba8ba0b734645b20aafbecdbbe2c01778c68c" translate="yes" xml:space="preserve">
          <source>Claes Jakobsson &amp;lt;claes@surfar.nu&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921b4678530ac39289303d56c764868a0f90e4d0" translate="yes" xml:space="preserve">
          <source>Clarified &lt;a href=&quot;#dynamic_config&quot;&gt;&quot;dynamic_config&quot;&lt;/a&gt; a bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7557bc9cb46ce626dd758bc650ab1d5cdac0da1f" translate="yes" xml:space="preserve">
          <source>Clarified intended use of 'author' as generalized contact list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="27da14a1fe7c43b167b1731875fb84c22c822b0c" translate="yes" xml:space="preserve">
          <source>Class 'Foo' tried to inherit from itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352b661369c278e18b0da8e3c270f498025dcaf8" translate="yes" xml:space="preserve">
          <source>Class (&lt;code&gt;'Class_Name'&lt;/code&gt; or &lt;code&gt;'*Class_Name'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7fb31960aaba1258b4feeaa688fcb9336dfe6f" translate="yes" xml:space="preserve">
          <source>Class Creation at Compile Time</source>
          <target state="translated">Создание класса во время компиляции</target>
        </trans-unit>
        <trans-unit id="48d732c8305b8b551da41c39926c3f8b3cd63041" translate="yes" xml:space="preserve">
          <source>Class Instance Operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9f77136533c6ff7b7e86c9e68a8e0e99ad867e" translate="yes" xml:space="preserve">
          <source>Class Methods</source>
          <target state="translated">Классовые методы</target>
        </trans-unit>
        <trans-unit id="3fda1907fb10f41774bfaecce153bd2dcb1991b7" translate="yes" xml:space="preserve">
          <source>Class Names as Strings</source>
          <target state="translated">Названия классов как строки</target>
        </trans-unit>
        <trans-unit id="f3e7ba90394996375a075b54692b14d58b442ff0" translate="yes" xml:space="preserve">
          <source>Class method for use inside a thread to change its own behavior for &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Метод класса для использования внутри потока, чтобы изменить его собственное поведение для &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="488dbbda6a117b4743feeab1f60e1bf900a5fa01" translate="yes" xml:space="preserve">
          <source>Class method for use inside a thread to change its own behavior for &lt;code&gt;exit()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38175b54007e6872fad46c411f63af989070306" translate="yes" xml:space="preserve">
          <source>Class method that allows a thread to detach itself.</source>
          <target state="translated">Метод класса,позволяющий отделить поток.</target>
        </trans-unit>
        <trans-unit id="0e0095b85b575f8ed03afeaf1d333c819ad78615" translate="yes" xml:space="preserve">
          <source>Class method that allows a thread to determine whether or not it is detached.</source>
          <target state="translated">Метод класса,позволяющий определить,отсоединен поток или нет.</target>
        </trans-unit>
        <trans-unit id="e73d227a516617a6441904d7cb0de003fa8faaff" translate="yes" xml:space="preserve">
          <source>Class method that allows a thread to obtain its own</source>
          <target state="translated">Метод класса,позволяющий потоку получить свой собственный</target>
        </trans-unit>
        <trans-unit id="4898ddb7865314fdb26c20ddf401c39b5082833c" translate="yes" xml:space="preserve">
          <source>Class method that allows a thread to obtain its own ID.</source>
          <target state="translated">Метод класса,позволяющий потоку получить свой собственный идентификатор.</target>
        </trans-unit>
        <trans-unit id="fddf8c93c0000670b5cdf682b97e468968024e66" translate="yes" xml:space="preserve">
          <source>Class method to return the current thread's context. This returns the same value as running &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; inside the current thread's entry point function.</source>
          <target state="translated">Метод класса для возврата контекста текущего потока. Это возвращает то же значение, что и запуск &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; внутри функции точки входа текущего потока.</target>
        </trans-unit>
        <trans-unit id="66c8ddfff1d6edc57d53312ba77ecdf9a1d523f5" translate="yes" xml:space="preserve">
          <source>Class method to return the current thread's context. This returns the same value as running &lt;a href=&quot;perlfunc#wantarray&quot;&gt;wantarray()&lt;/a&gt; inside the current thread's entry point function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900e960bfc32d7354820f2e10ac47623183d4172" translate="yes" xml:space="preserve">
          <source>Class method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e8fdd13a105e0002eef0663431494746684737" translate="yes" xml:space="preserve">
          <source>Class::Accessor</source>
          <target state="translated">Class::Accessor</target>
        </trans-unit>
        <trans-unit id="394e591256dfedee8ffcd71362b2ad76a446733c" translate="yes" xml:space="preserve">
          <source>Class::C3</source>
          <target state="translated">Class::C3</target>
        </trans-unit>
        <trans-unit id="6d45f04ee3b770e5707c62b830d994b42f571d44" translate="yes" xml:space="preserve">
          <source>Class::Struct</source>
          <target state="translated">Class::Struct</target>
        </trans-unit>
        <trans-unit id="2ea8699f7b748850b0a3f5be8865468e94f1fe28" translate="yes" xml:space="preserve">
          <source>Class::Struct - declare struct-like datatypes as Perl classes</source>
          <target state="translated">Класс::Структура-объявите структуроподобные типы данных как классы Perl.</target>
        </trans-unit>
        <trans-unit id="eabd5b700d02e72052a5dba7a49163d27d89c51a" translate="yes" xml:space="preserve">
          <source>Class::Tiny</source>
          <target state="translated">Class::Tiny</target>
        </trans-unit>
        <trans-unit id="77e7593f3ad030d22758c56fb1b2215a3db2ee44" translate="yes" xml:space="preserve">
          <source>Classes and inherited methods.</source>
          <target state="translated">Занятия и унаследованные методы.</target>
        </trans-unit>
        <trans-unit id="1161f577bbba62479b9f81c878cce8a1b390e9a9" translate="yes" xml:space="preserve">
          <source>Classes based on the &lt;code&gt;id()&lt;/code&gt; function (and hence classes based on &lt;code&gt;idhash()&lt;/code&gt; and &lt;code&gt;fieldhash()&lt;/code&gt; ) show a peculiar behavior in that the class name can be used like an object. Specifically, methods that set or read data associated with an object continue to work as class methods, just as if the class name were an object, distinct from all other objects, with its own data. This object may be called the</source>
          <target state="translated">Классы, основанные на функции &lt;code&gt;id()&lt;/code&gt; (и, следовательно, классы, основанные на &lt;code&gt;idhash()&lt;/code&gt; и &lt;code&gt;fieldhash()&lt;/code&gt; ), демонстрируют своеобразное поведение в том смысле, что имя класса может использоваться как объект. В частности, методы, которые устанавливают или читают данные, связанные с объектом, продолжают работать как методы класса, как если бы имя класса было объектом, отличным от всех других объектов, со своими собственными данными. Этот объект можно назвать</target>
        </trans-unit>
        <trans-unit id="6ad5d015aacfec0dfde0e9600202357a1382762e" translate="yes" xml:space="preserve">
          <source>Classes based on the &lt;code&gt;id()&lt;/code&gt; function (and hence classes based on &lt;code&gt;idhash()&lt;/code&gt; and &lt;code&gt;fieldhash()&lt;/code&gt;) show a peculiar behavior in that the class name can be used like an object. Specifically, methods that set or read data associated with an object continue to work as class methods, just as if the class name were an object, distinct from all other objects, with its own data. This object may be called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe3306e3ca4485e41a1374bad73dbf1cbd32c97" translate="yes" xml:space="preserve">
          <source>Clean out some extra dll.{base,exp} files which might be generated by gcc. Otherwise, take out all *.pdb files.</source>
          <target state="translated">Очистите некоторые дополнительные dll.{base,exp}файлы,которые могут быть сгенерированы gcc.В противном случае,удалите все *.pdb файлы.</target>
        </trans-unit>
        <trans-unit id="44fff3c8b56cfdff2a4b1fd6a798cd0eef5df63b" translate="yes" xml:space="preserve">
          <source>Clean package to evaluate code in</source>
          <target state="translated">Чистый пакет для оценки кода в</target>
        </trans-unit>
        <trans-unit id="a72e6202d4001a9b912438ef80c86fb133020828" translate="yes" xml:space="preserve">
          <source>Clean up ERRSV so we can safely set it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cfbcf1f47828bf537936a130691a497387fb6d" translate="yes" xml:space="preserve">
          <source>Clean up some OS specific files. Plus the temp file used to shorten a lot of commands. And the name mangler database.</source>
          <target state="translated">Очистите некоторые файлы,специфичные для ОС.Плюс временный файл,который использовался для сокращения множества команд.И база данных имен.</target>
        </trans-unit>
        <trans-unit id="81ba7eebd7e241b8a0d3ee0f0dc83f6dcb213ac0" translate="yes" xml:space="preserve">
          <source>Cleaning Up Your Path</source>
          <target state="translated">Очистка вашего пути</target>
        </trans-unit>
        <trans-unit id="f0ac618dc389d1f694ce2b22b281bf48e0a7c7e1" translate="yes" xml:space="preserve">
          <source>Cleaning a working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39c68e4f213f84f2b2c6b1480b516f413b3ce6f" translate="yes" xml:space="preserve">
          <source>Cleanup VOS core files</source>
          <target state="translated">Очистка основных файлов VOS</target>
        </trans-unit>
        <trans-unit id="89d75847cf7d1968a70859baea6df0822891a7f0" translate="yes" xml:space="preserve">
          <source>Cleanup at end of scope during compilation: set the max seq number for lexicals in this scope and warn of any lexicals that never got introduced.</source>
          <target state="translated">Очистка в конце scope во время компиляции:установите максимальный номер seq для лексики в этом scope и предупреждайте о любых лексиках,которые никогда не были введены.</target>
        </trans-unit>
        <trans-unit id="090755b1798e39d1824b0b1af3f46d5a518ba79a" translate="yes" xml:space="preserve">
          <source>Clear (remove, delete, ...) all values from the tied array associated with object</source>
          <target state="translated">Очистить (удалить,удалить,...)все значения из связанного массива,связанного с объектом.</target>
        </trans-unit>
        <trans-unit id="f3388c6c3c8ea1834f8402fd24982f91fd19df77" translate="yes" xml:space="preserve">
          <source>Clear all cached times.</source>
          <target state="translated">Очистить все кэшированные времена.</target>
        </trans-unit>
        <trans-unit id="d49faf737a36f02abafb6ec88b142fb354d6f3ff" translate="yes" xml:space="preserve">
          <source>Clear all values from the tied hash</source>
          <target state="translated">Очистите все значения от завязанного хэша</target>
        </trans-unit>
        <trans-unit id="716a5cc3044dab9309ffffc76efde99c4966f639" translate="yes" xml:space="preserve">
          <source>Clear an SV: call any destructors, free up any memory used by the body, and free the body itself. The SV's head is</source>
          <target state="translated">Очистить SV:вызовите любые деструкторы,освободите любую память,используемую телом,и освободите само тело.Голова SV</target>
        </trans-unit>
        <trans-unit id="4d44f4bb1140ae5aa0e259ee5cb4bd4ea4aba014" translate="yes" xml:space="preserve">
          <source>Clear any placeholders from a locked hash. Should not be used directly. You should use the wrapper functions provided by Hash::Util instead. As of 5.25 also available as &lt;code&gt; Hash::Util::_clear_placeholders(%hash) &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f45c3303d209b593f661cc5395c426e8611e2fe" translate="yes" xml:space="preserve">
          <source>Clear end-of-file and error indicators. Should call &lt;code&gt;PerlIOBase_clearerr()&lt;/code&gt; to set the &lt;code&gt;PERLIO_F_XXXXX&lt;/code&gt; flags, which may suffice.</source>
          <target state="translated">Очистить индикаторы конца файла и ошибки. Следует вызвать &lt;code&gt;PerlIOBase_clearerr()&lt;/code&gt; для установки флагов &lt;code&gt;PERLIO_F_XXXXX&lt;/code&gt; , чего может хватить.</target>
        </trans-unit>
        <trans-unit id="c704c7949a89c5080ffdb34efe24fd104216362a" translate="yes" xml:space="preserve">
          <source>Clear out all the active components of a CV. This can happen either by an explicit &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; &amp;amp;foo&lt;/code&gt; , or by the reference count going to zero. In the former case, we keep the CvOUTSIDE pointer, so that any anonymous children can still follow the full lexical scope chain.</source>
          <target state="translated">Очистите все активные компоненты резюме. Это может произойти либо при явном &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; &amp;amp;foo&lt;/code&gt; , либо при обнулении счетчика ссылок. В первом случае мы сохраняем указатель CvOUTSIDE, так что любые анонимные дочерние элементы могут по-прежнему следовать всей цепочке лексической области видимости.</target>
        </trans-unit>
        <trans-unit id="602d9589991fce06a0e1b36e0a5e4e7b3e5616d2" translate="yes" xml:space="preserve">
          <source>Clear out all the active components of a CV. This can happen either by an explicit &lt;code&gt;undef &amp;amp;foo&lt;/code&gt;, or by the reference count going to zero. In the former case, we keep the &lt;code&gt;CvOUTSIDE&lt;/code&gt; pointer, so that any anonymous children can still follow the full lexical scope chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19b93ff531ba8a433d86d2a96a77579a9f89c2d" translate="yes" xml:space="preserve">
          <source>Clear something magical that the SV represents. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b91d04ce711fbc4bae58028f0e5981dcdbd67ba" translate="yes" xml:space="preserve">
          <source>Clear something magical that the SV represents. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Ясно что-нибудь волшебное, что представляет SV. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b01d4c4067d3dfce27d55a2e8d3ed5071a36b77" translate="yes" xml:space="preserve">
          <source>Clear the cached time for COUNT rounds of the null loop.</source>
          <target state="translated">Очистите кэшированное время для циклов COUNT в нулевом цикле.</target>
        </trans-unit>
        <trans-unit id="634725c3d47211ac8f6d330d62e66b608d7b2140" translate="yes" xml:space="preserve">
          <source>Clear the contents of &lt;code&gt;$@&lt;/code&gt;, setting it to the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dd73c2f90db1a664404bb49713a30b15f4ee3a" translate="yes" xml:space="preserve">
          <source>Clear the default .SUFFIXES and put in our own list.</source>
          <target state="translated">Очистите .SUFFIXES по умолчанию и внесите в наш собственный список.</target>
        </trans-unit>
        <trans-unit id="16fa1383ef967c8f5a42bfabaf38f90efd78fb32" translate="yes" xml:space="preserve">
          <source>Clear the error and EOF flags. A no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8e52e2f767f085e79c243fc87322fea735897b" translate="yes" xml:space="preserve">
          <source>Clear the given handle's error indicator. Returns -1 if the handle is invalid, 0 otherwise.</source>
          <target state="translated">Очистите индикатор ошибки рукоятки.Возвращает -1,если рукоятка недействительна,0 в противном случае.</target>
        </trans-unit>
        <trans-unit id="c4550ae4c0426155ad5abb566d892619b67766b1" translate="yes" xml:space="preserve">
          <source>Clear the pointed to pad value on scope exit. (i.e. the runtime action of 'my')</source>
          <target state="translated">Очистите указанное значение подушки на выходе из прицела.(т.е.действие во время выполнения &quot;моего&quot;).</target>
        </trans-unit>
        <trans-unit id="f63b2e6eb249335bd7855ca4714c16200d5e2e3f" translate="yes" xml:space="preserve">
          <source>Clear the pointed to pad value on scope exit. (i.e. the runtime action of &lt;code&gt;my&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4788b3cbc9894af08698b7c684455094faa0d2de" translate="yes" xml:space="preserve">
          <source>Clearerr</source>
          <target state="translated">Clearerr</target>
        </trans-unit>
        <trans-unit id="57a12ccd13dcf014dfc25137bea182ded0f98ac8" translate="yes" xml:space="preserve">
          <source>Clears a slot in the current scratchpad which corresponds to &lt;code&gt;sv&lt;/code&gt; at the end of</source>
          <target state="translated">Очищает слот в текущем блокноте, который соответствует &lt;code&gt;sv&lt;/code&gt; в конце</target>
        </trans-unit>
        <trans-unit id="3ef31da8d602e77684482123705889bd007979e0" translate="yes" xml:space="preserve">
          <source>Clears an array, making it empty. Does not free the memory the av uses to store its list of scalars. If any destructors are triggered as a result, the av itself may be freed when this function returns.</source>
          <target state="translated">Очищает массив,делая его пустым.Не освобождает память,используемую av для хранения списка скаляров.Если в результате сработают деструкторы,то при возвращении этой функции может быть освобождено само av.</target>
        </trans-unit>
        <trans-unit id="8cd338daf3e28d8a698a54a756c5a2c73cce2208" translate="yes" xml:space="preserve">
          <source>Clears any placeholders from a hash. If a restricted hash has any of its keys marked as readonly and the key is subsequently deleted, the key is not actually deleted but is marked by assigning it a value of &amp;amp;PL_sv_placeholder. This tags it so it will be ignored by future operations such as iterating over the hash, but will still allow the hash to have a value reassigned to the key at some future point. This function clears any such placeholder keys from the hash. See Hash::Util::lock_keys() for an example of its use.</source>
          <target state="translated">Удаляет из хеша все заполнители. Если какой-либо из ключей ограниченного хэша помечен как доступный только для чтения, и ключ впоследствии удаляется, ключ фактически не удаляется, а помечается путем присвоения ему значения &amp;amp; PL_sv_placeholder. Это помечает его, поэтому он будет игнорироваться будущими операциями, такими как итерация по хешу, но все же позволит хешу переназначить значение для ключа в какой-то момент в будущем. Эта функция удаляет любые такие ключи-заполнители из хеша. См. Hash :: Util :: lock_keys () для примера его использования.</target>
        </trans-unit>
        <trans-unit id="7fe4e4728f7507a12291c7ff61795e7c7e55d94d" translate="yes" xml:space="preserve">
          <source>Clears any placeholders from a hash. If a restricted hash has any of its keys marked as readonly and the key is subsequently deleted, the key is not actually deleted but is marked by assigning it a value of &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt;. This tags it so it will be ignored by future operations such as iterating over the hash, but will still allow the hash to have a value reassigned to the key at some future point. This function clears any such placeholder keys from the hash. See &lt;code&gt;&lt;a href=&quot;Hash::Util#lock_keys&quot;&gt;Hash::Util::lock_keys()&lt;/a&gt;&lt;/code&gt; for an example of its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8694e0be1c305fe59f17048c06b457a918bbcd82" translate="yes" xml:space="preserve">
          <source>Clears the internal table of &quot;seen&quot; references and returns the object itself.</source>
          <target state="translated">Очищает внутреннюю таблицу от &quot;увиденных&quot; ссылок и возвращает сам объект.</target>
        </trans-unit>
        <trans-unit id="82cd24de384e7ca6d6eaf2bbced43a0f53cdbcf4" translate="yes" xml:space="preserve">
          <source>Click Terminal, and enable SSH service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b31851c74e0f5ebbb3dfaea28b4822609aa2b8" translate="yes" xml:space="preserve">
          <source>Client Callback Methods</source>
          <target state="translated">Методы обратного вызова клиентов</target>
        </trans-unit>
        <trans-unit id="37da5860354a7f86a5ca376c0d24243e5da20032" translate="yes" xml:space="preserve">
          <source>Clients of &lt;b&gt;Pod::Parser&lt;/b&gt; should use the following methods to access instance data fields:</source>
          <target state="translated">Клиенты &lt;b&gt;Pod :: Parser&lt;/b&gt; должны использовать следующие методы для доступа к полям данных экземпляра:</target>
        </trans-unit>
        <trans-unit id="e8f56e5d3f841631a5128f11a375acab88f21279" translate="yes" xml:space="preserve">
          <source>Clinton Gormley &amp;lt;clint@traveljury.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d24920f2b48bf829e8a23e9a90dfdd3440760d" translate="yes" xml:space="preserve">
          <source>Clone a CV, making a lexical closure.</source>
          <target state="translated">Клонируй резюме,делая лексическое закрытие.</target>
        </trans-unit>
        <trans-unit id="c2d64e5c66bdee86828e39b3698f3c30869504f6" translate="yes" xml:space="preserve">
          <source>Clone a CV, making a lexical closure. &lt;code&gt;proto&lt;/code&gt; supplies the prototype of the function: its code, pad structure, and other attributes. The prototype is combined with a capture of outer lexicals to which the code refers, which are taken from the currently-executing instance of the immediately surrounding code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f979b64a2e1385f3005f3cb2103d9f2baf2955c" translate="yes" xml:space="preserve">
          <source>Clone the state variables associated with running and compiling pads.</source>
          <target state="translated">Клонирование переменных состояния,связанных с запуском и компиляцией колодок.</target>
        </trans-unit>
        <trans-unit id="8a76336a32c405fad8ce65baf95c160bc7bd1714" translate="yes" xml:space="preserve">
          <source>Cloning an interpreter</source>
          <target state="translated">Клонирование переводчика</target>
        </trans-unit>
        <trans-unit id="8a6abe2df9c376503528626a55b51135b582ffa4" translate="yes" xml:space="preserve">
          <source>Cloning substitution context is unimplemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfa773e5a63a5ea58c9b6207e608ca0120e592a" translate="yes" xml:space="preserve">
          <source>Close</source>
          <target state="translated">Close</target>
        </trans-unit>
        <trans-unit id="812eb05f8409200b76b98524bad237dfeaf7b1bd" translate="yes" xml:space="preserve">
          <source>Close Terminal and the Control Panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b55eaddcc64cc03fb97cb5cfdc6e4a0b7e1eab8" translate="yes" xml:space="preserve">
          <source>Close the data connection and get a response from the FTP server. Returns</source>
          <target state="translated">Закройте соединение для передачи данных и получите ответ от FTP-сервера.Возвращает</target>
        </trans-unit>
        <trans-unit id="1c0a792433b635cbfbf3a9fa1132f2f138428c0e" translate="yes" xml:space="preserve">
          <source>Close the file associated with the object and disassociate the file from the handle. Done automatically on destroy.</source>
          <target state="translated">Закройте файл,связанный с объектом,и отделите файл от дескриптора.Готово автоматически при уничтожении.</target>
        </trans-unit>
        <trans-unit id="19ff0b1a9c29ac2abd677ef11d03ad865001d751" translate="yes" xml:space="preserve">
          <source>Close the file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">Закройте файл. При этом используются файловые дескрипторы, например, полученные при вызове &lt;code&gt;POSIX::open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d601154aa4cecad1b8fde6d9e3eaacabc6a0aacc" translate="yes" xml:space="preserve">
          <source>Close the file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6557bfb4a242f6c8d48bf95461a4833d7849fd1a" translate="yes" xml:space="preserve">
          <source>Close the handle</source>
          <target state="translated">Закройте ручку</target>
        </trans-unit>
        <trans-unit id="bb4472090f184d3ee362c8c35a0ec02ede037401" translate="yes" xml:space="preserve">
          <source>Close the network connection for this ping object. The network connection is also closed by &quot;undef $p&quot;. The network connection is automatically closed if the ping object goes out of scope (e.g. $p is local to a subroutine and you leave the subroutine).</source>
          <target state="translated">Закройте сетевое соединение для этого объекта ping.Сетевое подключение также закрывается по команде &quot;undef $p&quot;.Сетевое соединение автоматически закрывается,если ping-объект выходит за рамки видимости (например,$p локален для подпрограмм и вы выходите из подпрограмм).</target>
        </trans-unit>
        <trans-unit id="190ae3f86d0557b4127e04bcfb326cc6d030a90a" translate="yes" xml:space="preserve">
          <source>Close the stream. Should normally call &lt;code&gt;PerlIOBase_close()&lt;/code&gt; to flush itself and close layers below, and then deallocate any data structures (buffers, translation tables, ...) not held directly in the data structure.</source>
          <target state="translated">Закройте поток. Обычно следует вызывать &lt;code&gt;PerlIOBase_close()&lt;/code&gt; чтобы очистить себя и закрыть слои ниже, а затем освободить все структуры данных (буферы, таблицы трансляции, ...), не содержащиеся непосредственно в структуре данных.</target>
        </trans-unit>
        <trans-unit id="7c376981e20d6d653e0df1db5c58fa5d8bb42c5c" translate="yes" xml:space="preserve">
          <source>CloseHandle</source>
          <target state="translated">CloseHandle</target>
        </trans-unit>
        <trans-unit id="31da48802b39a62004814937a9e31811a752be6b" translate="yes" xml:space="preserve">
          <source>Closely associated with the &lt;code&gt;//g&lt;/code&gt; modifier is the &lt;code&gt;\G&lt;/code&gt; anchor. The &lt;code&gt;\G&lt;/code&gt; anchor matches at the point where the previous &lt;code&gt;//g&lt;/code&gt; match left off. &lt;code&gt;\G&lt;/code&gt; allows us to easily do context-sensitive matching:</source>
          <target state="translated">С модификатором &lt;code&gt;//g&lt;/code&gt; тесно связан якорь &lt;code&gt;\G&lt;/code&gt; В &lt;code&gt;\G&lt;/code&gt; анкерные матчи в точке , где предыдущий &lt;code&gt;//g&lt;/code&gt; матч прервали. &lt;code&gt;\G&lt;/code&gt; позволяет нам легко выполнять контекстно-зависимое сопоставление:</target>
        </trans-unit>
        <trans-unit id="735908554f005a832d720ed97de9330810e2fd8b" translate="yes" xml:space="preserve">
          <source>Closely associated with the &lt;code&gt;/g&lt;/code&gt; modifier is the &lt;code&gt;\G&lt;/code&gt; anchor. The &lt;code&gt;\G&lt;/code&gt; anchor matches at the point where the previous &lt;code&gt;/g&lt;/code&gt; match left off. &lt;code&gt;\G&lt;/code&gt; allows us to easily do context-sensitive matching:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2c86b22aa0e19fdc594e6bdac3be5d440f77af" translate="yes" xml:space="preserve">
          <source>Closely associated with the matching variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... are the</source>
          <target state="translated">С соответствующими переменными &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... тесно связаны</target>
        </trans-unit>
        <trans-unit id="8777b46f63ed0b629d607c4fa1c16f7048b523ba" translate="yes" xml:space="preserve">
          <source>Closely associated with the matching variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, ... are the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8880824b2c0a8c129675fe4efa8e806c399c31" translate="yes" xml:space="preserve">
          <source>Closes a Win32 native handle, such as one opened via &lt;code&gt;CreateFile&lt;/code&gt;. Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1957127886446201a908976dafcb8b93a55e849" translate="yes" xml:space="preserve">
          <source>Closes a directory opened by &lt;a href=&quot;#opendir-DIRHANDLE%2CEXPR&quot;&gt;&lt;code&gt;opendir&lt;/code&gt;&lt;/a&gt; and returns the success of that system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6e55c513c3700cb482b5228ee114dea0eb2014" translate="yes" xml:space="preserve">
          <source>Closes a directory opened by &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; and returns the success of that system call.</source>
          <target state="translated">Закрывает каталог, открытый &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; , и возвращает успешное выполнение этого системного вызова.</target>
        </trans-unit>
        <trans-unit id="1718bbd298f85e4f92aa5e14dbae95e752272e78" translate="yes" xml:space="preserve">
          <source>Closes a directory opened by &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; and returns the success of that system call.</source>
          <target state="translated">Закрывает каталог, открытый &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; , и возвращает успешное выполнение этого системного вызова.</target>
        </trans-unit>
        <trans-unit id="c738bf1c5aeadafd66d4f3177f0ec53c7a05eef3" translate="yes" xml:space="preserve">
          <source>Closes the compressed file. Any pending data is flushed to the file before it is closed.</source>
          <target state="translated">Закрывает сжатый файл.Любые отложенные данные прошиваются в файл перед его закрытием.</target>
        </trans-unit>
        <trans-unit id="b1d528fd6e4e57f9b4f4824f906e152d2b52aa44" translate="yes" xml:space="preserve">
          <source>Closes the current compressed data stream and starts a new one.</source>
          <target state="translated">Закрывает текущий сжатый поток данных и запускает новый.</target>
        </trans-unit>
        <trans-unit id="51e188a428b2b9dba319c461ba18765571b8c558" translate="yes" xml:space="preserve">
          <source>Closes the file or pipe associated with the filehandle, flushes the IO buffers, and closes the system file descriptor. Returns true if those operations succeed and if no error was reported by any PerlIO layer. Closes the currently selected filehandle if the argument is omitted.</source>
          <target state="translated">Закрывает файл или трубку,связанную с файловой рукояткой,промывает буферы ввода-вывода и закрывает дескриптор системного файла.Возвращает true,если эти операции прошли успешно,и если ни один слой PerlIO не сообщил об ошибке.Закрывает текущий выбранный файловый дескриптор,если аргумент опущен.</target>
        </trans-unit>
        <trans-unit id="fea628f203f0d9f7135eed7983ec3d8792beb442" translate="yes" xml:space="preserve">
          <source>Closes the log file and returns true on success.</source>
          <target state="translated">Закрывает лог-файл и возвращает true on success.</target>
        </trans-unit>
        <trans-unit id="d2bbc309bbe5a51ba61bf619d197d1239e2eb8ce" translate="yes" xml:space="preserve">
          <source>Closes the output file/buffer.</source>
          <target state="translated">Закрывает выходной файл/буфер.</target>
        </trans-unit>
        <trans-unit id="6e6277ad25e946651d9d89cd0e79f61e229c9e4d" translate="yes" xml:space="preserve">
          <source>Closing any piped filehandle causes the parent process to wait for the child to finish, then returns the status value in &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%7B%5ECHILD_ERROR_NATIVE%7D&quot;&gt;&lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba43eac7b65017fd2089f1e6bc015f1ec8c511e2" translate="yes" xml:space="preserve">
          <source>Closing any piped filehandle causes the parent process to wait for the child to finish, then returns the status value in &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</source>
          <target state="translated">Закрытие любого обработчика файла по конвейеру заставляет родительский процесс ждать завершения дочернего процесса, а затем возвращает значение статуса в &lt;code&gt;$?&lt;/code&gt; и &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4dcf08fb56e6d72fb32ed7e1eabe87691436e56" translate="yes" xml:space="preserve">
          <source>Closing bracket for XSUB arguments. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;code&gt;PUSHMARK&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; for other uses.</source>
          <target state="translated">Закрывающая скобка для аргументов XSUB. Обычно этим занимается &lt;code&gt;xsubpp&lt;/code&gt; . См. &lt;code&gt;PUSHMARK&lt;/code&gt; и &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; для других целей.</target>
        </trans-unit>
        <trans-unit id="b828d78c11a19df48982701325f4289b3ec96fcd" translate="yes" xml:space="preserve">
          <source>Closing bracket for XSUB arguments. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#PUSHMARK&quot;&gt;&quot;PUSHMARK&quot;&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; for other uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36201343a78cce5fa585681913d9bd6d07bd74bb" translate="yes" xml:space="preserve">
          <source>Closing bracket for a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737b7e3ad0d2423ad5a8db0c5d04ee20b1d52475" translate="yes" xml:space="preserve">
          <source>Closing bracket for a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">Закрывающая скобка для облегченного обратного вызова. См. &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;ОБЛЕГЧЕННЫЕ ОТВЕТЫ в perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="025879f4052cca3f4ee52667eb96341828d977ac" translate="yes" xml:space="preserve">
          <source>Closing bracket for temporaries on a callback. See &lt;code&gt;&lt;a href=&quot;#SAVETMPS&quot;&gt;&quot;SAVETMPS&quot;&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2745a4c8776a0e5fafe11f0f22ec70fe0d72258" translate="yes" xml:space="preserve">
          <source>Closing bracket for temporaries on a callback. See &lt;code&gt;SAVETMPS&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Закрывающая скобка для временных конструкций при обратном вызове. Смотрите &lt;code&gt;SAVETMPS&lt;/code&gt; и &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33a3b7785a6c484e8e0a2dab27562cfff41e1b07" translate="yes" xml:space="preserve">
          <source>Closing bracket on a callback. See &lt;code&gt;&lt;a href=&quot;#ENTER&quot;&gt;&quot;ENTER&quot;&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba349d3ba72088b84c46b90a7f642094300bd0d" translate="yes" xml:space="preserve">
          <source>Closing bracket on a callback. See &lt;code&gt;ENTER&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Закрывающая скобка при обратном вызове. Смотрите &lt;code&gt;ENTER&lt;/code&gt; и &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23a4c843ad3bbdd040a62a1e5a6170f0fcb264c5" translate="yes" xml:space="preserve">
          <source>Closing the read end of a pipe before the process writing to it at the other end is done writing results in the writer receiving a SIGPIPE. If the other end can't handle that, be sure to read all the data before closing the pipe.</source>
          <target state="translated">Закрытие прочитанного конца трубы до того,как процесс записи на другой конец будет завершен,приводит к тому,что записывающее устройство получит СИГНАЛ.Если другой конец не может с этим справиться,обязательно прочитайте все данные перед тем,как закрывать трубу.</target>
        </trans-unit>
        <trans-unit id="84e77ec95c5a92eb909c6ac217e1a65e9bf9d350" translate="yes" xml:space="preserve">
          <source>Closure</source>
          <target state="translated">Closure</target>
        </trans-unit>
        <trans-unit id="684bcc83d42f8ebc0a3f44360c0e98695b53b5c1" translate="yes" xml:space="preserve">
          <source>Closure prototype called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d86b58c6ea474356b305c2ad2f3387941bd459" translate="yes" xml:space="preserve">
          <source>Closures are documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">Замыкания задокументированы в &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07e50ba612fbe1c93f394383c8388d370e33f827" translate="yes" xml:space="preserve">
          <source>Closures are most often used in programming languages where you can have the return value of a function be itself a function, as you can in Perl. Note that some languages provide anonymous functions but are not capable of providing proper closures: the Python language, for example. For more information on closures, check out any textbook on functional programming. Scheme is a language that not only supports but encourages closures.</source>
          <target state="translated">Закрытия чаще всего используются в языках программирования,где возвращаемое значение функции может быть само по себе функцией,как это можно сделать на Perl.Обратите внимание,что некоторые языки предоставляют анонимные функции,но не способны обеспечить надлежащее закрытие:например,язык Python.Дополнительную информацию о закрытии можно найти в любом учебнике по функциональному программированию.Scheme-это язык,который не только поддерживает,но и поощряет закрытие.</target>
        </trans-unit>
        <trans-unit id="625dad30655b90e54e26f3f025084dbfc6f7497b" translate="yes" xml:space="preserve">
          <source>Closures are often used for less esoteric purposes. For example, when you want to pass in a bit of code into a function:</source>
          <target state="translated">Закрытия часто используются для менее эзотерических целей.Например,когда нужно передать немного кода в функцию:</target>
        </trans-unit>
        <trans-unit id="5161af4a1cac3a1b9b45f56c8dea0b53f7bfbecc" translate="yes" xml:space="preserve">
          <source>Co-existence with stdio</source>
          <target state="translated">Сосуществование с stdio</target>
        </trans-unit>
        <trans-unit id="6517f8be2c6a95c643a9a9b5bb9a2d69ac206184" translate="yes" xml:space="preserve">
          <source>Cocoa</source>
          <target state="translated">Cocoa</target>
        </trans-unit>
        <trans-unit id="95c99c8aeaa2e8fc96be370bcb2d2ba452daba68" translate="yes" xml:space="preserve">
          <source>Code &lt;code&gt;x&lt;/code&gt; skips a byte, since we don't need the count yet. Code &lt;code&gt;n&lt;/code&gt; takes care of the 16-bit big-endian integer address, and &lt;code&gt;C&lt;/code&gt; unpacks the record type. Being at offset 4, where the data begins, we need the count. &lt;code&gt;X4&lt;/code&gt; brings us back to square one, which is the byte at offset 0. Now we pick up the count, and zoom forth to offset 4, where we are now fully furnished to extract the exact number of data bytes, leaving the trailing checksum byte alone.</source>
          <target state="translated">Код &lt;code&gt;x&lt;/code&gt; пропускает байт, так как нам еще не нужен счетчик. Код &lt;code&gt;n&lt;/code&gt; заботится о 16-битном целочисленном адресе с прямым порядком байтов, а &lt;code&gt;C&lt;/code&gt; распаковывает тип записи. Находясь на смещении 4, где начинаются данные, нам нужен счетчик. &lt;code&gt;X4&lt;/code&gt; возвращает нас к квадрату один, который является байтом со смещением 0. Теперь мы поднимаем счетчик и приближаемся к смещению 4, где теперь мы полностью готовы извлечь точное количество байтов данных, оставив завершающий байт контрольной суммы. в одиночестве.</target>
        </trans-unit>
        <trans-unit id="9af6c66c871662d13b2ee5b92ff6ae3f53e9f58a" translate="yes" xml:space="preserve">
          <source>Code and documentation based on the Math::BigInt::Calc module by Tels &amp;lt;nospam-abuse@bloodgate.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ed008dc7a2ff797ab17a3de73dfdb055a98c4d" translate="yes" xml:space="preserve">
          <source>Code blocks such as &lt;code&gt;(?{BLOCK})&lt;/code&gt; are handled by temporarily passing control back to the perl parser, in a similar way that an interpolated array subscript expression such as &lt;code&gt;&quot;foo$array[1+f(&quot;[xyz&quot;)]bar&quot;&lt;/code&gt; would be.</source>
          <target state="translated">Блоки кода, такие как &lt;code&gt;(?{BLOCK})&lt;/code&gt; , обрабатываются путем временной передачи управления обратно парсеру perl аналогично интерполированному выражению индекса массива, например &lt;code&gt;&quot;foo$array[1+f(&quot;[xyz&quot;)]bar&quot;&lt;/code&gt; было бы.</target>
        </trans-unit>
        <trans-unit id="762d66380b843da111702ccfbb2c67a26389d7e3" translate="yes" xml:space="preserve">
          <source>Code evaluation</source>
          <target state="translated">Оценка кода</target>
        </trans-unit>
        <trans-unit id="ad324d0623845b77009d134b9199e2f4016ff03f" translate="yes" xml:space="preserve">
          <source>Code expressions are zero-width assertions, and the value they return depends on their environment. There are two possibilities: either the code expression is used as a conditional in a conditional expression &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)...)&lt;/code&gt;, or it is not. If the code expression is a conditional, the code is evaluated and the result (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d37b9a8d116d9e1ae5c945c68e058e2feb14aa" translate="yes" xml:space="preserve">
          <source>Code expressions are zero-width assertions, and the value they return depends on their environment. There are two possibilities: either the code expression is used as a conditional in a conditional expression &lt;code&gt;(?(condition)...)&lt;/code&gt;, or it is not. If the code expression is a conditional, the code is evaluated and the result (i.e., the result of the last statement) is used to determine truth or falsehood. If the code expression is not used as a conditional, the assertion always evaluates true and the result is put into the special variable &lt;code&gt;$^R&lt;/code&gt; . The variable &lt;code&gt;$^R&lt;/code&gt; can then be used in code expressions later in the regexp. Here are some silly examples:</source>
          <target state="translated">Кодовые выражения представляют собой утверждения нулевой ширины, и возвращаемое ими значение зависит от их среды. Есть две возможности: либо кодовое выражение используется как условное в условном выражении &lt;code&gt;(?(condition)...)&lt;/code&gt; , либо нет. Если кодовое выражение является условным, код оценивается, и результат (т. Е. Результат последнего оператора) используется для определения истинности или ложности. Если выражение код не используются как условные, утверждение всегда оценивает истинное и результат помещается в специальные переменных &lt;code&gt;$^R&lt;/code&gt; . Затем переменную &lt;code&gt;$^R&lt;/code&gt; можно будет использовать в кодовых выражениях позже в регулярном выражении. Вот несколько глупых примеров:</target>
        </trans-unit>
        <trans-unit id="16588d7ea09d6c8a62bccdc2d6ce591ced66cdbf" translate="yes" xml:space="preserve">
          <source>Code expressions, conditional expressions, and independent expressions are</source>
          <target state="translated">Кодовыми выражениями,условными выражениями и независимыми выражениями являются</target>
        </trans-unit>
        <trans-unit id="0d4a4669a2b66538a054bb02710d7250ecbe4161" translate="yes" xml:space="preserve">
          <source>Code for &lt;code&gt;constant()&lt;/code&gt; s regenerated by Nicholas Clark &amp;lt;</source>
          <target state="translated">Код для &lt;code&gt;constant()&lt;/code&gt; восстановленный Николасом Кларком &amp;lt;</target>
        </trans-unit>
        <trans-unit id="5104f2fb52438f2a95c6656e61514fb0901b155c" translate="yes" xml:space="preserve">
          <source>Code for &lt;code&gt;constant()&lt;/code&gt;s regenerated by Nicholas Clark &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cbaac4d40358f731935693702135f199e63c95" translate="yes" xml:space="preserve">
          <source>Code is executed in the caller's package.</source>
          <target state="translated">Код выполняется в пакете вызывающего абонента.</target>
        </trans-unit>
        <trans-unit id="55f7b9d679e82f6ff6b32abc5e72be9fa415121f" translate="yes" xml:space="preserve">
          <source>Code missing after '/'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763a00414c37fe629fac947138c2be136cbf143b" translate="yes" xml:space="preserve">
          <source>Code of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b7c0500e40c11db7bf0e11bd6e37ab7d88c5ec" translate="yes" xml:space="preserve">
          <source>Code originally inside MM_Win32. Original author unknown.</source>
          <target state="translated">Изначально код внутри MM_Win32.Оригинальный автор неизвестен.</target>
        </trans-unit>
        <trans-unit id="de9401c97e1f4ad9abf2e4fafee48326fcab7f4e" translate="yes" xml:space="preserve">
          <source>Code point 0x%X is not Unicode, and not portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e53339de09de2795af9c075262e4563620af5d1" translate="yes" xml:space="preserve">
          <source>Code point 0x%X is not Unicode, may not be portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3f7aaeddd506c37fdcace0f412c9da257991f8" translate="yes" xml:space="preserve">
          <source>Code points above 0x7FFF_FFFF (2**31 - 1) were never specified in any standard, and so some extension must be used to express them. Perl uses a natural extension to UTF-8 to represent the ones up to 2**36-1, and invented a further extension to represent even higher ones, so that any code point that fits in a 64-bit word can be represented. Text using these extensions is not likely to be portable to non-Perl code. We lump both of these extensions together and refer to them as Perl extended UTF-8. There exist other extensions that people have invented, incompatible with Perl's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8436b969660cb68895cc5b50cc98f0ce889fd84c" translate="yes" xml:space="preserve">
          <source>Code repository for CPAN distribution: &lt;a href=&quot;https://github.com/Dual-Life/Thread-Queue&quot;&gt;https://github.com/Dual-Life/Thread-Queue&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3226dc817f3e43a541d4477c8cbc2a285c0d917" translate="yes" xml:space="preserve">
          <source>Code repository for CPAN distribution: &lt;a href=&quot;https://github.com/Dual-Life/Thread-Semaphore&quot;&gt;https://github.com/Dual-Life/Thread-Semaphore&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94acf728f03fa23f03ba8018e9898ca330c48e77" translate="yes" xml:space="preserve">
          <source>Code repository for CPAN distribution: &lt;a href=&quot;https://github.com/Dual-Life/threads&quot;&gt;https://github.com/Dual-Life/threads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b71075d4c9fabe584d6768feef1abbfedbb667" translate="yes" xml:space="preserve">
          <source>Code repository for CPAN distribution: &lt;a href=&quot;https://github.com/Dual-Life/threads-shared&quot;&gt;https://github.com/Dual-Life/threads-shared&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242e717fb5b853da360c4c4e3fd5e16c899cc09d" translate="yes" xml:space="preserve">
          <source>Code tree</source>
          <target state="translated">Кодовое дерево</target>
        </trans-unit>
        <trans-unit id="bda59a9692c886a3b695a5c5e5d92b31fb40c2d3" translate="yes" xml:space="preserve">
          <source>Code using &lt;code&gt;File::Glob::glob()&lt;/code&gt; should call &lt;code&gt;File::Glob::bsd_glob()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238c9390ad5966dbe9669eb0b38a5c9c564b39c3" translate="yes" xml:space="preserve">
          <source>Code which is compiled outside the compartment can choose to place variables into (or</source>
          <target state="translated">Код,который компилируется вне помещения,может выбирать размещение переменных в (или</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="3f51a692049ded00dfd0b82b9eb597826fa63f6e" translate="yes" xml:space="preserve">
          <source>Coderef of a subroutine to call inside of the main waiting loop (while &lt;code&gt;run_forked&lt;/code&gt; waits for the external to finish or fail). It is useful to stop running external process before it ends by itself, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7346b6c55ef1dd3ee635f412ba8c8fa0b34bc040" translate="yes" xml:space="preserve">
          <source>Coderef of a subroutine to call when a portion of data is received on STDERR from the executing program.</source>
          <target state="translated">Кодировка подпрограмм для вызова,когда часть данных поступает на STDERR от исполняющей программы.</target>
        </trans-unit>
        <trans-unit id="0e6272092332283344899c5d9151fdf70f8638d8" translate="yes" xml:space="preserve">
          <source>Coderef of a subroutine to call when a portion of data is received on STDOUT from the executing program.</source>
          <target state="translated">Кодировка подпрограмм для вызова,когда часть данных поступает на STDOUT из выполняющейся программы.</target>
        </trans-unit>
        <trans-unit id="cc3b474bef3775734e7b035b9dfcfb4a3687ffad" translate="yes" xml:space="preserve">
          <source>Coding style is a matter of personal taste. Many people evolve their style over several years as they learn what helps them write and maintain good code. Here's one set of assorted suggestions that seem to be widely used by experienced developers:</source>
          <target state="translated">Стиль кодирования-дело личного вкуса.Многие люди развивают свой стиль в течение нескольких лет,изучая,что помогает им писать и поддерживать хороший код.Вот один набор предложений,которые,кажется,широко используются опытными разработчиками:</target>
        </trans-unit>
        <trans-unit id="83c20e2b46967a4d332883ed6f06dc35bb23a9dc" translate="yes" xml:space="preserve">
          <source>Coerce the given SV to a double and return it. See &lt;code&gt;SvNVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">Привести данный SV к дублю и вернуть его. См. В &lt;code&gt;SvNVx&lt;/code&gt; версию, которая гарантирует выполнение sv только один раз.</target>
        </trans-unit>
        <trans-unit id="1439f0faa00b37d7eb0523484bb7109ca3648951" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to IV and returns it. The returned value in many circumstances will get stored in &lt;code&gt;sv&lt;/code&gt;'s IV slot, but not in all cases. (Use &lt;code&gt;&lt;a href=&quot;#sv_setiv&quot;&gt;&quot;sv_setiv&quot;&lt;/a&gt;&lt;/code&gt; to make sure it does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cc7c3007865e80d454f255101cca70238d1909" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to NV and returns it. The returned value in many circumstances will get stored in &lt;code&gt;sv&lt;/code&gt;'s NV slot, but not in all cases. (Use &lt;code&gt;&lt;a href=&quot;#sv_setnv&quot;&gt;&quot;sv_setnv&quot;&lt;/a&gt;&lt;/code&gt; to make sure it does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da642418dbe4eaadacbf20eb4f86655556d568a" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to UV and returns it. The returned value in many circumstances will get stored in &lt;code&gt;sv&lt;/code&gt;'s UV slot, but not in all cases. (Use &lt;code&gt;&lt;a href=&quot;#sv_setuv&quot;&gt;&quot;sv_setuv&quot;&lt;/a&gt;&lt;/code&gt; to make sure it does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9cb8dd077ee8e9789410150752cb5df2cf59b7" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to a double and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvNV&lt;/code&gt; .</source>
          <target state="translated">Приводит данный SV к двойному и возвращает его. Гарантия оценить &lt;code&gt;sv&lt;/code&gt; только один раз. Используйте это, только если &lt;code&gt;sv&lt;/code&gt; - это выражение с побочными эффектами, в противном случае используйте более эффективный &lt;code&gt;SvNV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bac4ad8b9286fd32a256bd30b536befa1ae2a9ff" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an integer and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvIV&lt;/code&gt; .</source>
          <target state="translated">Приводит заданный SV к целому числу и возвращает его. Гарантия оценить &lt;code&gt;sv&lt;/code&gt; только один раз. Используйте это, только если &lt;code&gt;sv&lt;/code&gt; - выражение с побочными эффектами, в противном случае используйте более эффективный &lt;code&gt;SvIV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4398a91485317bebc11f68b77ab6f61e17b4142" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an integer and returns it. See &lt;code&gt;SvIVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">Приводит заданный SV к целому числу и возвращает его. См. &lt;code&gt;SvIVx&lt;/code&gt; для версии, которая гарантирует выполнение sv только один раз.</target>
        </trans-unit>
        <trans-unit id="7056ee3094a77bc1cd5afdf0d2f7a644af6c1de6" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an unsigned integer and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvUV&lt;/code&gt; .</source>
          <target state="translated">Приводит данный SV к беззнаковому целому числу и возвращает его. Гарантия оценить &lt;code&gt;sv&lt;/code&gt; только один раз. Используйте это, только если &lt;code&gt;sv&lt;/code&gt; - выражение с побочными эффектами, в противном случае используйте более эффективный &lt;code&gt;SvUV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="796a973103d95c3243cc98edd65b34d9d2c5c67f" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an unsigned integer and returns it. See &lt;code&gt;SvUVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">Приводит данный SV к беззнаковому целому числу и возвращает его. См. В &lt;code&gt;SvUVx&lt;/code&gt; версию, которая гарантирует выполнение sv только один раз.</target>
        </trans-unit>
        <trans-unit id="49c49717ff09c67db8d10c08594119a0d133d246" translate="yes" xml:space="preserve">
          <source>Collate/CJK/*.pm</source>
          <target state="translated">Collate/CJK/*.pm</target>
        </trans-unit>
        <trans-unit id="12531e2c5b86aed0f71274cc20edcb8aadae3b4c" translate="yes" xml:space="preserve">
          <source>Collate/Locale.pm</source>
          <target state="translated">Collate/Locale.pm</target>
        </trans-unit>
        <trans-unit id="ac7a02f9743685f110e221f67c081d8076b3a9ed" translate="yes" xml:space="preserve">
          <source>Collate/Locale/*.pm</source>
          <target state="translated">Collate/Locale/*.pm</target>
        </trans-unit>
        <trans-unit id="fa0c7bf1775e1c9275988dd635488dcfa27e43d9" translate="yes" xml:space="preserve">
          <source>Collate/allkeys.txt</source>
          <target state="translated">Collate/allkeys.txt</target>
        </trans-unit>
        <trans-unit id="d3838b05ac03a3af9736ff68451b7f3620421d92" translate="yes" xml:space="preserve">
          <source>Collation of strings containing embedded &lt;code&gt;NUL&lt;/code&gt; characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18549aa8a36d18f9b318470ae9821a1fcf274031" translate="yes" xml:space="preserve">
          <source>Collation of strings containing embedded NUL characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e80d6bc20f631d59e355402947af07d5291bfe8" translate="yes" xml:space="preserve">
          <source>Collation reordering is not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea772ad5805b57d6b06159ae7393c73ccddc1d9c" translate="yes" xml:space="preserve">
          <source>CollationTest_NON_IGNORABLE.txt</source>
          <target state="translated">CollationTest_NON_IGNORABLE.txt</target>
        </trans-unit>
        <trans-unit id="7b7f09f7ff55d9003bbbf6e2b6ad35cc1d55629d" translate="yes" xml:space="preserve">
          <source>CollationTest_SHIFTED.txt</source>
          <target state="translated">CollationTest_SHIFTED.txt</target>
        </trans-unit>
        <trans-unit id="75fb813627b472bae8bccd59c58705cc36ebe703" translate="yes" xml:space="preserve">
          <source>Collection of tools used by &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt; and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca66835bc771bd4402dea87da5941178b9bd8799" translate="yes" xml:space="preserve">
          <source>Collects the backtrace (aka &quot;stacktrace&quot;) into a single linear malloced buffer, which the caller &lt;b&gt;must&lt;/b&gt; Perl_free_c_backtrace().</source>
          <target state="translated">Собирает обратную трассировку (также известную как &amp;laquo;stacktrace&amp;raquo;) в один линейный malloced буфер, который вызывающий &lt;b&gt;должен использовать&lt;/b&gt; Perl_free_c_backtrace ().</target>
        </trans-unit>
        <trans-unit id="fd55a62dc71f117a550a11fe2cc351f02e961ba8" translate="yes" xml:space="preserve">
          <source>Collects the backtrace (aka &quot;stacktrace&quot;) into a single linear malloced buffer, which the caller &lt;b&gt;must&lt;/b&gt;&lt;code&gt;Perl_free_c_backtrace()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2794035cca1617a1f9360d576b9e234bb68e64d" translate="yes" xml:space="preserve">
          <source>Color for debugging messages?</source>
          <target state="translated">Цвет для отладки сообщений?</target>
        </trans-unit>
        <trans-unit id="931d4698b17a59cb56194fcf346f0e3466642612" translate="yes" xml:space="preserve">
          <source>Color for normal output?</source>
          <target state="translated">Цвет для нормальной производительности?</target>
        </trans-unit>
        <trans-unit id="943c85b3de9955c182721971471df60c6005726b" translate="yes" xml:space="preserve">
          <source>Color for warnings?</source>
          <target state="translated">Цвет для предупреждений?</target>
        </trans-unit>
        <trans-unit id="37277b98a26979971b3578b4784f262eaebdf1a4" translate="yes" xml:space="preserve">
          <source>Color screen output using ANSI escape sequences</source>
          <target state="translated">Вывод цветного экрана с использованием ANSI-эвакуационных последовательностей</target>
        </trans-unit>
        <trans-unit id="ffcd8cdd6d4fafb69165ab91311fd30e417a36d0" translate="yes" xml:space="preserve">
          <source>Color support requires &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; and, on windows platforms, also &lt;a href=&quot;Win32::Console::ANSI&quot;&gt;Win32::Console::ANSI&lt;/a&gt;. If the necessary module(s) are not installed colored output will not be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814253eeac185847ba47c5faad82c62ef62cc160" translate="yes" xml:space="preserve">
          <source>Color support requires &lt;a href=&quot;term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; on Unix-like platforms and &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Console&quot;&gt;Win32::Console&lt;/a&gt; on windows. If the necessary module is not installed colored output will not be available.</source>
          <target state="translated">Для поддержки цвета требуется &lt;a href=&quot;term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; на Unix-подобных платформах и &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Console&quot;&gt;Win32 :: Console&lt;/a&gt; на Windows. Если необходимый модуль не установлен, цветной вывод будет недоступен.</target>
        </trans-unit>
        <trans-unit id="303879dcc89284b00c097930cabcb85cc2dc5e5d" translate="yes" xml:space="preserve">
          <source>Colored Test Output</source>
          <target state="translated">Цветной тестовый выход</target>
        </trans-unit>
        <trans-unit id="8500a95267a6088fd62196511e82c874787b2950" translate="yes" xml:space="preserve">
          <source>Colored test output using &lt;a href=&quot;TAP::Formatter::Color&quot;&gt;TAP::Formatter::Color&lt;/a&gt; is the default, but if output is not to a terminal, color is disabled. You can override this by adding the &lt;code&gt;--color&lt;/code&gt; switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8864b43824503a2f85bf0964b2768f6f871f7626" translate="yes" xml:space="preserve">
          <source>Colored test output using &lt;a href=&quot;tap/formatter/color&quot;&gt;TAP::Formatter::Color&lt;/a&gt; is the default, but if output is not to a terminal, color is disabled. You can override this by adding the &lt;code&gt;--color&lt;/code&gt; switch.</source>
          <target state="translated">Цветной тестовый вывод с использованием &lt;a href=&quot;tap/formatter/color&quot;&gt;TAP :: Formatter :: Color&lt;/a&gt; используется по умолчанию, но если вывод выводится не на терминал, цвет отключен. Вы можете переопределить это, добавив переключатель &lt;code&gt;--color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4410624857a9a39d3470d2f887cb38370bddb90" translate="yes" xml:space="preserve">
          <source>Column 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f84ac056c4c73f73e5266ab0c3a844a0f86eb3" translate="yes" xml:space="preserve">
          <source>Column 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47e7f7f6997145626eff833add5e11cf1169935" translate="yes" xml:space="preserve">
          <source>Column 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3923712e15f6cde93b49aa53ec44f5c8d09bcfff" translate="yes" xml:space="preserve">
          <source>Combination of perl's malloc() and rigid DLL name resolution creates a special problem with library functions which expect their return value to be free()d by system's free(). To facilitate extensions which need to call such functions, system memory-allocation functions are still available with the prefix &lt;code&gt;emx_&lt;/code&gt; added. (Currently only DLL perl has this, it should propagate to</source>
          <target state="translated">Комбинация perl malloc () и жесткого разрешения имен DLL создает особую проблему с библиотечными функциями, которые ожидают, что их возвращаемое значение будет free () d системой free (). Чтобы облегчить расширения, которым необходимо вызывать такие функции, функции распределения системной памяти по-прежнему доступны с добавленным префиксом &lt;code&gt;emx_&lt;/code&gt; . (В настоящее время это есть только в DLL perl, он должен распространяться на</target>
        </trans-unit>
        <trans-unit id="e5e162a6515086455c7354669175e63cf762e730" translate="yes" xml:space="preserve">
          <source>Combined with &lt;code&gt;stdout_handler&lt;/code&gt; and &lt;code&gt;stderr_handler&lt;/code&gt; allows terminating external command based on its output. Could also be used as a timer without engaging with &lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt; (signals).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4084d48b233ef3ed460fe34c2d006a3d174500e" translate="yes" xml:space="preserve">
          <source>Combining RE Pieces</source>
          <target state="translated">Комбинирование деталей RE</target>
        </trans-unit>
        <trans-unit id="d5245a49f5313d2490851a0af63ee29dbcb57fb2" translate="yes" xml:space="preserve">
          <source>Combining that form with &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; and putting parentheses immediately around a hash are forbidden (because it is not clear what they should do):</source>
          <target state="translated">Комбинировать эту форму с &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; и помещать скобки сразу вокруг хэша запрещено (потому что неясно, что они должны делать):</target>
        </trans-unit>
        <trans-unit id="2da6f341ea06cfbda7a953d08a38c6933556547f" translate="yes" xml:space="preserve">
          <source>Combining that form with &lt;code&gt;local&lt;/code&gt; and putting parentheses immediately around a hash are forbidden (because it is not clear what they should do):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763921651d0da6d3a3be0284d4211879873417fe" translate="yes" xml:space="preserve">
          <source>Combining two pack codes with a slash (&lt;code&gt;/&lt;/code&gt;) associates them with a single value from the argument list. In &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, the length of the argument is taken and packed according to the first code while the argument itself is added after being converted with the template code after the slash. This saves us the trouble of inserting the &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; call, but it is in &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; where we really score: The value of the length byte marks the end of the string to be taken from the buffer. Since this combination doesn't make sense except when the second pack code isn't &lt;code&gt;a*&lt;/code&gt; , &lt;code&gt;A*&lt;/code&gt; or &lt;code&gt;Z*&lt;/code&gt; , Perl won't let you.</source>
          <target state="translated">Объединение двух кодов пакетов с косой чертой ( &lt;code&gt;/&lt;/code&gt; ) связывает их с одним значением из списка аргументов. В &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; длина аргумента берется и упаковывается в соответствии с первым кодом, в то время как сам аргумент добавляется после преобразования с помощью кода шаблона после косой черты. Это избавляет нас от необходимости вставлять вызов &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , но именно в &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; мы действительно оцениваем: значение байта длины отмечает конец строки, которую нужно взять из буфера. Поскольку эта комбинация не имеет смысла, за исключением случаев, когда код второго пакета не &lt;code&gt;a*&lt;/code&gt; , &lt;code&gt;A*&lt;/code&gt; или &lt;code&gt;Z*&lt;/code&gt; , Perl вам не позволит.</target>
        </trans-unit>
        <trans-unit id="20db66d1a2628ffa3532fa0ee858a072ce28b6d2" translate="yes" xml:space="preserve">
          <source>Combining two pack codes with a slash (&lt;code&gt;/&lt;/code&gt;) associates them with a single value from the argument list. In &lt;code&gt;pack&lt;/code&gt;, the length of the argument is taken and packed according to the first code while the argument itself is added after being converted with the template code after the slash. This saves us the trouble of inserting the &lt;code&gt;length&lt;/code&gt; call, but it is in &lt;code&gt;unpack&lt;/code&gt; where we really score: The value of the length byte marks the end of the string to be taken from the buffer. Since this combination doesn't make sense except when the second pack code isn't &lt;code&gt;a*&lt;/code&gt;, &lt;code&gt;A*&lt;/code&gt; or &lt;code&gt;Z*&lt;/code&gt;, Perl won't let you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bae387055126d95306c7bb6532b73268f5a2d5" translate="yes" xml:space="preserve">
          <source>Comma Operator</source>
          <target state="translated">Комма-оператор</target>
        </trans-unit>
        <trans-unit id="62802cbe492e03ca981781cca641adb33725f540" translate="yes" xml:space="preserve">
          <source>Command Line Options, an Introduction</source>
          <target state="translated">Опции командной строки,введение</target>
        </trans-unit>
        <trans-unit id="18beb4c43cfe79cec6e126626aa3ad7fd190e477" translate="yes" xml:space="preserve">
          <source>Command Paragraph</source>
          <target state="translated">Пункт управления</target>
        </trans-unit>
        <trans-unit id="8a1ca3d4fefdc5713e41ac29c4283a0c7477fc1a" translate="yes" xml:space="preserve">
          <source>Command Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417187d63fa0def34d24b8c333083506dc32200a" translate="yes" xml:space="preserve">
          <source>Command Switches</source>
          <target state="translated">Командные переключатели</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">Командная строка</target>
        </trans-unit>
        <trans-unit id="12f9d6c76aaded8fe20cb1cb15944fff0ce754c0" translate="yes" xml:space="preserve">
          <source>Command line operated programs traditionally take their arguments from the command line, for example filenames or other information that the program needs to know. Besides arguments, these programs often take command line</source>
          <target state="translated">Программы,работающие в командной строке,традиционно берут свои аргументы из командной строки,например,имена файлов или другую информацию,которую программа должна знать.Кроме аргументов,эти программы часто берут из командной строки</target>
        </trans-unit>
        <trans-unit id="97c3aa97cab34b4855e7892644f3277edc0d033f" translate="yes" xml:space="preserve">
          <source>Command line options come in several flavours. Historically, they are preceded by a single dash &lt;code&gt;-&lt;/code&gt; , and consist of a single letter.</source>
          <target state="translated">Параметры командной строки бывают нескольких видов. Исторически сложилось так, что им предшествует одно тире &lt;code&gt;-&lt;/code&gt; , и они состоят из одной буквы.</target>
        </trans-unit>
        <trans-unit id="0257ae3370be4bc7727ce1ed69c6457101bb2926" translate="yes" xml:space="preserve">
          <source>Command line options come in several flavours. Historically, they are preceded by a single dash &lt;code&gt;-&lt;/code&gt;, and consist of a single letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee51dd0beb8fe1eba61df99e777a8a7fdc630b8" translate="yes" xml:space="preserve">
          <source>Command line options used by &lt;code&gt;MakeMaker-&amp;gt;new()&lt;/code&gt; , and thus by &lt;code&gt;WriteMakefile()&lt;/code&gt; . The string is split as the shell would, and the result is processed before any actual command line arguments are processed.</source>
          <target state="translated">&lt;code&gt;MakeMaker-&amp;gt;new()&lt;/code&gt; командной строки, используемые MakeMaker-&amp;gt; new () и, следовательно, &lt;code&gt;WriteMakefile()&lt;/code&gt; . Строка разделяется так же, как и оболочка, и результат обрабатывается до обработки любых фактических аргументов командной строки.</target>
        </trans-unit>
        <trans-unit id="5b1a25b72f618c0b7eea268ce6faf4f45ccebf23" translate="yes" xml:space="preserve">
          <source>Command line options used by &lt;code&gt;MakeMaker-&amp;gt;new()&lt;/code&gt;, and thus by &lt;code&gt;WriteMakefile()&lt;/code&gt;. The string is split as the shell would, and the result is processed before any actual command line arguments are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774ba146a62c9c3ff46ff9cc5455b08807e03827" translate="yes" xml:space="preserve">
          <source>Command line switches</source>
          <target state="translated">Переключатели командной строки</target>
        </trans-unit>
        <trans-unit id="878211c78a67be0fed3e28b560c4cca71216618c" translate="yes" xml:space="preserve">
          <source>Command names versus file pathnames</source>
          <target state="translated">Имена команд в сравнении с именами файлов</target>
        </trans-unit>
        <trans-unit id="f1032cc2ac5d43d9d5d41261914fc29d43686b3f" translate="yes" xml:space="preserve">
          <source>Command so make does not print the literal commands it's running.</source>
          <target state="translated">Команда so make не печатает буквальные команды,которые она выполняет.</target>
        </trans-unit>
        <trans-unit id="4c37e3809f3281c8c25395b17b26a434eb5f38e1" translate="yes" xml:space="preserve">
          <source>Command-interpreters on non-Unix systems have rather different ideas on quoting than Unix shells. You'll need to learn the special characters in your command-interpreter (&lt;code&gt;*&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; are common) and how to protect whitespace and these characters to run one-liners (see &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt; below).</source>
          <target state="translated">Командные интерпретаторы в системах, отличных от Unix, имеют несколько иные идеи о цитировании, чем оболочки Unix. Вам нужно будет изучить специальные символы в вашем командном интерпретаторе ( &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; и &lt;code&gt;&quot;&lt;/code&gt; являются общими) и как защитить пробелы и эти символы для запуска однострочников (см. &lt;a href=&quot;#-e-commandline&quot;&gt;-E&lt;/a&gt; ниже).</target>
        </trans-unit>
        <trans-unit id="1ea7e7557fd2f62f17cb4750e688d00bc1c4fd4c" translate="yes" xml:space="preserve">
          <source>Command-interpreters on non-Unix systems have rather different ideas on quoting than Unix shells. You'll need to learn the special characters in your command-interpreter (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; are common) and how to protect whitespace and these characters to run one-liners (see &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a59356f4b875cbe8d0f17e3d7412ec087e8196" translate="yes" xml:space="preserve">
          <source>Command-line Wildcard Expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9ed330b4379486f6715a06438f0f05a4999609" translate="yes" xml:space="preserve">
          <source>Command-line options (switches). Switches in this variable are treated as if they were on every Perl command line. Only the &lt;b&gt;-[CDIMTUWdmtw]&lt;/b&gt; switches are allowed. When running taint checks (either because the program was running setuid or setgid, or because the &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt; or &lt;a href=&quot;#-t&quot;&gt;&quot;-t&quot;&lt;/a&gt; switch was used), this variable is ignored. If PERL5OPT begins with &lt;b&gt;-T&lt;/b&gt;, tainting will be enabled and subsequent options ignored. If PERL5OPT begins with &lt;b&gt;-t&lt;/b&gt;, tainting will be enabled, a writable dot removed from @INC, and subsequent options honored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2498f5306d2ed5cdf02e78b8fd02f5090806ac" translate="yes" xml:space="preserve">
          <source>Command-line options (switches). Switches in this variable are treated as if they were on every Perl command line. Only the &lt;b&gt;-[CDIMUdmtwW]&lt;/b&gt; switches are allowed. When running taint checks (either because the program was running setuid or setgid, or because the &lt;b&gt;-T&lt;/b&gt; or &lt;b&gt;-t&lt;/b&gt; switch was used), this variable is ignored. If PERL5OPT begins with &lt;b&gt;-T&lt;/b&gt;, tainting will be enabled and subsequent options ignored. If PERL5OPT begins with &lt;b&gt;-t&lt;/b&gt;, tainting will be enabled, a writable dot removed from @INC, and subsequent options honored.</source>
          <target state="translated">Параметры командной строки (переключатели). Переключатели в этой переменной обрабатываются так, как если бы они были в каждой командной строке Perl. Разрешены только переключатели &lt;b&gt;- [CDIMUdmtwW]&lt;/b&gt; . При выполнении проверок на заражение (либо из-за того, что программа выполняла setuid или setgid, либо из-за использования переключателя &lt;b&gt;-T&lt;/b&gt; или &lt;b&gt;-t&lt;/b&gt; ) эта переменная игнорируется. Если PERL5OPT начинается с &lt;b&gt;-T&lt;/b&gt; , заражение будет включено, а последующие параметры будут проигнорированы. Если PERL5OPT начинается с &lt;b&gt;-t&lt;/b&gt; , заражение будет включено, точка, доступная для записи, будет удалена из @INC, а последующие параметры будут учтены.</target>
        </trans-unit>
        <trans-unit id="6f3e177b917fb27cf84346755d918af92a7cfb2b" translate="yes" xml:space="preserve">
          <source>Commands for the MM's to use in Makefiles</source>
          <target state="translated">Команды для использования ММ в Makefiles</target>
        </trans-unit>
        <trans-unit id="2312e47cb85161c64e509845981fc1af27401c37" translate="yes" xml:space="preserve">
          <source>Commands that launch external processes are generally supported on most platforms (though many of them do not support any type of forking). The problem with using them arises from what you invoke them on. External tools are often named differently on different platforms, may not be available in the same location, might accept different arguments, can behave differently, and often present their results in a platform-dependent way. Thus, you should seldom depend on them to produce consistent results. (Then again, if you're calling</source>
          <target state="translated">Команды,запускающие внешние процессы,как правило,поддерживаются на большинстве платформ (хотя многие из них не поддерживают никакого типа форкинга).Проблема с их использованием возникает из-за того,на что вы их вызываете.Внешние инструменты часто называются по-разному на разных платформах,могут быть недоступны в одном и том же месте,могут принимать различные аргументы,могут вести себя по-разному и часто представляют свои результаты в зависимости от платформы.Таким образом,вы редко должны зависеть от них для получения последовательных результатов.(И опять же,если вы звоните</target>
        </trans-unit>
        <trans-unit id="26a0a093068ef00836f340c97ad91760b7593441" translate="yes" xml:space="preserve">
          <source>Commands that launch external processes are generally supported on most platforms (though many of them do not support any type of forking). The problem with using them arises from what you invoke them on. External tools are often named differently on different platforms, may not be available in the same location, might accept different arguments, can behave differently, and often present their results in a platform-dependent way. Thus, you should seldom depend on them to produce consistent results. (Then again, if you're calling &lt;code&gt;netstat -a&lt;/code&gt;, you probably don't expect it to run on both Unix and CP/M.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="3f11f6a37b2bb1f46ae24400fbbec0133765dee3" translate="yes" xml:space="preserve">
          <source>Comment result token.</source>
          <target state="translated">Прокомментируйте токен результата.</target>
        </trans-unit>
        <trans-unit id="33cd8b27d6e79d80d7f00dae59eedee6f870da21" translate="yes" xml:space="preserve">
          <source>Comment, suggestions, and patches welcome.</source>
          <target state="translated">Комментарии,предложения и патчи приветствуются.</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="7b3b1433192b715ef8754537014125cb2e060a6c" translate="yes" xml:space="preserve">
          <source>Comments Inside the Regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc25db6a585945c33bade839a1b9b5d00339d18f" translate="yes" xml:space="preserve">
          <source>Comments Outside the Regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b602c915283ace9dfdb4567ddd955a24271e51" translate="yes" xml:space="preserve">
          <source>Comments begin with &quot;#&quot;, not &quot;/*&quot; or &quot;//&quot;. Perl may interpret C/C++ comments as division operators, unterminated regular expressions or the defined-or operator.</source>
          <target state="translated">Комментарии начинаются с &quot;#&quot;,а не с &quot;/*&quot; или &quot;//&quot;.Perl может интерпретировать комментарии на языке Си/Си++как операторы разделения,непрерывистые регулярные выражения или оператор defined-or.</target>
        </trans-unit>
        <trans-unit id="39a11c5627026c5647a98241784b981e03eeba67" translate="yes" xml:space="preserve">
          <source>Comments can be added to XSUBs by placing a &lt;code&gt;#&lt;/code&gt; as the first non-whitespace of a line. Care should be taken to avoid making the comment look like a C preprocessor directive, lest it be interpreted as such. The simplest way to prevent this is to put whitespace in front of the &lt;code&gt;#&lt;/code&gt; .</source>
          <target state="translated">Комментарии могут быть добавлены в XSUB, поместив &lt;code&gt;#&lt;/code&gt; в качестве первого непробельного символа строки. Следует проявлять осторожность, чтобы не сделать комментарий похожим на директиву препроцессора C, иначе он будет интерпретирован как таковой. Самый простой способ предотвратить это - поставить пробел перед &lt;code&gt;#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="073a4a30713762ae3ba246ba0ef64267b5f248ab" translate="yes" xml:space="preserve">
          <source>Comments can be added to XSUBs by placing a &lt;code&gt;#&lt;/code&gt; as the first non-whitespace of a line. Care should be taken to avoid making the comment look like a C preprocessor directive, lest it be interpreted as such. The simplest way to prevent this is to put whitespace in front of the &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3573b55c22b5f8d93f519ce02a5ac87f75d58f1" translate="yes" xml:space="preserve">
          <source>Comments can be embedded in a TEMPLATE using &lt;code&gt;#&lt;/code&gt; through the end of line. White space can separate pack codes from each other, but modifiers and repeat counts must follow immediately. Breaking complex templates into individual line-by-line components, suitably annotated, can do as much to improve legibility and maintainability of pack/unpack formats as &lt;code&gt;/x&lt;/code&gt; can for complicated pattern matches.</source>
          <target state="translated">Комментарии могут быть вставлены в ШАБЛОН с помощью символа &lt;code&gt;#&lt;/code&gt; до конца строки. Пробел может отделять коды пакетов друг от друга, но модификаторы и счетчики повторов должны следовать немедленно. Разбиение сложных шаблонов на отдельные построчные компоненты, снабженные соответствующими аннотациями, может сделать столько же для улучшения читабельности и удобства обслуживания форматов упаковки / распаковки, сколько &lt;code&gt;/x&lt;/code&gt; может для сложных сопоставлений с образцом.</target>
        </trans-unit>
        <trans-unit id="c99a223d578e07988c8679c590eaf92f0323e14f" translate="yes" xml:space="preserve">
          <source>Comments on this feature are welcome; send email to &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; .</source>
          <target state="translated">Комментарии по этой функции приветствуются; отправьте электронное письмо на адрес &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95a49c3748fed6fbb50ce01121f209c8627788a1" translate="yes" xml:space="preserve">
          <source>Comments on this feature are welcome; send email to &lt;code&gt;perl5-porters@perl.org&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bf0dd35fe077bd96ea49557abe1254cfe3d453" translate="yes" xml:space="preserve">
          <source>Comments start with a hash symbol and run to the end of the line</source>
          <target state="translated">Комментарии начинаются с символа хэша и заканчиваются в конце строки.</target>
        </trans-unit>
        <trans-unit id="a0809fab0f6e5f47cada9e750c63afe1aea71d14" translate="yes" xml:space="preserve">
          <source>Comments, Comments, Comments</source>
          <target state="translated">Комментарии,Комментарии,Комментарии</target>
        </trans-unit>
        <trans-unit id="a635957687d394ed8eb32dd7af4e9fb9ea45ae9c" translate="yes" xml:space="preserve">
          <source>Commit message</source>
          <target state="translated">Отправьте сообщение</target>
        </trans-unit>
        <trans-unit id="d6e2ce855e82c51f1e993ec8196fbc69c3907612" translate="yes" xml:space="preserve">
          <source>Commit your change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f708e2508e04f33e675ebab67bfbf772b80d682" translate="yes" xml:space="preserve">
          <source>Committing to blead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a41fb15f0dcdac602ddfd97f9ced6c2c1be6954" translate="yes" xml:space="preserve">
          <source>Committing to maintenance versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8186840565d9d31b1a177074576c6626b1a28e" translate="yes" xml:space="preserve">
          <source>Committing your work will save the change</source>
          <target state="translated">Посвящение Вашей работы сохранит изменения</target>
        </trans-unit>
        <trans-unit id="7de90a65241a6cdbd9ade485d777715d99285a1e" translate="yes" xml:space="preserve">
          <source>Common</source>
          <target state="translated">Common</target>
        </trans-unit>
        <trans-unit id="faaa9dff871ab55bba961bf6bd339692067a8c79" translate="yes" xml:space="preserve">
          <source>Common Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e2c656b6c5fef568eeb67c648cc5a5db418a23" translate="yes" xml:space="preserve">
          <source>Common encodings recognized by ISO, MIME, IANA, and various other standardisation organisations are recognised; for a more detailed list see &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0160caed21fbd46d3db9b1e56d4701e45dadedf1" translate="yes" xml:space="preserve">
          <source>Common encodings recognized by ISO, MIME, IANA, and various other standardisation organisations are recognised; for a more detailed list see &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt;.</source>
          <target state="translated">Признаны общие кодировки, признанные ISO, MIME, IANA и другими организациями по стандартизации; для более подробного списка см. &lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9506633a3b0fc3eabffeede071b59b13423caf84" translate="yes" xml:space="preserve">
          <source>Common errors and problems</source>
          <target state="translated">Общие ошибки и проблемы</target>
        </trans-unit>
        <trans-unit id="018807b11c0015b193f5d2dff14e43d55830e43d" translate="yes" xml:space="preserve">
          <source>Common questions answered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3710bbf841f5662d9076f286b3544953fd32bcdf" translate="yes" xml:space="preserve">
          <source>Common type methods</source>
          <target state="translated">Методы общего типа</target>
        </trans-unit>
        <trans-unit id="e14428073bc21b2242fa58d29decc7fd620a28cc" translate="yes" xml:space="preserve">
          <source>Common values for &lt;code&gt;$ivPartitionType&lt;/code&gt; include &lt;code&gt;PARTITION_FAT_12==1&lt;/code&gt;, &lt;code&gt;PARTITION_FAT_16==4&lt;/code&gt;, &lt;code&gt;PARTITION_EXTENDED==5&lt;/code&gt;, &lt;code&gt;PARTITION_FAT32==0xB&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a9217a7a2833f7343523310e0806117cb02577" translate="yes" xml:space="preserve">
          <source>Compare 8-bit scalar data according to the current locale</source>
          <target state="translated">Сравните 8-битные скалярные данные в соответствии с текущей локалью.</target>
        </trans-unit>
        <trans-unit id="bad80fc47f96accbfa240424529d9596aa063e4c" translate="yes" xml:space="preserve">
          <source>Compare &lt;code&gt;stat&lt;/code&gt; of filehandle with &lt;code&gt;stat&lt;/code&gt; of provided filename. This can be used to check that the filename and filehandle initially point to the same file and that the number of links to the file is 1 (all fields returned by stat() are compared).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77e2932b456b90db814e0a4de05c60e78fca296" translate="yes" xml:space="preserve">
          <source>Compare C</source>
          <target state="translated">Сравнить С</target>
        </trans-unit>
        <trans-unit id="9608a3eba277fa15d97bc5d85ad1fc9cb0be2844" translate="yes" xml:space="preserve">
          <source>Compare OBJ1 and OBJ2 and return -1, 0, or 1, if OBJ1 is less than, equal to, or larger than OBJ2, respectively.</source>
          <target state="translated">Сравните OBJ1 и OBJ2 и возврат -1,0 или 1,если OBJ1 меньше,равен или больше OBJ2,соответственно.</target>
        </trans-unit>
        <trans-unit id="359cbf85e64382337df3ea03a1b2899954429e0b" translate="yes" xml:space="preserve">
          <source>Compare OBJ1 and OBJ2 and return -1, 0, or 1, if OBJ1 is numerically less than, equal to, or larger than OBJ2, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea95d1f886daac818a31006775ac3fb0265210d" translate="yes" xml:space="preserve">
          <source>Compare files or filehandles</source>
          <target state="translated">Сравнение файлов или файловых дескрипторов</target>
        </trans-unit>
        <trans-unit id="c8f1d71cf0a936dd7f0500caee4610cd7b62576a" translate="yes" xml:space="preserve">
          <source>Compare the following to the examples in &lt;code&gt;(*PRUNE)&lt;/code&gt; ; note the string is twice as long:</source>
          <target state="translated">Сравните следующее с примерами в &lt;code&gt;(*PRUNE)&lt;/code&gt; ; обратите внимание, что строка вдвое длиннее:</target>
        </trans-unit>
        <trans-unit id="750ea7b609311ac89e3490143278d77fabe5b425" translate="yes" xml:space="preserve">
          <source>Compare the following to the examples in &lt;code&gt;(*PRUNE)&lt;/code&gt;; note the string is twice as long:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ddd15b8d251ac3138eb554c808b81fba8e3f77" translate="yes" xml:space="preserve">
          <source>Compare this code that uses an arbitrary ID...</source>
          <target state="translated">Сравните этот код,который использует произвольный идентификатор...</target>
        </trans-unit>
        <trans-unit id="d12d96005a498c4cadff6daa5f0a0e574ae4acad" translate="yes" xml:space="preserve">
          <source>Compare this to:</source>
          <target state="translated">Сравнить с этим:</target>
        </trans-unit>
        <trans-unit id="7f18e1a8f5bc872f75eec509b3be6157fc03fc7a" translate="yes" xml:space="preserve">
          <source>Compare this with a similar but locale-aware program:</source>
          <target state="translated">Сравните это с аналогичной,но учитывающей местные особенности программой:</target>
        </trans-unit>
        <trans-unit id="777b2f3ef1bbfb2e49e5cc0c311dce3b665b3d34" translate="yes" xml:space="preserve">
          <source>Compare this with the characters that you see and their order if you state explicitly that the locale should be ignored:</source>
          <target state="translated">Сравните это с символами,которые вы видите,и их порядком,если вы явно указываете,что локаль должна быть проигнорирована:</target>
        </trans-unit>
        <trans-unit id="8989d48e5efe1cfe0a91400d8b896a2d5b0f2ac0" translate="yes" xml:space="preserve">
          <source>Compares $x with $y and takes the sign into account. Returns -1, 0, 1 or undef.</source>
          <target state="translated">Сравнивает $x с $y и учитывает счет.Возвращает -1,0,1 или undef.</target>
        </trans-unit>
        <trans-unit id="7080fdc780e08e244284eff667294f04737c6d6a" translate="yes" xml:space="preserve">
          <source>Compares $x with $y while ignoring their sign. Returns -1, 0, 1 or undef.</source>
          <target state="translated">Сравнивает $x с $y,игнорируя их знак.Возвращает -1,0,1 или неопределенный.</target>
        </trans-unit>
        <trans-unit id="bb939a704fb32544966548a9a5549dad34ca8481" translate="yes" xml:space="preserve">
          <source>Compares the sequence of characters (stored as octets) in &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;blen&lt;/code&gt; with the sequence of characters (stored as UTF-8) in &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;ulen&lt;/code&gt; . Returns 0 if they are equal, -1 or -2 if the first string is less than the second string, +1 or +2 if the first string is greater than the second string.</source>
          <target state="translated">Сравнивает последовательность символов (хранящуюся как октеты) в &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;blen&lt;/code&gt; с последовательностью символов (сохраненную как UTF-8) в &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;ulen&lt;/code&gt; . Возвращает 0, если они равны, -1 или -2, если первая строка меньше второй, +1 или +2, если первая строка больше второй.</target>
        </trans-unit>
        <trans-unit id="9a34b5d5cad6074d5123e9c4323544249b1dbdf1" translate="yes" xml:space="preserve">
          <source>Compares the sequence of characters (stored as octets) in &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;blen&lt;/code&gt; with the sequence of characters (stored as UTF-8) in &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;ulen&lt;/code&gt;. Returns 0 if they are equal, -1 or -2 if the first string is less than the second string, +1 or +2 if the first string is greater than the second string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20da491304f6c81eaa643ddf1af11a10dab08b5e" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and 'use bytes' aware and will coerce its args to strings if necessary. If the flags contain SV_GMAGIC, it handles get magic. See also &lt;code&gt;sv_cmp_flags&lt;/code&gt; .</source>
          <target state="translated">Сравнивает строки в двух SV с учетом локали. Знает ли UTF-8 и 'use bytes' и при необходимости преобразует его аргументы в строки. Если флаги содержат SV_GMAGIC, он обрабатывает магию. См. Также &lt;code&gt;sv_cmp_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14038da5801f25b5039c66301e98f0e246769198" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;sv_cmp&lt;/code&gt; .</source>
          <target state="translated">Сравнивает строки в двух SV с учетом локали. Знает ли UTF-8 и 'use bytes', обрабатывает магию и при необходимости преобразует свои аргументы в строки. См. Также &lt;code&gt;sv_cmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="934103d51d8129add1e69c517574a3e65da500a6" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware and will coerce its args to strings if necessary. If the flags contain &lt;code&gt;SV_GMAGIC&lt;/code&gt;, it handles get magic. See also &lt;code&gt;&lt;a href=&quot;#sv_cmp_flags&quot;&gt;&quot;sv_cmp_flags&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d140d9a3becc8051c34102ae3cf6e3675ca0845e" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;&lt;a href=&quot;#sv_cmp&quot;&gt;&quot;sv_cmp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810a90ac09960b8d41b487c729062ca1467528ef" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt; . Is UTF-8 and 'use bytes' aware and will coerce its args to strings if necessary. If the flags include SV_GMAGIC, it handles get magic. See also &lt;code&gt;sv_cmp_locale_flags&lt;/code&gt; .</source>
          <target state="translated">Сравнивает струны в двух SV. Возвращает -1, 0 или 1, указывая, является ли строка в &lt;code&gt;sv1&lt;/code&gt; меньше, равна или больше, чем строка в &lt;code&gt;sv2&lt;/code&gt; . Знает ли UTF-8 и 'use bytes' и при необходимости преобразует его аргументы в строки. Если флаги включают SV_GMAGIC, он обрабатывает магию. См. Также &lt;code&gt;sv_cmp_locale_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41ea1ccdf864f6da3ab35b8196aaf20a51353014" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt; . Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;sv_cmp_locale&lt;/code&gt; .</source>
          <target state="translated">Сравнивает струны в двух SV. Возвращает -1, 0 или 1, указывая, является ли строка в &lt;code&gt;sv1&lt;/code&gt; меньше, равна или больше, чем строка в &lt;code&gt;sv2&lt;/code&gt; . Знает ли UTF-8 и 'use bytes', обрабатывает магию и при необходимости преобразует свои аргументы в строки. См. Также &lt;code&gt;sv_cmp_locale&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efaf59d1f742672d16d54f5f82c1ae6ba772f3f9" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt;. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware and will coerce its args to strings if necessary. If the flags has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, it handles get magic. See also &lt;code&gt;&lt;a href=&quot;#sv_cmp_locale_flags&quot;&gt;&quot;sv_cmp_locale_flags&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d1c8aa85f95b7d8db6a9804343a5cb61d0da00" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt;. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;&lt;a href=&quot;#sv_cmp_locale&quot;&gt;&quot;sv_cmp_locale&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2073b0b6864634229c2ef5bbe3cb503fd3995e43" translate="yes" xml:space="preserve">
          <source>Comparing Version Numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4ac967a48ac38926d5bd3b00ae02344f0ba5c7" translate="yes" xml:space="preserve">
          <source>Comparing and sorting by locale is usually slower than the default sorting; slow-downs of two to four times have been observed. It will also consume more memory: once a Perl scalar variable has participated in any string comparison or sorting operation obeying the locale collation rules, it will take 3-15 times more memory than before. (The exact multiplier depends on the string's contents, the operating system and the locale.) These downsides are dictated more by the operating system's implementation of the locale system than by Perl.</source>
          <target state="translated">Сравнение и сортировка по локали обычно происходит медленнее,чем сортировка по умолчанию;наблюдалось замедление от двух до четырех раз.Она также будет потреблять больше памяти:как только скалярная переменная Perl примет участие в любой операции сравнения или сортировки строк,подчиняясь правилам сортировки по локалям,она займет в 3-15 раз больше памяти,чем раньше.(Точный множитель зависит от содержимого строки,операционной системы и локали).Эти недостатки в большей степени продиктованы реализацией операционной системой системы локали,чем Perl.</target>
        </trans-unit>
        <trans-unit id="5d0a71bcc03489928ee6825a22ad30e52059487a" translate="yes" xml:space="preserve">
          <source>Comparing eval'd strings with code references will give you inaccurate results: a code reference will show a slightly slower execution time than the equivalent eval'd string.</source>
          <target state="translated">Сравнение строк eval'd со ссылками в коде даст неточные результаты:ссылка в коде покажет немного более медленное время выполнения,чем эквивалентная строка eval'd.</target>
        </trans-unit>
        <trans-unit id="f5450ab03d5a67e358f58108a5ac1ca0bb60017f" translate="yes" xml:space="preserve">
          <source>Comparing numbers as strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ac02349f220b342a1d6f35982d496f173f647a" translate="yes" xml:space="preserve">
          <source>Comparing or matching a string case-insensitively. In Perl, it is implemented with the &lt;code&gt;/i&lt;/code&gt; pattern modifier, the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; function, and the &lt;code&gt;\F&lt;/code&gt; double-quote translation escape.</source>
          <target state="translated">Сравнение или сопоставление строки без учета регистра. В Perl это реализовано с помощью модификатора шаблона &lt;code&gt;/i&lt;/code&gt; , функции &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; и экранирования двойных кавычек &lt;code&gt;\F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03df65b79f360271dddd34aad73a2aea91a2e7a2" translate="yes" xml:space="preserve">
          <source>Comparing or matching a string case-insensitively. In Perl, it is implemented with the &lt;code&gt;/i&lt;/code&gt; pattern modifier, the &lt;code&gt;fc&lt;/code&gt; function, and the &lt;code&gt;\F&lt;/code&gt; double-quote translation escape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a7f59a9363348686bb061b55f64413e924ab6c" translate="yes" xml:space="preserve">
          <source>Comparison methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c48f0950de03de96f47ed6f4e87e0f1b8f14ee4" translate="yes" xml:space="preserve">
          <source>Comparison of &lt;code&gt;\N{...}&lt;/code&gt; and &lt;code&gt;\p{name=...}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66df9ce741070999411c890487bc1aa4586a139a" translate="yes" xml:space="preserve">
          <source>Comparison of \N{...} and \p{name=...}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9461d4c9f916ad7df5538225ed552fb6e7e3284b" translate="yes" xml:space="preserve">
          <source>Comparison operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5af749029a988d4116f2f7f6796db052a52edb" translate="yes" xml:space="preserve">
          <source>Comparison operators &lt;code&gt;bcmp()&lt;/code&gt; and &lt;code&gt;bacmp()&lt;/code&gt;) return -1, 0, 1, or undef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c2dde455c2c05f663d3e4f08b51ffa85278453" translate="yes" xml:space="preserve">
          <source>Compatibility functions:</source>
          <target state="translated">Функции совместимости:</target>
        </trans-unit>
        <trans-unit id="5b943666a01e98d02ba66c24633566eaaa275c3f" translate="yes" xml:space="preserve">
          <source>Compatibility with Unix compress/uncompress.</source>
          <target state="translated">Совместимость с Unix-компрессом/разборкой.</target>
        </trans-unit>
        <trans-unit id="aad755de429541e8ec1db943cf4102247f2bb5d3" translate="yes" xml:space="preserve">
          <source>Compilation</source>
          <target state="translated">Compilation</target>
        </trans-unit>
        <trans-unit id="61222b08840c5d756903ba61f2c94b08f72f00f1" translate="yes" xml:space="preserve">
          <source>Compilation errors will tell you the line number of the error, with an indication of the next token or token type that was to be examined. (In a script passed to Perl via &lt;b&gt;-e&lt;/b&gt; switches, each &lt;b&gt;-e&lt;/b&gt; is counted as one line.)</source>
          <target state="translated">Ошибки компиляции сообщат вам номер строки ошибки с указанием следующего токена или типа токена, который должен был быть исследован. (В сценарии, передаваемом Perl с помощью переключателя &lt;b&gt;-e&lt;/b&gt; , каждая &lt;b&gt;-e&lt;/b&gt; считается одной строкой.)</target>
        </trans-unit>
        <trans-unit id="2ec881d923168aac996989549823568de9777478" translate="yes" xml:space="preserve">
          <source>Compilation failed in require</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc9cabc1ceec333d13d3b9abb6ebf9a6c73a5f8" translate="yes" xml:space="preserve">
          <source>Compilation problems</source>
          <target state="translated">Проблемы компиляции</target>
        </trans-unit>
        <trans-unit id="e55924dc0dada3b1eb85a06e699cc43d910428cf" translate="yes" xml:space="preserve">
          <source>Compilation starts with &lt;code&gt;pregcomp()&lt;/code&gt; , which is mostly an initialisation wrapper which farms work out to two other routines for the heavy lifting: the first is &lt;code&gt;reg()&lt;/code&gt; , which is the start point for parsing; the second, &lt;code&gt;study_chunk()&lt;/code&gt; , is responsible for optimisation.</source>
          <target state="translated">Компиляция начинается с &lt;code&gt;pregcomp()&lt;/code&gt; , которая в основном представляет собой оболочку инициализации, которая объединяет две другие подпрограммы для тяжелой работы: первая - &lt;code&gt;reg()&lt;/code&gt; , которая является отправной точкой для синтаксического анализа; второй, &lt;code&gt;study_chunk()&lt;/code&gt; , отвечает за оптимизацию.</target>
        </trans-unit>
        <trans-unit id="cb165269b6704f576e16ac1db5785d86f916c77b" translate="yes" xml:space="preserve">
          <source>Compilation starts with &lt;code&gt;pregcomp()&lt;/code&gt;, which is mostly an initialisation wrapper which farms work out to two other routines for the heavy lifting: the first is &lt;code&gt;reg()&lt;/code&gt;, which is the start point for parsing; the second, &lt;code&gt;study_chunk()&lt;/code&gt;, is responsible for optimisation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ff6f247296e1f189e3389d776ef21cc85aecb1" translate="yes" xml:space="preserve">
          <source>Compile and execute code in restricted compartments</source>
          <target state="translated">Скомпилировать и выполнить код в ограниченных отсеках</target>
        </trans-unit>
        <trans-unit id="7d8b71307540ad88b5ce354792888a1fa8ac7b97" translate="yes" xml:space="preserve">
          <source>Compile and link C code for Perl modules</source>
          <target state="translated">Скомпилируйте и соедините код на C для модулей Perl</target>
        </trans-unit>
        <trans-unit id="b5228203f0e6f671c5f4f6a9e10132ab1a69d71c" translate="yes" xml:space="preserve">
          <source>Compile and run:</source>
          <target state="translated">Собирайся и беги:</target>
        </trans-unit>
        <trans-unit id="527a73f377cb4327fd734d48795ab96620ea39d0" translate="yes" xml:space="preserve">
          <source>Compile as usual:</source>
          <target state="translated">Собирайся,как обычно:</target>
        </trans-unit>
        <trans-unit id="cdeeb661a0937ab7ad6e505a38d072a24f8b1609" translate="yes" xml:space="preserve">
          <source>Compile pass 1: check routines</source>
          <target state="translated">Скомпилировать проход 1:процедуры проверки</target>
        </trans-unit>
        <trans-unit id="ad1d375b3a209f1d8455aec99a7200242837c043" translate="yes" xml:space="preserve">
          <source>Compile pass 1a: constant folding</source>
          <target state="translated">Сборный проход 1a:постоянное складывание</target>
        </trans-unit>
        <trans-unit id="7161db3a41fd5c2db89e47b0432b3cd9aaab4ad8" translate="yes" xml:space="preserve">
          <source>Compile pass 2: context propagation</source>
          <target state="translated">Передача 2:распространение контекста</target>
        </trans-unit>
        <trans-unit id="87a46269fcd4885277b1fc9babaffbe09e6ff612" translate="yes" xml:space="preserve">
          <source>Compile pass 3: peephole optimization</source>
          <target state="translated">Компилируйте проход 3:оптимизация глазка</target>
        </trans-unit>
        <trans-unit id="8ca3fba27b3ae96fd6b344a588412c93d138dee1" translate="yes" xml:space="preserve">
          <source>Compile perl and extensions sources with AddressSanitizer.</source>
          <target state="translated">Скомпилируйте источники perl и расширений с помощью AddressSanitizer.</target>
        </trans-unit>
        <trans-unit id="ccda3f6fab0f60ac068c4f3c452a198cb8be6aeb" translate="yes" xml:space="preserve">
          <source>Compile related options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7eb3fb26758fe496c8ef17d7a22b9b540357a7" translate="yes" xml:space="preserve">
          <source>Compile the pattern stored in &lt;code&gt;pattern&lt;/code&gt; using the given &lt;code&gt;flags&lt;/code&gt; and return a pointer to a prepared &lt;code&gt;REGEXP&lt;/code&gt; structure that can perform the match. See &lt;a href=&quot;#The-REGEXP-structure&quot;&gt;&quot;The REGEXP structure&quot;&lt;/a&gt; below for an explanation of the individual fields in the REGEXP struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f217dff0c1cb84ca4c53ebcecee0f4ba366dbb" translate="yes" xml:space="preserve">
          <source>Compile the pattern stored in &lt;code&gt;pattern&lt;/code&gt; using the given &lt;code&gt;flags&lt;/code&gt; and return a pointer to a prepared &lt;code&gt;REGEXP&lt;/code&gt; structure that can perform the match. See &lt;a href=&quot;#The-REGEXP-structure&quot;&gt;The REGEXP structure&lt;/a&gt; below for an explanation of the individual fields in the REGEXP struct.</source>
          <target state="translated">Скомпилируйте шаблон, хранящийся в &lt;code&gt;pattern&lt;/code&gt; используя заданные &lt;code&gt;flags&lt;/code&gt; и верните указатель на подготовленную структуру &lt;code&gt;REGEXP&lt;/code&gt; , которая может выполнить сопоставление. См. &lt;a href=&quot;#The-REGEXP-structure&quot;&gt;Структуру REGEXP&lt;/a&gt; ниже для объяснения отдельных полей в структуре REGEXP.</target>
        </trans-unit>
        <trans-unit id="52c41fd78e57b0ea9c7edd279f09324e8febcf36" translate="yes" xml:space="preserve">
          <source>Compile this wrapper into a binary executable and then make</source>
          <target state="translated">Скомпилируйте эту обертку в двоичный исполняемый файл,а затем сделайте</target>
        </trans-unit>
        <trans-unit id="5e2892ae20c461e25a70a7b9ce2cc0ca3e806286" translate="yes" xml:space="preserve">
          <source>Compile-time Output</source>
          <target state="translated">Выходное время компиляции</target>
        </trans-unit>
        <trans-unit id="316b6940ee7ff98d0c91d6eed52347ec98e1cebd" translate="yes" xml:space="preserve">
          <source>Compile-time class fields</source>
          <target state="translated">Поля временного класса</target>
        </trans-unit>
        <trans-unit id="b224a19e379a66e5216e1e3a4c23fb529c4ffd00" translate="yes" xml:space="preserve">
          <source>Compile-time options</source>
          <target state="translated">Варианты компиляции времени</target>
        </trans-unit>
        <trans-unit id="f6133097eb347671ef54899d886f2ecc59f839b5" translate="yes" xml:space="preserve">
          <source>Compile-time scope hooks</source>
          <target state="translated">Крючки для определения времени сборки</target>
        </trans-unit>
        <trans-unit id="9a1874d143fe11d6c914d3925623b8d4023c98fe" translate="yes" xml:space="preserve">
          <source>Compiled Encodings</source>
          <target state="translated">Скомпилированные коды</target>
        </trans-unit>
        <trans-unit id="1d91d32578293cf924d4df99dc6ed9c758663fe8" translate="yes" xml:space="preserve">
          <source>Compiled Module Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31b9f29bc6f6638bce466630ba2dd4961762067" translate="yes" xml:space="preserve">
          <source>Compiled Perl Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d37a3ea5df0706c7c9b42fdc4c2ef0fe0a0aa99" translate="yes" xml:space="preserve">
          <source>Compiled code</source>
          <target state="translated">Скомпилированный код</target>
        </trans-unit>
        <trans-unit id="5c415c80469833c9cf270c47e731b8c7453f9dbd" translate="yes" xml:space="preserve">
          <source>Compiled program. Inlined into the structure so the entire struct can be treated as a single blob.</source>
          <target state="translated">Скомпилированная программа.Встроена в структуру так,что вся структура может быть обработана как один капля.</target>
        </trans-unit>
        <trans-unit id="208f16ae59394d8539a13277bb3ef361462a3b2b" translate="yes" xml:space="preserve">
          <source>Compiler and Related Tools on Solaris.</source>
          <target state="translated">Компилятор и сопутствующие инструменты на Solaris.</target>
        </trans-unit>
        <trans-unit id="86fcda7fac2013d8c38d615f1d55faaff9f76a8a" translate="yes" xml:space="preserve">
          <source>Compiler/Preprocessor defines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f24cbbea7db0e43a9c0993c8373a846789f46b" translate="yes" xml:space="preserve">
          <source>Compiles a C source file and produces an object file. The name of the object file is returned. The source file is specified in a &lt;code&gt;source&lt;/code&gt; parameter, which is required; the other parameters listed below are optional.</source>
          <target state="translated">Компилирует исходный файл C и создает объектный файл. Возвращается имя объектного файла. Исходный файл указывается в параметре &lt;code&gt;source&lt;/code&gt; , который является обязательным; остальные параметры, перечисленные ниже, не являются обязательными.</target>
        </trans-unit>
        <trans-unit id="0cf70154490ae9489a2b78a86faf4fd482f98a7c" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24918face3ac9c1b717001b232debfe6ee36a5c" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on AIX</source>
          <target state="translated">Компиляция Perl 5 на AIX</target>
        </trans-unit>
        <trans-unit id="c22ae861a5bf3dbdbae654f91cbd81651f885935" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on AIX 7.1.0</source>
          <target state="translated">Компиляция Perl 5 на AIX 7.1.0</target>
        </trans-unit>
        <trans-unit id="9c229fda73fdbf38e74af7c957910e2ab6e8ac38" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on HP-UX</source>
          <target state="translated">Компиляция Perl 5 на HP-UX</target>
        </trans-unit>
        <trans-unit id="4367b922eaae098fdd83c24f81fe1e73e3dcc108" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on Tru64</source>
          <target state="translated">Компиляция Perl 5 по Tru64</target>
        </trans-unit>
        <trans-unit id="0ab72b58debfaa78bed9b0dabffd26a67134a0a0" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on older AIX versions up to 4.3.3</source>
          <target state="translated">Компиляция Perl 5 на старых версиях AIX до 4.3.3.</target>
        </trans-unit>
        <trans-unit id="b9b693c192dd1710f2e9e413a10dac38987acc04" translate="yes" xml:space="preserve">
          <source>Compiling Perl for OS/400 PASE</source>
          <target state="translated">Компиляция Perl для OS/400 PASE</target>
        </trans-unit>
        <trans-unit id="89c4a07bdd1b063c8640e5cb7f79fc20fab27cc4" translate="yes" xml:space="preserve">
          <source>Compiling Perl on BS2000</source>
          <target state="translated">Компиляция Perl на BS2000</target>
        </trans-unit>
        <trans-unit id="7f945a02f351065a45ab543615ac08775ab27ccb" translate="yes" xml:space="preserve">
          <source>Compiling Perl on Symbian</source>
          <target state="translated">Компиляция Perl на Symbian</target>
        </trans-unit>
        <trans-unit id="cea78e017dd3458f4890e6e74a3e6990888adbfd" translate="yes" xml:space="preserve">
          <source>Compiling and saving regular expressions</source>
          <target state="translated">Компиляция и сохранение регулярных выражений</target>
        </trans-unit>
        <trans-unit id="73da9444429f3393b9a36999cf3b31965029c0e7" translate="yes" xml:space="preserve">
          <source>Compiling with threading (-Duseithreads) completely rewrites the function prototypes of Perl. You better try your changes with that. Related to this is the difference between &quot;Perl_-less&quot; and &quot;Perl_-ly&quot; APIs, for example:</source>
          <target state="translated">Компиляция с потоковыми (-Duseithreads)полностью переписывает прототипы функций Perl.Лучше попробуйте свои изменения с этим.С этим связана,например,разница между &quot;Perl_-less&quot; и &quot;Perl_-ly&quot; API:</target>
        </trans-unit>
        <trans-unit id="ce33e80de717ad8f29fa7b0d95b6100971d4a1f5" translate="yes" xml:space="preserve">
          <source>Compiling your C program</source>
          <target state="translated">Компиляция вашей программы на C</target>
        </trans-unit>
        <trans-unit id="4a85048775fa0a61ab607374e9f2ae3d47a74e50" translate="yes" xml:space="preserve">
          <source>Complete Dissociation of Child from Parent</source>
          <target state="translated">Полное отделение ребенка от родителей</target>
        </trans-unit>
        <trans-unit id="eaef8961c7e04657ab293b427fa61a87badc5306" translate="yes" xml:space="preserve">
          <source>Complete an action with several signals masked, they will be unmasked at the end allowing any signals that were intercepted to get handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b6d49a703c470c73b112b479a086dc7896837" translate="yes" xml:space="preserve">
          <source>Complete applications rarely belong in the Perl Module Library.</source>
          <target state="translated">Полные приложения редко входят в библиотеку модулей Perl.</target>
        </trans-unit>
        <trans-unit id="456bc79511dda60e68fd8647231e136ce158a9de" translate="yes" xml:space="preserve">
          <source>Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in 2001-2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86149d77174666ee5946cc62f0896eb40fc6c420" translate="yes" xml:space="preserve">
          <source>Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt;, 2001-2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c1508ef341d68c6231bb4d7d525101aab30f53" translate="yes" xml:space="preserve">
          <source>Complex data structures</source>
          <target state="translated">Сложные структуры данных</target>
        </trans-unit>
        <trans-unit id="ffe6248574dae7c5af853909dcd998ffa5a77c65" translate="yes" xml:space="preserve">
          <source>Complex numbers and associated mathematical functions</source>
          <target state="translated">Комплексные числа и связанные с ними математические функции</target>
        </trans-unit>
        <trans-unit id="cc43311382c470cc090f7797edbba8e531a9d677" translate="yes" xml:space="preserve">
          <source>Complex numbers are numbers that have both a real part and an imaginary part, and are usually noted:</source>
          <target state="translated">Сложные числа-это числа,которые имеют как реальную,так и воображаемую часть,и обычно отмечаются:</target>
        </trans-unit>
        <trans-unit id="0322a4acb08783ea83a479d120598aab8a51d728" translate="yes" xml:space="preserve">
          <source>Complex regular subexpression recursion limit (%d) exceeded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b933ad5b59e3f82ebc999f039fd64112dc79e5" translate="yes" xml:space="preserve">
          <source>Compliant parsers must not treat &quot;-&amp;gt;&quot; as special.</source>
          <target state="translated">Совместимые парсеры не должны рассматривать &quot;-&amp;gt;&quot; как особые.</target>
        </trans-unit>
        <trans-unit id="b4e13848c14cd38c0bce075ad2fa8690d5d9a71b" translate="yes" xml:space="preserve">
          <source>Complicated stuff for Win32 that I don't understand. :(</source>
          <target state="translated">Сложные вещи для Win32,которые я не понимаю.</target>
        </trans-unit>
        <trans-unit id="f9088d8d7c9d5789f609c18210cfd55fd0924e55" translate="yes" xml:space="preserve">
          <source>Composing regular expressions at runtime</source>
          <target state="translated">Составление регулярных выражений во время выполнения</target>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="63df8303c717b29c266d23df163b1b18d7225c3d" translate="yes" xml:space="preserve">
          <source>Composition Exclusion Table</source>
          <target state="translated">Таблица исключений из состава</target>
        </trans-unit>
        <trans-unit id="fb6884eb8992b62c7c1af30d600b40339c50155a" translate="yes" xml:space="preserve">
          <source>Compound Statements</source>
          <target state="translated">Составные отчёты</target>
        </trans-unit>
        <trans-unit id="cb80e304e865d97a907ce554d72a0176ff3f41fb" translate="yes" xml:space="preserve">
          <source>Compound form (&lt;code&gt;\p{name=value}&lt;/code&gt; or &lt;code&gt;\p{name:value}&lt;/code&gt;) tighter rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485ff8d4769defdc95809b50d74f993442a7e521" translate="yes" xml:space="preserve">
          <source>Compress all the DLLs with</source>
          <target state="translated">Сожмите все DLLs с</target>
        </trans-unit>
        <trans-unit id="9fd56668bd5f18daaa0b667a0debd58feedac101" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Bzip2</source>
          <target state="translated">Compress::Raw::Bzip2</target>
        </trans-unit>
        <trans-unit id="18d94e1500a428c004428df46c1953161a32df03" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Bzip2 - Low-Level Interface to bzip2 compression library</source>
          <target state="translated">Сжатие::Сырое::Bzip2-низкоуровневый интерфейс к библиотеке сжатия bzip2</target>
        </trans-unit>
        <trans-unit id="45bc572c9ec4512947eadc206937635681bf6c11" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib</source>
          <target state="translated">Compress::Raw::Zlib</target>
        </trans-unit>
        <trans-unit id="c076710bf2d12402a0edf3b2175c1d82039053a0" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib - Low-Level Interface to zlib compression library</source>
          <target state="translated">Сжатие::Raw::Zlib-низкоуровневый интерфейс к библиотеке сжатия zlib</target>
        </trans-unit>
        <trans-unit id="35464ef9d0e6b29547404c53959f74fe619d2fa0" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib::Deflate</source>
          <target state="translated">Compress::Raw::Zlib::Deflate</target>
        </trans-unit>
        <trans-unit id="9da283b891dfecdc74e74f383b66cc8440ffe8da" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib::Inflate</source>
          <target state="translated">Compress::Raw::Zlib::Inflate</target>
        </trans-unit>
        <trans-unit id="0a6571e5bcd046dfe8f32f7d79b4f6bae3366dd5" translate="yes" xml:space="preserve">
          <source>Compress::Zlib</source>
          <target state="translated">Compress::Zlib</target>
        </trans-unit>
        <trans-unit id="96c20806a0d6c0bf54bc6c1767bdc331836742ff" translate="yes" xml:space="preserve">
          <source>Compress::Zlib - Interface to zlib compression library</source>
          <target state="translated">Сжатие::Zlib-интерфейс к библиотеке сжатия zlib</target>
        </trans-unit>
        <trans-unit id="b27c649ac2489267a35287d00edb05f007c3c52e" translate="yes" xml:space="preserve">
          <source>Compress::Zlib::memGunzip</source>
          <target state="translated">Compress::Zlib::memGunzip</target>
        </trans-unit>
        <trans-unit id="6729436703929444a364247fdaaf90b9905bdce6" translate="yes" xml:space="preserve">
          <source>Compress::Zlib::memGzip</source>
          <target state="translated">Compress::Zlib::memGzip</target>
        </trans-unit>
        <trans-unit id="0b0874ef0be14c295073d65fceb5dc233104edd3" translate="yes" xml:space="preserve">
          <source>Compressed files and Net::FTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee774a21a0a3c5ce8303c3d53424d9997d3a1a40" translate="yes" xml:space="preserve">
          <source>Compresses &lt;code&gt;$source&lt;/code&gt; . If successful it returns the compressed data. Otherwise it returns</source>
          <target state="translated">Сжимает &lt;code&gt;$source&lt;/code&gt; . В случае успеха он возвращает сжатые данные. В противном случае возвращается</target>
        </trans-unit>
        <trans-unit id="246d96bda2baf4885ca8d09bd481192903f46090" translate="yes" xml:space="preserve">
          <source>Compresses &lt;code&gt;$source&lt;/code&gt;. If successful it returns the compressed data. Otherwise it returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4abdd87ed061063a95a2ba22a68b1517b4fb78e" translate="yes" xml:space="preserve">
          <source>Compresses and outputs the contents of the &lt;code&gt;$data&lt;/code&gt; parameter.</source>
          <target state="translated">Сжимает и выводит содержимое параметра &lt;code&gt;$data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bae9119119ae4847de6084005870d7cd27c57d09" translate="yes" xml:space="preserve">
          <source>Compresses and outputs the contents of the &lt;code&gt;$data&lt;/code&gt; parameter. This has the same behaviour as the &lt;code&gt;&lt;a href=&quot;../../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; built-in.</source>
          <target state="translated">Сжимает и выводит содержимое параметра &lt;code&gt;$data&lt;/code&gt; . Это имеет то же поведение, что и встроенная &lt;code&gt;&lt;a href=&quot;../../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e32123e7281a4ff44543f0de8bc796cd4d7a6e5" translate="yes" xml:space="preserve">
          <source>Compresses and outputs the contents of the &lt;code&gt;$data&lt;/code&gt; parameter. This has the same behaviour as the &lt;code&gt;print&lt;/code&gt; built-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf97ac6919789eccc31a14e118827a367bafae6" translate="yes" xml:space="preserve">
          <source>Compressing a file from the filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da28f95a63d279a2a5a84f79bc9657148fad8b7" translate="yes" xml:space="preserve">
          <source>Compressing multiple files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="61322d91de1a1c9dd976decc2eac0656945186ef" translate="yes" xml:space="preserve">
          <source>Compute $x ** $y.</source>
          <target state="translated">Рассчитай $x **$y.</target>
        </trans-unit>
        <trans-unit id="b0e6b1f79c9f3294396b346171031d6eefb80388" translate="yes" xml:space="preserve">
          <source>Computers are good at being predictable and bad at being random (despite appearances caused by bugs in your programs :-). The</source>
          <target state="translated">Компьютеры хороши в предсказуемости и плох в случайности (несмотря на появление ошибок в ваших программах :-).</target>
        </trans-unit>
        <trans-unit id="08d9ea43c28304526180b5a57915a96d4c9ac81d" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;$x&lt;/code&gt; raised to the power &lt;code&gt;$exponent&lt;/code&gt; .</source>
          <target state="translated">Вычисляет &lt;code&gt;$x&lt;/code&gt; в степени &lt;code&gt;$exponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="781db4b96adbd9cb759b1b3c68ae345444d88b62" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;$x&lt;/code&gt; raised to the power &lt;code&gt;$exponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1101021b1dd709e0d39acc05a94329e8f85034" translate="yes" xml:space="preserve">
          <source>Computes the sum of the base 10 digits and assigns the result to the invocand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a8d68ecf91bf24bb4de30244ff8f32e6badb57" translate="yes" xml:space="preserve">
          <source>Computes the sum of the base 10 digits and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ac7c8e25d01d0b70814899b6ae00d4e8d209cf" translate="yes" xml:space="preserve">
          <source>Computing MROs can be expensive. The implementation provides a cache, in which you can store a single &lt;code&gt;SV *&lt;/code&gt; , or anything that can be cast to &lt;code&gt;SV *&lt;/code&gt; , such as &lt;code&gt;AV *&lt;/code&gt; . To read your private value, use the macro &lt;code&gt;MRO_GET_PRIVATE_DATA()&lt;/code&gt; , passing it the &lt;code&gt;mro_meta&lt;/code&gt; structure from the stash, and a pointer to your &lt;code&gt;mro_alg&lt;/code&gt; structure:</source>
          <target state="translated">Вычисления ТОиР могут быть дорогими. Реализация предоставляет кеш, в котором вы можете хранить один &lt;code&gt;SV *&lt;/code&gt; или все, что может быть преобразовано в &lt;code&gt;SV *&lt;/code&gt; , например &lt;code&gt;AV *&lt;/code&gt; . Чтобы прочитать ваше личное значение, используйте макрос &lt;code&gt;MRO_GET_PRIVATE_DATA()&lt;/code&gt; , передав ему структуру &lt;code&gt;mro_meta&lt;/code&gt; из тайника и указатель на вашу структуру &lt;code&gt;mro_alg&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7571a67db3db54aeda215797811564cc2a408d51" translate="yes" xml:space="preserve">
          <source>Computing MROs can be expensive. The implementation provides a cache, in which you can store a single &lt;code&gt;SV *&lt;/code&gt;, or anything that can be cast to &lt;code&gt;SV *&lt;/code&gt;, such as &lt;code&gt;AV *&lt;/code&gt;. To read your private value, use the macro &lt;code&gt;MRO_GET_PRIVATE_DATA()&lt;/code&gt;, passing it the &lt;code&gt;mro_meta&lt;/code&gt; structure from the stash, and a pointer to your &lt;code&gt;mro_alg&lt;/code&gt; structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b08cb6deaa21e440a28ee385677339af044baf5" translate="yes" xml:space="preserve">
          <source>ConTEXT</source>
          <target state="translated">ConTEXT</target>
        </trans-unit>
        <trans-unit id="cb3a0dfbaecfd882d35c67f5f3bd704631194aab" translate="yes" xml:space="preserve">
          <source>Concatenate one or more directory names and a filename to form a complete path ending with a filename</source>
          <target state="translated">Сконцентрируйте одно или несколько имен каталогов и имя файла,чтобы сформировать полный путь,заканчивающийся именем файла.</target>
        </trans-unit>
        <trans-unit id="047b05311f0dc34982a56cd2fb9ad1f922dcbd7c" translate="yes" xml:space="preserve">
          <source>Concatenate one or more directory names and a filename to form a complete path ending with a filename. Resulting paths are &lt;b&gt;relative&lt;/b&gt; by default, but can be forced to be absolute (but avoid this).</source>
          <target state="translated">Соедините одно или несколько имен каталогов и имени файла, чтобы сформировать полный путь, заканчивающийся именем файла. Результирующие пути по умолчанию &lt;b&gt;относительны&lt;/b&gt; , но могут быть абсолютными (но избегайте этого).</target>
        </trans-unit>
        <trans-unit id="f35597adc56e5ce25242327211e537bda9c2f250" translate="yes" xml:space="preserve">
          <source>Concatenate the lists of ops contained directly within two list-type ops, returning the combined list.</source>
          <target state="translated">Сконцентрируйте списки операторов,содержащиеся непосредственно в двух списках операторов,возвращая объединенный список.</target>
        </trans-unit>
        <trans-unit id="69b693ac60538b21401c38658f295d2b74e62e3e" translate="yes" xml:space="preserve">
          <source>Concatenate the lists of ops contained directly within two list-type ops, returning the combined list. &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; are the list-type ops to concatenate. &lt;code&gt;optype&lt;/code&gt; specifies the intended opcode for the list. If either &lt;code&gt;first&lt;/code&gt; or &lt;code&gt;last&lt;/code&gt; is not already a list of the right type, it will be upgraded into one. If either &lt;code&gt;first&lt;/code&gt; or &lt;code&gt;last&lt;/code&gt; is null, the other is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649e67e9503162d4b5271ac24839b4dd127f4a0a" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn't look good, isn't necessary and confuses OS/2. Of course, if this is the root directory, don't cut off the trailing slash :-)</source>
          <target state="translated">Сконцентрируйте два или более имени каталога,чтобы сформировать полный путь,заканчивающийся на каталог.Но удалите трейлинговый слэш из результирующей строки,потому что он выглядит не очень хорошо,не нужен и сбивает с толку OS/2.Конечно,если это корневой каталог,не отсекайте трейлинговый слэш :-).</target>
        </trans-unit>
        <trans-unit id="55de8a490d5d9aa9964bf82d52f080f49c22f141" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn't look good, isn't necessary and confuses OS2. Of course, if this is the root directory, don't cut off the trailing slash :-)</source>
          <target state="translated">Сконцентрируйте два или более имени каталога,чтобы сформировать полный путь,заканчивающийся на каталог.Но удалите трейлинговый слэш из результирующей строки,потому что он не очень хорошо выглядит,не нужен и сбивает с толку OS2.Конечно,если это корневой каталог,не отсекайте трейлинговый слэш :-).</target>
        </trans-unit>
        <trans-unit id="7d067b3996ede67611d936f0cc0594b33d12b143" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a path separated by colons (&quot;:&quot;) ending with a directory. Resulting paths are &lt;b&gt;relative&lt;/b&gt; by default, but can be forced to be absolute (but avoid this, see below). Automatically puts a trailing &quot;:&quot; on the end of the complete path, because that's what's done in MacPerl's environment and helps to distinguish a file path from a directory path.</source>
          <target state="translated">Соедините два или более имен каталогов, чтобы сформировать путь, разделенный двоеточиями (&quot;:&quot;), заканчивающийся каталогом. Результирующие пути по умолчанию являются &lt;b&gt;относительными&lt;/b&gt; , но могут быть принудительно абсолютными (но избегайте этого, см. Ниже). Автоматически ставит завершающий &amp;laquo;:&amp;raquo; в конце полного пути, потому что это то, что сделано в среде MacPerl и помогает отличить путь к файлу от пути к каталогу.</target>
        </trans-unit>
        <trans-unit id="1f92bbd0599928bde109c94dcff53b7718e50962" translate="yes" xml:space="preserve">
          <source>Concatenates a list of directory specifications with a filename specification to build a path.</source>
          <target state="translated">Соединяет список спецификаций каталога со спецификацией имени файла для построения пути.</target>
        </trans-unit>
        <trans-unit id="443b92cba56de5e426bb70ed2661bc12a7f0aa5f" translate="yes" xml:space="preserve">
          <source>Concatenates a list of file specifications, and returns the result as a native directory specification unless the Unix filename reporting feature has been enabled. No check is made for &quot;impossible&quot; cases (e.g. elements other than the first being absolute filespecs).</source>
          <target state="translated">Сосредоточивает список спецификаций файлов и возвращает результат в виде родной спецификации директории,если только не была включена функция отчётности по имени файла Unix.Не проверяются &quot;невозможные&quot; случаи (например,элементы,не являющиеся абсолютными файловыми спецификациями).</target>
        </trans-unit>
        <trans-unit id="a1064ed1ab12c5551a61949efb23c2a0fe5e1b5a" translate="yes" xml:space="preserve">
          <source>Concatenates all files mentioned on command line to STDOUT.</source>
          <target state="translated">Сконцентрирует все файлы,упомянутые в командной строке,в STDOUT.</target>
        </trans-unit>
        <trans-unit id="aeaf86da2ac135282bf22834043d6e62fbe3a826" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt; -terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpv_mg&lt;/code&gt; .</source>
          <target state="translated">Сцепляет &lt;code&gt;NUL&lt;/code&gt; -завершённой строки на конец строки , которая находится в SV. Если для SV установлен статус UTF-8, то добавленные байты должны быть действительными UTF-8. Обрабатывает магию &quot;получить&quot;, но не &quot;установить&quot;. См. &lt;code&gt;sv_catpv_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14b45eaa62bb9cbc2fd55f55bbeff1b25f09af1b" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt; -terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_SMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_set&lt;/code&gt; on the modified SV if appropriate.</source>
          <target state="translated">Сцепляет &lt;code&gt;NUL&lt;/code&gt; -завершённой строки на конец строки , которая находится в SV. Если для SV установлен статус UTF-8, то добавленные байты должны быть действительными UTF-8. Если &lt;code&gt;flags&lt;/code&gt; имеет &lt;code&gt;SV_SMAGIC&lt;/code&gt; бит SV_SMAGIC , при необходимости будет установлено &lt;code&gt;mg_set&lt;/code&gt; на модифицированном SV.</target>
        </trans-unit>
        <trans-unit id="a08169d2548452ac4b1d90f272918c606737e67d" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt;-terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_catpv_mg&quot;&gt;&quot;sv_catpv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3222780ee3ca4127f6c3591b30760fd31f0500a" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt;-terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_SMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_set&lt;/code&gt; on the modified SV if appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1ee548c525e9ae72200cea308c51a15c04e05b" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt; . Handles 'get' magic on both SVs, but no 'set' magic. See &lt;code&gt;sv_catsv_mg&lt;/code&gt; and &lt;code&gt;sv_catsv_nomg&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;ssv&lt;/code&gt; строку из SV ssv в конец строки в SV &lt;code&gt;dsv&lt;/code&gt; . Если &lt;code&gt;ssv&lt;/code&gt; имеет значение null, ничего не делает; в противном случае изменяет только &lt;code&gt;dsv&lt;/code&gt; . Обрабатывает магию &quot;получить&quot; на обоих SV, но не магию &quot;установить&quot;. См. &lt;code&gt;sv_catsv_mg&lt;/code&gt; и &lt;code&gt;sv_catsv_nomg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="638b5971cabc9806aa9868b5283e2415ea8bede6" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;flags&lt;/code&gt; include &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will call &lt;code&gt;mg_get&lt;/code&gt; on both SVs if appropriate. If &lt;code&gt;flags&lt;/code&gt; include &lt;code&gt;SV_SMAGIC&lt;/code&gt; , &lt;code&gt;mg_set&lt;/code&gt; will be called on the modified SV afterward, if appropriate. &lt;code&gt;sv_catsv&lt;/code&gt; , &lt;code&gt;sv_catsv_nomg&lt;/code&gt; , and &lt;code&gt;sv_catsv_mg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">&lt;code&gt;ssv&lt;/code&gt; строку из SV ssv в конец строки в SV &lt;code&gt;dsv&lt;/code&gt; . Если &lt;code&gt;ssv&lt;/code&gt; имеет значение null, ничего не делает; в противном случае изменяет только &lt;code&gt;dsv&lt;/code&gt; . Если &lt;code&gt;flags&lt;/code&gt; включают &lt;code&gt;SV_GMAGIC&lt;/code&gt; бит SV_GMAGIC, при необходимости вызовет &lt;code&gt;mg_get&lt;/code&gt; на обоих SV. Если &lt;code&gt;flags&lt;/code&gt; включают &lt;code&gt;SV_SMAGIC&lt;/code&gt; , &lt;code&gt;mg_set&lt;/code&gt; будет вызываться впоследствии для измененного SV, если это необходимо. &lt;code&gt;sv_catsv&lt;/code&gt; , &lt;code&gt;sv_catsv_nomg&lt;/code&gt; и &lt;code&gt;sv_catsv_mg&lt;/code&gt; реализованы в терминах этой функции.</target>
        </trans-unit>
        <trans-unit id="ef91750225c756ce3918a5c6b5e7a51f838cca1d" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt;. If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt;. Handles 'get' magic on both SVs, but no 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_catsv_mg&quot;&gt;&quot;sv_catsv_mg&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_catsv_nomg&quot;&gt;&quot;sv_catsv_nomg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf0df56f5ba323341f510b419f1a9cbaba32495" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt;. If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will call &lt;code&gt;mg_get&lt;/code&gt; on both SVs if appropriate. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_SMAGIC&lt;/code&gt; bit set, &lt;code&gt;mg_set&lt;/code&gt; will be called on the modified SV afterward, if appropriate. &lt;code&gt;sv_catsv&lt;/code&gt;, &lt;code&gt;sv_catsv_nomg&lt;/code&gt;, and &lt;code&gt;sv_catsv_mg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e76beb52ccfcc94d31960e2d42fb47a8c8faab" translate="yes" xml:space="preserve">
          <source>Concatenates the string onto the end of the string which is in the SV. &lt;code&gt;len&lt;/code&gt; indicates number of bytes to copy. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_catpvn_mg&quot;&gt;&quot;sv_catpvn_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fe76b48251f7900129b9480f9210b340fdc9af" translate="yes" xml:space="preserve">
          <source>Concatenates the string onto the end of the string which is in the SV. The &lt;code&gt;len&lt;/code&gt; indicates number of bytes to copy.</source>
          <target state="translated">Связывает строку с концом строки, которая находится в SV. &lt;code&gt;len&lt;/code&gt; указывает количество байт для копирования.</target>
        </trans-unit>
        <trans-unit id="9552a0de5c0babf6573b77f8cdd2583744fe375e" translate="yes" xml:space="preserve">
          <source>Concatenates the string onto the end of the string which is in the SV. The &lt;code&gt;len&lt;/code&gt; indicates number of bytes to copy. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpvn_mg&lt;/code&gt; .</source>
          <target state="translated">Связывает строку с концом строки, которая находится в SV. &lt;code&gt;len&lt;/code&gt; указывает количество байт для копирования. Если для SV установлен статус UTF-8, то добавленные байты должны быть действительными UTF-8. Обрабатывает магию &quot;получить&quot;, но не &quot;установить&quot;. См. &lt;code&gt;sv_catpvn_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdcfedf7534d333df8380db86be3ac2ea169364e" translate="yes" xml:space="preserve">
          <source>Conceptually, the easiest way to count the lines in a file is to simply read them and count them:</source>
          <target state="translated">Концептуально,самый простой способ подсчета строк в файле-это просто прочитать их и подсчитать:</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="0dbde46110575d19c57e331505cceacbb06fd5c7" translate="yes" xml:space="preserve">
          <source>Conditional Operator</source>
          <target state="translated">Условный оператор</target>
        </trans-unit>
        <trans-unit id="80a3a5f034865959dc043303f8d87089be9bec1e" translate="yes" xml:space="preserve">
          <source>Conditional and looping constructs</source>
          <target state="translated">Условные и петлевые конструкции</target>
        </trans-unit>
        <trans-unit id="e284587340860a550f0b325831e42317beb72781" translate="yes" xml:space="preserve">
          <source>Conditional expression. Matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96632c17c857e0c02d178649142fafe7584b5abf" translate="yes" xml:space="preserve">
          <source>Conditional expression. Matches &lt;code&gt;yes-pattern&lt;/code&gt; if &lt;code&gt;condition&lt;/code&gt; yields a true value, matches &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; otherwise. A missing pattern always matches.</source>
          <target state="translated">Условное выражение. Соответствует &lt;code&gt;yes-pattern&lt;/code&gt; если &lt;code&gt;condition&lt;/code&gt; дает истинное значение, в противном случае соответствует &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; нет&quot;. Отсутствующий шаблон всегда совпадает.</target>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="translated">Условные выражения</target>
        </trans-unit>
        <trans-unit id="a343c81c0a2492332b5fb3f41392ce89176105c4" translate="yes" xml:space="preserve">
          <source>Conditional tests</source>
          <target state="translated">Условные испытания</target>
        </trans-unit>
        <trans-unit id="70fb129765ae9747ca77f765dc8b67e5bb6bb01d" translate="yes" xml:space="preserve">
          <source>Conditionally does &lt;code&gt;OpMORESIB_set&lt;/code&gt; or &lt;code&gt;OpLASTSIB_set&lt;/code&gt; depending on whether &lt;code&gt;sib&lt;/code&gt; is non-null. For a higher-level interface, see &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf037e3922672487abb4fdf8a9fb64c629078717" translate="yes" xml:space="preserve">
          <source>Conditionally does &lt;code&gt;OpMORESIB_set&lt;/code&gt; or &lt;code&gt;OpLASTSIB_set&lt;/code&gt; depending on whether sib is non-null. For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">Условно выполняет &lt;code&gt;OpMORESIB_set&lt;/code&gt; или &lt;code&gt;OpLASTSIB_set&lt;/code&gt; в зависимости от того, является ли sib ненулевым. Для интерфейса более высокого уровня см. &lt;code&gt;op_sibling_splice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="ecd4bd981dd9c138dc910d68320acc6b8da803ca" translate="yes" xml:space="preserve">
          <source>Config - access Perl configuration information</source>
          <target state="translated">Конфигурация-доступ к информации о конфигурации Perl</target>
        </trans-unit>
        <trans-unit id="fbb49b6e5c194d0312a905696c20f6b5d8a43c67" translate="yes" xml:space="preserve">
          <source>Config Variables</source>
          <target state="translated">Конфигурируемые переменные</target>
        </trans-unit>
        <trans-unit id="dcd72ea8d2639213962e8d738a2e737b5698b164" translate="yes" xml:space="preserve">
          <source>Config files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6df16e95af35ad3cf55abb04956aab698aea9b" translate="yes" xml:space="preserve">
          <source>Config.pm</source>
          <target state="translated">Config.pm</target>
        </trans-unit>
        <trans-unit id="3784c094667e63aa78e7304ec87ad01e622ad79e" translate="yes" xml:space="preserve">
          <source>Config.sys</source>
          <target state="translated">Config.sys</target>
        </trans-unit>
        <trans-unit id="61386747172506a6ac768b51dbad3d57554bb149" translate="yes" xml:space="preserve">
          <source>Config::Extensions</source>
          <target state="translated">Config::Extensions</target>
        </trans-unit>
        <trans-unit id="6d02f90eafa05da7a1ea66cf96ef687719ae05a5" translate="yes" xml:space="preserve">
          <source>Config::Extensions - hash lookup of which core extensions were built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619638cbc1e035ad1bee860d855259292edb0fdd" translate="yes" xml:space="preserve">
          <source>Config::Perl::V</source>
          <target state="translated">Config::Perl::V</target>
        </trans-unit>
        <trans-unit id="92588fff05a98a67a63f51eca74fdf8e4b1c4d06" translate="yes" xml:space="preserve">
          <source>Config::Perl::V - Structured data retrieval of perl -V output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7f1d1b07ade815b9ca8129a9e4d8f0870938dc" translate="yes" xml:space="preserve">
          <source>Configurable Options</source>
          <target state="translated">Настраиваемые параметры</target>
        </trans-unit>
        <trans-unit id="56f4add64bfc676813ad28c07cc79f57bf4381eb" translate="yes" xml:space="preserve">
          <source>Configurable error handling can be very useful to your users. Consider offering a choice of levels for warning and debug messages, an option to send messages to a separate file, a way to specify an error-handling routine, or other such features. Be sure to default all these options to the commonest use.</source>
          <target state="translated">Настраиваемая обработка ошибок может быть очень полезна вашим пользователям.Рассмотрим возможность выбора уровня предупреждающих и отладочных сообщений,возможность отправки сообщений в отдельный файл,способ задания рутины обработки ошибок или другие подобные возможности.Убедитесь,что все эти опции по умолчанию наиболее часто используются.</target>
        </trans-unit>
        <trans-unit id="81fb8746ddaba4745cb47bc6c868c238d3f12698" translate="yes" xml:space="preserve">
          <source>Configuration Variables or Methods</source>
          <target state="translated">Переменные конфигурации или методы</target>
        </trans-unit>
        <trans-unit id="d2fcd0c469689696cdc57b270bd37400e3e0e6c1" translate="yes" xml:space="preserve">
          <source>Configuration errors and errors in the option definitions are signalled using die() and will terminate the calling program unless the call to Getopt::Long::GetOptions() was embedded in &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; { ...
}&lt;/code&gt; , or die() was trapped using &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; .</source>
          <target state="translated">Ошибки конфигурации и ошибки в определениях опций сигнализируются с помощью die () и завершают вызывающую программу, если вызов Getopt :: Long :: GetOptions () не был встроен в &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; { ... }&lt;/code&gt; или die () не было перехвачено с помощью &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bb1a984a9026064662243e9b83df991f3daebce" translate="yes" xml:space="preserve">
          <source>Configuration errors and errors in the option definitions are signalled using die() and will terminate the calling program unless the call to Getopt::Long::GetOptions() was embedded in &lt;code&gt;eval { ... }&lt;/code&gt;, or die() was trapped using &lt;code&gt;$SIG{__DIE__}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01782ddc9fc1147edd83eb2ff115b31fada6fafa" translate="yes" xml:space="preserve">
          <source>Configuration for individual distributions (</source>
          <target state="translated">Конфигурация для отдельных дистрибутивов (</target>
        </trans-unit>
        <trans-unit id="620eedd56ce9ab6e57edf826ebebcc6cc23b9756" translate="yes" xml:space="preserve">
          <source>Configuration for individual distributions (_Distroprefs_)</source>
          <target state="translated">Конфигурация для отдельных дистрибутивов (_Distroprefs_)</target>
        </trans-unit>
        <trans-unit id="7623cfaab2727d5570d1fb08630a1656736866f6" translate="yes" xml:space="preserve">
          <source>Configuration methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5394ae422bdb720639203760041881561ff41485" translate="yes" xml:space="preserve">
          <source>Configuration options can be passed to the constructor:</source>
          <target state="translated">Опции конфигурации могут быть переданы конструктору:</target>
        </trans-unit>
        <trans-unit id="38b23d1375544f4a68ea9228188041f47459e054" translate="yes" xml:space="preserve">
          <source>Configuration variables</source>
          <target state="translated">Переменные конфигурации</target>
        </trans-unit>
        <trans-unit id="792c81a4cfdcb5b45d688cb03c2fd2e816f86d44" translate="yes" xml:space="preserve">
          <source>Configure</source>
          <target state="translated">Configure</target>
        </trans-unit>
        <trans-unit id="5319105d548748be6bfc04e58d097068e24ec3c4" translate="yes" xml:space="preserve">
          <source>Configure Perl on OS/390</source>
          <target state="translated">Настройка Perl на OS/390</target>
        </trans-unit>
        <trans-unit id="b0c13173e3ce803d77c93abfff4ea85fc8bfcd93" translate="yes" xml:space="preserve">
          <source>Configure and beyond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3578dc7c3bfda9e6cafe0a3dcc7133abe34a4d" translate="yes" xml:space="preserve">
          <source>Configure and perl need a way to invoke a C preprocessor. I have created a simple cover for cc which does the right thing. Without this, Configure will create its own wrapper which works, but it doesn't handle some of the command line arguments that perl will throw at it.</source>
          <target state="translated">Настройка и perl нуждаются в способе вызова препроцессора C.Я создал простую обложку для cc,которая делает правильные вещи.Без этого,Configure создаст свою собственную обертку,которая работает,но она не обрабатывает некоторые аргументы командной строки,которые perl бросит в нее.</target>
        </trans-unit>
        <trans-unit id="42f3effdfaee1be1f099b1b5ad94e5c21896a110" translate="yes" xml:space="preserve">
          <source>Configure notes: This function is called 'Perl_signbit' instead of a plain 'signbit' because it is easy to imagine a system having a signbit() function or macro that doesn't happen to work with our particular choice of NVs. We shouldn't just re-#define signbit as Perl_signbit and expect the standard system headers to be happy. Also, this is a no-context function (no pTHX_) because Perl_signbit() is usually re-#defined in perl.h as a simple macro call to the system's signbit(). Users should just always call Perl_signbit().</source>
          <target state="translated">Настройте примечания:Эта функция называется 'Perl_signbit' вместо простого 'signbit',потому что легко представить себе систему,имеющую функцию signbit()или макрос,который случайно не работает с нашим конкретным выбором NVs.Мы не должны просто пере#определять signbit как Perl_signbit и ожидать,что стандартные заголовки системы будут довольны.Кроме того,это неконтекстная функция (без pTHX_),поскольку Perl_signbit()обычно переопределяется в perl.h как простой вызов макроса к системной signbit().Пользователи должны просто всегда вызывать Perl_signbit().</target>
        </trans-unit>
        <trans-unit id="4f6173a649f1483a99a4687a3ffadbcdca70587d" translate="yes" xml:space="preserve">
          <source>Configure-time Options for Perl on Cygwin</source>
          <target state="translated">Опции настройки времени для Perl на Cygwin</target>
        </trans-unit>
        <trans-unit id="9df8ff6ed6cb175291b798f1b94a9c669317082c" translate="yes" xml:space="preserve">
          <source>Configured this way, single-character options can be bundled but long options &lt;b&gt;must&lt;/b&gt; always start with a double dash &lt;code&gt;--&lt;/code&gt; to avoid ambiguity. For example, when &lt;code&gt;vax&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are all valid options,</source>
          <target state="translated">При такой настройке можно объединять односимвольные параметры, но длинные параметры всегда &lt;b&gt;должны&lt;/b&gt; начинаться с двойного тире &lt;code&gt;--&lt;/code&gt; во избежание двусмысленности. Например, если &lt;code&gt;vax&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; и &lt;code&gt;x&lt;/code&gt; - допустимые параметры,</target>
        </trans-unit>
        <trans-unit id="675fefb1bda485f74416546253e30d878e69556f" translate="yes" xml:space="preserve">
          <source>Configured this way, single-character options can be bundled but long options &lt;b&gt;must&lt;/b&gt; always start with a double dash &lt;code&gt;--&lt;/code&gt; to avoid ambiguity. For example, when &lt;code&gt;vax&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are all valid options,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f484916b063316ec823093c0c2c489d88de5c3b7" translate="yes" xml:space="preserve">
          <source>Configured to use SDK:Local/C/perl to start standard scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e3547b156067af12afba08b6daf72fe4ff1b22" translate="yes" xml:space="preserve">
          <source>Configuring Getopt::Long</source>
          <target state="translated">Настройка Getopt::Long</target>
        </trans-unit>
        <trans-unit id="205f634664a81d583aebe4d32b4cfaa368eaa173" translate="yes" xml:space="preserve">
          <source>Configuring lynx or ncftp for going through a firewall</source>
          <target state="translated">Настройка lynx или ncftp для прохождения через брандмауэр.</target>
        </trans-unit>
        <trans-unit id="65dba693e41ad24c6b3cdc1ab833ca9c2ff6ff01" translate="yes" xml:space="preserve">
          <source>Conflicting storage orders make an utter mess out of the numbers. If a little-endian host (Intel, VAX) stores 0x12345678 (305419896 in decimal), a big-endian host (Motorola, Sparc, PA) reads it as 0x78563412 (2018915346 in decimal). Alpha and MIPS can be either: Digital/Compaq used/uses them in little-endian mode; SGI/Cray uses them in big-endian mode. To avoid this problem in network (socket) connections use the &lt;a href=&quot;perlfunc#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlfunc#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt; formats &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;, the &quot;network&quot; orders. These are guaranteed to be portable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90ca9c9438d0e03c655e7e421109dc9a2965820" translate="yes" xml:space="preserve">
          <source>Conflicting storage orders make an utter mess out of the numbers. If a little-endian host (Intel, VAX) stores 0x12345678 (305419896 in decimal), a big-endian host (Motorola, Sparc, PA) reads it as 0x78563412 (2018915346 in decimal). Alpha and MIPS can be either: Digital/Compaq used/uses them in little-endian mode; SGI/Cray uses them in big-endian mode. To avoid this problem in network (socket) connections use the &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; formats &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; , the &quot;network&quot; orders. These are guaranteed to be portable.</source>
          <target state="translated">Противоречивые порядки хранения приводят к полной неразберихе в цифрах. Если хост с прямым порядком байтов (Intel, VAX) хранит 0x12345678 (305419896 в десятичной системе), хост с прямым порядком байтов (Motorola, Sparc, PA) читает его как 0x78563412 (2018915346 в десятичной системе). Alpha и MIPS могут быть либо: Digital / Compaq использует / использует их в режиме с прямым порядком байтов; SGI / Cray использует их в режиме прямого байта. Чтобы избежать этой проблемы в сетевых (сокетных) соединениях используйте форматы &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; и &lt;code&gt;N&lt;/code&gt; , &amp;laquo;сетевые&amp;raquo; порядки. Они гарантированно портативны.</target>
        </trans-unit>
        <trans-unit id="7c5523655003f964e64fb217f9f8e4a760dcd771" translate="yes" xml:space="preserve">
          <source>Conflicts between parameters LIB, PREFIX and the various INSTALL* arguments are resolved so that:</source>
          <target state="translated">Конфликты между параметрами LIB,PREFIX и различными аргументами INSTALL*разрешаются таким образом:</target>
        </trans-unit>
        <trans-unit id="b96760a7005f693ba02409c79df554ec737c71ea" translate="yes" xml:space="preserve">
          <source>Conformance Test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58273d316d0bc21f48ecd5b6254bb29f9f6bf8e" translate="yes" xml:space="preserve">
          <source>Confused yet? It's time for an example program to show some of the things we've covered. This program finds prime numbers using threads.</source>
          <target state="translated">Уже запутались? Пришло время для примера программы,чтобы показать некоторые вещи,которые мы рассмотрели.Эта программа находит простые числа,используя потоки.</target>
        </trans-unit>
        <trans-unit id="41fa26c2e2b9f746a0f21c234644df7ecbf838c3" translate="yes" xml:space="preserve">
          <source>Congratulations! You've written your first useful test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96e2cb50db9a42b686132ae3630295f7ba8934b" translate="yes" xml:space="preserve">
          <source>Connecting to the server is only the first part of the process: once you have the connection, you have to use the server's language. Each server on the network has its own little command language that it expects as input. The string that we send to the server starting with &quot;GET&quot; is in HTTP syntax. In this case, we simply request each specified document. Yes, we really are making a new connection for each document, even though it's the same host. That's the way you always used to have to speak HTTP. Recent versions of web browsers may request that the remote server leave the connection open a little while, but the server doesn't have to honor such a request.</source>
          <target state="translated">Подключение к серверу-это только первая часть процесса:после подключения необходимо использовать серверный язык.Каждый сервер в сети имеет свой маленький командный язык,который он ожидает в качестве входного.Строка,которую мы посылаем на сервер,начиная с &quot;GET&quot;,находится в синтаксисе HTTP.В этом случае мы просто запрашиваем каждый указанный документ.Да,мы действительно создаем новое соединение для каждого документа,даже если это один и тот же хост.Так вы всегда говорили по HTTP.Последние версии веб-браузеров могут запросить,чтобы удаленный сервер оставил соединение открытым,но сервер не обязан выполнять такой запрос.</target>
        </trans-unit>
        <trans-unit id="5f1cf5c4ba391e46bf3a0b6200c51a59b4e7027a" translate="yes" xml:space="preserve">
          <source>Connection closed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e64457037d72f3af7e4c98e763af1778685b4a7" translate="yes" xml:space="preserve">
          <source>Consequently, if the code in the</source>
          <target state="translated">Следовательно,если код в</target>
        </trans-unit>
        <trans-unit id="2aebd1c0023adb488842327316cfbc056a8738a1" translate="yes" xml:space="preserve">
          <source>Consider a character, say &lt;code&gt;H&lt;/code&gt; . It could appear with various marks around it, such as an acute accent, or a circumflex, or various hooks, circles, arrows,</source>
          <target state="translated">Рассмотрим характер, скажем &lt;code&gt;H&lt;/code&gt; . Он мог появляться с различными отметками вокруг него, такими как острый акцент или циркумфлекс, или различные крючки, кружки, стрелки,</target>
        </trans-unit>
        <trans-unit id="f5cc68a61682f6d5c33a362ac0bfb35bdc7ab8f2" translate="yes" xml:space="preserve">
          <source>Consider a character, say &lt;code&gt;H&lt;/code&gt;. It could appear with various marks around it, such as an acute accent, or a circumflex, or various hooks, circles, arrows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87b1aebc18642da43916d9c7c0029ba1587fd12" translate="yes" xml:space="preserve">
          <source>Consider a function foo() in package pkg compiled outside a compartment but shared with it. Assume the compartment has a root package called 'Root'. If foo() contains an eval statement like eval '$foo = 1' then, normally, $pkg::foo will be set to 1. If foo() is called from the compartment (by whatever means) then instead of setting $pkg::foo, the eval will actually set $Root::pkg::foo.</source>
          <target state="translated">Рассмотрим функцию foo()в пакете pkg,скомпилированном вне отсека,но совместно используемом с ним.Предположим,что отсек имеет корневой пакет,называемый 'Root'.Если функция foo()содержит eval вроде eval '$foo=1',то обычно $pkg::foo устанавливается равным 1.Если функция foo()вызывается из отсека (любым способом),то вместо установки $pkg::foo,eval на самом деле установит $Root::pkg::foo.</target>
        </trans-unit>
        <trans-unit id="f8539b3e23b8860669ba36676f28cdfed0cfdde0" translate="yes" xml:space="preserve">
          <source>Consider always blessing objects in CLASSNAMEs that are mixed case. Namespaces with all lowercase names are considered reserved for Perl pragmas. Builtin types have all uppercase names. To prevent confusion, you may wish to avoid such package names as well. It is advised to avoid the class name &lt;code&gt;0&lt;/code&gt;, because much code erroneously uses the result of &lt;a href=&quot;#ref-EXPR&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; as a truth value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0726375d47145ef9cbf1c119c720175b5cdb39" translate="yes" xml:space="preserve">
          <source>Consider always blessing objects in CLASSNAMEs that are mixed case. Namespaces with all lowercase names are considered reserved for Perl pragmata. Builtin types have all uppercase names. To prevent confusion, you may wish to avoid such package names as well. Make sure that CLASSNAME is a true value.</source>
          <target state="translated">Рассмотрим всегда благословляющие объекты в КЛАССНАМИ,которые имеют смешанный случай.Пространства имен со всеми строчными именами считаются зарезервированными для Perl прагмат.Типы Builtin имеют все заглавные имена.Чтобы избежать путаницы,вы,возможно,захотите избежать и таких имен пакетов.Убедитесь,что CLASSNAME является истинным значением.</target>
        </trans-unit>
        <trans-unit id="54bd3e39ecc1dc0a3103a2a4bb188aab06a6068e" translate="yes" xml:space="preserve">
          <source>Consider arguments as file names; no search in directories will be performed.</source>
          <target state="translated">Рассматривайте аргументы как имена файлов,поиск в каталогах не будет осуществляться.</target>
        </trans-unit>
        <trans-unit id="d06f8c1e4b99ed7ae2765d865c655719390ed0ea" translate="yes" xml:space="preserve">
          <source>Consider arguments as file names; no search in directories will be performed. Implies &lt;b&gt;-U&lt;/b&gt; if run as the superuser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1ca7d0060d240eb3c548aa2b30a9853452fe17" translate="yes" xml:space="preserve">
          <source>Consider our first stab at an entry in our &quot;phrasebook of functions&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d13cd5ce92e946f7ab5b33dc6419aff0f850f" translate="yes" xml:space="preserve">
          <source>Consider that &quot;division by zero&quot; of Encode :)</source>
          <target state="translated">Считайте,что &quot;деление на ноль&quot; кодировки :)</target>
        </trans-unit>
        <trans-unit id="d4152be6d4688827906dc3492be5cd5b2716e739" translate="yes" xml:space="preserve">
          <source>Consider that sentences in a tourist phrasebook are of two types: ones like &quot;How do I get to the marketplace?&quot; that don't have any blanks to fill in, and ones like &quot;How much do these ___ cost?&quot;, where there's one or more blanks to fill in (and these are usually linked to a list of words that you can put in that blank: &quot;fish&quot;, &quot;potatoes&quot;, &quot;tomatoes&quot;, etc.). The ones with no blanks are no problem, but the fill-in-the-blank ones may not be really straightforward. If it's a Swahili phrasebook, for example, the authors probably didn't bother to tell you the complicated ways that the verb &quot;cost&quot; changes its inflectional prefix depending on the noun you're putting in the blank. The trader in the marketplace will still understand what you're saying if you say &quot;how much do these potatoes cost?&quot; with the wrong inflectional prefix on &quot;cost&quot;. After all,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42926455b13e587b6e93dd752aad04492e788722" translate="yes" xml:space="preserve">
          <source>Consider the Perl code below</source>
          <target state="translated">Рассмотрим код Perl ниже</target>
        </trans-unit>
        <trans-unit id="010e07e2525e9ccf7d06cb1256121da84a80d2b8" translate="yes" xml:space="preserve">
          <source>Consider the autogenerated files as skeletons only, you may invent better interfaces than what h2xs could guess.</source>
          <target state="translated">Рассматривая автогенерируемые файлы только как скелеты,вы можете изобрести лучшие интерфейсы,чем h2xs могли бы догадаться.</target>
        </trans-unit>
        <trans-unit id="27ba8df8e476e0af655e3a1c2591ff192fc5dc6c" translate="yes" xml:space="preserve">
          <source>Consider the case where &quot;Class::MOP&quot; 0.94 is installed. If a distribution specified &quot;Class::MOP::Class::Immutable&quot; as a prerequisite, it could result in Class-MOP-0.36.tar.gz being installed, overwriting any files from Class-MOP-0.94.tar.gz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8650ada785e6a05ab5925372ee6ad4e84e025768" translate="yes" xml:space="preserve">
          <source>Consider the following Perl code:</source>
          <target state="translated">Рассмотрим следующий код Perl:</target>
        </trans-unit>
        <trans-unit id="7f74e12aabb1877452a7d53cc071e21357b26c18" translate="yes" xml:space="preserve">
          <source>Consider the following pattern. The numbers underneath show in which group the captured content will be stored.</source>
          <target state="translated">Рассмотрим следующий пример.Цифры под ними показывают,в какой группе будет храниться захваченное содержимое.</target>
        </trans-unit>
        <trans-unit id="5599b31813d52e72ab7b0f81e5b0ee2cd936fffb" translate="yes" xml:space="preserve">
          <source>Consider the following scenario. You have a DBM database that you need to share with a third-party C application. The C application assumes that</source>
          <target state="translated">Рассмотрим следующий сценарий.У вас есть база данных DBM,которой вы должны поделиться со сторонним приложением C.C-приложение предполагает,что</target>
        </trans-unit>
        <trans-unit id="8fd75f493422859997cd7850cec39135120cb65b" translate="yes" xml:space="preserve">
          <source>Consider the implications.</source>
          <target state="translated">Рассмотрим последствия.</target>
        </trans-unit>
        <trans-unit id="72c370504fc887121d33e7c91d4e60dee9fc8d48" translate="yes" xml:space="preserve">
          <source>Consider the module &lt;code&gt;MyMod::Abc&lt;/code&gt; below.</source>
          <target state="translated">Рассмотрим модуль &lt;code&gt;MyMod::Abc&lt;/code&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="91193a63d32f0407e30025add9e80a60522f7554" translate="yes" xml:space="preserve">
          <source>Consider these functions: &lt;code&gt;getusers&lt;/code&gt; returns a list of users somehow, and then &lt;code&gt;main&lt;/code&gt; throws away the first user on the list and prints the rest:</source>
          <target state="translated">Рассмотрим эти функции: &lt;code&gt;getusers&lt;/code&gt; каким-то образом возвращает список пользователей, а затем &lt;code&gt;main&lt;/code&gt; выбрасывает первого пользователя в списке и печатает остальных:</target>
        </trans-unit>
        <trans-unit id="a6af64455c7f7fc0377e14c06fd26c8d88bd4457" translate="yes" xml:space="preserve">
          <source>Consider this carefully</source>
          <target state="translated">Обдумайте это внимательно</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">Рассмотрим этот пример:</target>
        </trans-unit>
        <trans-unit id="bfa3c3c6eb24f57753daa498c1da469254839e82" translate="yes" xml:space="preserve">
          <source>Consider this function:</source>
          <target state="translated">Рассмотрим эту функцию:</target>
        </trans-unit>
        <trans-unit id="8941a9b985d7af8702f49a4f16ae94cca0faaad4" translate="yes" xml:space="preserve">
          <source>Consider this line:</source>
          <target state="translated">Рассмотрим эту линию:</target>
        </trans-unit>
        <trans-unit id="e6c30ae9cfc668295698d4bf00794eb1d360161b" translate="yes" xml:space="preserve">
          <source>Consider this pattern:</source>
          <target state="translated">Рассмотрим эту закономерность:</target>
        </trans-unit>
        <trans-unit id="1933a50a57bf352434dc1e181b868210ee85c8c1" translate="yes" xml:space="preserve">
          <source>Consider this rather facetious example, where we have used an XS version of the call_Subtract example above inside a destructor:</source>
          <target state="translated">Рассмотрим этот достаточно грациозный пример,где внутри деструктора мы использовали XS-версию приведенного выше примера call_Subtract:</target>
        </trans-unit>
        <trans-unit id="6cb9a94e2bea8da922c3c19cf684a0e47677d4e9" translate="yes" xml:space="preserve">
          <source>Consider this script, which has an error you may not notice immediately.</source>
          <target state="translated">Рассмотрим этот скрипт,в котором есть ошибка,которую вы можете не заметить сразу.</target>
        </trans-unit>
        <trans-unit id="221f972e292aedaaa9907f3e013cc1a6d1499997" translate="yes" xml:space="preserve">
          <source>Consider this section as a guideline only, some other options of h2xs may better suit your needs.</source>
          <target state="translated">Рассмотрим этот раздел только как руководство,некоторые другие варианты h2xs могут лучше подойти Вам.</target>
        </trans-unit>
        <trans-unit id="0db76c387536ed2afa4a9fb7010f3349b86fc7d5" translate="yes" xml:space="preserve">
          <source>Consider two possible matches, &lt;code&gt;AB&lt;/code&gt; and &lt;code&gt;A'B'&lt;/code&gt;, &lt;code&gt;&quot;A&quot;&lt;/code&gt; and &lt;code&gt;A'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;&quot;S&quot;&lt;/code&gt;, &lt;code&gt;&quot;B&quot;&lt;/code&gt; and &lt;code&gt;B'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;&quot;T&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef89846ebcc9e55f8e16c8d6eeaf74751bcc0834" translate="yes" xml:space="preserve">
          <source>Consider two possible matches, &lt;code&gt;AB&lt;/code&gt; and &lt;code&gt;A'B'&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;B'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;T&lt;/code&gt; .</source>
          <target state="translated">Рассмотрим два возможных соответствий, &lt;code&gt;AB&lt;/code&gt; и &lt;code&gt;A'B'&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; и &lt;code&gt;A'&lt;/code&gt; являются подстроки , которые могут быть совпадающая с помощью &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; и &lt;code&gt;B'&lt;/code&gt; являются подстроки , которые могут быть совпадающая с помощью &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9492d2cabe7fd9e4932b42a71ed433789fc97e73" translate="yes" xml:space="preserve">
          <source>Consider using &quot;real&quot; multidimensional arrays as described in &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;.</source>
          <target state="translated">Рассмотрите возможность использования &amp;laquo;настоящих&amp;raquo; многомерных массивов, как описано в &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88bf0b769dc7bb2c0aaed54218c7a09d588e237d" translate="yes" xml:space="preserve">
          <source>Consider what happens during execution of the BEGIN block. At this point the BEGIN block has already been compiled, but the body of &lt;code&gt;foo()&lt;/code&gt; is still being compiled. The new value of &lt;code&gt;$^H&lt;/code&gt; will therefore be visible only while the body of &lt;code&gt;foo()&lt;/code&gt; is being compiled.</source>
          <target state="translated">Рассмотрим, что происходит во время выполнения блока BEGIN. На данный момент блок BEGIN уже скомпилирован, но тело &lt;code&gt;foo()&lt;/code&gt; все еще компилируется. Таким образом, новое значение &lt;code&gt;$^H&lt;/code&gt; будет видно только во время компиляции тела &lt;code&gt;foo()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="83e396f6992f0832c8075c73a610b8e2aaff7469" translate="yes" xml:space="preserve">
          <source>Considerations for module design and coding:</source>
          <target state="translated">Рекомендации по проектированию и кодированию модулей:</target>
        </trans-unit>
        <trans-unit id="5413348d3aaa513d685bd38624f77e878e74a24a" translate="yes" xml:space="preserve">
          <source>Consistent naming of subroutines or methods</source>
          <target state="translated">Последовательное наименование подпрограмм или методов</target>
        </trans-unit>
        <trans-unit id="2d686acf592debeada13314ea153c3c8cc7487e9" translate="yes" xml:space="preserve">
          <source>Constant Folding</source>
          <target state="translated">Постоянное складывание</target>
        </trans-unit>
        <trans-unit id="20e7a47ab29e19ba135c447b4536a0bd6e1d82dd" translate="yes" xml:space="preserve">
          <source>Constant Functions</source>
          <target state="translated">Постоянные функции</target>
        </trans-unit>
        <trans-unit id="d83ebf1e43cbbe5eb7aa831bfb0f3e3251894c92" translate="yes" xml:space="preserve">
          <source>Constant Interface</source>
          <target state="translated">Постоянный интерфейс</target>
        </trans-unit>
        <trans-unit id="b022d99d99ce264edc0fc7ee31184b6d330beaf3" translate="yes" xml:space="preserve">
          <source>Constant is not %s reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0888531b95ae3e45c24b3838f1962f9be3527072" translate="yes" xml:space="preserve">
          <source>Constant subroutine %s redefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdc700682d72a499a9f82274524612615f5858e" translate="yes" xml:space="preserve">
          <source>Constant subroutine %s undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9915e8272ad657d8ce4820500bec2014310ef" translate="yes" xml:space="preserve">
          <source>Constant subs can be created with &lt;code&gt;newCONSTSUB&lt;/code&gt; or as described in &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b0c81a6abce35ba0658d6d8b023f51626d6394" translate="yes" xml:space="preserve">
          <source>Constant subs can be created with &lt;code&gt;newCONSTSUB&lt;/code&gt; or as described in &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;newCONSTSUB&lt;/code&gt; константы можно создавать с помощью newCONSTSUB или как описано &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;в разделе &amp;laquo;Функции констант в perlsub&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb480e143560d3a30fb5db4a62f4117bffe9a90c" translate="yes" xml:space="preserve">
          <source>Constant(%s) unknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a600be81ca3abc160ef46f0c702a4166cf153fc" translate="yes" xml:space="preserve">
          <source>Constant(%s): $^H{%s} is not defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ead88eb3e7ffcab59fb996d2604d51892b8d3f" translate="yes" xml:space="preserve">
          <source>Constant(%s): Call to &amp;amp;{$^H{%s}} did not return a defined value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5634c45dcb585d4705b83e6c898a2dc4b95df58" translate="yes" xml:space="preserve">
          <source>Constant, returns the field &lt;code&gt;foo&lt;/code&gt;'s key into the class hashref. Subclasses will also get this function as a constant, not simply a method, that means it is copied into the subclass namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="9e611a824a8183e220d4a7c0d0aa3bafaf2b538a" translate="yes" xml:space="preserve">
          <source>Constants belong to the package they are defined in. To refer to a constant defined in another package, specify the full package name, as in &lt;code&gt;Some::Package::CONSTANT&lt;/code&gt; . Constants may be exported by modules, and may also be called as either class or instance methods, that is, as &lt;code&gt;Some::Package-&amp;gt;CONSTANT&lt;/code&gt; or as &lt;code&gt;$obj-&amp;gt;CONSTANT&lt;/code&gt; where &lt;code&gt;$obj&lt;/code&gt; is an instance of &lt;code&gt;Some::Package&lt;/code&gt; . Subclasses may define their own constants to override those in their base class.</source>
          <target state="translated">Константы принадлежат тому пакету, в котором они определены. Чтобы ссылаться на константу, определенную в другом пакете, укажите полное имя пакета, как в &lt;code&gt;Some::Package::CONSTANT&lt;/code&gt; . Константы могут экспортироваться модулями, а также могут вызываться как методы класса или экземпляра, то есть как &lt;code&gt;Some::Package-&amp;gt;CONSTANT&lt;/code&gt; или как &lt;code&gt;$obj-&amp;gt;CONSTANT&lt;/code&gt; где &lt;code&gt;$obj&lt;/code&gt; является экземпляром &lt;code&gt;Some::Package&lt;/code&gt; . Подклассы могут определять свои собственные константы, чтобы переопределить константы своего базового класса.</target>
        </trans-unit>
        <trans-unit id="1ef7f785aecda130542da189c67c127de3be6217" translate="yes" xml:space="preserve">
          <source>Constants belong to the package they are defined in. To refer to a constant defined in another package, specify the full package name, as in &lt;code&gt;Some::Package::CONSTANT&lt;/code&gt;. Constants may be exported by modules, and may also be called as either class or instance methods, that is, as &lt;code&gt;Some::Package-&amp;gt;CONSTANT&lt;/code&gt; or as &lt;code&gt;$obj-&amp;gt;CONSTANT&lt;/code&gt; where &lt;code&gt;$obj&lt;/code&gt; is an instance of &lt;code&gt;Some::Package&lt;/code&gt;. Subclasses may define their own constants to override those in their base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21cfbc2db87f9182c549bff7c8f35745bf20234" translate="yes" xml:space="preserve">
          <source>Constants defined using this module cannot be interpolated into strings like variables. However, concatenation works just fine:</source>
          <target state="translated">Константы,определенные с помощью этого модуля,не могут быть интерполированы в строки,подобные переменным.Однако,конкатенация работает просто отлично:</target>
        </trans-unit>
        <trans-unit id="aa915cf116d077e9e13787db53e2d840e88601d0" translate="yes" xml:space="preserve">
          <source>Constants describing partition types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d42ecf86f91ad96dc467934b921a072fb4829bf" translate="yes" xml:space="preserve">
          <source>Constants for GetStdHandle and SetStdHandle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece936e7325f2407cd17ba720f075223bee4d90" translate="yes" xml:space="preserve">
          <source>Constants for Locale codes</source>
          <target state="translated">Константы для местных кодов</target>
        </trans-unit>
        <trans-unit id="fdda4d48863328360387da0dd1b2f5c1a042b3c9" translate="yes" xml:space="preserve">
          <source>Constants for the &lt;code&gt;$uFlags&lt;/code&gt; argument of &lt;code&gt;DefineDosDevice&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4043dad2a054f34eb0858204273e3f193fc49ba" translate="yes" xml:space="preserve">
          <source>Constants for use in &lt;code&gt;$uFlags&lt;/code&gt; arguments to &lt;code&gt;MoveFileEx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4f891a762c78e8f2d0c6ad9df2bc2f09ed2f2e" translate="yes" xml:space="preserve">
          <source>Constants from lexical variables potentially modified elsewhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81dfcd7b9da84d74e29eab61d40b4c674bb41e9" translate="yes" xml:space="preserve">
          <source>Constants from lexical variables potentially modified elsewhere are no longer permitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90018db3a64f1b35ef89d41c0084cc18166e6bd9" translate="yes" xml:space="preserve">
          <source>Constants giving the special &lt;code&gt;AF_INET6&lt;/code&gt; addresses for wildcard and local loopback.</source>
          <target state="translated">Константы, &lt;code&gt;AF_INET6&lt;/code&gt; специальные адреса AF_INET6 для подстановочных знаков и локальной петли.</target>
        </trans-unit>
        <trans-unit id="3f844ade6411f17a07d09e25894b5b9acfe42b33" translate="yes" xml:space="preserve">
          <source>Constants giving the special &lt;code&gt;AF_INET&lt;/code&gt; addresses for wildcard, broadcast, local loopback, and invalid addresses.</source>
          <target state="translated">Константы, &lt;code&gt;AF_INET&lt;/code&gt; специальные адреса AF_INET для групповых, широковещательных, локальных петлевых и недопустимых адресов.</target>
        </trans-unit>
        <trans-unit id="7f1778f60074f1115e51de3d87a3332a8d7fc830" translate="yes" xml:space="preserve">
          <source>Constants may be lists of more (or less) than one value. A constant with no values evaluates to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context. Note that constants with more than one value do</source>
          <target state="translated">Константы могут быть списками из более (или менее) одного значения. Константа без значений оценивается как &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в скалярном контексте. Обратите внимание, что константы с более чем одним значением делают</target>
        </trans-unit>
        <trans-unit id="ef4d2ec3b710091bb10d21130c0be09ce42219e0" translate="yes" xml:space="preserve">
          <source>Constants may be lists of more (or less) than one value. A constant with no values evaluates to &lt;code&gt;undef&lt;/code&gt; in scalar context. Note that constants with more than one value do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c83bb124b6e452aac308435bc213c308476806" translate="yes" xml:space="preserve">
          <source>Constants returned by &lt;code&gt;GetDriveType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44e6d94028c8513026c57c0b7cadff35dde3a65" translate="yes" xml:space="preserve">
          <source>Constants specifying generic access permissions that are not specific to one type of object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f633c30ca6ad47492853b293d24f861b62cec23" translate="yes" xml:space="preserve">
          <source>Constants to be used with &lt;code&gt;SetErrorMode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621b5a362582546e5fadc9871dca00569999fdad" translate="yes" xml:space="preserve">
          <source>Construct a Perl subroutine, also performing some surrounding jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355a3d53a7e14f7a729e8f91686b85505d33df33" translate="yes" xml:space="preserve">
          <source>Construct a complete filespec.</source>
          <target state="translated">Сконструировать полный файлpec.</target>
        </trans-unit>
        <trans-unit id="af6070027d441a6c776ba726f41b255627016312" translate="yes" xml:space="preserve">
          <source>Construct a constant subroutine, also performing some surrounding jobs. A scalar constant-valued subroutine is eligible for inlining at compile-time, and in Perl code can be created by &lt;code&gt;sub FOO () { 123 }&lt;/code&gt;. Other kinds of constant subroutine have other treatment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48ef03671bbccdc92bbafe2373d3837e7ff63c2" translate="yes" xml:space="preserve">
          <source>Construct an XS subroutine, also performing some surrounding jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec9f3529c9af4370344830a20d26a1ac2ddabe7" translate="yes" xml:space="preserve">
          <source>Construct and return cache object.</source>
          <target state="translated">Построить и вернуть кэш-объект.</target>
        </trans-unit>
        <trans-unit id="da33e1b7e0c4eae1911ee4a15280f0990e1a6115" translate="yes" xml:space="preserve">
          <source>Construction</source>
          <target state="translated">Construction</target>
        </trans-unit>
        <trans-unit id="0c9d593aa97f6e3f26bb7e4cf664176f5ffd4019" translate="yes" xml:space="preserve">
          <source>Construction Methods</source>
          <target state="translated">Строительные методы</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="ef269264e27df02b9462bb6740ca823b7e335569" translate="yes" xml:space="preserve">
          <source>Constructor Options</source>
          <target state="translated">Конструктор Опции</target>
        </trans-unit>
        <trans-unit id="94b976a5ab3f62f6c26557a2c4dbf4bbae664372" translate="yes" xml:space="preserve">
          <source>Constructor and Tailoring</source>
          <target state="translated">Конструктор и заказчик</target>
        </trans-unit>
        <trans-unit id="40c2e52aca6cb904e8fd931282b5e338572dab1e" translate="yes" xml:space="preserve">
          <source>Constructor arguments should be passed in &lt;code&gt;Key =&amp;gt; 'Value'&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cdb266c49cfa65e08d705d5557c3f3e981f374" translate="yes" xml:space="preserve">
          <source>Constructor methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="2b71b9b81247be950268dd6ba04bdcfd449c12d9" translate="yes" xml:space="preserve">
          <source>Constructs &amp;amp; returns a new &lt;a href=&quot;TAP::Parser::Iterator::Process&quot;&gt;TAP::Parser::Iterator::Process&lt;/a&gt; for the source. Assumes &lt;code&gt;$source-&amp;gt;raw&lt;/code&gt; contains a reference to the perl script. &lt;code&gt;croak&lt;/code&gt;s if the file could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dc7fa5fd47c9138ae444b7aed96ae65bb68d63" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Module::Metadata&lt;/code&gt; object given a module or package name. Returns undef if the module cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b359b6f69593ce623d611bf25dbeb6f9faf846" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Module::Metadata&lt;/code&gt; object given the path to a file. Returns undef if the filename does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d746fdc33e3789e1ca29174d30fb76d7df4e6835" translate="yes" xml:space="preserve">
          <source>Constructs a state op (COP). The state op is normally a &lt;code&gt;nextstate&lt;/code&gt; op, but will be a &lt;code&gt;dbstate&lt;/code&gt; op if debugging is enabled for currently-compiled code. The state op is populated from &lt;code&gt;PL_curcop&lt;/code&gt; (or &lt;code&gt;PL_compiling&lt;/code&gt; ). If</source>
          <target state="translated">Создает операцию состояния (COP). Операция состояния обычно является &lt;code&gt;nextstate&lt;/code&gt; , но будет &lt;code&gt;dbstate&lt;/code&gt; если для текущего скомпилированного кода включена отладка. Состояние op заполняется из &lt;code&gt;PL_curcop&lt;/code&gt; (или &lt;code&gt;PL_compiling&lt;/code&gt; ). Если</target>
        </trans-unit>
        <trans-unit id="8426fab2dac4965c145d2a1bad2d85698dd51043" translate="yes" xml:space="preserve">
          <source>Constructs a state op (COP). The state op is normally a &lt;code&gt;nextstate&lt;/code&gt; op, but will be a &lt;code&gt;dbstate&lt;/code&gt; op if debugging is enabled for currently-compiled code. The state op is populated from &lt;code&gt;PL_curcop&lt;/code&gt; (or &lt;code&gt;PL_compiling&lt;/code&gt;). If &lt;code&gt;label&lt;/code&gt; is non-null, it supplies the name of a label to attach to the state op; this function takes ownership of the memory pointed at by &lt;code&gt;label&lt;/code&gt;, and will free it. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the state op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252503586ad552246e785267ad1b402b11d9c378" translate="yes" xml:space="preserve">
          <source>Constructs and returns a &lt;code&gt;range&lt;/code&gt; op, with subordinate &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;flop&lt;/code&gt; ops.</source>
          <target state="translated">Создает и возвращает операцию &lt;code&gt;range&lt;/code&gt; с подчиненными операциями &lt;code&gt;flip&lt;/code&gt; и &lt;code&gt;flop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e46c0788a3baacd8699fc8b0ef26a2f36cb8b10a" translate="yes" xml:space="preserve">
          <source>Constructs and returns a &lt;code&gt;range&lt;/code&gt; op, with subordinate &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;flop&lt;/code&gt; ops. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the &lt;code&gt;flip&lt;/code&gt; op and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; for both the &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt; ops, except that the bit with value 1 is automatically set. &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; supply the expressions controlling the endpoints of the range; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7931ff4d1b3865a020bb44b64b70244e6b1d8e26" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name.</source>
          <target state="translated">Строит и возвращает новое имя колодки.</target>
        </trans-unit>
        <trans-unit id="a20e05d8d20ed1a0a46b13c3bf3e2f73033ad864" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name. &lt;code&gt;s&lt;/code&gt; must be a UTF-8 string. Do not use this for pad names that point to outer lexicals. See &lt;code&gt;&lt;a href=&quot;#newPADNAMEouter&quot;&gt;&quot;newPADNAMEouter&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a231f7a41c3ae5c30b12441dec62718f40f242" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name. Only use this function for names that refer to outer lexicals. (See also &lt;a href=&quot;#newPADNAMEpvn&quot;&gt;&quot;newPADNAMEpvn&quot;&lt;/a&gt;.) &lt;code&gt;outer&lt;/code&gt; is the outer pad name that this one mirrors. The returned pad name has the &lt;code&gt;PADNAMEt_OUTER&lt;/code&gt; flag already set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957cf4dcc64056248a5fc94c4f5122d5b4253099" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name. Only use this function for names that refer to outer lexicals. (See also &lt;a href=&quot;#newPADNAMEpvn&quot;&gt;newPADNAMEpvn&lt;/a&gt;.)</source>
          <target state="translated">Создает и возвращает новое имя пэда. Используйте эту функцию только для имен, относящихся к внешним лексическим словам. (См. Также &lt;a href=&quot;#newPADNAMEpvn&quot;&gt;newPADNAMEpvn&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="2e65b217a955ea30db7dba5262fee4bb7d3f1ee4" translate="yes" xml:space="preserve">
          <source>Constructs and returns an op to access &lt;code&gt;$_&lt;/code&gt; , either as a lexical variable (if declared as &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; ) in the current scope, or the global &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Создает и возвращает операцию для доступа к &lt;code&gt;$_&lt;/code&gt; либо как лексическую переменную (если она объявлена ​​как &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; ) в текущей области видимости, либо как глобальную переменную &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae689682f7c0e04b90f758bf2d179623e2a04a1a" translate="yes" xml:space="preserve">
          <source>Constructs and returns an op to access &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4f89b89092a94b632bbcc30495e0f779fb1b98" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a conditional-expression (&lt;code&gt;cond_expr&lt;/code&gt; ) op.</source>
          <target state="translated">Создает, проверяет и возвращает условное выражение ( &lt;code&gt;cond_expr&lt;/code&gt; ) op.</target>
        </trans-unit>
        <trans-unit id="8d7f92756d7585975f06caf0ac07796b4c0804e8" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a conditional-expression (&lt;code&gt;cond_expr&lt;/code&gt;) op. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 is automatically set. &lt;code&gt;first&lt;/code&gt; supplies the expression selecting between the two branches, and &lt;code&gt;trueop&lt;/code&gt; and &lt;code&gt;falseop&lt;/code&gt; supply the branches; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e166f7981a3b6de1c8fa20addbc3d348e0378" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a logical (flow control) op.</source>
          <target state="translated">Строит,проверяет и возвращает логическую (управление потоком)операцию.</target>
        </trans-unit>
        <trans-unit id="e943e42031a0c4c99a8a4b816cbcdbebc24bb18d" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a logical (flow control) op. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 is automatically set. &lt;code&gt;first&lt;/code&gt; supplies the expression controlling the flow, and &lt;code&gt;other&lt;/code&gt; supplies the side (alternate) chain of ops; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0264af3189ddcf2b7f625626d2ac18862a78a27" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a loop-exiting op (such as &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Создает, проверяет и возвращает операцию выхода из цикла (например, &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c01e4a75b538d745223a82e950b9a49ee8bd9f2c" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a loop-exiting op (such as &lt;code&gt;goto&lt;/code&gt; or &lt;code&gt;last&lt;/code&gt;). &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;label&lt;/code&gt; supplies the parameter determining the target of the op; it is consumed by this function and becomes part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e773cac5de3784659768f91ee0dd8d9488d2fc" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a new &lt;code&gt;stub&lt;/code&gt; op, which represents an empty list expression.</source>
          <target state="translated">Создает, проверяет и возвращает новую &lt;code&gt;stub&lt;/code&gt; , которая представляет собой пустое выражение списка.</target>
        </trans-unit>
        <trans-unit id="c12d66e7978fb577b34088dcb70b91bfaa6d01da" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an &lt;code&gt;lslice&lt;/code&gt; (list slice) op.</source>
          <target state="translated">Создает, проверяет и возвращает &lt;code&gt;lslice&lt;/code&gt; (фрагмент списка) op.</target>
        </trans-unit>
        <trans-unit id="395829441207b9562343286c79a860eb298847b4" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an &lt;code&gt;lslice&lt;/code&gt; (list slice) op. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 or 2 is automatically set as required. &lt;code&gt;listval&lt;/code&gt; and &lt;code&gt;subscript&lt;/code&gt; supply the parameters of the slice; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba48f5f9a71999341342f24283dfacd3a8b711b1" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an assignment op.</source>
          <target state="translated">Строит,проверяет и возвращает задание.</target>
        </trans-unit>
        <trans-unit id="f0afa6802f458ac80fdedccb16a69e851765d5e6" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an assignment op. &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; supply the parameters of the assignment; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f565e2e42ef02d170588ec129f3ce0451ec355" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any base type (any type that has no extra fields).</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого базового типа (любого типа,который не имеет дополнительных полей).</target>
        </trans-unit>
        <trans-unit id="08300813a524ae236831b5817f8255511dd4aa86" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any base type (any type that has no extra fields). &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c70184d1741ef212b465d435e97985417a8b0c" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any binary type.</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого типа двоичной системы.</target>
        </trans-unit>
        <trans-unit id="7868a5fcc0c6cd677c3273a23da0e26392ccfa88" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any binary type. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 or 2 is automatically set as required. &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; supply up to two ops to be the direct children of the binary op; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa434ea30a23789450d348f36bdecb9028e1240" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any list type.</source>
          <target state="translated">Строит,проверяет и возвращает опцию любого типа списка.</target>
        </trans-unit>
        <trans-unit id="9e4f396d9aec4576569dc19fe92d9454b6158211" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any list type. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically if required. &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; supply up to two ops to be direct children of the list op; they are consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e39d7609ebd71139a1fdb8c22c888dbc1b3832" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any pattern matching type.</source>
          <target state="translated">Строит,проверяет и возвращает опцию любого типа совмещения шаблонов.</target>
        </trans-unit>
        <trans-unit id="ccf69d9f4b2427a58254b1dc047369650066cd4c" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any pattern matching type. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5458dc98c9452c937824a796bdb326f5e0961a85" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves a reference to a pad element.</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого типа,которая включает в себя ссылку на элемент подушечки.</target>
        </trans-unit>
        <trans-unit id="43e954720e3291569bbb261f1571ecceba739fa2" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves a reference to a pad element. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;. A pad slot is automatically allocated, and is populated with &lt;code&gt;sv&lt;/code&gt;; this function takes ownership of one reference to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ba5d8fe10410945734740719237761dd251d13" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded C-level pointer (PV).</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого типа,которая включает в себя встроенный указатель на C-уровне (PV).</target>
        </trans-unit>
        <trans-unit id="2118ce473e48343aee2d542f585bd5aebe47a744" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded C-level pointer (PV). &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;. &lt;code&gt;pv&lt;/code&gt; supplies the C-level pointer. Depending on the op type, the memory referenced by &lt;code&gt;pv&lt;/code&gt; may be freed when the op is destroyed. If the op is of a freeing type, &lt;code&gt;pv&lt;/code&gt; must have been allocated using &lt;code&gt;PerlMemShared_malloc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dc9643deaf81478aaf21202427a04fd76571a8" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded SV.</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого типа,которая включает в себя встроенный SV.</target>
        </trans-unit>
        <trans-unit id="e68327dd670d12818a0e2e2fa0e040ec98d02330" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded SV. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;. &lt;code&gt;sv&lt;/code&gt; gives the SV to embed in the op; this function takes ownership of one reference to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11846120c71e3d2b822e351f27e91e0b600f0d70" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded reference to a GV.</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого типа,которая включает в себя встроенную ссылку на GV.</target>
        </trans-unit>
        <trans-unit id="673add21e294ce12887acf0c7f51f18eadeaed4a" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded reference to a GV. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;. &lt;code&gt;gv&lt;/code&gt; identifies the GV that the op should reference; calling this function does not transfer ownership of any reference to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d063b1956e56be8e0dab06b4dad3b2a72f8365" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any unary type.</source>
          <target state="translated">Строит,проверяет и возвращает операцию любого унарного типа.</target>
        </trans-unit>
        <trans-unit id="d7aa233edb3302ad2f8fbd75ee51baf9384e5409" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any unary type. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically if required, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 is automatically set. &lt;code&gt;first&lt;/code&gt; supplies an optional op to be the direct child of the unary op; it is consumed by this function and become part of the constructed op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6ef2fa148c74ce9131470cb7120ad15eeee6a2" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a constant method name.</source>
          <target state="translated">Строит,проверяет и возвращает тип метода с постоянным именем.</target>
        </trans-unit>
        <trans-unit id="f4f715f8028f2ee97d33f1514b330f7f389b6904" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a constant method name. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;. &lt;code&gt;const_meth&lt;/code&gt; supplies a constant method name; it must be a shared COW string. Supported optypes: &lt;code&gt;OP_METHOD_NAMED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dad86210e9b0dd94c41f8743c265b479cf1818" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a method name evaluated at runtime.</source>
          <target state="translated">Строит,проверяет и возвращает тип метода с именем метода,вычисляемым во время выполнения.</target>
        </trans-unit>
        <trans-unit id="06f02e43380ba7cd38f00caa8eda5a0cd2074915" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a method name evaluated at runtime. &lt;code&gt;type&lt;/code&gt; is the opcode. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt;, except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt;, except that the bit with value 1 is automatically set. &lt;code&gt;dynamic_meth&lt;/code&gt; supplies an op which evaluates method name; it is consumed by this function and become part of the constructed op tree. Supported optypes: &lt;code&gt;OP_METHOD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac910e3116c4e1a0b4ad7257fc6a8a1ad7ea627" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;foreach&lt;/code&gt; loop (iteration through a list of values). This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">Создает, проверяет и возвращает дерево операций, выражающее цикл &lt;code&gt;foreach&lt;/code&gt; (итерация по списку значений). Это тяжелая петля, структура которой позволяет выходить из петли &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="02a9a03eeb4c7c60c95dbeb72b0b27f5aefe3151" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;foreach&lt;/code&gt; loop (iteration through a list of values). This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;last&lt;/code&gt; and suchlike.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a13424c4ba2a08e5a59cecb68e29d3affe0ee4" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;given&lt;/code&gt; block.</source>
          <target state="translated">Создает, проверяет и возвращает дерево операций, выражающее &lt;code&gt;given&lt;/code&gt; блок.</target>
        </trans-unit>
        <trans-unit id="5d6c3455283830192033a7b5271a5d145aa42790" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;given&lt;/code&gt; block. &lt;code&gt;cond&lt;/code&gt; supplies the expression to whose value &lt;code&gt;$_&lt;/code&gt; will be locally aliased, and &lt;code&gt;block&lt;/code&gt; supplies the body of the &lt;code&gt;given&lt;/code&gt; construct; they are consumed by this function and become part of the constructed op tree. &lt;code&gt;defsv_off&lt;/code&gt; must be zero (it used to identity the pad slot of lexical $_).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa87d1a87fb2d4ab5d631e62f196faf139c56915" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;when&lt;/code&gt; block.</source>
          <target state="translated">Создает, проверяет и возвращает дерево операций, выражающее блок &lt;code&gt;when&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd249383a77b78396a0d1d7ae7886570bb179e5" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;when&lt;/code&gt; block. &lt;code&gt;cond&lt;/code&gt; supplies the test expression, and &lt;code&gt;block&lt;/code&gt; supplies the block that will be executed if the test evaluates to true; they are consumed by this function and become part of the constructed op tree. &lt;code&gt;cond&lt;/code&gt; will be interpreted DWIMically, often as a comparison against &lt;code&gt;$_&lt;/code&gt;, and may be null to generate a &lt;code&gt;default&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e325766c242f95f44aebbca8d081041fa05bdb" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;while&lt;/code&gt; loop. This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">Конструкты, чеки, и возвращает публицистическое дерево , выражающее &lt;code&gt;while&lt;/code&gt; цикл. Это тяжелая петля, структура которой позволяет выходить из петли &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="05e4ac8f71be06feb12f71523e347e0bcf83d0af" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;while&lt;/code&gt; loop. This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;last&lt;/code&gt; and suchlike.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90b8188bc17094c3efa9918fac996ca1396dace" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a loop. This is only a loop in the control flow through the op tree; it does not have the heavyweight loop structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">Создает, проверяет и возвращает дерево операций, выражающее цикл. Это только цикл в потоке управления через дерево операций; у него нет тяжелой петлевой конструкции, позволяющей выйти из петли &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; и т.п.</target>
        </trans-unit>
        <trans-unit id="e43bc240808e944d826764a6b57215fa4ebd500b" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a loop. This is only a loop in the control flow through the op tree; it does not have the heavyweight loop structure that allows exiting the loop by &lt;code&gt;last&lt;/code&gt; and suchlike. &lt;code&gt;flags&lt;/code&gt; gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the top-level op, except that some bits will be set automatically as required. &lt;code&gt;expr&lt;/code&gt; supplies the expression controlling loop iteration, and &lt;code&gt;block&lt;/code&gt; supplies the body of the loop; they are consumed by this function and become part of the constructed op tree. &lt;code&gt;debuggable&lt;/code&gt; is currently unused and should always be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8c9bb3c9bf3bfa59be4b5278462422ffe70ce9" translate="yes" xml:space="preserve">
          <source>Consult &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for more details.</source>
          <target state="translated">Проконсультируйтесь &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; , &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; и &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="4c68fb29a7e2fbcaf46dc09a0ccdb31da36a628a" translate="yes" xml:space="preserve">
          <source>Consult the match table in &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;&quot;Smartmatch Operator&quot; in perlop&lt;/a&gt; for details of when overloading is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec12aed4c398eee706a2f38aa675e4e5cfbdd63" translate="yes" xml:space="preserve">
          <source>Consult the match table in &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Smartmatch Operator in perlop&lt;/a&gt; for details of when overloading is invoked.</source>
          <target state="translated">Обратитесь к таблице соответствия в &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Операторе Smartmatch в perlop,&lt;/a&gt; чтобы узнать, когда вызывается перегрузка.</target>
        </trans-unit>
        <trans-unit id="a1fd931d92d878f5d6e61e52c546fa06ca2d480c" translate="yes" xml:space="preserve">
          <source>Consume text in the lexer buffer, from &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; up to &lt;code&gt;ptr&lt;/code&gt;. This advances &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; to match &lt;code&gt;ptr&lt;/code&gt;, performing the correct bookkeeping whenever a newline character is passed. This is the normal way to consume lexed text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca43cc0a723d7c90161c4e5b539040ca4d3086b1" translate="yes" xml:space="preserve">
          <source>Consume text in the lexer buffer, from &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; up to</source>
          <target state="translated">Использовать текст в буфере &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;лексера&lt;/a&gt; , от PL_parser-&amp;gt; bufptr до</target>
        </trans-unit>
        <trans-unit id="b4ad122fe1d7a0ae29f00402fc9b4022ca12c144" translate="yes" xml:space="preserve">
          <source>Consumers &lt;b&gt;may&lt;/b&gt; use this field to determine how to index the distribution for CPAN or other repositories in addition to or in replacement of heuristics based on version number or file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9f3385a7dff3695905eb32d60a85e4f8ba47b1" translate="yes" xml:space="preserve">
          <source>Consumers &lt;b&gt;must not&lt;/b&gt; include optional features as prerequisites without explicit instruction from users (whether via interactive prompting, a function parameter or a configuration value, etc. ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4fcd544311f4c76588de2edf6e173261c9ba1d" translate="yes" xml:space="preserve">
          <source>Consumers expecting a List &lt;b&gt;must&lt;/b&gt; consider a String as equivalent to a List of length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43209a4be7cddb7bdbb52d54ef186a14e666722b" translate="yes" xml:space="preserve">
          <source>Consumers of metadata &lt;b&gt;should&lt;/b&gt; test whether prerequisites would result in installed module files being &quot;downgraded&quot; to an older version and &lt;b&gt;may&lt;/b&gt; warn users or ignore the prerequisite that would cause such a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec0fc80e3a2fdea5d8d4635e5e800274735ed50" translate="yes" xml:space="preserve">
          <source>Consumers of metadata may ignore any or all custom keys. All other keys not described herein are invalid and should be ignored by consumers. Producers must not generate or output invalid keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c712abfda3733cb013c9544bce09f06a6877d81" translate="yes" xml:space="preserve">
          <source>Consumers that install the distribution must ensure that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712ade694782b4208a7818ba8fcb3c706be82adc" translate="yes" xml:space="preserve">
          <source>Consuming all (or nearly all) available memory.</source>
          <target state="translated">Потребление всей (или почти всей)доступной памяти.</target>
        </trans-unit>
        <trans-unit id="75e095c92e8dc2373fb8acb2c9c8c4bbc0dd91e3" translate="yes" xml:space="preserve">
          <source>Contact a system administrator (preferably your own) and report the exact error message you get, and ask them to read this same documentation you are now reading. They should be able to check whether there is something wrong with the locale configuration of the system. The &lt;a href=&quot;#Finding-locales&quot;&gt;&quot;Finding locales&quot;&lt;/a&gt; section is unfortunately a bit vague about the exact commands and places because these things are not that standardized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda96c5452873306650630c6976f525d6dc4916b" translate="yes" xml:space="preserve">
          <source>Contact a system administrator (preferably your own) and report the exact error message you get, and ask them to read this same documentation you are now reading. They should be able to check whether there is something wrong with the locale configuration of the system. The &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt; section is unfortunately a bit vague about the exact commands and places because these things are not that standardized.</source>
          <target state="translated">Свяжитесь с системным администратором (желательно своим собственным) и сообщите точное сообщение об ошибке, которое вы получаете, и попросите его прочитать ту же документацию, которую вы сейчас читаете. Они должны быть в состоянии проверить, что-то не так с конфигурацией локали системы. В разделе &amp;laquo; &lt;a href=&quot;#Finding-locales&quot;&gt;Поиск локалей&lt;/a&gt; &amp;raquo;, к сожалению, нет точных сведений о командах и местах, потому что эти вещи не так стандартизированы.</target>
        </trans-unit>
        <trans-unit id="5a0be3e3d687fc1f8934755e52704c0c7e6471d4" translate="yes" xml:space="preserve">
          <source>Contact the author on &lt;code&gt;rainer@mathematik.uni-bielefeld.de&lt;/code&gt; .</source>
          <target state="translated">Свяжитесь с автором по &lt;code&gt;rainer@mathematik.uni-bielefeld.de&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c364095526b17c16b7466605f96d5be4fe90017e" translate="yes" xml:space="preserve">
          <source>Contact the author on &lt;code&gt;rainer@mathematik.uni-bielefeld.de&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a45517b93a1913e898fe4ace7dad3444d8069a" translate="yes" xml:space="preserve">
          <source>Contained in the file specified by the first filename on the command line. (Note that systems supporting the &lt;code&gt;#!&lt;/code&gt; notation invoke interpreters this way. See &lt;a href=&quot;#Location-of-Perl&quot;&gt;&quot;Location of Perl&quot;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62bfc367abe11a79b1d86ac7e31441eab7366c1" translate="yes" xml:space="preserve">
          <source>Contained in the file specified by the first filename on the command line. (Note that systems supporting the &lt;code&gt;#!&lt;/code&gt; notation invoke interpreters this way. See &lt;a href=&quot;#Location-of-Perl&quot;&gt;Location of Perl&lt;/a&gt;.)</source>
          <target state="translated">Содержится в файле, указанном первым именем файла в командной строке. (Обратите внимание, что системы, поддерживающие нотацию &lt;code&gt;#!&lt;/code&gt; , Вызывают интерпретаторы таким образом. См. &lt;a href=&quot;#Location-of-Perl&quot;&gt;Расположение Perl&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="99db2196146f29190c8ba989fc64f822ae8e38d1" translate="yes" xml:space="preserve">
          <source>Contains a lot of useful information, especially gory details of ISO vs. vendor mappings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d2dc6d4567d98dfae81f4e429a6a8bb4e9a0c7" translate="yes" xml:space="preserve">
          <source>Contains flags controlling perl's behaviour on exit():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537701da726a37f50cd1190981e9266174458d7a" translate="yes" xml:space="preserve">
          <source>Contains routines that emulate low-level math functions in BigInt, e.g. optional routines the low-level math package does not provide on its own.</source>
          <target state="translated">Содержит подпрограммы,эмулирующие низкоуровневые математические функции в BigInt,например,опциональные подпрограммы,которые низкоуровневый математический пакет сам по себе не предоставляет.</target>
        </trans-unit>
        <trans-unit id="a8140068c6564fc99ecc142e17f391b1e09f6ccb" translate="yes" xml:space="preserve">
          <source>Contains the arguments of current subroutine, or the &lt;code&gt;@ARGV&lt;/code&gt; array if in the toplevel context.</source>
          <target state="translated">Содержит аргументы текущей подпрограммы или массив &lt;code&gt;@ARGV&lt;/code&gt; , если он находится в контексте верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="9f2a5da0585f47140af9323564aa8fb7d1d06cc4" translate="yes" xml:space="preserve">
          <source>Contains the name of the current file when reading from &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">Содержит имя текущего файла при чтении из &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f526bb75dbad569c0a45ab263184903b5cf89a" translate="yes" xml:space="preserve">
          <source>Contains the name of the current file when reading from &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178dce23f2a4c5ea5896dcce1de535426b55d99" translate="yes" xml:space="preserve">
          <source>Contains the name of the header to be included to get va_dcl definition. Typically one of</source>
          <target state="translated">Содержит имя заголовка,который будет включен для получения определения va_dcl.Обычно один из</target>
        </trans-unit>
        <trans-unit id="d1e0c34957a016a1b3c12f032cd551c8908cd506" translate="yes" xml:space="preserve">
          <source>Contains the name of the program being executed.</source>
          <target state="translated">Содержит название исполняемой программы.</target>
        </trans-unit>
        <trans-unit id="a2d63762428e57520df2f4f29a1e038ab7994558" translate="yes" xml:space="preserve">
          <source>Contains the prefix to use for tagging variable names in the output. The default is &quot;VAR&quot;.</source>
          <target state="translated">Содержит префикс,используемый для тегирования имен переменных в выводе.По умолчанию используется &quot;VAR&quot;.</target>
        </trans-unit>
        <trans-unit id="0e2da210cc9bb0a18aac5aab8614cb8e5b7b6dff" translate="yes" xml:space="preserve">
          <source>Contains the subpattern from the corresponding set of capturing parentheses from the last successful pattern match, not counting patterns matched in nested blocks that have been exited already.</source>
          <target state="translated">Содержит подмакетку из соответствующего набора захватывающих скобок из последнего успешного совмещения шаблонов,не считая шаблонов,совмещенных во вложенных блоках,которые уже были выведены.</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="f443ee7926598f5cbd0be8ebdba62f74758c2b93" translate="yes" xml:space="preserve">
          <source>Context objects make it easy to wrap other tools that also use context. Once you grab a context, any tool you call before releasing your context will inherit it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4fead0d096994a7b9c2359f6b5eca7fb19280c" translate="yes" xml:space="preserve">
          <source>Contexts are popped using &lt;code&gt;cx_popsub()&lt;/code&gt; etc. and &lt;code&gt;cx_popblock()&lt;/code&gt;. Note however, that unlike &lt;code&gt;cx_pushblock&lt;/code&gt;, neither of these functions actually decrement the current context stack index; this is done separately using &lt;code&gt;CX_POP()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a4ac56da853a9305cfda31ecf842885e9d6e74" translate="yes" xml:space="preserve">
          <source>Contiguous-best-try.</source>
          <target state="translated">Contiguous-best-try.</target>
        </trans-unit>
        <trans-unit id="f6fab447918abf1777396cb39329e0055bc066fb" translate="yes" xml:space="preserve">
          <source>Contiguous.</source>
          <target state="translated">Contiguous.</target>
        </trans-unit>
        <trans-unit id="9cb23f093a42f57fb6e20b27af11bf8e322e39c5" translate="yes" xml:space="preserve">
          <source>Continent | |--&amp;gt;Country | |--&amp;gt;[state/province] | |--&amp;gt;ftp | |--&amp;gt;[http]</source>
          <target state="translated">Континент | | -&amp;gt; Страна | | -&amp;gt; [штат / провинция] | | -&amp;gt; ftp | | -&amp;gt; [http]</target>
        </trans-unit>
        <trans-unit id="5eba0b3f0a46323a9b3b38a065a8cf6fcd45e0eb" translate="yes" xml:space="preserve">
          <source>Continue until the return from the current subroutine. Dump the return value if the &lt;code&gt;PrintRet&lt;/code&gt; option is set (default).</source>
          <target state="translated">Продолжайте до возврата из текущей подпрограммы. &lt;code&gt;PrintRet&lt;/code&gt; возвращаемое значение, если установлена опция PrintRet (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="8cfbf2d4c02ef7cbf2f81d0785ff1541fec7f195" translate="yes" xml:space="preserve">
          <source>Continue, optionally inserting a one-time-only breakpoint at the specified line or subroutine.</source>
          <target state="translated">Продолжайте,по желанию,вставляя однократную точку останова в указанную линию или подпрограмму.</target>
        </trans-unit>
        <trans-unit id="763f8ab2c102d571523302ea74b56499251a7bfc" translate="yes" xml:space="preserve">
          <source>Continuing the previous example, let's say that your program has completed its processing, and the results sit in an array called &lt;code&gt;@processed&lt;/code&gt;. You want to print these lines to a file called &lt;code&gt;numbered.txt&lt;/code&gt; with a neatly formatted column of line-numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7a39f29f66ddaa64957e3237a6a6d6ce7714c5" translate="yes" xml:space="preserve">
          <source>Contractions beginning with the specified characters are suppressed, even if those contractions are defined in &lt;code&gt;table&lt;/code&gt; .</source>
          <target state="translated">Сокращения, начинающиеся с указанных символов, подавляются, даже если эти сокращения определены в &lt;code&gt;table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63d7042181f2374d9c826c42bd3b5c903244afe8" translate="yes" xml:space="preserve">
          <source>Contractions beginning with the specified characters are suppressed, even if those contractions are defined in &lt;code&gt;table&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f182d17ce2e9b56202114ddc3d06d6361dea7a8d" translate="yes" xml:space="preserve">
          <source>Contrary to popular belief, Perl 6 and Perl 5 peacefully coexist with one another. Perl 6 has proven to be a fascinating source of ideas for those using Perl 5 (the &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; object system is a well-known example). There is overlap in the communities, and this overlap fosters the tradition of sharing and borrowing that have been instrumental to Perl's success. The current leading implementation of Perl 6 is Rakudo, and you can learn more about it at &lt;a href=&quot;http://rakudo.org&quot;&gt;http://rakudo.org&lt;/a&gt;.</source>
          <target state="translated">Вопреки распространенному мнению, Perl 6 и Perl 5 мирно сосуществуют друг с другом. Perl 6 оказался прекрасным источником идей для тех, кто использует Perl 5 ( хорошо известный пример - объектная система &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; ). Сообщества частично пересекаются, и это совпадение способствует развитию традиции обмена и заимствования, которые сыграли важную роль в успехе Perl. В настоящее время ведущей реализацией Perl 6 является Rakudo, и вы можете узнать о ней больше на &lt;a href=&quot;http://rakudo.org&quot;&gt;http://rakudo.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="302edc87fdd461487f5b0300d3fa290ba8ab7362" translate="yes" xml:space="preserve">
          <source>Contrary to popular belief, Raku and Perl peacefully coexist with one another. Raku has proven to be a fascinating source of ideas for those using Perl (the &lt;a href=&quot;moose&quot;&gt;Moose&lt;/a&gt; object system is a well-known example). There is overlap in the communities, and this overlap fosters the tradition of sharing and borrowing that have been instrumental to Perl's success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc2fb5710ee22531776c8ba9e55098e2618c67c" translate="yes" xml:space="preserve">
          <source>Contrast that with an independent subexpression:</source>
          <target state="translated">Контраст с независимым подвыражением:</target>
        </trans-unit>
        <trans-unit id="69735e4ec537e4e29ad052c50c3613321af3383c" translate="yes" xml:space="preserve">
          <source>Contrast this with the following make_adder() function, in which the returned anonymous function contains a reference to a lexical variable outside the scope of that function itself. Such a reference requires that Perl return a proper closure, thus locking in for all time the value that the lexical had when the function was created.</source>
          <target state="translated">Контрастурируйте это со следующей функцией make_adder(),в которой возвращаемая анонимная функция содержит ссылку на лексическую переменную,выходящую за рамки этой функции.Такая ссылка требует,чтобы Perl возвращал правильное закрытие,таким образом,блокируя на все время значение,которое лексическая переменная имела при создании функции.</target>
        </trans-unit>
        <trans-unit id="5c7685d9e7d12d06a8f7c0c062a4c8103b7f97f6" translate="yes" xml:space="preserve">
          <source>Contributors to File::Path, in alphabetical order by first name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16f6173d03c0c8b09cdd1d2ddfa6f13bebfd052" translate="yes" xml:space="preserve">
          <source>Control Flow Utilities (callbacks and exceptions etc)</source>
          <target state="translated">Утилиты управления потоком (обратные вызовы,исключения и т.д.)</target>
        </trans-unit>
        <trans-unit id="d8e3def8f1fded2e3eff4c8ea59924177caf98dc" translate="yes" xml:space="preserve">
          <source>Control VMS-specific language features</source>
          <target state="translated">Управление VMS-специфические особенности языка</target>
        </trans-unit>
        <trans-unit id="bce115b0c925643288d6d66089149032ada8c603" translate="yes" xml:space="preserve">
          <source>Control characters</source>
          <target state="translated">Управляющие символы</target>
        </trans-unit>
        <trans-unit id="b7fe68fe8faa99ef764732f95206a72acbe672ba" translate="yes" xml:space="preserve">
          <source>Control characters can be escaped with &lt;code&gt;\c&lt;/code&gt; , so that a control-Z character would be matched with &lt;code&gt;\cZ&lt;/code&gt; . The escape sequence &lt;code&gt;\Q&lt;/code&gt; ...&lt;code&gt;\E&lt;/code&gt; quotes, or protects most non-alphabetic characters. For instance,</source>
          <target state="translated">Управляющие символы могут быть экранированы с помощью &lt;code&gt;\c&lt;/code&gt; , чтобы символ control-Z совпадал с &lt;code&gt;\cZ&lt;/code&gt; . Управляющая последовательность &lt;code&gt;\Q&lt;/code&gt; ... &lt;code&gt;\E&lt;/code&gt; заключает в кавычки или защищает большинство неалфавитных символов. Например,</target>
        </trans-unit>
        <trans-unit id="6fcc265ca1f47c38ce9b43f3e952dab2275082d9" translate="yes" xml:space="preserve">
          <source>Control characters can be escaped with &lt;code&gt;\c&lt;/code&gt;, so that a control-Z character would be matched with &lt;code&gt;\cZ&lt;/code&gt;. The escape sequence &lt;code&gt;\Q&lt;/code&gt;...&lt;code&gt;\E&lt;/code&gt; quotes, or protects most non-alphabetic characters. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021626ea5dbee24ff07ea2691bf82bb74b7a5674" translate="yes" xml:space="preserve">
          <source>Control characters don't produce output as such, but instead usually control the terminal somehow: for example, newline and backspace are control characters. On ASCII platforms, in the ASCII range, characters whose code points are between 0 and 31 inclusive, plus 127 (&lt;code&gt;DEL&lt;/code&gt; ) are control characters; on EBCDIC platforms, their counterparts are control characters.</source>
          <target state="translated">Управляющие символы не производят вывода как таковые, а вместо этого обычно каким-то образом управляют терминалом: например, символы новой строки и возврата являются управляющими символами. На платформах ASCII в диапазоне ASCII символы с кодовыми точками от 0 до 31 включительно плюс 127 ( &lt;code&gt;DEL&lt;/code&gt; ) являются управляющими символами; на платформах EBCDIC их эквивалентами являются управляющие символы.</target>
        </trans-unit>
        <trans-unit id="9f036f96d41dd05d9c964d94dae4ccdc66ebce27" translate="yes" xml:space="preserve">
          <source>Control characters don't produce output as such, but instead usually control the terminal somehow: for example, newline and backspace are control characters. On ASCII platforms, in the ASCII range, characters whose code points are between 0 and 31 inclusive, plus 127 (&lt;code&gt;DEL&lt;/code&gt;) are control characters; on EBCDIC platforms, their counterparts are control characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472d5bbe2640e68243fd88fba831e600f32a78c2" translate="yes" xml:space="preserve">
          <source>Control disk logging. Little documentation for this IOCTL operation was found. It makes use of a &lt;code&gt;DISK_LOGGING&lt;/code&gt; data structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c7e7313cedea865dec63d7c5b00f10bd429ad8" translate="yes" xml:space="preserve">
          <source>Control optional warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0323bcd19431aa40d48a7a04e563e491b5de2b5" translate="yes" xml:space="preserve">
          <source>Control sort() behaviour</source>
          <target state="translated">Управлять сортировкой (сортировкой)поведения</target>
        </trans-unit>
        <trans-unit id="6eed236126d30fd4de8e539b1434bde859966005" translate="yes" xml:space="preserve">
          <source>Control the filetest permission operators</source>
          <target state="translated">Контроль над операторами,выдающими разрешения на перелеты</target>
        </trans-unit>
        <trans-unit id="1a2eedb1b60e1d8a80a133e954e55be108ac924a" translate="yes" xml:space="preserve">
          <source>Control whether the file is unlinked when the object goes out of scope. The file is removed if this value is true and $KEEP_ALL is not.</source>
          <target state="translated">Управляет тем,будет ли файл несвязан,когда объект выйдет из-под действия.Файл удаляется,если это значение равно true,а $KEEP_ALL-нет.</target>
        </trans-unit>
        <trans-unit id="e9597894a326a5dddbc5dee41019e4d31b7362ce" translate="yes" xml:space="preserve">
          <source>Controlling Warnings from the Command Line</source>
          <target state="translated">Управление Предупреждениями с командной строки</target>
        </trans-unit>
        <trans-unit id="68987a6a2f290ee6ca2caa6b3e7b36432344b22a" translate="yes" xml:space="preserve">
          <source>Controlling access: lock()</source>
          <target state="translated">Управление доступом:lock()</target>
        </trans-unit>
        <trans-unit id="a1e94cef9625b439090d57cc70615fae34127ab7" translate="yes" xml:space="preserve">
          <source>Controlling input buffering is a remarkably system-dependent matter. On many systems, you can just use the &lt;b&gt;stty&lt;/b&gt; command as shown in &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;, but as you see, that's already getting you into portability snags.</source>
          <target state="translated">Управление буферизацией ввода в значительной степени зависит от системы. Во многих системах вы можете просто использовать команду &lt;b&gt;stty,&lt;/b&gt; как показано в &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; , но, как видите, это уже мешает переносимости.</target>
        </trans-unit>
        <trans-unit id="48eebaf19635d9dd98ddb1e7bee6a3c0f045583c" translate="yes" xml:space="preserve">
          <source>Controlling input buffering is a remarkably system-dependent matter. On many systems, you can just use the &lt;b&gt;stty&lt;/b&gt; command as shown in &lt;a href=&quot;perlfunc#getc&quot;&gt;&quot;getc&quot; in perlfunc&lt;/a&gt;, but as you see, that's already getting you into portability snags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20f10fc399adc1e8262f1893ceb51478f185a6b" translate="yes" xml:space="preserve">
          <source>Controlling where the test output goes.</source>
          <target state="translated">Управление тем,куда выходит тестовый выход.</target>
        </trans-unit>
        <trans-unit id="07da5ac1184a4498e39e115db900514920d805cf" translate="yes" xml:space="preserve">
          <source>Controls how certain regex optimisations are applied and how much memory they utilize. This value by default is 65536 which corresponds to a 512kB temporary cache. Set this to a higher value to trade memory for speed when matching large alternations. Set it to a lower value if you want the optimisations to be as conservative of memory as possible but still occur, and set it to a negative value to prevent the optimisation and conserve the most memory. Under normal situations this variable should be of no interest to you.</source>
          <target state="translated">Управляет тем,как применяются определенные регекс-оптимизации и сколько памяти они используют.Это значение по умолчанию равно 65536,что соответствует временному кэшу размером 512 кБ.Установите более высокое значение для торговли памятью для скорости при совпадении с большими изменениями.Установите меньшее значение,если вы хотите,чтобы оптимизации были как можно более консервативными по отношению к памяти,но все же происходят,и установите отрицательное значение,чтобы предотвратить оптимизацию и сэкономить большую часть памяти.В нормальных ситуациях эта переменная не должна представлять для Вас интереса.</target>
        </trans-unit>
        <trans-unit id="878f21f1789fd1d8bba78852bd19060efa986e3e" translate="yes" xml:space="preserve">
          <source>Controls the behaviour of global destruction of objects and other references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;&quot;PERL_DESTRUCT_LEVEL&quot; in perlhacktips&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554cef6ea070153a4ee1bebb92008fd6058cf45d" translate="yes" xml:space="preserve">
          <source>Controls the degree to which the output can be &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed to recreate the supplied reference structures. Setting it to 1 will output additional perl statements that will correctly recreate nested references. The default is 0.</source>
          <target state="translated">Управляет степенью, в которой выходные данные могут быть &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; для воссоздания предоставленных ссылочных структур. Установка его в 1 приведет к выводу дополнительных операторов perl, которые правильно воссоздают вложенные ссылки. По умолчанию - 0.</target>
        </trans-unit>
        <trans-unit id="65ee2dd46953947a14b91e1acd27d68a4fa5dcee" translate="yes" xml:space="preserve">
          <source>Controls the degree to which the output can be &lt;code&gt;eval&lt;/code&gt;ed to recreate the supplied reference structures. Setting it to 1 will output additional perl statements that will correctly recreate nested references. The default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfa684e2caf08a3da5e3ef30109246db004e5da" translate="yes" xml:space="preserve">
          <source>Controls the lengths to which the module will go to check the safety of the temporary file or directory before proceeding. Options are:</source>
          <target state="translated">Управляет длинами,на которые модуль будет идти,чтобы проверить безопасность временного файла или каталога,прежде чем продолжить.Опции:</target>
        </trans-unit>
        <trans-unit id="0ca7717f12fe26367883aafa8d3fbe334c1b18a2" translate="yes" xml:space="preserve">
          <source>Controls the style of indentation. It can be set to 0, 1, 2 or 3. Style 0 spews output without any newlines, indentation, or spaces between list items. It is the most compact format possible that can still be called valid perl. Style 1 outputs a readable form with newlines but no fancy indentation (each level in the structure is simply indented by a fixed amount of whitespace). Style 2 (the default) outputs a very readable form which takes into account the length of hash keys (so the hash value lines up). Style 3 is like style 2, but also annotates the elements of arrays with their index (but the comment is on its own line, so array output consumes twice the number of lines). Style 2 is the default.</source>
          <target state="translated">Контролирует стиль отступов.Может быть установлен на 0,1,2 или 3.Стиль 0 выплесков без каких-либо новых строк,отступов или пробелов между пунктами списка.Это наиболее компактный формат,который еще можно назвать допустимым perl.Стиль 1 выводит читаемую форму с новыми строками,но без причудливых отступов (каждый уровень в структуре просто отступает на фиксированное количество белых пробельных символов).Стиль 2 (по умолчанию)выводит очень читабельную форму,которая учитывает длину ключей хэша (поэтому значение хэша строится вверх).Стиль 3 похож на стиль 2,но также аннотирует элементы массивов их индексом (но комментарий находится на собственной строке,поэтому вывод массива потребляет вдвое больше строк).По умолчанию используется стиль 2.</target>
        </trans-unit>
        <trans-unit id="ec52caca26193d6a82c9598237bf4310487811f7" translate="yes" xml:space="preserve">
          <source>Controls whether a comma is added after the last element of an array or hash. Even when true, no comma is added between the last element of an array or hash and a closing bracket when they appear on the same line. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a31fdc3bd2e052c43c5ff90f54688767846776" translate="yes" xml:space="preserve">
          <source>Controls whether debugging messages should be enabled.</source>
          <target state="translated">Контролирует,должны ли отладочные сообщения быть включены.</target>
        </trans-unit>
        <trans-unit id="e34cd6a1d6fc0675d9cf236e50c7a40d4f7e0985" translate="yes" xml:space="preserve">
          <source>Controls whether temporary files and directories should be retained regardless of any instructions in the program to remove them automatically. This is useful for debugging but should not be used in production code.</source>
          <target state="translated">Управляет тем,должны ли временные файлы и каталоги сохраняться независимо от любых инструкций программы по их автоматическому удалению.Это полезно для отладки,но не должно использоваться в производственном коде.</target>
        </trans-unit>
        <trans-unit id="7787de4ed8d37741fa377fafe5fdafa8b3011126" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzdeflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="translated">Управляет добавлением сжатых данных в выходной буфер в &lt;code&gt;bzdeflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; и &lt;code&gt;bzclose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03e461b079d8358eabdfc890d95bb1de4c06830c" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzdeflate&lt;/code&gt;, &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f221020431f51974b32a3b5e2fbd634d97908661" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzinflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="translated">Управляет добавлением сжатых данных в выходной буфер в &lt;code&gt;bzinflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; и &lt;code&gt;bzclose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d43609533ae559051f0864148761f4f01ec7c5b" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzinflate&lt;/code&gt;, &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4245dd2343e96e7d4aa52338568c9fd8977b600" translate="yes" xml:space="preserve">
          <source>Controls which compression method is used. At present four compression methods are supported, namely Store (no compression at all), Deflate, Bzip2 and Lzma.</source>
          <target state="translated">Управляет тем,какой метод сжатия используется.В настоящее время поддерживаются четыре метода сжатия,а именно Store (без сжатия вообще),Deflate,Bzip2 и Lzma.</target>
        </trans-unit>
        <trans-unit id="2eb06b69bb4c9f83f42cb55738cfe404434afd67" translate="yes" xml:space="preserve">
          <source>Convenience macro to get the REGEXP from a SV. This is approximately equivalent to the following snippet:</source>
          <target state="translated">Макрос удобства,чтобы получить REGEXP от SV.Это приблизительно эквивалентно следующему фрагменту:</target>
        </trans-unit>
        <trans-unit id="197b239c74a71f263a8d75330c22e4fc91bea1ec" translate="yes" xml:space="preserve">
          <source>Convenience method for building testing functions that take regular expressions as arguments.</source>
          <target state="translated">Удобный метод построения функций тестирования,которые принимают регулярные выражения в качестве аргументов.</target>
        </trans-unit>
        <trans-unit id="1f619076858d6ded347f81f166e575080deac279" translate="yes" xml:space="preserve">
          <source>Convenience methods</source>
          <target state="translated">Методы удобства</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="643e483203bf1176839f0449bd1086c5d82b2884" translate="yes" xml:space="preserve">
          <source>Conversely for &lt;code&gt;INPUT&lt;/code&gt; (Perl to XSUB) mapping, the function named &lt;code&gt;XS_unpack_$ntype&lt;/code&gt; is called with the input Perl scalar as argument and the return value is cast to the mapped C type and assigned to the output C variable.</source>
          <target state="translated">И наоборот, для сопоставления &lt;code&gt;INPUT&lt;/code&gt; (Perl в XSUB) функция с именем &lt;code&gt;XS_unpack_$ntype&lt;/code&gt; вызывается с входным скаляром Perl в качестве аргумента, а возвращаемое значение приводится к сопоставленному типу C и назначается выходной переменной C.</target>
        </trans-unit>
        <trans-unit id="12d9c05ad456b2e9dfbd26729c7d5a4582ad8668" translate="yes" xml:space="preserve">
          <source>Conversely when &lt;code&gt;Append&lt;/code&gt; is not specified, or it is present and is set to false, it will operate as follows.</source>
          <target state="translated">И наоборот, когда &lt;code&gt;Append&lt;/code&gt; не указано или присутствует и имеет значение false, он будет работать следующим образом.</target>
        </trans-unit>
        <trans-unit id="1099367c0a33e0960cc2a79b8c82b72aa819293c" translate="yes" xml:space="preserve">
          <source>Conversely, here is a partial solution for the task of encoding such a URL in any EBCDIC code page:</source>
          <target state="translated">И наоборот,здесь есть частичное решение задачи кодирования такого URL в любой кодовой странице EBCDIC:</target>
        </trans-unit>
        <trans-unit id="f8f85b8f15d0328c4cabb7c91d45f9c26048df1a" translate="yes" xml:space="preserve">
          <source>Conversely, when setting &lt;code&gt;$?&lt;/code&gt; in an END block, an attempt is made to convert the POSIX value into a native status intelligible to the operating system upon exiting Perl. What this boils down to is that setting &lt;code&gt;$?&lt;/code&gt; to zero results in the generic success value SS$_NORMAL, and setting &lt;code&gt;$?&lt;/code&gt; to a non-zero value results in the generic failure status SS$_ABORT. See also &lt;a href=&quot;perlport#exit&quot;&gt;&quot;exit&quot; in perlport&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdc49909eca70fcdaa9911c75b9017083c28375" translate="yes" xml:space="preserve">
          <source>Conversely, when setting &lt;code&gt;$?&lt;/code&gt; in an END block, an attempt is made to convert the POSIX value into a native status intelligible to the operating system upon exiting Perl. What this boils down to is that setting &lt;code&gt;$?&lt;/code&gt; to zero results in the generic success value SS$_NORMAL, and setting &lt;code&gt;$?&lt;/code&gt; to a non-zero value results in the generic failure status SS$_ABORT. See also &lt;a href=&quot;perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">И наоборот, при установке &lt;code&gt;$?&lt;/code&gt; в блоке END делается попытка преобразовать значение POSIX в собственный статус, понятный операционной системе после выхода из Perl. К чему это сводится, так это к настройке &lt;code&gt;$?&lt;/code&gt; к нулю приводит к общему значению успеха SS $ _NORMAL, а установка &lt;code&gt;$?&lt;/code&gt; на ненулевое значение приводит к общему состоянию отказа SS $ _ABORT. См. Также &lt;a href=&quot;perlport#exit&quot;&gt;выход в perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a638ea9e2e8023dcf3f6e834a6be6c36bfe69b02" translate="yes" xml:space="preserve">
          <source>Conversion from the original HTML to POD format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e65ec35e7036fdf8f00963fb1d5aa8781dfc7e" translate="yes" xml:space="preserve">
          <source>Conversion proceeds through each version in turn. For example, a version 1.2 structure might be converted to 1.3 then 1.4 then finally to version 2. The conversion process attempts to clean-up simple errors and standardize data. For example, if &lt;code&gt;author&lt;/code&gt; is given as a scalar, it will converted to an array reference containing the item. (Converting a structure to its own version will also clean-up and standardize.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f99a69b0dbcdf11a6d0337c05dbfa48ee474e9" translate="yes" xml:space="preserve">
          <source>Conversions to and from spherical and cylindrical coordinates are available. Please notice that the conversions are not necessarily reversible because of the equalities like</source>
          <target state="translated">Преобразования в и из сферических и цилиндрических координат доступны.Пожалуйста,обратите внимание,что преобразование не обязательно является обратимым из-за таких равнозначностей как</target>
        </trans-unit>
        <trans-unit id="bf35c8b871a1fb1996c50ba5b0b5ab5801039529" translate="yes" xml:space="preserve">
          <source>Convert CPAN distribution metadata structures</source>
          <target state="translated">Преобразование структур метаданных распределения CPAN</target>
        </trans-unit>
        <trans-unit id="21841a84ce705fac7522bc0e5a625ceef2574143" translate="yes" xml:space="preserve">
          <source>Convert POD data to ASCII text with format escapes</source>
          <target state="translated">Преобразование POD-данных в ASCII-текст с экранированием формата</target>
        </trans-unit>
        <trans-unit id="26d9ff3691abc55fd6770d630e2e5af82498a473" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted *roff input</source>
          <target state="translated">Конвертировать данные POD в форматированные *рофф-входы</target>
        </trans-unit>
        <trans-unit id="04c7609219077dfc8d84b97d557ad0e72666eb9b" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted ASCII text</source>
          <target state="translated">Конвертировать данные POD в форматированный ASCII текст</target>
        </trans-unit>
        <trans-unit id="db9fd6e0fab456fdc8445a16cbc6756038a981de" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted color ASCII text</source>
          <target state="translated">Конвертировать данные POD в форматированный цветной текст ASCII</target>
        </trans-unit>
        <trans-unit id="6b476a5cb99c6d07b35dfdedf3e3251b4c8aa51b" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted overstrike text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d9c9da640f6cd2989689129ea988acc8fc255" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112d5a9d03872dcf431cd72fd930ebba527fc129" translate="yes" xml:space="preserve">
          <source>Convert Pod to HTML</source>
          <target state="translated">Конвертировать Pod в HTML</target>
        </trans-unit>
        <trans-unit id="0cbb869440d0cbf2c1db1db64ff336f3cdaa617a" translate="yes" xml:space="preserve">
          <source>Convert a package name to a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1148ba82369452869eca19f02c26b0067714d03a" translate="yes" xml:space="preserve">
          <source>Convert a sole 'perl -V' text block, or list of lines, to a complete myconfig hash. All unknown entries are defaulted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025ffb8bfa07a8087fac34adc747a7743f7ef294" translate="yes" xml:space="preserve">
          <source>Convert a string representing an unsigned decimal number to an object representing the same number. The input is normalize, i.e., it matches &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</source>
          <target state="translated">Преобразуйте строку, представляющую десятичное число без знака, в объект, представляющий то же число. Вход нормализуют, то есть, он соответствует &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6db08820b1d9bc7a4c773f368dcd75b2ef03a946" translate="yes" xml:space="preserve">
          <source>Convert a string representing an unsigned decimal number to an object representing the same number. The input is normalized, i.e., it matches &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c765e62f3e179084fe5d84bf0b2c3905b911ee2" translate="yes" xml:space="preserve">
          <source>Convert all keys to lowercase</source>
          <target state="translated">Преобразовать все клавиши в нижний регистр</target>
        </trans-unit>
        <trans-unit id="7fc597b2a41ac67e1656734e7eb3b3a11b24ebbf" translate="yes" xml:space="preserve">
          <source>Convert between VMS and Unix file specification syntax</source>
          <target state="translated">Преобразование между VMS и синтаксисом спецификации файла Unix</target>
        </trans-unit>
        <trans-unit id="22551a6fa56e0b088f54f393df223d0617c9d7fd" translate="yes" xml:space="preserve">
          <source>Convert date and time information to string. Returns the string.</source>
          <target state="translated">Преобразование информации о дате и времени в строку.Возвращает строку.</target>
        </trans-unit>
        <trans-unit id="9dcc937b46bf0f95b02e92f32e357340020b79bb" translate="yes" xml:space="preserve">
          <source>Convert date/time info to a calendar time.</source>
          <target state="translated">Преобразование информации о дате/времени в календарное время.</target>
        </trans-unit>
        <trans-unit id="e522d506e48a2d1d98238f2e795a0c3fd876e384" translate="yes" xml:space="preserve">
          <source>Convert facet data to the legacy event API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c755a3bc45c556fa5a645d889408aa48ca046b43" translate="yes" xml:space="preserve">
          <source>Convert several Pod files to several HTML files</source>
          <target state="translated">Конвертировать несколько файлов Pod в несколько HTML-файлов</target>
        </trans-unit>
        <trans-unit id="171503852ba30aee7fafcbec8ff0ffe88983bb02" translate="yes" xml:space="preserve">
          <source>Convert the extension spec to Unix format, as that's what will match what's in the XSBUILD data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36fcb46538b5f65c12d8c2a4fdc9c5ba89e1e4c" translate="yes" xml:space="preserve">
          <source>Convert the items to a normalised form. For 8 bit and Unicode values converts the item to an array of 1 or 2 items, both 8 bit and UTF-8 encoded.</source>
          <target state="translated">Преобразуйте элементы в нормализованную форму.Для 8-ми битных и Unicode-значений преобразует элемент в массив из 1 или 2 элементов,как в 8-ми битной,так и в UTF-8 кодировке.</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="e602181f27c8b76305cde3933fa7a93bda7e1d5f" translate="yes" xml:space="preserve">
          <source>Converting a text string into an alternate but equivalent &lt;b&gt;canonical&lt;/b&gt; (or compatible) representation that can then be compared for equivalence. Unicode recognizes four different normalization forms: NFD, NFC, NFKD, and NFKC.</source>
          <target state="translated">Преобразование текстовой строки в альтернативном , но эквивалентной &lt;b&gt;канонической&lt;/b&gt; (или совместимый) представление , которое затем можно сравнить эквивалентности. Unicode распознает четыре различные формы нормализации: NFD, NFC, NFKD и NFKC.</target>
        </trans-unit>
        <trans-unit id="a905d8ec528f352ed045a0e47323b3f945f63fbc" translate="yes" xml:space="preserve">
          <source>Converting data from one type to another. C permits this. Perl does not need it. Nor want it.</source>
          <target state="translated">Преобразование данных из одного типа в другой.C позволяет это.Perl в этом не нуждается.И не нужен.</target>
        </trans-unit>
        <trans-unit id="ff10e616cf0cab260f69d9d71be4dea1b4105184" translate="yes" xml:space="preserve">
          <source>Converting neutral double quotes to properly matched double quotes doesn't work unless there are no formatting codes between the quote marks. This only matters for troff output.</source>
          <target state="translated">Преобразование нейтральных двойных кавычек в правильно подобранные двойные кавычки не работает,если между кавычками нет кодов форматирования.Это имеет значение только для вывода troff.</target>
        </trans-unit>
        <trans-unit id="39ed30f1fb153d42aedc1603d4595d899a1c4eb9" translate="yes" xml:space="preserve">
          <source>Converting these two bytes to a string can be done with the unpack template &lt;code&gt;'b16'&lt;/code&gt; . To obtain the individual bit values from the bit string we use &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; with the &quot;empty&quot; separator pattern which dissects into individual characters. Bit values from the &quot;reserved&quot; positions are simply assigned to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, a convenient notation for &quot;I don't care where this goes&quot;.</source>
          <target state="translated">Преобразование этих двух байтов в строку может быть выполнено с помощью шаблона распаковки &lt;code&gt;'b16'&lt;/code&gt; . Чтобы получить отдельные битовые значения из битовой строки, мы используем &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; с &amp;laquo;пустым&amp;raquo; шаблоном разделителя, который разбивается на отдельные символы. Битовые значения из &amp;laquo;зарезервированных&amp;raquo; позиций просто присваиваются &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , удобное обозначение для &amp;laquo;мне все равно, куда это идет&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="72d154b34078a0889654e3794469a6700e302e61" translate="yes" xml:space="preserve">
          <source>Converting these two bytes to a string can be done with the unpack template &lt;code&gt;'b16'&lt;/code&gt;. To obtain the individual bit values from the bit string we use &lt;code&gt;split&lt;/code&gt; with the &quot;empty&quot; separator pattern which dissects into individual characters. Bit values from the &quot;reserved&quot; positions are simply assigned to &lt;code&gt;undef&lt;/code&gt;, a convenient notation for &quot;I don't care where this goes&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872d9a7e434a3f8eac01f8a956be9ef98e1065ef" translate="yes" xml:space="preserve">
          <source>Converts</source>
          <target state="translated">Converts</target>
        </trans-unit>
        <trans-unit id="5c36855597a8c8dc72b5ec20242adc0af9679eb7" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;o&lt;/code&gt; into a list op if it is not one already, and then converts it into the specified &lt;code&gt;type&lt;/code&gt;, calling its check function, allocating a target if it needs one, and folding constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd0269cc1fa76def89057e375d8613122d1590d" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;offset&lt;/code&gt; from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles type coercion. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;SvPV_flags&lt;/code&gt;, and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b0ff19255621f0cc44bdfb4998d413782b614b" translate="yes" xml:space="preserve">
          <source>Converts DOS and OS/2 linefeeds to Unix style recursively.</source>
          <target state="translated">Преобразовывает линейные каналы DOS и OS/2 в Unix-стиль рекурсивно.</target>
        </trans-unit>
        <trans-unit id="10562257cdade00a6b21d5534b7a854fb31311ef" translate="yes" xml:space="preserve">
          <source>Converts Perl XS code into C code</source>
          <target state="translated">Преобразует код Perl XS в код C</target>
        </trans-unit>
        <trans-unit id="c6aec2e8d6e3dde3cdaef9aaca3d6a0ac47f9491" translate="yes" xml:space="preserve">
          <source>Converts a directory specification to a path - that is, a string you can prepend to a file name to form a valid file specification. If the input file specification uses VMS syntax, the returned path does, too; likewise for Unix syntax (Unix paths are guaranteed to end with '/'). Note that this routine will insist that the input be a legal directory file specification; the file type and version, if specified, must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558ea7461cd4a0f2be5157a676fa69c25752c358" translate="yes" xml:space="preserve">
          <source>Converts a directory specification to the file specification of the directory file - that is, a string you can pass to functions like &lt;code&gt;stat&lt;/code&gt; or &lt;code&gt;rmdir&lt;/code&gt; to manipulate the directory file. If the input directory specification uses VMS syntax, the returned file specification does, too; likewise for Unix syntax. As with &lt;code&gt;pathify&lt;/code&gt;, the input file specification must have a type and version of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452c70cc155c20a233480d1511b68943f8b413fb" translate="yes" xml:space="preserve">
          <source>Converts a file specification to Unix syntax. If the file specification cannot be converted to or is already in Unix syntax, it will be passed through unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4027cb655c1703d55c619c00d83f700ca53fe105" translate="yes" xml:space="preserve">
          <source>Converts a file specification to VMS syntax. If the file specification cannot be converted to or is already in VMS syntax, it will be passed through unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4c118ffecc90a457e623e35d47e06d75541310" translate="yes" xml:space="preserve">
          <source>Converts a list into a string wrapped at approximately 80 columns.</source>
          <target state="translated">Преобразует список в строку,обернутую примерно в 80 столбцов.</target>
        </trans-unit>
        <trans-unit id="68b9e6f5ba88d84e905a481b6520ce3880c387ca" translate="yes" xml:space="preserve">
          <source>Converts a pod section specification to a suitable section specification for HTML. Note that we keep spaces and special characters except &lt;code&gt;&quot;, ?&lt;/code&gt; (Netscape problem) and the hyphen (writer's problem...).</source>
          <target state="translated">Преобразует спецификацию раздела модуля в подходящую спецификацию раздела для HTML. Обратите внимание, что мы сохраняем пробелы и специальные символы, кроме &lt;code&gt;&quot;, ?&lt;/code&gt; (Проблема Netscape) и дефиса (проблема автора ...).</target>
        </trans-unit>
        <trans-unit id="61727984fc889133103a87d7dafaafbc6948ea75" translate="yes" xml:space="preserve">
          <source>Converts a potentially UTF-8 encoded string &lt;code&gt;s&lt;/code&gt; of length &lt;code&gt;*lenp&lt;/code&gt; into native byte encoding. On input, the boolean &lt;code&gt;*is_utf8p&lt;/code&gt; gives whether or not &lt;code&gt;s&lt;/code&gt; is actually encoded in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49497595bfccaed317aa3b3b73a4144bb41b64d6" translate="yes" xml:space="preserve">
          <source>Converts a relative path to an absolute path.</source>
          <target state="translated">Преобразует относительный путь в абсолютный.</target>
        </trans-unit>
        <trans-unit id="9d892d6020931849ea5043d615d0a40eee45b982" translate="yes" xml:space="preserve">
          <source>Converts a relative path to an absolute path:</source>
          <target state="translated">Преобразует относительный путь в абсолютный:</target>
        </trans-unit>
        <trans-unit id="0264f8db205b64be8b68b16c988d512cf7fba8e5" translate="yes" xml:space="preserve">
          <source>Converts a scalar into a typeglob. This is an incoercible typeglob; assigning a reference to it will assign to one of its slots, instead of overwriting it as happens with typeglobs created by &lt;code&gt;SvSetSV&lt;/code&gt;. Converting any scalar that is &lt;code&gt;SvOK()&lt;/code&gt; may produce unpredictable results and is reserved for perl's internal use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b5dd91e7acb7cb912818ec494442452642d20c" translate="yes" xml:space="preserve">
          <source>Converts a scalar into a typeglob. This is an incoercible typeglob; assigning a reference to it will assign to one of its slots, instead of overwriting it as happens with typeglobs created by SvSetSV. Converting any scalar that is SvOK() may produce unpredictable results and is reserved for perl's internal use.</source>
          <target state="translated">Преобразует скаляр в печатный шрифт.Это несмешивающийся печатный шрифт;присваивая ему ссылку,он присваивает один из своих слотов,а не перезаписывает его,как это происходит с печатными шрифтами,созданными SvSetSV.Преобразование любого скаляра,который является SvOK(),может привести к непредсказуемым результатам и зарезервирован для внутреннего использования perl.</target>
        </trans-unit>
        <trans-unit id="cbf47bd965a32350de298ea4a1bd9d84f13c4c78" translate="yes" xml:space="preserve">
          <source>Converts a sorting key into its representation form. If &lt;code&gt;UCA_Version&lt;/code&gt; is 8, the output is slightly different.</source>
          <target state="translated">Преобразует ключ сортировки в форму представления. Если &lt;code&gt;UCA_Version&lt;/code&gt; равно 8, результат будет немного другим.</target>
        </trans-unit>
        <trans-unit id="ae92416a20e2c4ece1763712a7e4eaf9758f2df4" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&quot;s&quot;&lt;/code&gt; of length &lt;code&gt;*lenp&lt;/code&gt; from UTF-8 into native byte encoding. Unlike &lt;a href=&quot;#bytes_to_utf8&quot;&gt;&quot;bytes_to_utf8&quot;&lt;/a&gt;, this over-writes the original string, and updates &lt;code&gt;*lenp&lt;/code&gt; to contain the new length. Returns zero on failure (leaving &lt;code&gt;&quot;s&quot;&lt;/code&gt; unchanged) setting &lt;code&gt;*lenp&lt;/code&gt; to -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09251ed3a676eb23e02a6f2269b32e4facc6e9a" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; bytes from the native encoding into UTF-8. Returns a pointer to the newly-created string, and sets &lt;code&gt;len&lt;/code&gt; to reflect the new length in bytes.</source>
          <target state="translated">Преобразует строку &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; длиной &lt;code&gt;len&lt;/code&gt; байтов из собственной кодировки в UTF-8. Возвращает указатель на вновь созданную строку и устанавливает &lt;code&gt;len&lt;/code&gt; для отражения новой длины в байтах.</target>
        </trans-unit>
        <trans-unit id="25e23f0e18e40bbf0fb5c8f36fb8ccc5209e18d9" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; from UTF-8 into native byte encoding. Unlike &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;, this over-writes the original string, and updates &lt;code&gt;len&lt;/code&gt; to contain the new length. Returns zero on failure, setting &lt;code&gt;len&lt;/code&gt; to -1.</source>
          <target state="translated">Преобразует строку &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; длины &lt;code&gt;len&lt;/code&gt; из UTF-8 в собственную байтовую кодировку. В отличие от &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt; , это перезаписывает исходную строку и обновляет &lt;code&gt;len&lt;/code&gt; , чтобы она содержала новую длину. В случае ошибки возвращает ноль, устанавливая для параметра &lt;code&gt;len&lt;/code&gt; значение -1.</target>
        </trans-unit>
        <trans-unit id="c9aaa9139532e77f8d3100c51e3d0b848d4c571b" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; from UTF-8 into native byte encoding. Unlike &lt;a href=&quot;#utf8_to_bytes&quot;&gt;utf8_to_bytes&lt;/a&gt; but like &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;, returns a pointer to the newly-created string, and updates &lt;code&gt;len&lt;/code&gt; to contain the new length. Returns the original string if no conversion occurs, &lt;code&gt;len&lt;/code&gt; is unchanged. Do nothing if &lt;code&gt;is_utf8&lt;/code&gt; points to 0. Sets &lt;code&gt;is_utf8&lt;/code&gt; to 0 if &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is converted or consisted entirely of characters that are invariant in utf8 (i.e., US-ASCII on non-EBCDIC machines).</source>
          <target state="translated">Преобразует строку &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; длины &lt;code&gt;len&lt;/code&gt; из UTF-8 в собственную байтовую кодировку. В отличие от &lt;a href=&quot;#utf8_to_bytes&quot;&gt;utf8_to_bytes,&lt;/a&gt; но подобно &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt; , возвращает указатель на вновь созданную строку и обновляет &lt;code&gt;len&lt;/code&gt; , чтобы она содержала новую длину. Возвращает исходную строку, если преобразование не происходит, &lt;code&gt;len&lt;/code&gt; не изменяется. Ничего не делать, если &lt;code&gt;is_utf8&lt;/code&gt; указывает на 0. Устанавливает &lt;code&gt;is_utf8&lt;/code&gt; в 0, если &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; преобразован или полностью состоит из символов, инвариантных в utf8 (т. Е. US-ASCII на машинах без EBCDIC).</target>
        </trans-unit>
        <trans-unit id="d63b1bd54baaa2c8d55a3c40041428bd6ca3813a" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;s&lt;/code&gt; of length &lt;code&gt;*lenp&lt;/code&gt; bytes from the native encoding into UTF-8. Returns a pointer to the newly-created string, and sets &lt;code&gt;*lenp&lt;/code&gt; to reflect the new length in bytes. The caller is responsible for arranging for the memory used by this string to get freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb460088c64e83557a5a8d851fa7e02c2237e5d" translate="yes" xml:space="preserve">
          <source>Converts a string into something presentable, handling escaping via &lt;code&gt;pv_escape()&lt;/code&gt; and supporting quoting and ellipses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ad9fed6045b19b9f737301c45af3031d5885f4" translate="yes" xml:space="preserve">
          <source>Converts a string into something presentable, handling escaping via pv_escape() and supporting quoting and ellipses.</source>
          <target state="translated">Преобразует строку во что-то презентабельное,обрабатывая экранирование с помощью pv_escape()и поддерживая кавычки и эллипсы.</target>
        </trans-unit>
        <trans-unit id="0db98a90de6606abe2910c149662ac0a222aecca" translate="yes" xml:space="preserve">
          <source>Converts a string of file attribute letters into an unsigned value with the corresponding bits set. &lt;code&gt;$sAttributeLetters&lt;/code&gt; should contain zero or more letters from &lt;code&gt;&quot;achorst&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
