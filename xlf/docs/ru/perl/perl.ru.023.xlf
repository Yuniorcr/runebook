<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="df751a148221e657237a264ca9bfcbc240163953" translate="yes" xml:space="preserve">
          <source>Defined if we're dealing with the &lt;code&gt;GNU&lt;/code&gt; C Library.</source>
          <target state="translated">Определяется, если мы имеем дело с библиотекой &lt;code&gt;GNU&lt;/code&gt; C.</target>
        </trans-unit>
        <trans-unit id="487af9998b90c5fd5fb9d7386051e0f2dc3d4e56" translate="yes" xml:space="preserve">
          <source>Defined in RFC 2277, this is for tagging text (which must include English text, and might/should include text in other appropriate languages) that is emitted in a context where language-negotiation wasn't possible -- in SMTP mail failure messages, for example.</source>
          <target state="translated">Определяется в RFC 2277,это для маркировки текста (который должен включать английский текст,и может/должен включать текст на других соответствующих языках),который испускается в контексте,когда переговоры по языку не были возможны --например,в сообщениях SMTP о сбоях в работе почты.</target>
        </trans-unit>
        <trans-unit id="d0094836cd417237e53e36d38b6bb157c23bb8dd" translate="yes" xml:space="preserve">
          <source>Defines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See &lt;a href=&quot;liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; for details.</source>
          <target state="translated">Определяет EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. См. Подробности в &lt;a href=&quot;liblist&quot;&gt;ExtUtils :: Liblist&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54d5e1ace8616b0824e4e69deda9fb5d35c9ab98" translate="yes" xml:space="preserve">
          <source>Defines a check in target for RCS.</source>
          <target state="translated">Определяет проверку цели для RCS.</target>
        </trans-unit>
        <trans-unit id="fe64ed45d43654228ab2f263b3250cb6d237ffdb" translate="yes" xml:space="preserve">
          <source>Defines a couple of constants in the Makefile that are imported from %Config.</source>
          <target state="translated">Свойство определяет пару констант в Makefile,которые импортируются из %Config.</target>
        </trans-unit>
        <trans-unit id="45640d4e061562862c8b269f9919db4c555b95a5" translate="yes" xml:space="preserve">
          <source>Defines a lot of macros for distribution support.</source>
          <target state="translated">Определяет множество макросов для поддержки дистрибутива.</target>
        </trans-unit>
        <trans-unit id="8f2c384608aa9da85fcd183aa27b7be131f7d130" translate="yes" xml:space="preserve">
          <source>Defines a simple perl call that runs autosplit. May be deprecated by pm_to_blib soon.</source>
          <target state="translated">Свойство определяет простой вызов на perl,который выполняется автоматически.Может быть скоро устарел от pm_to_blib.</target>
        </trans-unit>
        <trans-unit id="7f1b350e0e67e0413f358f35911f68c6865314e4" translate="yes" xml:space="preserve">
          <source>Defines a target that produces the distribution in the scratch directory, and runs 'perl Makefile.PL; make ;make test' in that subdirectory.</source>
          <target state="translated">Определяет цель,которая создает дистрибутив в каталоге scratch,и запускает 'perl Makefile.PL;make ;make test' в этом подкаталоге.</target>
        </trans-unit>
        <trans-unit id="302537770d292c74e66370b599a3b03ffe01a51a" translate="yes" xml:space="preserve">
          <source>Defines at least these macros.</source>
          <target state="translated">Определяет хотя бы эти макросы.</target>
        </trans-unit>
        <trans-unit id="6b99cfd58fae6b3dae8c7123af0773072b8fe5e5" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.a (or equivalent) files.</source>
          <target state="translated">Определяет,как создавать файлы *.a (или эквивалентные им файлы).</target>
        </trans-unit>
        <trans-unit id="dc26efd3c32adf7d1de84003c339188a38e358f8" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.so (or equivalent) files.</source>
          <target state="translated">Определяет,как создавать файлы *.so (или эквивалентные им файлы).</target>
        </trans-unit>
        <trans-unit id="8695ac2968551bde31876b3d67b9ced4a12a9549" translate="yes" xml:space="preserve">
          <source>Defines how to rewrite the Makefile.</source>
          <target state="translated">Определяет,как переписать &quot;Макфайл&quot;.</target>
        </trans-unit>
        <trans-unit id="22c6065d98e3206f28470f013ce533e0e15ea743" translate="yes" xml:space="preserve">
          <source>Defines suffix rules to go from XS to object files directly. This is only intended for broken make implementations.</source>
          <target state="translated">Определяет суффиксные правила для прямого перехода от XS к объектным файлам.Предназначено только для нарушенных реализаций make.</target>
        </trans-unit>
        <trans-unit id="b3b41acc6b49a6388409ba10f2258e522cda4bba" translate="yes" xml:space="preserve">
          <source>Defines target that copies all files in the hash PM to their destination and autosplits them. See &lt;a href=&quot;install#DESCRIPTION&quot;&gt;DESCRIPTION in ExtUtils::Install&lt;/a&gt;</source>
          <target state="translated">Определяет цель, которая копирует все файлы в хэше PM в место назначения и автоматически разделяет их. См. &lt;a href=&quot;install#DESCRIPTION&quot;&gt;ОПИСАНИЕ в ExtUtils :: Install&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4adac1897b3589686f6012b335a376dba9440a99" translate="yes" xml:space="preserve">
          <source>Defines target that creates a PPD (Perl Package Description) file for a binary distribution.</source>
          <target state="translated">Определяет цель,которая создает файл PPD (Perl Package Description)для двоичного дистрибутива.</target>
        </trans-unit>
        <trans-unit id="81215a51ffc47aa71de599db8f3ad3d93520e3be" translate="yes" xml:space="preserve">
          <source>Defines targets and routines to translate the pods into manpages and put them into the INST_* directories.</source>
          <target state="translated">Определяет цели и процедуры для перевода стручков в manpages и размещения их в каталогах INST_*.</target>
        </trans-unit>
        <trans-unit id="a27612024b8b930142c07dfc2a483eb40f35b6c8" translate="yes" xml:space="preserve">
          <source>Defines targets for bootstrap files.</source>
          <target state="translated">Определяет цели для загрузочных файлов.</target>
        </trans-unit>
        <trans-unit id="d67b6bc334f7365a22e55924832c3099c1799069" translate="yes" xml:space="preserve">
          <source>Defines targets to make and to install EXE_FILES.</source>
          <target state="translated">Определяет цели для создания и установки EXE_FILES.</target>
        </trans-unit>
        <trans-unit id="a39e083fd927c6ae8fb97333fcad3f2b452cafcb" translate="yes" xml:space="preserve">
          <source>Defines targets to process subdirectories.</source>
          <target state="translated">Определяет цели для подкаталогов обработки.</target>
        </trans-unit>
        <trans-unit id="4b99ef7da9945c228db1380016cfa3962ddce9f3" translate="yes" xml:space="preserve">
          <source>Defines targets to run *.PL files.</source>
          <target state="translated">Определяет цели для запуска *.PL файлов.</target>
        </trans-unit>
        <trans-unit id="d9ad31fa070099a4fc5216a15ac2552cb8720903" translate="yes" xml:space="preserve">
          <source>Defines the DESTDIR and DEST* variables paralleling the INSTALL*.</source>
          <target state="translated">Определяет переменные DESTDIR и DEST*,распараллеливающие УСТАНОВКУ*.</target>
        </trans-unit>
        <trans-unit id="ba94224c3086851c054895958309c5f4d0716300" translate="yes" xml:space="preserve">
          <source>Defines the PERLDLL symbol if we are configured for static building since all code destined for the perl5xx.dll must be compiled with the PERLDLL symbol defined.</source>
          <target state="translated">Определяет символ PERLDLL,если мы настроены на статическую сборку,так как весь код,предназначенный для perl5xx.dll должен быть скомпилирован с определенным символом PERLDLL.</target>
        </trans-unit>
        <trans-unit id="e8fef87bd74d9d4f90d787908362dc30b0d77629" translate="yes" xml:space="preserve">
          <source>Defines the clean target.</source>
          <target state="translated">Определяет чистую цель.</target>
        </trans-unit>
        <trans-unit id="44c298f8aa784474d919a3c44fea66470e8f2e7f" translate="yes" xml:space="preserve">
          <source>Defines the compression level used by zlib. The value should either be a number between 0 and 9 (0 means no compression and 9 is maximum compression), or one of the symbolic constants defined below.</source>
          <target state="translated">Свойство определяет уровень сжатия,используемый zlib.Значение должно быть либо числом от 0 до 9 (0 означает отсутствие сжатия,а 9-максимальное сжатие),либо одной из символьных констант,определенных ниже.</target>
        </trans-unit>
        <trans-unit id="f42bdaa318d7d2b3aed95081e60d514ae57c0a40" translate="yes" xml:space="preserve">
          <source>Defines the compression level. Valid values are 0 through 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; , &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; , &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; , and &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</source>
          <target state="translated">Определяет уровень сжатия. Допустимые значения: от 0 до 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; , &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; , &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; и &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40143f5226bb902295ca1dda0de7dc4d4309dfae" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is &lt;code&gt;Z_DEFLATED&lt;/code&gt; .</source>
          <target state="translated">Определяет метод сжатия. Единственное допустимое значение в настоящее время (и значение по умолчанию) - &lt;code&gt;Z_DEFLATED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deaa8bcc66f1718ba796d4871baf848aff3c710f" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is Z_DEFLATED.</source>
          <target state="translated">Определяет метод сжатия.Единственное действительное на данный момент значение (и значение по умолчанию)-Z_DEFLATED.</target>
        </trans-unit>
        <trans-unit id="e5f8cd0a2961419147b82d106eae039801beefea" translate="yes" xml:space="preserve">
          <source>Defines the dependency from all *.h files that come with the perl distribution.</source>
          <target state="translated">Свойство определяет зависимость от всех *.h файлов,которые поставляются с дистрибутивом perl.</target>
        </trans-unit>
        <trans-unit id="740df2004d6262227a64962e7679f8e429418ecc" translate="yes" xml:space="preserve">
          <source>Defines the dynamic target.</source>
          <target state="translated">Определяет динамическую цель.</target>
        </trans-unit>
        <trans-unit id="5f6aea77294d02ec6fd46c657ab20cc6e5da28ce" translate="yes" xml:space="preserve">
          <source>Defines the install target.</source>
          <target state="translated">Определяет цель установки.</target>
        </trans-unit>
        <trans-unit id="476771d611b7ad6cde3ad6c65766d9fa62c6985b" translate="yes" xml:space="preserve">
          <source>Defines the linkext target which in turn defines the LINKTYPE.</source>
          <target state="translated">Определяет цель linkext,которая,в свою очередь,определяет LINKTYPE.</target>
        </trans-unit>
        <trans-unit id="28bca9ceee2fa0c0c2202b5cce5e6315839954c5" translate="yes" xml:space="preserve">
          <source>Defines the realclean target.</source>
          <target state="translated">Определяет реальную цель.</target>
        </trans-unit>
        <trans-unit id="187b77c07dcdb58c6c97c87717ccce9d654bf4c9" translate="yes" xml:space="preserve">
          <source>Defines the scratch directory target that will hold the distribution before tar-ing (or shar-ing).</source>
          <target state="translated">Свойство определяет целевой каталог,который будет держать дистрибутив перед tar-ing (или shar-ing).</target>
        </trans-unit>
        <trans-unit id="7111ead71f2d3431a6510a936ce620bc4b1e5ad4" translate="yes" xml:space="preserve">
          <source>Defines the static target.</source>
          <target state="translated">Определяет статическую цель.</target>
        </trans-unit>
        <trans-unit id="c63068c7e0232b8f723215365b2896a0e197617e" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; , &lt;code&gt;Z_FIXED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">Определяет стратегию, используемую для настройки сжатия. Допустимые значения: &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; , &lt;code&gt;Z_FIXED&lt;/code&gt; и &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f3b8848d647f32e943342a5efdd76d9b487a63a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">Определяет стратегию, используемую для настройки сжатия. Допустимые значения: &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; и &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eee1848a08d0972c7c4402500e5de73ab130c5a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. Use one of the symbolic constants defined below.</source>
          <target state="translated">Определяет стратегию,используемую для настройки сжатия.Использует одну из символьных констант,определенных ниже.</target>
        </trans-unit>
        <trans-unit id="0140c569a167a40b758a74ad75bbfa4a322932c6" translate="yes" xml:space="preserve">
          <source>Defines the string that is passed to recursive make calls in subdirectories.</source>
          <target state="translated">Свойство определяет строку,которая передается для рекурсивного вызова в подкаталогах.</target>
        </trans-unit>
        <trans-unit id="3da735f442360be74e54c58a85701764b3e96022" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C++.</source>
          <target state="translated">Свойство определяет суффиксные правила компиляции XS-файлов на C++.</target>
        </trans-unit>
        <trans-unit id="74b9893fa91b825a1d680e0f69f616b612a76cb5" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C.</source>
          <target state="translated">Свойство определяет суффиксные правила компиляции XS-файлов на C.</target>
        </trans-unit>
        <trans-unit id="e0d8ee251994cc513f249a8caeb41a2880a20ae6" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile different flavors of C files to object files.</source>
          <target state="translated">Свойство определяет суффиксные правила компиляции различных вкусов C-файлов в объектные файлы.</target>
        </trans-unit>
        <trans-unit id="32546d4aee39d7ecd97ee598cccfec080ea2b2fa" translate="yes" xml:space="preserve">
          <source>Defines the targets all, subdirs, config, and O_FILES</source>
          <target state="translated">Определяет все цели,подкаталоги,конфигурацию и O_FILES.</target>
        </trans-unit>
        <trans-unit id="8d94db57a25050ea2e12e70aa07a67bf9e408e8b" translate="yes" xml:space="preserve">
          <source>Defines the targets distclean, distcheck, skipcheck, manifest, veryclean.</source>
          <target state="translated">Определяет цели distclean,distcheck,skipcheck,manifest,veryclean.</target>
        </trans-unit>
        <trans-unit id="195a11e1aaa7fa1de51a9767e72b1109922bd69b" translate="yes" xml:space="preserve">
          <source>Defines the test targets.</source>
          <target state="translated">Определяет тестовые цели.</target>
        </trans-unit>
        <trans-unit id="e470b7139fcd28a3e03c5dc98122c30f121e0ce7" translate="yes" xml:space="preserve">
          <source>Defining Aliases</source>
          <target state="translated">Определение псевдонимов</target>
        </trans-unit>
        <trans-unit id="a6a4f129ca4af3f95655180a4ab4518f538d8368" translate="yes" xml:space="preserve">
          <source>Defining Encodings</source>
          <target state="translated">Определение Кодировок</target>
        </trans-unit>
        <trans-unit id="8953e978a34af3aa771b28b8a0aeb5a5a9299394" translate="yes" xml:space="preserve">
          <source>Defining multiple constants at once</source>
          <target state="translated">Определение нескольких констант одновременно</target>
        </trans-unit>
        <trans-unit id="0b4d4a2cad4c2c9d7a21a4f7eee774dd37c837d6" translate="yes" xml:space="preserve">
          <source>Defining named patterns</source>
          <target state="translated">Определение именованных шаблонов</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="dc49f81973bcb0957f67dbcb79a0c07904072495" translate="yes" xml:space="preserve">
          <source>Deflate Interface</source>
          <target state="translated">сдувающий интерфейс</target>
        </trans-unit>
        <trans-unit id="261df28b51f1e3a727f3a451d8b97dc502d494f7" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$buffer&lt;/code&gt; . The buffer can either be a scalar or a scalar reference. When finished, &lt;code&gt;$buffer&lt;/code&gt; will be completely processed (assuming there were no errors). If the deflation was successful it returns the deflated output, &lt;code&gt;$out&lt;/code&gt; , and a status value, &lt;code&gt;$status&lt;/code&gt; , of &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">Сдувает содержимое &lt;code&gt;$buffer&lt;/code&gt; . Буфер может быть скалярной или скалярной ссылкой. По завершении &lt;code&gt;$buffer&lt;/code&gt; будет полностью обработан (при условии, что ошибок не было). Если дефляция была успешной, она возвращает спущенный результат, &lt;code&gt;$out&lt;/code&gt; , и значение состояния, &lt;code&gt;$status&lt;/code&gt; , &lt;code&gt;Z_OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88ca554d5d7745bfb195b4e7b44d607bd478a74b" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$input&lt;/code&gt; and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Сдувает содержимое &lt;code&gt;$input&lt;/code&gt; и записывает сжатые данные в &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3ea81ef7609f7aa5b727599becc6a143ff111a6" translate="yes" xml:space="preserve">
          <source>Delete a breakpoint from the specified</source>
          <target state="translated">Удалить точку останова из указанного</target>
        </trans-unit>
        <trans-unit id="5a0073b863c5340c8970662e0be69970f5dfeba8" translate="yes" xml:space="preserve">
          <source>Delete a key and its associated value from the cop hints hash</source>
          <target state="translated">Удалить ключ и связанное с ним значение из хэша подсказок копа</target>
        </trans-unit>
        <trans-unit id="b15c91a025daa3148a7fab7d1733f7a172457b7b" translate="yes" xml:space="preserve">
          <source>Delete all installed actions.</source>
          <target state="translated">Удалить все установленные действия.</target>
        </trans-unit>
        <trans-unit id="bb17fd76f6f5ca7598134cd78f73beaa67a2e6d2" translate="yes" xml:space="preserve">
          <source>Delete all installed breakpoints.</source>
          <target state="translated">Удалить все установленные точки останова.</target>
        </trans-unit>
        <trans-unit id="beaf4b4da8da8ff385c29b6d645eaa115a38d395" translate="yes" xml:space="preserve">
          <source>Delete all post-prompt Perl command actions.</source>
          <target state="translated">Удалить все действия после выполнения команды Perl.</target>
        </trans-unit>
        <trans-unit id="e03ec6135ed6958ecae2c1ff175c05d512e28238" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt Perl command actions.</source>
          <target state="translated">Удалить все предзапрошенные действия команды Perl.</target>
        </trans-unit>
        <trans-unit id="73a7816e302077539cac697491b47392c1d85bee" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt debugger commands.</source>
          <target state="translated">Удалить все команды предварительного отладчика.</target>
        </trans-unit>
        <trans-unit id="2dad01021d565585d1f2142d895d1f8890c02ab1" translate="yes" xml:space="preserve">
          <source>Delete all watch-expressions.</source>
          <target state="translated">Удалить все часовые выражения.</target>
        </trans-unit>
        <trans-unit id="b6f7cb935ade65e12cb5c25c937b996479fb8adb" translate="yes" xml:space="preserve">
          <source>Delete an action from the specified line.</source>
          <target state="translated">Удалить действие из указанной строки.</target>
        </trans-unit>
        <trans-unit id="1226b496f4d499ec434c444cfe660a3f53b36ae9" translate="yes" xml:space="preserve">
          <source>Delete and return the spool.</source>
          <target state="translated">Удалить и вернуть катушку.</target>
        </trans-unit>
        <trans-unit id="ec90a00fac0b965cebb8d69254af765943de97b7" translate="yes" xml:space="preserve">
          <source>Delete it. :-) Seriously, there are a number of (mostly unsatisfactory) solutions with varying levels of &quot;security&quot;.</source>
          <target state="translated">Удалить.:-)Серьезно,существует ряд (в основном неудовлетворительных)решений с различным уровнем &quot;безопасности&quot;.</target>
        </trans-unit>
        <trans-unit id="b819cf6faf3c2dff6669793abe1aba00c76a28d9" translate="yes" xml:space="preserve">
          <source>Delete the element at index</source>
          <target state="translated">Удалить элемент по индексу</target>
        </trans-unit>
        <trans-unit id="c0d51f2b9680b0830421d95140e113f970d690d9" translate="yes" xml:space="preserve">
          <source>Delete the key</source>
          <target state="translated">Удалить ключ</target>
        </trans-unit>
        <trans-unit id="91cc99f3a5b10598f0cfe04276ac8b00d48c8cb4" translate="yes" xml:space="preserve">
          <source>Delete watch-expression</source>
          <target state="translated">Удалить часовое выражение</target>
        </trans-unit>
        <trans-unit id="9ca1c676523afd3f5ee253a9b6c4f5e0ad74e44b" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value SV is removed from the hash, made mortal, and returned to the caller. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">Удаляет пару ключ / значение из хеша. Значение SV удаляется из хеша, становится смертным и возвращается вызывающей стороне. Значение &lt;code&gt;flags&lt;/code&gt; обычно равно нулю; если установлено значение G_DISCARD, будет возвращено NULL. NULL также будет возвращен, если ключ не найден. &lt;code&gt;hash&lt;/code&gt; может быть действительным предварительно вычисленным значением хеш-функции или 0, чтобы запросить его вычисление.</target>
        </trans-unit>
        <trans-unit id="f3c1663e85e551a1c50322e1c209520d893a7af7" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value's SV is removed from the hash, made mortal, and returned to the caller. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found.</source>
          <target state="translated">Удаляет пару ключ / значение из хеша. SV значения удаляется из хэша, становится смертным и возвращается вызывающей стороне. Абсолютное значение &lt;code&gt;klen&lt;/code&gt; - это длина ключа. Если &lt;code&gt;klen&lt;/code&gt; отрицательный, предполагается, что ключ находится в кодировке UTF-8 Unicode. Значение &lt;code&gt;flags&lt;/code&gt; обычно равно нулю; если установлено значение G_DISCARD, будет возвращено NULL. NULL также будет возвращен, если ключ не найден.</target>
        </trans-unit>
        <trans-unit id="b5dd5212aa7a8bc97116e79a014cced26a493225" translate="yes" xml:space="preserve">
          <source>Deletes a list of files. On success, it returns the number of files it successfully deleted. On failure, it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno):</source>
          <target state="translated">Удаляет список файлов. В случае успеха возвращается количество успешно удаленных файлов. В случае неудачи возвращает false и устанавливает &lt;code&gt;$!&lt;/code&gt; (ошибка):</target>
        </trans-unit>
        <trans-unit id="4e992fa1a5f580cdba4aa3e9584f6ceab958d933" translate="yes" xml:space="preserve">
          <source>Deletes the directory specified by FILENAME if that directory is empty. If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). If FILENAME is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Удаляет каталог, указанный в FILENAME, если этот каталог пуст. В случае успеха возвращается истина; в противном случае возвращается false и устанавливается &lt;code&gt;$!&lt;/code&gt; (эррно). Если FILENAME не указан, используется &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ab8b05f803f178aa62996ab1540a40bcd2f3aad" translate="yes" xml:space="preserve">
          <source>Deletes the element indexed by &lt;code&gt;key&lt;/code&gt; from the array, makes the element mortal, and returns it. If &lt;code&gt;flags&lt;/code&gt; equals &lt;code&gt;G_DISCARD&lt;/code&gt; , the element is freed and null is returned. Perl equivalent: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; for the non-&lt;code&gt;G_DISCARD&lt;/code&gt; version and a void-context &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; for the &lt;code&gt;G_DISCARD&lt;/code&gt; version.</source>
          <target state="translated">Удаляет элемент, проиндексированный &lt;code&gt;key&lt;/code&gt; из массива, делает элемент смертным и возвращает его. Если &lt;code&gt;flags&lt;/code&gt; равен &lt;code&gt;G_DISCARD&lt;/code&gt; , элемент освобождается и возвращается null. Эквивалент Perl: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; для версии без &lt;code&gt;G_DISCARD&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; пустого контекста ($ myarray [$ idx]); для версии &lt;code&gt;G_DISCARD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb406e5c9566f12490e972a4db2c13a7645fccc7" translate="yes" xml:space="preserve">
          <source>Deleting directories from @INC</source>
          <target state="translated">Удаление каталогов из @INC</target>
        </trans-unit>
        <trans-unit id="59739df4503a81fc7a23e026605cac8564b8e7df" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">Удаление из &lt;code&gt;%ENV&lt;/code&gt; изменяет среду. При удалении из хэша, привязанного к файлу DBM, удаляется запись из файла DBM. Удаление из &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; хэша или массива не обязательно может ничего вернуть; это зависит от реализации метода DELETE &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; пакета, который может делать все, что угодно.</target>
        </trans-unit>
        <trans-unit id="b2e4bc535959687d920ab6af5070c36f9ba7c865" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">Удаление из &lt;code&gt;%ENV&lt;/code&gt; изменяет среду. При удалении из хэша, привязанного к файлу DBM, удаляется запись из файла DBM. Удаление из &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; хэша или массива не обязательно может ничего вернуть; это зависит от реализации метода DELETE &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; пакета, который может делать все, что угодно.</target>
        </trans-unit>
        <trans-unit id="a29354be8f01aa714635d9e114de856834c56b93" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting 32-bit Windows platform.</source>
          <target state="translated">Поставляет цепочку инструментов gcc,нацеленную на 32-битную платформу Windows.</target>
        </trans-unit>
        <trans-unit id="0b514393b132ed57d195ef9cf7c8664bedd5ba2f" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting both 64-bit Windows and 32-bit Windows platforms (despite the project name &quot;mingw-w64&quot; they are not only 64-bit oriented). They deliver the native gcc compilers and cross-compilers that are also supported by perl's makefile.</source>
          <target state="translated">Предоставляет инструментарий gcc,ориентированный как на 64-битные Windows,так и на 32-битные Windows платформы (несмотря на название проекта &quot;mingw-w64&quot; они не только 64-битные,но и на 64-битные).Они поставляют нативные компиляторы и кросс-компиляторы gcc,которые также поддерживаются makefile perl.</target>
        </trans-unit>
        <trans-unit id="84cba83c5edbd4207cb47e793a734e0fe0e36673" translate="yes" xml:space="preserve">
          <source>Demands a version of Perl specified by VERSION, or demands some semantics specified by EXPR or by &lt;code&gt;$_&lt;/code&gt; if EXPR is not supplied.</source>
          <target state="translated">Требует версию Perl, указанную в VERSION, или требует некоторой семантики, указанной в EXPR или &lt;code&gt;$_&lt;/code&gt; если EXPR не указан.</target>
        </trans-unit>
        <trans-unit id="562e8903063ed8770f6527d563bca3ab2868b0d9" translate="yes" xml:space="preserve">
          <source>Denial of Service</source>
          <target state="translated">Отказ в обслуживании</target>
        </trans-unit>
        <trans-unit id="53577bb5df0ee9b6376e87f4896b6957a25d7a43" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="translated">Deny</target>
        </trans-unit>
        <trans-unit id="2e10904ffd9eaf7871845f0b81c542592ff1e8bd" translate="yes" xml:space="preserve">
          <source>Deny the listed operators from being used when compiling code in the compartment (other operators may still be permitted).</source>
          <target state="translated">Откажитесь от использования перечисленных операторов при составлении кода в отсеке (другие операторы все равно могут быть разрешены).</target>
        </trans-unit>
        <trans-unit id="f3c0cd1438a845e8a503457cb11b112c6a17abfb" translate="yes" xml:space="preserve">
          <source>Dependency on</source>
          <target state="translated">Зависимость от</target>
        </trans-unit>
        <trans-unit id="77dc35303fc487108331e0e6d31fd83790816ff8" translate="yes" xml:space="preserve">
          <source>Dependent libraries can be linked in one of three ways:</source>
          <target state="translated">Зависимые библиотеки могут быть связаны одним из трех способов:</target>
        </trans-unit>
        <trans-unit id="b591a22d82312f2906d4cd0cd73a4a0cc311c02d" translate="yes" xml:space="preserve">
          <source>Depending on how you built/installed perl you may have (otherwise identical) Perl documentation in the following formats:</source>
          <target state="translated">В зависимости от того,как вы собрали/установили perl,у вас может быть (в противном случае идентичная)документация по Perl в следующих форматах:</target>
        </trans-unit>
        <trans-unit id="e46450a9c23e87326a0c62cc3a40e3b23e08ee53" translate="yes" xml:space="preserve">
          <source>Depending on implementation &lt;code&gt;errno&lt;/code&gt; may be &lt;code&gt;EINTR&lt;/code&gt; if operation was interrupted by a signal.</source>
          <target state="translated">В зависимости от реализации &lt;code&gt;errno&lt;/code&gt; может быть &lt;code&gt;EINTR&lt;/code&gt; , если операция была прервана сигналом.</target>
        </trans-unit>
        <trans-unit id="b0be77db14ba94fc033fd30c3cfe8822eacafb87" translate="yes" xml:space="preserve">
          <source>Depending on the current floating point rounding mode, rounds the argument either toward nearest (like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;), toward zero (like &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;), downward (toward negative infinity), or upward (toward positive infinity) [C99].</source>
          <target state="translated">В зависимости от текущего режима округления с плавающей запятой округляет аргумент в сторону ближайшего (например, &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; ), в сторону нуля (например, &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; ), вниз (в сторону отрицательной бесконечности) или вверх (в сторону положительной бесконечности) [C99].</target>
        </trans-unit>
        <trans-unit id="5294c397495f76892ffea877bf2a43e2c328f0cb" translate="yes" xml:space="preserve">
          <source>Depending on the host operating system, the value of &lt;code&gt;$^X&lt;/code&gt; may be a relative or absolute pathname of the perl program file, or may be the string used to invoke perl but not the pathname of the perl program file. Also, most operating systems permit invoking programs that are not in the PATH environment variable, so there is no guarantee that the value of &lt;code&gt;$^X&lt;/code&gt; is in PATH. For VMS, the value may or may not include a version number.</source>
          <target state="translated">В зависимости от операционной системы хоста значение &lt;code&gt;$^X&lt;/code&gt; может быть относительным или абсолютным путем к программному файлу perl или может быть строкой, используемой для вызова Perl, но не именем пути к программному файлу perl. Кроме того, большинство операционных систем позволяют запускать программы, которых нет в переменной среды PATH, поэтому нет гарантии, что значение &lt;code&gt;$^X&lt;/code&gt; находится в PATH. Для VMS значение может включать или не включать номер версии.</target>
        </trans-unit>
        <trans-unit id="08084da944037c3c23ff2e2b90762c637e7da38d" translate="yes" xml:space="preserve">
          <source>Depending on the transformation, you will find that one or more of the following will happen</source>
          <target state="translated">В зависимости от трансформации,вы обнаружите,что один или несколько из следующих событий произойдет</target>
        </trans-unit>
        <trans-unit id="085d0b5e01dcc02f48f2fd13a4f2ed9ebb9054cb" translate="yes" xml:space="preserve">
          <source>Depending on your platform there are various ways of profiling Perl.</source>
          <target state="translated">В зависимости от вашей платформы существуют различные способы профилирования Perl.</target>
        </trans-unit>
        <trans-unit id="a3431b52e6f55419aab8d54a55029192f48ff550" translate="yes" xml:space="preserve">
          <source>Deprecated and removed variables</source>
          <target state="translated">Исключенные и удаленные переменные</target>
        </trans-unit>
        <trans-unit id="300ce95b61785c757e93c6783917abef0bc4ae26" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode. These are characters that expand to more than one character in the specified normalization form, but whether they actually take up more bytes or not depends on the encoding being used. For example, a UTF-8 encoded character may expand to a different number of bytes than a UTF-32 encoded character.</source>
          <target state="translated">Исключено Юникодом.Это символы,которые расширяются до нескольких символов в указанной форме нормализации,но занимают ли они на самом деле больше байт или нет,зависит от используемой кодировки.Например,символ в кодировке UTF-8 может расширяться до другого количества байт,чем символ в кодировке UTF-32.</target>
        </trans-unit>
        <trans-unit id="09e9afac06c928ecd4bc9dc03a49132c263cf3c1" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode: Duplicates ccc=vr (Canonical_Combining_Class=Virama)</source>
          <target state="translated">Исключено Юникодом:Дублирует ccc=vr (Canonical_Combining_Class=Virama)</target>
        </trans-unit>
        <trans-unit id="2c6d79954aa926c28b34d07c6c1b52cea0a4f179" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="56ed58a2ae79c6af374b506410f3fa9662b418b6" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="48807b7130a48604da6050bef16bf05c1f34509f" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e30506988830cd213720be74f34746c5a398ce09" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="869432009229b46aa164c28a7cd2745d9ba962ec" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cdc2b565b6e1d8ec1258567850985d57eddc8117" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b86512fb27d707d0e0edc2d4faed1f32e8d3ffd" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9b872da650d016a5781f8333cf85bdb130b7bcc7" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4dfc61b4c0045c69830c72d4c8a9f14a2de7cb42" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9eae66c65e71bd3522a0efba8a80f39c5e45c530" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d712a49c6b2099faded0c3c79a409ab8379a0967" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">Устаревшая функция, использование которой вызывает предупреждение и которую планируется удалить в будущей версии Perl. Это очень похоже на сопоставление с &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; , которое вы должны преобразовать для использования вместо него. Функция устарела, потому что 1) она неправильно обрабатывает строки в кодировке UTF-8; и 2) он возвращает &lt;code&gt;TRUE&lt;/code&gt; даже если введена пустая строка. Возврат функции всегда основан на текущем языковом стандарте, тогда как использование правил языкового стандарта не является обязательным с регулярным выражением на основе действующих &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;прагм&lt;/a&gt; и модификаторов шаблонов (см. Модификаторы набора символов в perlre и &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Какой модификатор набора символов действует? В perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="77e5e77915f87f5eba641b256db1ec0d6448e365" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.</source>
          <target state="translated">Исключительно на Perl 5.</target>
        </trans-unit>
        <trans-unit id="0447c363038e418e07f3246f8ca43e5cfd53e211" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.10.0</source>
          <target state="translated">Исключено в Perl 5.10.0.</target>
        </trans-unit>
        <trans-unit id="42f0ac3a73aa4ea8f831dc4a897f203beaf75865" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl v5.12.0.</source>
          <target state="translated">Исключено в Perl v5.12.0.</target>
        </trans-unit>
        <trans-unit id="c719d3d031098df68eeee6d64494f02905ae30e2" translate="yes" xml:space="preserve">
          <source>Deprecated method, but does the same as service_check() method.</source>
          <target state="translated">Исключенный метод,но делает то же самое,что и метод service_check().</target>
        </trans-unit>
        <trans-unit id="f82cf002f6b4c932fb0a62e044c473c42a57f99c" translate="yes" xml:space="preserve">
          <source>Deprecated method. Use libscan instead.</source>
          <target state="translated">Исключительный метод.Вместо этого используйте либскан.</target>
        </trans-unit>
        <trans-unit id="296aaa10f5a1032a3fc94ecfb0996dab5a0c7b1f" translate="yes" xml:space="preserve">
          <source>Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Утраченный модуль для загрузки Локаль::Maketext код utf8</target>
        </trans-unit>
        <trans-unit id="b5972c72225aadd112c116405b2c9a8c61f8be67" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_actual_ok&lt;/code&gt; instead.</source>
          <target state="translated">Устарело. &lt;code&gt;is_actual_ok&lt;/code&gt; этого используйте is_actual_ok .</target>
        </trans-unit>
        <trans-unit id="f480918eabb96e1b569421fef2e3056b6e5a48a3" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_ok&lt;/code&gt; instead.</source>
          <target state="translated">Устарело. &lt;code&gt;is_ok&lt;/code&gt; этого используйте is_ok .</target>
        </trans-unit>
        <trans-unit id="8bab31dacd225be342dc45946fc045df33a2d1c4" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;code&gt;is_good_plan&lt;/code&gt; instead.</source>
          <target state="translated">Устарело. &lt;code&gt;is_good_plan&lt;/code&gt; этого используйте is_good_plan .</target>
        </trans-unit>
        <trans-unit id="4880df7da732b64649d73fa94f900ec9f18233e3" translate="yes" xml:space="preserve">
          <source>Deprecating a variable announces the intent of the perl maintainers to eventually remove the variable from the language. It may still be available despite its status. Using a deprecated variable triggers a warning.</source>
          <target state="translated">Удаление переменной объявляет о намерении мейнтейнеров perl в конечном итоге удалить переменную из языка.Она все еще может быть доступна,несмотря на ее статус.Использование устаревшей переменной вызывает предупреждение.</target>
        </trans-unit>
        <trans-unit id="be163eb89f0ec6f8bfe369849331f8a896683818" translate="yes" xml:space="preserve">
          <source>Dereference-address operator. (Perl's prefix dereferencing operators are typed: &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , and &lt;code&gt;&amp;amp;&lt;/code&gt; .)</source>
          <target state="translated">Оператор разыменования адреса. (Операторы разыменования префиксов Perl набираются: &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; и &lt;code&gt;&amp;amp;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="a13dba076abe09205f4d6530500f95233f3d8b89" translate="yes" xml:space="preserve">
          <source>Dereferences an RV to return the SV.</source>
          <target state="translated">Назначает RV,чтобы вернуть SV.</target>
        </trans-unit>
        <trans-unit id="1482ff3cb39b2ab2879a6e8a1d98292788d82730" translate="yes" xml:space="preserve">
          <source>Deregistration is done in this case by calling event_loop with &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as its parameter:</source>
          <target state="translated">В этом случае отмена регистрации выполняется путем вызова event_loop с параметром &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; в качестве параметра:</target>
        </trans-unit>
        <trans-unit id="0ece715d7bfa3a1e4b4b7c2716133b08b5012fe3" translate="yes" xml:space="preserve">
          <source>Derived Normalization Properties</source>
          <target state="translated">Производные свойства нормализации</target>
        </trans-unit>
        <trans-unit id="46565153346c49e93798bd916a2902e7376b3a49" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;</source>
          <target state="translated">Получено из FileHandle.pm Грэмом Барром &amp;lt;</target>
        </trans-unit>
        <trans-unit id="bc5d76c2188dda3e644ef5539acfe2ee659fc494" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;</source>
          <target state="translated">Получено из FileHandle.pm Грэмом Барром &amp;lt;gbarr@pobox.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6f61cc4cb53719b61daa460c7f629eaad048da52" translate="yes" xml:space="preserve">
          <source>Derived from many sources. Some would say</source>
          <target state="translated">Полученные из многих источников.Некоторые скажут,что</target>
        </trans-unit>
        <trans-unit id="f27ae512bfe1f4a041a1bece8dc33e39ce992aa0" translate="yes" xml:space="preserve">
          <source>DerivedNormalizationProps.txt</source>
          <target state="translated">DerivedNormalizationProps.txt</target>
        </trans-unit>
        <trans-unit id="c4477abcc61a8e8691692bd5b2f94edfbc46fd9d" translate="yes" xml:space="preserve">
          <source>Describe what you're doing and how you're doing it, using normal Perl comments.</source>
          <target state="translated">Опишите,что вы делаете и как вы это делаете,используя обычные комментарии на Perl.</target>
        </trans-unit>
        <trans-unit id="34b3e166e1301e0606954d6a55611015e6cbfc1c" translate="yes" xml:space="preserve">
          <source>Describes the format and contents of</source>
          <target state="translated">Описывает формат и содержание</target>
        </trans-unit>
        <trans-unit id="96a98270561c02f5c77d9be37f677cf453421b77" translate="yes" xml:space="preserve">
          <source>Descrip.MMS</source>
          <target state="translated">Descrip.MMS</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="19d71724ac39d6a9fdd91c9d7584648481c9ba90" translate="yes" xml:space="preserve">
          <source>Descriptive editing term&amp;mdash;short for &amp;ldquo;awkward&amp;rdquo;. Also coincidentally refers to a venerable text-processing language from which Perl derived some of its high-level ideas.</source>
          <target state="translated">Термин &amp;laquo;описательное редактирование&amp;raquo; - сокращение от &amp;laquo;неудобно&amp;raquo;. Также по совпадению имеется в виду почтенный язык обработки текста, из которого Perl заимствовал некоторые из своих высокоуровневых идей.</target>
        </trans-unit>
        <trans-unit id="092d175f31c309d86e54ac4890791b68f8011efb" translate="yes" xml:space="preserve">
          <source>Designed to be a method call, and to be overridden by a derived class (i.e. a class which has DynaLoader in its @ISA). The definition in DynaLoader itself returns 0, which produces standard behavior from dl_load_file().</source>
          <target state="translated">Предназначен для вызова метода и переопределения производным классом (т.е.классом,в котором в @ISA есть DynaLoader).Определение в самом DynaLoader возвращает 0,что приводит к стандартному поведению dl_load_file().</target>
        </trans-unit>
        <trans-unit id="59aac4a2c7e327e45b17c4aed3092d9662863e7d" translate="yes" xml:space="preserve">
          <source>Designing your API</source>
          <target state="translated">Проектирование вашего API</target>
        </trans-unit>
        <trans-unit id="2304f50cca1805cd55f5d31750b7fa633b66fe80" translate="yes" xml:space="preserve">
          <source>Desired permission for directories. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">Желаемое разрешение для каталогов. По умолчанию &lt;code&gt;755&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="533cafeb3aa07a126f4d3b8498ce1b5a7bd7a9da" translate="yes" xml:space="preserve">
          <source>Desired permission for executable files. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">Желаемое разрешение для исполняемых файлов. По умолчанию &lt;code&gt;755&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a3e68ecf77d35df71a723c0bb9b9d6b0bcf091b" translate="yes" xml:space="preserve">
          <source>Desired permission for read/writable files. Defaults to &lt;code&gt;644&lt;/code&gt; .</source>
          <target state="translated">Желаемое разрешение для чтения / записи файлов. По умолчанию &lt;code&gt;644&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="369c7a7ce11a967333493247a17fefcaf8782924" translate="yes" xml:space="preserve">
          <source>Despite its name, this calls your system's default documentation viewer on the given page, or on the viewer itself if</source>
          <target state="translated">Несмотря на свое название,это вызывает стандартную программу просмотра документации вашей системы на данной странице,или на самой программе просмотра,если</target>
        </trans-unit>
        <trans-unit id="c89708df88c5d908f88da0373b3c5448a6138264" translate="yes" xml:space="preserve">
          <source>Despite the existence of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, there are still three places where the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator still shines. In fact, in these three places, you</source>
          <target state="translated">Несмотря на наличие &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , есть еще три места, где еще светит &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; оператор. Фактически, в этих трех местах вы</target>
        </trans-unit>
        <trans-unit id="5907dde0a5903ebac0baff736f53c485d9ebcc11" translate="yes" xml:space="preserve">
          <source>Despite the name of the &lt;code&gt;finddepth()&lt;/code&gt; function, both &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;finddepth()&lt;/code&gt; perform a depth-first search of the directory hierarchy.</source>
          <target state="translated">Несмотря на название функции &lt;code&gt;finddepth()&lt;/code&gt; , как &lt;code&gt;find()&lt;/code&gt; и &lt;code&gt;finddepth()&lt;/code&gt; выполняют поиск в глубину иерархии каталогов.</target>
        </trans-unit>
        <trans-unit id="2a5924278d8b7657f3aeb8649ead9475eab91d8f" translate="yes" xml:space="preserve">
          <source>Despite their suggestions in earlier versions of this document the macros &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; are</source>
          <target state="translated">Несмотря на их предложения в более ранних версиях этого документа, макросы &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; являются</target>
        </trans-unit>
        <trans-unit id="bcf6c17f9da73e467a073ac5e6e487e5bdc36429" translate="yes" xml:space="preserve">
          <source>Destructors</source>
          <target state="translated">Destructors</target>
        </trans-unit>
        <trans-unit id="78fbdf14ab60724c2e9f95d677204576dc399f05" translate="yes" xml:space="preserve">
          <source>Destructors may not be called on objects if those objects still exist at global destruction time. If the destructors must be called, make sure there are no circular references and that nothing is referencing the objects, before the program ends.</source>
          <target state="translated">Деструкторы могут не вызываться на объекты,если эти объекты все еще существуют во время глобального разрушения.Если деструкторы должны быть вызваны,убедитесь,что нет круглых ссылок и что ничто не ссылается на объекты,до окончания работы программы.</target>
        </trans-unit>
        <trans-unit id="7f13a5e8324201e8439f86f9e267530c519b5fa1" translate="yes" xml:space="preserve">
          <source>Detach from the shared memory segment that previously has been attached to. Returns true if successful, or false on error. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">Отсоединитесь от сегмента разделяемой памяти, к которому ранее был подключен. Возвращает true в случае успеха или false в случае ошибки. См. &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;Shmdt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6d104f83eda0e6841179588c742c21e25fb6240" translate="yes" xml:space="preserve">
          <source>Detach the shared memory segment located at the address specified by ADDR from the address space of the calling process. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">Отсоедините сегмент разделяемой памяти, расположенный по адресу, указанному ADDR, от адресного пространства вызывающего процесса. См. &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;Shmdt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="524606f1e7f47ed54a2dc7c2ed309c5733e4790f" translate="yes" xml:space="preserve">
          <source>Detailed description of each of the command-line options taken by the program. This should be separate from the description for the use of parsers like &lt;a href=&quot;pod/usage&quot;&gt;Pod::Usage&lt;/a&gt;. This is normally presented as a list, with each option as a separate &lt;code&gt;=item&lt;/code&gt; . The specific option string should be enclosed in B&amp;lt;&amp;gt;. Any values that the option takes should be enclosed in I&amp;lt;&amp;gt;. For example, the section for the option &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">Подробное описание каждой из опций командной строки, используемых программой. Это должно быть отдельно от описания использования парсеров, таких как &lt;a href=&quot;pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt; . Обычно он представлен в виде списка, где каждая опция выделена отдельным &lt;code&gt;=item&lt;/code&gt; . Конкретная строка параметра должна быть заключена в B &amp;lt;&amp;gt;. Любые значения, которые принимает параметр, должны быть заключены в I &amp;lt;&amp;gt;. Например, раздел для опции &lt;b&gt;--section&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="fe13e56081ddb095d18e9d96165e4c91a787dd78" translate="yes" xml:space="preserve">
          <source>Detailed documentation about modules can be found at: &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;, &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt;, &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt;.</source>
          <target state="translated">Подробную документацию по модулям можно найти по адресу: &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; , &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; , &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48efd59016764ae34dbd4dd35254250b9ade50c2" translate="yes" xml:space="preserve">
          <source>Detailed info about trie compilation.</source>
          <target state="translated">Подробная информация о тройной компиляции.</target>
        </trans-unit>
        <trans-unit id="48a5bf693bd8174668fcec90fe1c7747773cff6b" translate="yes" xml:space="preserve">
          <source>Detailed instructions on how to build and install perl extension modules, including XS-type modules, is included. See 'BUILDING AND INSTALLING MODULES'.</source>
          <target state="translated">Подробные инструкции по сборке и установке модулей расширения perl,в том числе модулей типа XS,включены в комплект поставки.См.раздел &quot;Сборка и установка модулей расширения&quot;.</target>
        </trans-unit>
        <trans-unit id="971ecb47b81b9e3ebb8421ed26268b0335343299" translate="yes" xml:space="preserve">
          <source>Detailed signal management. This uses &lt;code&gt;POSIX::SigAction&lt;/code&gt; objects for the &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;oldaction&lt;/code&gt; arguments (the oldaction can also be just a hash reference). Consult your system's &lt;code&gt;sigaction&lt;/code&gt; manpage for details, see also &lt;code&gt;POSIX::SigRt&lt;/code&gt; .</source>
          <target state="translated">Подробное управление сигналами. Здесь используются объекты &lt;code&gt;POSIX::SigAction&lt;/code&gt; для аргументов &lt;code&gt;action&lt;/code&gt; и &lt;code&gt;oldaction&lt;/code&gt; (oldaction также может быть просто ссылкой на хэш). За подробностями обращайтесь к &lt;code&gt;sigaction&lt;/code&gt; по sigaction вашей системы , см. Также &lt;code&gt;POSIX::SigRt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c9fa89519b1cc82f7ef4510c084ac4535cbb9b1" translate="yes" xml:space="preserve">
          <source>Details are in &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Подробная информация находится в &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote и Quote-like Operators в perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ba741c6d40d9b34740b66e9f99ec546651895d0" translate="yes" xml:space="preserve">
          <source>Details changes to Locale::Codes</source>
          <target state="translated">Подробности изменения в Локаль::Коды</target>
        </trans-unit>
        <trans-unit id="79ba379e83c3a5e1a2d0279f940c57dc6c7027f0" translate="yes" xml:space="preserve">
          <source>Detect the user's language preferences</source>
          <target state="translated">Определите языковые предпочтения пользователя</target>
        </trans-unit>
        <trans-unit id="4e04b164f775f2394cd7b257c789eeab3703bf40" translate="yes" xml:space="preserve">
          <source>Determination of Perl Library and Installation Locations</source>
          <target state="translated">Определение библиотеки Perl и мест установки</target>
        </trans-unit>
        <trans-unit id="428b80cb8395cadc1a038a4e4bdb2355d7bb3c54" translate="yes" xml:space="preserve">
          <source>Determination of whether $BSD_STYLE should be set is left as an exercise to the reader.</source>
          <target state="translated">Определение того,следует ли устанавливать $BSD_STYLE,оставляется читателю в качестве упражнения.</target>
        </trans-unit>
        <trans-unit id="25d8f9f38f16f8b5a3c700d3bd4a5cd28a740860" translate="yes" xml:space="preserve">
          <source>Determine if the server supports the specified feature. The return value is a list of lines the server responded with to describe the options that it supports for the given feature. If the feature is unsupported then the empty list is returned.</source>
          <target state="translated">Определите,поддерживает ли сервер указанную функцию.Возвращаемое значение представляет собой список строк,которыми ответил сервер для описания опций,поддерживаемых им для данной функции.Если функция не поддерживается,возвращается пустой список.</target>
        </trans-unit>
        <trans-unit id="46c27646774eae185d5079b386367766995dfee9" translate="yes" xml:space="preserve">
          <source>Determine libraries to use and how to use them</source>
          <target state="translated">Определить,какие библиотеки использовать и как их использовать.</target>
        </trans-unit>
        <trans-unit id="bfbb294be56602dd8d5e0f86c6b7c3dc8fd0ef0f" translate="yes" xml:space="preserve">
          <source>Determine the full paths (including file suffix) of one or more loadable files given their generic names and optionally one or more directories. Searches directories in @dl_library_path by default and returns an empty list if no files were found.</source>
          <target state="translated">Определите полные пути (включая суффикс файла)одного или нескольких загружаемых файлов с учетом их общих имен и,опционально,одного или нескольких каталогов.Поиск каталогов в каталоге @dl_library_path по умолчанию и возвращает пустой список,если файлы не были найдены.</target>
        </trans-unit>
        <trans-unit id="c47d159fd2f7d84a2dc5b895afa17d3e1c470e9d" translate="yes" xml:space="preserve">
          <source>Determine whether a file is native to Cygwin by checking whether it resides inside the Cygwin installation (using Windows paths). If so, use &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; to determine if it may be a command. Otherwise use the tests from &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; .</source>
          <target state="translated">Определите, является ли файл собственным для Cygwin, проверив, находится ли он внутри установки Cygwin (используя пути Windows). Если это так, используйте &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; чтобы определить, может ли это быть командой. В противном случае используйте тесты из &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a35731d2a8f0fd508c5b03e1f3c340b65af8b100" translate="yes" xml:space="preserve">
          <source>Determines if man pages should be generated and initializes MAN1PODS and MAN3PODS as appropriate.</source>
          <target state="translated">Определяет,следует ли генерировать man-страницы,и инициализирует &quot;МАН1ПОДЫ&quot; и &quot;МАН3ПОДЫ&quot; соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="32b2b5cefa4d496f2ffa711bf6d062b35a6183bc" translate="yes" xml:space="preserve">
          <source>Determines if the given &lt;code&gt;$thing&lt;/code&gt; can be used as a filehandle.</source>
          <target state="translated">Определяет, может ли данная &lt;code&gt;$thing&lt;/code&gt; использоваться как дескриптор файла.</target>
        </trans-unit>
        <trans-unit id="81c97d633f09f436c3551fc2f985b2dd31ceb89b" translate="yes" xml:space="preserve">
          <source>Determines if the two hashes contain the same keys and values. This is a deep check.</source>
          <target state="translated">Определяет,содержат ли два хэша одинаковые ключи и значения.Это глубокая проверка.</target>
        </trans-unit>
        <trans-unit id="02bc22cbed7ebf5c21902f1d116056eb9bbd8381" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the failure in case it is successful. This color defaults to &lt;code&gt;'red'&lt;/code&gt; .</source>
          <target state="translated">Определяет &lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; для сбоя в случае успеха. По умолчанию &lt;code&gt;'red'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46421b429d7fbec4c32a7efe5539900fa9227686" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the summary in case it is successful. This color defaults to &lt;code&gt;'green'&lt;/code&gt; .</source>
          <target state="translated">Определяет &lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; для сводки в случае успеха. По умолчанию &lt;code&gt;'green'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99525db85549ac64cdd5cb889d480f43dfc76de6" translate="yes" xml:space="preserve">
          <source>Determines the accessibility of a file.</source>
          <target state="translated">Определяет доступность файла.</target>
        </trans-unit>
        <trans-unit id="0ac6e93aa78866241a9a1ea97a746deee7e73a8e" translate="yes" xml:space="preserve">
          <source>Determines typemaps, xsubpp version, prototype behaviour.</source>
          <target state="translated">Определяет типовые карты,версию xsubpp,поведение прототипа.</target>
        </trans-unit>
        <trans-unit id="f07a1f637abae6218e8a7802badc87cffd6df457" translate="yes" xml:space="preserve">
          <source>Determines whether you do the left &lt;b&gt;operator&lt;/b&gt; first or the right &lt;b&gt;operator&lt;/b&gt; first when you have &amp;ldquo;A &lt;b&gt;operator&lt;/b&gt; B &lt;b&gt;operator&lt;/b&gt; C&amp;rdquo;, and the two operators are of the same precedence. Operators like &lt;code&gt;+&lt;/code&gt; are left associative, while operators like &lt;code&gt;**&lt;/code&gt; are right associative. See Camel chapter 3, &amp;ldquo;Unary and Binary Operators&amp;rdquo; for a list of operators and their associativity.</source>
          <target state="translated">Определяет, выполняете ли вы сначала левый &lt;b&gt;оператор&lt;/b&gt; или сначала правый &lt;b&gt;оператор,&lt;/b&gt; если у вас есть &amp;laquo; &lt;b&gt;оператор&lt;/b&gt; A, &lt;b&gt;оператор&lt;/b&gt; B, &lt;b&gt;оператор&lt;/b&gt; C&amp;raquo;, и оба оператора имеют одинаковый приоритет. Такие операторы, как &lt;code&gt;+&lt;/code&gt; , являются левоассоциативными, а операторы вроде &lt;code&gt;**&lt;/code&gt; - правоассоциативными. См. Главу 3 Camel &amp;laquo;Унарные и бинарные операторы&amp;raquo; для получения списка операторов и их ассоциативности.</target>
        </trans-unit>
        <trans-unit id="d1c8bafa598045542a6e12bdae08698fa56ba1b8" translate="yes" xml:space="preserve">
          <source>Determines which of the sets of installation directories to choose: perl, site or vendor. Defaults to site.</source>
          <target state="translated">Определяет,какой из наборов установочных каталогов выбрать:perl,сайт или поставщика.По умолчанию для сайта.</target>
        </trans-unit>
        <trans-unit id="bba5b2e65a661d27394fb8c061d3d51455420899" translate="yes" xml:space="preserve">
          <source>Determining the Context</source>
          <target state="translated">Определение контекста</target>
        </trans-unit>
        <trans-unit id="3ecab9eb72cc6dfc1bcb8e4baecb3e17d8edcf33" translate="yes" xml:space="preserve">
          <source>Devel.U</source>
          <target state="translated">Devel.U</target>
        </trans-unit>
        <trans-unit id="d8c39aea2543b8523b0f33dbb117b8a3d9253fb8" translate="yes" xml:space="preserve">
          <source>Devel::DProf</source>
          <target state="translated">Devel::DProf</target>
        </trans-unit>
        <trans-unit id="ccde7e8b696b5ea06bba6178d203f16332d8acef" translate="yes" xml:space="preserve">
          <source>Devel::FastProf</source>
          <target state="translated">Devel::FastProf</target>
        </trans-unit>
        <trans-unit id="11215cfa0c659675e0e4ea40e3abc5e714feee1f" translate="yes" xml:space="preserve">
          <source>Devel::NYTProf</source>
          <target state="translated">Devel::NYTProf</target>
        </trans-unit>
        <trans-unit id="93fefc93ea4e5ce72e46483e30bdcdb72752bc35" translate="yes" xml:space="preserve">
          <source>Devel::PPPort</source>
          <target state="translated">Devel::PPPort</target>
        </trans-unit>
        <trans-unit id="7ffae19dcafff8088943ef185c49a680d59a15ac" translate="yes" xml:space="preserve">
          <source>Devel::PPPort - Perl/Pollution/Portability</source>
          <target state="translated">Devel::PPPort-Perl/Загрязнение/портативность</target>
        </trans-unit>
        <trans-unit id="3921057b50b0060084d8d65b7996993cf1ed9750" translate="yes" xml:space="preserve">
          <source>Devel::Peek</source>
          <target state="translated">Devel::Peek</target>
        </trans-unit>
        <trans-unit id="e14a96c568c781af1b5e318bd4b44427491f52d9" translate="yes" xml:space="preserve">
          <source>Devel::Peek - A data debugging tool for the XS programmer</source>
          <target state="translated">Devel::Peek-инструмент отладки данных для программиста XS</target>
        </trans-unit>
        <trans-unit id="591a540c3f692dc8379dc38f7e57b50c1e10292e" translate="yes" xml:space="preserve">
          <source>Devel::Peek contains functions which allows raw Perl datatypes to be manipulated from a Perl script. This is used by those who do XS programming to check that the data they are sending from C to Perl looks as they think it should look. The trick, then, is to know what the raw datatype is supposed to look like when it gets to Perl. This document offers some tips and hints to describe good and bad raw data.</source>
          <target state="translated">Devel::Peek содержит функции,которые позволяют манипулировать необработанными типами данных на Perl из Perl скрипта.Она используется теми,кто занимается программированием XS,для проверки того,что данные,которые они посылают с C на Perl,выглядят так,как они думают,что они должны выглядеть.Тогда хитрость заключается в том,чтобы узнать,как должен выглядеть необработанный тип данных,когда они попадают на Perl.Этот документ предлагает несколько советов и подсказок для описания хороших и плохих сырых данных.</target>
        </trans-unit>
        <trans-unit id="db1f06d5f74de3011e9cc4bc49d43cef041da2cf" translate="yes" xml:space="preserve">
          <source>Devel::Peek supplies a &lt;code&gt;Dump()&lt;/code&gt; function which can dump a raw Perl datatype, and &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &quot;frozen&quot; into inactive &lt;code&gt;CV&lt;/code&gt; . Devel::Peek also supplies &lt;code&gt;SvREFCNT()&lt;/code&gt; which can query reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the &lt;code&gt;Dump()&lt;/code&gt; function.</source>
          <target state="translated">Devel :: Peek предоставляет функцию &lt;code&gt;Dump()&lt;/code&gt; которая может выгружать необработанный тип данных Perl, и &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; для отчета об использовании памяти (если Perl скомпилирован с соответствующей опцией). Функция DeadCode () предоставляет статистику по данным, &amp;laquo;замороженным&amp;raquo; в неактивном &lt;code&gt;CV&lt;/code&gt; . Devel :: Peek также предоставляет &lt;code&gt;SvREFCNT()&lt;/code&gt; которая может запрашивать количество ссылок на SV. В этом документе будет использован пассивный и безопасный подход к отладке данных, и для этого будет описана только функция &lt;code&gt;Dump()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd06cacef5c6992e80eae6f0b88092dd28458a5a" translate="yes" xml:space="preserve">
          <source>Devel::Profiler</source>
          <target state="translated">Devel::Profiler</target>
        </trans-unit>
        <trans-unit id="4b6535e01c52786d4e3f3ca2b00ca3272e9f6d30" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber</source>
          <target state="translated">Devel::SelfStubber</target>
        </trans-unit>
        <trans-unit id="b5469167c418142a031a1a19dcd7b0ac06472cae" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber - generate stubs for a SelfLoading module</source>
          <target state="translated">Devel::SelfStubber-генерация заглушек для модуля SelfLoading.</target>
        </trans-unit>
        <trans-unit id="c12151c156a6bb57f46bf2cfabec163c1bfc0f60" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber prints the stubs you need to put in the module before the __DATA__ token (or you can get it to print the entire module with stubs correctly placed). The stubs ensure that if a method is called, it will get loaded. They are needed specifically for inherited autoloaded methods.</source>
          <target state="translated">Devel::SelfStubber печатает заглушки,которые необходимо поместить в модуль перед маркером __DATA__(или вы можете заставить его распечатать весь модуль с правильно размещенными заглушками).Шлейфы гарантируют,что в случае вызова метода,он будет загружен.Они нужны специально для унаследованных автозагрузочных методов.</target>
        </trans-unit>
        <trans-unit id="842dcd37ebf74b06348dc557d220529763bf8eb5" translate="yes" xml:space="preserve">
          <source>Devel::SmallProf</source>
          <target state="translated">Devel::SmallProf</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="d9ffe88162ace37c72e458ee67a70fb3d18d4395" translate="yes" xml:space="preserve">
          <source>Development Support</source>
          <target state="translated">Поддержка развития</target>
        </trans-unit>
        <trans-unit id="f0c7babf29efe97f8e794e98c4e99a03a18a4c41" translate="yes" xml:space="preserve">
          <source>Device major number in case of a special file</source>
          <target state="translated">Основной номер устройства в случае специального файла</target>
        </trans-unit>
        <trans-unit id="2c941665c705f296265e4a2b31a60000a96baced" translate="yes" xml:space="preserve">
          <source>Device minor number in case of a special file</source>
          <target state="translated">Незначительный номер устройства в случае специального файла</target>
        </trans-unit>
        <trans-unit id="ee7b51236ed970aee0667e1f1fe4a778ffb14074" translate="yes" xml:space="preserve">
          <source>Diagnostic messages derive from the</source>
          <target state="translated">Диагностические сообщения выводятся из</target>
        </trans-unit>
        <trans-unit id="3af2279f9e306acd0a4644e2b0f2f48a1e06d8d9" translate="yes" xml:space="preserve">
          <source>Diagnostics</source>
          <target state="translated">Diagnostics</target>
        </trans-unit>
        <trans-unit id="e12e989f1fa699061a1906fb84c40da51f94d183" translate="yes" xml:space="preserve">
          <source>Diagnostics: - &quot;Illegal state option: %s&quot;</source>
          <target state="translated">Диагностика:-&quot;Опция &quot;Незаконное состояние&quot;:%s&quot;.</target>
        </trans-unit>
        <trans-unit id="24aeba6cea55e3491e6f6e028d622f79e9da9608" translate="yes" xml:space="preserve">
          <source>Did we mention that you should definitely consider using the &lt;b&gt;use warnings&lt;/b&gt; pragma?</source>
          <target state="translated">Мы упоминали, что вам обязательно стоит подумать об &lt;b&gt;использовании&lt;/b&gt; прагмы &lt;b&gt;use&lt;/b&gt; warnings?</target>
        </trans-unit>
        <trans-unit id="9b6cbb2dd2135deb31b16770182a2ec8c70c6f29" translate="yes" xml:space="preserve">
          <source>Did you really want to know? :-) For more gory details on getting regular expressions to work, have a look at &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;, and to decode the mysterious labels (BOL and CURLYN, etc. above), see &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt;.</source>
          <target state="translated">Вы действительно хотели знать? :-) Чтобы получить более подробные сведения о том, как заставить регулярные выражения работать, взгляните на &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; , &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; , а для расшифровки таинственных меток (BOL и CURLYN и т. Д. Выше) см. &lt;a href=&quot;perldebguts&quot;&gt;Perldebguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c365b19f02fa9700446bb2dfae00cddef737c1ed" translate="yes" xml:space="preserve">
          <source>Did you run your programs with &lt;code&gt;-w&lt;/code&gt; switch? See &lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;2 (and DOS) programs under Perl in Starting OS&lt;/a&gt;.</source>
          <target state="translated">Вы запускали свои программы с ключом &lt;code&gt;-w&lt;/code&gt; ? См. &lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;2 программы (и DOS) в Perl в разделе &amp;laquo;Запуск ОС&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c44a0b6cfa2e8e8711c5a9b4665955570db35afc" translate="yes" xml:space="preserve">
          <source>Didn't anyone ever tell you web-page hit counters were useless? They don't count number of hits, they're a waste of time, and they serve only to stroke the writer's vanity. It's better to pick a random number; they're more realistic.</source>
          <target state="translated">Разве никто никогда не говорил тебе,что счетчики хитов на веб-страницах бесполезны? Они не считают количество хитов,они пустая трата времени,и служат только для того,чтобы погладить тщеславие писателя.Лучше выбрать случайное число,они более реалистичны.</target>
        </trans-unit>
        <trans-unit id="de35dca213966232628ded8b499a88baf25eec19" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM, except don't change the behavior for signals which are already trapped or ignored:</source>
          <target state="translated">Умирайте на HUP,INT,PIPE или TERM,только не изменяйте поведение сигналов,которые уже находятся в ловушке или игнорируются:</target>
        </trans-unit>
        <trans-unit id="0b65dd725b89443cd082d2b1fbb5c871c07b811a" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM:</source>
          <target state="translated">Умри на HUP,INT,PIPE или TERM:</target>
        </trans-unit>
        <trans-unit id="7370d007d2f0750cfcb06f3ae1a311fa8ce10185" translate="yes" xml:space="preserve">
          <source>Die on INT or QUIT:</source>
          <target state="translated">Умри во время INT или QUIT:</target>
        </trans-unit>
        <trans-unit id="de3e3f090fef16d61db17c82fcb979d37ca68a0d" translate="yes" xml:space="preserve">
          <source>Die on receipt one of an of the &lt;b&gt;normal-signals&lt;/b&gt; which is currently &lt;b&gt;untrapped&lt;/b&gt;, provide a stack trace on receipt of &lt;b&gt;any&lt;/b&gt; of the &lt;b&gt;error-signals&lt;/b&gt;:</source>
          <target state="translated">Die при получении одного из &lt;b&gt;нормальных сигналов,&lt;/b&gt; который в настоящее время не &lt;b&gt;перехвачен&lt;/b&gt; , обеспечивает трассировку стека при получении &lt;b&gt;любого&lt;/b&gt; из &lt;b&gt;сигналов ошибки&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="ba441dab8e607c94b508525a17abee026d45b519" translate="yes" xml:space="preserve">
          <source>Dies if something fails. Does not return anything useful.</source>
          <target state="translated">Умирает,если что-то не получается.Не возвращает ничего полезного.</target>
        </trans-unit>
        <trans-unit id="f81677da87b912ca4cbc2adcd260fa40bc3569e4" translate="yes" xml:space="preserve">
          <source>Dies on invalid arguments.</source>
          <target state="translated">Умирает от недействительных аргументов.</target>
        </trans-unit>
        <trans-unit id="ff49095a95255fd00fd15d75e6567dd8a12a4746" translate="yes" xml:space="preserve">
          <source>Dies with &quot;QUITing...&quot; if WM_QUIT message is obtained.</source>
          <target state="translated">Умирает с сообщением &quot;QUITing...&quot;,если получено сообщение WM_QUIT.</target>
        </trans-unit>
        <trans-unit id="4df44d1ca612254d8b6146ed208bbeb09ddfe82a" translate="yes" xml:space="preserve">
          <source>Dies with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</source>
          <target state="translated">Умирает с &lt;code&gt;@message&lt;/code&gt; , но сообщение будет появляться из точки, где была вызвана исходная тестовая функция ( &lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb0b600e20a7af68665f367d76b7faa7b80ba746" translate="yes" xml:space="preserve">
          <source>Difference between &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt;</source>
          <target state="translated">Разница между &lt;code&gt;load&lt;/code&gt; и &lt;code&gt;autoload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f4478706dbd396a43de3090b3f058233138f6af" translate="yes" xml:space="preserve">
          <source>Difference between load and autoload</source>
          <target state="translated">Разница между нагрузкой и автозагрузкой</target>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="38024e12015fb8cbceae437a2c486569781a63ed" translate="yes" xml:space="preserve">
          <source>Differences from Perl 6</source>
          <target state="translated">Отличия от Perl 6</target>
        </trans-unit>
        <trans-unit id="331cb030b664a4d11f924279069f94d488d3faa3" translate="yes" xml:space="preserve">
          <source>Different CPUs store integers and floating point numbers in different orders (called</source>
          <target state="translated">Разные процессоры хранят целые числа и числа с плавающей запятой в разных порядках (называемых</target>
        </trans-unit>
        <trans-unit id="2bda7000c880740a37cbf94090331ac6cabf1bab" translate="yes" xml:space="preserve">
          <source>Different definitions of Perl are given in &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;, &lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt; and no doubt other places. From this we can determine that Perl is different things to different people, but that lots of people think it's at least worth writing about.</source>
          <target state="translated">Различные определения Perl даются в &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt; , &lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt; и, без сомнения, в других местах. Исходя из этого, мы можем определить, что Perl - это разные вещи для разных людей, но многие думают, что о нем хотя бы стоит писать.</target>
        </trans-unit>
        <trans-unit id="7dccaaf84bf4def2fd87e2d3e385599fbd55f83d" translate="yes" xml:space="preserve">
          <source>Different escape characters can be specified for different delimiters. For example, to specify that '/' is the escape for single quotes and '%' is the escape for double quotes:</source>
          <target state="translated">Для различных разделителей могут быть заданы различные экранирующие символы.Например,для указания,что '/' является экранирующим символом для одиночных кавычек,а '%'-экранирующим символом для двойных кавычек:</target>
        </trans-unit>
        <trans-unit id="f9a49cb812bf417ffcc0cc6f39c98fe84fa2ebdf" translate="yes" xml:space="preserve">
          <source>Different handles can have different buffering schemes. The &quot;top&quot; layer could be the &quot;mmap&quot; layer if reading disk files was quicker using &lt;code&gt;mmap&lt;/code&gt; than &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;. An &quot;unbuffered&quot; stream can be implemented simply by not having a buffer layer.</source>
          <target state="translated">Различные дескрипторы могут иметь разные схемы буферизации. &amp;laquo;Верхним&amp;raquo; слоем мог бы быть слой &amp;laquo;mmap&amp;raquo;, если бы чтение файлов на диске с использованием &lt;code&gt;mmap&lt;/code&gt; было быстрее, чем &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; . &amp;laquo;Небуферизованный&amp;raquo; поток можно реализовать, просто не имея буферного уровня.</target>
        </trans-unit>
        <trans-unit id="ee681ba258c7b2da3e8972edb7ba868618d14b60" translate="yes" xml:space="preserve">
          <source>Different implementations of threads</source>
          <target state="translated">Различные реализации потоков</target>
        </trans-unit>
        <trans-unit id="e3379dfb99801372d7cddbcebddb248079f56470" translate="yes" xml:space="preserve">
          <source>Different low-level libraries use different formats to store the numbers. However, you should &lt;b&gt;NOT&lt;/b&gt; depend on the number having a specific format internally.</source>
          <target state="translated">Различные низкоуровневые библиотеки используют разные форматы для хранения чисел. Однако вы &lt;b&gt;НЕ&lt;/b&gt; должны зависеть от числа, имеющего определенный внутренний формат.</target>
        </trans-unit>
        <trans-unit id="968ef79ccdd769ce74761479fe855c0adf257d6a" translate="yes" xml:space="preserve">
          <source>Different packages may implement different levels of debug but a non-zero value results in copies of all commands and responses also being sent to STDERR.</source>
          <target state="translated">Различные пакеты могут реализовывать разные уровни отладки,но ненулевое значение приводит к тому,что копии всех команд и ответов также отправляются в STDERR.</target>
        </trans-unit>
        <trans-unit id="8f55cf4436cb1eaf5bfcf390f661558255ea8243" translate="yes" xml:space="preserve">
          <source>Differing widths can cause truncation even between platforms of equal endianness. The platform of shorter width loses the upper parts of the number. There is no good solution for this problem except to avoid transferring or storing raw binary numbers.</source>
          <target state="translated">Различная ширина может привести к усечению даже между платформами одинаковой эндианности.Площадка меньшей ширины теряет верхнюю часть числа.Хорошего решения этой проблемы нет,кроме как избежать передачи или хранения необработанных двоичных чисел.</target>
        </trans-unit>
        <trans-unit id="248216e8bd5493fa776c21a71aab73557a333ad5" translate="yes" xml:space="preserve">
          <source>Dig into a bunch of modules to see how they're written. I'd suggest starting with &lt;a href=&quot;text/tabs&quot;&gt;Text::Tabs&lt;/a&gt;, since it's in the standard library and is nice and simple, and then looking at something a little more complex like &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt;. For object oriented code, &lt;code&gt;WWW::Mechanize&lt;/code&gt; or the &lt;code&gt;Email::*&lt;/code&gt; modules provide some good examples.</source>
          <target state="translated">Изучите кучу модулей, чтобы увидеть, как они написаны. Я бы посоветовал начать с &lt;a href=&quot;text/tabs&quot;&gt;Text :: Tabs&lt;/a&gt; , так как он находится в стандартной библиотеке, приятный и простой, а затем взглянуть на что-то более сложное, например &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; . Для объектно-ориентированного кода модули &lt;code&gt;WWW::Mechanize&lt;/code&gt; или &lt;code&gt;Email::*&lt;/code&gt; предоставляют несколько хороших примеров.</target>
        </trans-unit>
        <trans-unit id="47fdd58bee4dc86df2b978107102a22b9c44345b" translate="yes" xml:space="preserve">
          <source>Digest</source>
          <target state="translated">Digest</target>
        </trans-unit>
        <trans-unit id="3bd067b7b9ba0e3842954b342b6e04b9508a77ac" translate="yes" xml:space="preserve">
          <source>Digest - Modules that calculate message digests</source>
          <target state="translated">Дайджест-модули,рассчитывающие дайджесты сообщений.</target>
        </trans-unit>
        <trans-unit id="4c9cbdb7c115f81acd2c0edba69fb8ccce5eb45e" translate="yes" xml:space="preserve">
          <source>Digest base class</source>
          <target state="translated">Базовый класс дайджеста</target>
        </trans-unit>
        <trans-unit id="3cd23511cf79299d4bb6923e10fe169a355c096e" translate="yes" xml:space="preserve">
          <source>Digest implementations might want to inherit from this class to get this implementations of the alternative</source>
          <target state="translated">Дайджест реализации,возможно,захотят унаследовать от данного класса,чтобы получить данную реализацию альтернативы</target>
        </trans-unit>
        <trans-unit id="f2dd6f444a52ab6eb8232c6d9cf3d9b6b63eeb3b" translate="yes" xml:space="preserve">
          <source>Digest speed</source>
          <target state="translated">Скорость дайджеста</target>
        </trans-unit>
        <trans-unit id="3263622a2f40559c02778432d6fee146399b6225" translate="yes" xml:space="preserve">
          <source>Digest::MD5</source>
          <target state="translated">Digest::MD5</target>
        </trans-unit>
        <trans-unit id="cc981cf57197ab4f6949f081dbfc7ac803760c7a" translate="yes" xml:space="preserve">
          <source>Digest::MD5 - Perl interface to the MD5 Algorithm</source>
          <target state="translated">Дайджест::MD5-Perl интерфейс к алгоритму MD5</target>
        </trans-unit>
        <trans-unit id="10a5bb250c6cf1bbf42816d48c87400d9e093658" translate="yes" xml:space="preserve">
          <source>Digest::SHA</source>
          <target state="translated">Digest::SHA</target>
        </trans-unit>
        <trans-unit id="b4c92820a2ed37105ded93f12e77864cbec95f5b" translate="yes" xml:space="preserve">
          <source>Digest::SHA - Perl extension for SHA-1/224/256/384/512</source>
          <target state="translated">Дайджест::SHA-Perl расширение для SHA-1/224/256/384/512</target>
        </trans-unit>
        <trans-unit id="af0465342315c6f4795df27a00078fb3582cb96c" translate="yes" xml:space="preserve">
          <source>Digest::SHA is a complete implementation of the NIST Secure Hash Standard. It gives Perl programmers a convenient way to calculate SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256 message digests. The module can handle all types of input, including partial-byte data.</source>
          <target state="translated">Дайджест::SHA является полной реализацией стандарта NIST Secure Hash Standard.Она предоставляет Perl программистам удобный способ расчета дайджестов сообщений SHA-1,SHA-224,SHA-256,SHA-384,SHA-512,SHA-512/224 и SHA-512/256.Модуль может обрабатывать все типы ввода,в том числе и частично-байтовые данные.</target>
        </trans-unit>
        <trans-unit id="bac9dbc726cb5a61beb1d19b4dd6e34bff1be212" translate="yes" xml:space="preserve">
          <source>Digest::SHA is written in C for speed. If your platform lacks a C compiler, you can install the functionally equivalent (but much slower) &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt; module.</source>
          <target state="translated">Digest :: SHA написан на C для скорости. Если на вашей платформе отсутствует компилятор C, вы можете установить функционально эквивалентный (но намного более медленный) модуль &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfe5335cdbe39b8c32cfd3452cb43174a1ee9bb2" translate="yes" xml:space="preserve">
          <source>Digest::base</source>
          <target state="translated">Digest::base</target>
        </trans-unit>
        <trans-unit id="4bbbfedd2eb308dc398c540fc645898c082db6ea" translate="yes" xml:space="preserve">
          <source>Digest::base - Digest base class</source>
          <target state="translated">Дайджест::базовый-Дайджест базовый класс</target>
        </trans-unit>
        <trans-unit id="e1e35cd383e349a46e8ddfc8d07b7e38dc9e4a97" translate="yes" xml:space="preserve">
          <source>Digest::file</source>
          <target state="translated">Digest::file</target>
        </trans-unit>
        <trans-unit id="b818bfd43f1dc832b02e92b31d19ae9f904b4bd8" translate="yes" xml:space="preserve">
          <source>Digest::file - Calculate digests of files</source>
          <target state="translated">Дайджест::file-Рассчитать дайджесты файлов</target>
        </trans-unit>
        <trans-unit id="2260ce49306460c8a2ef501939f29ad6ddd4e934" translate="yes" xml:space="preserve">
          <source>Digits</source>
          <target state="translated">Digits</target>
        </trans-unit>
        <trans-unit id="392f94d8c0ee92db7ab40a881f035b7ef8b3746d" translate="yes" xml:space="preserve">
          <source>DirHandle</source>
          <target state="translated">DirHandle</target>
        </trans-unit>
        <trans-unit id="aef108ac2030e9cea15c6f1ceb48f01986539dc6" translate="yes" xml:space="preserve">
          <source>DirHandle - supply object methods for directory handles</source>
          <target state="translated">DirHandle-методы поставки объектов для дескрипторов каталогов</target>
        </trans-unit>
        <trans-unit id="a91d0156df1ec1e83f412872b05e19d16ad2c59a" translate="yes" xml:space="preserve">
          <source>Direct pointer to the end of the chunk of text currently being lexed, the end of the lexer buffer. This is equal to &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr)
+ SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; . A &lt;code&gt;NUL&lt;/code&gt; character (zero octet) is always located at the end of the buffer, and does not count as part of the buffer's contents.</source>
          <target state="translated">Прямой указатель на конец фрагмента текста, обрабатываемого в настоящий момент, - конец буфера лексического анализатора. Это равно &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; . &lt;code&gt;NUL&lt;/code&gt; символ (нулевой октет) всегда находится в конце буфера, и не считаются частью содержимого буфера.</target>
        </trans-unit>
        <trans-unit id="e2d9e8785d5c2cebf71e5748cc2d6f34072adbf8" translate="yes" xml:space="preserve">
          <source>Direct questions, comments, and the unlikely bug report (ahem) direct comments toward:</source>
          <target state="translated">Прямые вопросы,комментарии и маловероятное сообщение об ошибке (кхм)прямые комментарии:</target>
        </trans-unit>
        <trans-unit id="8a2fa68d6fded8ba99af776dc79ad66973228a51" translate="yes" xml:space="preserve">
          <source>Direction constants for shutdown().</source>
          <target state="translated">Константы направления для shutdown().</target>
        </trans-unit>
        <trans-unit id="ffa4d14a55fc893b2ab2feb24f1bb9f16a27d9ef" translate="yes" xml:space="preserve">
          <source>Directions for building and installing Perl 5 can be found in the file</source>
          <target state="translated">Указания по сборке и установке Perl 5 можно найти в файле</target>
        </trans-unit>
        <trans-unit id="51f9bdfd8404ef77fb1c128863bdee0a96774dbf" translate="yes" xml:space="preserve">
          <source>Directories are ignored, an appropriate warning message is printed.</source>
          <target state="translated">Каталоги игнорируются,печатается соответствующее предупредительное сообщение.</target>
        </trans-unit>
        <trans-unit id="d9839139cdba0a7db66d992a8c07d9dc5203a709" translate="yes" xml:space="preserve">
          <source>Directories specified by &lt;b&gt;-I&lt;/b&gt; are prepended to the search path for modules (&lt;code&gt;@INC&lt;/code&gt; ).</source>
          <target state="translated">Каталоги, указанные параметром &lt;b&gt;-I&lt;/b&gt; , добавляются к пути поиска модулей ( &lt;code&gt;@INC&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="695ad0d98ef4334944f61b185dd4cedab03431f6" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl library to use.</source>
          <target state="translated">Каталог,содержащий библиотеку Perl для использования.</target>
        </trans-unit>
        <trans-unit id="95a5114dd29380dd2a8b633c45e0a67842ace3e1" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl source code (use of this should be avoided, it may be undefined)</source>
          <target state="translated">Каталог,содержащий исходный код Perl (его следует избегать,он может быть неопределенным).</target>
        </trans-unit>
        <trans-unit id="49814c07ff871d1c05234bf7b576b8bfa6483482" translate="yes" xml:space="preserve">
          <source>Directory handles may also support PerlIO layers in the future.</source>
          <target state="translated">Ручки каталогов могут также поддерживать слои PerlIO в будущем.</target>
        </trans-unit>
        <trans-unit id="09979766f57286773702fe196a375f672c98b714" translate="yes" xml:space="preserve">
          <source>Directory must be removed by the caller.</source>
          <target state="translated">Каталог должен быть удален вызывающим абонентом.</target>
        </trans-unit>
        <trans-unit id="e9f3ae68dab67380725d57ac9230f0a6c7e277d2" translate="yes" xml:space="preserve">
          <source>Directory removal</source>
          <target state="translated">Снятие каталога</target>
        </trans-unit>
        <trans-unit id="446909c0385bc8ceaa4d872dd39cb651160d24b1" translate="yes" xml:space="preserve">
          <source>Directory to hold the man pages at 'make' time</source>
          <target state="translated">Справочник для хранения man-страниц во время &quot;создания&quot;.</target>
        </trans-unit>
        <trans-unit id="6951835d54be6094b23c719fecd95aa744851441" translate="yes" xml:space="preserve">
          <source>Directory to install binary files (e.g. tkperl) into if INSTALLDIRS=perl.</source>
          <target state="translated">Каталог для установки двоичных файлов (например,tkperl)в if INSTALLDIRS=perl.</target>
        </trans-unit>
        <trans-unit id="f55462ba8ed88c62d4efa472f0b3d16ca9cba3f9" translate="yes" xml:space="preserve">
          <source>Directory to put real binary files during 'make'. These will be copied to INSTALLBIN during 'make install'</source>
          <target state="translated">Каталог для размещения реальных бинарных файлов во время 'make'.Они будут скопированы в INSTALLBIN во время 'make install'.</target>
        </trans-unit>
        <trans-unit id="071097b28577ccaebcb95a281a66ed180c8224bf" translate="yes" xml:space="preserve">
          <source>Directory under which core modules are to be installed.</source>
          <target state="translated">Каталог,под которым должны быть установлены основные модули.</target>
        </trans-unit>
        <trans-unit id="a1829f4e2522a379a57e6dfeb7e4bf98545786dd" translate="yes" xml:space="preserve">
          <source>Directory where executable files should be installed during 'make'. Defaults to &quot;./blib/script&quot;, just to have a dummy location during testing. make install will copy the files in INST_SCRIPT to INSTALLSCRIPT.</source>
          <target state="translated">Каталог,в который во время 'make' должны быть установлены исполняемые файлы.По умолчанию &quot;./blib/script&quot;,только для того,чтобы иметь фиктивное место во время тестирования.make install скопирует файлы в INST_SCRIPT в INSTALLSCRIPT.</target>
        </trans-unit>
        <trans-unit id="2bd8b42725452a5bb1746b479050ce94dd36efe4" translate="yes" xml:space="preserve">
          <source>Directory where the build process takes place?</source>
          <target state="translated">Каталог,где происходит процесс сборки?</target>
        </trans-unit>
        <trans-unit id="78138bb545451a59f614c602f7ae3ba02571d724" translate="yes" xml:space="preserve">
          <source>Directory where to store default options/environment/dialogs for building modules that need some customization?</source>
          <target state="translated">Каталог,где хранить опции/окружение/диалоги по умолчанию для сборки модулей,которые нуждаются в некоторой настройке?</target>
        </trans-unit>
        <trans-unit id="71663d8624a61b44d95ba8a53379fea18cf31f0c" translate="yes" xml:space="preserve">
          <source>Directory where we put library files of this extension while building it.</source>
          <target state="translated">Каталог,в который мы помещаем библиотечные файлы этого расширения при его создании.</target>
        </trans-unit>
        <trans-unit id="008aa84379adaa3dd9f1114985629c6f39ced51e" translate="yes" xml:space="preserve">
          <source>Directory, or more exact the &lt;code&gt;@INC&lt;/code&gt; entry, where the module was loaded from.</source>
          <target state="translated">Каталог, а точнее запись &lt;code&gt;@INC&lt;/code&gt; , откуда модуль был загружен.</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="7b77fba35f95b8f8ec9c281444e53fe94ce4da2b" translate="yes" xml:space="preserve">
          <source>Directs output to &lt;code&gt;FILENAME&lt;/code&gt; instead of standard output.</source>
          <target state="translated">Направляет вывод в &lt;code&gt;FILENAME&lt;/code&gt; вместо стандартного вывода.</target>
        </trans-unit>
        <trans-unit id="f9e08e65dda5f2824f9fa498ff452471e29c1363" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt; , and the POSIX classes from working correctly on Unicode either in this scope, or in just one regex.</source>
          <target state="translated">Отключите &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; и классы POSIX от правильной работы в Юникоде либо в этой области, либо только в одном регулярном выражении.</target>
        </trans-unit>
        <trans-unit id="817740799f0d65e523f96e31146ff1b9a88ee16c" translate="yes" xml:space="preserve">
          <source>Disable caching of timings for the null loop. This will force Benchmark to recalculate these timings for each new piece of code timed.</source>
          <target state="translated">Отключить кэширование таймингов для нулевого цикла.Это заставит Benchmark пересчитывать эти тайминги для каждого нового фрагмента кода,приуроченного к нулю.</target>
        </trans-unit>
        <trans-unit id="c0a292f0da006ba870af4c1d4b16af058ca27ce9" translate="yes" xml:space="preserve">
          <source>Disable executing</source>
          <target state="translated">Отключение исполнения</target>
        </trans-unit>
        <trans-unit id="0f85246ff2faf69d64165e4047fc800c58a2cc74" translate="yes" xml:space="preserve">
          <source>Disable named opcodes when compiling perl code</source>
          <target state="translated">Отключить именованные опкоды при компиляции perl кода</target>
        </trans-unit>
        <trans-unit id="97739e76ec287fa7ebbb95b29230f3316099f8ec" translate="yes" xml:space="preserve">
          <source>Disable prototype checking. With this option, all function calls are deparsed as if no prototype was defined for them. In other words,</source>
          <target state="translated">Отключить проверку прототипа.При этой опции все вызовы функций отклоняются так,как будто для них не был определен прототип.Другими словами,</target>
        </trans-unit>
        <trans-unit id="0756161fd02ffa6bd8c4dec248d5a916201550e6" translate="yes" xml:space="preserve">
          <source>Disable recognition of &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations.</source>
          <target state="translated">Отключить распознавание объявлений &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; и &lt;code&gt;INOUT_LIST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac791b2af5b20a7fb1078462c2f338c31498cb30" translate="yes" xml:space="preserve">
          <source>Disable recognition of ANSI-like descriptions of function signature.</source>
          <target state="translated">Отключить распознавание ANSI-подобных описаний сигнатуры функции.</target>
        </trans-unit>
        <trans-unit id="bbc86eb1194adefaf0a1a0eedb3b0d823e6663f7" translate="yes" xml:space="preserve">
          <source>Disable the breakpoint so it won't stop the execution of the program. Breakpoints are enabled by default and can be re-enabled using the &lt;code&gt;enable&lt;/code&gt; command.</source>
          <target state="translated">Отключите точку останова, чтобы она не останавливала выполнение программы. Точки останова включены по умолчанию и могут быть повторно включены с помощью команды &lt;code&gt;enable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18ee854e40ed47f3fd86995a561be7f6fe2416aa" translate="yes" xml:space="preserve">
          <source>Disables all warnings regardless of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt; . See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Отключает все предупреждения , независимо от &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; или &lt;code&gt;$^W&lt;/code&gt; . См. &lt;a href=&quot;warnings&quot;&gt;Предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a78ebbaecc11dc8858ab9929654aabcca4fd0610" translate="yes" xml:space="preserve">
          <source>Disables certain optimizations. The only optimization that is currently affected is the use of</source>
          <target state="translated">Отключает некоторые оптимизации.Единственная оптимизация,которая в настоящее время затронута,это использование</target>
        </trans-unit>
        <trans-unit id="3eddfd0331ebc78a06dd4671eddadcbb2519e22b" translate="yes" xml:space="preserve">
          <source>Disables only specific overloads in the current lexical scope.</source>
          <target state="translated">Отключает только специфические перегрузки в текущем лексическом диапазоне.</target>
        </trans-unit>
        <trans-unit id="27215af8e0aec9a7df486127f2e81d5c3743979c" translate="yes" xml:space="preserve">
          <source>Disables overloading entirely in the current lexical scope.</source>
          <target state="translated">Полностью отключает перегрузку в текущем лексическом диапазоне.</target>
        </trans-unit>
        <trans-unit id="0596b396338d526562980a39b883df16ed14f799" translate="yes" xml:space="preserve">
          <source>Disables the run time test that determines if the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number.</source>
          <target state="translated">Отключает тест во время выполнения, который определяет, имеют ли объектный файл (производный от файла &lt;code&gt;.xs&lt;/code&gt; ) и файлы &lt;code&gt;.pm&lt;/code&gt; одинаковый номер версии.</target>
        </trans-unit>
        <trans-unit id="0445bc1eebafe74da8f782bf383cb56524959c04" translate="yes" xml:space="preserve">
          <source>Disabling an extension</source>
          <target state="translated">Отключение удлинителя</target>
        </trans-unit>
        <trans-unit id="3b823ca5f6c5e18ee6590dd73a0071ccec8a63ba" translate="yes" xml:space="preserve">
          <source>Disabling or changing &amp;lt;no&amp;gt; behaviour</source>
          <target state="translated">Отключение или изменение поведения &amp;lt;no&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5aad62ff519a93497721c0514d33f638c9796188" translate="yes" xml:space="preserve">
          <source>Disabling or changing &lt;no&gt; behaviour&lt;/no&gt;</source>
          <target state="translated">Отключение или изменение &lt;no&gt; поведение&lt;/no&gt;</target>
        </trans-unit>
        <trans-unit id="ec79b0e24c53783c0d5b0048b7cc030c1e7e99b1" translate="yes" xml:space="preserve">
          <source>Disabling these ops is a</source>
          <target state="translated">Отключение этих оперативно-розыскных мероприятий -</target>
        </trans-unit>
        <trans-unit id="c32542195526d9e4b30393cfd896527d786a1f51" translate="yes" xml:space="preserve">
          <source>Disambiguation rules between old-style octal escapes and backreferences</source>
          <target state="translated">Правила дезактивации между октальными побегами в старом стиле и обратными ссылками</target>
        </trans-unit>
        <trans-unit id="51495d55ca3fbe873cb079ee818ab001144b1050" translate="yes" xml:space="preserve">
          <source>Discard the cop hints hash</source>
          <target state="translated">Отбросьте полицейские намеки на хэш.</target>
        </trans-unit>
        <trans-unit id="1ce92351c84d19187a09db0e7cf0340daa95578b" translate="yes" xml:space="preserve">
          <source>Discards text about to be lexed, from &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; up to</source>
          <target state="translated">Отбрасывает текст, который будет лексирован, от &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; до</target>
        </trans-unit>
        <trans-unit id="d6266f69af30213e087e1c977c0114fa6d50dbc1" translate="yes" xml:space="preserve">
          <source>Discards the buffering of the standard output and standard errors for return by run_forked(). With this option you have to use the std*_handlers to read what the command outputs. Useful for commands that send a lot of output.</source>
          <target state="translated">Отбрасывает буферизацию стандартного вывода и стандартные ошибки для возврата функцией run_forked().С помощью этой опции вы должны использовать std*_handlers для чтения того,что выводит команда.Полезно для команд,которые посылают много вывода.</target>
        </trans-unit>
        <trans-unit id="a0327deb8b4ad4a89521ac79b1906db45d49787c" translate="yes" xml:space="preserve">
          <source>Discards the first part of the &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt; buffer, up to</source>
          <target state="translated">Отбрасывает первую часть буфера &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt; , до</target>
        </trans-unit>
        <trans-unit id="06279c3d633238719d4311a1e19a71a158169a40" translate="yes" xml:space="preserve">
          <source>Discouraged comparison functions</source>
          <target state="translated">Отсутствие функций сравнения</target>
        </trans-unit>
        <trans-unit id="a1e132aa8b84b9d862e794881468080b3307770a" translate="yes" xml:space="preserve">
          <source>Discovering the usefulness of the &quot;command.com&quot; shell on Windows 9x is left as an exercise to the reader :)</source>
          <target state="translated">Открытие полезности оболочки &quot;command.com&quot; в Windows 9x оставлено в качестве упражнения для читателя :)</target>
        </trans-unit>
        <trans-unit id="5e5164803920ddcf3cce5890834f1bdb27f23ebc" translate="yes" xml:space="preserve">
          <source>Discussed briefly in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;.</source>
          <target state="translated">Кратко обсуждается в &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;разделе &amp;laquo;Коды форматирования в perlpod&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b63dec48ea2c8f9c76b3edf144110430c933947" translate="yes" xml:space="preserve">
          <source>Display all (or some) lexical variables (mnemonic: &lt;code&gt;mY&lt;/code&gt; variables) in the current scope or</source>
          <target state="translated">Показать все (или некоторые) лексические переменные (мнемонические: &lt;code&gt;mY&lt;/code&gt; - переменные) в текущей области или</target>
        </trans-unit>
        <trans-unit id="4d6a8893695a223720d1351409d3d6fa85617a70" translate="yes" xml:space="preserve">
          <source>Display all (or some) variables in package (defaulting to &lt;code&gt;main&lt;/code&gt; ) using a data pretty-printer (hashes show their keys and values so you see what's what, control characters are made printable, etc.). Make sure you don't put the type specifier (like &lt;code&gt;$&lt;/code&gt; ) there, just the symbol names, like this:</source>
          <target state="translated">Отобразите все (или некоторые) переменные в пакете (по умолчанию - &lt;code&gt;main&lt;/code&gt; ) с помощью data pretty-printer (хэши показывают их ключи и значения, чтобы вы видели, что к чему, управляющие символы сделаны для печати и т. Д.). Убедитесь, что вы не указали спецификатор типа (например, &lt;code&gt;$&lt;/code&gt; ), а только имена символов, например:</target>
        </trans-unit>
        <trans-unit id="b044b119358695832cdfad98824f0069cebfc548" translate="yes" xml:space="preserve">
          <source>Display all loaded modules and their versions.</source>
          <target state="translated">Отображение всех загруженных модулей и их версий.</target>
        </trans-unit>
        <trans-unit id="be430952d1c69c4ef4bad908fd0595a0f079554c" translate="yes" xml:space="preserve">
          <source>Display all options.</source>
          <target state="translated">Отобразить все варианты.</target>
        </trans-unit>
        <trans-unit id="27dde643a5c3a4ac6eac908a83f780f2958f01e6" translate="yes" xml:space="preserve">
          <source>Display and Dump functions</source>
          <target state="translated">Функции отображения и сброса</target>
        </trans-unit>
        <trans-unit id="b1f4cfc5d23e7e9d95f619a69bc6c81069e91cc2" translate="yes" xml:space="preserve">
          <source>Display docs using plain &lt;b&gt;t&lt;/b&gt;ext converter, instead of nroff. This may be faster, but it probably won't look as nice.</source>
          <target state="translated">Отобразите документы, используя обычный конвертер &lt;b&gt;t&lt;/b&gt; ext вместо nroff. Это может быть быстрее, но, вероятно, будет выглядеть не так красиво.</target>
        </trans-unit>
        <trans-unit id="1261f72eada707fc4383acb7f8be5b3e61a1c948" translate="yes" xml:space="preserve">
          <source>Display last n commands. Only commands longer than one character are listed. If</source>
          <target state="translated">Отобразить последние n команд.Перечисляются только команды длиннее одного символа.Если</target>
        </trans-unit>
        <trans-unit id="f40755e392f1a9eb6ccdf55b73455fd0fd00a49a" translate="yes" xml:space="preserve">
          <source>Display mostly harmless warning messages (default behaviour). But this is not the same as &quot;verbose&quot; mode.</source>
          <target state="translated">Отображать в основном безобидные предупреждающие сообщения (поведение по умолчанию).Но это не то же самое,что &quot;подробный&quot; режим.</target>
        </trans-unit>
        <trans-unit id="7c1e20933a7ba1da896199ecdf785fc25a2b5f9c" translate="yes" xml:space="preserve">
          <source>Display on&lt;b&gt;l&lt;/b&gt;y the file name of the module found.</source>
          <target state="translated">Вывести на &lt;b&gt;l&lt;/b&gt; y имя файла найденного модуля.</target>
        </trans-unit>
        <trans-unit id="93569833439ae0502fb8e64a1c4e865ec5d04cb7" translate="yes" xml:space="preserve">
          <source>Display only the given routine and its descendants in the profile.</source>
          <target state="translated">Отображать в профиле только данную рутину и ее потомков.</target>
        </trans-unit>
        <trans-unit id="cb765f562c6dc517c9adc9d4c794809e94e26d02" translate="yes" xml:space="preserve">
          <source>Display progress messages.</source>
          <target state="translated">Отображать сообщения о прогрессе.</target>
        </trans-unit>
        <trans-unit id="465a2527c50c93058895db46b538af503815f183" translate="yes" xml:space="preserve">
          <source>Display progress messages. By default, they won't be displayed.</source>
          <target state="translated">Отображать сообщения о прогрессе.По умолчанию они не будут отображаться.</target>
        </trans-unit>
        <trans-unit id="d2e6e56a1e2419c84dc382818c82354f4cd202e5" translate="yes" xml:space="preserve">
          <source>Display routines that have zero usage.</source>
          <target state="translated">Отображение процедур,которые имеют нулевое использование.</target>
        </trans-unit>
        <trans-unit id="a772b3b9f6d01bc9a870a18de9715b85da4f33c7" translate="yes" xml:space="preserve">
          <source>Display the entire module: both code and unformatted pod documentation. This may be useful if the docs don't explain a function in the detail you need, and you'd like to inspect the code directly; perldoc will find the file for you and simply hand it off for display.</source>
          <target state="translated">Отображение всего модуля:как кода,так и неформатированной документации по подставке.Это может быть полезно,если документация не объясняет нужную вам функцию в деталях,и вы хотите посмотреть код напрямую;perldoc найдет файл для вас и просто передаст его для отображения.</target>
        </trans-unit>
        <trans-unit id="d3972efaa9a06280feba956085fc524f4b645f44" translate="yes" xml:space="preserve">
          <source>Display the version numbers of the loaded &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; and the current Perl.</source>
          <target state="translated">Отобразите номера версий загруженного &lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; и текущего Perl.</target>
        </trans-unit>
        <trans-unit id="3b39d5abe0218469782f16f6cb4d35f226bb7201" translate="yes" xml:space="preserve">
          <source>Displaying Unicode As Text</source>
          <target state="translated">Отображение юникода в виде текста</target>
        </trans-unit>
        <trans-unit id="a65d13adc77fe56d8d077ba085d484794c846340" translate="yes" xml:space="preserve">
          <source>Displays a short help</source>
          <target state="translated">Отображает краткую справку</target>
        </trans-unit>
        <trans-unit id="6782149c8f0e6f7b18c7f34e52e8afce81669558" translate="yes" xml:space="preserve">
          <source>Displays a warning that an old packlist file was found. Reads the filename from @ARGV.</source>
          <target state="translated">Отображает предупреждение о том,что был найден старый файл пакетного списка.Читает имя файла из @ARGV.</target>
        </trans-unit>
        <trans-unit id="d1f928489a20ced31a182ea00abdcc0e1f7a238c" translate="yes" xml:space="preserve">
          <source>Displays the current value(s) for this config variable. Without KEY, displays all subcommands and config variables.</source>
          <target state="translated">Отображает текущие значения для этой переменной конфигурации.Без KEY отображает все подкоманды и конфигурационные переменные.</target>
        </trans-unit>
        <trans-unit id="0bcd71b641eec7cadbed7fed072672f0582b39a0" translate="yes" xml:space="preserve">
          <source>Displays the usage message.</source>
          <target state="translated">Отображает сообщение об использовании.</target>
        </trans-unit>
        <trans-unit id="5298b75576f02dfd7e64f80d327144afcfdb191f" translate="yes" xml:space="preserve">
          <source>Displays the version of perldoc you're running.</source>
          <target state="translated">Отображает версию перлдока,которую вы запускаете.</target>
        </trans-unit>
        <trans-unit id="dcdc8e69179a75bcf860bec40f205ba043a0369b" translate="yes" xml:space="preserve">
          <source>Distantly based on LWP::Base64 written by Martijn Koster &amp;lt;m.koster@nexor.co.uk&amp;gt; and Joerg Reichelt &amp;lt;j.reichelt@nexor.co.uk&amp;gt; and code posted to comp.lang.perl &amp;lt;3pd2lp$6gf@wsinti07.win.tue.nl&amp;gt; by Hans Mulder &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</source>
          <target state="translated">Отдельно основан на LWP :: Base64, написанном Мартином Костером &amp;lt;m.koster@nexor.co.uk&amp;gt; и Йоргом Райхелтом &amp;lt;j.reichelt@nexor.co.uk&amp;gt;, и кодом, опубликованным на comp.lang.perl &amp;lt;3pd2lp $ 6gf @ wsinti07.win.tue.nl&amp;gt; Ганса Малдера &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9483453ac3c647a5e6dee71efaa493b08294daa7" translate="yes" xml:space="preserve">
          <source>Distribution Conditions</source>
          <target state="translated">Условия распределения</target>
        </trans-unit>
        <trans-unit id="955afbb21394efe51b98a6970c7c1927cbe40fd4" translate="yes" xml:space="preserve">
          <source>Distribution Support</source>
          <target state="translated">Дистрибьюторская поддержка</target>
        </trans-unit>
        <trans-unit id="41c838f5416206dabaa8d6ac86a72e962e587d49" translate="yes" xml:space="preserve">
          <source>Distribution objects are normally distributions from the CPAN, but there is a slightly degenerate case for Distribution objects, too, of projects held on the local disk. These distribution objects have the same name as the local directory and end with a dot. A dot by itself is also allowed for the current directory at the time CPAN.pm was used. All actions such as &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; , and &lt;code&gt;install&lt;/code&gt; are applied directly to that directory. This gives the command &lt;code&gt;cpan .&lt;/code&gt; an interesting touch: while the normal mantra of installing a CPAN module without CPAN.pm is one of</source>
          <target state="translated">Объекты распределения обычно являются дистрибутивами из CPAN, но есть и несколько вырожденный случай для объектов распределения, когда проекты хранятся на локальном диске. Эти объекты распространения имеют то же имя, что и локальный каталог, и заканчиваются точкой. Сама по себе точка также разрешена для текущего каталога во время использования CPAN.pm. Все действия, такие как &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; и &lt;code&gt;install&lt;/code&gt; , применяются непосредственно к этому каталогу. Это дает команду &lt;code&gt;cpan .&lt;/code&gt; интересный штрих: в то время как обычная мантра установки модуля CPAN без CPAN.pm является одним из</target>
        </trans-unit>
        <trans-unit id="381764d96f9c586b529fc1b74bf3dd86052ae745" translate="yes" xml:space="preserve">
          <source>Distributions on CPAN usually behave according to what we call the CPAN mantra. Or since the advent of Module::Build we should talk about two mantras:</source>
          <target state="translated">Распределения на CPAN обычно ведут себя в соответствии с тем,что мы называем мантрой CPAN.Или с момента появления Module::Build мы должны говорить о двух мантрах:</target>
        </trans-unit>
        <trans-unit id="c58180206bebfb6ee0df954b757a9830a178426b" translate="yes" xml:space="preserve">
          <source>Distroprefs</source>
          <target state="translated">Distroprefs</target>
        </trans-unit>
        <trans-unit id="7f01fb80f7dde34a76219740c5d0000d7751aa19" translate="yes" xml:space="preserve">
          <source>Ditto for stringifying large arrays:</source>
          <target state="translated">Это то же самое,что и для строк больших массивов:</target>
        </trans-unit>
        <trans-unit id="8cd08c454640891385c7eeea6dddbb915e9a2b00" translate="yes" xml:space="preserve">
          <source>Ditto:</source>
          <target state="translated">Ditto:</target>
        </trans-unit>
        <trans-unit id="f2faddc4fbc208e1d7b96a4fcac1f5f9f8a3944b" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">Как &lt;b&gt;не&lt;/b&gt; называть &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (т.е. без аргумента) больше , чем один раз в процессе. Внутреннее состояние генератора случайных чисел должно содержать больше энтропии, чем может быть предоставлено любым семенем, поэтому на самом деле вызов &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; снова</target>
        </trans-unit>
        <trans-unit id="b6baf1cd7e0ea413825fb96a05b09305653a8842" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">Как &lt;b&gt;не&lt;/b&gt; называть &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (т.е. без аргумента) больше , чем один раз в процессе. Внутреннее состояние генератора случайных чисел должно содержать больше энтропии, чем может быть предоставлено любым семенем, поэтому на самом деле вызов &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; снова</target>
        </trans-unit>
        <trans-unit id="8508e09e1cab910629d8f92dab302c9bc18cac38" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export anything else by default without a good reason!</source>
          <target state="translated">Есть &lt;b&gt;не&lt;/b&gt; что - либо экспортировать еще по умолчанию без уважительной причины!</target>
        </trans-unit>
        <trans-unit id="2a361ce7ad694ec0575786e4a58744501e47d3dd" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export method names!</source>
          <target state="translated">Вы &lt;b&gt;не&lt;/b&gt; экспортировать имена методов!</target>
        </trans-unit>
        <trans-unit id="825725dbe42c2936cefeada5723d97075e056f4d" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[A-Z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">Как &lt;b&gt;не&lt;/b&gt; использовать &lt;code&gt;/[A-Z]/&lt;/code&gt; если вы не заботитесь о текущей локали.</target>
        </trans-unit>
        <trans-unit id="18fe50d08f696cfe6f092de82e112424369b684e" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[a-z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">Как &lt;b&gt;не&lt;/b&gt; использовать &lt;code&gt;/[a-z]/&lt;/code&gt; если вы не заботитесь о текущей локали.</target>
        </trans-unit>
        <trans-unit id="4ce4e2d8b8b0faeef7d3ea74accd64d2ba130eb9" translate="yes" xml:space="preserve">
          <source>Do I always/never have to quote my strings or use semicolons and commas?</source>
          <target state="translated">Всегда ли мне/никогда не нужно цитировать мои строки или использовать точки с запятыми и точки с запятой?</target>
        </trans-unit>
        <trans-unit id="07601d161d4355e711962a451be3c55fe86fbe5c" translate="yes" xml:space="preserve">
          <source>Do I need to recompile XS modules when there is a change in the C library?</source>
          <target state="translated">Нужно ли перекомпилировать модули XS при изменении в библиотеке C?</target>
        </trans-unit>
        <trans-unit id="8546c498c3dd38d7f1d8d67ef0863373cb431c32" translate="yes" xml:space="preserve">
          <source>Do NOT export anything else by default without a good reason!</source>
          <target state="translated">НЕ экспортируйте ничего другого по умолчанию без уважительной причины!</target>
        </trans-unit>
        <trans-unit id="88b10d4e2bda0943ded9669f6a8c9aebc17a12e8" translate="yes" xml:space="preserve">
          <source>Do NOT export method names!</source>
          <target state="translated">НЕ экспортируйте названия методов!</target>
        </trans-unit>
        <trans-unit id="ed2715ba8e6286e3dce7c7be35eeaefa5a5cc3c5" translate="yes" xml:space="preserve">
          <source>Do case-insensitive pattern matching.</source>
          <target state="translated">Сделайте совпадение без учета регистра.</target>
        </trans-unit>
        <trans-unit id="8d3df5a42cb6127acc1472a5755378b0af34defd" translate="yes" xml:space="preserve">
          <source>Do magic after a value is assigned to the SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Делайте магию после того, как SV присвоено значение. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cee9756153198a0ee3de2adeb5f31d39d574306f" translate="yes" xml:space="preserve">
          <source>Do magic before a value is retrieved from the SV. The type of SV must be &amp;gt;= SVt_PVMG. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">Сделайте магию до того, как значение будет получено из SV. Тип SV должен быть&amp;gt; = SVt_PVMG. См. &lt;code&gt;sv_magic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fef68e8141e36a039846619d70d364b0a422b18f" translate="yes" xml:space="preserve">
          <source>Do not assume an operating system indicates a certain compiler.</source>
          <target state="translated">Не предполагайте,что операционная система указывает на определенный компилятор.</target>
        </trans-unit>
        <trans-unit id="4b3370a4321afc9f66c3f426894b720b8a225d1f" translate="yes" xml:space="preserve">
          <source>Do not assume anything about the ordering of the characters. The lowercase letters may come before or after the uppercase letters; the lowercase and uppercase may be interlaced so that both &quot;a&quot; and &quot;A&quot; come before &quot;b&quot;; the accented and other international characters may be interlaced so that &amp;auml; comes before &quot;b&quot;. &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to sort this all out.</source>
          <target state="translated">Не предполагайте ничего о порядке символов. Строчные буквы могут стоять до или после прописных букв; строчные и прописные буквы могут чередоваться так, чтобы и &amp;laquo;a&amp;raquo;, и &amp;laquo;A&amp;raquo; стояли перед &amp;laquo;b&amp;raquo;; символы с диакритическими знаками и другие международные символы могут чередоваться, так что &amp;auml; стоит перед &amp;laquo;b&amp;raquo;. &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; можно использовать, чтобы разобраться во всем этом.</target>
        </trans-unit>
        <trans-unit id="dac7429f341d431a762410206ac5527a2c13dd2f" translate="yes" xml:space="preserve">
          <source>Do not assume that the alphabetic characters are encoded contiguously (in the numeric sense). There may be gaps. Special coding in Perl, however, guarantees that all subsets of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; behave as expected. &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; behaves the same for these ranges. In patterns, any ranges specified with end points using the &lt;code&gt;\N{...}&lt;/code&gt; notations ensures character set portability, but it is a bug in Perl v5.22, that this isn't true of &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не предполагайте, что буквенные символы закодированы непрерывно (в числовом смысле). Могут быть пробелы. Однако специальное кодирование в Perl гарантирует, что все подмножества &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; будут вести себя должным образом. &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ведет себя одинаково для этих диапазонов. В шаблонах любые диапазоны, указанные с конечными точками с использованием нотации &lt;code&gt;\N{...}&lt;/code&gt; обеспечивают переносимость набора символов, но это ошибка в Perl v5.22, что это не верно для &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f01c64ee23b1bfc4362dd512948a4c4fa009da9" translate="yes" xml:space="preserve">
          <source>Do not attempt navigation using these formulas.</source>
          <target state="translated">Не пытайтесь использовать навигацию по этим формулам.</target>
        </trans-unit>
        <trans-unit id="ffd84d731582ea7d72196f877c4d6066a632e557" translate="yes" xml:space="preserve">
          <source>Do not attempt to use this class directly. It won't make sense. It's mainly here to ensure that we will be able to have pluggable grammars when TAP is expanded at some future date (plus, this stuff was really cluttering the parser).</source>
          <target state="translated">Не пытайтесь использовать этот класс напрямую.Это не имеет смысла.Это в основном здесь для того,чтобы гарантировать,что мы сможем иметь подключаемые грамматики,когда TAP будет расширен в какой-то момент в будущем (плюс,эта штука действительно загромождала парсер).</target>
        </trans-unit>
        <trans-unit id="a6238adeeaec74412446adc0c315e47aa64f6eff" translate="yes" xml:space="preserve">
          <source>Do not be fooled into thinking that &lt;code&gt;(SV *) 0&lt;/code&gt; is the same as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; . Take this code:</source>
          <target state="translated">Не обманывайте себя, думая, что &lt;code&gt;(SV *) 0&lt;/code&gt; то же самое, что &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; . Возьмите этот код:</target>
        </trans-unit>
        <trans-unit id="97a265c0f5840a121cb5af7015adcf66dbf43685" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не рассматривайте &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; для аутентификации: он не так безопасен, как &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="954cdfa947d07289fc8fa65c61c967074b46849c" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не рассматривайте &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; для аутентификации: он не так безопасен, как &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed5342da7dbe2644918b11220f17d8dfd65b045" translate="yes" xml:space="preserve">
          <source>Do not create header and footer blocks containing the text of the &quot;NAME&quot; section (default behaviour).</source>
          <target state="translated">Не создавайте заголовочные и нижние колонтитулы,содержащие текст раздела &quot;ИМЯ&quot; (поведение по умолчанию).</target>
        </trans-unit>
        <trans-unit id="de14526162a79000113ce8e06bb2051044d9251f" translate="yes" xml:space="preserve">
          <source>Do not declare variables using &quot;register&quot;. It may be counterproductive with modern compilers, and is deprecated in C++, under which the Perl source is regularly compiled.</source>
          <target state="translated">Не объявляйте переменные через &quot;регистр&quot;.Это может быть контрпродуктивно при использовании современных компиляторов,и устарело в языке Си++,под которым регулярно компилируется Perl.</target>
        </trans-unit>
        <trans-unit id="ba5b70f1f2a742c5a3d1b2680eb5b21ac617899b" translate="yes" xml:space="preserve">
          <source>Do not display progress messages (default behaviour).</source>
          <target state="translated">Не отображать сообщения о прогрессе (поведение по умолчанию).</target>
        </trans-unit>
        <trans-unit id="1d7af785bc11d859051058972cf4b5ed10f4c0f8" translate="yes" xml:space="preserve">
          <source>Do not expect clock_nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">Не ожидайте,что функция clock_nanosleep()будет точна до одной наносекунды.Получение равномерной точности в тысячу наносекунд-это хорошо.</target>
        </trans-unit>
        <trans-unit id="80ec845571b8ce066af485fa387b9e2c22cdbd4a" translate="yes" xml:space="preserve">
          <source>Do not expect nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">Не ожидайте,что функция наноспада будет точна до одной наносекунды.Получить равномерную точность в тысячу наносекунд-это хорошо.</target>
        </trans-unit>
        <trans-unit id="338f71d7cfd94a546bf46d57c343edb97e29ec06" translate="yes" xml:space="preserve">
          <source>Do not expect usleep() to be exact down to one microsecond.</source>
          <target state="translated">Не ожидайте,что usleep()будет точна до одной микросекунды.</target>
        </trans-unit>
        <trans-unit id="44e00d89042b21b82ae04db4fd6686e52864a5db" translate="yes" xml:space="preserve">
          <source>Do not forget the space before the trailing quote.</source>
          <target state="translated">Не забудьте про пробел перед задней цитатой.</target>
        </trans-unit>
        <trans-unit id="9d53664ee8f6d26a9c8d6d37ac533d0c8503e6c4" translate="yes" xml:space="preserve">
          <source>Do not forget to edit the documentation in the generated</source>
          <target state="translated">Не забудьте отредактировать документацию в сгенерированной</target>
        </trans-unit>
        <trans-unit id="b67a0bd0d26a82b3f8dae502cde36d9a68951db6" translate="yes" xml:space="preserve">
          <source>Do not generate an index at the top of the HTML file.</source>
          <target state="translated">Не генерируйте индекс в верхней части HTML-файла.</target>
        </trans-unit>
        <trans-unit id="38ca653276acaef35211b0a7de47674e374897b5" translate="yes" xml:space="preserve">
          <source>Do not have two files or directories of the same name with different case, like</source>
          <target state="translated">Не имеют двух файлов или каталогов с одним и тем же именем и разным регистром,как например</target>
        </trans-unit>
        <trans-unit id="4798c1787e0a45ddf70984856d2f84815abcefdc" translate="yes" xml:space="preserve">
          <source>Do not include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile.</source>
          <target state="translated">Не включайте раздел &quot;ОШИБКИ POD&quot; в исходный файл,если в нем были ошибки POD.</target>
        </trans-unit>
        <trans-unit id="6ca27b97c73fed9f5b2e6cce84e318595e25670f" translate="yes" xml:space="preserve">
          <source>Do not introduce any modifiable globals, truly global or file static. They are bad form and complicate multithreading and other forms of concurrency. The right way is to introduce them as new interpreter variables, see</source>
          <target state="translated">Не вводите никакие модифицируемые глобусы,по-настоящему глобальные или статические файлы.Они имеют дурную форму и усложняют многопотоковую работу и другие формы параллелизма.Правильный путь-представить их в качестве новых интерпретирующих переменных,см.</target>
        </trans-unit>
        <trans-unit id="54f5276ef8bc6c0a7b535c715233a2e4ff4dd5a6" translate="yes" xml:space="preserve">
          <source>Do not memoize a function that returns a data structure that is modified by its caller.</source>
          <target state="translated">Не запоминайте функцию,которая возвращает структуру данных,измененную ее вызывающим абонентом.</target>
        </trans-unit>
        <trans-unit id="e822f96782fa84026c016723c451c6a59923a48c" translate="yes" xml:space="preserve">
          <source>Do not memoize a function whose behavior depends on program state other than its own arguments, such as global variables, the time of day, or file input. These functions will not produce correct results when memoized. For a particularly easy example:</source>
          <target state="translated">Не запоминайте функцию,поведение которой зависит от состояния программы,кроме ее собственных аргументов,таких как глобальные переменные,время суток или ввод файла.Эти функции не будут давать корректных результатов при запоминании.Для особенно простого примера:</target>
        </trans-unit>
        <trans-unit id="cccff3ab93f1bd49939696cce81af2a0a2097134" translate="yes" xml:space="preserve">
          <source>Do not memoize a function with side effects.</source>
          <target state="translated">Не запоминайте функцию с побочными эффектами.</target>
        </trans-unit>
        <trans-unit id="6f726dd9ddd72becc842f9b1d89ed1bf585b4d7a" translate="yes" xml:space="preserve">
          <source>Do not memoize a very simple function.</source>
          <target state="translated">Не запоминайте очень простую функцию.</target>
        </trans-unit>
        <trans-unit id="fd85d472df120b1759d38d84f5ed138af9b0de90" translate="yes" xml:space="preserve">
          <source>Do not mix national standard encodings and the corresponding vendor encodings.</source>
          <target state="translated">Не смешивайте кодировки национальных стандартов с кодировками соответствующих производителей.</target>
        </trans-unit>
        <trans-unit id="f1f5b43293b4ad26b77bf89ae0381b7ae81019b9" translate="yes" xml:space="preserve">
          <source>Do not pass both this and --htmldir to pod2html; they are mutually exclusive.</source>
          <target state="translated">Не передавайте и это,и --htmldir на pod2html;они взаимоисключающие.</target>
        </trans-unit>
        <trans-unit id="b60ea56f9acc75f558cf56cbb9626f5aa57e337f" translate="yes" xml:space="preserve">
          <source>Do not read more than &lt;code&gt;limit&lt;/code&gt; files. This is useful if you have very big archives, and are only interested in the first few files.</source>
          <target state="translated">Не читайте больше, чем &lt;code&gt;limit&lt;/code&gt; файлы. Это полезно, если у вас очень большие архивы и вас интересуют только первые несколько файлов.</target>
        </trans-unit>
        <trans-unit id="8baaf0ce4e3be10a125ad22cfd7dc50cf9094c82" translate="yes" xml:space="preserve">
          <source>Do not recurse into subdirectories specified in podpath.</source>
          <target state="translated">Не возвращайтесь в подкаталоги,указанные в подпутеве.</target>
        </trans-unit>
        <trans-unit id="63bb032139528a610599b19949f74327a9b3d07c" translate="yes" xml:space="preserve">
          <source>Do not suspend the calling process until a child process changes state but instead return immediately.</source>
          <target state="translated">Не приостанавливайте процесс вызова до тех пор,пока дочерний процесс не изменит свое состояние,а возвращайтесь немедленно.</target>
        </trans-unit>
        <trans-unit id="a0d9cf144653df2138cfdb4728cb23fd840b488d" translate="yes" xml:space="preserve">
          <source>Do not try to be clever to insert some operations in between switching libraries:</source>
          <target state="translated">Не пытайтесь быть умным,чтобы вставить некоторые операции между библиотеками переключения:</target>
        </trans-unit>
        <trans-unit id="f892507590fee4ad20d4412e6f8474b573affb0c" translate="yes" xml:space="preserve">
          <source>Do not try to use Perl's malloc, this will lead into very mysterious errors (especially with -Duse64bitall).</source>
          <target state="translated">Не пытайтесь использовать Perl'овский malloc,это приведет к очень загадочным ошибкам (особенно с -Duse64bitall).</target>
        </trans-unit>
        <trans-unit id="481206675cc8f49efb63fbf5922ecb2459573ace" translate="yes" xml:space="preserve">
          <source>Do not turn =head1 directives into links pointing to the top of the HTML file (default behaviour).</source>
          <target state="translated">Не превращайте директивы =head1 в ссылки,указывающие на вершину HTML-файла (поведение по умолчанию).</target>
        </trans-unit>
        <trans-unit id="baca6e9f8deaa5a05e4ab2ba4c839ab683b10546" translate="yes" xml:space="preserve">
          <source>Do not turn on the compiler optimization flag &quot;-O&quot;. There is a bug in either the optimizer or perl that causes perl to not work correctly when the optimizer is on.</source>
          <target state="translated">Не включать флаг оптимизации компилятора &quot;-O&quot;.Есть ошибка либо в оптимизаторе,либо в perl,которая приводит к некорректной работе perl при включенном оптимизаторе.</target>
        </trans-unit>
        <trans-unit id="ee94e7e413fa452436aa9dabe06f090ccc39d625" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; to obtain the address of variable that's bound to go out of scope (and thereby freeing its memory) before you are done with using the memory at that address.</source>
          <target state="translated">Не используйте &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;p&lt;/code&gt; или &lt;code&gt;P&lt;/code&gt; для получения адреса переменной, которая должна выйти из области видимости (и тем самым освободить ее память) до того, как вы закончите использование памяти по этому адресу.</target>
        </trans-unit>
        <trans-unit id="04f9b0d0e8adfb1713c31734eee9cfdb17586771" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Devel::PPPort&lt;/code&gt; : no portability to older version.</source>
          <target state="translated">Не используйте &lt;code&gt;Devel::PPPort&lt;/code&gt; : нет возможности переноса на старую версию.</target>
        </trans-unit>
        <trans-unit id="498daddca0a46e6c4fa2a6956b5ad47910b93411" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Exporter&lt;/code&gt; and/or export any symbol.</source>
          <target state="translated">Не используйте &lt;code&gt;Exporter&lt;/code&gt; и / или не экспортируйте какие-либо символы.</target>
        </trans-unit>
        <trans-unit id="ed6a2111bf29f957b88dbf31031d37b896f3ce10" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;SvGROW&lt;/code&gt; or &lt;code&gt;sv_grow&lt;/code&gt; directly on &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; ; this function updates all of the lexer's variables that point directly into the buffer.</source>
          <target state="translated">Не используйте &lt;code&gt;SvGROW&lt;/code&gt; или &lt;code&gt;sv_grow&lt;/code&gt; непосредственно в &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; ; эта функция обновляет все переменные лексера, которые указывают непосредственно на буфер.</target>
        </trans-unit>
        <trans-unit id="e1a5c62a2aaf2f678ca9cf51949611595cacf102" translate="yes" xml:space="preserve">
          <source>Do not use NDBM_File or ODBM_File on FAT filesystem. They can be built on a FAT filesystem, but many tests will fail:</source>
          <target state="translated">Не используйте NDBM_File или ODBM_File на файловой системе FAT.Они могут быть построены на файловой системе FAT,но многие тесты будут неудачными:</target>
        </trans-unit>
        <trans-unit id="ae38cf9dd649500630593bae7198d4a9f398f12d" translate="yes" xml:space="preserve">
          <source>Do not use atoi()</source>
          <target state="translated">Не используйте atoi()</target>
        </trans-unit>
        <trans-unit id="753e9d05d3a5b0152e6076319f72132b8b3a599b" translate="yes" xml:space="preserve">
          <source>Do not use either the bare result of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; or bare v-strings (such as &lt;code&gt;v10.20.30.40&lt;/code&gt; ) to represent IPv4 addresses: both forms just pack the four bytes into network order. That this would be equal to the C language &lt;code&gt;in_addr&lt;/code&gt; struct (which is what the socket code internally uses) is not guaranteed. To be portable use the routines of the &lt;code&gt;Socket&lt;/code&gt; extension, such as &lt;code&gt;inet_aton()&lt;/code&gt; , &lt;code&gt;inet_ntoa()&lt;/code&gt; , and &lt;code&gt;sockaddr_in()&lt;/code&gt; .</source>
          <target state="translated">Не используйте голый результат &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; или &lt;code&gt;v10.20.30.40&lt;/code&gt; v-строки (например, v10.20.30.40 ) для представления адресов IPv4: обе формы просто упаковывают четыре байта в сеть. порядок. То, что это будет &lt;code&gt;in_addr&lt;/code&gt; структуре in_addr языка C (которая используется внутри кода сокета), не гарантируется. Для обеспечения переносимости используйте процедуры расширения &lt;code&gt;Socket&lt;/code&gt; , такие как &lt;code&gt;inet_aton()&lt;/code&gt; , &lt;code&gt;inet_ntoa()&lt;/code&gt; и &lt;code&gt;sockaddr_in()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88c49bf9327996053a0622ba64f5585438822ebb" translate="yes" xml:space="preserve">
          <source>Do not use gets()</source>
          <target state="translated">Не использовать функцию get()</target>
        </trans-unit>
        <trans-unit id="e05df4e656db7dd388d518939d40279c56ee1258" translate="yes" xml:space="preserve">
          <source>Do not use regexes. Use a module and forget about the regular expressions. The &lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML::LibXML&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML::TokeParser&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML::TreeBuilder&lt;/a&gt; modules are good starts, although each namespace has other parsing modules specialized for certain tasks and different ways of doing it. Start at CPAN Search ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) and wonder at all the work people have done for you already! :)</source>
          <target state="translated">Не используйте регулярные выражения. Используйте модуль и забудьте о регулярных выражениях. &lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML :: LibXML&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML :: TokeParser&lt;/a&gt; и &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML :: TreeBuilder&lt;/a&gt; модули хорошо начинается, хотя каждый из имен имеют другие модули синтаксического анализа специализированные для выполнения определенных задач и различных способов сделать это. Начните с поиска CPAN ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) и удивляйтесь той работе, которую люди уже сделали для вас! :)</target>
        </trans-unit>
        <trans-unit id="cce861955ad84aadd4244ab8f88800ca7035ea2a" translate="yes" xml:space="preserve">
          <source>Do not use something like &lt;code&gt;\b=head\d\b&lt;/code&gt; and expect it to match the beginning of a line. It can't, because for there to be a boundary before the non-word &quot;=&quot;, there must be a word character immediately previous. All plain &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; boundary determinations look for word characters alone, not for non-word characters nor for string ends. It may help to understand how &amp;lt;\b&amp;gt; and &amp;lt;\B&amp;gt; work by equating them as follows:</source>
          <target state="translated">Не используйте что-то вроде &lt;code&gt;\b=head\d\b&lt;/code&gt; и ожидайте, что оно будет соответствовать началу строки. Это невозможно, потому что для того, чтобы перед не-словом &quot;=&quot; была граница, должен быть символ слова, непосредственно предшествующий этому. Все простые &lt;code&gt;\b&lt;/code&gt; и &lt;code&gt;\B&lt;/code&gt; граничные определения ищут символы слова в одиночку, а не для неигрового слова , ни для строковых концов. Чтобы понять, как работают &amp;lt;\ b&amp;gt; и &amp;lt;\ B&amp;gt;, можно приравнять их следующим образом:</target>
        </trans-unit>
        <trans-unit id="f1a735190dab11e5d0be16372e2f20beebf57de6" translate="yes" xml:space="preserve">
          <source>Do not use sprintf() or vsprintf()</source>
          <target state="translated">Не используйте sprintf()или vsprintf().</target>
        </trans-unit>
        <trans-unit id="bd8826a15f100149be24539f62f1590d0529bde4" translate="yes" xml:space="preserve">
          <source>Do not use strcpy() or strcat() or strncpy() or strncat()</source>
          <target state="translated">Не используйте strcpy()или strcat(),strncpy()или strncat().</target>
        </trans-unit>
        <trans-unit id="e845e1c460c616232a9c91d7dbd84468956485b4" translate="yes" xml:space="preserve">
          <source>Do not use strtol() or strtoul()</source>
          <target state="translated">Не используйте strtol()или strtoul().</target>
        </trans-unit>
        <trans-unit id="0c29194c83ffb8c5f50d4977f6ee065d347bf4fe" translate="yes" xml:space="preserve">
          <source>Do not use tell() (or other buffered I/O operations) on a filehandle that has been manipulated by sysread(), syswrite(), or sysseek(). Those functions ignore the buffering, while tell() does not.</source>
          <target state="translated">Не используйте функцию tell()(или другие буферизованные операции ввода/вывода)на файловой ручке,которой манипулировали с помощью sysread(),syswrite()или sysseek().Эти функции игнорируют буферизацию,а функция tell()-нет.</target>
        </trans-unit>
        <trans-unit id="3950da255e2df8ad19b4abdbb628393b5e27d661" translate="yes" xml:space="preserve">
          <source>Do not use the module &lt;code&gt;AutoLoader&lt;/code&gt; ; but keep the constant() function and &lt;code&gt;sub AUTOLOAD&lt;/code&gt; for constants.</source>
          <target state="translated">Не используйте модуль &lt;code&gt;AutoLoader&lt;/code&gt; ; но оставьте функцию constant () и &lt;code&gt;sub AUTOLOAD&lt;/code&gt; для констант.</target>
        </trans-unit>
        <trans-unit id="f50e07201ab25152f3dfb27ad57d827f044d1f3b" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, as they are at times requesting conflicting actions and the consequence of ignoring this advice will be undefined to allow future improvements in the POSIX exit handling.</source>
          <target state="translated">Не используйте прагму &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; с включенным &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; , так как они время от времени запрашивают конфликтующие действия, и последствия игнорирования этого совета будут неопределенными, чтобы позволить будущие улучшения в обработке выхода POSIX.</target>
        </trans-unit>
        <trans-unit id="a4b31e073c7486c8b49c926ffd1a1a8bd9366cae" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;strict&lt;/code&gt; .</source>
          <target state="translated">Не используйте директиву pragma &lt;code&gt;strict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6facf91ee978da40dfe9d3ea865ab1579d25d93" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;warnings&lt;/code&gt; .</source>
          <target state="translated">Не используйте &lt;code&gt;warnings&lt;/code&gt; прагмы .</target>
        </trans-unit>
        <trans-unit id="dee89e95287669bbd88a11a6aea3e7aa1e7bbfb6" translate="yes" xml:space="preserve">
          <source>Do not use this and --htmlroot in the same call to pod2html; they are mutually exclusive.</source>
          <target state="translated">Не используйте это и --htmlroot в одном и том же вызове pod2html;они взаимоисключающие.</target>
        </trans-unit>
        <trans-unit id="3250376779b0f67e8134deb8086f1402809e9bc8" translate="yes" xml:space="preserve">
          <source>Do not use this as a separator between directories. Some operating systems use different separators between subdirectories as between directories and filenames (for example: VOLUME:[dir1.dir2]file on VMS).</source>
          <target state="translated">Не используйте его в качестве разделителя между каталогами.Некоторые операционные системы используют разные разделители между подкаталогами как между каталогами,так и между именами файлов (например:VOLUME:[dir1.dir2]file on VMS).</target>
        </trans-unit>
        <trans-unit id="164086a0ac238b7870e606cc1d29ce266a3011d7" translate="yes" xml:space="preserve">
          <source>Do not use this if relative links are desired: use --htmldir instead.</source>
          <target state="translated">Не используйте это,если желательны относительные ссылки:используйте --htmldir вместо этого.</target>
        </trans-unit>
        <trans-unit id="3c5af5b31b181ed54cc1fca5572f9386a6984c19" translate="yes" xml:space="preserve">
          <source>Do not use this to run perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; will run the perl that happens to be the first in your path and not necessarily the same perl that is used to run &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;The INCLUDE_COMMAND: Keyword&lt;/a&gt;.</source>
          <target state="translated">Не используйте это для запуска perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; будет запускать Perl, который окажется первым на вашем пути, и не обязательно тот же perl, который используется для запуска &lt;code&gt;xsubpp&lt;/code&gt; . См &lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;. INCLUDE_COMMAND: ключевое слово&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89f8b5ad3c1702cca1a4d40affd9cb729f0e90f7" translate="yes" xml:space="preserve">
          <source>Do not use this.</source>
          <target state="translated">Не используйте это.</target>
        </trans-unit>
        <trans-unit id="82165a1e97cf695c1ce626d1d090403bda43151a" translate="yes" xml:space="preserve">
          <source>Do not use tmpfile()</source>
          <target state="translated">Не используйте tmpfile()</target>
        </trans-unit>
        <trans-unit id="67066fdeeb8477f689c49a4d9d531e1c38c3d6bc" translate="yes" xml:space="preserve">
          <source>Do not use with other Perl types such as HV, AV, SV, CV, because those objects will become corrupted by the pointer copy process.</source>
          <target state="translated">Не используйте с другими типами Perl,такими как HV,AV,SV,CV,потому что эти объекты будут повреждены процессом копирования указателя.</target>
        </trans-unit>
        <trans-unit id="97d251c82a0422b70eb970d71730acc97d0587dc" translate="yes" xml:space="preserve">
          <source>Do not, however, be tempted to do this:</source>
          <target state="translated">Однако не поддавайтесь искушению сделать это:</target>
        </trans-unit>
        <trans-unit id="89c4560a90f4c8640ca9769656650496ad022a1f" translate="yes" xml:space="preserve">
          <source>Do note that a switch like &lt;b&gt;--help&lt;/b&gt; creates the variable &lt;code&gt;${-help}&lt;/code&gt; , which is not compliant with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; . Also, when using this option on a script with warnings enabled you may get a lot of spurious &quot;used only once&quot; warnings.</source>
          <target state="translated">Обратите внимание, что такой переключатель, как &lt;b&gt;--help,&lt;/b&gt; создает переменную &lt;code&gt;${-help}&lt;/code&gt; , которая несовместима с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; . Кроме того, при использовании этой опции в скрипте с включенными предупреждениями вы можете получить много ложных предупреждений &amp;laquo;используется только один раз&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c739ef2c73416de977da1e1813d572016c0b1d06" translate="yes" xml:space="preserve">
          <source>Do note that the examples have been written by many different authors over a period of several decades. Styles and techniques will therefore differ, although some effort has been made to not vary styles too widely in the same sections. Do not consider one style to be better than others - &quot;There's More Than One Way To Do It&quot; is one of Perl's mottos. After all, in your journey as a programmer, you are likely to encounter different styles.</source>
          <target state="translated">Обратите внимание,что примеры были написаны многими разными авторами в течение нескольких десятилетий.Поэтому стили и приемы будут различаться,хотя были предприняты некоторые усилия,чтобы не слишком сильно варьировать стили в одних и тех же разделах.Не считайте,что один стиль лучше других-&quot;Есть больше,чем один способ сделать это&quot;-один из девизов Perl.В конце концов,в вашем путешествии как программиста,вы,скорее всего,столкнетесь с разными стилями.</target>
        </trans-unit>
        <trans-unit id="540dbdd2eced4389045109a5d86db714850717db" translate="yes" xml:space="preserve">
          <source>Do one thing and do it well</source>
          <target state="translated">Сделай одну вещь и сделай ее хорошо</target>
        </trans-unit>
        <trans-unit id="2495a1047a7ca571d906f155a7f581ed5618c76e" translate="yes" xml:space="preserve">
          <source>Do read the README associated with your operating system, e.g. README.aix on the IBM AIX OS. Don't hesitate to supply patches to that README if you find anything missing or changed over a new OS release.</source>
          <target state="translated">Считайте README,связанный с операционной системой,например README.aix на IBM AIX OS.Не стесняйтесь поставлять патчи к этому README,если вы обнаружите что-нибудь отсутствующее или измененное в новом релизе операционной системы.</target>
        </trans-unit>
        <trans-unit id="f6c0054711126ec773d898b58f49cbb4c949cab9" translate="yes" xml:space="preserve">
          <source>Do similar modules already exist in some form?</source>
          <target state="translated">Существуют ли уже подобные модули в той или иной форме?</target>
        </trans-unit>
        <trans-unit id="4d86fca77a17d198920e265fa1fed63a01551109" translate="yes" xml:space="preserve">
          <source>Do take care with &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; if your Perl-in-DCL script expects to do things like &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; осторожны с $ ASSIGN / nolog / user SYS $ COMMAND: SYS $ INPUT, если ваш сценарий Perl-in-DCL ожидает выполнения таких действий, как &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed37eb991a7adeef41e4c420e9ad43ac12f4d7d2" translate="yes" xml:space="preserve">
          <source>Do the basic security measures to ensure the directory exists and is writable, that temporary files are opened only if they do not already exist, and that possible race conditions are avoided. Finally the L</source>
          <target state="translated">Выполняйте основные меры безопасности,чтобы гарантировать,что каталог существует и может быть записан,что временные файлы открываются только в том случае,если они еще не существуют,и что возможные условия гонки исключены.Наконец,L</target>
        </trans-unit>
        <trans-unit id="a62956f5b6df99e5d8fc6b8cabce7cc42f269d70" translate="yes" xml:space="preserve">
          <source>Do the same sort of thing to delete a particular line by using &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; to skip the lines you don't want to show up in the output. This example skips every fifth line:</source>
          <target state="translated">Сделайте то же самое, чтобы удалить определенную строку, используя &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; , чтобы пропустить строки, которые вы не хотите отображать в выводе. В этом примере пропускается каждая пятая строка:</target>
        </trans-unit>
        <trans-unit id="6bee90ebbffd3a020ccb7068ab9d7842e861b7da" translate="yes" xml:space="preserve">
          <source>Do whatever you can to find out, and if you have to: guess. (Don't forget to document your guess with a comment.)</source>
          <target state="translated">Сделай все,что сможешь,чтобы узнать,и если придется:угадай.(Не забудьте задокументировать свою догадку комментарием.)</target>
        </trans-unit>
        <trans-unit id="1287ea9cdb3e32730cc921890c861ccf51d63478" translate="yes" xml:space="preserve">
          <source>Do you try to run</source>
          <target state="translated">Ты пытаешься бежать</target>
        </trans-unit>
        <trans-unit id="d659723a2b8c8d2ce99667e3ef2aba7ca933d74a" translate="yes" xml:space="preserve">
          <source>Do you want the command number in the prompt (yes/no)?</source>
          <target state="translated">Вы хотите,чтобы в строке запроса был указан номер команды (да/нет)?</target>
        </trans-unit>
        <trans-unit id="d7a7627a867e6bbe22a2b970c115376b82f0139b" translate="yes" xml:space="preserve">
          <source>Do you want to enable code deserialisation (yes/no)?</source>
          <target state="translated">Вы хотите включить десериализацию кода (да/нет)?</target>
        </trans-unit>
        <trans-unit id="cbd235cb0bbd92aee8e53ccbbbbc3dabc72798c9" translate="yes" xml:space="preserve">
          <source>Do you want to halt on failure (yes/no)?</source>
          <target state="translated">Ты хочешь остановить неудачу (да/нет)?</target>
        </trans-unit>
        <trans-unit id="373cd2197f990d8762c7c66b4869ae4717a2e44c" translate="yes" xml:space="preserve">
          <source>Do you want to rely on the test report history (yes/no)?</source>
          <target state="translated">Хотите ли вы полагаться на историю отчетов об испытаниях (да/нет)?</target>
        </trans-unit>
        <trans-unit id="8a279f6363761148fb8c2b71535a1b4a155b67db" translate="yes" xml:space="preserve">
          <source>Do you want to turn on colored output?</source>
          <target state="translated">Хотите включить цветной выход?</target>
        </trans-unit>
        <trans-unit id="87a207a61ec9d6801b880d322288293793a12268" translate="yes" xml:space="preserve">
          <source>Do you want to turn ornaments on?</source>
          <target state="translated">Хочешь включить украшения?</target>
        </trans-unit>
        <trans-unit id="99b869f7fe84b2b6d6d37879f90b1ce5f182c64b" translate="yes" xml:space="preserve">
          <source>Do you want to turn this message off?</source>
          <target state="translated">Хочешь выключить это сообщение?</target>
        </trans-unit>
        <trans-unit id="8bf8fea239cbb1f5a4fdb80eb2b8949a38de2f2e" translate="yes" xml:space="preserve">
          <source>Do you want to use a different command for './Build install'? Sudo users will probably prefer:</source>
          <target state="translated">Вы хотите использовать другую команду для './Build install'? Судо-пользователи наверняка предпочтут:</target>
        </trans-unit>
        <trans-unit id="cc8ccb8accaee9d0eecc936c06f10fdc9aba0e2f" translate="yes" xml:space="preserve">
          <source>Do you want to use a different make command for 'make install'? Cautious people will probably prefer:</source>
          <target state="translated">Вы хотите использовать другую команду make для 'make install'? Скорее всего,осторожные люди предпочтут:</target>
        </trans-unit>
        <trans-unit id="4f330885ef3a3b61025e1e796b402fcd50c7b4e7" translate="yes" xml:space="preserve">
          <source>Do you want to use prompt defaults (yes/no)?</source>
          <target state="translated">Хотите использовать подсказки по умолчанию (да/нет)?</target>
        </trans-unit>
        <trans-unit id="918ceb56671dd67483da1f39299f85748b336c0e" translate="yes" xml:space="preserve">
          <source>Do you want to:</source>
          <target state="translated">Хочешь:</target>
        </trans-unit>
        <trans-unit id="b91e32e96ba9f37078ffe29f1ee1859d0140ecfd" translate="yes" xml:space="preserve">
          <source>Document each publically accessible method or subroutine, including params and return values</source>
          <target state="translated">Документируйте каждый публично доступный метод или подпрограмму,включая параметры и возвращаемые значения.</target>
        </trans-unit>
        <trans-unit id="6e00d0928abd84bf71ed2ace7f696bcbc6aee9e8" translate="yes" xml:space="preserve">
          <source>Document purpose, scope and target applications</source>
          <target state="translated">Назначение документа,сфера его применения и целевое назначение</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0d4f3597552829486c9c7978225dcdc88217781f" translate="yes" xml:space="preserve">
          <source>Documentation and help texts</source>
          <target state="translated">Документация и справочные тексты</target>
        </trans-unit>
        <trans-unit id="1d66c2dca46aca62759ec44a5b9071376128798a" translate="yes" xml:space="preserve">
          <source>Documentation borrowed from the old Thread.pm.</source>
          <target state="translated">Документация,заимствованная из старого &quot;Thread.pm&quot;.</target>
        </trans-unit>
        <trans-unit id="8b5ab45b761259017419114ca3e9a62382663d77" translate="yes" xml:space="preserve">
          <source>Documentation has been contributed by:</source>
          <target state="translated">Документация была представлена:</target>
        </trans-unit>
        <trans-unit id="4730bb4bd3211681615071a5ac81bbb7a0d87081" translate="yes" xml:space="preserve">
          <source>Documentation mostly rewritten by Ilmari Karonen, &amp;lt;</source>
          <target state="translated">Документация в основном переписана Илмари Кароненом, &amp;lt;</target>
        </trans-unit>
        <trans-unit id="5c1fa297f5d4c566fd5588f14f34ea9f8ecedf5a" translate="yes" xml:space="preserve">
          <source>Documentation of corrections already incorporated into the Unicode data base</source>
          <target state="translated">Документация исправлений,уже включенных в базу данных Юникода</target>
        </trans-unit>
        <trans-unit id="cac7df688d4ef7dcaa6e39b6e0d4e8f277b2acfd" translate="yes" xml:space="preserve">
          <source>Documentation of object-oriented libraries or modules may want to use CONSTRUCTORS and METHODS sections, or CLASS METHODS and INSTANCE METHODS sections, for detailed documentation of the parts of the library and save the DESCRIPTION section for an overview. Large modules with a function interface may want to use FUNCTIONS for similar reasons. Some people use OVERVIEW to summarize the description if it's quite long.</source>
          <target state="translated">Документация по объектно-ориентированным библиотекам или модулям может потребовать использования разделов КОНСТРУКТОРЫ и МЕТОДЫ,или раздел КЛАССНЫЕ МЕТОДЫ и МЕТОДЫ ИНСТАНЦИЙ,для подробного документирования частей библиотеки и сохранения раздела ОПИСАНИЕ для обзора.Большие модули с функциональным интерфейсом могут захотеть использовать ФУНКЦИИ по аналогичным причинам.Некоторые люди используют OVERVIEW для обобщения описания,если оно достаточно длинное.</target>
        </trans-unit>
        <trans-unit id="49018199d13814134468f853612e00393c5c7fd7" translate="yes" xml:space="preserve">
          <source>Documentation of status and cross reference of proposals for encoding by Unicode of Unihan characters</source>
          <target state="translated">Документация о статусе и перекрестная ссылка на предложения по кодировке Unicode символов Unihan</target>
        </trans-unit>
        <trans-unit id="eb488db5f5b4fb936ed78cb59ddbbcefd6c8b7f6" translate="yes" xml:space="preserve">
          <source>Documentation of validation tests</source>
          <target state="translated">Документация по валидационным испытаниям</target>
        </trans-unit>
        <trans-unit id="b139845ddb6a01b9b23ddc81ca29bb8e6b63e194" translate="yes" xml:space="preserve">
          <source>Documentation updates that correct factual errors, explain significant bugs or deficiencies in the current implementation, or fix broken markup.</source>
          <target state="translated">Обновления документации,которые исправляют фактические ошибки,объясняют существенные ошибки или недостатки в текущей реализации,или исправляют разрывы разметки.</target>
        </trans-unit>
        <trans-unit id="23cea710c088ecfa1ae744391fe173bfdf5d1acb" translate="yes" xml:space="preserve">
          <source>Documenting the patch</source>
          <target state="translated">Документирование патча</target>
        </trans-unit>
        <trans-unit id="a20866ae52f8e35eaed59a179f7c48ea2d19b8fa" translate="yes" xml:space="preserve">
          <source>Documenting your Extension</source>
          <target state="translated">Документирование расширения</target>
        </trans-unit>
        <trans-unit id="2080696be6c4c31d4c892420cc245128864bdfe0" translate="yes" xml:space="preserve">
          <source>Does Perl have a Year 2000 or 2038 problem? Is Perl Y2K compliant?</source>
          <target state="translated">У Perl есть проблема 2000 или 2038 года? Соответствует ли Perl Y2K?</target>
        </trans-unit>
        <trans-unit id="0d6d8d711a3a4cca710ca22dbfe40093bf45d857" translate="yes" xml:space="preserve">
          <source>Does Perl have a round() function? What about ceil() and floor()? Trig functions?</source>
          <target state="translated">Есть ли у Perl функция round()? А как насчет ceil()и floor()? Функции Trig?</target>
        </trans-unit>
        <trans-unit id="347f03cef55a503c9fa350dbe1691433852f2738" translate="yes" xml:space="preserve">
          <source>Does a $(CI) and a $(RCS_LABEL) on all files in the MANIFEST file.</source>
          <target state="translated">Делает $(CI)и $(RCS_LABEL)для всех файлов в файле MANIFEST.</target>
        </trans-unit>
        <trans-unit id="6ace7d9d419573301ff609d787f134b02b26193b" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">Системный вызов fork (2) для создания нового процесса, выполняющего ту же программу в той же точке. Он возвращает дочерний pid родительскому процессу, &lt;code&gt;0&lt;/code&gt; дочернему процессу или &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если вилка завершилась неудачно. Дескрипторы файлов (а иногда и блокировки этих дескрипторов) используются совместно, а все остальное копируется. В большинстве систем, поддерживающих fork (), большое внимание было уделено тому, чтобы сделать его чрезвычайно эффективным (например, с использованием технологии копирования при записи на страницах данных), что сделало его доминирующей парадигмой многозадачности за последние несколько десятилетий.</target>
        </trans-unit>
        <trans-unit id="94b3dcb831cc7f4b2c1f2db661fceb8975ccf8c1" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">Системный вызов fork (2) для создания нового процесса, выполняющего ту же программу в той же точке. Он возвращает дочерний pid родительскому процессу, &lt;code&gt;0&lt;/code&gt; дочернему процессу или &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , если вилка завершилась неудачно. Дескрипторы файлов (а иногда и блокировки этих дескрипторов) используются совместно, а все остальное копируется. В большинстве систем, поддерживающих fork (), большое внимание было уделено тому, чтобы сделать его чрезвычайно эффективным (например, с использованием технологии копирования при записи на страницах данных), что сделало его доминирующей парадигмой многозадачности за последние несколько десятилетий.</target>
        </trans-unit>
        <trans-unit id="6e7a8e9cc842e50405245756a0a1bacedfbe9c22" translate="yes" xml:space="preserve">
          <source>Does a tree-walk of the syntax tree based at OP and calls METHOD on each op it visits. Each node is visited before its children. If &lt;code&gt;walkoptree_debug&lt;/code&gt; (see below) has been called to turn debugging on then the method &lt;code&gt;walkoptree_debug&lt;/code&gt; is called on each op before METHOD is called.</source>
          <target state="translated">Осуществляет обход синтаксического дерева на основе OP и вызывает METHOD для каждой операции, которую он посещает. Каждый узел посещается раньше, чем его дочерние узлы. Если &lt;code&gt;walkoptree_debug&lt;/code&gt; (см. Ниже) был вызван для включения отладки, то метод &lt;code&gt;walkoptree_debug&lt;/code&gt; вызывается для каждой операции перед вызовом METHOD.</target>
        </trans-unit>
        <trans-unit id="de4556ee919b8c9e716ff91fff53e57dd9fa041d" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">Выполняет то же самое, что и &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , за исключением того, что сначала выполняется вилка, а родительский процесс ожидает завершения дочернего процесса. Обратите внимание, что обработка аргументов зависит от количества аргументов. Если в LIST более одного аргумента или если LIST является массивом с более чем одним значением, запускает программу, заданную первым элементом списка, с аргументами, заданными остальной частью списка. Если есть только один скалярный аргумент, аргумент проверяется на наличие метасимволов оболочки, и если они есть, весь аргумент передается в системную командную оболочку для анализа (это &lt;code&gt;/bin/sh -c&lt;/code&gt; на платформах Unix, но меняется на другие платформы). Если в аргументе нет метасимволов оболочки, он разбивается на слова и передается непосредственно в &lt;code&gt;execvp&lt;/code&gt; ., что более эффективно. В Windows только &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; синтаксис PROGRAM LIST надежно избегает использования оболочки; &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , даже с более чем одним элементом, вернется к оболочке, если первое порождение не удастся.</target>
        </trans-unit>
        <trans-unit id="971d377ca0b94eef511ce7a5cf1fbc7ca9fc4308" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">Выполняет то же самое, что и &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , за исключением того, что сначала выполняется вилка, а родительский процесс ожидает завершения дочернего процесса. Обратите внимание, что обработка аргументов зависит от количества аргументов. Если в LIST более одного аргумента или если LIST является массивом с более чем одним значением, запускает программу, заданную первым элементом списка, с аргументами, заданными остальной частью списка. Если есть только один скалярный аргумент, аргумент проверяется на наличие метасимволов оболочки, и если они есть, весь аргумент передается в системную командную оболочку для анализа (это &lt;code&gt;/bin/sh -c&lt;/code&gt; на платформах Unix, но меняется на другие платформы). Если в аргументе нет метасимволов оболочки, он разбивается на слова и передается непосредственно в &lt;code&gt;execvp&lt;/code&gt; ., что более эффективно. В Windows только &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; синтаксис PROGRAM LIST надежно избегает использования оболочки; &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , даже с более чем одним элементом, вернется к оболочке, если первое порождение не удастся.</target>
        </trans-unit>
        <trans-unit id="7ae98d71c785265ddcfeeeb07989cf58a75f2684" translate="yes" xml:space="preserve">
          <source>Does it create too much work?</source>
          <target state="translated">Неужели это создает слишком много работы?</target>
        </trans-unit>
        <trans-unit id="76c48f534cf5b51a41a2a7ce76b162535214df0a" translate="yes" xml:space="preserve">
          <source>Does it potentially introduce new bugs?</source>
          <target state="translated">Потенциально ли это приводит к появлению новых ошибок?</target>
        </trans-unit>
        <trans-unit id="163b23e27c4c841d1d0111848b85d7359f51c15f" translate="yes" xml:space="preserve">
          <source>Does it preclude other desirable features?</source>
          <target state="translated">Исключает ли это другие желаемые черты?</target>
        </trans-unit>
        <trans-unit id="19da346c64719e8350a8cf9aeb2a31add00b3079" translate="yes" xml:space="preserve">
          <source>Does not &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; to each directory as it recurses. The &lt;code&gt;wanted()&lt;/code&gt; function will need to be aware of this, of course. In this case, &lt;code&gt;$_&lt;/code&gt; will be the same as &lt;code&gt;$File::Find::name&lt;/code&gt; .</source>
          <target state="translated">Не &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; для каждого каталога во время рекурсии. &lt;code&gt;wanted()&lt;/code&gt; функция нужно будет знать об этом, конечно. В этом случае &lt;code&gt;$_&lt;/code&gt; будет таким же, как &lt;code&gt;$File::Find::name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af44a91c9e39ab0c7463bac15a45ab231dcc0a7d" translate="yes" xml:space="preserve">
          <source>Does not alter the passed in ver SV. See &quot;upg_version&quot; if you want to upgrade the SV.</source>
          <target state="translated">Не изменяет переданный в ver SV.См.раздел &quot;upgrade_version&quot;,если вы хотите обновить SV.</target>
        </trans-unit>
        <trans-unit id="7520223aa1c22fe71da2f2fd9fbb194fccf8f278" translate="yes" xml:space="preserve">
          <source>Does not automatically flush output handles on some platforms. (SunOS, Solaris, HP-UX)</source>
          <target state="translated">Не производит автоматическую промывку выходных ручек на некоторых платформах.(SunOS,Solaris,HP-UX)</target>
        </trans-unit>
        <trans-unit id="1d965ffd27f165cd1bb4e614ffc070019e6e4581" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on arrays. Does not support explicitly changing array lengths via $#array -- use &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не поддерживает &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; массивов. Не поддерживает явное изменение длины массива через массив $ # - вместо этого используйте &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e1e02c4c151b139fab2fca754d38a684aec2de" translate="yes" xml:space="preserve">
          <source>Does not work as</source>
          <target state="translated">Не работает как</target>
        </trans-unit>
        <trans-unit id="a0eab3410cab5a6dc3b7523e73bfbe22cc007192" translate="yes" xml:space="preserve">
          <source>Does nothing, but won't fail. (Win32)</source>
          <target state="translated">Ничего не делает,но и не подведет.(Win32)</target>
        </trans-unit>
        <trans-unit id="ab6714990b2e9014158db7ba9506c2e3f1eef1e8" translate="yes" xml:space="preserve">
          <source>Does the concept match the general goals of Perl?</source>
          <target state="translated">Соответствует ли концепция общим целям Perl?</target>
        </trans-unit>
        <trans-unit id="dbd3ca43bd95ec8bd28a3afc7d9eb6159f4931f6" translate="yes" xml:space="preserve">
          <source>Does the equivalent of the &lt;code&gt;-c&lt;/code&gt; command-line option. Obviously, this is only useful in a BEGIN block or else the flag is set too late.</source>
          <target state="translated">Эквивалент параметра командной строки &lt;code&gt;-c&lt;/code&gt; . Очевидно, это полезно только в блоке BEGIN, иначе флаг установлен слишком поздно.</target>
        </trans-unit>
        <trans-unit id="5d2b8e3e1d6fb7e3c6489d878105273a9ab06c85" translate="yes" xml:space="preserve">
          <source>Does the exact opposite to the &lt;b&gt;-W&lt;/b&gt; flag, i.e. it disables all warnings.</source>
          <target state="translated">Действует прямо противоположно флагу &lt;b&gt;-W&lt;/b&gt; , т.е. отключает все предупреждения.</target>
        </trans-unit>
        <trans-unit id="4f6fc9d8f5b45abfab918dce456df590c87db452" translate="yes" xml:space="preserve">
          <source>Does the module require compilation (i.e. does it have files that end in .xs, .c, .h, .y, .cc, .cxx, or .C)? If it does, life is now officially tough for you, because you have to compile the module yourself (no easy feat on Windows). You'll need a compiler such as Visual C++. Alternatively, you can download a pre-built PPM package from ActiveState. &lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</source>
          <target state="translated">Требуется ли для модуля компиляция (т.е. есть ли в нем файлы с расширениями .xs, .c, .h, .y, .cc, .cxx или .C)? Если это так, то жизнь для вас официально стала тяжелой, потому что вам придется скомпилировать модуль самостоятельно (что нелегко в Windows). Вам понадобится компилятор, например Visual C ++. Кроме того, вы можете загрузить предварительно созданный пакет PPM из ActiveState. &lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e8b1afa4f266e283c1e89777c89973f57e94a2c" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">Совершает противоположность &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; . Или противоположность &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , в зависимости от того, как вы смотрите на него. Добавляет список в начало массива и возвращает новое количество элементов в массиве.</target>
        </trans-unit>
        <trans-unit id="15ca4b87c1dd7484db0ece50d3e128013e8468d9" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">Совершает противоположность &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; . Или противоположность &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , в зависимости от того, как вы смотрите на него. Добавляет список в начало массива и возвращает новое количество элементов в массиве.</target>
        </trans-unit>
        <trans-unit id="a4a01d3bbed716e476e014f93f4ca067ce1b42d2" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выполняет то же самое, что и функция &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; (включая установку специального дескриптора файла &lt;code&gt;_&lt;/code&gt; ), но статистически отображает символическую ссылку вместо файла, на который указывает символическая ссылка. Если в вашей системе не реализованы символические ссылки, выполняется обычная &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Для получения более подробной информации см. Документацию по &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2440cc46fc6eb9876beb8fbe0150b6c618c74179" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выполняет то же самое, что и функция &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; (включая установку специального дескриптора файла &lt;code&gt;_&lt;/code&gt; ), но статистически отображает символическую ссылку вместо файла, на который указывает символическая ссылка. Если в вашей системе не реализованы символические ссылки, выполняется обычная &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Для получения более подробной информации см. Документацию по &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c26f7b80fe6be59ff00dfaaf3a9f27764a36e9e8" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">Делает то же самое, что и системный вызов listen (2). Возвращает true в случае успеха и false в противном случае. См. Пример в &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client / Server Communication in perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22db9588c396aba67c7aad2d451295dbb36db3d9" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">Делает то же самое, что и системный вызов listen (2). Возвращает true в случае успеха и false в противном случае. См. Пример в &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client / Server Communication in perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22374adba20ced760e98d0c0d73bbc827cae9cc0" translate="yes" xml:space="preserve">
          <source>Does this module need linking? Looks into subdirectory objects (see also has_link_code())</source>
          <target state="translated">Нужно ли связывать этот модуль? Заглядывает в объекты поддиректорий (см.также has_link_code()).</target>
        </trans-unit>
        <trans-unit id="ec5a93789136319c08b5e5d76ea18d252f60bd6c" translate="yes" xml:space="preserve">
          <source>Does very much the same as the cflags script in the perl distribution. It doesn't return the whole compiler command line, but initializes all of its parts. The const_cccmd method then actually returns the definition of the CCCMD macro which uses these parts.</source>
          <target state="translated">Очень похоже на скрипт cflags в дистрибутиве perl.Он не возвращает всю командную строку компилятора,а инициализирует все его части.Затем метод const_cccmd фактически возвращает определение макроса CCCMD,который использует эти части.</target>
        </trans-unit>
        <trans-unit id="6d014ad0641a64b3a2fca948ec89b499199cfda8" translate="yes" xml:space="preserve">
          <source>Does your module pass the 'empty subclass' test? If you say &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; your applications should be able to use SUBCLASS in exactly the same way as YOURCLASS. For example, does your application still work if you change: &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; into: &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ?</source>
          <target state="translated">Ваш модуль прошел тест &amp;laquo;пустой подкласс&amp;raquo;? Если вы скажете &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; ваши приложения должны иметь возможность использовать SUBCLASS точно так же, как YOURCLASS. Например, ваше приложение все еще работает, если вы измените: &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; в: &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="bdcea9fc3bdee92b160e5b96d81fb3d19af3fd30" translate="yes" xml:space="preserve">
          <source>Doesn't construct the %sizeof array for you.</source>
          <target state="translated">Не строит массив %sizeof для вас.</target>
        </trans-unit>
        <trans-unit id="cd3640eea37fa02af99e7bd48394bfa2af60bf4c" translate="yes" xml:space="preserve">
          <source>Doesn't handle complicated expressions built piecemeal, a la:</source>
          <target state="translated">Не обрабатывает сложные выражения,построенные по частям,а-ля:</target>
        </trans-unit>
        <trans-unit id="5787ba7fa720ea9e3316d963760e6faa3df102b3" translate="yes" xml:space="preserve">
          <source>Doesn't necessarily locate all of your C compiler's internally-defined symbols.</source>
          <target state="translated">Не обязательно находит все внутренние символы компилятора Си.</target>
        </trans-unit>
        <trans-unit id="9f3f7c7d9e43e8918099efac1f5805d8811f35df" translate="yes" xml:space="preserve">
          <source>Doing Sums</source>
          <target state="translated">Суммы сделки</target>
        </trans-unit>
        <trans-unit id="c0d111463257cf715e280f2b7d3c19b013c19ffb" translate="yes" xml:space="preserve">
          <source>Doing something repeatedly.</source>
          <target state="translated">Делать что-то неоднократно.</target>
        </trans-unit>
        <trans-unit id="2151e066a0ffe448d6aae7739b4f7382726846a0" translate="yes" xml:space="preserve">
          <source>Doing these checks by hand can quickly become tedious. Writing a bunch of accessors by hand is also incredibly tedious. There are a lot of modules on CPAN that can help you write safer and more concise code, including the modules we recommend in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">Выполнение этих проверок вручную может быстро стать утомительным. Написание набора аксессуаров вручную также невероятно утомительно. На CPAN есть много модулей, которые помогут вам писать более безопасный и лаконичный код, включая модули, которые мы рекомендуем в &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1639673d423ca711b3596783b5c0a4171be6aec" translate="yes" xml:space="preserve">
          <source>Doing this:</source>
          <target state="translated">Делаю это:</target>
        </trans-unit>
        <trans-unit id="c70ec1bd923ff14caf24abddbe98bbe566095521" translate="yes" xml:space="preserve">
          <source>Don't assume &lt;code&gt;&amp;gt;&lt;/code&gt; won't be the first character of a filename. Always use &lt;code&gt;&amp;lt;&lt;/code&gt; explicitly to open a file for reading, or even better, use the three-arg version of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, unless you want the user to be able to specify a pipe open.</source>
          <target state="translated">Не предполагайте, что &lt;code&gt;&amp;gt;&lt;/code&gt; не будет первым символом имени файла. Всегда используйте &lt;code&gt;&amp;lt;&lt;/code&gt; явно, чтобы открыть файл для чтения, или, что еще лучше, используйте версию &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; с тремя аргументами , если вы не хотите, чтобы пользователь мог указать канал open.</target>
        </trans-unit>
        <trans-unit id="51fadcebe3461dfde168100ac06626ef32c5c3c4" translate="yes" xml:space="preserve">
          <source>Don't assume Unix filesystem access semantics: that read, write, and execute are all the permissions there are, and even if they exist, that their semantics (for example what do &lt;code&gt;&quot;r&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; , and &lt;code&gt;&quot;x&quot;&lt;/code&gt; mean on a directory) are the Unix ones. The various Unix/POSIX compatibility layers usually try to make interfaces like &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; work, but sometimes there simply is no good mapping.</source>
          <target state="translated">Не предполагайте семантику доступа к файловой системе Unix: чтение, запись и выполнение - это все разрешения, которые есть, и даже если они существуют, их семантика (например, что означают &lt;code&gt;&quot;r&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; и &lt;code&gt;&quot;x&quot;&lt;/code&gt; в каталоге) являются Unix. Различные уровни совместимости Unix / POSIX обычно пытаются заставить работать такие интерфейсы, как &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; , но иногда просто нет хорошего сопоставления.</target>
        </trans-unit>
        <trans-unit id="4a45b9025bbd946f66021bb7d900991eb240c421" translate="yes" xml:space="preserve">
          <source>Don't assume a particular network device name.</source>
          <target state="translated">Не предполагайте конкретного имени сетевого устройства.</target>
        </trans-unit>
        <trans-unit id="46d416e1f318922467e8a69618050fe453e3d906" translate="yes" xml:space="preserve">
          <source>Don't assume a particular set of &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt;s will work.</source>
          <target state="translated">Не думайте, что конкретный набор &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt; будет работать.</target>
        </trans-unit>
        <trans-unit id="f77b1e37f7f7fe660c8641daee5c495d72fc56f7" translate="yes" xml:space="preserve">
          <source>Don't assume a text file will end with a newline. They should, but people forget.</source>
          <target state="translated">Не предполагайте,что текстовый файл закончится новой строкой.Должны,но люди забывают.</target>
        </trans-unit>
        <trans-unit id="98161964580f6c72edaf8ce914f3e1d98ec3ce2f" translate="yes" xml:space="preserve">
          <source>Don't assume set-uid and set-gid semantics. (And even if you do, think twice: set-uid and set-gid are a known can of security worms.)</source>
          <target state="translated">Не предполагай семантику сет-гид и сет-гид.(И даже если вы это сделаете,подумайте дважды:set-uid и set-gid-известная банка червей безопасности).</target>
        </trans-unit>
        <trans-unit id="904c69ae9ffdcafece3576aedd570251fa8bd53f" translate="yes" xml:space="preserve">
          <source>Don't assume that &lt;code&gt;Sys::Hostname&lt;/code&gt; (or any other API or command) returns either a fully qualified hostname or a non-qualified hostname: it all depends on how the system had been configured. Also remember that for things such as DHCP and NAT, the hostname you get back might not be very useful.</source>
          <target state="translated">Не предполагайте, что &lt;code&gt;Sys::Hostname&lt;/code&gt; (или любой другой API или команда) возвращает либо полностью определенное имя хоста, либо неквалифицированное имя хоста: все зависит от того, как была настроена система. Также помните, что для таких вещей, как DHCP и NAT, возвращаемое вами имя хоста может быть не очень полезным.</target>
        </trans-unit>
        <trans-unit id="cce6dd3c9e2a99e556dd9e7e5f6487f0ac7f77b2" translate="yes" xml:space="preserve">
          <source>Don't assume that a single &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; completely gets rid of the file: some filesystems (most notably the ones in VMS) have versioned filesystems, and &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; removes only the most recent one (it doesn't remove all the versions because by default the native tools on those platforms remove just the most recent version, too). The portable idiom to remove all the versions of a file is</source>
          <target state="translated">Не думайте, что одно единственное &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; полностью избавляет файл: некоторые файловые системы (в первую очередь те, что в VMS) имеют версионные файловые системы, и &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; удаляет только самую последнюю (она не удаляет все версии, потому что по умолчанию собственные инструменты на этих платформах удаляют также только самую последнюю версию). Переносимая идиома для удаления всех версий файла:</target>
        </trans-unit>
        <trans-unit id="45827beb2b333818dc1ab476c3c49bc561007b4d" translate="yes" xml:space="preserve">
          <source>Don't assume that any particular port (service) will respond.</source>
          <target state="translated">Не предполагайте,что какой-нибудь конкретный порт (сервис)ответит.</target>
        </trans-unit>
        <trans-unit id="6999e83ecac7276661229b08d824b9951f96931a" translate="yes" xml:space="preserve">
          <source>Don't assume that in pathnames you can collapse two leading slashes &lt;code&gt;//&lt;/code&gt; into one: some networking and clustering filesystems have special semantics for that. Let the operating system sort it out.</source>
          <target state="translated">Не думайте, что в именах путей вы можете свернуть две ведущие косые черты &lt;code&gt;//&lt;/code&gt; в одну: некоторые сетевые и кластерные файловые системы имеют для этого особую семантику. Позвольте операционной системе разобраться с этим.</target>
        </trans-unit>
        <trans-unit id="98d90ea04fc1672840d09560112d2b5f38aad8d8" translate="yes" xml:space="preserve">
          <source>Don't assume that the epoch starts at 00:00:00, January 1, 1970, because that is OS- and implementation-specific. It is better to store a date in an unambiguous representation. The ISO 8601 standard defines YYYY-MM-DD as the date format, or YYYY-MM-DDTHH:MM:SS (that's a literal &quot;T&quot; separating the date from the time). Please do use the ISO 8601 instead of making us guess what date 02/03/04 might be. ISO 8601 even sorts nicely as-is. A text representation (like &quot;1987-12-18&quot;) can be easily converted into an OS-specific value using a module like &lt;code&gt;Date::Parse&lt;/code&gt; . An array of values, such as those returned by &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, can be converted to an OS-specific representation using &lt;code&gt;Time::Local&lt;/code&gt; .</source>
          <target state="translated">Не предполагайте, что эпоха начинается в 00:00:00 1 января 1970 г., потому что это зависит от ОС и реализации. Дату лучше хранить в однозначном представлении. Стандарт ISO 8601 определяет формат даты YYYY-MM-DD или YYYY-MM-DDTHH: MM: SS (это буквальная буква &amp;laquo;T&amp;raquo;, отделяющая дату от времени). Пожалуйста, используйте ISO 8601 вместо того, чтобы заставлять нас угадывать дату 02/03/04. ISO 8601 отлично сортируется как есть. Текстовое представление (например, &amp;laquo;1987-12-18&amp;raquo;) можно легко преобразовать в значение, зависящее от ОС, с помощью такого модуля, как &lt;code&gt;Date::Parse&lt;/code&gt; . Массив значений, например, возвращаемых &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; , можно преобразовать в представление, зависящее от ОС, с помощью &lt;code&gt;Time::Local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae81459ffe886d165ec19458ee6907edce3977cd" translate="yes" xml:space="preserve">
          <source>Don't assume that the host has only one network card, or that it can't bind to many virtual IP addresses.</source>
          <target state="translated">Не думайте,что у хоста только одна сетевая карта,или что он не может привязаться ко многим виртуальным IP-адресам.</target>
        </trans-unit>
        <trans-unit id="762d289b8f69911c48e30355fa8f2ef9119426cc" translate="yes" xml:space="preserve">
          <source>Don't assume that the name used to invoke a command or program with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; can also be used to test for the existence of the file that holds the executable code for that command or program. First, many systems have &quot;internal&quot; commands that are built-in to the shell or OS and while these commands can be invoked, there is no corresponding file. Second, some operating systems (e.g., Cygwin, DJGPP, OS/2, and VOS) have required suffixes for executable files; these suffixes are generally permitted on the command name but are not required. Thus, a command like</source>
          <target state="translated">Не предполагайте, что имя, используемое для вызова команды или программы с помощью &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , также может использоваться для проверки существования файла, содержащего исполняемый код для этой команды или программы. Во-первых, во многих системах есть &amp;laquo;внутренние&amp;raquo; команды, встроенные в оболочку или ОС, и, хотя эти команды можно вызывать, соответствующего файла нет. Во-вторых, некоторые операционные системы (например, Cygwin, DJGPP, OS / 2 и VOS) имеют обязательные суффиксы для исполняемых файлов; эти суффиксы обычно разрешены в имени команды, но не обязательны. Таким образом, такая команда, как</target>
        </trans-unit>
        <trans-unit id="1514a854a4b008c5fba8916a7962921e2b8b3a4a" translate="yes" xml:space="preserve">
          <source>Don't assume that there is only one way to get through firewalls to the public Internet.</source>
          <target state="translated">Не думайте,что есть только один способ попасть через брандмауэры в общедоступный Интернет.</target>
        </trans-unit>
        <trans-unit id="c6a1267eacc3c912d76fd037d987680a5762ee68" translate="yes" xml:space="preserve">
          <source>Don't assume that write/modify permission on a directory gives the right to add or delete files/directories in that directory. That is filesystem specific: in some filesystems you need write/modify permission also (or even just) in the file/directory itself. In some filesystems (AFS, DFS) the permission to add/delete directory entries is a completely separate permission.</source>
          <target state="translated">Не предполагайте,что разрешение на запись/изменение каталога дает право добавлять или удалять файлы/каталоги в этом каталоге.Это зависит от файловой системы:в некоторых файловых системах вам нужно разрешение на запись/изменение также (или даже просто)в самом каталоге/файле.В некоторых файловых системах (AFS,DFS)разрешение на добавление/удаление записей в каталогах является совершенно отдельным разрешением.</target>
        </trans-unit>
        <trans-unit id="445d23235b8dff3b578e3bb5bf0fc30d1a0490ac" translate="yes" xml:space="preserve">
          <source>Don't assume that you can ping hosts and get replies.</source>
          <target state="translated">Не думайте,что вы можете пинговать хосты и получать ответы.</target>
        </trans-unit>
        <trans-unit id="b1edc420b94bcf10bf4d8c3ee5b511b8b1bd17fb" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach outside world through any other port than 80, or some web proxy. ftp is blocked by many firewalls.</source>
          <target state="translated">Не думайте,что вы можете связаться с внешним миром через любой другой порт,кроме 80,или через какой-нибудь веб-прокси.ftp заблокирован многими брандмауэрами.</target>
        </trans-unit>
        <trans-unit id="c31864fe8f7fd5417d78f831be7f49971ddfa830" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach the public Internet.</source>
          <target state="translated">Не предполагайте,что вы сможете выйти в общественный интернет.</target>
        </trans-unit>
        <trans-unit id="e3635e84ac318882496643a11d43ff013c114f31" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach yourself or any node by the name 'localhost'. The same goes for '127.0.0.1'. You will have to try both.</source>
          <target state="translated">Не предполагайте,что вы можете связаться с самим собой или каким-либо узлом под именем &quot;localhost&quot;.То же самое относится и к '127.0.0.1'.Вам придется попробовать и то,и другое.</target>
        </trans-unit>
        <trans-unit id="94e84b069d17212c205601cb91a4bdb912d4357e" translate="yes" xml:space="preserve">
          <source>Don't assume that you can send email by connecting to the local SMTP port.</source>
          <target state="translated">Не предполагайте,что вы можете отправлять электронную почту,подключившись к локальному SMTP-порту.</target>
        </trans-unit>
        <trans-unit id="93ae10616af2ea19ea7f8a1f9e13d6eb9fc81add" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix filesystem access semantics: the operating system or the filesystem may be using some ACL systems, which are richer languages than the usual &lt;code&gt;rwx&lt;/code&gt; . Even if the &lt;code&gt;rwx&lt;/code&gt; exist, their semantics might be different.</source>
          <target state="translated">Не предполагайте семантику доступа к файловой системе Unix: операционная система или файловая система могут использовать некоторые системы ACL, которые являются более богатыми языками, чем обычный &lt;code&gt;rwx&lt;/code&gt; . Даже если &lt;code&gt;rwx&lt;/code&gt; существуют, их семантика может быть другой.</target>
        </trans-unit>
        <trans-unit id="f793b546a43c7fdfddcd37819e15f770633a875c" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix user and group semantics: especially, don't expect &lt;code&gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;$&amp;gt;&lt;/code&gt; (or &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; ) to work for switching identities (or memberships).</source>
          <target state="translated">Не предполагайте семантику пользователей и групп Unix: особенно не ожидайте, что &lt;code&gt;$&amp;lt;&lt;/code&gt; и &lt;code&gt;$&amp;gt;&lt;/code&gt; (или &lt;code&gt;$(&lt;/code&gt; и &lt;code&gt;$)&lt;/code&gt; ) будут работать для переключения личности (или членства).</target>
        </trans-unit>
        <trans-unit id="de83ff9adf0f76046a05e27193105138389e30d8" translate="yes" xml:space="preserve">
          <source>Don't be afraid to use loop labels--they're there to enhance readability as well as to allow multilevel loop breaks. See the previous example.</source>
          <target state="translated">Не бойтесь использовать метки шлейфа-они позволяют улучшить читабельность,а также позволяют разрывать многоуровневый шлейф.См.предыдущий пример.</target>
        </trans-unit>
        <trans-unit id="789665e74c277d58dbd4bc3f085faf66c237708c" translate="yes" xml:space="preserve">
          <source>Don't be fooled into thinking that it is hard to create portable Perl code. It isn't. Perl tries its level-best to bridge the gaps between what's available on different platforms, and all the means available to use those features. Thus almost all Perl code runs on any machine without modification. But there are some significant issues in writing portable code, and this document is entirely about those issues.</source>
          <target state="translated">Не обманывайся,думая,что трудно создать портативный Perl-код.Это не так.Perl старается изо всех сил преодолеть разрыв между тем,что доступно на разных платформах,и всеми доступными средствами для использования этих возможностей.Таким образом,почти весь Perl-код работает на любой машине без модификаций.Но в написании переносимого кода есть некоторые существенные проблемы,и этот документ целиком и полностью посвящен этим проблемам.</target>
        </trans-unit>
        <trans-unit id="e9382c68d62f11f58c0e0116d77660fc6a3b3ba4" translate="yes" xml:space="preserve">
          <source>Don't blame Perl. It's the same as in C. IEEE says we have to do this. Perl numbers whose absolute values are integers under 2**31 (on 32-bit machines) will work pretty much like mathematical integers. Other numbers are not guaranteed.</source>
          <target state="translated">Не вини Перла.Это то же самое,что и в C.IEEE говорит,что мы должны сделать это.Perl числа,абсолютные значения которых-целые числа под 2**31 (на 32-битных машинах),будут работать практически так же,как и математические целые числа.Остальные числа не гарантированы.</target>
        </trans-unit>
        <trans-unit id="774b4dd48a669835b4126c2772387c78ce9c98be" translate="yes" xml:space="preserve">
          <source>Don't bother using &lt;code&gt;trailingData&lt;/code&gt; if the input is a filename.</source>
          <target state="translated">Не беспокойтесь об использовании &lt;code&gt;trailingData&lt;/code&gt; , если входными данными является имя файла.</target>
        </trans-unit>
        <trans-unit id="e2b0a9f3aafe7e01341dfe674e6e343efc8bbb76" translate="yes" xml:space="preserve">
          <source>Don't change this variable unless you &lt;b&gt;really&lt;/b&gt; know what you're doing.</source>
          <target state="translated">Не изменяйте эту переменную, если вы &lt;b&gt;действительно не&lt;/b&gt; знаете, что делаете.</target>
        </trans-unit>
        <trans-unit id="bf3d8d6437b2fb83642a1fd7abe5420705d405dd" translate="yes" xml:space="preserve">
          <source>Don't count on a specific environment variable existing in &lt;code&gt;%ENV&lt;/code&gt; . Don't count on &lt;code&gt;%ENV&lt;/code&gt; entries being case-sensitive, or even case-preserving. Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , or, if you really have to, make it conditional on &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; since in VMS the &lt;code&gt;%ENV&lt;/code&gt; table is much more than a per-process key-value string table.</source>
          <target state="translated">Не рассчитывайте на конкретную переменную среды, существующую в &lt;code&gt;%ENV&lt;/code&gt; . Не рассчитывайте, что записи &lt;code&gt;%ENV&lt;/code&gt; чувствительны к регистру или даже сохраняют регистр. Не пытайтесь очистить &lt;code&gt;%ENV&lt;/code&gt; , говоря &lt;code&gt;%ENV = ();&lt;/code&gt; , или, если вам действительно нужно, сделайте это условным для &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; поскольку в VMS таблица &lt;code&gt;%ENV&lt;/code&gt; - это гораздо больше, чем таблица строк значений ключей и значений для каждого процесса.</target>
        </trans-unit>
        <trans-unit id="037f7905f794172b9aa798cbaa7cfb0372b5498b" translate="yes" xml:space="preserve">
          <source>Don't count on filename globbing. Use &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Не рассчитывайте на подстановку имени файла. &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; используйте opendir , &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8d15e2d76caf019a3701f78e8198d57683e81f9" translate="yes" xml:space="preserve">
          <source>Don't count on per-program environment variables, or per-program current directories.</source>
          <target state="translated">Не рассчитывайте на переменные окружения программы или на текущие каталоги программы.</target>
        </trans-unit>
        <trans-unit id="660cbdd54752be68a4dc2ccd79e3477dc980f960" translate="yes" xml:space="preserve">
          <source>Don't count on signals or &lt;code&gt;%SIG&lt;/code&gt; for anything.</source>
          <target state="translated">Не рассчитывайте ни на какие сигналы или &lt;code&gt;%SIG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2504f73349f543cd4ab97266d28a299e9f5178ef" translate="yes" xml:space="preserve">
          <source>Don't count on specific values of &lt;code&gt;$!&lt;/code&gt; , neither numeric nor especially the string values. Users may switch their locales causing error messages to be translated into their languages. If you can trust a POSIXish environment, you can portably use the symbols defined by the &lt;code&gt;Errno&lt;/code&gt; module, like &lt;code&gt;ENOENT&lt;/code&gt; . And don't trust on the values of &lt;code&gt;$!&lt;/code&gt; at all except immediately after a failed system call.</source>
          <target state="translated">Не рассчитывайте на конкретные значения &lt;code&gt;$!&lt;/code&gt; , ни числовые, ни тем более строковые значения. Пользователи могут переключать свои языковые стандарты, в результате чего сообщения об ошибках переводятся на их языки. Если вы можете доверять среде POSIXish, вы можете переносимо использовать символы, определенные модулем &lt;code&gt;Errno&lt;/code&gt; , например &lt;code&gt;ENOENT&lt;/code&gt; . И не верьте ценности &lt;code&gt;$!&lt;/code&gt; вообще, за исключением момента сразу после сбоя системного вызова.</target>
        </trans-unit>
        <trans-unit id="d29e3f7d07b96795819a57e76db3864389865c2f" translate="yes" xml:space="preserve">
          <source>Don't direct the users of your module to download &lt;code&gt;Devel::PPPort&lt;/code&gt; . They are most probably no XS writers. Also, don't make</source>
          <target state="translated">Не направляйте пользователей вашего модуля на загрузку &lt;code&gt;Devel::PPPort&lt;/code&gt; . Скорее всего, они не писатели XS. Кроме того, не делайте</target>
        </trans-unit>
        <trans-unit id="4c8b6f86bbfc2b6c173c74faf597f3f3d4ca2dc7" translate="yes" xml:space="preserve">
          <source>Don't display</source>
          <target state="translated">Не показывать</target>
        </trans-unit>
        <trans-unit id="c1e22de2ba66c0889226c5735ba53c5285571154" translate="yes" xml:space="preserve">
          <source>Don't display mostly harmless warning messages.</source>
          <target state="translated">Не отображайте в основном безобидные предупреждающие сообщения.</target>
        </trans-unit>
        <trans-unit id="1547fa551c603cca7def3259e5b1fd45d8dbc6f8" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">Не попадайтесь в ловушку использования &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , когда подойдет простая &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; является более эффективным и менее подвержены ошибкам.</target>
        </trans-unit>
        <trans-unit id="29cf7dc4de80fc368eaed82cbb02b8b6d7166fa2" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">Не попадайтесь в ловушку использования &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , когда подойдет простая &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; является более эффективным и менее подвержены ошибкам.</target>
        </trans-unit>
        <trans-unit id="2de68b400b15f729bfc2845f7ab8c8768fb9196d" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of writing for the wrong audience. Your primary audience is a reasonably experienced developer with at least a moderate understanding of your module's application domain, who's just downloaded your module and wants to start using it as quickly as possible.</source>
          <target state="translated">Не попадись в ловушку письма не для той аудитории.Ваша основная аудитория-это достаточно опытный разработчик с хотя бы умеренным пониманием домена приложений вашего модуля,который только что загрузил ваш модуль и хочет начать использовать его как можно быстрее.</target>
        </trans-unit>
        <trans-unit id="f7e449fde074df52d869952df1fc18793a8a93fc" translate="yes" xml:space="preserve">
          <source>Don't forget the exceptional, pathological cases.</source>
          <target state="translated">Не забывайте об исключительных,патологических случаях.</target>
        </trans-unit>
        <trans-unit id="b1e51289079b4f632343c894dc7cce8050066f98" translate="yes" xml:space="preserve">
          <source>Don't forget to</source>
          <target state="translated">Не забудьте</target>
        </trans-unit>
        <trans-unit id="3e6739c8879bd9d08b76ade5df931676453f506a" translate="yes" xml:space="preserve">
          <source>Don't go through silly contortions to exit a loop at the top or the bottom, when Perl provides the &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; operator so you can exit in the middle. Just &quot;outdent&quot; it a little to make it more visible:</source>
          <target state="translated">Не делайте глупых искажений, чтобы выйти из цикла вверху или внизу, когда Perl предоставляет &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; оператор, так что вы можете выйти посередине. Просто &quot;выдвиньте&quot; его немного, чтобы было заметнее:</target>
        </trans-unit>
        <trans-unit id="f24938e6209641248330c946317ddd16f85839df" translate="yes" xml:space="preserve">
          <source>Don't just present an example without explaining what it does. Adding a short paragraph saying what the example will do can increase the value of the example immensely.</source>
          <target state="translated">Не просто приводите пример,не объясняя,что он делает.Добавление короткого абзаца о том,что будет делать пример,может значительно увеличить его ценность.</target>
        </trans-unit>
        <trans-unit id="af2f3b7627d5c9318a43fdf0c7ed8eb29f6f63df" translate="yes" xml:space="preserve">
          <source>Don't mix filtered &amp;amp; non-filtered data in the same database file.</source>
          <target state="translated">Не смешивайте отфильтрованные и нефильтрованные данные в одном файле базы данных.</target>
        </trans-unit>
        <trans-unit id="9bfaee9208ed0b4080e76b49f7092be9da21317d" translate="yes" xml:space="preserve">
          <source>Don't open the same file more than once at a time for writing, as some operating systems put mandatory locks on such files.</source>
          <target state="translated">Не открывайте один и тот же файл более одного раза за раз для записи,так как некоторые операционные системы накладывают на такие файлы обязательные блокировки.</target>
        </trans-unit>
        <trans-unit id="13d0e6ad295f2f5fa4a0e1c2294ab660c2ff68f2" translate="yes" xml:space="preserve">
          <source>Don't output the &quot;(definitions)&quot; sections.</source>
          <target state="translated">Не выводите &quot;(определения)&quot;.</target>
        </trans-unit>
        <trans-unit id="8760a0137fe661818eb2724e50d3c58a224e6f3d" translate="yes" xml:space="preserve">
          <source>Don't put &quot;=head</source>
          <target state="translated">Не пишите &quot;=глава</target>
        </trans-unit>
        <trans-unit id="ad5ea38ded2263705342205dafdb4799d4e0a15b" translate="yes" xml:space="preserve">
          <source>Don't quote large strings unless absolutely necessary:</source>
          <target state="translated">Не цитируйте большие строки,если в этом нет крайней необходимости:</target>
        </trans-unit>
        <trans-unit id="f5cf2886b363988134aefd1d621d74fc94b6b465" translate="yes" xml:space="preserve">
          <source>Don't re-invent the wheel</source>
          <target state="translated">Не изобретайте колесо</target>
        </trans-unit>
        <trans-unit id="81177c27776c8009338c295142a35e130e198399" translate="yes" xml:space="preserve">
          <source>Don't read an entire file into memory if you can process it line by line. Or more concretely, use a loop like this:</source>
          <target state="translated">Не читайте весь файл в память,если вы можете обрабатывать его построчно.Или более конкретно,используйте такой цикл:</target>
        </trans-unit>
        <trans-unit id="a35797b1a1b72b9841ad51955b9000b5a1529ffb" translate="yes" xml:space="preserve">
          <source>Don't require every module user to jump through the same hoops to achieve a simple result. You can always include optional parameters or routines for more complex or non-standard behaviour. If most of your users have to type a few almost identical lines of code when they start using your module, it's a sign that you should have made that behaviour a default. Another good indicator that you should use defaults is if most of your users call your routines with the same arguments.</source>
          <target state="translated">Не требуйте от каждого пользователя модуля перепрыгивать через одни и те же обручи для достижения простого результата.Вы всегда можете включить дополнительные параметры или процедуры для более сложного или нестандартного поведения.Если большинство ваших пользователей должны набрать несколько почти идентичных строк кода,когда они начинают использовать ваш модуль,это признак того,что вы должны были сделать это поведение по умолчанию.Другой хороший индикатор,который вы должны использовать по умолчанию,это если большинство ваших пользователей называют ваши процедуры с теми же самыми аргументами.</target>
        </trans-unit>
        <trans-unit id="c723f7c592b67ddf269e14e867541435896967e5" translate="yes" xml:space="preserve">
          <source>Don't scan for the found substrings.</source>
          <target state="translated">Не сканируйте на найденные подложки.</target>
        </trans-unit>
        <trans-unit id="d6fcbb0953d0c44b0d3d4321526cee5c66bebf52" translate="yes" xml:space="preserve">
          <source>Don't send a bug received acknowledgement to the reply address. Generally it is only a sensible to use this option if you are a perl maintainer actively watching perl porters for your message to arrive.</source>
          <target state="translated">Не отправляйте полученное подтверждение об ошибке на адрес для ответа.Обычно эту опцию целесообразно использовать только в том случае,если вы являетесь сопровождающим perl,активно наблюдающим за perl-портерами,чтобы ваше сообщение пришло.</target>
        </trans-unit>
        <trans-unit id="22920608692f0a3432e5ce4c9717be87d806f116" translate="yes" xml:space="preserve">
          <source>Don't send copy to administrator.</source>
          <target state="translated">Не посылайте копию администратору.</target>
        </trans-unit>
        <trans-unit id="4bc7424f428b4c2b286895e2bee1c1badf45b0f9" translate="yes" xml:space="preserve">
          <source>Don't think about it too much.</source>
          <target state="translated">Не думай об этом слишком много.</target>
        </trans-unit>
        <trans-unit id="e145223fc51004b2dae0ceec37468cb3be4a2528" translate="yes" xml:space="preserve">
          <source>Don't think that you can get the address of a Perl variable when it is stored as an integer or double number! &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; will force the variable's internal representation to string, just as if you had written something like &lt;code&gt;$x .= ''&lt;/code&gt; .</source>
          <target state="translated">Не думайте, что вы можете получить адрес переменной Perl, если она хранится в виде целого или двойного числа! &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; заставит внутреннее представление переменной преобразоваться в строку, как если бы вы написали что-то вроде &lt;code&gt;$x .= ''&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0c8af6f9c4025d7dc7e616e0715698cd40e403" translate="yes" xml:space="preserve">
          <source>Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , it will throw a fatal error. This is equivalent to doing the following from DCL:</source>
          <target state="translated">Не пытайтесь очистить &lt;code&gt;%ENV&lt;/code&gt; , говоря &lt;code&gt;%ENV = ();&lt;/code&gt; , это приведет к фатальной ошибке. Это эквивалентно выполнению следующего из DCL:</target>
        </trans-unit>
        <trans-unit id="ed025c55f145c736fa2b816ded97f2454d7a958f" translate="yes" xml:space="preserve">
          <source>Don't try to do this:</source>
          <target state="translated">Не пытайся сделать это:</target>
        </trans-unit>
        <trans-unit id="6dcb6f3c6b552350b94a3e90424b7771b163de66" translate="yes" xml:space="preserve">
          <source>Don't use &quot;=item&quot;s outside of an &quot;=over&quot; ... &quot;=back&quot; region.</source>
          <target state="translated">Не используйте &quot;=пункт&quot; за пределами &quot;=over&quot; ...&quot;=зад&quot;.</target>
        </trans-unit>
        <trans-unit id="a7de6cdfcbff257732efdc95079781ff79434e7b" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;:&lt;/code&gt; as a part of a filename since many systems use that for their own semantics (Mac OS Classic for separating pathname components, many networking schemes and utilities for separating the nodename and the pathname, and so on). For the same reasons, avoid &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">Не используйте &lt;code&gt;:&lt;/code&gt; как часть имени файла, поскольку многие системы используют это для своей собственной семантики (Mac OS Classic для разделения компонентов имени пути, множество сетевых схем и утилит для разделения имени узла и имени пути и т. Д.). По тем же причинам, избегать &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; и &lt;code&gt;|&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd80fb1475bf587607bf23dcb48492b2994f3826" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не используйте &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; для прерывания подпрограммы, если есть вероятность, что кто-то захочет перехватить произошедшую ошибку. Вместо этого используйте &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , которая может быть захвачена &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ae3e40c5aafd256eca74b7ca54a5e5fe01a8a09" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Не используйте &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; для прерывания подпрограммы, если есть вероятность, что кто-то захочет перехватить произошедшую ошибку. Вместо этого используйте &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , которая может быть захвачена &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cae11462d2674103d0d8e77ff3c2d3bb81f328e" translate="yes" xml:space="preserve">
          <source>Don't use it. It makes no sense to deal with bytes in a text string, and it makes no sense to deal with characters in a byte string. Do the proper conversions (by decoding/encoding), and things will work out well: you get character counts for decoded data, and byte counts for encoded data.</source>
          <target state="translated">Не используй его.Нет смысла работать с байтами в текстовой строке,и нет смысла работать с символами в байтовой строке.Делайте правильные преобразования (декодируя/кодируя),и все получится:вы получаете количество символов для декодированных данных,а количество байт-для закодированных.</target>
        </trans-unit>
        <trans-unit id="31a008400a1239308283e11c2496113f4c495814" translate="yes" xml:space="preserve">
          <source>Don't use it. Unfortunately, it assumes that the programmer's environment and that of the user will use the same encoding. It will use the same encoding for the source code and for STDIN and STDOUT. When a program is copied to another machine, the source code does not change, but the STDIO environment might.</source>
          <target state="translated">Не используй его.К сожалению,она предполагает,что окружение программиста и пользователя будет использовать одну и ту же кодировку.Она будет использовать одну и ту же кодировку для исходного кода и для STDIN и STDOUT.Когда программа копируется на другую машину,исходный код не изменяется,но среда STDIO может.</target>
        </trans-unit>
        <trans-unit id="c9b01c21ad5ce16a7981e3294ccf4cf41b5fef04" translate="yes" xml:space="preserve">
          <source>Don't use this module directly.</source>
          <target state="translated">Не используйте этот модуль напрямую.</target>
        </trans-unit>
        <trans-unit id="71ee42da50b79ae9e6a47caf180fc6688aabc5ce" translate="yes" xml:space="preserve">
          <source>Don't use this.</source>
          <target state="translated">Не используй это.</target>
        </trans-unit>
        <trans-unit id="d8022c54cffc7dadfd83dedf1e4a2dbf6ad467e8" translate="yes" xml:space="preserve">
          <source>Don't worry about posting if you can't say when the module will be ready - just say so in the message. It might be worth inviting others to help you, they may be able to complete it for you!</source>
          <target state="translated">Не беспокойтесь о публикации,если вы не можете сказать,когда модуль будет готов-просто скажите это в сообщении.Возможно,стоит пригласить других людей помочь вам,они смогут завершить его за вас!</target>
        </trans-unit>
        <trans-unit id="327df9e94148631e3c9a41cfa753d9d2769d418a" translate="yes" xml:space="preserve">
          <source>Don't worry if it says Math::BigInt::Lite, bignum and friends will use Lite if it is installed since it is faster for some operations. It will be automatically upgraded to BigInt whenever necessary:</source>
          <target state="translated">Не волнуйтесь,если там написано Math::BigInt::Lite,bignum и друзья будут использовать Lite,если он установлен,так как он быстрее для некоторых операций.При необходимости он будет автоматически обновлен до BigInt:</target>
        </trans-unit>
        <trans-unit id="83fe6a1f79295f6f6329274881574682cc33b843" translate="yes" xml:space="preserve">
          <source>Done by Archive::Tar internally when reading the tar file: validate the header against the checksum to ensure integer tar file.</source>
          <target state="translated">Внутренне выполняется по архиву::Tar при чтении tar-файла:проверяет заголовок на соответствие контрольной суммы для обеспечения целочисленного tar-файла.</target>
        </trans-unit>
        <trans-unit id="9b0acdbd029a7828ca595b0d9f7618bd97d3679c" translate="yes" xml:space="preserve">
          <source>Dotfiles.pm</source>
          <target state="translated">Dotfiles.pm</target>
        </trans-unit>
        <trans-unit id="b17ae50dd8754e17c2584e6a5426d3fcdb608cdb" translate="yes" xml:space="preserve">
          <source>Double quotes indicate that the text will be interpolated using exactly the same rules as normal double quoted strings.</source>
          <target state="translated">Двойные кавычки указывают на то,что текст будет интерполирован по тем же правилам,что и обычные строки в двойных кавычках.</target>
        </trans-unit>
        <trans-unit id="d8bdee99b293542316fa229d2907bcacda4feae8" translate="yes" xml:space="preserve">
          <source>Double quotes or single quotes may be used around literal strings:</source>
          <target state="translated">Вокруг строк литералов могут использоваться двойные кавычки или одиночные кавычки:</target>
        </trans-unit>
        <trans-unit id="c45e85fa2adbda8304a1994b69613855b231b88d" translate="yes" xml:space="preserve">
          <source>Double-Typed SVs</source>
          <target state="translated">Двухпечатные SV</target>
        </trans-unit>
        <trans-unit id="bc0859619112e37c2df7dc4b11b4c4a86c663786" translate="yes" xml:space="preserve">
          <source>Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;gt;</source>
          <target state="translated">Дуг &lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;lt; dougm@osf.org &amp;gt;</target>
        </trans-unit>
        <trans-unit id="ebd84c7c0c73cf64e66299d99641345c7d6ec4c9" translate="yes" xml:space="preserve">
          <source>Doug MacEachern has an article on embedding in Volume 1, Issue 4 of The Perl Journal ( &lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt; ). Doug is also the developer of the most widely-used Perl embedding: the mod_perl system (perl.apache.org), which embeds Perl in the Apache web server. Oracle, Binary Evolution, ActiveState, and Ben Sugars's nsapi_perl have used this model for Oracle, Netscape and Internet Information Server Perl plugins.</source>
          <target state="translated">У Дуга Макихерна есть статья о встраивании в том 1, выпуск 4 журнала Perl ( &lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt; ). Дуг также является разработчиком наиболее широко используемого встраивания Perl: системы mod_perl (perl.apache.org), которая встраивает Perl в веб-сервер Apache. Oracle, Binary Evolution, ActiveState и nsapi_perl Бена Сугарса использовали эту модель для подключаемых модулей Perl Oracle, Netscape и Internet Information Server.</target>
        </trans-unit>
        <trans-unit id="efd9fe42018c0e9681fed6f906ad1da72ef74937" translate="yes" xml:space="preserve">
          <source>Down this road lies madness.</source>
          <target state="translated">По этой дороге лежит безумие.</target>
        </trans-unit>
        <trans-unit id="711e55a0520f6b8eb41cd3adf5cf2f6dfb3f33d2" translate="yes" xml:space="preserve">
          <source>Downgrade existing SSL connection back to plain. This is needed to work with some FTP helpers at firewalls, which need to see the PORT and PASV commands and responses to dynamically open the necessary ports. In this case &lt;code&gt;starttls&lt;/code&gt; is usually only done to protect the authorization.</source>
          <target state="translated">Понизить существующее SSL-соединение до простого. Это необходимо для работы с некоторыми помощниками FTP в брандмауэрах, которым необходимо видеть команды и ответы PORT и PASV для динамического открытия необходимых портов. В этом случае &lt;code&gt;starttls&lt;/code&gt; обычно выполняется только для защиты авторизации.</target>
        </trans-unit>
        <trans-unit id="6863ad3882079de8bb32abea0819f1a0f48ff477" translate="yes" xml:space="preserve">
          <source>Download and install the Filter::Simple module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Скачайте и установите фильтр::Простой модуль.(Если у вас есть Perl 5.7.1 или более поздняя версия,это уже сделано за вас).</target>
        </trans-unit>
        <trans-unit id="026541fe8b438be29a9f47a4ab1e22dcb6dbc643" translate="yes" xml:space="preserve">
          <source>Download target directory?</source>
          <target state="translated">Скачать целевой каталог?</target>
        </trans-unit>
        <trans-unit id="824b6b54054ef1a9091856d053b0662e9a165ca3" translate="yes" xml:space="preserve">
          <source>Download the ExtUtils::Embed kit from CPAN and run `make test'. If the tests pass, read the pods again and again and again. If they fail, see &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; and send a bug report with the output of &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; along with &lt;code&gt;perl -V&lt;/code&gt; .</source>
          <target state="translated">Загрузите комплект ExtUtils :: Embed с CPAN и запустите `make test '. Если тесты пройдены, читайте пакеты снова и снова. Если они терпят неудачу, посмотрите &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; и отправьте отчет об ошибке с выводом &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; вместе с &lt;code&gt;perl -V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3467811ada73635cf68082c7cc090eea63c880e2" translate="yes" xml:space="preserve">
          <source>Download the files in the desired version of Unicode from the Unicode web site &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;). These should replace the existing files in</source>
          <target state="translated">Загрузите файлы в нужной версии Unicode с веб-сайта Unicode &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt; ). Они должны заменить существующие файлы в</target>
        </trans-unit>
        <trans-unit id="c1b64de29b8a9bf6464d6b725c2720abd75c3426" translate="yes" xml:space="preserve">
          <source>Download the pmd-bin-X.Y.zip () from the SourceForge site, extract the pmd-X.Y.jar from it, and then run that on source code thusly:</source>
          <target state="translated">Скачайте pmd-bin-X.Y.zip ()с сайта SourceForge,извлеките из него банку pmd-X.Y.jar,а затем запустите ее на исходном коде таким образом:</target>
        </trans-unit>
        <trans-unit id="e49fb030ab1aaee57147e5e7a7127ea439db8792" translate="yes" xml:space="preserve">
          <source>Download, build, and install the Filter::Util::Call module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Скачайте,создайте и установите модуль &quot;Фильтр::Util::Call&quot;.(Если у Вас есть Perl 5.7.1 или более поздняя версия,это уже сделано за Вас).</target>
        </trans-unit>
        <trans-unit id="08f4aa0358a86ec0353cf2d2ed049201bf17031c" translate="yes" xml:space="preserve">
          <source>Downloads report data for this distribution from www.cpantesters.org and displays a subset of them.</source>
          <target state="translated">Загружает данные для этого дистрибутива с сайта www.cpantesters.org и отображает их подмножество.</target>
        </trans-unit>
        <trans-unit id="366a5eddbaecc6160b117d778c095e50de4e854c" translate="yes" xml:space="preserve">
          <source>Downloads the README file associated with a distribution and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">Загружает файл README, связанный с дистрибутивом, и запускает его через пейджер, указанный в &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9c288326280b540c25926e9df585a7d06577d9" translate="yes" xml:space="preserve">
          <source>Downloads the distribution from CPAN and unpacks it. Does nothing if the distribution has already been downloaded and unpacked within the current session.</source>
          <target state="translated">Загружает дистрибутив из CPAN и распаковывает его.Ничего не делает,если дистрибутив уже был скачан и распакован в течение текущей сессии.</target>
        </trans-unit>
        <trans-unit id="8b9ffede701ef3f70bd821cb754750834e2eee96" translate="yes" xml:space="preserve">
          <source>Downloads the pod documentation of the file associated with a distribution (in HTML format) and runs it through the external command</source>
          <target state="translated">Загружает документацию по pod файлу,связанному с дистрибутивом (в формате HTML)и запускает его через внешнюю команду</target>
        </trans-unit>
        <trans-unit id="47d8215ef4fc8a530cd9137d652dba538ecf4224" translate="yes" xml:space="preserve">
          <source>Draw the tree with standard ASCII characters like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;. These don't look as clean as the VT100 characters, but they'll work with almost any terminal (or the horizontal scrolling mode of less(1)) and are suitable for text documentation or email. This is the default.</source>
          <target state="translated">Нарисуйте дерево стандартными символами ASCII, такими как &lt;code&gt;+&lt;/code&gt; и &lt;code&gt;|&lt;/code&gt; . Они не выглядят так чисто, как символы VT100, но они будут работать практически с любым терминалом (или в режиме горизонтальной прокрутки less (1)) и подходят для текстовой документации или электронной почты. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="435321dd1c82c18e50a09e89a625d44c2cad992d" translate="yes" xml:space="preserve">
          <source>Due to a bug in Perl, &lt;code&gt;autodie&lt;/code&gt; may &quot;lose&quot; any format which has the same name as an autodying built-in or function.</source>
          <target state="translated">Из-за ошибки в Perl &lt;code&gt;autodie&lt;/code&gt; может &amp;laquo;потерять&amp;raquo; любой формат, имеющий то же имя, что и встроенная функция или функция autodying.</target>
        </trans-unit>
        <trans-unit id="6f8b083c9efdbb98335cadbb85143fc7af77ce11" translate="yes" xml:space="preserve">
          <source>Due to a popular demand the perl external program calling has been changed wrt Andreas Kaiser's port.</source>
          <target state="translated">В связи с популярным спросом был изменен вызов perl внешней программы в порт Андреаса Кайзера.</target>
        </trans-unit>
        <trans-unit id="2fa72b6c00f9a2dd66e6782d6e7396b6679249ff" translate="yes" xml:space="preserve">
          <source>Due to an implementation glitch, the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook is called even inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;. Do not use this to rewrite a pending exception in &lt;code&gt;$@&lt;/code&gt; , or as a bizarre substitute for overriding &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; . This strange action at a distance may be fixed in a future release so that &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; is only called if your program is about to exit, as was the original intent. Any other use is deprecated.</source>
          <target state="translated">Из-за сбоя реализации &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; вызывается даже внутри &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; . Не используйте это для перезаписи ожидающего исключения в &lt;code&gt;$@&lt;/code&gt; или как причудливую замену для переопределения &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; . Это странное действие на расстоянии может быть исправлено в будущих версиях, так что &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; будет вызываться только в том случае, если ваша программа вот-вот завершится , как это было изначально задумано. Любое другое использование не рекомендуется.</target>
        </trans-unit>
        <trans-unit id="c65e636e9846e4e76451103ccccbb36e90580ce5" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate bug in how &lt;code&gt;given&lt;/code&gt; was implemented between Perl 5.10 and 5.16, under those implementations the version of &lt;code&gt;$_&lt;/code&gt; governed by &lt;code&gt;given&lt;/code&gt; is merely a lexically scoped copy of the original, not a dynamically scoped alias to the original, as it would be if it were a &lt;code&gt;foreach&lt;/code&gt; or under both the original and the current Perl 6 language specification. This bug was fixed in Perl 5.18. If you really want a lexical &lt;code&gt;$_&lt;/code&gt; , specify that explicitly, but note that &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; is now deprecated and will warn unless warnings have been disabled:</source>
          <target state="translated">Из-за досадной ошибки в том, как &lt;code&gt;given&lt;/code&gt; был реализован между Perl 5.10 и 5.16, в этих реализациях версия &lt;code&gt;$_&lt;/code&gt; управляемая &lt;code&gt;given&lt;/code&gt; , является просто копией оригинала с лексической областью видимости, а не псевдонимом оригинала с динамической областью видимости, как это было бы если бы это был &lt;code&gt;foreach&lt;/code&gt; или как в исходной, так и в текущей спецификации языка Perl 6. Эта ошибка была исправлена ​​в Perl 5.18. Если вам действительно нужен лексический &lt;code&gt;$_&lt;/code&gt; , укажите это явно, но обратите внимание, что &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; теперь устарел и будет предупреждать, если предупреждения не были отключены:</target>
        </trans-unit>
        <trans-unit id="a5aff89951fd9e95c733a40d7b1bb49174fdbcb8" translate="yes" xml:space="preserve">
          <source>Due to backwards compatibility, all filehandles resemble objects of class &lt;code&gt;IO::Handle&lt;/code&gt; , or actually classes derived from that class. They actually aren't. Which means you can't derive your own class from &lt;code&gt;IO::Handle&lt;/code&gt; and inherit those methods.</source>
          <target state="translated">Из-за обратной совместимости все дескрипторы файлов напоминают объекты класса &lt;code&gt;IO::Handle&lt;/code&gt; или фактически классы, производные от этого класса. На самом деле это не так. Это означает, что вы не можете получить свой собственный класс из &lt;code&gt;IO::Handle&lt;/code&gt; и наследовать эти методы.</target>
        </trans-unit>
        <trans-unit id="46599dc97579c3a9d5b0ac13818c4864629c3a1b" translate="yes" xml:space="preserve">
          <source>Due to how subtests work, you may omit a plan if you desire. This adds an implicit &lt;code&gt;done_testing()&lt;/code&gt; to the end of your subtest. The following two subtests are equivalent:</source>
          <target state="translated">Из-за того, как работают субтесты, вы можете пропустить план, если хотите. Это добавляет неявный &lt;code&gt;done_testing()&lt;/code&gt; в конец вашего подтеста. Следующие два подтеста эквивалентны:</target>
        </trans-unit>
        <trans-unit id="bfabb840ac564314e7376483141ead0d401f2f7b" translate="yes" xml:space="preserve">
          <source>Due to issues with various CPUs, math libraries, compilers, and standards, results for &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; may vary depending on any combination of the above. Perl attempts to conform to the Open Group/IEEE standards for the results returned from &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt;, but cannot force the issue if the system Perl is run on does not allow it. (Tru64, HP-UX 10.20)</source>
          <target state="translated">Из-за проблем с различными процессорами, математическими библиотеками, компиляторами и стандартами результаты для &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; могут отличаться в зависимости от любой комбинации вышеперечисленного. Perl пытается соответствовать стандартам Open Group / IEEE для результатов, возвращаемых &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; , но не может вызвать проблему, если система, в которой запущен Perl, не позволяет этого. (Tru64, HP-UX 10.20)</target>
        </trans-unit>
        <trans-unit id="68391d1e9af605eed85ca89bb210a2cba148458c" translate="yes" xml:space="preserve">
          <source>Due to limitations of Perl subroutine call semantics, you cannot pass an array or hash. Prepend it with a &lt;code&gt;\&lt;/code&gt; to pass its reference instead. This will be remedied in time, now that Perl has subroutine prototypes. For now, you need to use the extended usage form, and prepend the name with a &lt;code&gt;*&lt;/code&gt; to output it as a hash or array.</source>
          <target state="translated">Из-за ограничений семантики вызова подпрограмм Perl вы не можете передавать массив или хэш. Добавьте к нему &lt;code&gt;\&lt;/code&gt; , чтобы вместо этого передать ссылку. Со временем это будет исправлено, поскольку Perl имеет прототипы подпрограмм. На данный момент вам нужно использовать расширенную форму использования и добавить к имени символ &lt;code&gt;*&lt;/code&gt; , чтобы вывести его как хэш или массив.</target>
        </trans-unit>
        <trans-unit id="b463757edb0c11231cc7018f0eaae187fe6e4840" translate="yes" xml:space="preserve">
          <source>Due to popular demand, 'MIME-Header-ISO_2022_JP' was introduced by Makamaka. Thre are still too many MUAs especially cellular phone handsets which does not grok UTF-8.</source>
          <target state="translated">В связи с популярным спросом,'MIME-Header-ISO_2022_JP' был представлен Макамака.До сих пор слишком много MUA,особенно это касается мобильных телефонов,которые не громоздятся в UTF-8.</target>
        </trans-unit>
        <trans-unit id="3bd045cac184874cb4ad7bcc8e71c09d97d5cddc" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX's Big5+) and &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX's Big5e) are distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra China-based encodings.</source>
          <target state="translated">Из-за проблем с размером &lt;code&gt;EUC-TW&lt;/code&gt; (расширенный символ Unix), &lt;code&gt;CCCII&lt;/code&gt; (код китайского символа для обмена информацией), &lt;code&gt;BIG5PLUS&lt;/code&gt; (Big5 + &lt;code&gt;BIG5EXT&lt;/code&gt; ) и BIG5EXT (Big5e CMEX) распространяются отдельно на CPAN под названием &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt; . Этот модуль также содержит дополнительные китайские кодировки.</target>
        </trans-unit>
        <trans-unit id="5e606dfe28df13df23c0793d29104abe515f70ff" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;GB 18030&lt;/code&gt; (an extension to &lt;code&gt;GBK&lt;/code&gt; ) is distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra Taiwan-based encodings.</source>
          <target state="translated">Из-за проблем с размером &lt;code&gt;GB 18030&lt;/code&gt; (расширение &lt;code&gt;GBK&lt;/code&gt; ) распространяется отдельно на CPAN под названием &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt; . Этот модуль также содержит дополнительные тайваньские кодировки.</target>
        </trans-unit>
        <trans-unit id="d825b88c92a7854e8e07b5fbd910a2348c547422" translate="yes" xml:space="preserve">
          <source>Due to the current implementation of &lt;code&gt;autodie&lt;/code&gt; , unexpected results may be seen when used near or with the string version of eval.</source>
          <target state="translated">Из-за текущей реализации &lt;code&gt;autodie&lt;/code&gt; могут быть получены неожиданные результаты при использовании рядом со строковой версией eval.</target>
        </trans-unit>
        <trans-unit id="d3912f30ffb4a7edcdecb55dbe256ab47781b419" translate="yes" xml:space="preserve">
          <source>Due to the fact that AIX 4.3.3 reached end-of-service in December 31, 2003 this information is provided as is. The Perl versions prior to Perl 5.8.9 could be compiled on AIX up to 4.3.3 with the following settings (your mileage may vary):</source>
          <target state="translated">В связи с тем,что АИХ 4.3.3 вышел из эксплуатации 31 декабря 2003 г.,эта информация представлена в ее нынешнем виде.Версии Perl до Perl 5.8.9 могут быть скомпилированы на AIX до 4.3.3 со следующими настройками (ваш пробег может варьироваться):</target>
        </trans-unit>
        <trans-unit id="0cc8eb8ed52c08d74c71e528310f912e564ee1bb" translate="yes" xml:space="preserve">
          <source>Due to the interaction between runtime and compiletime issues, and because it's probably not a very good idea anyway, you may not use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; to turn them off at compiletime. However, you may control their behaviour at runtime using the disable() and enable() methods to turn them off and on respectively.</source>
          <target state="translated">Из - за взаимодействия между вопросами во время выполнения и compiletime, и потому , что это , вероятно , не очень хорошая идея , так или иначе, вы не можете не использовать &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; , чтобы отключить их в compiletime. Однако вы можете контролировать их поведение во время выполнения, используя методы disable () и enable (), чтобы выключить и включить их соответственно.</target>
        </trans-unit>
        <trans-unit id="5dba6a65e991b31774fba10843a79cd147209260" translate="yes" xml:space="preserve">
          <source>Due to the limitations of the implementation, you must use base</source>
          <target state="translated">В связи с ограничениями в реализации,необходимо использовать базовые</target>
        </trans-unit>
        <trans-unit id="eb744fcb352ecd1572a7e400ccb774b86e7f5bb7" translate="yes" xml:space="preserve">
          <source>Due to the restriction of the quotes, this is a fairly complex problem. Thankfully, we have Jeffrey Friedl, author of</source>
          <target state="translated">В связи с ограничением котировок,это достаточно сложная проблема.К счастью,у нас есть Джеффри Фридл,автор</target>
        </trans-unit>
        <trans-unit id="e3d6d3e302ca0b687c4f0b65161fa70175b1c871" translate="yes" xml:space="preserve">
          <source>Due to the rules and rigors of ANSI C, on some systems you have to do a seek whenever you switch between reading and writing. Amongst other things, this may have the effect of calling stdio's clearerr(3). A WHENCE of &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;SEEK_CUR&lt;/code&gt; ) is useful for not moving the file position:</source>
          <target state="translated">Из-за правил и строгости ANSI C в некоторых системах вам нужно выполнять поиск всякий раз, когда вы переключаетесь между чтением и записью. Среди прочего, это может привести к вызову функции clearrr (3) stdio. WHENCE, равный &lt;code&gt;1&lt;/code&gt; ( &lt;code&gt;SEEK_CUR&lt;/code&gt; ), полезен, чтобы не перемещать позицию файла:</target>
        </trans-unit>
        <trans-unit id="791e734fb8c106991b00acd93d1da356b7e03d9b" translate="yes" xml:space="preserve">
          <source>Due to the very cryptic nature of these options, another style was developed that used long names. So instead of a cryptic &lt;code&gt;-l&lt;/code&gt; one could use the more descriptive &lt;code&gt;--long&lt;/code&gt; . To distinguish between a bundle of single-character options and a long one, two dashes are used to precede the option name. Early implementations of long options used a plus &lt;code&gt;+&lt;/code&gt; instead. Also, option values could be specified either like</source>
          <target state="translated">Из-за очень загадочной природы этих параметров был разработан другой стиль, в котором использовались длинные имена. Поэтому вместо загадочного &lt;code&gt;-l&lt;/code&gt; можно использовать более описательный &lt;code&gt;--long&lt;/code&gt; . Чтобы отличить набор односимвольных параметров от длинных, перед именем параметра используются два дефиса. Ранние реализации длинных опций вместо этого использовали плюс &lt;code&gt;+&lt;/code&gt; . Кроме того, значения параметров могут быть указаны как</target>
        </trans-unit>
        <trans-unit id="c0e24e606681dc5af1b9b3cb9795462cb06198f7" translate="yes" xml:space="preserve">
          <source>Due to the way that Perl parses things, your parentheses and brackets may need to be balanced, even including comments. If you run into any examples, please send them to &lt;code&gt;perlbug@perl.org&lt;/code&gt; , so that we can have a concrete example for this man page.</source>
          <target state="translated">Из-за того, как Perl разбирает вещи, ваши круглые и квадратные скобки, возможно, потребуется сбалансировать, даже включая комментарии. Если вы &lt;code&gt;perlbug@perl.org&lt;/code&gt; с какими- либо примерами, отправьте их по адресу perlbug@perl.org , чтобы у нас был конкретный пример для этой страницы руководства .</target>
        </trans-unit>
        <trans-unit id="fc3fa3b419b8695e1ca79a869f79ee2bcd448351" translate="yes" xml:space="preserve">
          <source>Due to their nature, not all Unicode character properties are suitable for regular expression matches, nor &lt;code&gt;prop_invlist()&lt;/code&gt; . The remaining non-provisional, non-internal ones are accessible via &lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;prop_invmap() in Unicode::UCD&lt;/a&gt; (except for those that this Perl installation hasn't included; see &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;below for which those are&lt;/a&gt;).</source>
          <target state="translated">Из-за своей природы не все свойства символов Юникода подходят для сопоставления регулярных выражений, ни &lt;code&gt;prop_invlist()&lt;/code&gt; . Остальные не предварительные, не внутренние, доступны через &lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;prop_invmap () в Unicode :: UCD&lt;/a&gt; (за исключением тех, которые не включены в эту установку Perl; см. &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;Ниже, какие они есть&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1caad945fadff253ca62db9c999f67f3c76a14fd" translate="yes" xml:space="preserve">
          <source>Dummy module providing JSON::PP::Boolean</source>
          <target state="translated">Фальшивый модуль,предоставляющий JSON::PP::Boolean</target>
        </trans-unit>
        <trans-unit id="fc825db9b75c6b805dc48232f9aa43bb74e273e4" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;locks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">Фальшивая рутина,которая &quot;запирает&quot; SV при отсутствии модуля блокировки.Существует для того,чтобы избежать тестирования на указатель функции NULL и потому,что он потенциально может предупреждать при некотором уровне строгости.</target>
        </trans-unit>
        <trans-unit id="bf0c1d486931f3f325ed075b19809ade73db7a85" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;shares&quot; an SV when there is no sharing module present. Or &quot;locks&quot; it. Or &quot;unlocks&quot; it. In other words, ignores its single SV argument. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">Фальшивая рутина,которая &quot;делится&quot; SV при отсутствии модуля совместного использования.Или &quot;запирает&quot; его.Или &quot;разблокирует&quot; его.Другими словами,игнорирует его единственный аргумент SV.Существует для того,чтобы избежать проверки на указатель функции NULL и потому,что он потенциально может предупреждать при некотором уровне строгости.</target>
        </trans-unit>
        <trans-unit id="176b35c46c4ecb91ea04e78d1a42469728759765" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;unlocks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">Манекен,который &quot;отпирает&quot; SV при отсутствии блокирующего модуля.Существует для того,чтобы избежать тестирования указателя на NULL-функцию и потому,что он потенциально может предупреждать при некотором уровне строгости.</target>
        </trans-unit>
        <trans-unit id="37582a718d2cb7f89d1fea284988f5efcf14f0a7" translate="yes" xml:space="preserve">
          <source>Dummy routine which reports that object can be destroyed when there is no sharing module present. It ignores its single SV argument, and returns 'true'. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">Фальшивая рутина,которая сообщает,что объект может быть уничтожен при отсутствии модуля совместного использования.Он игнорирует свой единственный SV аргумент и возвращает 'true'.Существует для того,чтобы избежать проверки на указатель функции NULL и потому,что он потенциально может предупреждать при некотором уровне строгости.</target>
        </trans-unit>
        <trans-unit id="1a71039f50cfa3d68327859e6e1ee38df19b6603" translate="yes" xml:space="preserve">
          <source>Dump Pod-parsing events as text</source>
          <target state="translated">Дампа Под-парсинг событий в виде текста</target>
        </trans-unit>
        <trans-unit id="f2e8d87285df2d5dabb9e7d33d3a5ccc1734224b" translate="yes" xml:space="preserve">
          <source>Dump arrays holding contents of debugged files.</source>
          <target state="translated">Массивы дампов,содержащие содержимое отлаженных файлов.</target>
        </trans-unit>
        <trans-unit id="c3ebe589cb305dd68a2940605b6daaa7020bacf2" translate="yes" xml:space="preserve">
          <source>Dump arrays holding debugged files.</source>
          <target state="translated">Массивы дампов,содержащие отлаженные файлы.</target>
        </trans-unit>
        <trans-unit id="226b4cf975bc516395af9737531a129bdd39ab93" translate="yes" xml:space="preserve">
          <source>Dump contents of &quot;reused&quot; addresses.</source>
          <target state="translated">Дампируйте содержимое &quot;повторно использованных&quot; адресов.</target>
        </trans-unit>
        <trans-unit id="259f2ccf29b6875ba051810947cb2d0facc44c4f" translate="yes" xml:space="preserve">
          <source>Dump offset information. This can be used to see how regops correlate to the pattern. Output format is</source>
          <target state="translated">Информация о смещении сброса.Это можно использовать для просмотра корреляции регопсов с образцом.Выходной формат</target>
        </trans-unit>
        <trans-unit id="0c76297cc9be5e641298778b62c24d2cf18dcd23" translate="yes" xml:space="preserve">
          <source>Dump symbol tables of packages.</source>
          <target state="translated">Таблицы дамп-символов пакетов.</target>
        </trans-unit>
        <trans-unit id="4b8420d45b35aac310c6f6a8a752e4db117364a2" translate="yes" xml:space="preserve">
          <source>Dump the contents of a padlist</source>
          <target state="translated">Сбросить содержимое висячего списка</target>
        </trans-unit>
        <trans-unit id="aa55ac5b7f095f269a678e79910c4c37b3152a49" translate="yes" xml:space="preserve">
          <source>Dump the contents of all SVs not yet freed (debugging aid).</source>
          <target state="translated">Дампа содержимого всех еще не освобожденных SV (отладочное средство).</target>
        </trans-unit>
        <trans-unit id="d6a50535ad9de82c4339f219e99b9b784c2acae9" translate="yes" xml:space="preserve">
          <source>Dump the final program out after it is compiled and optimised.</source>
          <target state="translated">После компиляции и оптимизации окончательная программа будет выгружена.</target>
        </trans-unit>
        <trans-unit id="918c0daf95540cecfd55fc2c00499f5882b52cfa" translate="yes" xml:space="preserve">
          <source>Dump the flags associated with the program</source>
          <target state="translated">Сбросить флаги,связанные с программой</target>
        </trans-unit>
        <trans-unit id="5e107609c2d58489d78c64df77c07976e804b91e" translate="yes" xml:space="preserve">
          <source>Dumping Perl Data Structures</source>
          <target state="translated">Демпинг Perl Структуры данных</target>
        </trans-unit>
        <trans-unit id="44d1680eb49a12854ee630cd3f07447c8ef725fa" translate="yes" xml:space="preserve">
          <source>Dumping a large array or hash</source>
          <target state="translated">Демпинг большого массива или хэша</target>
        </trans-unit>
        <trans-unit id="416f4f5ac3093ab1714cc7418abe095efaa50a64" translate="yes" xml:space="preserve">
          <source>Dumps the C backtrace to the given fp.</source>
          <target state="translated">Сбрасывает C обратную траекторию на данный fp.</target>
        </trans-unit>
        <trans-unit id="1a8a79003d6e119f87dd05fb34533dde374be690" translate="yes" xml:space="preserve">
          <source>Dumps the contents of an SV to the &lt;code&gt;STDERR&lt;/code&gt; filehandle.</source>
          <target state="translated">Выгружает содержимое SV в дескриптор файла &lt;code&gt;STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec8f218a06cd2ecbe02c8bf7842f6c0f5d02c9c5" translate="yes" xml:space="preserve">
          <source>Dumps the entire optree of the current program starting at &lt;code&gt;PL_main_root&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; . Also dumps the optrees for all visible subroutines in &lt;code&gt;PL_defstash&lt;/code&gt; .</source>
          <target state="translated">Сбрасывает все оптическое дерево текущей программы, начиная с &lt;code&gt;PL_main_root&lt;/code&gt; , в &lt;code&gt;STDERR&lt;/code&gt; . Также выгружает деревья опций для всех видимых подпрограмм в &lt;code&gt;PL_defstash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46f7f7e922a3e5c53d29eb7033810ca1c5ff1e45" translate="yes" xml:space="preserve">
          <source>Dumps the optree starting at OP &lt;code&gt;o&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; .</source>
          <target state="translated">Сбрасывает optree, начиная с OP &lt;code&gt;o&lt;/code&gt; , в &lt;code&gt;STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e83684d55af04a9978210506a5f3da39f6330394" translate="yes" xml:space="preserve">
          <source>Dumps the optrees for all visible subroutines in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">Сбрасывает деревья опций для всех видимых подпрограмм в &lt;code&gt;stash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55b069d1baf075aa441953fab4c10d5fb0c55b03" translate="yes" xml:space="preserve">
          <source>Dumps to STDOUT a two column list of op names and op descriptions. If an optional pattern is given then only lines which match the (case insensitive) pattern will be output.</source>
          <target state="translated">Дамп для STDOUT-это двухстолбцовый список названий и описаний опций.Если задан необязательный образец,то будут выведены только те строки,которые соответствуют (нечувствительны к регистру)образцу.</target>
        </trans-unit>
        <trans-unit id="0bb1bbfb4b82018f68b759747efb8b836bc13b23" translate="yes" xml:space="preserve">
          <source>Dumpvalue</source>
          <target state="translated">Dumpvalue</target>
        </trans-unit>
        <trans-unit id="29282979e5caf58379ebe9349836f426355bbd81" translate="yes" xml:space="preserve">
          <source>Dumpvalue - provides screen dump of Perl data.</source>
          <target state="translated">Dumpvalue-предоставляет экранный дамп данных Perl.</target>
        </trans-unit>
        <trans-unit id="5194887c5341c823d0b499a2bddca4cdca4574a6" translate="yes" xml:space="preserve">
          <source>Duplicate keys are entirely defined by the comparison function. In the case-insensitive example above, the keys: 'KEY' and 'key' would be considered duplicates, and assigning to the second one would overwrite the first. If duplicates are allowed for (with the R_DUP flag discussed below), only a single copy of duplicate keys is stored in the database --- so (again with example above) assigning three values to the keys: 'KEY', 'Key', and 'key' would leave just the first key: 'KEY' in the database with three values. For some situations this results in information loss, so care should be taken to provide fully qualified comparison functions when necessary. For example, the above comparison routine could be modified to additionally compare case-sensitively if two keys are equal in the case insensitive comparison:</source>
          <target state="translated">Дублирующие клавиши полностью определяются функцией сравнения.В приведенном выше примере с нечувствительностью к регистру клавиши:'KEY' и 'key' будут считаться дубликатами,а присвоение второй-перезаписывать первую.Если дубликаты разрешены (с флагом R_DUP,описанным ниже),то в базе данных хранится только одна копия дубликатов ключей ---поэтому (опять же в примере выше)присвоение ключам трех значений:'KEY','Key' и 'key' оставит в базе данных только первый ключ:'KEY' с тремя значениями.В некоторых ситуациях это приводит к потере информации,поэтому при необходимости следует позаботиться о том,чтобы обеспечить полностью квалифицированные функции сравнения.Например,вышеуказанная процедура сравнения может быть изменена для дополнительного сравнения с учетом регистра,если два ключа равны в случае нечувствительного сравнения:</target>
        </trans-unit>
        <trans-unit id="231270fe32be376e1ff61953994a1d9555ba5c57" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name list.</source>
          <target state="translated">Дублирует список имен блокнотов.</target>
        </trans-unit>
        <trans-unit id="9900c4228b05d518bce49d6e43830390656bb380" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name.</source>
          <target state="translated">Дублирует имя блокнота.</target>
        </trans-unit>
        <trans-unit id="9c150a6a5de518050ee469f156c0d8c9991e7d83" translate="yes" xml:space="preserve">
          <source>Duplicates a pad.</source>
          <target state="translated">Дублирует блокнот.</target>
        </trans-unit>
        <trans-unit id="34a249fd97af29be13a351a7a3b7c31857c28f36" translate="yes" xml:space="preserve">
          <source>Duplicates the current value of &lt;code&gt;SV&lt;/code&gt; , on the exit from the current &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt;</source>
          <target state="translated">Дублирует текущее значение &lt;code&gt;SV&lt;/code&gt; при выходе из текущего &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="327c7809967b34dba21cd1b07757c86e4f680971" translate="yes" xml:space="preserve">
          <source>During &quot;make test&quot; the &lt;code&gt;comp/cpp&lt;/code&gt; will be skipped because on Tru64 it cannot be tested before Perl has been installed. The test refers to the use of the &lt;code&gt;-P&lt;/code&gt; option of Perl.</source>
          <target state="translated">Во время &amp;laquo;make test&amp;raquo; &lt;code&gt;comp/cpp&lt;/code&gt; будет пропущен, потому что на Tru64 он не может быть протестирован до установки Perl. Тест относится к использованию параметра Perl &lt;code&gt;-P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82a46924bba9ec42c3fc1e7dbc6523da9c5a0d98" translate="yes" xml:space="preserve">
          <source>During compilation you will see this warning from toke.c:</source>
          <target state="translated">Во время компиляции вы увидите это предупреждение от toke.c:</target>
        </trans-unit>
        <trans-unit id="1b78be5f5982368a285609a938bd717c952f6438" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the names part of the pad for the currently-compiling code.</source>
          <target state="translated">При компиляции это указывает на массив,содержащий имена части пэда для компилируемого в данный момент кода.</target>
        </trans-unit>
        <trans-unit id="8fc3623ed774bb34e7810f090f0b1728d1403063" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the values part of the pad for the currently-compiling code. (At runtime a CV may have many such value arrays; at compile time just one is constructed.) At runtime, this points to the array containing the currently-relevant values for the pad for the currently-executing code.</source>
          <target state="translated">При компиляции это указывает на массив,содержащий часть значений для компилируемого в данный момент кода.(Во время исполнения CV может иметь много таких массивов значений;во время компиляции строится только один).Во время компиляции это указывает на массив,содержащий релевантные в данный момент значения для блокнота для исполняемого в данный момент кода.</target>
        </trans-unit>
        <trans-unit id="688fb3463c876328fa68fbb00f834fb161bf77e9" translate="yes" xml:space="preserve">
          <source>During extensions build phase, a script</source>
          <target state="translated">На этапе создания расширений,скрипт</target>
        </trans-unit>
        <trans-unit id="3a8cb198eac07a20f06df8ba7dc5ed5cb604d226" translate="yes" xml:space="preserve">
          <source>During global destruction, Perl will always garbage collect objects before unblessed references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information about global destruction.</source>
          <target state="translated">Во время глобального уничтожения Perl всегда будет собирать мусор перед нежелательными ссылками. См. &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL в perlhacktips&lt;/a&gt; для получения дополнительной информации о глобальном уничтожении.</target>
        </trans-unit>
        <trans-unit id="63b2774e342436fdc21964665d44a1dd453eb511" translate="yes" xml:space="preserve">
          <source>During installation &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; will be set to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the XS was not compiled.</source>
          <target state="translated">Во время установки &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; будет установлено &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; если XS не был скомпилирован.</target>
        </trans-unit>
        <trans-unit id="365d0173e5c9fab16585ed58b7aee60ff977956d" translate="yes" xml:space="preserve">
          <source>During recent history, data is moved around a computer in 8-bit chunks, often called &quot;bytes&quot; but also known as &quot;octets&quot; in standards documents. Perl is widely used to manipulate data of many types: not only strings of characters representing human or computer languages, but also &quot;binary&quot; data, being the machine's representation of numbers, pixels in an image, or just about anything.</source>
          <target state="translated">В новейшей истории данные перемещаются по компьютеру в 8-битных кусках,часто называемых &quot;байтами&quot;,но также известных в нормативных документах как &quot;октеты&quot;.Perl широко используется для манипулирования данными многих типов:не только строками символов,представляющих человеческий или компьютерный язык,но и &quot;двоичными&quot; данными,представляющими собой машинное представление чисел,пикселей на изображении или чего угодно.</target>
        </trans-unit>
        <trans-unit id="c00b220a28d96bc682b1b18fd920cedf0efda896" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules with a version number of zero. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">Во время команды 'r' CPAN.pm находит модули с нулевой версией.Когда команда заканчивает,она печатает отчет об этом.Если вы хотите,чтобы отчет был очень подробный,скажите &quot;да&quot; следующей переменной.</target>
        </trans-unit>
        <trans-unit id="1e8d8123a94cf9a48937762f3c4d82a2ae9cfc9c" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules without version number. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">Во время команды 'r' CPAN.pm находит модули без номера версии.Когда команда заканчивает,она печатает отчет об этом.Если вы хотите,чтобы отчет был очень подробный,скажите &quot;да&quot; следующей переменной.</target>
        </trans-unit>
        <trans-unit id="00bf1cb155480acd23b923e4a6c03a2b23cd1d39" translate="yes" xml:space="preserve">
          <source>During the build process, three Perl images are produced.</source>
          <target state="translated">В процессе сборки создаются три изображения на Perl.</target>
        </trans-unit>
        <trans-unit id="4695645d68d6dbb11815010844432810a8cc5ce6" translate="yes" xml:space="preserve">
          <source>During the matching of this sub-pattern, it has its own set of captures which are valid during the sub-match, but are discarded once control returns to the main pattern. For example, the following matches, with the inner pattern capturing &quot;B&quot; and matching &quot;BB&quot;, while the outer pattern captures &quot;A&quot;;</source>
          <target state="translated">При совпадении этой подмаски,она имеет свой собственный набор захватов,которые действительны во время подмаскировки,но отбрасываются,как только элемент управления возвращается к основной подмаскировке.Например,при совпадении,внутренняя деталь захватывает букву &quot;В&quot;,а внешняя-букву &quot;А&quot;;</target>
        </trans-unit>
        <trans-unit id="e6ec7eb737062f01f212178148567a03e6c845e4" translate="yes" xml:space="preserve">
          <source>During the normal course of events, the parent process and every pseudo-process started by it will wait for their respective pseudo-children to complete before they exit. This means that the parent and every pseudo-child created by it that is also a pseudo-parent will only exit after their pseudo-children have exited.</source>
          <target state="translated">Во время нормального хода событий родительский процесс и каждый запущенный им псевдо-процесс будут ждать завершения соответствующих псевдо-детишек,прежде чем они выйдут.Это означает,что родитель и каждый созданный им псевдо-детей,который также является псевдородителем,выйдут из процесса только после того,как их псевдо-детей покинут.</target>
        </trans-unit>
        <trans-unit id="26974b2880875e58f9a65545ea413592199b96d1" translate="yes" xml:space="preserve">
          <source>During the rest of this document, the shortcuts A (for accuracy), P (for precision), F (fallback) and R (rounding mode) will be used.</source>
          <target state="translated">В течение оставшейся части этого документа будут использоваться ярлыки A (для точности),P (для точности),F (отступление)и R (режим округления).</target>
        </trans-unit>
        <trans-unit id="f8d90cb30467e2a4d157edb90535bc578beea09a" translate="yes" xml:space="preserve">
          <source>During this search no attention is paid to the semantics of the construct. Thus:</source>
          <target state="translated">При этом при поиске не уделяется внимания семантике конструкции.Таким образом:</target>
        </trans-unit>
        <trans-unit id="601d1570400ebbc8e652fb389057e665c3716c4a" translate="yes" xml:space="preserve">
          <source>DynaLoader</source>
          <target state="translated">DynaLoader</target>
        </trans-unit>
        <trans-unit id="9d69ce3ced252503b953a83d970f6811f3f613e6" translate="yes" xml:space="preserve">
          <source>DynaLoader - Dynamically load C libraries into Perl code</source>
          <target state="translated">DynaLoader-Динамически загружать библиотеки C в Perl-код</target>
        </trans-unit>
        <trans-unit id="b801b82847d571219ed7e9cb40b5911d8c6fd1ce" translate="yes" xml:space="preserve">
          <source>DynaLoader Interface Summary</source>
          <target state="translated">Сводка по интерфейсу DynaLoader</target>
        </trans-unit>
        <trans-unit id="44c249a4a70f6f5d86041728f18f2c1b944c09ee" translate="yes" xml:space="preserve">
          <source>DynaLoader.pm</source>
          <target state="translated">DynaLoader.pm</target>
        </trans-unit>
        <trans-unit id="7bf55f093a98122c15a38c4d1e0e12b14eb5e676" translate="yes" xml:space="preserve">
          <source>DynaLoader_pm.PL</source>
          <target state="translated">DynaLoader_pm.PL</target>
        </trans-unit>
        <trans-unit id="eafe90e80018d592f31306075f13c6355bb554de" translate="yes" xml:space="preserve">
          <source>Dynamic Loading versus Static Loading</source>
          <target state="translated">Динамическая загрузка против статической загрузки</target>
        </trans-unit>
        <trans-unit id="e6e2a2c7c1603246902c42979e7716a6a53a2226" translate="yes" xml:space="preserve">
          <source>Dynamic Templates</source>
          <target state="translated">Динамические шаблоны</target>
        </trans-unit>
        <trans-unit id="376a2d3fdb39cd734db8f5317d570d379d27e726" translate="yes" xml:space="preserve">
          <source>Dynamic scoping works over a &lt;b&gt;dynamic scope&lt;/b&gt;, making variables visible throughout the rest of the &lt;b&gt;block&lt;/b&gt; in which they are first used and in any &lt;b&gt;subroutines&lt;/b&gt; that are called by the rest of the block. Dynamically scoped variables can have their values temporarily changed (and implicitly restored later) by a &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator. (Compare &lt;b&gt;lexical scoping&lt;/b&gt;.) Used more loosely to mean how a subroutine that is in the middle of calling another subroutine &amp;ldquo;contains&amp;rdquo; that subroutine at &lt;b&gt;runtime&lt;/b&gt;.</source>
          <target state="translated">Динамическая область видимости работает в &lt;b&gt;динамической области видимости&lt;/b&gt; , делая переменные видимыми в остальной части &lt;b&gt;блока,&lt;/b&gt; в котором они используются впервые, и во всех &lt;b&gt;подпрограммах&lt;/b&gt; , которые вызываются остальной частью блока. Значения переменных с динамической областью видимости могут быть временно изменены (и неявно восстановлены позже) &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; оператором. (Сравните &lt;b&gt;лексическую область видимости&lt;/b&gt; .) В более широком смысле используется для обозначения того, как подпрограмма, находящаяся в середине вызова другой подпрограммы, &amp;laquo;содержит&amp;raquo; эту подпрограмму во &lt;b&gt;время выполнения&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="fb638018434277b4fc82279e676431d053924a22" translate="yes" xml:space="preserve">
          <source>Dynamically load $filename, which must be the path to a shared object or library. An opaque 'library reference' is returned as a handle for the loaded object. Returns undef on error.</source>
          <target state="translated">Динамически загружайте $filename,которым должен быть путь к общему объекту или библиотеке.Непрозрачная 'ссылка на библиотеку' возвращается в качестве дескриптора для загруженного объекта.Возвращает undef при ошибке.</target>
        </trans-unit>
        <trans-unit id="86d6546533b1f34d2c75903edbf95c52c4a6e87e" translate="yes" xml:space="preserve">
          <source>Dynamically load C libraries into Perl code</source>
          <target state="translated">Динамически загружать библиотеки C в Perl-код</target>
        </trans-unit>
        <trans-unit id="549c414661c7e2cd66ebf276140209d3a293c3ec" translate="yes" xml:space="preserve">
          <source>Dynamically unload $libref, which must be an opaque 'library reference' as returned from dl_load_file. Returns one on success and zero on failure. This function is optional and may not necessarily be provided on all platforms.</source>
          <target state="translated">Динамически выгружаем $libref,который должен быть непрозрачной 'библиотечной ссылкой',возвращаемой из dl_load_file.Возвращает единицу на успех и ноль на неудачу.Эта функция является необязательной и может быть предоставлена не на всех платформах.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="fa9bdf01ece32bc99b1e14c6937aab7757e65d12" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; codes are resolved.</source>
          <target state="translated">E &amp;lt;...&amp;gt; коды разрешены.</target>
        </trans-unit>
        <trans-unit id="8ba6f1546de2a6de38d5975288d79871e380398d" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; may freely appear in any formatting code (other than in another E&amp;lt;...&amp;gt; or in an Z&amp;lt;&amp;gt;). That is, &quot;X&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution&amp;gt;&quot; is valid, as is &quot;L&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution|Million::Euros&amp;gt;&quot;.</source>
          <target state="translated">E &amp;lt;...&amp;gt; может свободно появляться в любом коде форматирования (кроме другого E &amp;lt;...&amp;gt; или Z &amp;lt;&amp;gt;). То есть &amp;laquo;X &amp;lt;E &amp;lt;euro&amp;gt; 1,000,000 Solution&amp;gt;&amp;raquo; является действительным, как и &amp;laquo;L &amp;lt;The E &amp;lt;euro&amp;gt; 1,000,000 Solution | Million :: Euros&amp;gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="10c56e2f6bd010417c5d9ae6293f4b104ad1b293" translate="yes" xml:space="preserve">
          <source>E.g. when 'a' and 'e' are ignorable, 'element' is equal to 'lament' (or 'lmnt').</source>
          <target state="translated">Например,когда &quot;а&quot; и &quot;е&quot; невежественны,&quot;элемент&quot; равен &quot;плачу&quot; (или &quot;lmnt&quot;).</target>
        </trans-unit>
        <trans-unit id="54752205cb5bf21cf1543c1d8786b50bfa512554" translate="yes" xml:space="preserve">
          <source>E.g. when searching in</source>
          <target state="translated">Например,при поиске</target>
        </trans-unit>
        <trans-unit id="c9faf7260b3872bd0cc8c1b2903b97df4d17534d" translate="yes" xml:space="preserve">
          <source>E.g., &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; may lead Perl to finding</source>
          <target state="translated">Например, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; может привести Perl к поиску</target>
        </trans-unit>
        <trans-unit id="14202089b63db480cc56897191e80ea08ccae522" translate="yes" xml:space="preserve">
          <source>E.g., when searching in</source>
          <target state="translated">Например,при поиске</target>
        </trans-unit>
        <trans-unit id="cf18d56706e6a161ea7a892c730e7fc94aa42849" translate="yes" xml:space="preserve">
          <source>EBCDIC</source>
          <target state="translated">EBCDIC</target>
        </trans-unit>
        <trans-unit id="db39ab5da5fc359d74ab7f80a9662d49c8256b60" translate="yes" xml:space="preserve">
          <source>EBCDIC Encodings</source>
          <target state="translated">EBCDIC-кодировки</target>
        </trans-unit>
        <trans-unit id="acf1dc4914532273e100530a9ab5c863dba82d84" translate="yes" xml:space="preserve">
          <source>EBCDIC Examples:</source>
          <target state="translated">Примеры EBCDIC:</target>
        </trans-unit>
        <trans-unit id="332c2be33ecb50e660de8a6bec931a2002f3ce8c" translate="yes" xml:space="preserve">
          <source>EBCDIC Platforms</source>
          <target state="translated">EBCDIC-платформы</target>
        </trans-unit>
        <trans-unit id="d5e0cb1a52c6c43ea7491f03d8cf20e2863b3020" translate="yes" xml:space="preserve">
          <source>EBCDIC checksums will differ for the same file translated into ASCII and vice versa.</source>
          <target state="translated">Контрольные суммы EBCDIC будут отличаться для одного и того же файла,переведенного в ASCII и наоборот.</target>
        </trans-unit>
        <trans-unit id="c4a1a6bb8b2ba023d8e2ace21595c7370a5af29a" translate="yes" xml:space="preserve">
          <source>EBCDIC code sets recognized by Perl</source>
          <target state="translated">Наборы кодов EBCDIC,распознанные Perl</target>
        </trans-unit>
        <trans-unit id="8917832f80dc1f23f4ce37b35b7094bce451b8d6" translate="yes" xml:space="preserve">
          <source>EBCDIC sort results may differ from ASCII sort results especially for mixed case strings. This is discussed in more detail &lt;a href=&quot;#SORTING&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">Результаты сортировки EBCDIC могут отличаться от результатов сортировки ASCII, особенно для строк со смешанным регистром. Это обсуждается более подробно &lt;a href=&quot;#SORTING&quot;&gt;ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0161b12e1086c489bcc4c4218bf647b2c2e7af38" translate="yes" xml:space="preserve">
          <source>ECMA-048 is available on-line (at least at the time of this writing) at &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;.</source>
          <target state="translated">ECMA-048 доступен в интерактивном режиме (по крайней мере, на момент написания этой статьи) по адресу &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0216d6b25a22e0b782349678c3b9d439ab040aa1" translate="yes" xml:space="preserve">
          <source>EFFECTIVE</source>
          <target state="translated">EFFECTIVE</target>
        </trans-unit>
        <trans-unit id="cbc724c9910501b7f3260e0af4b0be278ac0c6a0" translate="yes" xml:space="preserve">
          <source>ELEMENTS OF THE INTERPRETER</source>
          <target state="translated">ЭЛЕМЕНТЫ ПЕРЕВОДЧИКА</target>
        </trans-unit>
        <trans-unit id="775eda021e49d1db0c56510d89f1a3a5b0d3533c" translate="yes" xml:space="preserve">
          <source>ELEMENT_LIST</source>
          <target state="translated">ELEMENT_LIST</target>
        </trans-unit>
        <trans-unit id="274c18c04f053750184eb461592a3aeba38deb84" translate="yes" xml:space="preserve">
          <source>EMX runtime is required (may be substituted by RSX). Note that it is possible to make</source>
          <target state="translated">Требуется время выполнения EMX (может быть заменено RSX).Обратите внимание,что можно сделать</target>
        </trans-unit>
        <trans-unit id="ee406c89e6d96da9d9c9078da02dd1085c757041" translate="yes" xml:space="preserve">
          <source>ENCNAME</source>
          <target state="translated">ENCNAME</target>
        </trans-unit>
        <trans-unit id="09d70e3cb3e8ca25c8e1c040798016341acb9d34" translate="yes" xml:space="preserve">
          <source>ENCODED WORD</source>
          <target state="translated">КОДИРОВАННОЕ СЛОВО</target>
        </trans-unit>
        <trans-unit id="1e306f9d0fec9dc9a627cd5c3b6dd9bb1770a21e" translate="yes" xml:space="preserve">
          <source>ENCODING</source>
          <target state="translated">ENCODING</target>
        </trans-unit>
        <trans-unit id="d205abee3d2a71688a6b66568be289a94050031c" translate="yes" xml:space="preserve">
          <source>END</source>
          <target state="translated">END</target>
        </trans-unit>
        <trans-unit id="6d3c353157df1302b4606a2c3c31edf9ce433536" translate="yes" xml:space="preserve">
          <source>ENTRIES IN EACH LEXICON</source>
          <target state="translated">ЗАПИСИ В КАЖДОМ СЛОВАРЕ</target>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="translated">ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="cb8f8d1fdc31a300a149531a3ee67854b7226f82" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS</source>
          <target state="translated">ПЕРЕМЕННЫЕ ОКРУЖЕНИЯ,ВЛИЯЮЩИЕ НА ТЕСТ::ЖГУТ</target>
        </trans-unit>
        <trans-unit id="ca7f3972a83e913d649e11c108df24283c3bc376" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT TAP::HARNESS::COMPATIBLE SETS</source>
          <target state="translated">ПЕРЕМЕННЫЕ ОКРУЖЕНИЯ,КОТОРЫЕ СООТВЕТСТВУЮТ::HARNESS::СОВМЕСТИМЫЕ НАБОРЫ.</target>
        </trans-unit>
        <trans-unit id="f7084ac12cca76d68cdd87fe9d782e1ae84dd265" translate="yes" xml:space="preserve">
          <source>EOF.</source>
          <target state="translated">EOF.</target>
        </trans-unit>
        <trans-unit id="bc8e77d510181b5522d113b8d79cd4cb3e49542e" translate="yes" xml:space="preserve">
          <source>EOL Platforms</source>
          <target state="translated">платформы EOL</target>
        </trans-unit>
        <trans-unit id="7d063d313be8f22d60adcb2e5150c0209bf36674" translate="yes" xml:space="preserve">
          <source>ERRNO</source>
          <target state="translated">ERRNO</target>
        </trans-unit>
        <trans-unit id="ebe21523a5dccd37a9fcf7ea0fd32b1eca292ad0" translate="yes" xml:space="preserve">
          <source>ERROR HANDLING</source>
          <target state="translated">ОШИБКА</target>
        </trans-unit>
        <trans-unit id="161833a14be7adad1a6eb962fc3f24b1791debe8" translate="yes" xml:space="preserve">
          <source>ERROR REPORTING</source>
          <target state="translated">СООБЩЕНИЕ ОБ ОШИБКАХ</target>
        </trans-unit>
        <trans-unit id="fb558b481c7703cb01a866167aa87ba7ffeeb0ce" translate="yes" xml:space="preserve">
          <source>ERRORS</source>
          <target state="translated">ERRORS</target>
        </trans-unit>
        <trans-unit id="2ef444354ee97e4dd743f7f63b3e4d0c239b4132" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO</source>
          <target state="translated">ОШИБКИ ИЗ-ЗА ДЕЛЕНИЯ НА НОЛЬ</target>
        </trans-unit>
        <trans-unit id="6a22654ad1bd17a1b7f8a33ebc606c6dd0499218" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO</source>
          <target state="translated">ОШИБКИ ИЗ-ЗА ДЕЛЕНИЯ НА НОЛЬ ИЛИ ЛОГАРИФМА НУЛЯ</target>
        </trans-unit>
        <trans-unit id="c79b986f6448f6bcfe4c395367179ab049f8d63e" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO INDIGESTIBLE ARGUMENTS</source>
          <target state="translated">ОШИБКИ ИЗ-ЗА НЕСОКРУШИМЫХ АРГУМЕНТОВ</target>
        </trans-unit>
        <trans-unit id="6f1d7e623d1be2e3224550fb5ed680f08aba75ed" translate="yes" xml:space="preserve">
          <source>ESCAPE SEQUENCES</source>
          <target state="translated">ПОСЛЕДОВАТЕЛЬНОСТИ ЭВАКУАЦИИ</target>
        </trans-unit>
        <trans-unit id="c68e9c8ffafea2d41e94c29ec6ef311a4fc01058" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding</source>
          <target state="translated">ESTI GSM 03.38 Кодирование</target>
        </trans-unit>
        <trans-unit id="330d938044782725e081a62faa873e5784320980" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding itself.</source>
          <target state="translated">ESTI GSM 03.38 Само кодирование.</target>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="79e0bba4d7ab03dd3a43d89e18dc509cf2803c4f" translate="yes" xml:space="preserve">
          <source>EXAMPLE - Greekperl</source>
          <target state="translated">ПРИМЕР-Грикперл</target>
        </trans-unit>
        <trans-unit id="c1459caada695329b2e0c6704825c3b8e7a13c88" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">ОБРАЗЕЦ 1</target>
        </trans-unit>
        <trans-unit id="1358d71098fb89610fe1aac79c61d72cd99d3282" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">ОБРАЗЕЦ 2</target>
        </trans-unit>
        <trans-unit id="bf337e44a3f58c52533729fe2435927aca3951e1" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">ОБРАЗЕЦ 3</target>
        </trans-unit>
        <trans-unit id="6c373f3759a7e7f5ea3aa6485c89916c7bfcefb6" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">ОБРАЗЕЦ 4</target>
        </trans-unit>
        <trans-unit id="c0fcde52500282f83cc647053ccb330dab650466" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">ОБРАЗЕЦ 5</target>
        </trans-unit>
        <trans-unit id="45b9b19b0fbae586929496cd8750455d351de3e8" translate="yes" xml:space="preserve">
          <source>EXAMPLE 6</source>
          <target state="translated">ПРИМЕР 6</target>
        </trans-unit>
        <trans-unit id="c45a24f213f8694012485c12afa309d47467f3fd" translate="yes" xml:space="preserve">
          <source>EXAMPLE 7 (Coming Soon)</source>
          <target state="translated">ПРИМЕР 7 (Скоро будет)</target>
        </trans-unit>
        <trans-unit id="efa7b38bfff5f32b2321e835dcdafd3692ef4121" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8 (Coming Soon)</source>
          <target state="translated">Пример 8 (Скоро будет)</target>
        </trans-unit>
        <trans-unit id="62774320706bd47493c114307c201f9b0569a380" translate="yes" xml:space="preserve">
          <source>EXAMPLE 9 Passing open files to XSes</source>
          <target state="translated">ПРИМЕР 9 Передача открытых файлов в XSes</target>
        </trans-unit>
        <trans-unit id="5620a0ea3c2afd67a246637da41377405c24e6fb" translate="yes" xml:space="preserve">
          <source>EXAMPLE OF A SIMPLE PATCH</source>
          <target state="translated">ПРИМЕР ПРОСТОГО ПАТЧА</target>
        </trans-unit>
        <trans-unit id="a8099c29efbd0420188d4a7efe08cb02085720f0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: $ perl -e&quot;exit 44;&quot; Non-hushed error exit %SYSTEM-F-ABORT, abort DCL message $ show sym $STATUS $STATUS == &quot;%X0000002C&quot;</source>
          <target state="translated">EXAMPLE:$ perl -e &quot;exit 44;&quot; Non-hush error exit %SYSTEM-F-ABORT,abort DCL message $ show sym $STATUS $STATUS ==&quot;%X0000002C&quot;.</target>
        </trans-unit>
        <trans-unit id="a06e781ed035862478fdb8e74e8410d0fb77a7e0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: if ($quiet_exit) { vmsish::hushed(1); } print &quot;Sssshhhh...I'm hushed...\n&quot; if vmsish::hushed(); exit 44;</source>
          <target state="translated">ПРИМЕР:если ($quiet_exit){vmsish::hushed(1);}распечатать &quot;Sssshhhh...I'm hushed...\n&quot;,если vmsish::hushed();выход 44;</target>
        </trans-unit>
        <trans-unit id="c8296cf24395c1237ea3d8bd4a47331705d59199" translate="yes" xml:space="preserve">
          <source>EXAMPLE: use vmsish 'hushed'; # turn on hushed flag use Carp; # Carp compiled hushed exit 44; # will be hushed croak('I die'); # will be hushed no vmsish 'hushed'; # turn off hushed flag exit 44; # will not be hushed croak('I die2'): # WILL be hushed, croak was compiled hushed</source>
          <target state="translated">EXAMPLE:используйте vmsish 'hushed';#включите флаг hushed using Carp;#carp made hushed exit 44;#will be hushed croak('I die');#will be hushed no vmsish 'hushed';#turn off hushed flag exit 44;#will not be hushed croak('I die2'):#WILL be hushed,croak was made hushed</target>
        </trans-unit>
        <trans-unit id="9659699670b30983eb4e3c22454887e3c9c6ce39" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXAMPLES</target>
        </trans-unit>
        <trans-unit id="80b0ebd5e30f42e63544199d92ca94554dccc4b9" translate="yes" xml:space="preserve">
          <source>EXCEPTIONS</source>
          <target state="translated">EXCEPTIONS</target>
        </trans-unit>
        <trans-unit id="b7510c8c453004eea60fefa1e03b9543d11c009d" translate="yes" xml:space="preserve">
          <source>EXIT CODES</source>
          <target state="translated">ВЫХОДНЫЕ КОДЫ</target>
        </trans-unit>
        <trans-unit id="3a06c7d53de8e4207bc5b59139ccca4aa8a85a6b" translate="yes" xml:space="preserve">
          <source>EXIT STATUS</source>
          <target state="translated">ВЫХОД СОСТОЯНИЯ</target>
        </trans-unit>
        <trans-unit id="49e2ee12a2cb5c774bfad575cb3bcba82617b335" translate="yes" xml:space="preserve">
          <source>EXITING A THREAD</source>
          <target state="translated">ВЫХОДЯЩИЙ ПОТОК</target>
        </trans-unit>
        <trans-unit id="e4f2a2341e0d9e2dcbb8ca9ce37431a945288e22" translate="yes" xml:space="preserve">
          <source>EXPECTED METHODS</source>
          <target state="translated">ПРЕДПОЛАГАЕМЫЕ МЕТОДЫ</target>
        </trans-unit>
        <trans-unit id="ecfb7a5ad5fc1b4f5cc510ab16d0961139e316c5" translate="yes" xml:space="preserve">
          <source>EXPIRATION SUPPORT</source>
          <target state="translated">ПОДДЕРЖКА ИСТЕЧЕНИЯ СРОКА ДЕЙСТВИЯ</target>
        </trans-unit>
        <trans-unit id="c0b9641f510bdc263b1b4f8cdf15c1c068ad9fea" translate="yes" xml:space="preserve">
          <source>EXPORT</source>
          <target state="translated">EXPORT</target>
        </trans-unit>
        <trans-unit id="77df0281a5c47be5d00ae61a57ff00e23d9d5e5b" translate="yes" xml:space="preserve">
          <source>EXPORTABLE FUNCTIONS</source>
          <target state="translated">ЭКСПОРТИРУЕМЫЕ ФУНКЦИИ</target>
        </trans-unit>
        <trans-unit id="22d0596dab83a0920d66ad899d3e61f47464b88e" translate="yes" xml:space="preserve">
          <source>EXPORTABLE VARIABLES</source>
          <target state="translated">ЭКСПОРТИРУЕМЫЕ ПЕРЕМЕННЫЕ</target>
        </trans-unit>
        <trans-unit id="43aade251566381046f1d9dd6f51422fde3c0fbd" translate="yes" xml:space="preserve">
          <source>EXPORTED FUNCTIONS</source>
          <target state="translated">ЭКСПОРТИРУЕМЫЕ ФУНКЦИИ</target>
        </trans-unit>
        <trans-unit id="8b30e3050a39fae8e0c617ff76ab8d47b5f0b044" translate="yes" xml:space="preserve">
          <source>EXPORTED SYMBOLS</source>
          <target state="translated">ЭКСПОРТИРУЕМАЯ СИМВОЛИКА</target>
        </trans-unit>
        <trans-unit id="e9e012170f2df7cb18fa26019e2b46cbf4a91319" translate="yes" xml:space="preserve">
          <source>EXPORTS</source>
          <target state="translated">EXPORTS</target>
        </trans-unit>
        <trans-unit id="7b479848a0ec11ad7c3ba1025f3ac20068015bb9" translate="yes" xml:space="preserve">
          <source>EXPORTS (by request only)</source>
          <target state="translated">ЭКСПОРТЫ (только по запросу)</target>
        </trans-unit>
        <trans-unit id="6b6562ec1f5d1b67f0bbd288b913382cd128ba1e" translate="yes" xml:space="preserve">
          <source>EXPORT_LIST: name of a file that is passed to linker to define symbols to be exported.</source>
          <target state="translated">EXPORT_LIST:имя файла,который передается компоновщику для определения экспортируемых символов.</target>
        </trans-unit>
        <trans-unit id="a6fc3ffe71e48b679d9c5609def42ab3c69aa49f" translate="yes" xml:space="preserve">
          <source>EXPORT_OK</source>
          <target state="translated">EXPORT_OK</target>
        </trans-unit>
        <trans-unit id="f817892a6b7b040f6bf499b1ab6645711184a4f1" translate="yes" xml:space="preserve">
          <source>EXPR</source>
          <target state="translated">EXPR</target>
        </trans-unit>
        <trans-unit id="3499643610f3dd44dae6eb02d7fed2d648b428d9" translate="yes" xml:space="preserve">
          <source>EXPR is executed as a system command. The collected standard output of the command is returned. In scalar context, it comes back as a single (potentially multi-line) string. In list context, returns a list of lines (however you've defined lines with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). This is the internal function implementing the &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPR выполняется как системная команда. Собранный стандартный вывод команды возвращается. В скалярном контексте он возвращается как одна (потенциально многострочная) строка. В контексте списка возвращает список строк (однако вы определили строки с помощью &lt;code&gt;$/&lt;/code&gt; или &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). Это внутренняя функция, реализующая оператор &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; . Если EXPR опущен, используется &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f586c420e6eaf4cfbda37e4566d4c88b6984ca54" translate="yes" xml:space="preserve">
          <source>EXPR is executed as a system command. The collected standard output of the command is returned. In scalar context, it comes back as a single (potentially multi-line) string. In list context, returns a list of lines (however you've defined lines with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). This is the internal function implementing the &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPR выполняется как системная команда. Собранный стандартный вывод команды возвращается. В скалярном контексте он возвращается как одна (потенциально многострочная) строка. В контексте списка возвращает список строк (однако вы определили строки с помощью &lt;code&gt;$/&lt;/code&gt; или &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). Это внутренняя функция, реализующая оператор &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; , но вы можете использовать ее напрямую. Оператор &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; более подробно обсуждается &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;в разделе &amp;laquo;Операторы ввода-вывода в perlop&amp;raquo;&lt;/a&gt; . Если EXPR опущен, используется &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4a4d24b33941bccd86ff7ba0c19dc15933e36a4" translate="yes" xml:space="preserve">
          <source>EXTENDED CONSTRUCTS</source>
          <target state="translated">РАЗВЁРНУТЫЕ КОНСТРУКЦИИ</target>
        </trans-unit>
        <trans-unit id="b070e356144357fb71137b31e2e89f09d2f73b53" translate="yes" xml:space="preserve">
          <source>EXTERN.h</source>
          <target state="translated">EXTERN.h</target>
        </trans-unit>
        <trans-unit id="13ae0f4e98553c4041bca1bd5b70b21a5aa6d865" translate="yes" xml:space="preserve">
          <source>EXTRALIBS</source>
          <target state="translated">EXTRALIBS</target>
        </trans-unit>
        <trans-unit id="3633746b067241666bc462dcfe7a24ff23a8db68" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="translated">Each</target>
        </trans-unit>
        <trans-unit id="64713135c29a168f621e3cd6c59750f2ec3360d2" translate="yes" xml:space="preserve">
          <source>Each &quot;=over&quot; ... &quot;=back&quot; region should be one of the following:</source>
          <target state="translated">Каждое &quot;=over&quot;...&quot;=зад&quot; должен быть одним из следующих:</target>
        </trans-unit>
        <trans-unit id="8573b03d1dbd851733546c18897b586541b26327" translate="yes" xml:space="preserve">
          <source>Each &lt;b&gt;File&lt;/b&gt; section reports on a single file. Each &lt;b&gt;Subroutine&lt;/b&gt; section reports on a single subroutine apart from the special cases &quot;(definitions)&quot; and &quot;(main)&quot;. These report, respectively, on subroutine definitions found by the initial symbol table walk and on the main part of the program or module external to all subroutines.</source>
          <target state="translated">Каждый раздел &lt;b&gt;файла&lt;/b&gt; представляет собой отчет об одном файле. Каждый раздел &lt;b&gt;подпрограммы&lt;/b&gt; сообщает об одной подпрограмме, за исключением особых случаев &amp;laquo;(определения)&amp;raquo; и &amp;laquo;(основной)&amp;raquo;. Они сообщают, соответственно, об определениях подпрограмм, найденных в ходе начального обхода таблицы символов, и об основной части программы или модуля, внешнего по отношению ко всем подпрограммам.</target>
        </trans-unit>
        <trans-unit id="c3f67868071b09e484f931abe029f1f8f7b5dc16" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;--$source-option&lt;/code&gt; option must specify a key/value pair separated by an &lt;code&gt;=&lt;/code&gt; . If an option can take multiple values, just specify it multiple times, as with the &lt;code&gt;extensions=&lt;/code&gt; examples above. If the option should be a hash reference, specify the value as a second pair separated by a &lt;code&gt;=&lt;/code&gt; , as in the &lt;code&gt;pset=&lt;/code&gt; examples above (escape &lt;code&gt;=&lt;/code&gt; with a backslash).</source>
          <target state="translated">Каждая &lt;code&gt;--$source-option&lt;/code&gt; должна указывать пару ключ / значение, разделенную знаком &lt;code&gt;=&lt;/code&gt; . Если параметр может принимать несколько значений, просто укажите его несколько раз, как в примерах &lt;code&gt;extensions=&lt;/code&gt; выше. Если параметр должен быть хэш ссылки, указать значение в качестве второй пары будут разделены &lt;code&gt;=&lt;/code&gt; , как и в &lt;code&gt;pset=&lt;/code&gt; примеров выше (побег &lt;code&gt;=&lt;/code&gt; с обратной косой чертой).</target>
        </trans-unit>
        <trans-unit id="114f01b386e99faf35799463e66245b3c628986d" translate="yes" xml:space="preserve">
          <source>Each C type is represented by an entry in the typemap file that is responsible for converting perl variables (SV, AV, HV, CV, etc.) to and from that type. The following sections list all XS types that come with perl by default.</source>
          <target state="translated">Каждый тип C представлен записью в файле типовой карты,которая отвечает за преобразование переменных perl (SV,AV,HV,CV и т.д.)в этот тип и из него.В следующих разделах перечислены все типы XS,которые по умолчанию поставляются с perl.</target>
        </trans-unit>
        <trans-unit id="45fe11f5c5ad8666badf6e1b74648061569fd2e9" translate="yes" xml:space="preserve">
          <source>Each CV has a pointer, &lt;code&gt;CvOUTSIDE()&lt;/code&gt; , to its lexically enclosing CV (if any). Because pointers to anonymous sub prototypes are stored in &lt;code&gt;&amp;amp;&lt;/code&gt; pad slots, it is a possible to get a circular reference, with the parent pointing to the child and vice-versa. To avoid the ensuing memory leak, we do not increment the reference count of the CV pointed to by &lt;code&gt;CvOUTSIDE&lt;/code&gt; in the</source>
          <target state="translated">Каждое CV имеет указатель &lt;code&gt;CvOUTSIDE()&lt;/code&gt; на его лексически включающее CV (если есть). Поскольку указатели на анонимные под-прототипы хранятся в слотах &lt;code&gt;&amp;amp;&lt;/code&gt; Pad, можно получить циклическую ссылку, при которой родительский элемент указывает на дочерний элемент и наоборот. Чтобы избежать последующей утечки памяти, мы не увеличиваем счетчик ссылок CV, на который указывает &lt;code&gt;CvOUTSIDE&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="877f690dc448228c6c71438f034057615156195d" translate="yes" xml:space="preserve">
          <source>Each INPUT or OUTPUT typemap entry is a double-quoted Perl string that will be evaluated in the presence of certain variables to get the final C code for mapping a certain C type.</source>
          <target state="translated">Каждая запись в INPUT или OUTPUT-это строка Perl в двойных кавычках,которая будет оцениваться при наличии определенных переменных,чтобы получить окончательный код C для отображения определенного типа C.</target>
        </trans-unit>
        <trans-unit id="fb013f151204036ffe28cd6f1b7420c85313acfd" translate="yes" xml:space="preserve">
          <source>Each NAME is assumed to be in the calling package. See share_from for an alternative method (which &lt;code&gt;share&lt;/code&gt; uses).</source>
          <target state="translated">Предполагается, что каждое ИМЯ находится в вызывающем пакете. См. Share_from для альтернативного метода (который использует &lt;code&gt;share&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5c9985ee57f0e8b2c8e51c7278e3d4c3d9b47d87" translate="yes" xml:space="preserve">
          <source>Each NAME must be the &lt;b&gt;name&lt;/b&gt; of a non-lexical variable, typically with the leading type identifier included. A bareword is treated as a function name.</source>
          <target state="translated">Каждое ИМЯ должно быть &lt;b&gt;именем&lt;/b&gt; нелексической переменной, обычно с включенным идентификатором ведущего типа. Простое слово рассматривается как имя функции.</target>
        </trans-unit>
        <trans-unit id="2d1afe9f64b8afc5ff5d1587bde457161df361bb" translate="yes" xml:space="preserve">
          <source>Each array &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; holds the lines of $filename for a file compiled by Perl. The same is also true for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings looks like &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</source>
          <target state="translated">Каждый массив &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; содержит строки с именем $ filename для файла, скомпилированного Perl. То же самое верно и для &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; строк, которые содержат подпрограммы или которые в настоящее время выполняются. Имя $ filename для строк &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ed выглядит так &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f0c2f3d8605c13877f68e54dd82f6341b8fae0" translate="yes" xml:space="preserve">
          <source>Each class can define its &lt;b&gt;attributes&lt;/b&gt;. When we instantiate an object, we assign values to those attributes. For example, every &lt;code&gt;File&lt;/code&gt; object has a path. Attributes are sometimes called &lt;b&gt;properties&lt;/b&gt;.</source>
          <target state="translated">Каждый класс может определять свои &lt;b&gt;атрибуты&lt;/b&gt; . Когда мы создаем экземпляр объекта, мы присваиваем значения этим атрибутам. Например, у каждого объекта &lt;code&gt;File&lt;/code&gt; есть путь. Атрибуты иногда называют &lt;b&gt;свойствами&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="64bf8b278b40ceb1457596f928446c91560cdf44" translate="yes" xml:space="preserve">
          <source>Each compartment has an associated &quot;operator mask&quot;. Recall that perl code is compiled into an internal format before execution. Evaluating perl code (e.g. via &quot;eval&quot; or &quot;do 'file'&quot;) causes the code to be compiled into an internal format and then, provided there was no error in the compilation, executed. Code evaluated in a compartment compiles subject to the compartment's operator mask. Attempting to evaluate code in a compartment which contains a masked operator will cause the compilation to fail with an error. The code will not be executed.</source>
          <target state="translated">Каждое отделение имеет соответствующую &quot;маску оператора&quot;.Напомним,что perl-код перед выполнением компилируется во внутренний формат.Оценка perl-кода (например,через &quot;eval&quot; или &quot;do 'file'&quot;)приводит к тому,что код компилируется во внутренний формат,а затем,при условии отсутствия ошибок в компиляции,выполняется.Код,вычисленный в помещении,компилируется с учетом маски оператора помещения.Попытка оценить код в помещении,содержащем оператор masked,приведет к ошибке при компиляции.Код не будет выполнен.</target>
        </trans-unit>
        <trans-unit id="035a2860cc641f9a6aba917e368a923359692185" translate="yes" xml:space="preserve">
          <source>Each element in the struct data has an accessor method, which is used to assign to the element and to fetch its value. The default accessor can be overridden by declaring a &lt;code&gt;&lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; of the same name in the package. (See Example 2.)</source>
          <target state="translated">Каждый элемент в данных структуры имеет метод доступа, который используется для присвоения элементу и получения его значения. Средство доступа по умолчанию можно переопределить, объявив в пакете одноименную &lt;code&gt;&lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; . (См. Пример 2.)</target>
        </trans-unit>
        <trans-unit id="fd1373d9ec88c46f95e3a35afb96af5418baf7f3" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;%!&lt;/code&gt; has a true value only if &lt;code&gt;$!&lt;/code&gt; is set to that value. For example, &lt;code&gt;$!{ENOENT}&lt;/code&gt; is true if and only if the current value of &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;ENOENT&lt;/code&gt; ; that is, if the most recent error was &quot;No such file or directory&quot; (or its moral equivalent: not all operating systems give that exact error, and certainly not all languages). To check if a particular key is meaningful on your system, use &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;
$!{the_key}&lt;/code&gt; ; for a list of legal keys, use &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %!&lt;/code&gt; . See &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; for more information, and also see &lt;a href=&quot;#%24!&quot;&gt;$!&lt;/a&gt;.</source>
          <target state="translated">Каждый элемент &lt;code&gt;%!&lt;/code&gt; имеет истинное значение, только если &lt;code&gt;$!&lt;/code&gt; установлено на это значение. Например, &lt;code&gt;$!{ENOENT}&lt;/code&gt; истинно тогда и только тогда, когда текущее значение &lt;code&gt;$!&lt;/code&gt; это &lt;code&gt;ENOENT&lt;/code&gt; ; то есть, если самой последней ошибкой было &amp;laquo;Нет такого файла или каталога&amp;raquo; (или его моральный эквивалент: не все операционные системы выдают эту точную ошибку и, конечно, не все языки). Чтобы проверить, имеет ли значение конкретный ключ в вашей системе, используйте &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $!{the_key}&lt;/code&gt; ; для получения списка допустимых ключей используйте &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %!&lt;/code&gt; . См. Дополнительную информацию в &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; , а также в &lt;a href=&quot;#%24!&quot;&gt;$! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="06a2d451f571f682ca87c1d143e9cc5d9cc9752a" translate="yes" xml:space="preserve">
          <source>Each element of the &lt;code&gt;@tests&lt;/code&gt; array is either:</source>
          <target state="translated">Каждый элемент массива &lt;code&gt;@tests&lt;/code&gt; либо:</target>
        </trans-unit>
        <trans-unit id="d55ab66461652be4398995f0bc7395b92cdadc85" translate="yes" xml:space="preserve">
          <source>Each element on the right-hand side must be a reference to a datum of the right type. Parentheses immediately surrounding an array (and possibly also &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;) will make each element of the array an alias to the corresponding scalar referenced on the right-hand side:</source>
          <target state="translated">Каждый элемент с правой стороны должен быть ссылкой на датум правильного типа. Круглые скобки, непосредственно окружающие массив (и, возможно, также &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; ), сделают каждый элемент массива псевдонимом для соответствующего скаляра, указанного в правой части:</target>
        </trans-unit>
        <trans-unit id="4684b159123c6d2eb2be5f3fb5fb6b32cbd2c836" translate="yes" xml:space="preserve">
          <source>Each element's type can be scalar, array, hash, or class.</source>
          <target state="translated">Каждый тип элемента может быть скаляром,массивом,хэшем или классом.</target>
        </trans-unit>
        <trans-unit id="4a18db593068986b02fcc2822d10b93bd6ae4e04" translate="yes" xml:space="preserve">
          <source>Each engine is supposed to provide access to a constant structure of the following format:</source>
          <target state="translated">Каждый движок должен обеспечивать доступ к постоянной структуре следующего формата:</target>
        </trans-unit>
        <trans-unit id="df21f7171545bb80d42912cbb46608328ace6052" translate="yes" xml:space="preserve">
          <source>Each field in a picture line starts with either &quot;@&quot; (at) or &quot;^&quot; (caret), indicating what we'll call, respectively, a &quot;regular&quot; or &quot;special&quot; field. The choice of pad characters determines whether a field is textual or numeric. The tilde operators are not part of a field. Let's look at the various possibilities in detail.</source>
          <target state="translated">Каждое поле в строке картинки начинается либо с &quot;@&quot; (at),либо с &quot;^&quot; (caret),указывая на то,что мы будем называть,соответственно,&quot;обычным&quot; или &quot;специальным&quot; полем.Выбор символов планшета определяет,является ли поле текстовым или числовым.Операторы тильды не являются частью поля.Рассмотрим подробно различные возможности.</target>
        </trans-unit>
        <trans-unit id="e86751063b4744e62f491d3c6500569d32c72d11" translate="yes" xml:space="preserve">
          <source>Each filehandle in Perl counts the number of lines that have been read from it. (Depending on the value of &lt;code&gt;$/&lt;/code&gt; , Perl's idea of what constitutes a line may not match yours.) When a line is read from a filehandle (via &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), or when &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; is called on it, &lt;code&gt;$.&lt;/code&gt; becomes an alias to the line counter for that filehandle.</source>
          <target state="translated">Каждый дескриптор файла в Perl подсчитывает количество прочитанных из него строк. ( В зависимости от значения &lt;code&gt;$/&lt;/code&gt; , идея в Perl , что представляет собой линию может не совпадать с вашими.) Когда строка считывается с дескриптором (через &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), или когда &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; является призвал его, &lt;code&gt;$.&lt;/code&gt; становится псевдонимом счетчика строк для этого дескриптора файла.</target>
        </trans-unit>
        <trans-unit id="31a9624b1b717a0ce3347c2a7723ee1a1d25abab" translate="yes" xml:space="preserve">
          <source>Each handle can be an &lt;code&gt;IO::Handle&lt;/code&gt; object, an integer or an array reference where the first element is an &lt;code&gt;IO::Handle&lt;/code&gt; or an integer.</source>
          <target state="translated">Каждый дескриптор может быть объектом &lt;code&gt;IO::Handle&lt;/code&gt; , целым числом или ссылкой на массив, где первым элементом является &lt;code&gt;IO::Handle&lt;/code&gt; или целое число.</target>
        </trans-unit>
        <trans-unit id="c1d7462289e4cec1a7aa1fe4c855d903202ec597" translate="yes" xml:space="preserve">
          <source>Each hash &lt;code&gt;%{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contains breakpoints and actions keyed by line number. Individual entries (as opposed to the whole hash) are settable. Perl only cares about Boolean true here, although the values used by</source>
          <target state="translated">Каждый хэш &lt;code&gt;%{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; содержит точки останова и действия, привязанные к номеру строки. Можно настроить отдельные записи (в отличие от всего хеша). Perl здесь заботится только о логическом значении true, хотя значения, используемые</target>
        </trans-unit>
        <trans-unit id="62cc45eed91752b51404de9ea925a035fb43cbad" translate="yes" xml:space="preserve">
          <source>Each id must be unique within the document.</source>
          <target state="translated">Каждый идентификатор должен быть уникальным в документе.</target>
        </trans-unit>
        <trans-unit id="667975ad4758db6be064d162ec07e954e503457b" translate="yes" xml:space="preserve">
          <source>Each individual compressed data stream is read until the logical end-of-file is reached. Then &lt;code&gt;nextStream&lt;/code&gt; is called. This will skip to the start of the next compressed data stream and clear the end-of-file flag.</source>
          <target state="translated">Каждый отдельный поток сжатых данных читается до тех пор, пока не будет достигнут логический конец файла. Затем &lt;code&gt;nextStream&lt;/code&gt; . Это приведет к переходу к началу следующего потока сжатых данных и сбросу флага конца файла.</target>
        </trans-unit>
        <trans-unit id="18f2cec26478e04f9b7de7d10fcbddee95e58d2c" translate="yes" xml:space="preserve">
          <source>Each initializer is a pair of values:</source>
          <target state="translated">Каждый инициализатор представляет собой пару значений:</target>
        </trans-unit>
        <trans-unit id="16164820a467e235638c757ccfe00052f4c79b5f" translate="yes" xml:space="preserve">
          <source>Each is a reference to an array of hostnames (in order of preference), which should be used for the given protocol</source>
          <target state="translated">Каждое из них является ссылкой на массив имен хостов (в порядке предпочтения),который должен использоваться для данного протокола</target>
        </trans-unit>
        <trans-unit id="c7c5e455da6b08e4d8e8bc9f42db356fdab7233a" translate="yes" xml:space="preserve">
          <source>Each key is the property name in its longest, most descriptive form. The values are what &lt;a href=&quot;#charprop()&quot;&gt;charprop()&lt;/a&gt; would return.</source>
          <target state="translated">Каждый ключ - это имя свойства в его самой длинной и описательной форме. Значения - это то, что &lt;a href=&quot;#charprop()&quot;&gt;возвращает функция charprop ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47492265b46ae806bb067e9b524f132422627a4f" translate="yes" xml:space="preserve">
          <source>Each letter may optionally be followed by a number indicating the repeat count. A numeric repeat count may optionally be enclosed in brackets, as in &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . The repeat count gobbles that many values from the LIST when used with all format types other than &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;P&lt;/code&gt; , where it means something else, described below. Supplying a &lt;code&gt;*&lt;/code&gt; for the repeat count instead of a number means to use however many items are left, except for:</source>
          <target state="translated">За каждой буквой необязательно может следовать число, указывающее счетчик повторов. Числовое число повторений может быть дополнительно заключено в скобки, как в &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . Число повторений проглатывает , что многие значения из списка , когда используются со всеми типами форматов , отличных от , , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; и &lt;code&gt;P&lt;/code&gt; , где это означает что-то еще, описанное ниже. Поставка &lt;code&gt;*&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; для счетчика повторов вместо числа означает использовать сколько угодно элементов, за исключением:</target>
        </trans-unit>
        <trans-unit id="f1b93edbbeb731023c3dcd7b867f87661f785306" translate="yes" xml:space="preserve">
          <source>Each letter may optionally be followed by a number indicating the repeat count. A numeric repeat count may optionally be enclosed in brackets, as in &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . The repeat count gobbles that many values from the LIST when used with all format types other than &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;P&lt;/code&gt; , where it means something else, described below. Supplying a &lt;code&gt;*&lt;/code&gt; for the repeat count instead of a number means to use however many items are left, except for:</source>
          <target state="translated">За каждой буквой необязательно может следовать число, указывающее счетчик повторов. Числовое число повторений может быть дополнительно заключено в скобки, как в &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . Число повторений проглатывает , что многие значения из списка , когда используются со всеми типами форматов , отличных от , , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; и &lt;code&gt;P&lt;/code&gt; , где это означает что-то еще, описанное ниже. Поставка &lt;code&gt;*&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; для счетчика повторов вместо числа означает использовать сколько угодно элементов, за исключением:</target>
        </trans-unit>
        <trans-unit id="0ca2b686ea513abcdcd81b004dc80b72da247c37" translate="yes" xml:space="preserve">
          <source>Each locale key is a reference to a hash that has the form above, and gives the casing rules for that particular locale, which take precedence over the locale-independent ones when in that locale.</source>
          <target state="translated">Каждый ключ локали является ссылкой на хэш,который имеет форму,описанную выше,и дает правила оболочки для данной конкретной локали,которые имеют приоритет над локально-независимыми,когда находятся в данной локали.</target>
        </trans-unit>
        <trans-unit id="b81c66f6a67c62b4046a77844c9acd84b539087f" translate="yes" xml:space="preserve">
          <source>Each method returns the old value of the &lt;code&gt;IO::Handle&lt;/code&gt; attribute. The methods each take an optional EXPR, which, if supplied, specifies the new value for the &lt;code&gt;IO::Handle&lt;/code&gt; attribute in question. If not supplied, most methods do nothing to the current value--except for &lt;code&gt;autoflush()&lt;/code&gt; , which will assume a 1 for you, just to be different.</source>
          <target state="translated">Каждый метод возвращает старое значение атрибута &lt;code&gt;IO::Handle&lt;/code&gt; . Каждый метод принимает необязательный EXPR, который, если он указан, указывает новое значение для рассматриваемого атрибута &lt;code&gt;IO::Handle&lt;/code&gt; . Если не указан, большинство методов ничего не делают с текущим значением - за исключением &lt;code&gt;autoflush()&lt;/code&gt; , который примет за вас 1, просто чтобы отличаться.</target>
        </trans-unit>
        <trans-unit id="0a408a79f13c6ec4a0cd81e57c787564393f289b" translate="yes" xml:space="preserve">
          <source>Each name-type pair declares one element of the struct. Each element name will be defined as an accessor method unless a method by that name is explicitly defined; in the latter case, a warning is issued if the warning flag (&lt;b&gt;-w&lt;/b&gt;) is set.</source>
          <target state="translated">Каждая пара имя-тип объявляет один элемент структуры. Каждое имя элемента будет определено как метод доступа, если явно не определен метод с таким именем; в последнем случае выдается предупреждение, если установлен флаг предупреждения ( &lt;b&gt;-w&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="bea2fa8177204a00acbe330d65cd373309740d46" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;$section_spec&lt;/code&gt; arguments should be a section specification as described in &lt;a href=&quot;#SECTION-SPECIFICATIONS&quot;&gt;SECTION SPECIFICATIONS&lt;/a&gt;. The section specifications are parsed by this method and the resulting regular expressions are stored in the invoking object.</source>
          <target state="translated">Каждый из аргументов &lt;code&gt;$section_spec&lt;/code&gt; должен быть спецификацией раздела, как описано в &lt;a href=&quot;#SECTION-SPECIFICATIONS&quot;&gt;СПЕЦИФИКАЦИЯХ РАЗДЕЛА&lt;/a&gt; . Спецификации раздела анализируются этим методом, а полученные регулярные выражения сохраняются в вызывающем объекте.</target>
        </trans-unit>
        <trans-unit id="9af6792ba1f44d7cb824f7440960f3ef5c01b6ba" translate="yes" xml:space="preserve">
          <source>Each of the POSIX classes matches exactly the same as their ASCII-range counterparts.</source>
          <target state="translated">Каждый из классов POSIX точно совпадает с их аналогами ASCII-диапазона.</target>
        </trans-unit>
        <trans-unit id="be167c32ebe292b1abf425a82a9d67c142fdc9a5" translate="yes" xml:space="preserve">
          <source>Each of the argument lists above comes out of the &lt;code&gt;normalize_f&lt;/code&gt; function looking exactly the same, like this:</source>
          <target state="translated">Каждый из приведенных выше списков аргументов является результатом функции &lt;code&gt;normalize_f&lt;/code&gt; , которая выглядит точно так же, как это:</target>
        </trans-unit>
        <trans-unit id="93679dc7d627c4c7a6a3897712645c4450ba1379" translate="yes" xml:space="preserve">
          <source>Each of the commands that produce listings of modules (&lt;code&gt;r&lt;/code&gt; , &lt;code&gt;autobundle&lt;/code&gt; , &lt;code&gt;u&lt;/code&gt; ) also return a list of the IDs of all modules within the list.</source>
          <target state="translated">Каждая из команд , &lt;code&gt;autobundle&lt;/code&gt; списки модулей ( &lt;code&gt;r&lt;/code&gt; , autobundle , &lt;code&gt;u&lt;/code&gt; ), также возвращает список идентификаторов всех модулей в списке.</target>
        </trans-unit>
        <trans-unit id="36a145ce6b55d2eacd4e152e8b778cb0812f1b4c" translate="yes" xml:space="preserve">
          <source>Each of the elementary pieces of regular expressions which were described before (such as &lt;code&gt;ab&lt;/code&gt; or &lt;code&gt;\Z&lt;/code&gt; ) could match at most one substring at the given position of the input string. However, in a typical regular expression these elementary pieces are combined into more complicated patterns using combining operators &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;S|T&lt;/code&gt; , &lt;code&gt;S*&lt;/code&gt; etc. (in these examples &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; are regular subexpressions).</source>
          <target state="translated">Каждая из элементарных частей регулярных выражений, которые были описаны ранее (например, &lt;code&gt;ab&lt;/code&gt; или &lt;code&gt;\Z&lt;/code&gt; ), может соответствовать не более одной подстроке в данной позиции входной строки. Однако в типичном регулярном выражении эти элементарные части объединяются в более сложные шаблоны с использованием операторов объединения &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;S|T&lt;/code&gt; , &lt;code&gt;S*&lt;/code&gt; и т. Д. (В этих примерах &lt;code&gt;S&lt;/code&gt; и &lt;code&gt;T&lt;/code&gt; являются регулярными подвыражениями).</target>
        </trans-unit>
        <trans-unit id="bf85de30bb2350d06139ae6bc58a79af96a26e97" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print a message of &quot;Syntax error.&quot; (followed by a newline) to &lt;code&gt;STDERR&lt;/code&gt; , immediately followed by just the &quot;SYNOPSIS&quot; section (also printed to &lt;code&gt;STDERR&lt;/code&gt; ) and will exit with a status of 2:</source>
          <target state="translated">Каждый из следующих вызовов &lt;code&gt;pod2usage()&lt;/code&gt; выводит сообщение &amp;laquo;Синтаксическая ошибка&amp;raquo;. (за которым следует новая строка) в &lt;code&gt;STDERR&lt;/code&gt; , сразу за ним следует только раздел &amp;laquo;SYNOPSIS&amp;raquo; (также распечатанный в &lt;code&gt;STDERR&lt;/code&gt; ), и выйдет со статусом 2:</target>
        </trans-unit>
        <trans-unit id="da247936c8bb95b82240dfbb57e8459e5c728eb2" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print just the &quot;SYNOPSIS&quot; section to &lt;code&gt;STDERR&lt;/code&gt; and will exit with a status of 2:</source>
          <target state="translated">Каждый из следующих вызовов &lt;code&gt;pod2usage()&lt;/code&gt; выводит в &lt;code&gt;STDERR&lt;/code&gt; только раздел &amp;laquo; SYNOPSIS&amp;raquo; и завершается со статусом 2:</target>
        </trans-unit>
        <trans-unit id="c3bf15a510b108560bc55f9dc642118c67f04409" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print the &quot;SYNOPSIS&quot; section and any &quot;OPTIONS&quot; and/or &quot;ARGUMENTS&quot; sections to &lt;code&gt;STDOUT&lt;/code&gt; and will exit with a status of 1:</source>
          <target state="translated">Каждый из следующих вызовов &lt;code&gt;pod2usage()&lt;/code&gt; выводит раздел &amp;laquo;СИНТАКСИС&amp;raquo; и любые разделы &amp;laquo;ОПЦИИ&amp;raquo; и / или &amp;laquo;АРГУМЕНТЫ&amp;raquo; в &lt;code&gt;STDOUT&lt;/code&gt; и завершает работу со статусом 1:</target>
        </trans-unit>
        <trans-unit id="8a8549150e98bb7d0199412efeddf54defc2c85f" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print the entire manual page to &lt;code&gt;STDOUT&lt;/code&gt; and will exit with a status of 1:</source>
          <target state="translated">Каждый из следующих вызовов &lt;code&gt;pod2usage()&lt;/code&gt; будет печатать всю справочную страницу в &lt;code&gt;STDOUT&lt;/code&gt; и завершать работу со статусом 1:</target>
        </trans-unit>
        <trans-unit id="159291495d574283955b7dd83a0159a4cbe57ab7" translate="yes" xml:space="preserve">
          <source>Each of the following methods will return the total number of corresponding tests if called in scalar context. If called in list context, returns the descriptions of the parsers which contain the corresponding tests (see &lt;code&gt;add&lt;/code&gt; for an explanation of description.</source>
          <target state="translated">Каждый из следующих методов вернет общее количество соответствующих тестов, если они вызваны в скалярном контексте. При вызове в контексте списка возвращает описания парсеров, которые содержат соответствующие тесты (см. &lt;code&gt;add&lt;/code&gt; для объяснения описания.</target>
        </trans-unit>
        <trans-unit id="b4805d0a6e23a882a6f379f5e1aaffac33d67fcd" translate="yes" xml:space="preserve">
          <source>Each of the functions will now be discussed in turn.</source>
          <target state="translated">Теперь каждая из функций будет обсуждаться по очереди.</target>
        </trans-unit>
        <trans-unit id="cf8ee854b23795d139b708dbd25340dc64f25e5b" translate="yes" xml:space="preserve">
          <source>Each of the functions will return</source>
          <target state="translated">Каждая из функций вернется</target>
        </trans-unit>
        <trans-unit id="67d949b14cef9bc96632c4a26c1317dd5c052479" translate="yes" xml:space="preserve">
          <source>Each of the integer pack codes &lt;code&gt;sSlLqQ&lt;/code&gt; results in a fixed number of bytes, no matter where you execute your program. This may be useful for some applications, but it does not provide for a portable way to pass data structures between Perl and C programs (bound to happen when you call XS extensions or the Perl function &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;), or when you read or write binary files. What you'll need in this case are template codes that depend on what your local C compiler compiles when you code &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;unsigned long&lt;/code&gt; , for instance. These codes and their corresponding byte lengths are shown in the table below. Since the C standard leaves much leeway with respect to the relative sizes of these data types, actual values may vary, and that's why the values are given as expressions in C and Perl. (If you'd like to use values from &lt;code&gt;%Config&lt;/code&gt; in your program you have to import it with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; .)</source>
          <target state="translated">Каждый из целочисленных кодов пакета &lt;code&gt;sSlLqQ&lt;/code&gt; дает фиксированное количество байтов независимо от того, где вы выполняете свою программу. Это может быть полезно для некоторых приложений, но не обеспечивает переносимого способа передачи структур данных между программами Perl и C (обязательно произойдет, когда вы вызываете расширения XS или &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; функции Perl ) или когда вы читаете или записываете двоичные файлы. . В этом случае вам понадобятся коды шаблонов, которые зависят от того, что компилирует ваш локальный компилятор C, когда вы кодируете &lt;code&gt;short&lt;/code&gt; или &lt;code&gt;unsigned long&lt;/code&gt; код., например. Эти коды и соответствующие им байтовые длины показаны в таблице ниже. Поскольку стандарт C оставляет большую свободу действий в отношении относительных размеров этих типов данных, фактические значения могут отличаться, и поэтому значения представлены в виде выражений в C и Perl. (Если вы хотите использовать значения из &lt;code&gt;%Config&lt;/code&gt; в своей программе, вам необходимо импортировать их с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="35d0d0049982558d7e176e2f3ab3ea596bc6e428" translate="yes" xml:space="preserve">
          <source>Each of the methods below (except config(), accuracy() and precision()) accepts three additional parameters. These arguments &lt;code&gt;$A&lt;/code&gt; , &lt;code&gt;$P&lt;/code&gt; and &lt;code&gt;$R&lt;/code&gt; are &lt;code&gt;accuracy&lt;/code&gt; , &lt;code&gt;precision&lt;/code&gt; and &lt;code&gt;round_mode&lt;/code&gt; . Please see the section about &lt;a href=&quot;#ACCURACY-and-PRECISION&quot;&gt;ACCURACY and PRECISION&lt;/a&gt; for more information.</source>
          <target state="translated">Каждый из приведенных ниже методов (кроме config (), precision () и precision ()) принимает три дополнительных параметра. Эти аргументы &lt;code&gt;$A&lt;/code&gt; , &lt;code&gt;$P&lt;/code&gt; и &lt;code&gt;$R&lt;/code&gt; - это &lt;code&gt;accuracy&lt;/code&gt; , &lt;code&gt;precision&lt;/code&gt; и &lt;code&gt;round_mode&lt;/code&gt; . Пожалуйста, смотрите раздел &lt;a href=&quot;#ACCURACY-and-PRECISION&quot;&gt;ТОЧНОСТЬ и ТОЧНОСТЬ&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="69bb55af40d1c4ccf668c4ee509cae7b3650aeb0" translate="yes" xml:space="preserve">
          <source>Each of the methods works identically, and is used to install (or uninstall) a single DBM Filter. The only difference between them is the place that the filter is installed.</source>
          <target state="translated">Каждый из методов работает одинаково,и используется для установки (или удаления)одного DBM-фильтра.Единственное различие между ними-место установки фильтра.</target>
        </trans-unit>
        <trans-unit id="deb52f34c0e7c886d38c077a6693f8fac31c72b2" translate="yes" xml:space="preserve">
          <source>Each of the targets is created only once (but see &lt;a href=&quot;#Scratchpads-and-recursion&quot;&gt;Scratchpads and recursion&lt;/a&gt; below), and when an opcode needs to put an integer, a double, or a string on stack, it just sets the corresponding parts of its</source>
          <target state="translated">Каждая из целей создается только один раз (но см. &lt;a href=&quot;#Scratchpads-and-recursion&quot;&gt;Блокноты и рекурсию&lt;/a&gt; ниже), и когда код операции должен поместить в стек целое число, двойное число или строку, он просто устанавливает соответствующие части своего</target>
        </trans-unit>
        <trans-unit id="61645526a5f8cc5b5b38c365e573e3b9ce2a363a" translate="yes" xml:space="preserve">
          <source>Each of these areas will be discussed in the following sections.</source>
          <target state="translated">Каждая из этих областей будет обсуждаться в следующих разделах.</target>
        </trans-unit>
        <trans-unit id="4a7e0927366cb3008e3cb582f1225e023afb76ec" translate="yes" xml:space="preserve">
          <source>Each of these functions are called without arguments and return the absolute path of the current working directory.</source>
          <target state="translated">Каждая из этих функций вызывается без аргументов и возвращает абсолютный путь текущей рабочей директории.</target>
        </trans-unit>
        <trans-unit id="fb6c26bfd690fb609fa0a362b968489c94f785d7" translate="yes" xml:space="preserve">
          <source>Each of these input objects are described in further detail in the sections which follow.</source>
          <target state="translated">Каждый из этих объектов ввода подробно описан в последующих разделах.</target>
        </trans-unit>
        <trans-unit id="cd0ac943df3c5c0919c257e9e2ba53e934e28e43" translate="yes" xml:space="preserve">
          <source>Each of these methods may modify the first input argument, except</source>
          <target state="translated">Каждый из этих методов может изменять первый входной аргумент,за исключением следующего</target>
        </trans-unit>
        <trans-unit id="94636e821462a702e9dcf821156451ce10166f58" translate="yes" xml:space="preserve">
          <source>Each of these methods may modify the first input argument.</source>
          <target state="translated">Каждый из этих методов может изменить первый входной аргумент.</target>
        </trans-unit>
        <trans-unit id="1fd6321d309f67bf764c8af9cff581fae0812fa5" translate="yes" xml:space="preserve">
          <source>Each of these nodes represents an op, a fundamental operation inside the Perl core. The code which implements each operation can be found in the</source>
          <target state="translated">Каждый из этих узлов представляет собой операцию,фундаментальную операцию внутри ядра Perl.Код,реализующий каждую операцию,можно найти в разделе</target>
        </trans-unit>
        <trans-unit id="33d6b2a3cedc47a8c8496247740303b046f066c7" translate="yes" xml:space="preserve">
          <source>Each of these options is optional; you can include some, all, or none of them.</source>
          <target state="translated">Каждый из этих вариантов является необязательным;вы можете включить некоторые,все или ни один из них.</target>
        </trans-unit>
        <trans-unit id="d1f0b67ca5c809a794efbf846b5f11a39a783c34" translate="yes" xml:space="preserve">
          <source>Each operand is considered in a modified scalar context, the modification being that array and hash variables are passed by reference to the operator, which implicitly dereferences them. Both elements of each pair are the same:</source>
          <target state="translated">Каждый операнд рассматривается в модифицированном скалярном контексте,при этом модификация заключается в том,что массив и хэш-переменные передаются по ссылке на оператор,который неявно разыменовывает их.Оба элемента каждой пары одинаковы:</target>
        </trans-unit>
        <trans-unit id="76254c26642feac52117b7e65ad2b643499a9d47" translate="yes" xml:space="preserve">
          <source>Each operator has both a terse name (its opname) and a more verbose or recognisable descriptive name. The opdesc function can be used to return a list of descriptions for a list of operators.</source>
          <target state="translated">Каждый оператор имеет как краткое имя (его opname),так и более многословное или узнаваемое описательное имя.Функция opdesc может быть использована для возврата списка описаний для списка операторов.</target>
        </trans-unit>
        <trans-unit id="0ffccbf8d7d785427858064bfe414c9a343b8478" translate="yes" xml:space="preserve">
          <source>Each option specifier consists of two parts: the name specification and the argument specification.</source>
          <target state="translated">Каждый спецификатор опции состоит из двух частей:спецификации имени и спецификации аргумента.</target>
        </trans-unit>
        <trans-unit id="49dbe9df44df46422e8ed79c89a972f7e0a049b6" translate="yes" xml:space="preserve">
          <source>Each package contains a special array called &lt;code&gt;@ISA&lt;/code&gt; . The &lt;code&gt;@ISA&lt;/code&gt; array contains a list of that class's parent classes, if any. This array is examined when Perl does method resolution, which we will cover later.</source>
          <target state="translated">Каждый пакет содержит специальный массив с именем &lt;code&gt;@ISA&lt;/code&gt; . &lt;code&gt;@ISA&lt;/code&gt; массив содержит список родительских классов этого класса, если таковые имеются. Этот массив исследуется, когда Perl выполняет разрешение метода, о чем мы поговорим позже.</target>
        </trans-unit>
        <trans-unit id="fd56746947dceb1b1ebf83666e64df3d893f0573" translate="yes" xml:space="preserve">
          <source>Each pair is an array reference with two elements - namely the</source>
          <target state="translated">Каждая пара представляет собой ссылку на массив с двумя элементами,а именно</target>
        </trans-unit>
        <trans-unit id="79339b4554cd8ab3b93700df12bacff7c6d9a530" translate="yes" xml:space="preserve">
          <source>Each pathname that is a directory that matches the pattern has a slash appended.</source>
          <target state="translated">К каждому патнану,который является каталогом,совпадающим с шаблоном,добавляется косая черта.</target>
        </trans-unit>
        <trans-unit id="20b56d27482026f6b453dfe18f7f652ebd744ed0" translate="yes" xml:space="preserve">
          <source>Each plugin should register itself by providing the following structure</source>
          <target state="translated">Каждый плагин должен зарегистрировать себя,предоставив следующую структуру</target>
        </trans-unit>
        <trans-unit id="4bc675eeb53212d68aff2215974b513fa9d0ff3e" translate="yes" xml:space="preserve">
          <source>Each programmer will, of course, have his or her own preferences in regards to formatting, but there are some general guidelines that will make your programs easier to read, understand, and maintain.</source>
          <target state="translated">Каждый программист,конечно,будет иметь свои предпочтения в отношении форматирования,но есть некоторые общие рекомендации,которые сделают ваши программы легче читать,понимать и поддерживать.</target>
        </trans-unit>
        <trans-unit id="e2d7e5e3cbcd85e0f15e433073f3c09c16649807" translate="yes" xml:space="preserve">
          <source>Each pseudo-process maintains its own virtual environment. Modifications to %ENV affect the virtual environment, and are only visible within that pseudo-process, and in any processes (or pseudo-processes) launched from it.</source>
          <target state="translated">Каждый псевдо-процесс поддерживает свою собственную виртуальную среду.Изменения в %ENV влияют на виртуальное окружение,и видны только внутри этого псевдо-процесса,а также в любых процессах (или псевдо-процессах),запускаемых из него.</target>
        </trans-unit>
        <trans-unit id="25a97b930031adadf111787667688ded94505539" translate="yes" xml:space="preserve">
          <source>Each pseudo-process maintains its own virtual idea of the current directory. Modifications to the current directory using chdir() are only visible within that pseudo-process, and in any processes (or pseudo-processes) launched from it. All file and directory accesses from the pseudo-process will correctly map the virtual working directory to the real working directory appropriately.</source>
          <target state="translated">Каждый псевдо-процесс поддерживает свое виртуальное представление о текущем каталоге.Изменения в текущей директории с помощью chdir()видны только внутри этого псевдо-процесса и в любых процессах (или псевдо-процессах),запущенных из него.Все доступы к файлам и директориям из псевдо-процесса будут корректно сопоставлять виртуальный рабочий каталог с реальным рабочим каталогом.</target>
        </trans-unit>
        <trans-unit id="8f4f1268e7fb63f76b0f62897f0f8014b138b792" translate="yes" xml:space="preserve">
          <source>Each result bit is based on the least-significant bit of the corresponding input character, i.e., on &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate bits 0 and 1, as do characters &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</source>
          <target state="translated">Каждый бит результата основан на младшем бите соответствующего входного символа, т. &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt; На ord ($ char)% 2 . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют биты 0 и 1, как и символы &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abf39ff7c44d3c8c17f0be2056a001c031f6f08e" translate="yes" xml:space="preserve">
          <source>Each result bit is based on the least-significant bit of the corresponding input character, i.e., on &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate bits 0 and 1, as do characters &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</source>
          <target state="translated">Каждый бит результата основан на младшем бите соответствующего входного символа, т. &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt; На ord ($ char)% 2 . В частности, символы &lt;code&gt;&quot;0&quot;&lt;/code&gt; и &lt;code&gt;&quot;1&quot;&lt;/code&gt; генерируют биты 0 и 1, как и символы &lt;code&gt;&quot;\000&quot;&lt;/code&gt; и &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1801d81c7323468b4de78bc480016b6092b96d8e" translate="yes" xml:space="preserve">
          <source>Each result fetched is a result object of a different type. There are common methods to each result object and different types may have methods unique to their type. Sometimes a type method may be overridden in a subclass, but its use is guaranteed to be identical.</source>
          <target state="translated">Каждый полученный результат является объектом результата разного типа.Для каждого объекта результата существуют общие методы,и различные типы могут иметь методы,уникальные для их типа.Иногда метод типа может быть переопределен в подклассе,но его использование гарантированно идентично.</target>
        </trans-unit>
        <trans-unit id="fca0f4c2c0d0f6d5b588e090e9018c1d20041904" translate="yes" xml:space="preserve">
          <source>Each result returned is a &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass, referred to as</source>
          <target state="translated">Каждый возвращаемый результат - это подкласс &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; , называемый</target>
        </trans-unit>
        <trans-unit id="d0a1f92895a8d5d3bca2a476a0ec322b95e7589a" translate="yes" xml:space="preserve">
          <source>Each result returned is a subclass of &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. See that module and related classes for more information on how to use them.</source>
          <target state="translated">Каждый возвращаемый результат является подклассом &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . См. Этот модуль и связанные классы для получения дополнительной информации о том, как их использовать.</target>
        </trans-unit>
        <trans-unit id="8f5ef808a290d77bcb78c1a52baf58c7827e311b" translate="yes" xml:space="preserve">
          <source>Each scalar &lt;code&gt;${&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contains &lt;code&gt;&quot;_&amp;lt;$filename&quot;&lt;/code&gt; . This is also the case for evaluated strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings looks like &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</source>
          <target state="translated">Каждый скаляр &lt;code&gt;${&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; содержит &lt;code&gt;&quot;_&amp;lt;$filename&quot;&lt;/code&gt; . Это также относится к оцененным строкам, которые содержат подпрограммы или которые в настоящее время выполняются. Имя $ filename для строк &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ed выглядит так &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b759249474717644d66332dcc04eba32c6b818f" translate="yes" xml:space="preserve">
          <source>Each semaphore has a counter attached to it. By default, semaphores are created with the counter set to one, &lt;code&gt;down()&lt;/code&gt; decrements the counter by one, and &lt;code&gt;up()&lt;/code&gt; increments by one. However, we can override any or all of these defaults simply by passing in different values:</source>
          <target state="translated">К каждому семафору прикреплен счетчик. По умолчанию семафоры создаются со счетчиком, установленным на единицу, &lt;code&gt;down()&lt;/code&gt; уменьшает счетчик на единицу, а &lt;code&gt;up()&lt;/code&gt; увеличивает на единицу. Однако мы можем переопределить любые или все эти значения по умолчанию, просто передав другие значения:</target>
        </trans-unit>
        <trans-unit id="9e3598640cb6381c253bcf070a1e62dc7e9d0823" translate="yes" xml:space="preserve">
          <source>Each step is of the form &lt;code&gt;n &amp;lt;x&amp;gt; &amp;lt;y&amp;gt;&lt;/code&gt;, with &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; the part of the string matched and &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; the part not yet matched. The &lt;code&gt;|  1:  STAR&lt;/code&gt; says that Perl is at line number 1 in the compilation list above. See &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Debugging Regular Expressions in perldebguts&lt;/a&gt; for much more detail.</source>
          <target state="translated">Каждый шаг имеет форму &lt;code&gt;n &amp;lt;x&amp;gt; &amp;lt;y&amp;gt;&lt;/code&gt; , где &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; соответствует части строки, а &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; - части, которая еще не согласована. &lt;code&gt;| 1: STAR&lt;/code&gt; сообщает, что Perl находится в строке номер 1 в списке компиляции выше. Более подробную информацию см. В разделе &amp;laquo; &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Отладка регулярных выражений в perldebguts&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3defe21495aad5ab5041830fd4fe29198a67142" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;$finder-&amp;gt;next&lt;/code&gt; is called, the iterator returns one of two possible values:</source>
          <target state="translated">Каждый раз, когда &lt;code&gt;$finder-&amp;gt;next&lt;/code&gt; , итератор возвращает одно из двух возможных значений:</target>
        </trans-unit>
        <trans-unit id="54bbe29b947a5618329ec98194ec80f8aabe46b6" translate="yes" xml:space="preserve">
          <source>Each type of section can appear an arbitrary number of times and does not have to appear at all. For example, a typemap may commonly lack &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt; sections if all it needs to do is associate additional C types with core XS types like T_PTROBJ. Lines that start with a hash &lt;code&gt;#&lt;/code&gt; are considered comments and ignored in the &lt;code&gt;TYPEMAP&lt;/code&gt; section, but are considered significant in &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt; . Blank lines are generally ignored.</source>
          <target state="translated">Каждый тип раздела может появляться произвольное количество раз и не обязательно должен появляться. Например, в карте типов обычно могут отсутствовать разделы &lt;code&gt;INPUT&lt;/code&gt; и &lt;code&gt;OUTPUT&lt;/code&gt; , если все, что ей нужно сделать, это связать дополнительные типы C с базовыми типами XS, такими как T_PTROBJ. Строки, начинающиеся с хеша &lt;code&gt;#&lt;/code&gt; , считаются комментариями и игнорируются в разделе &lt;code&gt;TYPEMAP&lt;/code&gt; , но считаются важными для &lt;code&gt;INPUT&lt;/code&gt; и &lt;code&gt;OUTPUT&lt;/code&gt; . Пустые строки обычно игнорируются.</target>
        </trans-unit>
        <trans-unit id="c99826defe1aa3e0e7dfa632ce9b50c12211fd46" translate="yes" xml:space="preserve">
          <source>Each typedef has specific routines that manipulate the various data types.</source>
          <target state="translated">Каждый typedef имеет свои подпрограммы,которые манипулируют различными типами данных.</target>
        </trans-unit>
        <trans-unit id="a786e808038f24779f10721b5785e1d471731d02" translate="yes" xml:space="preserve">
          <source>Each value in the results list will be a hash reference containing the following fields:</source>
          <target state="translated">Каждое значение в списке результатов будет представлять собой хэш-ссылку,содержащую следующие поля:</target>
        </trans-unit>
        <trans-unit id="d6fa3b1f2df46de4d0da0473d7f7df5be8fdd538" translate="yes" xml:space="preserve">
          <source>Each version of Perl comes with the documentation that was current at the time of release. This poses a problem for content such as book lists. There are probably very nice books published after this list was included in your Perl release, and you can check the latest released version at &lt;a href=&quot;http://perldoc.perl.org/perlbook.html&quot;&gt;http://perldoc.perl.org/perlbook.html&lt;/a&gt; .</source>
          <target state="translated">Каждая версия Perl поставляется с документацией, действующей на момент выпуска. Это создает проблему для такого контента, как списки книг. Вероятно, после того, как этот список был включен в ваш выпуск Perl, были опубликованы очень хорошие книги, и вы можете проверить последнюю выпущенную версию на &lt;a href=&quot;http://perldoc.perl.org/perlbook.html&quot;&gt;http://perldoc.perl.org/perlbook.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a017204ca793ea63195213655418d18b5e46cf36" translate="yes" xml:space="preserve">
          <source>Earlier Mac OS X releases (10.2 &quot;Jaguar&quot; and older) did not include a completely thread-safe libc, so threading is not fully supported. Also, earlier releases included a buggy libdb, so some of the DB_File tests are known to fail on those releases.</source>
          <target state="translated">Ранние выпуски Mac OS X (10.2 &quot;Jaguar&quot; и более ранние)не включали полностью потоковую защиту libc,поэтому потоковая обработка не поддерживается полностью.Кроме того,в более ранних релизах была включена багги libdb,поэтому некоторые тесты DB_File,как известно,не работают в этих релизах.</target>
        </trans-unit>
        <trans-unit id="a252186ae05a758597f2268019d7fe33e7216333" translate="yes" xml:space="preserve">
          <source>Earlier releases caveats</source>
          <target state="translated">Предыдущие выпуски содержат предостережения</target>
        </trans-unit>
        <trans-unit id="8144bf937e246b0c3995f39e74e8340a0ff57aa1" translate="yes" xml:space="preserve">
          <source>Earlier than Perl 5.10, you have a bit of work to do. You want to avoid compiling a regular expression every time you want to match it. In this example, perl must recompile the regular expression for every iteration of the &lt;code&gt;foreach&lt;/code&gt; loop since it has no way to know what &lt;code&gt;$pattern&lt;/code&gt; will be:</source>
          <target state="translated">До версии Perl 5.10 у вас есть над чем поработать. Вам нужно избегать компиляции регулярного выражения каждый раз, когда вы хотите сопоставить его. В этом примере perl должен перекомпилировать регулярное выражение для каждой итерации цикла &lt;code&gt;foreach&lt;/code&gt; , так как у него нет способа узнать, каким будет &lt;code&gt;$pattern&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2412eca1a81df7ff0f1d8fd57bf151a2e60cb6ee" translate="yes" xml:space="preserve">
          <source>Earlier versions of Perl accepted almost all the 6.1 names. These were most extensively documented in the v5.14 version of this pod: &lt;a href=&quot;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&quot;&gt;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&lt;/a&gt;.</source>
          <target state="translated">Ранние версии Perl принимали почти все имена 6.1. Наиболее подробно они описаны в версии v5.14 этого модуля: &lt;a href=&quot;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&quot;&gt;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="041f750894a2130f024fa1d40c0e0cb8140d53b7" translate="yes" xml:space="preserve">
          <source>Earlier versions of Storable would immediately croak if they encountered a file with a higher internal version number than the reading Storable knew about. Internal version numbers are increased each time new data types (such as restricted hashes) are added to the vocabulary of the file format. This meant that a newer Storable module had no way of writing a file readable by an older Storable, even if the writer didn't store newer data types.</source>
          <target state="translated">Более ранние версии Storable мгновенно перестанут работать,если наткнутся на файл с более высоким внутренним номером версии,чем известно читателю Storable.Внутренний номер версии увеличивается каждый раз,когда в словарь формата файла добавляются новые типы данных (например,ограниченные хэши).Это означало,что более новый модуль Storable не имел возможности записать файл,читаемый более старым модулем Storable,даже если в нем не хранились более новые типы данных.</target>
        </trans-unit>
        <trans-unit id="641edf650debd12f3350ba77247f6ae399c9cef3" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned that the &lt;code&gt;File&lt;/code&gt; class's &lt;code&gt;last_mod_time&lt;/code&gt; accessor could return a &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; object. This is a perfect example of composition. We could go even further, and make the &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; accessors return objects as well. The &lt;code&gt;File&lt;/code&gt; class would then be &lt;b&gt;composed&lt;/b&gt; of several other objects.</source>
          <target state="translated">Ранее мы упоминали, что метод &lt;code&gt;File&lt;/code&gt; &lt;code&gt;last_mod_time&lt;/code&gt; класса File может возвращать объект &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; . Это прекрасный образец композиции. Мы могли бы пойти еще дальше и сделать так, чтобы &lt;code&gt;path&lt;/code&gt; доступа к path и &lt;code&gt;content&lt;/code&gt; также возвращали объекты. Тогда класс &lt;code&gt;File&lt;/code&gt; будет &lt;b&gt;состоять&lt;/b&gt; из нескольких других объектов.</target>
        </trans-unit>
        <trans-unit id="1e2d95ddabd105e29656829184c35d2859c555dc" translate="yes" xml:space="preserve">
          <source>Early Perl versions worked on some EBCDIC machines, but the last known version that ran on EBCDIC was v5.8.7, until v5.22, when the Perl core again works on z/OS. Theoretically, it could work on OS/400 or Siemens' BS2000 (or their successors), but this is untested. In v5.22, not all the modules found on CPAN but shipped with core Perl work on z/OS.</source>
          <target state="translated">Ранние версии Perl работали на некоторых машинах EBCDIC,но последней известной версией,которая работала на EBCDIC,была v5.8.7,до v5.22,когда Perl ядро снова работает на z/OS.Теоретически,оно могло работать на OS/400 или Siemens' BS2000 (или их преемниках),но это не протестировано.В v5.22 не все модули,найденные на CPAN,но поставляемые с ядром Perl,работают на z/OS.</target>
        </trans-unit>
        <trans-unit id="59b164194e7edb2e85034e9b78794d560a716b37" translate="yes" xml:space="preserve">
          <source>Ease testing test modules built with Test::Builder</source>
          <target state="translated">Простые в тестировании модули,построенные с помощью Test::Builder</target>
        </trans-unit>
        <trans-unit id="7a188f6f02161d17a281a3ef192ea2346304b188" translate="yes" xml:space="preserve">
          <source>Easily interact with CPAN from the command line</source>
          <target state="translated">Легко взаимодействовать с CPAN из командной строки.</target>
        </trans-unit>
        <trans-unit id="995f14f2d2d8a63a7a9da7579e9e95a2acf52319" translate="yes" xml:space="preserve">
          <source>Ed Avis</source>
          <target state="translated">Эд Эвис</target>
        </trans-unit>
        <trans-unit id="528c45b93e145146f93473cbaa4675f9b54b16c1" translate="yes" xml:space="preserve">
          <source>Edgar &quot;Trizor&quot; Bering &amp;lt;trizor@gmail.com&amp;gt;</source>
          <target state="translated">Эдгар &quot;Trizor&quot; Беринг &amp;lt;trizor@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e76b3763dae70623eb55885995406de6279fdb6e" translate="yes" xml:space="preserve">
          <source>Edit the Makefile.PL file so that the corresponding line looks like this:</source>
          <target state="translated">Отредактируйте файл Makefile.PL так,чтобы соответствующая строка выглядела так:</target>
        </trans-unit>
        <trans-unit id="f7940347fff54108cd46081728a5cf85408a717b" translate="yes" xml:space="preserve">
          <source>Edit the files generated. You don't have to if you have no time AND no intention to give it to someone else. But it is a good idea to edit the pod and to add more tests.</source>
          <target state="translated">Отредактируйте сгенерированные файлы.Ты не обязан,если у тебя нет времени и нет намерения отдавать его кому-то другому.Но это хорошая идея-отредактировать стручок и добавить больше тестов.</target>
        </trans-unit>
        <trans-unit id="954ea018e0a987091c4440d55ba64f48e0cccfe8" translate="yes" xml:space="preserve">
          <source>Edit the makefile.mk (or Makefile, if you're using nmake) and change the values of INST_DRV and INST_TOP. You can also enable various build flags. These are explained in the makefiles.</source>
          <target state="translated">Отредактируйте makefile.mk (или Makefile,если вы используете nmake)и измените значения INST_DRV и INST_TOP.Также можно включить различные флаги сборки.Это объясняется в makefile.</target>
        </trans-unit>
        <trans-unit id="b93bb818c85552f3fcd19e172c258ef9c6aad22d" translate="yes" xml:space="preserve">
          <source>Editor Support for Debugging</source>
          <target state="translated">Редакционная поддержка отладки</target>
        </trans-unit>
        <trans-unit id="68575b9eb0c3bb98d30a72178c5ff21f9fae81f0" translate="yes" xml:space="preserve">
          <source>Editor to use.</source>
          <target state="translated">Редактор на использование.</target>
        </trans-unit>
        <trans-unit id="77cd7c3d29d911531fb7afe572b99c8c5ba4e8b7" translate="yes" xml:space="preserve">
          <source>Editorial adjustments by Gurusamy Sarathy &amp;lt;gsar@ActiveState.com&amp;gt;</source>
          <target state="translated">Редакционные поправки сделаны Гурусами Сарати &amp;lt;gsar@ActiveState.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="73be54c86084c8c273a09c1c9821e5a9131296dd" translate="yes" xml:space="preserve">
          <source>Effect:</source>
          <target state="translated">Effect:</target>
        </trans-unit>
        <trans-unit id="8b7ac9002bbe557a0e89e8f9ac76410e740b68c3" translate="yes" xml:space="preserve">
          <source>Efficient removal of characters from the beginning of the string buffer. SvPOK(sv), or at least SvPOKp(sv), must be true and the &lt;code&gt;ptr&lt;/code&gt; must be a pointer to somewhere inside the string buffer. The &lt;code&gt;ptr&lt;/code&gt; becomes the first character of the adjusted string. Uses the &quot;OOK hack&quot;. On return, only SvPOK(sv) and SvPOKp(sv) among the OK flags will be true.</source>
          <target state="translated">Эффективное удаление символов из начала строкового буфера. SvPOK (sv) или, по крайней мере, SvPOKp (sv), должен быть истинным, а &lt;code&gt;ptr&lt;/code&gt; должен быть указателем на что-то внутри строкового буфера. Знак &lt;code&gt;ptr&lt;/code&gt; становится первым символом измененной строки. Использует &amp;laquo;OOK hack&amp;raquo;. По возвращении только SvPOK (sv) и SvPOKp (sv) среди флагов OK будут истинными.</target>
        </trans-unit>
        <trans-unit id="f18b25f084ce81b950168aedca18f94cb1425062" translate="yes" xml:space="preserve">
          <source>Efficiently compute time from local and GMT time</source>
          <target state="translated">Эффективное вычисление времени по местному и GMT времени</target>
        </trans-unit>
        <trans-unit id="654f6a3bdd1d9e4bdcf155781a2de9b4ed80c132" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;IO::String&lt;/code&gt; or &lt;code&gt;perlio&lt;/code&gt; support is needed to support writing stringified archives. Currently, &lt;code&gt;perlio&lt;/code&gt; is the preferred method, if available.</source>
          <target state="translated">Либо &lt;code&gt;IO::String&lt;/code&gt; или &lt;code&gt;perlio&lt;/code&gt; поддержка необходима для поддержки написания строковой архивы. В настоящее время предпочтительным методом является &lt;code&gt;perlio&lt;/code&gt; , если он доступен.</target>
        </trans-unit>
        <trans-unit id="85dba161f5ca6a960a7dc8fa1039724a8c09cad4" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;\g&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (starting in Perl 5.10.0), or &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (old-style) where</source>
          <target state="translated">Либо &lt;code&gt;\g&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (начиная с Perl 5.10.0), либо &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (старый стиль), где</target>
        </trans-unit>
        <trans-unit id="cb02a27773229541ab59b1944bd46b1d5a6ebed2" translate="yes" xml:space="preserve">
          <source>Either a regular &lt;b&gt;assignment&lt;/b&gt; or a compound &lt;b&gt;operator&lt;/b&gt; composed of an ordinary assignment and some other operator, that changes the value of a variable in place; that is, relative to its old value. For example, &lt;code&gt;$a += 2&lt;/code&gt; adds &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;$a&lt;/code&gt; .</source>
          <target state="translated">Либо обычное &lt;b&gt;присваивание,&lt;/b&gt; либо составной &lt;b&gt;оператор,&lt;/b&gt; состоящий из обычного присваивания и некоторого другого оператора, который изменяет значение переменной на месте; то есть относительно его старого значения. Например, &lt;code&gt;$a += 2&lt;/code&gt; добавляет &lt;code&gt;2&lt;/code&gt; к &lt;code&gt;$a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="281cd0fa078fd4c1ba948d728426cec878f64c16" translate="yes" xml:space="preserve">
          <source>Either assimilate new technologies, or build bridges to them.</source>
          <target state="translated">Либо ассимилировать новые технологии,либо навести к ним мосты.</target>
        </trans-unit>
        <trans-unit id="66b1d548fa9375ac8cee4b6bb3288cae52feda67" translate="yes" xml:space="preserve">
          <source>Either not implemented or a no-op. (Android)</source>
          <target state="translated">Либо не выполнено,либо нет.(Андроид)</target>
        </trans-unit>
        <trans-unit id="c47f17b2cb7b7674bb2cbd89473a3cd6f362bf48" translate="yes" xml:space="preserve">
          <source>Either of the following will work instead:</source>
          <target state="translated">Вместо этого сработает любое из нижеперечисленных:</target>
        </trans-unit>
        <trans-unit id="e5a6a14049fff21a602c284699a2c9fbe3ca6693" translate="yes" xml:space="preserve">
          <source>Either single-quote your strings, or (preferably) use forward slashes. Since all DOS and Windows versions since something like MS-DOS 2.0 or so have treated &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; the same in a path, you might as well use the one that doesn't clash with Perl--or the POSIX shell, ANSI C and C++, awk, Tcl, Java, or Python, just to mention a few. POSIX paths are more portable, too.</source>
          <target state="translated">Либо заключите строки в одинарные кавычки, либо (желательно) используйте косую черту. Поскольку все версии DOS и Windows, начиная с чего-то вроде MS-DOS 2.0 или около того, обрабатывали &lt;code&gt;/&lt;/code&gt; и &lt;code&gt;\&lt;/code&gt; одинаково в пути, вы также можете использовать тот, который не конфликтует с Perl, или оболочку POSIX, ANSI C и C ++, awk, Tcl, Java или Python, и это лишь некоторые из них. Пути POSIX также более переносимы.</target>
        </trans-unit>
        <trans-unit id="a48425d47cea1024da1aa0b5eb56b9a2e8f4b87c" translate="yes" xml:space="preserve">
          <source>Either stringify the structure yourself (no fun), or else get the MLDBM (which uses Data::Dumper) module from CPAN and layer it on top of either DB_File or GDBM_File. You might also try DBM::Deep, but it can be a bit slow.</source>
          <target state="translated">Либо сами строчите структуру (неинтересно),либо получите модуль MLDBM (который использует модуль Data::Dumper)из CPAN и наложите его поверх DB_File или GDBM_File.Вы также можете попробовать DBM::Deep,но это может быть немного медленно.</target>
        </trans-unit>
        <trans-unit id="f91179ba5041e3cd11279b2a09e8c8dafe42d600" translate="yes" xml:space="preserve">
          <source>Either the 5.006001 or the 5.6.1 format is acceptable.</source>
          <target state="translated">Допускается либо формат 5.006001,либо 5.6.1.</target>
        </trans-unit>
        <trans-unit id="f3046bc2658fc9703b653ff4f645f1c7f4b09d3a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; flag will warn you when you use an array slice with a single index.</source>
          <target state="translated">Либо &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; Прагмы или &lt;b&gt;-w&lt;/b&gt; флаг предупредит вас , когда вы используете срез массива с одним индексом.</target>
        </trans-unit>
        <trans-unit id="906b6fd14fb2f43afa53be4e9384438767144648" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;warnings::warn&lt;/code&gt; or &lt;code&gt;warnings::warnif&lt;/code&gt; function should be used to actually display the warnings message. This is because they can make use of the feature that allows warnings to be escalated into fatal errors. So in this case</source>
          <target state="translated">Либо &lt;code&gt;warnings::warn&lt;/code&gt; или &lt;code&gt;warnings::warnif&lt;/code&gt; функция должна использоваться , чтобы фактически отобразить сообщение предупреждения. Это потому, что они могут использовать функцию, которая позволяет преобразовывать предупреждения в фатальные ошибки. Так что в этом случае</target>
        </trans-unit>
        <trans-unit id="0780376e7962816fa4ff7b6a652f65ef6eadb7db" translate="yes" xml:space="preserve">
          <source>Either use parentheses or the high-precedence variant of the operator.</source>
          <target state="translated">Используйте скобки или вариант оператора с высоким коэффициентом усиления.</target>
        </trans-unit>
        <trans-unit id="a6479b4a431808cf309ed8137f781bb957df27d9" translate="yes" xml:space="preserve">
          <source>Either you don't have more than one line in the string you're looking at (probably), or else you aren't using the correct modifier(s) on your pattern (possibly).</source>
          <target state="translated">Либо у вас не более одной строки в строке,на которую вы смотрите (возможно),либо вы не используете правильный модификатор(ы)на вашем шаблоне (возможно).</target>
        </trans-unit>
        <trans-unit id="e45775ed8dae80c63b3497b4ea826a44ca2dea3f" translate="yes" xml:space="preserve">
          <source>Elapsed returns a &lt;a href=&quot;../../benchmark&quot;&gt;Benchmark&lt;/a&gt; object that represents the running time of the aggregated tests. In order for &lt;code&gt;elapsed&lt;/code&gt; to be valid you must call &lt;code&gt;start&lt;/code&gt; before running the tests and &lt;code&gt;stop&lt;/code&gt; immediately afterwards.</source>
          <target state="translated">Elapsed возвращает объект &lt;a href=&quot;../../benchmark&quot;&gt;Benchmark,&lt;/a&gt; который представляет время выполнения агрегированных тестов. Чтобы &lt;code&gt;elapsed&lt;/code&gt; был действительным, вы должны вызвать &lt;code&gt;start&lt;/code&gt; перед запуском тестов и &lt;code&gt;stop&lt;/code&gt; сразу после этого.</target>
        </trans-unit>
        <trans-unit id="685684a16f4001786549b1ab800e18b9d9c7dce4" translate="yes" xml:space="preserve">
          <source>Electronic mail address of the perl5 administrator.</source>
          <target state="translated">Электронный почтовый адрес администратора perl5.</target>
        </trans-unit>
        <trans-unit id="0206d29187ee24de18ffe8c7060208c783959fc1" translate="yes" xml:space="preserve">
          <source>Electronic mail address of the person who ran Configure. This can be used by units that require the user's e-mail, like</source>
          <target state="translated">Электронный почтовый адрес человека,который запустил &quot;Настройку&quot;.Это может быть использовано устройствами,которым требуется электронная почта пользователя,такими как</target>
        </trans-unit>
        <trans-unit id="fb92ce1ec6eee388978bf1476ef4da0f49ddc2f4" translate="yes" xml:space="preserve">
          <source>Element Types and Accessor Methods</source>
          <target state="translated">Типы элементов и методы аксессуаров</target>
        </trans-unit>
        <trans-unit id="56be9d95047d3837a8e260ecf6fab5aa5091179f" translate="yes" xml:space="preserve">
          <source>Eliminate the macros in the output to the MMS/MMK file.</source>
          <target state="translated">Устраните макросы в выходных данных MMS/MMK-файла.</target>
        </trans-unit>
        <trans-unit id="372fe5af53dfb10b96df623d9727deb1110a3dd2" translate="yes" xml:space="preserve">
          <source>Email any corrections or questions to me.</source>
          <target state="translated">Напишите мне любые исправления или вопросы.</target>
        </trans-unit>
        <trans-unit id="a5bcdc422fa0c0f86b08b10ed2c448b54076951e" translate="yes" xml:space="preserve">
          <source>Embedded Code Execution Frequency</source>
          <target state="translated">Встроенная частота выполнения кода</target>
        </trans-unit>
        <trans-unit id="1c0d431f261d9feabca2f4bf0f5d2be5226959da" translate="yes" xml:space="preserve">
          <source>Embedded Ctrl-As (octal 001) in the input will be mapped to spaces on output, due to an internal implementation detail.</source>
          <target state="translated">Встроенные Ctrl-As (восьмеричный 001)на входе будут отображены на пробелы на выходе,благодаря внутренней детализации реализации.</target>
        </trans-unit>
        <trans-unit id="036d707633278129886b9180244ca67da739555e" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can also turn off any modifiers already present by using, e.g., &lt;code&gt;(?-i)&lt;/code&gt;. Modifiers can also be combined into a single expression, e.g., &lt;code&gt;(?s-i)&lt;/code&gt; turns on single line mode and turns off case insensitivity.</source>
          <target state="translated">Встроенные модификаторы также могут отключить любые уже существующие модификаторы, используя, например, &lt;code&gt;(?-i)&lt;/code&gt; . Модификаторы также могут быть объединены в одно выражение, например, &lt;code&gt;(?s-i)&lt;/code&gt; включает однострочный режим и отключает нечувствительность к регистру.</target>
        </trans-unit>
        <trans-unit id="7b8b1388248a7771ad7a19db052c3e57cdc37002" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can have two important advantages over the usual modifiers. Embedded modifiers allow a custom set of modifiers to</source>
          <target state="translated">Встроенные модификаторы могут иметь два важных преимущества по сравнению с обычными модификаторами.Встраиваемые модификаторы позволяют</target>
        </trans-unit>
        <trans-unit id="77fff13bcd07ad216d2d3e4a9dc81f2e17688911" translate="yes" xml:space="preserve">
          <source>Embedded modifiers may also be added to a non-capturing grouping. &lt;code&gt;(?i-m:regexp)&lt;/code&gt; is a non-capturing grouping that matches &lt;code&gt;regexp&lt;/code&gt; case insensitively and turns off multi-line mode.</source>
          <target state="translated">Встроенные модификаторы также могут быть добавлены к группировке без захвата. &lt;code&gt;(?i-m:regexp)&lt;/code&gt; - это группа без захвата, которая нечувствительна к регистру &lt;code&gt;regexp&lt;/code&gt; и отключает многострочный режим.</target>
        </trans-unit>
        <trans-unit id="b92d8665944f4979bd50de8585ed3b0fd45dfa5f" translate="yes" xml:space="preserve">
          <source>Embedding Functions</source>
          <target state="translated">Встраиваемые функции</target>
        </trans-unit>
        <trans-unit id="dfab320700daa38157038d3e70e9093fcfa26c1f" translate="yes" xml:space="preserve">
          <source>Embedding Perl inside a 64-bit application.</source>
          <target state="translated">Встраивание Perl внутри 64-битного приложения.</target>
        </trans-unit>
        <trans-unit id="0694b8bb0407da0c117f25cc81dd5d48908ff82d" translate="yes" xml:space="preserve">
          <source>Embedding Perl under Win32</source>
          <target state="translated">Размещение Perl под Win32</target>
        </trans-unit>
        <trans-unit id="9cbcae97b606ebda37a4c9c0051aab393c7f7d13" translate="yes" xml:space="preserve">
          <source>Embedding Pods in Perl Modules</source>
          <target state="translated">Встраиваемые стручки в модули Perl</target>
        </trans-unit>
        <trans-unit id="3332088412158a65b80fc73f2172f27d8031dce4" translate="yes" xml:space="preserve">
          <source>Embedding comments and modifiers in a regular expression</source>
          <target state="translated">Вставка комментариев и модификаторов в регулярное выражение</target>
        </trans-unit>
        <trans-unit id="abbe29d0eda029ba0d774099d16a176aaf760777" translate="yes" xml:space="preserve">
          <source>Empty parts of the file/buffer will have NULL (0x00) bytes written to them.</source>
          <target state="translated">Пустые части файла/буфера будут иметь запись NULL (0x00)байт.</target>
        </trans-unit>
        <trans-unit id="bd4ef1b6c1ef24f987c292a748ebade1052ce4dc" translate="yes" xml:space="preserve">
          <source>Empty strings as well as other illegal numbers results in 'NaN'.</source>
          <target state="translated">Пустые строки,а также другие незаконные номера приводят к 'NaN'.</target>
        </trans-unit>
        <trans-unit id="b78fcf2b7184ff747f91ac2d4e85304d73a66a8f" translate="yes" xml:space="preserve">
          <source>Emptying a file of existing contents, either automatically when opening a file for writing or explicitly via the &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Очистка файла от существующего содержимого либо автоматически при открытии файла для записи, либо явно с помощью функции &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3810839f51735c2952e4638769a72e1f188779e" translate="yes" xml:space="preserve">
          <source>Emulate low-level math with BigInt code</source>
          <target state="translated">Эмулируйте низкоуровневую математику с помощью кода BigInt.</target>
        </trans-unit>
        <trans-unit id="eaff5ce9fb66a8294a29b4afda7fa93b8fb7b74b" translate="yes" xml:space="preserve">
          <source>Emulated using multiple interpreters. See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;. (Win32)</source>
          <target state="translated">Эмулируется с использованием нескольких интерпретаторов. См. &lt;a href=&quot;perlfork&quot;&gt;Perlfork&lt;/a&gt; . (Win32)</target>
        </trans-unit>
        <trans-unit id="a7b07a2e86e21bbe02318bb5339e9e3819d02d9c" translate="yes" xml:space="preserve">
          <source>Emulated using synchronization functions such that it can be interrupted by &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt;, and limited to a maximum of 4294967 seconds, approximately 49 days. (Win32)</source>
          <target state="translated">Эмулируется с использованием функций синхронизации, так что она может быть прервана &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; и ограничена максимумом 4294967 секунд, примерно 49 дней. (Win32)</target>
        </trans-unit>
        <trans-unit id="2fab2548b326a0aed3bd44319bab854e6c0cf455" translate="yes" xml:space="preserve">
          <source>Emulated using timers that must be explicitly polled whenever Perl wants to dispatch &quot;safe signals&quot; and therefore cannot interrupt blocking system calls. (Win32)</source>
          <target state="translated">Эмулируется с помощью таймеров,которые должны быть явно опрошены всякий раз,когда Perl хочет посылать &quot;безопасные сигналы&quot; и,следовательно,не может прервать блокировку системных вызовов.(Win32)</target>
        </trans-unit>
        <trans-unit id="9b1e45abf8f6f88976507fbf984db8d99aa517be" translate="yes" xml:space="preserve">
          <source>Emulates Unix &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; (which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error) by mapping the &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;SS$_ABORT&lt;/code&gt; (&lt;code&gt;44&lt;/code&gt; ). This behavior may be overridden with the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'exit'&lt;/code&gt; . As with the CRTL's &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of &lt;code&gt;SS$_NORMAL&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt; ); this mapping cannot be overridden. Any other argument to &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; is used directly as Perl's exit status. On VMS, unless the future POSIX_EXIT mode is enabled, the exit code should always be a valid VMS exit code and not a generic number. When the POSIX_EXIT mode is enabled, a generic number will be encoded in a method compatible with the C library _POSIX_EXIT macro so that it can be decoded by other programs, particularly ones written in C, like the GNV package. (VMS)</source>
          <target state="translated">Эмулирует функцию &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; Unix ( которая рассматривает &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; как указание на ошибку) путем сопоставления &lt;code&gt;1&lt;/code&gt; с &lt;code&gt;SS$_ABORT&lt;/code&gt; ( &lt;code&gt;44&lt;/code&gt; ). Это поведение можно переопределить с &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'exit'&lt;/code&gt; . Как и в случае с функцией &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; CRTL , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; также отображается в статус выхода &lt;code&gt;SS$_NORMAL&lt;/code&gt; ( &lt;code&gt;1&lt;/code&gt; ); это сопоставление нельзя переопределить. Любой другой аргумент для &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; используется непосредственно как статус выхода Perl. В VMS, если будущий режим POSIX_EXIT не включен, код выхода всегда должен быть действительным кодом выхода VMS, а не общим номером. Когда включен режим POSIX_EXIT, общий номер будет закодирован методом, совместимым с макросом _POSIX_EXIT библиотеки C, чтобы его можно было декодировать другими программами, особенно написанными на C, такими как пакет GNV. (VMS)</target>
        </trans-unit>
        <trans-unit id="a8694061aed01e45167cf3a5722aa921d3e6ee71" translate="yes" xml:space="preserve">
          <source>Emulation is provided for &lt;code&gt;runtests&lt;/code&gt; and &lt;code&gt;execute_tests&lt;/code&gt; but the pluggable 'Straps' interface that previous versions of &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; supported is not reproduced here. Straps is now available as a stand alone module: &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Test::Harness::Straps&lt;/a&gt;.</source>
          <target state="translated">Эмуляция предоставляется для &lt;code&gt;runtests&lt;/code&gt; и &lt;code&gt;execute_tests&lt;/code&gt; , но подключаемый интерфейс 'Straps', поддерживаемый предыдущими версиями &lt;a href=&quot;harness&quot;&gt;Test :: Harness,&lt;/a&gt; здесь не воспроизводится. Straps теперь доступен как отдельный модуль: &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Test :: Harness :: Straps&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c3201c23058080f5cca7ba534770368c083d322" translate="yes" xml:space="preserve">
          <source>Enable DUMP and all execute options. Equivalent to:</source>
          <target state="translated">Включите DUMP и все опции выполнения.Эквивалент к:</target>
        </trans-unit>
        <trans-unit id="7bb7295d3b950c4331c9fe377d6496cd34ea08ee" translate="yes" xml:space="preserve">
          <source>Enable all options at once except OFFSETS, OFFSETSDBG and BUFFERS. (To get every single option without exception, use both ALL and EXTRA.)</source>
          <target state="translated">Включите все опции сразу,кроме OFFSETS,OFFSETSDBG и BUFFERS.(Чтобы получить все без исключения опции,используйте как ALL,так и EXTRA).</target>
        </trans-unit>
        <trans-unit id="7c54f50dbe8b1d2b9d4279a847b1af1e242ac5db" translate="yes" xml:space="preserve">
          <source>Enable caching of timings for the null loop. The time taken for COUNT rounds of the null loop will be calculated only once for each different COUNT used.</source>
          <target state="translated">Включить кэширование таймингов для нулевого цикла.Время,необходимое для циклов COUNT,будет вычисляться только один раз для каждой отдельной используемой COUNT.</target>
        </trans-unit>
        <trans-unit id="af34a92294247e0324cf9cb4ab7591c0157d3cc4" translate="yes" xml:space="preserve">
          <source>Enable debugging of offsets information. This emits copious amounts of trace information and doesn't mesh well with other debug options.</source>
          <target state="translated">Включите отладку информации о смещениях.Это испускает большое количество информации о трассировке и плохо сочетается с другими опциями отладки.</target>
        </trans-unit>
        <trans-unit id="b22eafe66ff9363c232181834545b3e27fc24dda" translate="yes" xml:space="preserve">
          <source>Enable debugging of start-point optimisations.</source>
          <target state="translated">Включить отладку оптимизаций в начальной точке.</target>
        </trans-unit>
        <trans-unit id="b1ed4094a3f33fb70b77d3ab5d3985c70cad2408" translate="yes" xml:space="preserve">
          <source>Enable debugging of states in the engine.</source>
          <target state="translated">Включите отладку состояний в двигателе.</target>
        </trans-unit>
        <trans-unit id="6cc2f783a9f51a88860f66f38bb6654412ccd3b7" translate="yes" xml:space="preserve">
          <source>Enable debugging of the \G modifier.</source>
          <target state="translated">Включить отладку модификатора \G.</target>
        </trans-unit>
        <trans-unit id="8b1fc985774fbcf866da54c3c69b513cb35f440c" translate="yes" xml:space="preserve">
          <source>Enable debugging of the recursion stack in the engine. Enabling or disabling this option automatically does the same for debugging states as well. This output from this can be quite large.</source>
          <target state="translated">Включите отладку рекурсивного стека в двигателе.Включение или выключение этой опции автоматически делает то же самое и для отладочных состояний.Этот вывод может быть довольно большим.</target>
        </trans-unit>
        <trans-unit id="ed7bfb6f5b63e62332ddfc6bbbaf1f7a2a0d576b" translate="yes" xml:space="preserve">
          <source>Enable debugging output.</source>
          <target state="translated">Включите вывод отладки.</target>
        </trans-unit>
        <trans-unit id="139048524bc56f6e0f7692e0183c038f5bfd94d8" translate="yes" xml:space="preserve">
          <source>Enable debugging the capture group storage during match. Warning, this can potentially produce extremely large output.</source>
          <target state="translated">Включите отладку хранилища групп захвата во время матча.Предупреждение,это потенциально может привести к чрезвычайно большому объему вывода.</target>
        </trans-unit>
        <trans-unit id="d009cb1e8dd02879690564369c53161c26ba761e" translate="yes" xml:space="preserve">
          <source>Enable enhanced TRIE debugging. Enhances both TRIEE and TRIEC.</source>
          <target state="translated">Включите расширенную отладку TRIE.Улучшает как ТРИЕЕ,так и ТРИЕК.</target>
        </trans-unit>
        <trans-unit id="ef5eb4e7b2447bf19044b39ea2e195cd6618fd76" translate="yes" xml:space="preserve">
          <source>Enable enhanced optimisation debugging and start-point optimisations. Probably not useful except when debugging the regexp engine itself.</source>
          <target state="translated">Включает усовершенствованную отладку оптимизации и оптимизацию в начальной точке.Вероятно,не будет полезным,кроме как при отладке самого регенератора.</target>
        </trans-unit>
        <trans-unit id="07e248f2e2b8869e02ee4bbd9a3b445fa1e02104" translate="yes" xml:space="preserve">
          <source>Enable new features</source>
          <target state="translated">Включение новых функций</target>
        </trans-unit>
        <trans-unit id="82441ac52d9ab4a30896d0bdffedf2a9be220d10" translate="yes" xml:space="preserve">
          <source>Enable recognition of &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations. Default is true.</source>
          <target state="translated">Включите распознавание объявлений &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; и &lt;code&gt;INOUT_LIST&lt;/code&gt; . По умолчанию верно.</target>
        </trans-unit>
        <trans-unit id="a04f3ebaeb9867e3812b1e018ab387d5924f7ef6" translate="yes" xml:space="preserve">
          <source>Enable recognition of ANSI-like descriptions of function signature. Default is true.</source>
          <target state="translated">Включение распознавания ANSI-подобных описаний сигнатуры функции.По умолчанию верно.</target>
        </trans-unit>
        <trans-unit id="8fa85b7034e330ca755a5c73c63b76397e087c71" translate="yes" xml:space="preserve">
          <source>Enable simple signal handling</source>
          <target state="translated">Простая обработка сигналов</target>
        </trans-unit>
        <trans-unit id="3c3a9e686f47a71d2d2bd49c91054de061662284" translate="yes" xml:space="preserve">
          <source>Enable the breakpoint so it will stop the execution of the program.</source>
          <target state="translated">Включите точку останова,чтобы она остановила выполнение программы.</target>
        </trans-unit>
        <trans-unit id="dcd4f88c7522d41d4cd111539c1b1db699d331e1" translate="yes" xml:space="preserve">
          <source>Enable the options enabled by &quot;All&quot;, plus STATE, TRIEC, and TRIEM.</source>
          <target state="translated">Включите опции,включенные в &quot;Все&quot;,плюс STATE,TRIEC и TRIEM.</target>
        </trans-unit>
        <trans-unit id="6607ef3ad5faa3d582896ad07ab9785dae90ca8e" translate="yes" xml:space="preserve">
          <source>Enable this option if you wish all spawned processes to be killed if the initially spawned process (the parent) is killed or dies without waiting for child processes.</source>
          <target state="translated">Включите эту опцию,если хотите,чтобы все порожденные процессы были убиты,если изначально порожденный процесс (родительский)был убит или умирает,не дожидаясь дочерних процессов.</target>
        </trans-unit>
        <trans-unit id="b7b7c90b9b4e4815dd4d9b7ad285d70eda8ebb7d" translate="yes" xml:space="preserve">
          <source>Enable/disable UTF-8 (or UTF-EBCDIC) in source code</source>
          <target state="translated">Включение/выключение UTF-8 (или UTF-EBCDIC)в исходном коде</target>
        </trans-unit>
        <trans-unit id="80acee2f67ff4da70c6002b5a0e094b4d2f31c43" translate="yes" xml:space="preserve">
          <source>Enables all warnings regardless of &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt; . See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Включает все предупреждения , независимо от &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; или &lt;code&gt;$^W&lt;/code&gt; . См. &lt;a href=&quot;warnings&quot;&gt;Предупреждения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1089d1ea88536805f57559da91fba3d7a2761ecb" translate="yes" xml:space="preserve">
          <source>Enables certain optimizations. The only optimization that is currently affected is the use of</source>
          <target state="translated">Обеспечивает определенные оптимизации.Единственная оптимизация,на которую в настоящее время оказывается влияние-это использование</target>
        </trans-unit>
        <trans-unit id="c2846984fdcc8df09665bcc109bb5474af315f7d" translate="yes" xml:space="preserve">
          <source>Enables or disable debugging by setting the &lt;code&gt;$Benchmark::Debug&lt;/code&gt; flag:</source>
          <target state="translated">Включает или отключает отладку, устанавливая флаг &lt;code&gt;$Benchmark::Debug&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9d480a633ce9bb7aa941c3d98a4cbb4d5ac2bf6a" translate="yes" xml:space="preserve">
          <source>Enables output related to the optimisation phase of compilation.</source>
          <target state="translated">Позволяет выводить данные,связанные с фазой оптимизации компиляции.</target>
        </trans-unit>
        <trans-unit id="e55c00ee236233e66b2d47bad2c1ced81c03c99b" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;bundling_values&lt;/code&gt; will disable the other two styles of bundling.</source>
          <target state="translated">Включение &lt;code&gt;bundling_values&lt;/code&gt; отключит два других стиля объединения.</target>
        </trans-unit>
        <trans-unit id="b18f32d5490f57e3f4e0f875c588a069b00f5590" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;code&gt;utf8&lt;/code&gt; pragma has the following effect:</source>
          <target state="translated">Включение &lt;code&gt;utf8&lt;/code&gt; дает следующий эффект:</target>
        </trans-unit>
        <trans-unit id="7fe2071dd005ed63dfae111e383f15806253aa16" translate="yes" xml:space="preserve">
          <source>Enabling this option will allow single-character options to be bundled. To distinguish bundles from long option names, long options</source>
          <target state="translated">Включение этой опции позволит объединять опции с одним символом.Чтобы отличить наборы от длинных имен опций,длинные опции</target>
        </trans-unit>
        <trans-unit id="867d7c3018e88764391a8a8cad25d71d6020f155" translate="yes" xml:space="preserve">
          <source>Encapsulation</source>
          <target state="translated">Encapsulation</target>
        </trans-unit>
        <trans-unit id="2059232562a427f990749c23a8c8ebdde1b9014d" translate="yes" xml:space="preserve">
          <source>Encapsulation is important for several reasons. First, it allows you to separate the public API from the private implementation. This means you can change that implementation without breaking the API.</source>
          <target state="translated">Инкапсуляция важна по нескольким причинам.Во-первых,она позволяет отделить публичный API от частной реализации.Это означает,что вы можете изменить эту реализацию,не нарушая API.</target>
        </trans-unit>
        <trans-unit id="782e817cf07d938d62f7f0517e130f19ec6b4cf1" translate="yes" xml:space="preserve">
          <source>Encode</source>
          <target state="translated">Encode</target>
        </trans-unit>
        <trans-unit id="e276943b90499b3ae3cf8000afe6554906eb7f6a" translate="yes" xml:space="preserve">
          <source>Encode - character encodings in Perl</source>
          <target state="translated">Код-кодировка символов в Perl</target>
        </trans-unit>
        <trans-unit id="3c5a64c26d9e551da565d681ba9a9c2bc735a49c" translate="yes" xml:space="preserve">
          <source>Encode Implementation Base Class</source>
          <target state="translated">Базовый класс реализации кодирования</target>
        </trans-unit>
        <trans-unit id="39e91613c24a80edc94f024f6bfb3382d7e896d8" translate="yes" xml:space="preserve">
          <source>Encode a scalar, hash reference or array reference as YAML.</source>
          <target state="translated">Кодируйте скаляр,ссылку на хэш или массив как YAML.</target>
        </trans-unit>
        <trans-unit id="53b3896738d8cf6b15e5278f1369de611febee2e" translate="yes" xml:space="preserve">
          <source>Encode and decode according to the base64 scheme for &quot;URL applications&quot; [1]. This is a variant of the base64 encoding which does not use padding, does not break the string into multiple lines and use the characters &quot;-&quot; and &quot;_&quot; instead of &quot;+&quot; and &quot;/&quot; to avoid using reserved URL characters.</source>
          <target state="translated">Кодирование и декодирование по схеме base64 для &quot;URL-приложений&quot; [1].Это вариант кодировки base64,который не использует подстановку,не разбивает строку на несколько строк и использует символы &quot;-&quot; и &quot;_&quot; вместо &quot;+&quot; и &quot;/&quot;,чтобы избежать использования зарезервированных символов URL.</target>
        </trans-unit>
        <trans-unit id="3d01d8346257820c445f334ba81d16daa9f20915" translate="yes" xml:space="preserve">
          <source>Encode consists of a collection of modules whose details are too extensive to fit in one document. This one itself explains the top-level APIs and general topics at a glance. For other topics and more details, see the documentation for these modules:</source>
          <target state="translated">Код состоит из коллекции модулей,подробности которых слишком обширны,чтобы поместиться в один документ.Этот документ сам по себе объясняет API верхнего уровня и общие темы с первого взгляда.Остальные темы и более подробную информацию см.в документации к этим модулям:</target>
        </trans-unit>
        <trans-unit id="5888dafc03b9c4595a9ef704f5d312540bc3c184" translate="yes" xml:space="preserve">
          <source>Encode data by calling the encode_base64() function. The first argument is the byte string to encode. The second argument is the line-ending sequence to use. It is optional and defaults to &quot;\n&quot;. The returned encoded string is broken into lines of no more than 76 characters each and it will end with $eol unless it is empty. Pass an empty string as second argument if you do not want the encoded string to be broken into lines.</source>
          <target state="translated">Кодируйте данные вызовом функции encode_base64().Первый аргумент-строка байт для кодирования.Второй аргумент-конечная строковая последовательность,которую необходимо использовать.Он необязателен и по умолчанию равен &quot;\n&quot;.Возвращаемая закодированная строка разбивается на строки не более 76 символов каждая и заканчивается на $eol,если только она не пуста.Передайте пустую строку в качестве второго аргумента,если вы не хотите,чтобы кодированная строка разбивалась на строки.</target>
        </trans-unit>
        <trans-unit id="ceff1e1e1923f02a7939b507f33300e3a696eaa2" translate="yes" xml:space="preserve">
          <source>Encode up to 1.86 internally used &quot;local $_&quot; to implement this older form. But consider the code below;</source>
          <target state="translated">Кодируйте до 1.86 во внутреннем использовании &quot;local $_&quot; для реализации этой старой формы.Но обратите внимание на код,приведенный ниже;</target>
        </trans-unit>
        <trans-unit id="dec95d5717280ac4e0be7dcb9e6fc7bc4a47ecee" translate="yes" xml:space="preserve">
          <source>Encode uses the Unicode Character Map (UCM) format for source character mappings. This format is used by IBM's ICU package and was adopted by Nick Ing-Simmons for use with the Encode module. Since UCM is more flexible than Tcl's Encoding Map and far more user-friendly, this is the recommended format for Encode now.</source>
          <target state="translated">Кодировка использует формат Unicode Character Map (UCM)для сопоставления исходных символов.Этот формат используется в IBM ICU пакете и был принят Ником Ing-Simmons для использования с модулем Encode.Так как UCM более гибкий,чем Tcl's Encoding Map и гораздо более удобный для пользователя,сейчас это рекомендуемый формат для Encode.</target>
        </trans-unit>
        <trans-unit id="5d2cad9401edfbef92e75be01cb40c4e9ecc4cf6" translate="yes" xml:space="preserve">
          <source>Encode::Alias</source>
          <target state="translated">Encode::Alias</target>
        </trans-unit>
        <trans-unit id="552324ae1eb023be362415291b1291f3f52556a7" translate="yes" xml:space="preserve">
          <source>Encode::Alias - alias definitions to encodings</source>
          <target state="translated">Кодировка::Псевдоним-определение псевдонима к кодировке</target>
        </trans-unit>
        <trans-unit id="cc91ef6d8b4186209599d785324e380db05af545" translate="yes" xml:space="preserve">
          <source>Encode::Byte</source>
          <target state="translated">Encode::Byte</target>
        </trans-unit>
        <trans-unit id="d4b97f8bcca673137fe3a8c4311fa29b1376a129" translate="yes" xml:space="preserve">
          <source>Encode::Byte - Single Byte Encodings</source>
          <target state="translated">Кодировка::Байт-Однобайтовое кодирование</target>
        </trans-unit>
        <trans-unit id="8da29f26c3e55351d546a404e8b09b53f82affc8" translate="yes" xml:space="preserve">
          <source>Encode::CJKConstants</source>
          <target state="translated">Encode::CJKConstants</target>
        </trans-unit>
        <trans-unit id="97376755cadc9b08ac2bdcffa80b5c4759e6f7df" translate="yes" xml:space="preserve">
          <source>Encode::CJKConstants.pm -- Internally used by Encode::??::ISO_2022_*</source>
          <target state="translated">Кодировка::CJKConstants.pm --Внутренне используется Кодировка::??::ISO_2022_*</target>
        </trans-unit>
        <trans-unit id="44fea5bddc6721fb4b956554b9d88900826d60c7" translate="yes" xml:space="preserve">
          <source>Encode::CN</source>
          <target state="translated">Encode::CN</target>
        </trans-unit>
        <trans-unit id="40f3392265131b672490757c292c084a525d4184" translate="yes" xml:space="preserve">
          <source>Encode::CN - China-based Chinese Encodings</source>
          <target state="translated">Кодировка::CN-Китайские кодировки</target>
        </trans-unit>
        <trans-unit id="207660f321fc12762f2e79b28e35fbb26736a3e7" translate="yes" xml:space="preserve">
          <source>Encode::CN::HZ</source>
          <target state="translated">Encode::CN::HZ</target>
        </trans-unit>
        <trans-unit id="622d7b0a21ca0c1a08d6dda20da0057e0358570c" translate="yes" xml:space="preserve">
          <source>Encode::CN::HZ -- internally used by Encode::CN</source>
          <target state="translated">Кодировка::CN::HZ --внутренне используется Кодировка::CN</target>
        </trans-unit>
        <trans-unit id="b24bb381f68ba02b49c4c2cd2767f183910da09e" translate="yes" xml:space="preserve">
          <source>Encode::Config</source>
          <target state="translated">Encode::Config</target>
        </trans-unit>
        <trans-unit id="0b7c024127a98fc8be2586eade5f76bc22701aab" translate="yes" xml:space="preserve">
          <source>Encode::Config -- internally used by Encode</source>
          <target state="translated">Кодировка::Настройка --внутренне используется Кодировкой</target>
        </trans-unit>
        <trans-unit id="2a8ba6ae9bd0735a827d283930aa3dc28cd2cae3" translate="yes" xml:space="preserve">
          <source>Encode::EBCDIC</source>
          <target state="translated">Encode::EBCDIC</target>
        </trans-unit>
        <trans-unit id="3b31a7154f7c03e9be274aacce1e4dc5a66d5ec6" translate="yes" xml:space="preserve">
          <source>Encode::EBCDIC - EBCDIC Encodings</source>
          <target state="translated">Кодировка::EBCDIC-EBCDIC Кодировки</target>
        </trans-unit>
        <trans-unit id="a0fb1479e2e68a75a05e36aff16d787758a1778e" translate="yes" xml:space="preserve">
          <source>Encode::Encoder</source>
          <target state="translated">Encode::Encoder</target>
        </trans-unit>
        <trans-unit id="3bfd37620385e094ff5d1811f8a5aaf8e5a7a125" translate="yes" xml:space="preserve">
          <source>Encode::Encoder -- Object Oriented Encoder</source>
          <target state="translated">Кодировка::Кодировщик --Объектно-ориентированный кодировщик</target>
        </trans-unit>
        <trans-unit id="4551a7e4c9181d379ae1288237c1ebecccd59bb8" translate="yes" xml:space="preserve">
          <source>Encode::Encoding</source>
          <target state="translated">Encode::Encoding</target>
        </trans-unit>
        <trans-unit id="932dfcdaef25e880e85283d712d29f239746970b" translate="yes" xml:space="preserve">
          <source>Encode::Encoding - Encode Implementation Base Class</source>
          <target state="translated">Кодирование::Кодирование-Базовый класс реализации кодирования</target>
        </trans-unit>
        <trans-unit id="77662ad703615bf25ca69905bb6db23d72296bb9" translate="yes" xml:space="preserve">
          <source>Encode::GSM0338</source>
          <target state="translated">Encode::GSM0338</target>
        </trans-unit>
        <trans-unit id="ede01420f58b4c2565b3da82244d84c95da5b4af" translate="yes" xml:space="preserve">
          <source>Encode::GSM0338 -- ESTI GSM 03.38 Encoding</source>
          <target state="translated">Кодирование::GSM0338 --ESTI GSM 03.38 Кодирование</target>
        </trans-unit>
        <trans-unit id="e93ed447e10d95864f0386c026ec121cd47c60ab" translate="yes" xml:space="preserve">
          <source>Encode::Guess</source>
          <target state="translated">Encode::Guess</target>
        </trans-unit>
        <trans-unit id="8b1b151431a67a55222cbbcf0270cd834cbd2d46" translate="yes" xml:space="preserve">
          <source>Encode::Guess -- Guesses encoding from data</source>
          <target state="translated">Кодировка::Угадай --Угадай кодировку из данных.</target>
        </trans-unit>
        <trans-unit id="f460e270f104cac10b54ab28764ae1739d32a63f" translate="yes" xml:space="preserve">
          <source>Encode::Guess does not work on EBCDIC platforms.</source>
          <target state="translated">Кодировка::Думаю,не работает на платформах EBCDIC.</target>
        </trans-unit>
        <trans-unit id="8030a57667933f97cc9c39195dbf244e622a18a0" translate="yes" xml:space="preserve">
          <source>Encode::Guess enables you to guess in what encoding a given data is encoded, or at least tries to.</source>
          <target state="translated">Кодировка::Угадать позволяет угадать,в какой кодировке закодированы данные,или,по крайней мере,попытаться.</target>
        </trans-unit>
        <trans-unit id="e37ee0e2e550bc3634d116c838f3ba94375b8c47" translate="yes" xml:space="preserve">
          <source>Encode::JP</source>
          <target state="translated">Encode::JP</target>
        </trans-unit>
        <trans-unit id="341afac777ffb0b1e52b3a6aa26c1fcd31687ea1" translate="yes" xml:space="preserve">
          <source>Encode::JP - Japanese Encodings</source>
          <target state="translated">Кодировка::JP-японская Кодировка</target>
        </trans-unit>
        <trans-unit id="1e6a27be2a727bdf7e4a113a80bef5ed7da8c32a" translate="yes" xml:space="preserve">
          <source>Encode::JP::H2Z</source>
          <target state="translated">Encode::JP::H2Z</target>
        </trans-unit>
        <trans-unit id="61c842d29f655e9a02cc88f2dfe176c79b0a7ccb" translate="yes" xml:space="preserve">
          <source>Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*</source>
          <target state="translated">Кодировка::JP::H2Z --внутренне используется Кодировка::JP::2022_JP*</target>
        </trans-unit>
        <trans-unit id="57d3b7cea6d80534a4eab96981ae8b12e91a572d" translate="yes" xml:space="preserve">
          <source>Encode::JP::JIS7</source>
          <target state="translated">Encode::JP::JIS7</target>
        </trans-unit>
        <trans-unit id="728d78512ef0e5fd10db6af9228f9f55491f142e" translate="yes" xml:space="preserve">
          <source>Encode::JP::JIS7 -- internally used by Encode::JP</source>
          <target state="translated">Кодировка::JP::JIS7 --внутренне используется Кодировка::JP</target>
        </trans-unit>
        <trans-unit id="9292d6d6d6c3d612ab88b4d0a9b44cce420ff5ea" translate="yes" xml:space="preserve">
          <source>Encode::KR</source>
          <target state="translated">Encode::KR</target>
        </trans-unit>
        <trans-unit id="32eef4f01d06c098fb548d1006c901f52a812e7e" translate="yes" xml:space="preserve">
          <source>Encode::KR - Korean Encodings</source>
          <target state="translated">Кодировка::KR-корейская Кодировка</target>
        </trans-unit>
        <trans-unit id="adea371ce7b9ff3c3566f35ac1420ac2e2ede009" translate="yes" xml:space="preserve">
          <source>Encode::KR::2022_KR</source>
          <target state="translated">Encode::KR::2022_KR</target>
        </trans-unit>
        <trans-unit id="3976fa623737771006bbaafdf23430529728651d" translate="yes" xml:space="preserve">
          <source>Encode::KR::2022_KR -- internally used by Encode::KR</source>
          <target state="translated">Кодировка::KR::2022_KR --внутренне используется Кодировка::KR</target>
        </trans-unit>
        <trans-unit id="e9d431857fb2daca858cf0e24708414e6076d14b" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Header</source>
          <target state="translated">Encode::MIME::Header</target>
        </trans-unit>
        <trans-unit id="f2030bc40a6a13ab85bce58de044a451e0f2022a" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Header -- MIME 'B' and 'Q' header encoding</source>
          <target state="translated">Кодировка::MIME::Заголовок --MIME 'B' и 'Q' кодировка заголовков</target>
        </trans-unit>
        <trans-unit id="660e24530b4b214dbcf404910cce6c40e5661246" translate="yes" xml:space="preserve">
          <source>Encode::MIME::NAME -- internally used by Encode</source>
          <target state="translated">Кодировка::MIME::ИМЯ --внутренне используемое кодирование</target>
        </trans-unit>
        <trans-unit id="5f4e8291cc2cc181fac6cfb29c5aaebe19ffe8d7" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Name</source>
          <target state="translated">Encode::MIME::Name</target>
        </trans-unit>
        <trans-unit id="617dc5e07f69ab0016776f02fcae4aa5417d4cf3" translate="yes" xml:space="preserve">
          <source>Encode::Symbol</source>
          <target state="translated">Encode::Symbol</target>
        </trans-unit>
        <trans-unit id="305d6a4ecfbcb83575125920205199ebfad9ecbc" translate="yes" xml:space="preserve">
          <source>Encode::Symbol - Symbol Encodings</source>
          <target state="translated">Кодировка::Символ-Символ Кодировка</target>
        </trans-unit>
        <trans-unit id="7353083e24fd78826faff9ec9dd3ca1f0abfeb68" translate="yes" xml:space="preserve">
          <source>Encode::TW</source>
          <target state="translated">Encode::TW</target>
        </trans-unit>
        <trans-unit id="169a69c17f2e47c33a2090f250bc6f54465bac9c" translate="yes" xml:space="preserve">
          <source>Encode::TW - Taiwan-based Chinese Encodings</source>
          <target state="translated">Кодировка::TW-Тайваньские китайские кодировки</target>
        </trans-unit>
        <trans-unit id="f419db0e193bdb95ad1bf1d32e4308acad0add9f" translate="yes" xml:space="preserve">
          <source>Encode::Unicode</source>
          <target state="translated">Encode::Unicode</target>
        </trans-unit>
        <trans-unit id="2ba2c8325c871771b84294002113cdbbccea72d4" translate="yes" xml:space="preserve">
          <source>Encode::Unicode -- Various Unicode Transformation Formats</source>
          <target state="translated">Кодировка::Юникод --Различные форматы преобразования Юникода</target>
        </trans-unit>
        <trans-unit id="24e91aa87151df83dcd6a084acf2bef4fbe28cca" translate="yes" xml:space="preserve">
          <source>Encode::Unicode::UTF7</source>
          <target state="translated">Encode::Unicode::UTF7</target>
        </trans-unit>
        <trans-unit id="46189c892fa791248c9e1697ba2bd11d7d60c2a5" translate="yes" xml:space="preserve">
          <source>Encode::Unicode::UTF7 -- UTF-7 encoding</source>
          <target state="translated">Кодировка::Юникод::UTF7 --кодировка UTF-7</target>
        </trans-unit>
        <trans-unit id="0ca2ce49b12c2ee816a410523ba091dc693a60d6" translate="yes" xml:space="preserve">
          <source>Encodes a scalar, hash reference or array reference as YAMLish.</source>
          <target state="translated">Кодирует скаляр,ссылку на хэш или массив как YAMLish.</target>
        </trans-unit>
        <trans-unit id="f4c840f47e19e39ed11ebf36e763d836813b7799" translate="yes" xml:space="preserve">
          <source>Encodes the scalar value</source>
          <target state="translated">Кодирует скалярное значение</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="e649a0b553388aa0aefbd82d8b0f0d1a27873465" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of base64 strings</source>
          <target state="translated">Кодирование и декодирование строк base64</target>
        </trans-unit>
        <trans-unit id="6b77915998634f10773a65ebf127633caa0903b3" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of quoted-printable strings</source>
          <target state="translated">Кодирование и декодирование строк для печати в кавычках</target>
        </trans-unit>
        <trans-unit id="a998510992fa4d69263beacea1ddcc7415077441" translate="yes" xml:space="preserve">
          <source>Encoding handling assumes that PerlIO is available and does not work properly if it isn't. The &lt;code&gt;utf8&lt;/code&gt; option is therefore not supported unless Perl is built with PerlIO support.</source>
          <target state="translated">Обработка кодирования предполагает, что PerlIO доступен, и в противном случае не работает должным образом. Поэтому опция &lt;code&gt;utf8&lt;/code&gt; не поддерживается, если Perl не построен с поддержкой PerlIO.</target>
        </trans-unit>
        <trans-unit id="04cfa3e7800a4d240dc7f677c9407b294c248bcf" translate="yes" xml:space="preserve">
          <source>Encoding layer</source>
          <target state="translated">Слой кодирования</target>
        </trans-unit>
        <trans-unit id="01cbaf646f7cdfb7eb0fbb21f815c71c722e02c1" translate="yes" xml:space="preserve">
          <source>Encoding via PerlIO</source>
          <target state="translated">Кодирование через PerlIO</target>
        </trans-unit>
        <trans-unit id="bcc5b05d5a707cb27dff01159bcf1a3ca6a46e7c" translate="yes" xml:space="preserve">
          <source>Encodings supported by Encode</source>
          <target state="translated">Поддерживаемые кодировки</target>
        </trans-unit>
        <trans-unit id="2c4ae224ac38c50705eb255694dceb50337fe4c9" translate="yes" xml:space="preserve">
          <source>End of File. Sometimes used metaphorically as the terminating string of a &lt;b&gt;here document&lt;/b&gt;.</source>
          <target state="translated">Конец файла. Иногда используется метафорически как завершающая строка &lt;b&gt;документа здесь&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e61fae84390da1a34c4b2fbd657622d5073292c7" translate="yes" xml:space="preserve">
          <source>End of file.</source>
          <target state="translated">Конец файла.</target>
        </trans-unit>
        <trans-unit id="d1e4562e3c175d8468bb1a01a7952bd0d3b259e1" translate="yes" xml:space="preserve">
          <source>End the sending of data to the remote server. This is done by ensuring that the data already sent ends with CRLF then sending '.CRLF' to end the transmission. Once this data has been sent &lt;code&gt;dataend&lt;/code&gt; calls &lt;code&gt;response&lt;/code&gt; and returns true if &lt;code&gt;response&lt;/code&gt; returns CMD_OK.</source>
          <target state="translated">Завершите отправку данных на удаленный сервер. Это достигается путем обеспечения того, чтобы уже отправленные данные заканчивались CRLF, а затем отправляли .CRLF для завершения передачи. После того, как эти данные были отправлены, &lt;code&gt;dataend&lt;/code&gt; вызывает &lt;code&gt;response&lt;/code&gt; и возвращает истину, если &lt;code&gt;response&lt;/code&gt; возвращает CMD_OK.</target>
        </trans-unit>
        <trans-unit id="5b395d065aa5966c6da16e4b8c501ca68c3ecd37" translate="yes" xml:space="preserve">
          <source>End-tokens from Pod::Simple::PullParser</source>
          <target state="translated">Концевые пальцы от Pod::Простые::PullParser</target>
        </trans-unit>
        <trans-unit id="8676dbbd19637e0c1604c4bcd69f9208a03cfa1a" translate="yes" xml:space="preserve">
          <source>End.U</source>
          <target state="translated">End.U</target>
        </trans-unit>
        <trans-unit id="f4d04612cae76dda50e81f179859b4b712ba14ff" translate="yes" xml:space="preserve">
          <source>Ends a try block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">Завершает блок попытки. См. Раздел &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Обработка исключений в perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ea2083617805ed93273c46ed0c4792fa3da7a0b" translate="yes" xml:space="preserve">
          <source>Enforce type integrity if required</source>
          <target state="translated">При необходимости обеспечить целостность типов</target>
        </trans-unit>
        <trans-unit id="286ca1647ce3f25ee107c4a9d50837ecd6b2a964" translate="yes" xml:space="preserve">
          <source>Enforcing redispatch</source>
          <target state="translated">Усиление повторных записей</target>
        </trans-unit>
        <trans-unit id="649df08a448ee3fa90f3746baaf6b0907df42c91" translate="yes" xml:space="preserve">
          <source>English</source>
          <target state="translated">English</target>
        </trans-unit>
        <trans-unit id="256aa1d5dab6cf2100434b619aada1a930ae7c7d" translate="yes" xml:space="preserve">
          <source>English ('en') is</source>
          <target state="translated">Английский ('en')</target>
        </trans-unit>
        <trans-unit id="7aa949020d6b22aac250e3885290aa830dd72a15" translate="yes" xml:space="preserve">
          <source>English - use nice English (or awk) names for ugly punctuation variables</source>
          <target state="translated">English-используйте красивые английские (или awk)имена для уродливых знаков препинания.</target>
        </trans-unit>
        <trans-unit id="34afa6db1cf569bd02a3ffe4f7e6036f1798a631" translate="yes" xml:space="preserve">
          <source>English.pm</source>
          <target state="translated">English.pm</target>
        </trans-unit>
        <trans-unit id="99343727bceed607c32f483621540aee48471580" translate="yes" xml:space="preserve">
          <source>Enough of the definition talk! Let's have a few examples.</source>
          <target state="translated">Хватит разговоров об определении! Давайте приведем несколько примеров.</target>
        </trans-unit>
        <trans-unit id="8988a13726c59d935ea79d755d1455be0fc83772" translate="yes" xml:space="preserve">
          <source>Ensure that you know what \b really does: it's the boundary between a word character, \w, and something that isn't a word character. That thing that isn't a word character might be \W, but it can also be the start or end of the string.</source>
          <target state="translated">Убедитесь,что вы знаете,что на самом деле делает \b:это граница между символом слова,\w,и чем-то,что не является символом слова.То,что не является символом слова,может быть \W,но также может быть началом или концом строки.</target>
        </trans-unit>
        <trans-unit id="21287dbbbfc03a6ee27ae105b87e32fa291261eb" translate="yes" xml:space="preserve">
          <source>Ensure your module works under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;-w&lt;/code&gt;</source>
          <target state="translated">Убедитесь, что ваш модуль работает под &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;использованием&lt;/a&gt; и &lt;code&gt;-w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1279af9b58018ff33488efc0656bb62fda8db44f" translate="yes" xml:space="preserve">
          <source>Enter interactive mode by running</source>
          <target state="translated">Войдите в интерактивный режим,запустив</target>
        </trans-unit>
        <trans-unit id="74eb99da3b9ba3df5f4be61ae4522068a9b27d10" translate="yes" xml:space="preserve">
          <source>Entire arrays (and slices of arrays and hashes) are denoted by '@', which works much as the word &quot;these&quot; or &quot;those&quot; does in English, in that it indicates multiple values are expected.</source>
          <target state="translated">Целые массивы (и ломтики массивов и хэшей)обозначаются словом &quot;@&quot;,которое работает так же,как и слово &quot;эти&quot; или &quot;те&quot; в английском языке,в том смысле,что оно указывает на то,что ожидается несколько значений.</target>
        </trans-unit>
        <trans-unit id="d245bbc8252b0b71ede0a2f949fc5b29d829fd5d" translate="yes" xml:space="preserve">
          <source>Entire hashes are denoted by '%':</source>
          <target state="translated">Целые хэши обозначаются знаком &quot;%&quot;:</target>
        </trans-unit>
        <trans-unit id="4f918189cf78ab84f6519ba2dcb57f2ae316f72b" translate="yes" xml:space="preserve">
          <source>Entries cannot be plain object files, as many Win32 compilers will not handle object files in the place of libraries.</source>
          <target state="translated">Записи не могут быть обычными объектными файлами,так как многие Win32 компиляторы не будут работать с объектными файлами вместо библиотек.</target>
        </trans-unit>
        <trans-unit id="673fba8e1fb3916663891e031f77ca1343408944" translate="yes" xml:space="preserve">
          <source>Entries in &lt;code&gt;$potential_libs&lt;/code&gt; beginning with a colon and followed by alphanumeric characters are treated as flags. Unknown flags will be ignored.</source>
          <target state="translated">Записи в &lt;code&gt;$potential_libs&lt;/code&gt; начинающиеся с двоеточия и за которыми следуют буквенно-цифровые символы, рассматриваются как флаги. Неизвестные флаги будут проигнорированы.</target>
        </trans-unit>
        <trans-unit id="a95d99085680ef5c64c2fe5754604ba2f596d896" translate="yes" xml:space="preserve">
          <source>Entries such as:</source>
          <target state="translated">Такие записи,как..:</target>
        </trans-unit>
        <trans-unit id="8d07f7a288d3779719c1509961105704b61f4cef" translate="yes" xml:space="preserve">
          <source>Entry in the INPUT section of a typemap</source>
          <target state="translated">Вход в секцию INPUT типовой карты</target>
        </trans-unit>
        <trans-unit id="237fc607826e845da2eb03390fed5a45c866b715" translate="yes" xml:space="preserve">
          <source>Entry in the OUTPUT section of a typemap</source>
          <target state="translated">Введите в раздел OUTPUT типовой карты</target>
        </trans-unit>
        <trans-unit id="81a846de6d38920893fe50bf678fb10abc3847e2" translate="yes" xml:space="preserve">
          <source>Entry in the TYPEMAP section of a typemap</source>
          <target state="translated">Вход в раздел TYPEMAP типовой карты</target>
        </trans-unit>
        <trans-unit id="a2562690818adae41c773c584b6f6c09ebb4d39c" translate="yes" xml:space="preserve">
          <source>Env</source>
          <target state="translated">Env</target>
        </trans-unit>
        <trans-unit id="fbbe5fa808eea7f4c74b5ba16db47dab460bc3b9" translate="yes" xml:space="preserve">
          <source>Env - perl module that imports environment variables as scalars or arrays</source>
          <target state="translated">Env-perl модуль,который импортирует переменные окружения в виде скаляров или массивов.</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">Переменные среды</target>
        </trans-unit>
        <trans-unit id="e19f8816c6f7ccbb7d40a44b81def1ffb731d4e0" translate="yes" xml:space="preserve">
          <source>Environment for Compiling perl on Solaris</source>
          <target state="translated">Окружающая среда для компиляции перла на Солярисе</target>
        </trans-unit>
        <trans-unit id="c7e160747cc9ac3da385ca9f9c1cb6f2e6810dff" translate="yes" xml:space="preserve">
          <source>Environment variables that the program cares about, normally presented as a list using &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; , and &lt;code&gt;=back&lt;/code&gt; . For example:</source>
          <target state="translated">Переменные среды, которые важны для программы, обычно представлены в виде списка с использованием &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; и &lt;code&gt;=back&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="59ed6121898e672a267f0f15674f039aebf49694" translate="yes" xml:space="preserve">
          <source>Environment variables to be set during the command</source>
          <target state="translated">Переменные окружения,которые должны быть установлены во время команды</target>
        </trans-unit>
        <trans-unit id="7264243f4aeaaab7fbb98bd7afd5e953b5900f7b" translate="yes" xml:space="preserve">
          <source>Equality Operators</source>
          <target state="translated">Равноправные операторы</target>
        </trans-unit>
        <trans-unit id="1cfd756767e68de5473421aba90c9077344def28" translate="yes" xml:space="preserve">
          <source>Equivalent examples:</source>
          <target state="translated">Эквивалентные примеры:</target>
        </trans-unit>
        <trans-unit id="c61e2265d123d76133484971263eb3576ac59dd9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$octets = encode(&quot;utf8&quot;, $string)&lt;/code&gt; . The characters in $string are encoded in Perl's internal format, and the result is returned as a sequence of octets. Because all possible characters in Perl have a (loose, not strict) UTF-8 representation, this function cannot fail.</source>
          <target state="translated">Эквивалентно &lt;code&gt;$octets = encode(&quot;utf8&quot;, $string)&lt;/code&gt; . Символы в $ string кодируются во внутреннем формате Perl, а результат возвращается как последовательность октетов. Поскольку все возможные символы в Perl имеют (свободное, не строгое) представление UTF-8, эта функция не может дать сбой.</target>
        </trans-unit>
        <trans-unit id="a263a53c5879a617814d231b90b810689cbeec78" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$string = decode(&quot;utf8&quot;, $octets [, CHECK])&lt;/code&gt; . The sequence of octets represented by $octets is decoded from UTF-8 into a sequence of logical characters. Because not all sequences of octets are valid UTF-8, it is quite possible for this function to fail. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Handling Malformed Data&lt;/a&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;$string = decode(&quot;utf8&quot;, $octets [, CHECK])&lt;/code&gt; . Последовательность октетов, представленная $ octets, декодируется из UTF-8 в последовательность логических символов. Поскольку не все последовательности октетов являются допустимыми UTF-8, эта функция вполне может выйти из строя. Для CHECK см. &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Обработка искаженных данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032e60eb7c99d19d4d7f40467e50e02c1b3b3e31" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;(x) - 1&lt;/code&gt; , but more precise for small argument values [C99].</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;(x) - 1&lt;/code&gt; , но более точен для малых значений аргумента [C99].</target>
        </trans-unit>
        <trans-unit id="48506d548803ae745c6c6681b3b6b358f76d6d1f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;(1 + x)&lt;/code&gt; , but more stable results for small argument values [C99].</source>
          <target state="translated">Эквивалентно &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;(1 + x)&lt;/code&gt; , но более стабильные результаты для малых значений аргумента [C99].</target>
        </trans-unit>
        <trans-unit id="22c30bad53a9801aa2549ef28438b22b8be2db3e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , except that &lt;code&gt;$\&lt;/code&gt; (the output record separator) is not appended. The FORMAT and the LIST are actually parsed as a single list. The first argument of the list will be interpreted as the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; format. This means that &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; will use &lt;code&gt;$_[0]&lt;/code&gt; as the format. See &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; for an explanation of the format argument. If &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale setting. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , за исключением того, что &lt;code&gt;$\&lt;/code&gt; (разделитель выходной записи) не добавляется. FORMAT и LIST фактически анализируются как один список. Первый аргумент списка будет интерпретирован как формат &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . Это означает, что &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; будет использовать &lt;code&gt;$_[0]&lt;/code&gt; в качестве формата. См. &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;Sprintf&lt;/a&gt; для объяснения аргумента формата. Если &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; для &lt;code&gt;LC_NUMERIC&lt;/code&gt; Искать этот сквозной модуль и был вызван POSIX :: setlocale (), на символ, используемый для десятичного разделителя в форматированных числах с плавающей запятой, влияет &lt;code&gt;LC_NUMERIC&lt;/code&gt; локали LC_NUMERIC . См. &lt;a href=&quot;perllocale&quot;&gt;Perllocale&lt;/a&gt; и &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="200de086c8cd5535e67b47001e5f819da8109f8f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;(x * x + y * y)&lt;/code&gt; except more stable on very large or very small arguments [C99].</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;(x * x + y * y)&lt;/code&gt; за исключением большей стабильности при очень больших или очень маленьких аргументах [C99].</target>
        </trans-unit>
        <trans-unit id="0f1d23c2683b2580eee5762a2646e2cfdbd51243" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , except that &lt;code&gt;$\&lt;/code&gt; (the output record separator) is not appended. The FORMAT and the LIST are actually parsed as a single list. The first argument of the list will be interpreted as the &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; format. This means that &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; will use &lt;code&gt;$_[0]&lt;/code&gt; as the format. See &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; for an explanation of the format argument. If &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale setting. See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt;.</source>
          <target state="translated">Эквивалентен &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , за исключением того, что &lt;code&gt;$\&lt;/code&gt; (разделитель выходной записи) не добавляется. FORMAT и LIST фактически анализируются как один список. Первый аргумент списка будет интерпретирован как формат &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . Это означает, что &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; будет использовать &lt;code&gt;$_[0]&lt;/code&gt; в качестве формата. См. &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;Sprintf&lt;/a&gt; для объяснения аргумента формата. Если &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; для &lt;code&gt;LC_NUMERIC&lt;/code&gt; Искать этот сквозной модуль и был вызван POSIX :: setlocale (), на символ, используемый для десятичного разделителя в форматированных числах с плавающей запятой, влияет &lt;code&gt;LC_NUMERIC&lt;/code&gt; локали LC_NUMERIC . См. &lt;a href=&quot;../perllocale&quot;&gt;Perllocale&lt;/a&gt; и &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d4e0dc744110e721ecf88197993cbcc2b45d001" translate="yes" xml:space="preserve">
          <source>Equivalent to Perl code &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $gv&lt;/code&gt; .</source>
          <target state="translated">Эквивалентно коду Perl &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $gv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="876fc7d247587a71d98917cb3c3453fd65fea359" translate="yes" xml:space="preserve">
          <source>Equivalent to running mktemp() with $dir/$prefixXXXXXXXX (using unix file convention as an example)</source>
          <target state="translated">Эквивалент запуску mktemp()с $dir/$prefixXXXXXX (на примере unix-файла).</target>
        </trans-unit>
        <trans-unit id="4dba35bcd4ac839e52783da10b5058566f3e3b91" translate="yes" xml:space="preserve">
          <source>Equivalent to specifying a DIR of &quot;File::Spec-&amp;gt;tmpdir&quot;, writing the file into the same temporary directory as would be used if no template was specified at all.</source>
          <target state="translated">Эквивалентно указанию DIR &quot;File :: Spec-&amp;gt; tmpdir&quot;, запись файла в тот же временный каталог, который использовался бы, если бы шаблон не был указан вообще.</target>
        </trans-unit>
        <trans-unit id="a667e4f94596d8444896d0c578ec8dad154ae9ae" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;b&gt;-C&lt;/b&gt; command-line switch. Note that this is not a boolean variable. Setting this to &lt;code&gt;&quot;1&quot;&lt;/code&gt; is not the right way to &quot;enable Unicode&quot; (whatever that would mean). You can use &lt;code&gt;&quot;0&quot;&lt;/code&gt; to &quot;disable Unicode&quot;, though (or alternatively unset PERL_UNICODE in your shell before starting Perl). See the description of the &lt;b&gt;-C&lt;/b&gt; switch for more information.</source>
          <target state="translated">Эквивалентен переключателю командной строки &lt;b&gt;-C&lt;/b&gt; . Обратите внимание, что это не логическая переменная. Установка этого параметра на &lt;code&gt;&quot;1&quot;&lt;/code&gt; - неправильный способ &amp;laquo;включить Unicode&amp;raquo; (что бы это ни значило). Вы можете использовать &lt;code&gt;&quot;0&quot;&lt;/code&gt; чтобы &amp;laquo;отключить Unicode&amp;raquo; (или, альтернативно, сбросить PERL_UNICODE в вашей оболочке перед запуском Perl). См. Описание переключателя &lt;b&gt;-C&lt;/b&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">Эквивалентно:</target>
        </trans-unit>
        <trans-unit id="7cc25c4fa96172ec73030c6c0f3dc9c51687c491" translate="yes" xml:space="preserve">
          <source>Equivalents of</source>
          <target state="translated">Эквиваленты</target>
        </trans-unit>
        <trans-unit id="0256add701298dc7a17e42cc9eb936d630438581" translate="yes" xml:space="preserve">
          <source>Erases one character. Defined by</source>
          <target state="translated">Стирает один персонаж.Определяется</target>
        </trans-unit>
        <trans-unit id="7c24401b7c6f89af67334e697241400ad5298e5f" translate="yes" xml:space="preserve">
          <source>Erases the current input. Defined by</source>
          <target state="translated">Стирает текущий вход.Определяется</target>
        </trans-unit>
        <trans-unit id="a3053d2e8a81cd1d9716eddc9ced731b4c51383d" translate="yes" xml:space="preserve">
          <source>Eric Wilhelm @ &amp;lt;ewilhelm at cpan dot org&amp;gt;</source>
          <target state="translated">Эрик Вильгельм @ &amp;lt;ewilhelm at cpan dot org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d8bf3fea74cb51ac9ebccafa9b5bfc9e28b1c902" translate="yes" xml:space="preserve">
          <source>Errno</source>
          <target state="translated">Errno</target>
        </trans-unit>
        <trans-unit id="76cf9c662cbb85bc782a4c519361391afd6f8281" translate="yes" xml:space="preserve">
          <source>Errno - System errno constants</source>
          <target state="translated">Эррно-Системные эррно-константы</target>
        </trans-unit>
        <trans-unit id="6cc16f28f695995f841e32ad9be43613256395fe" translate="yes" xml:space="preserve">
          <source>Error Checking</source>
          <target state="translated">Проверка на ошибки</target>
        </trans-unit>
        <trans-unit id="ecbd14ea4e6e17d8a2dc17467fb021874d4a82c9" translate="yes" xml:space="preserve">
          <source>Error Variables</source>
          <target state="translated">Переменные ошибки</target>
        </trans-unit>
        <trans-unit id="cfb1de7f5665b658bcddfda7619c881aef88520a" translate="yes" xml:space="preserve">
          <source>Error checking is, as usual, left as an exercise for the reader.</source>
          <target state="translated">Проверка на ошибки,как обычно,остаётся для читателя упражнением.</target>
        </trans-unit>
        <trans-unit id="da4e40dd69c1ef29292868ee52af685e14566b19" translate="yes" xml:space="preserve">
          <source>Error checking, as always, has been left as an exercise for the reader.</source>
          <target state="translated">Проверка на ошибки,как всегда,осталась для читателя упражнением.</target>
        </trans-unit>
        <trans-unit id="3e1fae3d7127b124ae1e94579e5dd51376530e7b" translate="yes" xml:space="preserve">
          <source>Error handling and messages</source>
          <target state="translated">Обработка ошибок и сообщения</target>
        </trans-unit>
        <trans-unit id="8bb7b0a0be7d85a55ee74f50c125415c68cb8808" translate="yes" xml:space="preserve">
          <source>Error information specific to the current operating system. At the moment, this differs from &lt;code&gt;$!&lt;/code&gt; under only VMS, OS/2, and Win32 (and for MacPerl). On all other platforms, &lt;code&gt;$^E&lt;/code&gt; is always just the same as &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">Информация об ошибке, относящаяся к текущей операционной системе. На данный момент это отличается от &lt;code&gt;$!&lt;/code&gt; только под VMS, OS / 2 и Win32 (и для MacPerl). На всех других платформах &lt;code&gt;$^E&lt;/code&gt; всегда совпадает с &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36186555ca5a85354d834f18239bd5446de015bb" translate="yes" xml:space="preserve">
          <source>Error message text from the last failed DynaLoader function. Note that, similar to errno in unix, a successful function call does not reset this message.</source>
          <target state="translated">Текст сообщения об ошибке из последней неудачной функции DynaLoader.Обратите внимание,что,как и errno в unix,успешный вызов функции не сбрасывает это сообщение.</target>
        </trans-unit>
        <trans-unit id="50134ffbfcda43f0c3168aa2876061d57b69c6ae" translate="yes" xml:space="preserve">
          <source>Error results (warning and fatal) contain:</source>
          <target state="translated">Результаты ошибок (предупреждение и смертельный исход)содержат:</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="e722317f0272c736783202d0439c1a84302bd3c9" translate="yes" xml:space="preserve">
          <source>Errors in rendering (non-existent function-name, non-existent coderef) are written to the STDOUT, or wherever you've set it via walk_output().</source>
          <target state="translated">Ошибки в рендеринге (несуществующее имя функции,несуществующий код)записываются в STDOUT,или где бы вы его ни установили с помощью функции walk_output().</target>
        </trans-unit>
        <trans-unit id="0934c88916cf6f7537fb99e4833669f3818f9855" translate="yes" xml:space="preserve">
          <source>Errors using the various *style* calls, and bad args to walk_output(), result in die(). Use an eval if you wish to catch these errors and continue processing.</source>
          <target state="translated">Ошибки,использующие различные вызовы *style*,и плохие аргументы для функции walk_output(),приводят к тому,что функция die().Используйте eval,если хотите отловить эти ошибки и продолжить обработку.</target>
        </trans-unit>
        <trans-unit id="aa094bf265d4ea86b5f894d7a380cedfb2baed9e" translate="yes" xml:space="preserve">
          <source>Escape sequences</source>
          <target state="translated">Побеговые последовательности</target>
        </trans-unit>
        <trans-unit id="afa6da9272c9b7871ca718b60455b77d2d266044" translate="yes" xml:space="preserve">
          <source>Escapes all &lt;code&gt;$&lt;/code&gt; so they are not interpreted as make variables.</source>
          <target state="translated">Экранирует все &lt;code&gt;$&lt;/code&gt; , поэтому они не интерпретируются как переменные make.</target>
        </trans-unit>
        <trans-unit id="d630054693cd8886f832682006b6bb07e97c811d" translate="yes" xml:space="preserve">
          <source>Escapes at most the first &quot;count&quot; chars of pv and puts the results into dsv such that the size of the escaped string will not exceed &quot;max&quot; chars and will not contain any incomplete escape sequences. The number of bytes escaped will be returned in the STRLEN *escaped parameter if it is not null. When the dsv parameter is null no escaping actually occurs, but the number of bytes that would be escaped were it not null will be calculated.</source>
          <target state="translated">Побеждает максимум на первых &quot;счетных&quot; графиках pv и помещает результаты в dsv таким образом,чтобы размер экранированной строки не превышал &quot;макс.&quot; графиков и не содержал незавершенных экранирующих последовательностей.Количество байт экранированной строки будет возвращено в параметре STRLEN *escaped,если оно не нулевое.Когда параметр dsv равен нулю,экранирование на самом деле не происходит,но количество байт,которое было бы экранировано,если бы оно не было нулевым,будет вычислено.</target>
        </trans-unit>
        <trans-unit id="b73daf05e61c2f4ceabfe0f8dc9e8bd0fe087922" translate="yes" xml:space="preserve">
          <source>Escapes stray &lt;code&gt;$&lt;/code&gt; so they are not interpreted as make variables.</source>
          <target state="translated">Escape stray &lt;code&gt;$&lt;/code&gt; , поэтому они не интерпретируются как переменные make.</target>
        </trans-unit>
        <trans-unit id="92b417d4a5ce0ac686aeee5640af004624297a4e" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;.</source>
          <target state="translated">Особенно &lt;a href=&quot;bignum&quot;&gt;бигнум&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51e6f8fb1216de07279b7184fe32486c4afcbbd5" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt; as in &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; .</source>
          <target state="translated">Особенно &lt;a href=&quot;bigrat&quot;&gt;bigrat,&lt;/a&gt; как в &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd99d9147aed607626e5d2c3fbf27fa8eaba872" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt; as in &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; and &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; as in &lt;code&gt;perl -Mbignum -le 'print sqrt(2)'&lt;/code&gt; .</source>
          <target state="translated">Особенно &lt;a href=&quot;bigrat&quot;&gt;bigrat,&lt;/a&gt; как в &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; &lt;a href=&quot;bignum&quot;&gt;1/4 &lt;/a&gt;' и bignum, как в &lt;code&gt;perl -Mbignum -le 'print sqrt(2)'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5485ef59e2abd6d9fec5641c427b8c1a89ee861e" translate="yes" xml:space="preserve">
          <source>Essentially this is the same as the &lt;code&gt;__LINE__&lt;/code&gt; macro, but the &lt;code&gt;line_num(+3)&lt;/code&gt; idiom is arguably nicer.</source>
          <target state="translated">По сути, это то же самое, что и макрос &lt;code&gt;__LINE__&lt;/code&gt; , но &lt;code&gt;line_num(+3)&lt;/code&gt; возможно, лучше.</target>
        </trans-unit>
        <trans-unit id="0c6dff48b0f039b109420e87e1e42abbab8710f8" translate="yes" xml:space="preserve">
          <source>Establish an ISA relationship with base classes at compile time</source>
          <target state="translated">Установите отношения ISA с базовыми классами во время компиляции.</target>
        </trans-unit>
        <trans-unit id="576347ec826f38428d8c8a6f8ec4acb2bceab911" translate="yes" xml:space="preserve">
          <source>Europe</source>
          <target state="translated">Europe</target>
        </trans-unit>
        <trans-unit id="15622021802352824cd00f0a03614ec0fdf9d50b" translate="yes" xml:space="preserve">
          <source>Evaluates EXPR and exits immediately with that value. Example:</source>
          <target state="translated">Оценивает EXPR и немедленно выходит с этим значением.Пример:</target>
        </trans-unit>
        <trans-unit id="c44b93a0add3946a941d2db7675bb524bcd7719a" translate="yes" xml:space="preserve">
          <source>Evaluates its expression in list context and dumps out the result in a pretty-printed fashion. Nested data structures are printed out recursively, unlike the real &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; function in Perl. When dumping hashes, you'll probably prefer 'x \%h' rather than 'x %h'. See &lt;a href=&quot;dumpvalue&quot;&gt;Dumpvalue&lt;/a&gt; if you'd like to do this yourself.</source>
          <target state="translated">Оценивает свое выражение в контексте списка и выводит результат в красивой печатной форме. Вложенные структуры данных распечатываются рекурсивно, в отличие от реальной функции &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; в Perl. При сбросе хешей вы, вероятно, предпочтете &amp;laquo;x \% h&amp;raquo;, а не &amp;laquo;x% h&amp;raquo;. См. &lt;a href=&quot;dumpvalue&quot;&gt;Dumpvalue,&lt;/a&gt; если вы хотите сделать это самостоятельно.</target>
        </trans-unit>
        <trans-unit id="9eee27e1be9e7d28580a29bfa24323cac2b1efa9" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;code&gt;$_&lt;/code&gt; to each element) and returns the list value composed of the results of each such evaluation. In scalar context, returns the total number of elements so generated. Evaluates BLOCK or EXPR in list context, so each element of LIST may produce zero, one, or more elements in the returned value.</source>
          <target state="translated">Оценивает BLOCK или EXPR для каждого элемента LIST (локально устанавливая &lt;code&gt;$_&lt;/code&gt; для каждого элемента) и возвращает значение списка, состоящее из результатов каждой такой оценки. В скалярном контексте возвращает общее количество сгенерированных элементов. Оценивает BLOCK или EXPR в контексте списка, поэтому каждый элемент LIST может создавать ноль, один или несколько элементов в возвращаемом значении.</target>
        </trans-unit>
        <trans-unit id="e159565a978e2dbd25deef6d431807eb47abbd14" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;code&gt;$_&lt;/code&gt; to each element) and returns the list value consisting of those elements for which the expression evaluated to true. In scalar context, returns the number of times the expression was true.</source>
          <target state="translated">Оценивает BLOCK или EXPR для каждого элемента LIST (локально устанавливая &lt;code&gt;$_&lt;/code&gt; для каждого элемента) и возвращает значение списка, состоящее из тех элементов, для которых выражение было оценено как истинное. В скалярном контексте возвращает, сколько раз выражение было истинным.</target>
        </trans-unit>
        <trans-unit id="adb27bcd152d36bb6aa40c050f7aa6bc064a148c" translate="yes" xml:space="preserve">
          <source>Evaluates the hash in scalar context and returns the result. Handles magic when the hash is tied.</source>
          <target state="translated">Оценивает хэш в скалярном контексте и возвращает результат.Обрабатывает магию,когда хэш связан.</target>
        </trans-unit>
        <trans-unit id="0b7efdaaae8c2d5acf037415de9e55f35d46853a" translate="yes" xml:space="preserve">
          <source>Evaluates to a list of the words extracted out of</source>
          <target state="translated">Оценивает до списка слов,извлеченных из</target>
        </trans-unit>
        <trans-unit id="11f4958a116f001f9e79787b5473e92c45467956" translate="yes" xml:space="preserve">
          <source>Evaluating a Perl statement from your C program</source>
          <target state="translated">Оценка Perl заявления от вашей программы на C</target>
        </trans-unit>
        <trans-unit id="fdfaa902629988731ecf820e3310a76ecb105be5" translate="yes" xml:space="preserve">
          <source>Evaluating perl code (e.g. via &quot;eval&quot; or &quot;do 'file'&quot;) causes the code to be compiled into an internal format and then, provided there was no error in the compilation, executed. The internal format is based on many distinct</source>
          <target state="translated">Оценка perl кода (например,с помощью &quot;eval&quot; или &quot;do 'file'&quot;)приводит к тому,что код компилируется во внутренний формат,а затем,при условии отсутствия ошибок в компиляции,выполняется.Внутренний формат основан на множестве различных</target>
        </trans-unit>
        <trans-unit id="e1f930d87a7c101ffac9391f41733ff5b3321f0a" translate="yes" xml:space="preserve">
          <source>Even &lt;code&gt;$x += 5&lt;/code&gt; or &lt;code&gt;$x++&lt;/code&gt; are not guaranteed to be atomic.</source>
          <target state="translated">Даже &lt;code&gt;$x += 5&lt;/code&gt; или &lt;code&gt;$x++&lt;/code&gt; не могут быть атомарными.</target>
        </trans-unit>
        <trans-unit id="459a068431296abdc9a0ee020cbb72e87da92588" translate="yes" xml:space="preserve">
          <source>Even after they stabilize, some tests may fail.</source>
          <target state="translated">Даже после того,как они стабилизируются,некоторые тесты могут провалиться.</target>
        </trans-unit>
        <trans-unit id="014c0223d524d2f9046bd74912b924b926ef1dba" translate="yes" xml:space="preserve">
          <source>Even if a module is thread-safe, it doesn't mean that the module is optimized to work well with threads. A module could possibly be rewritten to utilize the new features in threaded Perl to increase performance in a threaded environment.</source>
          <target state="translated">Даже если модуль является потоково-безопасным,это не означает,что он оптимизирован для хорошей работы с потоками.Модуль может быть переписан,чтобы использовать новые возможности в потоковом Perl для повышения производительности в потоковой среде.</target>
        </trans-unit>
        <trans-unit id="ea9410fd8b85c13558ab2ec195f440b39ef94e1e" translate="yes" xml:space="preserve">
          <source>Even if a prototype is available at compile time, the body of the subroutine is not (it hasn't been &lt;code&gt;AUTOLOAD&lt;/code&gt; ed yet). perl needs to examine both the &lt;code&gt;()&lt;/code&gt; prototype and the body of a subroutine at compile time to detect that it can safely replace calls to that subroutine with the constant value.</source>
          <target state="translated">Даже если прототип доступен во время компиляции, тело подпрограммы недоступно (оно еще не было &lt;code&gt;AUTOLOAD&lt;/code&gt; ). Perl необходимо проверить как прототип &lt;code&gt;()&lt;/code&gt; ,так и тело подпрограммы во время компиляции, чтобы определить, что он может безопасно заменить вызовы этой подпрограммы постоянным значением.</target>
        </trans-unit>
        <trans-unit id="6e9d9a1a7409534a2957addc0cb2ac7a35e101e4" translate="yes" xml:space="preserve">
          <source>Even if no</source>
          <target state="translated">Даже если нет</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
