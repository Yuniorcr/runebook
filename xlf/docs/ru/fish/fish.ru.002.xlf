<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="fish">
    <body>
      <group id="fish">
        <trans-unit id="4f10862d2cb42eba3132cb49d2ba2a80e3864525" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to have a function &lt;code&gt;ll&lt;/code&gt;, you would add a text file &lt;code&gt;ll.fish&lt;/code&gt; to &lt;code&gt;~/.config/fish/functions&lt;/code&gt;:</source>
          <target state="translated">Например, если вы хотите иметь функцию &lt;code&gt;ll&lt;/code&gt; , вы должны добавить текстовый файл &lt;code&gt;ll.fish&lt;/code&gt; в &lt;code&gt;~/.config/fish/functions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="631584c9382e007cb93a95331a33fec25ea95d0e" translate="yes" xml:space="preserve">
          <source>For example, the following is a function definition that calls the command &lt;code&gt;ls&lt;/code&gt; with the argument '&lt;code&gt;-l&lt;/code&gt;' to print a detailed listing of the contents of the current directory:</source>
          <target state="translated">Например, ниже приводится определение функции, которая вызывает команду &lt;code&gt;ls&lt;/code&gt; с аргументом ' &lt;code&gt;-l&lt;/code&gt; ' для вывода подробного списка содержимого текущего каталога:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="9b35e52823563d2df240637c363f5b52ee523904" translate="yes" xml:space="preserve">
          <source>For examples of how to write your own complex completions, study the completions in &lt;code&gt;/usr/share/fish/completions&lt;/code&gt;. (The exact path depends on your chosen installation prefix and may be slightly different)</source>
          <target state="translated">Примеры написания собственных сложных завершений см. В каталоге &lt;code&gt;/usr/share/fish/completions&lt;/code&gt; . (Точный путь зависит от выбранного вами префикса установки и может немного отличаться)</target>
        </trans-unit>
        <trans-unit id="bbba6181daff6006d824b40726c5e1dc21c20696" translate="yes" xml:space="preserve">
          <source>For loops can be used to iterate over a list. For example, a list of files:</source>
          <target state="translated">Для циклов можно использовать итерацию по списку.Например,список файлов:</target>
        </trans-unit>
        <trans-unit id="0d3b4b55cdd235f8a297cfd58fd2b4aaeb478949" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;index#debugging&quot;&gt;Debugging fish scripts&lt;/a&gt; in the &lt;code&gt;fish&lt;/code&gt; manual.</source>
          <target state="translated">Для получения более подробной информации см &lt;a href=&quot;index#debugging&quot;&gt;Debugging рыбы сценариев&lt;/a&gt; в &lt;code&gt;fish&lt;/code&gt; руководстве.</target>
        </trans-unit>
        <trans-unit id="2fc141152e052520326e534bbd191caeb550504d" translate="yes" xml:space="preserve">
          <source>For more information on how to define new event handlers, see the documentation for the &lt;a href=&quot;commands#function&quot;&gt;function&lt;/a&gt; command.</source>
          <target state="translated">Для получения дополнительной информации о том, как определять новые обработчики событий, см. Документацию по команде &lt;a href=&quot;commands#function&quot;&gt;function&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6895247d91fcffa104e9a4003d47294a8b67a455" translate="yes" xml:space="preserve">
          <source>For more information, read the documentation for the block constructs, such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt;.</source>
          <target state="translated">Для получения дополнительной информации прочтите документацию по блочным конструкциям, например &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; и &lt;code&gt;while&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8d92b5c7148803c36e855152c078c15224a9486" translate="yes" xml:space="preserve">
          <source>For numbers, &lt;code&gt;.&lt;/code&gt; is always the radix character regardless of locale - &lt;code&gt;2.5&lt;/code&gt;, not &lt;code&gt;2,5&lt;/code&gt;. Scientific notation (&lt;code&gt;10e5&lt;/code&gt;) is also available.</source>
          <target state="translated">Для чисел &lt;code&gt;.&lt;/code&gt; всегда является символом системы счисления независимо от языкового стандарта - &lt;code&gt;2.5&lt;/code&gt; , а не &lt;code&gt;2,5&lt;/code&gt; . Также доступна научная нотация ( &lt;code&gt;10e5&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">Часто задаваемые вопросы</target>
        </trans-unit>
        <trans-unit id="817a23516d79c9310b8cbcd3fbb553ae7f962425" translate="yes" xml:space="preserve">
          <source>From an interactive shell, the commands below exit with a return value of zero:</source>
          <target state="translated">Из интерактивной оболочки команды,расположенные ниже,выходят с возвращаемым значением нуля:</target>
        </trans-unit>
        <trans-unit id="68add3d9773584e2619f672ebe5f9d4745e5e9ea" translate="yes" xml:space="preserve">
          <source>From now on, we'll pretend your prompt is just a '&lt;code&gt;&amp;gt;&lt;/code&gt;' to save space.</source>
          <target state="translated">С этого момента мы будем делать вид, что ваша подсказка - это просто &quot; &lt;code&gt;&amp;gt;&lt;/code&gt; &quot; для экономии места.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="daf9c1f469f134e463969d3e8181e558bbde191a" translate="yes" xml:space="preserve">
          <source>Functions are programs written in the fish syntax. They group together one or more commands and their arguments using a single name. It can also be used to start a specific command with additional arguments.</source>
          <target state="translated">Функции-это программы,написанные в синтаксисе рыб.Они группируют одну или несколько команд и их аргументы,используя одно имя.Она также может быть использована для запуска конкретной команды с дополнительными аргументами.</target>
        </trans-unit>
        <trans-unit id="89f90915711f79d63d40ae94fbe45e944677e599" translate="yes" xml:space="preserve">
          <source>Functions beginning with the string &lt;code&gt;__fish_print_&lt;/code&gt; print a newline separated list of strings. For example, &lt;code&gt;__fish_print_filesystems&lt;/code&gt; prints a list of all known file systems. Functions beginning with &lt;code&gt;__fish_complete_&lt;/code&gt; print out a newline separated list of completions with descriptions. The description is separated from the completion by a tab character.</source>
          <target state="translated">Функции, начинающиеся со строки &lt;code&gt;__fish_print_&lt;/code&gt; , печатают список строк, разделенных новой строкой . Например, &lt;code&gt;__fish_print_filesystems&lt;/code&gt; выводит список всех известных файловых систем. Функции, начинающиеся с &lt;code&gt;__fish_complete_&lt;/code&gt; , распечатывают список завершений с описанием, разделенный новой строкой . Описание отделяется от завершения символом табуляции.</target>
        </trans-unit>
        <trans-unit id="bfd6b853607d78b9cac90686ca5ac5f2f2bd0492" translate="yes" xml:space="preserve">
          <source>Functions can be defined on the commandline or in a configuration file, but they can also be automatically loaded. This method of defining functions has several advantages. An autoloaded function becomes available automatically to all running shells. If the function definition is changed, all running shells will automatically reload the altered version. Startup time and memory usage is improved, etc.</source>
          <target state="translated">Функции могут быть определены в командной строке или в конфигурационном файле,но они также могут быть автоматически загружены.Такой способ определения функций имеет ряд преимуществ.Функция с автозагрузкой становится доступной автоматически для всех запущенных оболочек.Если определение функции изменено,все запущенные оболочки автоматически перезагрузят измененную версию.Улучшается время запуска и использование памяти и т.д.</target>
        </trans-unit>
        <trans-unit id="45aaac446e8af8ab443ebb79de1921177d9fc9c4" translate="yes" xml:space="preserve">
          <source>Fundle</source>
          <target state="translated">Fundle</target>
        </trans-unit>
        <trans-unit id="1dbc937890de836b0044393faedad472b64f7496" translate="yes" xml:space="preserve">
          <source>Further help and development</source>
          <target state="translated">Дальнейшая помощь и развитие</target>
        </trans-unit>
        <trans-unit id="bcbbc69b089ac1c6106198168f95bbc56b4fa684" translate="yes" xml:space="preserve">
          <source>Future feature flags</source>
          <target state="translated">Будущие флаги</target>
        </trans-unit>
        <trans-unit id="3dc04827b1d89f032f341434dadfd4fcc6c503c2" translate="yes" xml:space="preserve">
          <source>GNU style long options, like '&lt;code&gt;--colors&lt;/code&gt;'. GNU style long options can be more than one character long, are preceded by two hyphens, and may not be grouped together. Option arguments may be specified in the following parameter ('&lt;code&gt;--quoting-style shell&lt;/code&gt;') or by appending the option with a '&lt;code&gt;=&lt;/code&gt;' and the value ('&lt;code&gt;--quoting-style=shell&lt;/code&gt;'). GNU style long options may be abbreviated so long as the abbreviation is unique ('&lt;code&gt;--h&lt;/code&gt;') is equivalent to '&lt;code&gt;--help&lt;/code&gt;' if help is the only long option beginning with an 'h').</source>
          <target state="translated">Длинные параметры в стиле GNU, например &lt;code&gt;--colors&lt;/code&gt; . Параметры long в стиле GNU могут содержать более одного символа, им предшествуют два дефиса, и их нельзя группировать вместе. Аргументы опции могут быть указаны в следующем параметре (' &lt;code&gt;--quoting-style shell&lt;/code&gt; ') или путем добавления опции с ' &lt;code&gt;=&lt;/code&gt; ' и значением (' &lt;code&gt;--quoting-style=shell&lt;/code&gt; '). Длинные параметры в стиле GNU могут быть сокращены до тех пор, пока сокращение уникально (' &lt;code&gt;--h&lt;/code&gt; ') эквивалентно ' &lt;code&gt;--help&lt;/code&gt; ', если справка - единственный длинный вариант, начинающийся с 'h').</target>
        </trans-unit>
        <trans-unit id="d19c496fc9fc5f17e29b156659c99fdebbdf355e" translate="yes" xml:space="preserve">
          <source>Get the length of a list with &lt;code&gt;count&lt;/code&gt;:</source>
          <target state="translated">Получите длину списка с помощью &lt;code&gt;count&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a0f73ca6aa746ede1e77153dd3bf5bb16e841ab" translate="yes" xml:space="preserve">
          <source>Getting Help</source>
          <target state="translated">Получить помощь</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="097b5d5320d0735796306d389e915b1392ea4a90" translate="yes" xml:space="preserve">
          <source>Groups:</source>
          <target state="translated">Groups:</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">Help</target>
        </trans-unit>
        <trans-unit id="0053f4880938c6ad45d9f6ae784ae7aa588de2e2" translate="yes" xml:space="preserve">
          <source>Help on a specific builtin can also be obtained with the &lt;code&gt;-h&lt;/code&gt; parameter. For instance, to obtain help on the &lt;code&gt;fg&lt;/code&gt; builtin, either type &lt;code&gt;fg -h&lt;/code&gt; or &lt;code&gt;help fg&lt;/code&gt;.</source>
          <target state="translated">Справку по конкретным встроенным функциям также можно получить с помощью параметра &lt;code&gt;-h&lt;/code&gt; . Например, чтобы получить справку по встроенной функции &lt;code&gt;fg&lt;/code&gt; , введите &lt;code&gt;fg -h&lt;/code&gt; или &lt;code&gt;help fg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5d69f1e4fa9190f3df409c8af9094f4963c8a1" translate="yes" xml:space="preserve">
          <source>Here is a list of some useful commands:</source>
          <target state="translated">Вот список некоторых полезных команд:</target>
        </trans-unit>
        <trans-unit id="7a509c793438fa230f1278ed402f9c7e9018572d" translate="yes" xml:space="preserve">
          <source>History searches can be aborted by pressing the escape key.</source>
          <target state="translated">Поиск по истории можно прервать,нажав на клавишу аварийного отключения.</target>
        </trans-unit>
        <trans-unit id="67bc332b46b3f3dc1b8024a5e5cfdee70680168b" translate="yes" xml:space="preserve">
          <source>Hit tab again to cycle through the possibilities.</source>
          <target state="translated">Перейдите на вкладку еще раз,чтобы просмотреть возможности.</target>
        </trans-unit>
        <trans-unit id="0fb159db1e28fce0aea599e71e51612c11b25f22" translate="yes" xml:space="preserve">
          <source>Home directory expansion</source>
          <target state="translated">Расширение домашней директории</target>
        </trans-unit>
        <trans-unit id="d5208f2bd161f7ef9e4786ba2058053cc8cefa22" translate="yes" xml:space="preserve">
          <source>How can I use `-` as a shortcut for `cd -`?</source>
          <target state="translated">Как я могу использовать `-` в качестве ярлыка для `cd -`?</target>
        </trans-unit>
        <trans-unit id="ba1155cc4fa464e6593f08ba2b8723aab74c8f1c" translate="yes" xml:space="preserve">
          <source>How do I change the greeting message?</source>
          <target state="translated">Как изменить приветственное сообщение?</target>
        </trans-unit>
        <trans-unit id="13c4a91c9a86c9c981e277c7f5e4a2ed6189509e" translate="yes" xml:space="preserve">
          <source>How do I customize my syntax highlighting colors?</source>
          <target state="translated">Как настроить цвета подсветки синтаксиса?</target>
        </trans-unit>
        <trans-unit id="a694102af5424918d28a1f9662a1aa3950673c08" translate="yes" xml:space="preserve">
          <source>How do I get the exit status of a command?</source>
          <target state="translated">Как получить статус выхода команды?</target>
        </trans-unit>
        <trans-unit id="0e58d9d321d50cf0c49be8ad0ed48955a88a6bce" translate="yes" xml:space="preserve">
          <source>How do I make fish my default shell?</source>
          <target state="translated">Как мне сделать рыбу своей стандартной оболочкой?</target>
        </trans-unit>
        <trans-unit id="bc538e8432ebecf3f9f7a45d7ccb524d4da71c7d" translate="yes" xml:space="preserve">
          <source>How do I run a command every login? What's fish's equivalent to .bashrc?</source>
          <target state="translated">Как запустить команду при каждом входе в систему? Что такое рыба,эквивалентная .bashrc?</target>
        </trans-unit>
        <trans-unit id="9d52246c1acb2dd2ad95298d27dac048384b6b2b" translate="yes" xml:space="preserve">
          <source>How do I run a command from history?</source>
          <target state="translated">Как мне запустить команду из истории?</target>
        </trans-unit>
        <trans-unit id="7c2282706e5d5da05460852fe614e0ea089754e8" translate="yes" xml:space="preserve">
          <source>How do I run a subcommand? The backtick doesn't work!</source>
          <target state="translated">Как мне управлять подкомандованием? Задний ход не работает!</target>
        </trans-unit>
        <trans-unit id="240782fc9c5f0b5d6c4cc74b05803ec8fdfa4ffc" translate="yes" xml:space="preserve">
          <source>How do I set an environment variable for just one command?</source>
          <target state="translated">Как установить переменную окружения только для одной команды?</target>
        </trans-unit>
        <trans-unit id="cf01f8cfda8ac7fdc0ad1cfce27146791559db05" translate="yes" xml:space="preserve">
          <source>How do I set my prompt?</source>
          <target state="translated">Как мне настроить подсказку?</target>
        </trans-unit>
        <trans-unit id="a7f2b2fb54e2d471e8f341688e112fc1e1ce9d80" translate="yes" xml:space="preserve">
          <source>How do I set or clear an environment variable?</source>
          <target state="translated">Как установить или очистить переменную окружения?</target>
        </trans-unit>
        <trans-unit id="1bbce1c02cef5225c09fe183c39555282f316dab" translate="yes" xml:space="preserve">
          <source>How do I update man page completions?</source>
          <target state="translated">Как обновить страницы man?</target>
        </trans-unit>
        <trans-unit id="8755f1ac4179b2490bfd8d3384a3c541bc0e9557" translate="yes" xml:space="preserve">
          <source>However sometimes, especially with &lt;code&gt;pkg-config&lt;/code&gt; and related tools, splitting on spaces is needed.</source>
          <target state="translated">Однако иногда, особенно с помощью &lt;code&gt;pkg-config&lt;/code&gt; и связанных с ним инструментов, требуется разделение на пробелы.</target>
        </trans-unit>
        <trans-unit id="54bce717b6b4bc0facb17b1202d46c84a308e996" translate="yes" xml:space="preserve">
          <source>However using variables as indices for command substitution is currently not supported, so</source>
          <target state="translated">Однако использование переменных в качестве индексов для подстановки команд в настоящее время не поддерживается,поэтому</target>
        </trans-unit>
        <trans-unit id="3ece1cae89b5ddaf2b419721f67d267e2d87fe0b" translate="yes" xml:space="preserve">
          <source>However, it is more common and efficient to use autoloading functions and universal variables.</source>
          <target state="translated">Однако более распространенным и эффективным является использование функций автозагрузки и универсальных переменных.</target>
        </trans-unit>
        <trans-unit id="332860b83cabf222387565b3cbb3a4ca2b6a60c7" translate="yes" xml:space="preserve">
          <source>I accidentally entered a directory path and fish changed directory. What happened?</source>
          <target state="translated">Я случайно ввел путь к каталогу и рыба поменяла каталог.Что случилось?</target>
        </trans-unit>
        <trans-unit id="077b540fd621e89ad74c3aa41ae8c6bb0c4148b1" translate="yes" xml:space="preserve">
          <source>I'm seeing weird output before each prompt when using screen. What's wrong?</source>
          <target state="translated">Я вижу странный вывод перед каждым запросом при использовании экрана.Что не так?</target>
        </trans-unit>
        <trans-unit id="7884771064847db56c0b28c42a19e5f67be016fb" translate="yes" xml:space="preserve">
          <source>If $animals is a list of animals, the following will test if it contains a cat:</source>
          <target state="translated">Если $animals-это список животных,то ниже будет проведена проверка,содержит ли он кошку:</target>
        </trans-unit>
        <trans-unit id="6288311089317cecbe49c2b077270e72c24f0c74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$animal&lt;/code&gt; was set to &quot;banana&quot;, it would print &quot;I have no idea what a banana is&quot;.</source>
          <target state="translated">Если бы для &lt;code&gt;$animal&lt;/code&gt; было установлено значение &amp;laquo;банан&amp;raquo;, оно напечатало бы &amp;laquo;Я понятия не имею, что такое банан&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6529dd48f4bbe7af35d8ee17e053a860dce8bc42" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$argv&lt;/code&gt; is empty then there is nothing to parse and &lt;code&gt;argparse&lt;/code&gt; returns zero to indicate success. If &lt;code&gt;$argv&lt;/code&gt; is not empty then it is checked for flags &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt;. If they are found they are removed from the arguments and local variables (more on this &lt;a href=&quot;argparse-local-variables&quot;&gt;below&lt;/a&gt;) are set so the script can determine which options were seen. Assuming &lt;code&gt;$argv&lt;/code&gt; doesn't have any errors, such as a missing mandatory value for an option, then &lt;code&gt;argparse&lt;/code&gt; exits with status zero. Otherwise it writes appropriate error messages to stderr and exits with a status of one.</source>
          <target state="translated">Если &lt;code&gt;$argv&lt;/code&gt; пусто, то анализировать нечего, и &lt;code&gt;argparse&lt;/code&gt; возвращает ноль, что указывает на успех. Если &lt;code&gt;$argv&lt;/code&gt; не пусто, то проверяются флаги &lt;code&gt;-h&lt;/code&gt; , &lt;code&gt;--help&lt;/code&gt; , &lt;code&gt;-n&lt;/code&gt; и &lt;code&gt;--name&lt;/code&gt; . Если они обнаруживаются, они удаляются из аргументов, а локальные переменные (подробнее об этом &lt;a href=&quot;argparse-local-variables&quot;&gt;ниже&lt;/a&gt; ) устанавливаются, чтобы сценарий мог определить, какие параметры были просмотрены. Предполагая, что &lt;code&gt;$argv&lt;/code&gt; не имеет ошибок, таких как отсутствие обязательного значения для параметра, тогда &lt;code&gt;argparse&lt;/code&gt; завершает работу с нулевым статусом. В противном случае он записывает соответствующие сообщения об ошибках в stderr и завершает работу со статусом &amp;laquo;единица&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="18c0231ee0546ad7aeb3f50a1a68cbc1c85d1797" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--index&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt; is given, each match is reported as a 1-based start position and a length. By default, PATTERN is interpreted as a glob pattern matched against each entire STRING argument. A glob pattern is only considered a valid match if it matches the entire STRING.</source>
          <target state="translated">Если &lt;code&gt;--index&lt;/code&gt; или &lt;code&gt;-n&lt;/code&gt; , каждое совпадение отображается как начальная позиция и длина, отсчитываемая от 1. По умолчанию ШАБЛОН интерпретируется как шаблон глобуса, соответствующий каждому целому аргументу STRING. Шаблон глобуса считается допустимым совпадением, только если он соответствует всей строке STRING.</target>
        </trans-unit>
        <trans-unit id="dbf8f89e324b9e1f656b472c919d4c7a437efce4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--invert&lt;/code&gt; or &lt;code&gt;-v&lt;/code&gt; is used the selected lines will be only those which do not match the given glob pattern or regular expression.</source>
          <target state="translated">Если используется &lt;code&gt;--invert&lt;/code&gt; или &lt;code&gt;-v&lt;/code&gt; , выбранные строки будут только теми, которые не соответствуют заданному шаблону глобуса или регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="bca5e01e9673f9e6a815d4bc3b45775fa51fbbf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--regex&lt;/code&gt; or &lt;code&gt;-r&lt;/code&gt; is given, PATTERN is interpreted as a Perl-compatible regular expression, which does not have to match the entire STRING. For a regular expression containing capturing groups, multiple items will be reported for each match, one for the entire match and one for each capturing group. With this, only the matching part of the STRING will be reported, unless &lt;code&gt;--entire&lt;/code&gt; is given.</source>
          <target state="translated">Если &lt;code&gt;--regex&lt;/code&gt; или &lt;code&gt;-r&lt;/code&gt; ,ШАБЛОН интерпретируется как Perl-совместимое регулярное выражение, которое не обязательно должно соответствовать всей СТРОКЕ. Для регулярного выражения, содержащего группы захвата, будет отображаться несколько элементов для каждого совпадения, по одному для всего совпадения и по одному для каждой группы захвата. При этом будет сообщаться только соответствующая часть STRING, если не &lt;code&gt;--entire&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e269b8b85f5f48b405e1f529c5cc1623456789e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--array&lt;/code&gt; is provided, only one variable name is allowed and the tokens are stored as an array in this variable.</source>
          <target state="translated">Если &lt;code&gt;--array&lt;/code&gt; &lt;code&gt;-a&lt;/code&gt; или --array, допускается только одно имя переменной, а токены хранятся в этой переменной в виде массива.</target>
        </trans-unit>
        <trans-unit id="a6dcb1b88668c5c41c70fbdad2157ee6171f60f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-e&lt;/code&gt; is used, the following sequences are recognized:</source>
          <target state="translated">Если используется &lt;code&gt;-e&lt;/code&gt; , распознаются следующие последовательности:</target>
        </trans-unit>
        <trans-unit id="e5d5482f59147347f76e114d12618ff3d78fea80" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--regex&lt;/code&gt; is given, PATTERN is interpreted as a Perl-compatible regular expression, and REPLACEMENT can contain C-style escape sequences like &lt;code&gt;\t&lt;/code&gt; as well as references to capturing groups by number or name as &lt;code&gt;$n&lt;/code&gt; or &lt;code&gt;${n}&lt;/code&gt;.</source>
          <target state="translated">Если задано &lt;code&gt;-r&lt;/code&gt; или &lt;code&gt;--regex&lt;/code&gt; , PATTERN интерпретируется как Perl-совместимое регулярное выражение, а REPLACEMENT может содержать escape-последовательности в стиле C, такие как &lt;code&gt;\t&lt;/code&gt; а также ссылки на захват групп по номеру или имени как &lt;code&gt;$n&lt;/code&gt; или &lt;code&gt;${n}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="227584b023d6d2c7837f693e7e9b190c0c0b3bf5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; and &lt;code&gt;REASON&lt;/code&gt; are both specified, &lt;code&gt;ARG&lt;/code&gt; is the command to be executed when the event specified by &lt;code&gt;REASON&lt;/code&gt; occurs (e.g., the signal is delivered).</source>
          <target state="translated">Если указаны как &lt;code&gt;ARG&lt;/code&gt; ,так и &lt;code&gt;REASON&lt;/code&gt; , &lt;code&gt;ARG&lt;/code&gt; - это команда, которая должна выполняться, когда происходит событие, указанное &lt;code&gt;REASON&lt;/code&gt; (например, доставляется сигнал).</target>
        </trans-unit>
        <trans-unit id="d6a059f39530ea46f03b1a88f280774a9e1b7e4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; is absent (and there is a single REASON) or -, each specified signal is reset to its original disposition (the value it had upon entrance to the shell). If &lt;code&gt;ARG&lt;/code&gt; is the null string the signal specified by each &lt;code&gt;REASON&lt;/code&gt; is ignored by the shell and by the commands it invokes.</source>
          <target state="translated">Если &lt;code&gt;ARG&lt;/code&gt; отсутствует (и есть одна ПРИЧИНА) или -, каждый указанный сигнал сбрасывается в исходное состояние (значение, которое он имел при входе в оболочку). Если &lt;code&gt;ARG&lt;/code&gt; является пустой строкой, сигнал, указанный каждой &lt;code&gt;REASON&lt;/code&gt; , игнорируется оболочкой и командами, которые она вызывает.</target>
        </trans-unit>
        <trans-unit id="0310897c6525d4c0a20301e5b59490367df8d786" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ARG&lt;/code&gt; is not present and &lt;code&gt;-p&lt;/code&gt; has been supplied, then the trap commands associated with each &lt;code&gt;REASON&lt;/code&gt; are displayed. If no arguments are supplied or if only &lt;code&gt;-p&lt;/code&gt; is given, &lt;code&gt;trap&lt;/code&gt; prints the list of commands associated with each signal.</source>
          <target state="translated">Если &lt;code&gt;ARG&lt;/code&gt; отсутствует и задано &lt;code&gt;-p&lt;/code&gt; , то отображаются команды прерывания, связанные с каждой &lt;code&gt;REASON&lt;/code&gt; . Если аргументы не указаны или задана только &lt;code&gt;-p&lt;/code&gt; , &lt;code&gt;trap&lt;/code&gt; печатает список команд, связанных с каждым сигналом.</target>
        </trans-unit>
        <trans-unit id="46f4e7706aaa7715626c2065fdf439e268266771" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DIRECTORY&lt;/code&gt; is a relative path, the paths found in the &lt;code&gt;CDPATH&lt;/code&gt; environment variable array will be tried as prefixes for the specified path.</source>
          <target state="translated">Если &lt;code&gt;DIRECTORY&lt;/code&gt; - относительный путь, пути, найденные в &lt;code&gt;CDPATH&lt;/code&gt; переменных среды CDPATH, будут пробоваться как префиксы для указанного пути.</target>
        </trans-unit>
        <trans-unit id="6d211b5295328f27c5f4dda2c5b64e33b2d339ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DIRECTORY&lt;/code&gt; is supplied, it will become the new directory. If no parameter is given, the contents of the &lt;code&gt;HOME&lt;/code&gt; environment variable will be used.</source>
          <target state="translated">Если указан &lt;code&gt;DIRECTORY&lt;/code&gt; , он станет новым каталогом. Если параметр не указан, будет использоваться содержимое переменной среды &lt;code&gt;HOME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee49ba74d2c75163466a92ec95757c32496b3231" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;commandline&lt;/code&gt; is called during a call to complete a given string using &lt;code&gt;complete -C STRING&lt;/code&gt;, &lt;code&gt;commandline&lt;/code&gt; will consider the specified string to be the current contents of the command line.</source>
          <target state="translated">Если &lt;code&gt;commandline&lt;/code&gt; вызывается во время вызова , чтобы завершить данную строку , используя &lt;code&gt;complete -C STRING&lt;/code&gt; , &lt;code&gt;commandline&lt;/code&gt; будет рассматривать указанную строку как текущее содержимое командной строки.</target>
        </trans-unit>
        <trans-unit id="1145ddb3bdeee96521a717d934a15cc64d95077c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fish&lt;/code&gt; encounters a problem while executing a command, the status variable may also be set to a specific value:</source>
          <target state="translated">Если &lt;code&gt;fish&lt;/code&gt; сталкивается с проблемой при выполнении команды, переменной статуса также может быть присвоено определенное значение:</target>
        </trans-unit>
        <trans-unit id="f09fbf7f2a9a04bff01d5330effffef51795cab0" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SECTION&lt;/code&gt; is specified, the help for that command is shown.</source>
          <target state="translated">Если указан &lt;code&gt;SECTION&lt;/code&gt; , отображается справка для этой команды.</target>
        </trans-unit>
        <trans-unit id="8ebee8483e83b06811ff3ba9ccc429433dce33cd" translate="yes" xml:space="preserve">
          <source>If a function named &lt;code&gt;fish_greeting&lt;/code&gt; exists, it will be run when entering interactive mode. Otherwise, if an environment variable named &lt;code&gt;fish_greeting&lt;/code&gt; exists, it will be printed.</source>
          <target state="translated">Если функция с именем &lt;code&gt;fish_greeting&lt;/code&gt; существует, она будет запущена при переходе в интерактивный режим. В противном случае, если существует переменная среды с именем &lt;code&gt;fish_greeting&lt;/code&gt; , она будет напечатана.</target>
        </trans-unit>
        <trans-unit id="236d9b2bfa9ffd703bff82e438702935d8f276d3" translate="yes" xml:space="preserve">
          <source>If a job is stopped, it is sent a signal to continue running, and a warning is printed. It is not possible to use the &lt;code&gt;bg&lt;/code&gt; builtin to continue a job once it has been disowned.</source>
          <target state="translated">Если задание остановлено, ему посылается сигнал о продолжении выполнения и печатается предупреждение. Невозможно использовать встроенную команду &lt;code&gt;bg&lt;/code&gt; для продолжения работы, если от нее отказались.</target>
        </trans-unit>
        <trans-unit id="60e2a752180a8997dd97af87732b5ed3a03f8d8f" translate="yes" xml:space="preserve">
          <source>If a numeric mask is specified as a parameter, the current shell's umask will be set to that value, and the rights specified by that mask will be removed from new files and directories by default.</source>
          <target state="translated">Если в качестве параметра указана числовая маска,то текущая маска оболочки будет установлена на это значение,а права,указанные этой маской,будут удалены из новых файлов и каталогов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2dde9e658888f495cea69c0ad8b260a62416e91a" translate="yes" xml:space="preserve">
          <source>If a pid is specified, the command waits for the job that the process with the pid belongs to.</source>
          <target state="translated">Если указан pid,команда ждет задания,которому принадлежит процесс с pid.</target>
        </trans-unit>
        <trans-unit id="f851c83c3c3953c372c81382f02613c546f275f0" translate="yes" xml:space="preserve">
          <source>If a process exits through a signal, the exit status will be 128 plus the number of the signal.</source>
          <target state="translated">Если процесс выходит по сигналу,то состояние выхода будет 128 плюс номер сигнала.</target>
        </trans-unit>
        <trans-unit id="47cb47829c9383def1fb8361853c4c7dd09368a8" translate="yes" xml:space="preserve">
          <source>If a process name is specified, the command waits for the jobs that the matched processes belong to.</source>
          <target state="translated">Если указано имя процесса,команда ждет заданий,к которым принадлежат соответствующие процессы.</target>
        </trans-unit>
        <trans-unit id="302f9ccffa6bb045e0895a185f5c9e50859c884f" translate="yes" xml:space="preserve">
          <source>If a script produces output, it should finish by calling &lt;code&gt;commandline -f repaint&lt;/code&gt; to tell fish that a repaint is in order.</source>
          <target state="translated">Если сценарий производит вывод, он должен закончиться вызовом &lt;code&gt;commandline -f repaint&lt;/code&gt; чтобы сообщить Fish, что перерисовка в порядке.</target>
        </trans-unit>
        <trans-unit id="67026ba945428dc31827715c1565311d33b5af8d" translate="yes" xml:space="preserve">
          <source>If a star (&lt;code&gt;*&lt;/code&gt;) or a question mark (&lt;code&gt;?&lt;/code&gt;) is present in the parameter, &lt;code&gt;fish&lt;/code&gt; attempts to match the given parameter to any files in such a way that:</source>
          <target state="translated">Если в параметре присутствует звездочка ( &lt;code&gt;*&lt;/code&gt; ) или вопросительный знак ( &lt;code&gt;?&lt;/code&gt; ), &lt;code&gt;fish&lt;/code&gt; пытается сопоставить данный параметр с любыми файлами таким образом, чтобы:</target>
        </trans-unit>
        <trans-unit id="18a6fd00e4b1ddec496d39ba9f288b25c849a5d6" translate="yes" xml:space="preserve">
          <source>If a symbolic mask is specified, the desired permission bits, and not the inverse, should be specified. A symbolic mask is a comma separated list of rights. Each right consists of three parts:</source>
          <target state="translated">Если указана символическая маска,то должны быть указаны желаемые биты разрешения,а не инверсия.Символическая маска представляет собой разделенный запятыми список прав.Каждое право состоит из трех частей:</target>
        </trans-unit>
        <trans-unit id="c3bd46787a5c6b92e6f20cfe4fbc883c75045f2a" translate="yes" xml:space="preserve">
          <source>If a variable has global scope, it is accessible read-write to functions whether it is exported or not.</source>
          <target state="translated">Если переменная имеет глобальный охват,то она доступна для чтения-записи в функции независимо от того,экспортируется она или нет.</target>
        </trans-unit>
        <trans-unit id="741d44bccaaf674b1d069d14a1bdb399e238d593" translate="yes" xml:space="preserve">
          <source>If a variable has local scope and is exported, any function called receives a &lt;em&gt;copy&lt;/em&gt; of it, so any changes it makes to the variable disappear once the function returns.</source>
          <target state="translated">Если переменная имеет локальную область видимости и экспортируется, любая вызываемая функция получает ее &lt;em&gt;копию&lt;/em&gt; , поэтому любые изменения, которые она вносит в переменную, исчезают после возврата из функции.</target>
        </trans-unit>
        <trans-unit id="2cbdc88f5e9bb2f3b40009d0379b55ab2352ae84" translate="yes" xml:space="preserve">
          <source>If a variable is explicitly set to either be exported or not exported, that setting will be honored.</source>
          <target state="translated">Если переменная явно установлена как экспортируемая или не экспортируемая,эта установка будет выполнена.</target>
        </trans-unit>
        <trans-unit id="ce6484065868b4e9c43f6db14f55a84fe136a4bf" translate="yes" xml:space="preserve">
          <source>If a variable is explicitly set to either universal, global or local, that setting will be honored. If a variable of the same name exists in a different scope, that variable will not be changed.</source>
          <target state="translated">Если переменная явно задана как универсальная,глобальная или локальная,то эта установка будет выполнена.Если одноименная переменная существует в другой области видимости,эта переменная не будет изменена.</target>
        </trans-unit>
        <trans-unit id="326eb232490e8df93b49fd2c3a89fde63906ed77" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either exported or not exported and has never before been defined, the variable will not be exported.</source>
          <target state="translated">Если переменная не установлена явно и никогда ранее не определялась,то она не будет экспортирована.</target>
        </trans-unit>
        <trans-unit id="ef107fe0701094bebbf7a6322c1155614a1be3ba" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either exported or unexported and has never before been defined, the variable will not be exported.</source>
          <target state="translated">Если переменная не установлена явно и никогда ранее не определялась,то она не будет экспортирована.</target>
        </trans-unit>
        <trans-unit id="bd6c17ea05cd6c81f352d96759e2622e4a16e84b" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local and has never before been defined, the variable will be local to the currently executing function. Note that this is different from using the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; flag. If one of those flags is used, the variable will be local to the most inner currently executing block, while without these the variable will be local to the function. If no function is executing, the variable will be global.</source>
          <target state="translated">Если переменная явно не установлена ​​как универсальная, глобальная или локальная и никогда ранее не определялась, переменная будет локальной для выполняемой в данный момент функции. Обратите внимание, что это отличается от использования флага &lt;code&gt;-l&lt;/code&gt; или &lt;code&gt;--local&lt;/code&gt; . Если используется один из этих флагов, переменная будет локальной для самого внутреннего исполняемого в данный момент блока, а без них переменная будет локальной для функции. Если ни одна функция не выполняется, переменная будет глобальной.</target>
        </trans-unit>
        <trans-unit id="8b2d1734ef9bdd7bd6d21bc623798a68378e6c8b" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local, but has been previously defined, the previous variable scope is used.</source>
          <target state="translated">Если переменная не задана явно как универсальная,глобальная или локальная,но определена ранее,то используется предыдущая область видимости переменной.</target>
        </trans-unit>
        <trans-unit id="ae5e31cb3d02690bd43a99dc6a823c8568d4b6e8" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be either universal, global or local, but has been previously defined, the variable scope is not changed.</source>
          <target state="translated">Если переменная не задана явно как универсальная,глобальная или локальная,но определена ранее,область видимости переменной не изменяется.</target>
        </trans-unit>
        <trans-unit id="6ccd9990afce6a9aaaa05eb9827a340fd925feb1" translate="yes" xml:space="preserve">
          <source>If a variable is not explicitly set to be exported or not exported, but has been previously defined, the previous exporting rule for the variable is kept.</source>
          <target state="translated">Если переменная не установлена явно для экспорта или не экспортирована,но определена ранее,то сохраняется предыдущее правило экспорта для переменной.</target>
        </trans-unit>
        <trans-unit id="72e2106717a7a37128914da8765dc2c6c6697b14" translate="yes" xml:space="preserve">
          <source>If a variable is set to more than one value, the variable will be an array with the specified elements. If a variable is set to zero elements, it will become an array with zero elements.</source>
          <target state="translated">Если переменная установлена более чем в одно значение,то она будет представлять собой массив с указанными элементами.Если переменная установлена в нулевое значение,то она станет массивом с нулевыми элементами.</target>
        </trans-unit>
        <trans-unit id="7f805483966bd1b92bb16fa0e48ac91c14f18567" translate="yes" xml:space="preserve">
          <source>If an error occurs during argparse processing it will exit with a non-zero status and print error messages to stderr.</source>
          <target state="translated">Если во время обработки argparse возникнет ошибка,то она выйдет со статусом,отличным от нуля,и распечатает сообщения об ошибке в stderr.</target>
        </trans-unit>
        <trans-unit id="f3bb201c1119b5848ebfda84c47d1e1698174af5" translate="yes" xml:space="preserve">
          <source>If any non-option parameters are given, the definition of the specified functions are printed.</source>
          <target state="translated">Если заданы какие-либо опциональные параметры,то печатается определение указанных функций.</target>
        </trans-unit>
        <trans-unit id="dcc764ad71040642c2ae2b7ce376987c8f357ee1" translate="yes" xml:space="preserve">
          <source>If exit is called while sourcing a file (using the &lt;a href=&quot;#source&quot;&gt;source&lt;/a&gt; builtin) the rest of the file will be skipped, but the shell itself will not exit.</source>
          <target state="translated">Если exit вызывается при поиске файла (с использованием встроенного &lt;a href=&quot;#source&quot;&gt;источника&lt;/a&gt; ), остальная часть файла будет пропущена, но сама оболочка не выйдет.</target>
        </trans-unit>
        <trans-unit id="3068ba7bd98e36689eab0ca26911e82ce1011087" translate="yes" xml:space="preserve">
          <source>If fish is unable to locate a command with a given name, and it starts with '&lt;code&gt;.&lt;/code&gt;', '&lt;code&gt;/&lt;/code&gt;' or '&lt;code&gt;~&lt;/code&gt;', fish will test if a directory of that name exists. If it does, it is implicitly assumed that you want to change working directory. For example, the fastest way to switch to your home directory is to simply press &lt;code&gt;~&lt;/code&gt; and enter.</source>
          <target state="translated">Если fish не может найти команду с заданным именем и начинается с ' &lt;code&gt;.&lt;/code&gt; ',' &lt;code&gt;/&lt;/code&gt; 'или' &lt;code&gt;~&lt;/code&gt; ', fish проверит, существует ли каталог с таким именем. Если это так, неявно предполагается, что вы хотите сменить рабочий каталог. Например, самый быстрый способ переключиться в домашний каталог - просто нажать &lt;code&gt;~&lt;/code&gt; и ввести.</target>
        </trans-unit>
        <trans-unit id="9365afaebdcba814bae204eaa9cb6846f923618b" translate="yes" xml:space="preserve">
          <source>If limit is given, it is the new value of the specified resource. If no option is given, then &lt;code&gt;-f&lt;/code&gt; is assumed. Values are in kilobytes, except for &lt;code&gt;-t&lt;/code&gt;, which is in seconds and &lt;code&gt;-n&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt;, which are unscaled values. The return status is 0 unless an invalid option or argument is supplied, or an error occurs while setting a new limit.</source>
          <target state="translated">Если указан предел, это новое значение указанного ресурса. Если опция не указана, предполагается &lt;code&gt;-f&lt;/code&gt; . Значения указаны в килобайтах, за исключением &lt;code&gt;-t&lt;/code&gt; , который указывается в секундах, и &lt;code&gt;-n&lt;/code&gt; и &lt;code&gt;-u&lt;/code&gt; , которые являются немасштабированными значениями. Статус возврата равен 0, если не указан недопустимый параметр или аргумент, или если при установке нового предела не возникает ошибка.</target>
        </trans-unit>
        <trans-unit id="ca3ffe9826b96a93254e7258c40cd2d913b9941e" translate="yes" xml:space="preserve">
          <source>If neither a pid nor a process name is specified, the command waits for all background jobs.</source>
          <target state="translated">Если ни pid,ни имя процесса не указаны,команда ждет всех фоновых заданий.</target>
        </trans-unit>
        <trans-unit id="6620b792aa7c50700f6a7c83a134de00e5936216" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;SEQUENCE&lt;/code&gt; is provided, all bindings (or just the bindings in the specified &lt;code&gt;MODE&lt;/code&gt;) are printed. If &lt;code&gt;SEQUENCE&lt;/code&gt; is provided without &lt;code&gt;COMMAND&lt;/code&gt;, just the binding matching that sequence is printed.</source>
          <target state="translated">Если &lt;code&gt;SEQUENCE&lt;/code&gt; не указана , печатаются все привязки (или только привязки в указанном &lt;code&gt;MODE&lt;/code&gt; ). Если &lt;code&gt;SEQUENCE&lt;/code&gt; без &lt;code&gt;COMMAND&lt;/code&gt; , печатается только привязка, соответствующая этой последовательности.</target>
        </trans-unit>
        <trans-unit id="319b10cf51c7aaf0a0ad28a0d4b4f6c772504c25" translate="yes" xml:space="preserve">
          <source>If no file is specified and stdin is not the terminal, or if the file name '&lt;code&gt;-&lt;/code&gt;' is used, stdin will be read.</source>
          <target state="translated">Если файл не указан и stdin не является терминалом, или если используется имя файла ' &lt;code&gt;-&lt;/code&gt; ', будет прочитан stdin.</target>
        </trans-unit>
        <trans-unit id="536986c9ac77b0a65c848619315ad13a2f046d5c" translate="yes" xml:space="preserve">
          <source>If no process is specified, the most recently-used job is removed (like &lt;code&gt;bg&lt;/code&gt; and &lt;code&gt;fg&lt;/code&gt;). If one or more &lt;code&gt;PID&lt;/code&gt;s are specified, jobs with the specified process IDs are removed from the job list. Invalid jobs are ignored and a warning is printed.</source>
          <target state="translated">Если процесс не указан, последнее использованное задание удаляется (например, &lt;code&gt;bg&lt;/code&gt; и &lt;code&gt;fg&lt;/code&gt; ). Если указан один или несколько &lt;code&gt;PID&lt;/code&gt; , задания с указанными идентификаторами процесса удаляются из списка заданий. Недействительные задания игнорируются, и выводится предупреждение.</target>
        </trans-unit>
        <trans-unit id="713bf8682430a51e2b7af1a6d836f8e75fd1bdaa" translate="yes" xml:space="preserve">
          <source>If no variable names are provided, &lt;code&gt;read&lt;/code&gt; enters a special case that simply provides redirection from standard input to standard output, useful for command substitution. For instance, the fish shell command below can be used to read data that should be provided via a command line argument from the console instead of hardcoding it in the command itself, allowing the command to both be reused as-is in various contexts with different input values and preventing possibly sensitive text from being included in the shell history:</source>
          <target state="translated">Если имена переменных не указаны, &lt;code&gt;read&lt;/code&gt; входит в особый случай, который просто обеспечивает перенаправление со стандартного ввода на стандартный вывод, что полезно для подстановки команд. Например, приведенная ниже команда рыбной оболочки может использоваться для чтения данных, которые должны быть предоставлены с помощью аргумента командной строки из консоли, вместо того, чтобы жестко кодировать их в самой команде, что позволяет повторно использовать обе команды как есть в различных контекстах с разными входные значения и предотвращение включения потенциально конфиденциального текста в историю оболочки:</target>
        </trans-unit>
        <trans-unit id="f6b617c0f8612fdf2ea16aba5ec62984acf5c44a" translate="yes" xml:space="preserve">
          <source>If only 123 and 789 exist, it will still background them and print an error about 456.</source>
          <target state="translated">Если существует только 123 и 789,он все равно будет их фоном и распечатает ошибку около 456.</target>
        </trans-unit>
        <trans-unit id="e5b23704e06de8e7cf41b466203c3d1a05734047" translate="yes" xml:space="preserve">
          <source>If set is called with no arguments, the names and values of all shell variables are printed in sorted order. If some of the scope or export flags have been given, only the variables matching the specified scope are printed.</source>
          <target state="translated">Если set вызывается без аргументов,то имена и значения всех переменных оболочки выводятся в отсортированном порядке.Если заданы некоторые флаги области видимости или экспорта,то печатаются только переменные,соответствующие заданной области видимости.</target>
        </trans-unit>
        <trans-unit id="302a7adb7b2bb424535b98eb0c4ef6539ea7cb20" translate="yes" xml:space="preserve">
          <source>If terminfo reports 256 color support for a terminal, support will always be enabled. To debug color palette problems, &lt;code&gt;tput colors&lt;/code&gt; may be useful to see the number of colors in terminfo for a terminal. Fish launched as &lt;code&gt;fish -d2&lt;/code&gt; will include diagnostic messages that indicate the color support mode in use.</source>
          <target state="translated">Если terminfo сообщает о поддержке 256 цветов для терминала, поддержка всегда будет включена. Для отладки проблем с цветовой палитрой может быть полезно использовать &lt;code&gt;tput colors&lt;/code&gt; , чтобы увидеть количество цветов в terminfo для терминала. Fish, запущенная как &lt;code&gt;fish -d2&lt;/code&gt; , будет включать диагностические сообщения, указывающие на используемый режим поддержки цвета.</target>
        </trans-unit>
        <trans-unit id="34986c35bab0e2df661c76619902534fb332f46c" translate="yes" xml:space="preserve">
          <source>If that directory traversal is taking a long time, you can &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; out of it.</source>
          <target state="translated">Если обход каталогов занимает много времени, вы можете &lt;em&gt;контролировать&lt;/em&gt; - &lt;b&gt;C&lt;/b&gt; из него.</target>
        </trans-unit>
        <trans-unit id="e3d023db5ee6df47941a2ca566209f059001722c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$VISUAL&lt;/code&gt; environment variable is set, it will be used as the program to edit the function. If &lt;code&gt;$VISUAL&lt;/code&gt; is unset but &lt;code&gt;$EDITOR&lt;/code&gt; is set, that will be used. Otherwise, a built-in editor will be used. Note that to enter a literal newline using the built-in editor you should press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Enter&lt;/b&gt;. Pressing &lt;b&gt;Enter&lt;/b&gt; signals that you are done editing the function. This does not apply to an external editor like emacs or vim.</source>
          <target state="translated">Если установлена переменная среды &lt;code&gt;$VISUAL&lt;/code&gt; , она будет использоваться в качестве программы для редактирования функции. Если &lt;code&gt;$VISUAL&lt;/code&gt; не задан, но установлен &lt;code&gt;$EDITOR&lt;/code&gt; , он будет использоваться. В противном случае будет использоваться встроенный редактор. Обратите внимание, что для ввода буквального символа новой строки с помощью встроенного редактора необходимо нажать &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Enter&lt;/b&gt; . Нажатие &lt;b&gt;Enter&lt;/b&gt; сигнализирует о завершении редактирования функции. Это не относится к внешнему редактору, например emacs или vim.</target>
        </trans-unit>
        <trans-unit id="e8fb943c750f92e3917384bc05f81b775bd8db88" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--delimiter&lt;/code&gt; argument is not given, the variable &lt;code&gt;IFS&lt;/code&gt; is used as a list of characters to split on. Relying on the use of &lt;code&gt;IFS&lt;/code&gt; is deprecated and this behaviour will be removed in future versions. The default value of &lt;code&gt;IFS&lt;/code&gt; contains space, tab and newline characters. As a special case, if &lt;code&gt;IFS&lt;/code&gt; is set to the empty string, each character of the input is considered a separate token.</source>
          <target state="translated">Если аргумент &lt;code&gt;--delimiter&lt;/code&gt; не указан, переменная &lt;code&gt;IFS&lt;/code&gt; используется как список символов для разделения. Использование &lt;code&gt;IFS&lt;/code&gt; не рекомендуется, и это поведение будет удалено в будущих версиях. Значение по умолчанию &lt;code&gt;IFS&lt;/code&gt; содержит символы пробела, табуляции и новой строки. В качестве особого случая, если &lt;code&gt;IFS&lt;/code&gt; установлен на пустую строку, каждый символ ввода считается отдельным токеном.</target>
        </trans-unit>
        <trans-unit id="b9a1bc2ff2f56d3990f495529faa7ba44ead0455" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-k&lt;/code&gt; switch is used, the name of the key (such as 'down', 'up' or 'backspace') is used instead of a sequence. The names used are the same as the corresponding curses variables, but without the 'key_' prefix. (See &lt;code&gt;terminfo(5)&lt;/code&gt; for more information, or use &lt;code&gt;bind --key-names&lt;/code&gt; for a list of all available named keys.) If used in conjunction with the &lt;code&gt;-s&lt;/code&gt; switch, &lt;code&gt;bind&lt;/code&gt; will silently ignore bindings to named keys that are not found in termcap for the current &lt;code&gt;$TERMINAL&lt;/code&gt;, otherwise a warning is emitted.</source>
          <target state="translated">Если используется переключатель &lt;code&gt;-k&lt;/code&gt; , вместо последовательности используется имя клавиши (например, &amp;laquo;вниз&amp;raquo;, &amp;laquo;вверх&amp;raquo; или &amp;laquo;backspace&amp;raquo;). Используемые имена такие же, как у соответствующих переменных curses, но без префикса &amp;laquo;key_&amp;raquo;. (См. &lt;code&gt;terminfo(5)&lt;/code&gt; для получения дополнительной информации или используйте &lt;code&gt;bind --key-names&lt;/code&gt; для списка всех доступных именованных ключей.) Если используется вместе с переключателем &lt;code&gt;-s&lt;/code&gt; , &lt;code&gt;bind&lt;/code&gt; будет молча игнорировать привязки к именованным клавишам, которые не найдены в termcap для текущего &lt;code&gt;$TERMINAL&lt;/code&gt; , в противном случае выдается предупреждение.</target>
        </trans-unit>
        <trans-unit id="1d7b9b3be6cec368c8849bf11af8487da853a633" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; flag is specified, the current directory history is also displayed.</source>
          <target state="translated">Если &lt;code&gt;--list&lt;/code&gt; флаг &lt;code&gt;-l&lt;/code&gt; или --list , также отображается история текущего каталога.</target>
        </trans-unit>
        <trans-unit id="4cfc35a3a98ed01dd389efdde71deb0bf3c6669a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--list&lt;/code&gt; flag is specified, the current history is also displayed.</source>
          <target state="translated">Если &lt;code&gt;--list&lt;/code&gt; флаг &lt;code&gt;-l&lt;/code&gt; или --list , также отображается текущая история.</target>
        </trans-unit>
        <trans-unit id="492a67bd7712dda8e66c7c5fc44c0836f4b18f3a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-n&lt;/code&gt; / &lt;code&gt;--any&lt;/code&gt; flag is provided, the command returns as soon as the first job completes. If it is not provided, it returns after all jobs complete.</source>
          <target state="translated">Если &lt;code&gt;--any&lt;/code&gt; флаг &lt;code&gt;-n&lt;/code&gt; / --any , команда вернется, как только будет завершено первое задание. Если он не указан, он возвращается после завершения всех заданий.</target>
        </trans-unit>
        <trans-unit id="63b9207ee5d979afeb85211115a3c6ffa7012a71" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/tmp&lt;/code&gt; directory exists, copy the &lt;code&gt;/etc/motd&lt;/code&gt; file to it:</source>
          <target state="translated">Если каталог &lt;code&gt;/tmp&lt;/code&gt; существует, скопируйте в него файл &lt;code&gt;/etc/motd&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c3b856c7f49407f5bd18390ec22c0a975e0942a6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;BROWSER&lt;/code&gt; environment variable is set, it will be used as the name of the web browser to open instead of the system default.</source>
          <target state="translated">Если установлена переменная среды &lt;code&gt;BROWSER&lt;/code&gt; , она будет использоваться в качестве имени открываемого веб-браузера вместо имени системы по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3debf54dad8f4dc6d939e041eacf2dbfc04ad3d0" translate="yes" xml:space="preserve">
          <source>If the BROWSER environment variable is set, it will be used to display the documentation. Otherwise, fish will search for a suitable browser.</source>
          <target state="translated">Если переменная окружения BROWSER установлена,она будет использоваться для отображения документации.В противном случае рыба будет искать подходящий браузер.</target>
        </trans-unit>
        <trans-unit id="aa6fc1ea4246a9f77c10ddff36e9849dd9022bcd" translate="yes" xml:space="preserve">
          <source>If the above code was run with &lt;code&gt;$animal&lt;/code&gt; set to &lt;code&gt;whale&lt;/code&gt;, the output would be &lt;code&gt;mammal&lt;/code&gt;.</source>
          <target state="translated">Если бы вышеприведенный код был запущен с параметром &lt;code&gt;$animal&lt;/code&gt; установленным на &lt;code&gt;whale&lt;/code&gt; , результатом было бы &lt;code&gt;mammal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d75d0af6becad51e324987bba4dbf96c51e8300a" translate="yes" xml:space="preserve">
          <source>If the alias has the same name as the aliased command, it is necessary to prefix the call to the program with &lt;code&gt;command&lt;/code&gt; in order to tell fish that the function should not call itself, but rather a command with the same name. Failing to do so will cause infinite recursion bugs.</source>
          <target state="translated">Если псевдоним имеет то же имя, что и команда с псевдонимом, необходимо добавить к вызову программы &lt;code&gt;command&lt;/code&gt; , чтобы сообщить Fish, что функция должна вызывать не саму себя, а команду с тем же именем. Несоблюдение этого правила приведет к бесконечным ошибкам рекурсии.</target>
        </trans-unit>
        <trans-unit id="ad3ed0aa46a2e24462a85265faa22a817cd5bf4f" translate="yes" xml:space="preserve">
          <source>If the argument you want is far back in history (e.g. 2 lines back - that's a lot of words!), type any part of it and then press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt;. This will show only arguments containing that part and you will get what you want much faster. Try it out, this is very convenient!</source>
          <target state="translated">Если аргумент, который вам нужен, ушел из далекой истории (например, две строчки назад - это много слов!), Введите любую его часть и нажмите &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt; . Это покажет только аргументы, содержащие эту часть, и вы получите то, что хотите, намного быстрее. Попробуйте, это очень удобно!</target>
        </trans-unit>
        <trans-unit id="8b1303483eab8a0aafe5607e65c79febb8c3aca1" translate="yes" xml:space="preserve">
          <source>If the commandline contains</source>
          <target state="translated">Если командная строка содержит</target>
        </trans-unit>
        <trans-unit id="4b1c190c6ad0436a0fd3fb383f1281a2e816bf89" translate="yes" xml:space="preserve">
          <source>If the commandline reads &lt;code&gt;cd m&lt;/code&gt;, place the cursor over the &lt;code&gt;m&lt;/code&gt; character and press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;uarr;&lt;/b&gt; to search for previously typed words containing 'm'.</source>
          <target state="translated">Если в командной строке указано &lt;code&gt;cd m&lt;/code&gt; , поместите курсор над символом &lt;code&gt;m&lt;/code&gt; и нажмите &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;uarr;&lt;/b&gt; для поиска ранее набранных слов, содержащих &amp;laquo;m&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="aec97b1cdbedc052d45f0ca8a3886ba07331192c" translate="yes" xml:space="preserve">
          <source>If the current directory contains the files 'foo' and 'bar', the command &lt;code&gt;echo a(ls){1,2,3}&lt;/code&gt; will output 'abar1 abar2 abar3 afoo1 afoo2 afoo3'.</source>
          <target state="translated">Если текущий каталог содержит файлы &amp;laquo;foo&amp;raquo; и &amp;laquo;bar&amp;raquo;, команда &lt;code&gt;echo a(ls){1,2,3}&lt;/code&gt; выведет &amp;laquo;abar1 abar2 abar3 afoo1 afoo2 afoo3&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9ac01aa8bdf61c4705d1b573ca6b14e107487f86" translate="yes" xml:space="preserve">
          <source>If the expression is successfully evaluated and doesn't over/underflow or return NaN the return &lt;code&gt;status&lt;/code&gt; is zero (success) else one.</source>
          <target state="translated">Если выражение успешно вычислено и не переполняется / не переполняется и не возвращает NaN, &lt;code&gt;status&lt;/code&gt; возврата равен нулю (успех), иначе один.</target>
        </trans-unit>
        <trans-unit id="5cfff00b5bb7a05a9b5b06be91a9cc46be32a1f7" translate="yes" xml:space="preserve">
          <source>If the first and second parts are skipped, they are assumed to be &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;=&lt;/code&gt;, respectively. As an example, &lt;code&gt;r,u+w&lt;/code&gt; means all users should have read access and the file owner should also have write access.</source>
          <target state="translated">Если первая и вторая части пропущены, предполагается, что они равны &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;=&lt;/code&gt; соответственно. Например, &lt;code&gt;r,u+w&lt;/code&gt; означает, что все пользователи должны иметь доступ для чтения, а владелец файла также должен иметь доступ для записи.</target>
        </trans-unit>
        <trans-unit id="154cdf4f784ed79e1fcb74335c0c901b6cf4ac90" translate="yes" xml:space="preserve">
          <source>If the line you want is far back in the history, type any part of the line and then press Up one or more times. This will constrain the recall to lines that include this text, and you will get to the line you want much faster. This replaces &quot;!vi&quot;, &quot;!?bar.c&quot; and the like.</source>
          <target state="translated">Если нужная строка находится далеко в истории,напечатайте любую ее часть,а затем нажмите кнопку &quot;Вверх&quot; один или несколько раз.Это ограничит вызов строк,содержащих этот текст,и вы доберетесь до нужной вам строки намного быстрее.Это заменит &quot;!vi&quot;,&quot;!bar.c&quot; и тому подобное.</target>
        </trans-unit>
        <trans-unit id="70006a59c6935a4438f9d0040be162c8ee9ec5a8" translate="yes" xml:space="preserve">
          <source>If the list is visible, pressing control-S (or the &lt;code&gt;pager-toggle-search&lt;/code&gt; binding) will allow filtering the list. Shift-tab (or the &lt;code&gt;complete-and-search&lt;/code&gt; binding) will trigger completion with the search field immediately visible.</source>
          <target state="translated">Если список виден, нажатие Ctrl-S (или привязки &lt;code&gt;pager-toggle-search&lt;/code&gt; ) позволит фильтровать список. Shift-tab (или привязка &lt;code&gt;complete-and-search&lt;/code&gt; ) запускает завершение, и поле поиска сразу становится видимым.</target>
        </trans-unit>
        <trans-unit id="e4c01f00f1709a1d845be8af766e2896516906fa" translate="yes" xml:space="preserve">
          <source>If the path is invalid no translated path will be written to stdout and an error will be reported.</source>
          <target state="translated">Если путь недействителен,то ни один из переведенных путей не будет записан в stdout и будет сообщено об ошибке.</target>
        </trans-unit>
        <trans-unit id="e907fd3510899683ab1ac3f96d2aac1979d9258b" translate="yes" xml:space="preserve">
          <source>If the specified file descriptor is a tty, the exit status of the command is zero. Otherwise, the exit status is non-zero. No messages are printed to standard error.</source>
          <target state="translated">Если указанный файловый дескриптор равен tty,то статус выхода команды равен нулю.В противном случае статус выхода ненулевой.Никаких сообщений о стандартной ошибке не выводится.</target>
        </trans-unit>
        <trans-unit id="bd0e2ed527cbeaac8bf34e5481dc729ba00211c1" translate="yes" xml:space="preserve">
          <source>If the user enters any additional arguments after the function, they are inserted into the environment &lt;a href=&quot;index#variables-arrays&quot;&gt;variable array&lt;/a&gt;&lt;code&gt;$argv&lt;/code&gt;. If the &lt;code&gt;--argument-names&lt;/code&gt; option is provided, the arguments are also assigned to names specified in that option.</source>
          <target state="translated">Если пользователь вводит какие-либо дополнительные аргументы после функции, они вставляются в &lt;a href=&quot;index#variables-arrays&quot;&gt;массив переменных&lt;/a&gt; окружения &lt;code&gt;$argv&lt;/code&gt; . Если &lt;code&gt;--argument-names&lt;/code&gt; опция --argument-names , аргументы также назначаются именам, указанным в этой опции.</target>
        </trans-unit>
        <trans-unit id="89093e95575f5c91e69c231cc514a5f888c355b9" translate="yes" xml:space="preserve">
          <source>If the variable $animal contains the name of an animal, the following code would attempt to classify it:</source>
          <target state="translated">Если переменная $animal содержит имя животного,то следующий код попытается его классифицировать:</target>
        </trans-unit>
        <trans-unit id="081ef0f3bbeaf93e50b97aca197ba4dab7103ab9" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;MANPATH&lt;/code&gt; is defined and not empty, print the contents. (If &lt;code&gt;MANPATH&lt;/code&gt; is not defined, then it will expand to zero arguments, unless quoted.)</source>
          <target state="translated">Если переменная &lt;code&gt;MANPATH&lt;/code&gt; определена и не пуста, распечатайте ее содержимое. (Если &lt;code&gt;MANPATH&lt;/code&gt; не определен, он будет расширен до нуля аргументов, если не указан.)</target>
        </trans-unit>
        <trans-unit id="b85b340b71b7dd9ea477da93a9f45e28372572db" translate="yes" xml:space="preserve">
          <source>If the variable name is one or more array elements, such as &lt;code&gt;PATH[1 3 7]&lt;/code&gt;, only those array elements specified will be changed. If you specify a negative index when expanding or assigning to an array variable, the index will be calculated from the end of the array. For example, the index -1 means the last index of an array.</source>
          <target state="translated">Если имя переменной - один или несколько элементов массива, например &lt;code&gt;PATH[1 3 7]&lt;/code&gt; , будут изменены только указанные элементы массива. Если вы укажете отрицательный индекс при расширении или присвоении переменной массива, индекс будет вычисляться от конца массива. Например, индекс -1 означает последний индекс массива.</target>
        </trans-unit>
        <trans-unit id="788fcc2dc7b9ec9c743aa985b73d706a1c941ace" translate="yes" xml:space="preserve">
          <source>If there are multiple files with the same name in these directories, only the first will be executed. They are executed in order of their filename, sorted (like globs) in a natural order (i.e. &quot;01&quot; sorts before &quot;2&quot;).</source>
          <target state="translated">Если в этих каталогах имеется несколько файлов с одним и тем же именем,то будет выполнен только первый.Они выполняются в порядке имени файла,отсортированного (как глобусы)в естественном порядке (т.е.&quot;01&quot; сортируется перед &quot;2&quot;).</target>
        </trans-unit>
        <trans-unit id="37b3f6c1d9e2443aab8662a7a439797d66881a18" translate="yes" xml:space="preserve">
          <source>If there is no function called &lt;code&gt;NAME&lt;/code&gt; a new function will be created with the specified name</source>
          <target state="translated">Если нет функции с именем &lt;code&gt;NAME&lt;/code&gt; ,будет создана новая функция с указанным именем</target>
        </trans-unit>
        <trans-unit id="6d5cfe09681412194f4ba98b5cd9ee3fb9a19be4" translate="yes" xml:space="preserve">
          <source>If there is nothing between a brace and a comma or two commas, it's interpreted as an empty element.</source>
          <target state="translated">Если между скобкой и запятой или двумя запятыми ничего нет,это интерпретируется как пустой элемент.</target>
        </trans-unit>
        <trans-unit id="afe6214497e3e493ce7fed66861473c8f9d5c2d3" translate="yes" xml:space="preserve">
          <source>If there's more than one possibility, it will list them:</source>
          <target state="translated">Если есть несколько вариантов,он перечислит их:</target>
        </trans-unit>
        <trans-unit id="1b4ecf432926bdf9219384030390dce4a62ae339" translate="yes" xml:space="preserve">
          <source>If you are developing another program and would like to ship completions with your program, install them to the &quot;vendor&quot; completions directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable completionsdir fish&lt;/code&gt;.</source>
          <target state="translated">Если вы разрабатываете другую программу и хотите поставлять доработки вместе с вашей программой, установите их в каталог доработок &quot;vendor&quot;. Поскольку этот путь может отличаться от системы к системе, для обнаружения этого пути следует использовать платформу &lt;code&gt;pkgconfig&lt;/code&gt; с выводом команды &lt;code&gt;pkg-config --variable completionsdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e3bcc2c86a34d726c99da6041e118aebc6aab5" translate="yes" xml:space="preserve">
          <source>If you are developing another program, you may wish to install configuration which is run for all users of the fish shell on a system. This is discouraged; if not carefully written, they may have side-effects or slow the startup of the shell. Additionally, users of other shells will not benefit from the Fish-specific configuration. However, if they are absolutely required, you may install them to the &quot;vendor&quot; configuration directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable confdir fish&lt;/code&gt;.</source>
          <target state="translated">Если вы разрабатываете другую программу, вы можете захотеть установить конфигурацию, которая запускается для всех пользователей оболочки fish в системе. Это не приветствуется; если они не написаны тщательно, они могут иметь побочные эффекты или замедлять запуск оболочки. Кроме того, пользователи других оболочек не получат выгоды от конфигурации, специфичной для Fish. Однако, если они абсолютно необходимы, вы можете установить их в конфигурационный каталог &amp;laquo;vendor&amp;raquo;. Поскольку этот путь может отличаться от системы к системе, следует использовать платформу &lt;code&gt;pkgconfig&lt;/code&gt; для обнаружения этого пути с выводом команды &lt;code&gt;pkg-config --variable confdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4916db32b6aa8cbf9c1ffbb01d73d5df4a8870cc" translate="yes" xml:space="preserve">
          <source>If you are developing another program, you may wish to install functions which are available for all users of the fish shell on a system. They can be installed to the &quot;vendor&quot; functions directory. As this path may vary from system to system, the &lt;code&gt;pkgconfig&lt;/code&gt; framework should be used to discover this path with the output of &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt;.</source>
          <target state="translated">Если вы разрабатываете другую программу, вы можете установить функции, доступные для всех пользователей оболочки fish в системе. Их можно установить в каталог функций &quot;vendor&quot;. Поскольку этот путь может отличаться от системы к системе, следует использовать платформу &lt;code&gt;pkgconfig&lt;/code&gt; для обнаружения этого пути с выводом команды &lt;code&gt;pkg-config --variable functionsdir fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c8709afb8c37b08fcb75856aca6d9778e8772cd" translate="yes" xml:space="preserve">
          <source>If you are just interested in success or failure, you can run the command directly as the if-condition:</source>
          <target state="translated">Если вас интересует только успех или неудача,вы можете запустить команду непосредственно как условие if:</target>
        </trans-unit>
        <trans-unit id="6b4679db7ed1ee15be09b7a815eb852cdada744e" translate="yes" xml:space="preserve">
          <source>If you do not use any brackets, all the elements of the array will be written as separate items. This means you can easily iterate over an array using this syntax:</source>
          <target state="translated">Если не использовать скобки,то все элементы массива будут записываться как отдельные элементы.Это означает,что вы можете легко выполнить итерацию по массиву,используя данный синтаксис:</target>
        </trans-unit>
        <trans-unit id="21121c72874a1f506d3167db9734fb72635e8aba" translate="yes" xml:space="preserve">
          <source>If you do this via a function it should be defined with the &lt;code&gt;--no-scope-shadowing&lt;/code&gt; flag. Otherwise it won't have access to those variables.</source>
          <target state="translated">Если вы делаете это через функцию, она должна быть определена с помощью флага &lt;code&gt;--no-scope-shadowing&lt;/code&gt; . В противном случае у него не будет доступа к этим переменным.</target>
        </trans-unit>
        <trans-unit id="76fc284188c8102e752b1bddb9f0226a85c1fbff" translate="yes" xml:space="preserve">
          <source>If you have a question not answered by this documentation, there are several avenues for help:</source>
          <target state="translated">Если у вас есть вопрос,на который вы не ответили в этой документации,есть несколько способов получения помощи:</target>
        </trans-unit>
        <trans-unit id="d5d69fd8cf3faf8da11aa1c87838469a40522c72" translate="yes" xml:space="preserve">
          <source>If you have a strong understanding of other shells, and want to know what &lt;code&gt;fish&lt;/code&gt; does differently, search for the magic phrase &lt;em&gt;unlike other shells&lt;/em&gt;, which is used to call out important differences.</source>
          <target state="translated">Если вы хорошо разбираетесь в других раковинах и хотите знать, что &lt;code&gt;fish&lt;/code&gt; делает по-другому, поищите волшебную фразу, в &lt;em&gt;отличие от других раковин&lt;/em&gt; , которая используется для обозначения важных различий.</target>
        </trans-unit>
        <trans-unit id="d94e356f3d06bfc0847471bd8ac63c7fdd35e968" translate="yes" xml:space="preserve">
          <source>If you have an improvement for fish, you can submit it via the mailing list or the GitHub page.</source>
          <target state="translated">Если у Вас есть улучшение для рыбы,Вы можете отправить его через список рассылки или страницу GitHub.</target>
        </trans-unit>
        <trans-unit id="3c91aaa3641347d6b92a729c32a7d96c010b6da2" translate="yes" xml:space="preserve">
          <source>If you have written new completions for a common Unix command, please consider sharing your work by submitting it via the instructions in &lt;a href=&quot;#more-help&quot;&gt;Further help and development&lt;/a&gt;.</source>
          <target state="translated">Если вы написали новые дополнения для общей команды Unix, рассмотрите возможность поделиться своей работой, отправив ее с помощью инструкций в разделе &lt;a href=&quot;#more-help&quot;&gt;Дополнительная помощь и разработка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="801a4bfeff44c78289adc6da559907889b10b7ff" translate="yes" xml:space="preserve">
          <source>If you installed a prepackaged version of fish, the package manager should have already done this for you.</source>
          <target state="translated">Если вы установили фасованную версию рыбы,то менеджер пакетов должен был уже сделать это за вас.</target>
        </trans-unit>
        <trans-unit id="bacc9cf3f5b8aece5e2cb795329bd9e98f414229" translate="yes" xml:space="preserve">
          <source>If you installed fish manually (e.g. by compiling it, not by using a package manager), you first need to add fish to the list of shells by executing the following command (assuming you installed fish in /usr/local):</source>
          <target state="translated">Если вы устанавливали рыбу вручную (например,компилируя её,а не используя менеджер пакетов),то сначала нужно добавить рыбу в список оболочек,выполнив следующую команду (если вы установили рыбу в /usr/local):</target>
        </trans-unit>
        <trans-unit id="24dbcaa65ea45136e4556660a86f87890a258184" translate="yes" xml:space="preserve">
          <source>If you instead want to put a suspended job into the background, use the &lt;a href=&quot;commands#bg&quot;&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Если вместо этого вы хотите поместить приостановленное задание в фоновый режим, используйте команду &lt;a href=&quot;commands#bg&quot;&gt; &lt;code&gt;bg&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76575622923fc6960275a0372650f7e641f7d23c" translate="yes" xml:space="preserve">
          <source>If you prefer to use a different browser (other than as described above) for fish help, you can set the fish_help_browser variable. This variable may be set as an array, where the first element is the browser command and the rest are browser options.</source>
          <target state="translated">Если Вы предпочитаете использовать другой браузер (кроме описанного выше)для справки по рыбам,Вы можете установить переменную fish_help_browser.Эта переменная может быть установлена в виде массива,где первым элементом является команда браузера,а остальным-опции браузера.</target>
        </trans-unit>
        <trans-unit id="6b10dc2d52b83a3f3bcbb9eafde410131a7638e1" translate="yes" xml:space="preserve">
          <source>If you specify a negative index when expanding or assigning to an array variable, the index will be calculated from the end of the array. For example, the index -1 means the last index of an array.</source>
          <target state="translated">Если при расширении или присвоении переменной массива указать отрицательный индекс,то индекс будет вычисляться из конца массива.Например,индекс -1 означает последний индекс массива.</target>
        </trans-unit>
        <trans-unit id="bef2a5da408bc0ccc604bb6e7c2ada1e1e368d28" translate="yes" xml:space="preserve">
          <source>If you specify both &lt;code&gt;--prefix&lt;/code&gt; and &lt;code&gt;--contains&lt;/code&gt; the last flag seen is used.</source>
          <target state="translated">Если вы укажете и &lt;code&gt;--prefix&lt;/code&gt; , и &lt;code&gt;--contains&lt;/code&gt; , используется последний замеченный флаг.</target>
        </trans-unit>
        <trans-unit id="cfeb5cfbb4d7330298cd9ae2e7db448aa2300961" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--entire&lt;/code&gt; then each matching string is printed including any prefix or suffix not matched by the pattern (equivalent to &lt;code&gt;grep&lt;/code&gt; without the &lt;code&gt;-o&lt;/code&gt; flag). You can, obviously, achieve the same result by prepending and appending &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;.*&lt;/code&gt; depending on whether or not you have specified the &lt;code&gt;--regex&lt;/code&gt; flag. The &lt;code&gt;--entire&lt;/code&gt; flag is simply a way to avoid having to complicate the pattern in that fashion and make the intent of the &lt;code&gt;string match&lt;/code&gt; clearer. Without &lt;code&gt;--entire&lt;/code&gt; and &lt;code&gt;--regex&lt;/code&gt;, a PATTERN will need to match the entire STRING before it will be reported.</source>
          <target state="translated">Если вы укажете &lt;code&gt;-e&lt;/code&gt; или &lt;code&gt;--entire&lt;/code&gt; , то каждая соответствующая строка будет напечатана, включая любой префикс или суффикс, не совпадающие с шаблоном (эквивалентно &lt;code&gt;grep&lt;/code&gt; без флага &lt;code&gt;-o&lt;/code&gt; ). Вы можете, очевидно, достичь того же результата, добавив и добавив &lt;code&gt;*&lt;/code&gt; или &lt;code&gt;.*&lt;/code&gt; В зависимости от того, указали &lt;code&gt;--regex&lt;/code&gt; флаг --regex или нет . &lt;code&gt;--entire&lt;/code&gt; флаг просто способ избежать того , чтобы усложнить картину в том , что мода и сделать намерение &lt;code&gt;string match&lt;/code&gt; понятнее. Без &lt;code&gt;--entire&lt;/code&gt; и &lt;code&gt;--regex&lt;/code&gt; ШАБЛОН должен соответствовать всей СТРОКЕ, прежде чем о нем будет сообщено.</target>
        </trans-unit>
        <trans-unit id="22a9feadf64d822a318f10f2b4793d1a2316c159" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; flag then each input string is printed only if a replacement was done. This is useful where you would otherwise use this idiom: &lt;code&gt;a_cmd | string match pattern | string replace pattern new_pattern&lt;/code&gt;. You can instead just write &lt;code&gt;a_cmd | string replace --filter pattern new_pattern&lt;/code&gt;.</source>
          <target state="translated">Если вы укажете флаг &lt;code&gt;-f&lt;/code&gt; или &lt;code&gt;--filter&lt;/code&gt; , то каждая входная строка будет напечатана только в том случае, если была произведена замена. Это полезно там, где в противном случае вы бы использовали эту идиому: &lt;code&gt;a_cmd | string match pattern | string replace pattern new_pattern&lt;/code&gt; . Вместо этого вы можете просто написать &lt;code&gt;a_cmd | string replace --filter pattern new_pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e54ae0a24762829d8f55a86df97428a46a48f0" translate="yes" xml:space="preserve">
          <source>If you want to add the directory &lt;code&gt;~/linux/bin&lt;/code&gt; to your PATH variable when using a login shell, add the following to your &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file:</source>
          <target state="translated">Если вы хотите добавить каталог &lt;code&gt;~/linux/bin&lt;/code&gt; в свою переменную PATH при использовании оболочки входа, добавьте в файл &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="3226bbbfea92d52214a04066c17b75561d8b1dfd" translate="yes" xml:space="preserve">
          <source>If you want to find out more about the echo command used above, read the manual page for the echo command by writing: &lt;code&gt;man echo&lt;/code&gt;</source>
          <target state="translated">Если вы хотите узнать больше об использованной выше команде echo, прочтите страницу руководства по команде echo, написав: &lt;code&gt;man echo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6b8934a463057ab4cbebc293cbcc2bde13fda93" translate="yes" xml:space="preserve">
          <source>If you want to learn more about fish, there is &lt;a href=&quot;index&quot;&gt;lots of detailed documentation&lt;/a&gt;, an &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;official mailing list&lt;/a&gt;, the IRC channel #fish on &lt;code&gt;irc.oftc.net&lt;/code&gt;, and the &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;github page&lt;/a&gt;.</source>
          <target state="translated">Если вы хотите узнать больше о Fish, есть &lt;a href=&quot;index&quot;&gt;много подробной документации&lt;/a&gt; , &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;официальный список рассылки&lt;/a&gt; , IRC-канал #fish на &lt;code&gt;irc.oftc.net&lt;/code&gt; и &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;страница&lt;/a&gt; на github .</target>
        </trans-unit>
        <trans-unit id="19d1a8c24236cf7d05190b1115ef30aaad303cfb" translate="yes" xml:space="preserve">
          <source>If you want to make your command line more productive, more useful, and more fun, without learning a bunch of arcane syntax and configuration options, then &lt;code&gt;fish&lt;/code&gt; might be just what you're looking for!</source>
          <target state="translated">Если вы хотите сделать свою командную строку более продуктивной, полезной и увлекательной, не изучая кучу загадочного синтаксиса и параметров конфигурации, то &lt;code&gt;fish&lt;/code&gt; может быть именно тем, что вы ищете!</target>
        </trans-unit>
        <trans-unit id="817bbc583c325d82f70d5e4e389c9fb588a7021e" translate="yes" xml:space="preserve">
          <source>If you want to reuse several arguments from the same line (&quot;!!:3*&quot; and the like), consider recalling the whole line and removing what you don't need (&lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;D&lt;/b&gt; and &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Backspace&lt;/b&gt; are your friends).</source>
          <target state="translated">Если вы хотите повторно использовать несколько аргументов из одной и той же строки (&amp;laquo;!!: 3 *&amp;raquo; и т.п.), подумайте о том, чтобы вызвать всю строку и удалить то, что вам не нужно ( &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;D&lt;/b&gt; и &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Backspace&lt;/b&gt; - ваши друзья).</target>
        </trans-unit>
        <trans-unit id="17b2c50714eca6eb3a1c4f418309af6c45fec63f" translate="yes" xml:space="preserve">
          <source>If you want to run a set of commands when &lt;code&gt;fish&lt;/code&gt; exits, use an &lt;a href=&quot;#event&quot;&gt;event handler&lt;/a&gt; that is triggered by the exit of the shell:</source>
          <target state="translated">Если вы хотите запустить набор команд при выходе &lt;code&gt;fish&lt;/code&gt; , используйте &lt;a href=&quot;#event&quot;&gt;обработчик событий,&lt;/a&gt; который запускается при выходе из оболочки:</target>
        </trans-unit>
        <trans-unit id="840dcfc4db83e11261bb160a1f0912d853943c4b" translate="yes" xml:space="preserve">
          <source>If you wish to use fish (or any other shell) as your default shell, you need to enter your new shell's executable &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; in two places:</source>
          <target state="translated">Если вы хотите использовать fish (или любую другую оболочку) в качестве оболочки по умолчанию, вам необходимо ввести исполняемый файл новой оболочки &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; в двух местах:</target>
        </trans-unit>
        <trans-unit id="3a88aaa448eb4ccc5d7c16b222b1aaafa2e3553e" translate="yes" xml:space="preserve">
          <source>If your command does not need access to stdin, consider using &lt;code&gt;source&lt;/code&gt; instead.</source>
          <target state="translated">Если вашей команде не нужен доступ к стандартному вводу, рассмотрите возможность использования вместо этого &lt;code&gt;source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20b7e02e5dced2f235b74397e5dd8fd6678ecaa1" translate="yes" xml:space="preserve">
          <source>If, in the example above, $WORD is undefined or an empty list, the &quot;s&quot; is not printed. However, it is printed, if $WORD is the empty string.</source>
          <target state="translated">Если в приведенном выше примере $WORD не определен или пустой список,&quot;s&quot; не печатается.Однако,если $WORD-пустая строка,она будет выведена.</target>
        </trans-unit>
        <trans-unit id="cd4f982a2dfbfb7a494a0fcc11edc18044fd3ee7" translate="yes" xml:space="preserve">
          <source>Import the abbreviations defined on another_host over SSH.</source>
          <target state="translated">Импортируйте через SSH аббревиатуры,определенные на другом_хосте.</target>
        </trans-unit>
        <trans-unit id="99b7d1b47f67f33906cafe0ea45bb9a7ae9de792" translate="yes" xml:space="preserve">
          <source>In addition, when adding abbreviations:</source>
          <target state="translated">Кроме того,при добавлении аббревиатур:</target>
        </trans-unit>
        <trans-unit id="b11dd25d3b50e779c52a3bed6755a9de86e7cc31" translate="yes" xml:space="preserve">
          <source>In assignment mode, &lt;code&gt;set&lt;/code&gt; does not modify the exit status. This allows simultaneous capture of the output and exit status of a subcommand, e.g. &lt;code&gt;if set output (command)&lt;/code&gt;. In query mode, the exit status is the number of variables that were not found. In erase mode, &lt;code&gt;set&lt;/code&gt; exits with a zero exit status in case of success, with a non-zero exit status if the commandline was invalid, if the variable was write-protected or if the variable did not exist.</source>
          <target state="translated">В режиме назначения &lt;code&gt;set&lt;/code&gt; не изменяет статус выхода. Это позволяет одновременно захватить вывод и статус выхода подкоманды, например, &lt;code&gt;if set output (command)&lt;/code&gt; . В режиме запроса статус выхода - это количество переменных, которые не были найдены. В режиме стирания &lt;code&gt;set&lt;/code&gt; завершается с нулевым статусом выхода в случае успеха, с ненулевым статусом выхода, если командная строка недействительна, если переменная защищена от записи или если переменная не существует.</target>
        </trans-unit>
        <trans-unit id="997bbb76e726398decafa893aef44209d89a5923" translate="yes" xml:space="preserve">
          <source>In bash, this would have created two directories &quot;Mister&quot; and &quot;Noodle&quot;. In &lt;code&gt;fish&lt;/code&gt;, it created only one: the variable had the value &quot;Mister Noodle&quot;, so that is the argument that was passed to &lt;code&gt;mkdir&lt;/code&gt;, spaces and all. Other shells use the term &quot;arrays&quot;, rather than lists.</source>
          <target state="translated">В bash это привело бы к созданию двух каталогов &amp;laquo;Мистер&amp;raquo; и &amp;laquo;Лапша&amp;raquo;. В &lt;code&gt;fish&lt;/code&gt; он создал только один: переменная имела значение &amp;laquo;Mister Noodle&amp;raquo;, так что это аргумент, который был передан в &lt;code&gt;mkdir&lt;/code&gt; , пробелы и все остальное . В других оболочках используется термин &amp;laquo;массивы&amp;raquo;, а не списки.</target>
        </trans-unit>
        <trans-unit id="febdce18a02406c3f663a8114d7d2b52f9d2f956" translate="yes" xml:space="preserve">
          <source>In cases such as this, one can use &lt;code&gt;command&lt;/code&gt;&lt;code&gt;test&lt;/code&gt; to explicitly use the system's standalone &lt;code&gt;test&lt;/code&gt; rather than this &lt;code&gt;builtin&lt;/code&gt;&lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">В таких случаях можно использовать &lt;code&gt;command&lt;/code&gt; &lt;code&gt;test&lt;/code&gt; , чтобы явно использовать автономный &lt;code&gt;test&lt;/code&gt; системы, а не этот &lt;code&gt;builtin&lt;/code&gt; &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8150d5ade4961a7346cfe9d6f7af40451a0e9eba" translate="yes" xml:space="preserve">
          <source>In erase mode, if variable indices are specified, only the specified slices of the array variable will be erased.</source>
          <target state="translated">В режиме стирания,если указаны индексы переменных,будут удалены только указанные срезы переменной массива.</target>
        </trans-unit>
        <trans-unit id="d285383bee7174093582f84311886d8e77b2597e" translate="yes" xml:space="preserve">
          <source>In fish versions prior to 2.3.0 the &lt;code&gt;$argv&lt;/code&gt; variable would have a single element (the name of the sourced file) if no arguments are present. Otherwise it would contain arguments without the name of the sourced file. That behavior was very confusing and unlike other shells such as bash and zsh.</source>
          <target state="translated">В версиях fish до 2.3.0 переменная &lt;code&gt;$argv&lt;/code&gt; будет иметь единственный элемент (имя исходного файла), если аргументы отсутствуют. В противном случае он будет содержать аргументы без имени исходного файла. Такое поведение очень сбивало с толку и отличалось от других оболочек, таких как bash и zsh.</target>
        </trans-unit>
        <trans-unit id="b6167c9c2e21f8c5d664cda565772acda6aa5a44" translate="yes" xml:space="preserve">
          <source>In fish versions prior to 2.5.0 it was possible to create a function named &lt;code&gt;-&lt;/code&gt; that would do &lt;code&gt;cd -&lt;/code&gt;. Changes in the 2.5.0 release included several bug fixes that enforce the rule that a bare hyphen is not a valid function (or variable) name. However, you can achieve the same effect via an abbreviation:</source>
          <target state="translated">В версиях fish до 2.5.0 можно было создать функцию с именем &lt;code&gt;-&lt;/code&gt; которая выполняла бы &lt;code&gt;cd -&lt;/code&gt; . Изменения в выпуске 2.5.0 включали несколько исправлений ошибок, которые применяют правило, согласно которому дефис не является допустимым именем функции (или переменной). Однако вы можете добиться того же эффекта с помощью сокращения:</target>
        </trans-unit>
        <trans-unit id="c82580c4fc0344cd7e4b4c3bbc7ac9db12a80d91" translate="yes" xml:space="preserve">
          <source>In functions, &lt;code&gt;block&lt;/code&gt; can be useful while performing work that should not be interrupted by the shell.</source>
          <target state="translated">В функциях &lt;code&gt;block&lt;/code&gt; может быть полезен при выполнении работы, которая не должна прерываться оболочкой.</target>
        </trans-unit>
        <trans-unit id="89ff03b555073b2736f671e958968657fb6eb4ed" translate="yes" xml:space="preserve">
          <source>In general, special characters are special by default, so &lt;code&gt;a+&lt;/code&gt; matches one or more &quot;a&quot;s, while &lt;code&gt;a\+&lt;/code&gt; matches an &quot;a&quot; and then a &quot;+&quot;. &lt;code&gt;(a+)&lt;/code&gt; matches one or more &quot;a&quot;s in a capturing group (&lt;code&gt;(?:XXXX)&lt;/code&gt; denotes a non-capturing group). For the replacement parameter of &lt;code&gt;replace&lt;/code&gt;, &lt;code&gt;$n&lt;/code&gt; refers to the n-th group of the match. In the match parameter, &lt;code&gt;\n&lt;/code&gt; (e.g. &lt;code&gt;\1&lt;/code&gt;) refers back to groups.</source>
          <target state="translated">Как правило, специальные символы по умолчанию являются специальными, поэтому &lt;code&gt;a+&lt;/code&gt; соответствует одному или нескольким буквам &amp;laquo;а&amp;raquo;, а &lt;code&gt;a\+&lt;/code&gt; соответствует &amp;laquo;а&amp;raquo;, а затем &amp;laquo;+&amp;raquo;. &lt;code&gt;(a+)&lt;/code&gt; соответствует одному или нескольким &quot;a&quot; в группе захвата ( &lt;code&gt;(?:XXXX)&lt;/code&gt; обозначает группу без захвата). Для параметра замещения &lt;code&gt;replace&lt;/code&gt; , &lt;code&gt;$n&lt;/code&gt; относится к п-й группе матча. В параметре соответствия &lt;code&gt;\n&lt;/code&gt; (например, &lt;code&gt;\1&lt;/code&gt; ) относится к группам.</target>
        </trans-unit>
        <trans-unit id="52f151afd8c58f05083781d29e38adf8acc285ad" translate="yes" xml:space="preserve">
          <source>In order to change your default shell, type:</source>
          <target state="translated">Чтобы изменить оболочку по умолчанию,напечатайте:</target>
        </trans-unit>
        <trans-unit id="7744f887d10f15ca76ae2472bb145fdd5fdbdb57" translate="yes" xml:space="preserve">
          <source>In order to protect the shell from consuming too many system resources, &lt;code&gt;read&lt;/code&gt; will only consume a maximum of 10 MiB (1048576 bytes); if the terminator is not reached before this limit then VARIABLE is set to empty and the exit status is set to 122. This limit can be altered with the &lt;code&gt;fish_read_limit&lt;/code&gt; variable. If set to 0 (zero), the limit is removed.</source>
          <target state="translated">Чтобы защитить оболочку от использования слишком большого количества системных ресурсов, &lt;code&gt;read&lt;/code&gt; будет занимать не более 10 МБ (1048576 байт); если терминатор не достигнут до этого предела, тогда VARIABLE устанавливается на пустое, а статус выхода устанавливается на 122. Это ограничение можно изменить с &lt;code&gt;fish_read_limit&lt;/code&gt; переменной fish_read_limit . Если установлено значение 0 (ноль), ограничение снимается.</target>
        </trans-unit>
        <trans-unit id="cfb4b17946050d9f509c4bdb763f770ebb06687a" translate="yes" xml:space="preserve">
          <source>In query mode, the scope to be examined can be specified.</source>
          <target state="translated">В режиме запроса можно указать область исследования.</target>
        </trans-unit>
        <trans-unit id="89d4f28841a1759ddcc1b8894ac4045a23593691" translate="yes" xml:space="preserve">
          <source>In the following code, all output is redirected to the file out.html.</source>
          <target state="translated">В следующем коде все выходные данные перенаправляются в файл out.html.</target>
        </trans-unit>
        <trans-unit id="67bf59485bd852b33bf0045b83854687c5fd2923" translate="yes" xml:space="preserve">
          <source>In the following examples if a flag is not seen when parsing the arguments then the corresponding _flag_X var(s) will not be set.</source>
          <target state="translated">В следующих примерах,если при разборе аргументов флаг не виден,то соответствующая _flag_X var(s)не будет установлена.</target>
        </trans-unit>
        <trans-unit id="b18679bb485a969aa3729a892fbc342e477da1e5" translate="yes" xml:space="preserve">
          <source>In the overwhelming majority of cases, splitting on spaces is unwanted, so this is an improvement.</source>
          <target state="translated">В подавляющем большинстве случаев разделение на пространства является нежелательным,поэтому это улучшение.</target>
        </trans-unit>
        <trans-unit id="40d4bef31048f07adb0a3c1f574c30c70992f0e5" translate="yes" xml:space="preserve">
          <source>In these cases use &lt;code&gt;string split &quot; &quot;&lt;/code&gt; like:</source>
          <target state="translated">В этих случаях используйте &lt;code&gt;string split &quot; &quot;&lt;/code&gt; например:</target>
        </trans-unit>
        <trans-unit id="e86e38a4028df2e1d281758cf65343b3a55357c4" translate="yes" xml:space="preserve">
          <source>In these cases, the expansion eliminates the string, as a result of the implicit &lt;a href=&quot;#cartesian-product&quot;&gt;cartesian product&lt;/a&gt;.</source>
          <target state="translated">В этих случаях раскрытие исключает строку в результате неявного &lt;a href=&quot;#cartesian-product&quot;&gt;декартова произведения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a96781a5a37dbe8375812a63f70f63e6201fe8ae" translate="yes" xml:space="preserve">
          <source>Incorrect use of output redirects</source>
          <target state="translated">Неправильное использование выходных перенаправлений</target>
        </trans-unit>
        <trans-unit id="00039aeb76d249d44e4bf3ba01d88ffc368e8bd4" translate="yes" xml:space="preserve">
          <source>Index range expansion</source>
          <target state="translated">Расширение диапазона индекса</target>
        </trans-unit>
        <trans-unit id="6fb7f6ce1f52c7d40f5bab615e431e3f8551d458" translate="yes" xml:space="preserve">
          <source>Initialization files</source>
          <target state="translated">Файлы инициализации</target>
        </trans-unit>
        <trans-unit id="2a06266a915eac92808f8af015840d61f777058b" translate="yes" xml:space="preserve">
          <source>Input/Output (IO) redirection</source>
          <target state="translated">Переадресация входа/выхода (IO)</target>
        </trans-unit>
        <trans-unit id="cc03501ba8e2728a6aa8f006cb5c7941d732153b" translate="yes" xml:space="preserve">
          <source>Insert mode</source>
          <target state="translated">Режим вставки</target>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="c62c2864f20a2be4aa0393bfb86357685145de0e" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;complete&lt;/code&gt; multiple times for the same command adds the new definitions on top of any existing completions defined for the command.</source>
          <target state="translated">Многократный вызов &lt;code&gt;complete&lt;/code&gt; для одной и той же команды добавляет новые определения поверх всех существующих завершений, определенных для команды.</target>
        </trans-unit>
        <trans-unit id="83c3b240dba13d15ae7f53c1a501f0c631e4c4fe" translate="yes" xml:space="preserve">
          <source>It is also possible to add all emacs-mode bindings to vi-mode by using something like</source>
          <target state="translated">Также можно добавить все привязки emacs-mode в vi-mode,используя что-то вроде</target>
        </trans-unit>
        <trans-unit id="8ab84d80263900ba9d5b235b1f2ea80519e28b73" translate="yes" xml:space="preserve">
          <source>It is also possible to set or erase individual elements of an array:</source>
          <target state="translated">Также можно установить или стереть отдельные элементы массива:</target>
        </trans-unit>
        <trans-unit id="5d526954a8bce879648c1f8388f9dcd5c2cf78df" translate="yes" xml:space="preserve">
          <source>It is common to want to validate the the value provided for an option satisfies some criteria. For example, that it is a valid integer within a specific range. You can always do this after &lt;code&gt;argparse&lt;/code&gt; returns but you can also request that &lt;code&gt;argparse&lt;/code&gt; perform the validation by executing arbitrary fish script. To do so simply append an &lt;code&gt;!&lt;/code&gt; (exclamation-mark) then the fish script to be run. When that code is executed three vars will be defined:</source>
          <target state="translated">Обычно требуется проверить, удовлетворяет ли значение, предоставленное для параметра, некоторым критериям. Например, что это действительное целое число в определенном диапазоне. Вы всегда можете сделать это после &lt;code&gt;argparse&lt;/code&gt; но вы также можете запросить, чтобы &lt;code&gt;argparse&lt;/code&gt; выполнил проверку, выполнив произвольный сценарий Fish . Для этого просто добавьте &lt;code&gt;!&lt;/code&gt; (восклицательный знак), затем запускаемый скрипт рыбы. Когда этот код будет выполнен, будут определены три переменных:</target>
        </trans-unit>
        <trans-unit id="a71bcd2264c669eb00c671521098fb03d224a747" translate="yes" xml:space="preserve">
          <source>It is possible to directly create functions and variables in &lt;code&gt;config.fish&lt;/code&gt; file, using the commands shown above. For example:</source>
          <target state="translated">Можно напрямую создавать функции и переменные в файле &lt;code&gt;config.fish&lt;/code&gt; , используя команды, показанные выше. Например:</target>
        </trans-unit>
        <trans-unit id="83c56d7ebd2ae7a42fad58d3fe21565a95290624" translate="yes" xml:space="preserve">
          <source>It is usually added inside of a conditional block such as an &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; statement or a &lt;a href=&quot;#switch&quot;&gt;switch&lt;/a&gt; statement to conditionally stop the executing function and return to the caller, but it can also be used to specify the exit status of a function.</source>
          <target state="translated">Обычно он добавляется внутри условного блока, такого как оператор &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; или оператор &lt;a href=&quot;#switch&quot;&gt;switch,&lt;/a&gt; чтобы условно остановить выполняющуюся функцию и вернуться к вызывающей стороне, но его также можно использовать для указания статуса выхода функции.</target>
        </trans-unit>
        <trans-unit id="cefa92c853442bbe4dd3a6ef0bacadea8c59bfbd" translate="yes" xml:space="preserve">
          <source>It is very important that function definition files only contain the definition for the specified function and nothing else. Otherwise, it is possible that autoloading a function files requires that the function already be loaded, which creates a circular dependency.</source>
          <target state="translated">Очень важно,чтобы файлы определения функций содержали только определение для указанной функции и ничего больше.В противном случае,возможно,что автозагрузка файлов функции требует,чтобы функция уже была загружена,что создает круговую зависимость.</target>
        </trans-unit>
        <trans-unit id="13749347248c90340a66276ab0e48e071806f943" translate="yes" xml:space="preserve">
          <source>It knows about paths and options:</source>
          <target state="translated">Он знает о путях и вариантах:</target>
        </trans-unit>
        <trans-unit id="f51b747a62fc1665fa16726f0cc05a908bd9ced6" translate="yes" xml:space="preserve">
          <source>It will print &lt;code&gt;xa b c x&lt;/code&gt;. But if you do</source>
          <target state="translated">Он напечатает &lt;code&gt;xa b c x&lt;/code&gt; . Но если вы это сделаете</target>
        </trans-unit>
        <trans-unit id="784cf5b2d3ebe2dbad48daf3fd3356b85327650b" translate="yes" xml:space="preserve">
          <source>Iterating over a list of numbers can be done with &lt;code&gt;seq&lt;/code&gt;:</source>
          <target state="translated">Итерации по списку чисел можно выполнить с помощью &lt;code&gt;seq&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c2654e77c8a1d66520f0e811b49f2ee16ec66ef" translate="yes" xml:space="preserve">
          <source>Job control</source>
          <target state="translated">Управление работой</target>
        </trans-unit>
        <trans-unit id="090e4272d6cb5283367e3c64d3f84a1ce2fa8aee" translate="yes" xml:space="preserve">
          <source>Jobs in the list of jobs are sent a hang-up signal when fish terminates, which usually causes the job to terminate; &lt;code&gt;disown&lt;/code&gt; allows these processes to continue regardless.</source>
          <target state="translated">Заданиям в списке заданий отправляется сигнал зависания, когда рыба завершается, что обычно приводит к завершению задания; &lt;code&gt;disown&lt;/code&gt; позволяет этим процессам продолжаться независимо.</target>
        </trans-unit>
        <trans-unit id="946c99cee0972cba5b6dec7f34cb20b94d3a2715" translate="yes" xml:space="preserve">
          <source>Keep in mind that parameter expansion takes before expressions are evaluated. This can be very useful in order to perform calculations involving shell variables or the output of command substitutions, but it also means that parenthesis and the asterisk glob character have to be escaped or quoted.</source>
          <target state="translated">Имейте в виду,что расширение параметров происходит до того,как будут вычислены выражения.Это может быть очень полезно для выполнения вычислений с использованием переменных оболочки или вывода подстановок команд,но это также означает,что скобки и символ глобуса,отмеченный звездочкой,должны быть экранированы или заключены в кавычки.</target>
        </trans-unit>
        <trans-unit id="573891be377321acc4815f0519173b9b072d48fa" translate="yes" xml:space="preserve">
          <source>Key bindings may use &quot;modes&quot;, which mimics Vi's modal input behavior. The default mode is &quot;default&quot;, and every bind applies to a single mode. The mode can be viewed/changed with the &lt;code&gt;$fish_bind_mode&lt;/code&gt; variable.</source>
          <target state="translated">Привязки клавиш могут использовать &amp;laquo;режимы&amp;raquo;, которые имитируют модальное поведение ввода Vi. Режим по умолчанию - &amp;laquo;default&amp;raquo;, и каждая привязка применяется к одному режиму. Режим можно просмотреть / изменить с &lt;code&gt;$fish_bind_mode&lt;/code&gt; переменной $ fish_bind_mode .</target>
        </trans-unit>
        <trans-unit id="b562f1a6d0c5684ca96b09426bc1669506a7f803" translate="yes" xml:space="preserve">
          <source>Learning fish</source>
          <target state="translated">Учебная рыба</target>
        </trans-unit>
        <trans-unit id="b5cf98d60edf53bb04a75b49fe8d89b334867632" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU General Public License, version 2.</source>
          <target state="translated">Лицензия GNU General Public License,версия 2.</target>
        </trans-unit>
        <trans-unit id="f063dbdbbc3586964fed3651ab53c12631bbacd5" translate="yes" xml:space="preserve">
          <source>Like other shells, a dollar sign performs variable substitution:</source>
          <target state="translated">Как и другие оболочки,знак доллара выполняет подстановку переменных:</target>
        </trans-unit>
        <trans-unit id="1c10e83fba90f8ed8fbb793d35b29d018d6a8897" translate="yes" xml:space="preserve">
          <source>Like other shells, fish allows multiple commands either on separate lines or the same line.</source>
          <target state="translated">Как и другие оболочки,рыба разрешает несколько команд либо на отдельных строках,либо на одной и той же строке.</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="a51da1d245e2b299170419f02a7283c1cf86ec93" translate="yes" xml:space="preserve">
          <source>Lists adjacent to other lists or strings are expanded as &lt;a href=&quot;index#cartesian-product&quot;&gt;cartesian products&lt;/a&gt; unless quoted (see &lt;a href=&quot;index#expand-variable&quot;&gt;Variable expansion&lt;/a&gt;):</source>
          <target state="translated">Списки, смежные с другими списками или строками, раскрываются как &lt;a href=&quot;index#cartesian-product&quot;&gt;декартовы произведения,&lt;/a&gt; если не указаны (см. &lt;a href=&quot;index#expand-variable&quot;&gt;Расширение переменных&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="e550372c446deb80cb7097a6530c7895ce489c98" translate="yes" xml:space="preserve">
          <source>Lists adjacent to other lists or strings are expanded as cartesian products:</source>
          <target state="translated">Списки,примыкающие к другим спискам или строкам,расширяются как картезианские продукты:</target>
        </trans-unit>
        <trans-unit id="d036c0ec2ab378b452b8d2cead3a3ffcc191575a" translate="yes" xml:space="preserve">
          <source>Lists cannot contain other lists: there is no recursion. A variable is a list of strings, full stop.</source>
          <target state="translated">Списки не могут содержать другие списки:рекурсии нет.Переменная-это список строк,полный стоп.</target>
        </trans-unit>
        <trans-unit id="8172703ebdf7bfc5b44da606bf9f833637212ffc" translate="yes" xml:space="preserve">
          <source>Locale variables</source>
          <target state="translated">Переменные Locale</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="f5f695dcfd95e469044fda4ad8dda41439800142" translate="yes" xml:space="preserve">
          <source>Many other shells have a large library of builtin commands. Most of these commands are also available as standalone commands, but have been implemented in the shell anyway. To avoid code duplication, and to avoid the confusion of subtly differing versions of the same command, &lt;code&gt;fish&lt;/code&gt; generally only implements builtins for actions which cannot be performed by a regular command.</source>
          <target state="translated">Многие другие оболочки имеют большую библиотеку встроенных команд. Большинство этих команд также доступны как отдельные команды, но все равно были реализованы в оболочке. Чтобы избежать дублирования кода и избежать путаницы из-за тонко разных версий одной и той же команды, &lt;code&gt;fish&lt;/code&gt; обычно реализует только встроенные функции для действий, которые не могут быть выполнены обычной командой.</target>
        </trans-unit>
        <trans-unit id="508666f7961e41b7a23a46d49b1c68da21e0ab6e" translate="yes" xml:space="preserve">
          <source>Many terminals support 24-bit (i.e., true-color) color escape sequences. This includes modern xterm, Gnome Terminal, Konsole, and iTerm2. Fish attempts to detect such terminals through various means in &lt;code&gt;config.fish&lt;/code&gt; You can explicitly force that support via &lt;code&gt;set fish_term24bit 1&lt;/code&gt;.</source>
          <target state="translated">Многие терминалы поддерживают 24-битные (т.е. полноцветные) escape-последовательности цветов. Сюда входят современные xterm, Gnome Terminal, Konsole и iTerm2. Fish пытается обнаружить такие терминалы различными способами в &lt;code&gt;config.fish&lt;/code&gt; . Вы можете явно активировать эту поддержку с помощью &lt;code&gt;set fish_term24bit 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee9b4890d50f0c6b762d298b81c92845215e8616" translate="yes" xml:space="preserve">
          <source>Match Glob Examples</source>
          <target state="translated">Примеры матч-глобуса</target>
        </trans-unit>
        <trans-unit id="5d635a6434318430e0640768784677cf44ef96c2" translate="yes" xml:space="preserve">
          <source>Match Regex Examples</source>
          <target state="translated">Примеры соответствия регекса</target>
        </trans-unit>
        <trans-unit id="282c4c424c8c8f802f09ed9069046a66c3e0e2df" translate="yes" xml:space="preserve">
          <source>Matching can be made case-insensitive with &lt;code&gt;--ignore-case&lt;/code&gt; or &lt;code&gt;-i&lt;/code&gt;.</source>
          <target state="translated">Сопоставление можно сделать без &lt;code&gt;--ignore-case&lt;/code&gt; регистра с помощью --ignore-case или &lt;code&gt;-i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfe39636b572a032956990221bea7522894ca013" translate="yes" xml:space="preserve">
          <source>Mismatched parenthesis</source>
          <target state="translated">Неправильная скобка</target>
        </trans-unit>
        <trans-unit id="7d99cf687fc07cadeb9c71efe74a35ddac5120de" translate="yes" xml:space="preserve">
          <source>More on universal variables</source>
          <target state="translated">Подробнее об универсальных переменных</target>
        </trans-unit>
        <trans-unit id="a6722727e636d961891415cd8a8813e266709c00" translate="yes" xml:space="preserve">
          <source>Most programs allow you to suspend the program's execution and return control to &lt;code&gt;fish&lt;/code&gt; by pressing &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;Z&lt;/b&gt; (also referred to as &lt;code&gt;^Z&lt;/code&gt;). Once back at the &lt;code&gt;fish&lt;/code&gt; commandline, you can start other programs and do anything you want. If you then want you can go back to the suspended command by using the &lt;a href=&quot;commands#fg&quot;&gt;&lt;code&gt;fg&lt;/code&gt;&lt;/a&gt; (foreground) command.</source>
          <target state="translated">Большинство программ позволяют приостановить выполнение программы и вернуть управление &lt;code&gt;fish&lt;/code&gt; , нажав &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;Z&lt;/b&gt; (также называемую &lt;code&gt;^Z&lt;/code&gt; ). Вернувшись в командную строку &lt;code&gt;fish&lt;/code&gt; , вы можете запускать другие программы и делать все, что захотите. Если вы затем захотите, вы можете вернуться к приостановленной команде, используя команду &lt;a href=&quot;commands#fg&quot;&gt; &lt;code&gt;fg&lt;/code&gt; &lt;/a&gt; (foreground).</target>
        </trans-unit>
        <trans-unit id="e36a3163fcb5b2ce91e7e62b6620c694486a5106" translate="yes" xml:space="preserve">
          <source>Most programs use three input/output (IO) streams, each represented by a number called a file descriptor (FD). These are:</source>
          <target state="translated">Большинство программ используют три потока ввода/вывода (IO),каждый из которых представлен числом,называемым дескриптором файла (FD).Они и есть:</target>
        </trans-unit>
        <trans-unit id="fbfe945f56b2d1285935393b0ba01a8e6e9fb533" translate="yes" xml:space="preserve">
          <source>Most subcommands accept a &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; switch, which suppresses the usual output but exits with the documented status.</source>
          <target state="translated">Большинство подкоманд принимают ключ &lt;code&gt;-q&lt;/code&gt; или &lt;code&gt;--quiet&lt;/code&gt; , который подавляет обычный вывод, но завершает работу с задокументированным статусом.</target>
        </trans-unit>
        <trans-unit id="9e4b95e5fe05cdb2e32c0be4dc38dcb8444a090a" translate="yes" xml:space="preserve">
          <source>Multiline editing</source>
          <target state="translated">Многострочное редактирование</target>
        </trans-unit>
        <trans-unit id="284d6c5f151a78ee571b877c91d2822cf913407f" translate="yes" xml:space="preserve">
          <source>Multiple lines are OK. Colors can be set via &lt;code&gt;set_color&lt;/code&gt;, passing it named ANSI colors, or hex RGB values:</source>
          <target state="translated">Несколько строк в порядке. Цвета можно установить с помощью &lt;code&gt;set_color&lt;/code&gt; , передав ему названные цвета ANSI или шестнадцатеричные значения RGB:</target>
        </trans-unit>
        <trans-unit id="b9313e4afc7e7087f2691f5390743aa11cb2045a" translate="yes" xml:space="preserve">
          <source>Multiple lines are not supported in &lt;code&gt;fish_right_prompt&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;fish_right_prompt&lt;/code&gt; несколько строк не поддерживаются .</target>
        </trans-unit>
        <trans-unit id="2ddaeb8bc8e45a0d0bc521306478830db49c61a1" translate="yes" xml:space="preserve">
          <source>My command (pkg-config) gives its output as a single long string?</source>
          <target state="translated">Моя команда (pkg-config)дает свой вывод в виде одной длинной строки?</target>
        </trans-unit>
        <trans-unit id="f9c6fa94b0cdb85c962b8db6aabb5f0166f8183a" translate="yes" xml:space="preserve">
          <source>NUL Delimited Examples</source>
          <target state="translated">NUL Разграниченные примеры</target>
        </trans-unit>
        <trans-unit id="2bcd7736113c6b4efdb7226bbeffaacd2a34dab2" translate="yes" xml:space="preserve">
          <source>Next, do the following (assuming fish was installed to /usr/local):</source>
          <target state="translated">Далее сделайте следующее (предполагая,что рыба была установлена в /usr/local):</target>
        </trans-unit>
        <trans-unit id="e1c89d68ecad2be53a8cf7ccdf90c12f59e35a10" translate="yes" xml:space="preserve">
          <source>Non existing commands.</source>
          <target state="translated">Не существующие команды.</target>
        </trans-unit>
        <trans-unit id="76f3e65e8538fb0ceb8d456aa90c5d4ef9931a07" translate="yes" xml:space="preserve">
          <source>Normally when &lt;code&gt;fish&lt;/code&gt; starts a program, this program will be put in the foreground, meaning it will take control of the terminal and &lt;code&gt;fish&lt;/code&gt; will be stopped until the program finishes. Sometimes this is not desirable. For example, you may wish to start an application with a graphical user interface from the terminal, and then be able to continue using the shell. In such cases, there are several ways in which the user can change fish's behavior.</source>
          <target state="translated">Обычно, когда &lt;code&gt;fish&lt;/code&gt; запускает программу, эта программа выводится на передний план, то есть она берет на себя управление терминалом, и &lt;code&gt;fish&lt;/code&gt; будет остановлена ​​до завершения программы. Иногда это нежелательно. Например, вы можете захотеть запустить приложение с графическим пользовательским интерфейсом из терминала, а затем продолжить использование оболочки. В таких случаях пользователь может изменить поведение рыбы несколькими способами.</target>
        </trans-unit>
        <trans-unit id="08c5c1ef76ceaf50dd2d8b6a05425f76eaec2b83" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;case&lt;/code&gt; does not fall through, and can accept multiple arguments or (quoted) wildcards.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;case&lt;/code&gt; не пропускается и может принимать несколько аргументов или (заключенных в кавычки) подстановочных знаков.</target>
        </trans-unit>
        <trans-unit id="daafcf66550c6e75c5e67349c16e61c50e7a4d2f" translate="yes" xml:space="preserve">
          <source>Note that array indices start at 1 in &lt;code&gt;fish&lt;/code&gt;, not 0, as is more common in other languages. This is because many common Unix tools like &lt;code&gt;seq&lt;/code&gt; are more suited to such use. An invalid index is silently ignored resulting in no value being substituted (not an empty string).</source>
          <target state="translated">Обратите внимание, что индексы массива в &lt;code&gt;fish&lt;/code&gt; начинаются с 1 , а не с 0, как это чаще встречается в других языках. Это связано с тем, что многие распространенные инструменты Unix, такие как &lt;code&gt;seq&lt;/code&gt; , больше подходят для такого использования. Недопустимый индекс автоматически игнорируется, в результате чего значение не подставляется (не пустая строка).</target>
        </trans-unit>
        <trans-unit id="a0707e5e6cd48555094dd0ce06f95a929ab9ee48" translate="yes" xml:space="preserve">
          <source>Note that because fish loads functions on-demand, saved functions will not function as &lt;a href=&quot;index#event&quot;&gt;event handlers&lt;/a&gt; until they are run or sourced otherwise. To activate an event handler for every new shell, add the function to your &lt;a href=&quot;index#initialization&quot;&gt;shell initialization file&lt;/a&gt; instead of using &lt;code&gt;funcsave&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание: поскольку fish загружает функции по запросу, сохраненные функции не будут работать как &lt;a href=&quot;index#event&quot;&gt;обработчики событий,&lt;/a&gt; пока они не будут запущены или не будут получены другим способом. Чтобы активировать обработчик событий для каждой новой оболочки, добавьте функцию в файл &lt;a href=&quot;index#initialization&quot;&gt;инициализации оболочки&lt;/a&gt; вместо использования &lt;code&gt;funcsave&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d05600b5a2c4216ed0373e93b0ae5b8dde601d3a" translate="yes" xml:space="preserve">
          <source>Note that command substitutions in a case statement will be evaluated even if its body is not taken. All substitutions, including command substitutions, must be performed before the value can be compared against the parameter.</source>
          <target state="translated">Обратите внимание,что подстановки команд в случае оператора будут оценены,даже если его тело не будет взято.Все замены,включая замены команд,должны быть выполнены до того,как значение может быть сравнено с параметром.</target>
        </trans-unit>
        <trans-unit id="27acedfb629019bcb72c1aaa58829703ce6d6432" translate="yes" xml:space="preserve">
          <source>Note that conversion may fail, e.g. &quot;102.234&quot; will not losslessly convert to an integer, causing printf to print an error.</source>
          <target state="translated">Обратите внимание,что преобразование может быть неудачным,например,&quot;102.234&quot; не будет без потерь преобразовываться в целое число,что приведет к ошибке при выводе на печать файла printf.</target>
        </trans-unit>
        <trans-unit id="8107914840367cc99db95db5e903f636fb93ac38" translate="yes" xml:space="preserve">
          <source>Note that events are only received from the current fish process as there is no way to send events from one fish process to another.</source>
          <target state="translated">Обратите внимание,что события принимаются только от текущего рыбного процесса,так как нет возможности отправить события от одного рыбного процесса к другому.</target>
        </trans-unit>
        <trans-unit id="b604d17300bf8871e1df935d8ccab61e77f2c2e6" translate="yes" xml:space="preserve">
          <source>Note that events are only sent to the current fish process as there is no way to send events from one fish process to another.</source>
          <target state="translated">Обратите внимание,что события отправляются только текущему рыбному процессу,так как нет возможности отправить события от одного рыбного процесса к другому.</target>
        </trans-unit>
        <trans-unit id="1816c418ab7796b893d641bb9d4e996647340b50" translate="yes" xml:space="preserve">
          <source>Note that fish does not fall through on case statements. Only the first matching case is executed.</source>
          <target state="translated">Обратите внимание,что рыба не проваливается на заявлениях по делу.Выполняется только первый совпадающий регистр.</target>
        </trans-unit>
        <trans-unit id="dea20fe7204b37a954eb8c5b71576a69b5e9c5a0" translate="yes" xml:space="preserve">
          <source>Note that fish has a default titlebar message, which will be used if the fish_title function is undefined. So simply unsetting the fish_title function will not work.</source>
          <target state="translated">Обратите внимание,что у рыбы есть сообщение на заглавной панели по умолчанию,которое будет использоваться,если функция fish_title не определена.Поэтому простое отключение функции fish_title не будет работать.</target>
        </trans-unit>
        <trans-unit id="216dd486d99355c7f2e848a5066c6390232ae830" translate="yes" xml:space="preserve">
          <source>Note that for backwards compatibility each subcommand can also be specified as a long option. For example, rather than &lt;code&gt;history search&lt;/code&gt; you can type &lt;code&gt;history --search&lt;/code&gt;. Those long options are deprecated and will be removed in a future release.</source>
          <target state="translated">Обратите внимание, что для обратной совместимости каждая подкоманда также может быть указана как длинный параметр. Например, вместо &lt;code&gt;history search&lt;/code&gt; вы можете ввести &lt;code&gt;history --search&lt;/code&gt; . Эти длинные параметры устарели и будут удалены в следующем выпуске.</target>
        </trans-unit>
        <trans-unit id="c97f265eeb04a552b0a053d1fe6fd39164111e41" translate="yes" xml:space="preserve">
          <source>Note that for most commands, if any wildcard fails to expand, the command is not executed, &lt;a href=&quot;#variables-status&quot;&gt;&lt;code&gt;$status&lt;/code&gt;&lt;/a&gt; is set to nonzero, and a warning is printed. This behavior is consistent with setting &lt;code&gt;shopt -s failglob&lt;/code&gt; in bash. There are exactly 3 exceptions, namely &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;. Their globs are permitted to expand to zero arguments, as with &lt;code&gt;shopt -s nullglob&lt;/code&gt; in bash.</source>
          <target state="translated">Обратите внимание, что для большинства команд, если какой-либо подстановочный знак не раскрывается, команда не выполняется, &lt;a href=&quot;#variables-status&quot;&gt; &lt;code&gt;$status&lt;/code&gt; &lt;/a&gt; устанавливается в ненулевое значение и выводится предупреждение. Такое поведение согласуется с установкой &lt;code&gt;shopt -s failglob&lt;/code&gt; в bash. Есть ровно 3 исключения: &lt;a href=&quot;commands#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;commands#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; . Их глобусы могут расширяться до нуля аргументов, как в случае с &lt;code&gt;shopt -s nullglob&lt;/code&gt; в bash.</target>
        </trans-unit>
        <trans-unit id="179b535385e9bcd6de7a6f886e309b106b43e8dd" translate="yes" xml:space="preserve">
          <source>Note that functions cannot be started in the background. Functions that are stopped and then restarted in the background using the &lt;code&gt;bg&lt;/code&gt; command will not execute correctly.</source>
          <target state="translated">Обратите внимание, что функции нельзя запускать в фоновом режиме. Функции, которые были остановлены, а затем перезапущены в фоновом режиме с помощью команды &lt;code&gt;bg&lt;/code&gt; , не будут выполняться правильно.</target>
        </trans-unit>
        <trans-unit id="56578f519a03e2785432ffc83f432b088789cd11" translate="yes" xml:space="preserve">
          <source>Note that most builtin commands display their help in the terminal when given the &lt;code&gt;--help&lt;/code&gt; option.</source>
          <target state="translated">Обратите внимание, что большинство встроенных команд отображают свою справку в терминале, если задана опция &lt;code&gt;--help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052c493b4f8ae8b6935593bcf58c5ec984ab99f3" translate="yes" xml:space="preserve">
          <source>Note that not all these limits are available in all operating systems.</source>
          <target state="translated">Обратите внимание,что не все эти ограничения доступны во всех операционных системах.</target>
        </trans-unit>
        <trans-unit id="fd0759c196f448d14f3c2205ba14675a88db1daf" translate="yes" xml:space="preserve">
          <source>Note that parentheses will usually require escaping with &lt;code&gt;\(&lt;/code&gt; to avoid being interpreted as a command substitution.</source>
          <target state="translated">Обратите внимание, что скобки обычно требуют экранирования с помощью &lt;code&gt;\(&lt;/code&gt; во избежание интерпретации как подстановки команд.</target>
        </trans-unit>
        <trans-unit id="188395866987d29873c39e6fea9524d72368f195" translate="yes" xml:space="preserve">
          <source>Note that seeding the engine will NOT give the same result across different systems.</source>
          <target state="translated">Обратите внимание,что посев двигателя НЕ дает одинакового результата в разных системах.</target>
        </trans-unit>
        <trans-unit id="b65cb077ea76993a41de3fb713b42e0fed91a42b" translate="yes" xml:space="preserve">
          <source>Note that symbolic masks currently do not work as intended.</source>
          <target state="translated">Обратите внимание,что в настоящее время символические маски работают не по назначению.</target>
        </trans-unit>
        <trans-unit id="bef2f79c5ca0fefc2538b283ecde5e201f174c69" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables which this command manipulates.</source>
          <target state="translated">Обратите внимание, что команда &lt;code&gt;cd&lt;/code&gt; ограничивает историю каталогов 25 последними посещенными каталогами. История хранится в переменных &lt;code&gt;$dirprev&lt;/code&gt; и &lt;code&gt;$dirnext&lt;/code&gt; которыми манипулирует эта команда.</target>
        </trans-unit>
        <trans-unit id="10a8eb5ef4bfcbb0fbb38b2c1dbc89e74a6c7106" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables which this command manipulates. If you make those universal variables your &lt;code&gt;cd&lt;/code&gt; history is shared among all fish instances.</source>
          <target state="translated">Обратите внимание, что команда &lt;code&gt;cd&lt;/code&gt; ограничивает историю каталогов 25 последними посещенными каталогами. История хранится в переменных &lt;code&gt;$dirprev&lt;/code&gt; и &lt;code&gt;$dirnext&lt;/code&gt; которыми манипулирует эта команда. Если вы сделаете эти универсальные переменные, ваша история &lt;code&gt;cd&lt;/code&gt; дисков будет доступна всем экземплярам fish.</target>
        </trans-unit>
        <trans-unit id="9b4bda95d407194baa99d73ed10ab09fd4118640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;cd&lt;/code&gt; command limits directory history to the 25 most recently visited directories. The history is stored in the &lt;code&gt;$dirprev&lt;/code&gt; and &lt;code&gt;$dirnext&lt;/code&gt; variables.</source>
          <target state="translated">Обратите внимание, что команда &lt;code&gt;cd&lt;/code&gt; ограничивает историю каталогов 25 последними посещенными каталогами. История хранится в переменных &lt;code&gt;$dirprev&lt;/code&gt; и &lt;code&gt;$dirnext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="468f475ce4540aa6d4ffc053e8efd0e42aba5839" translate="yes" xml:space="preserve">
          <source>Note that the shell will attempt to change directory without requiring &lt;code&gt;cd&lt;/code&gt; if the name of a directory is provided (starting with &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;, or ending with &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">Обратите внимание, что оболочка будет пытаться сменить каталог, не требуя &lt;code&gt;cd&lt;/code&gt; , если указано имя каталога (начиная с &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; Или &lt;code&gt;~&lt;/code&gt; , или заканчивая &lt;code&gt;/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a1ad39e7a025d924c676894892c33d43f516843" translate="yes" xml:space="preserve">
          <source>Note that there are three environment variables that are automatically split on colons to become lists when fish starts running: &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;CDPATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt;. Conversely, they are joined on colons when exported to subcommands. All other environment variables (e.g., &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;) which have similar semantics are treated as simple strings.</source>
          <target state="translated">Обратите внимание, что есть три переменные среды, которые автоматически разделяются на двоеточия, чтобы стать списками при запуске рыбы: &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;CDPATH&lt;/code&gt; , &lt;code&gt;MANPATH&lt;/code&gt; . И наоборот, при экспорте в подкоманды они соединяются двоеточиями. Все другие переменные среды (например, &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; ), имеющие аналогичную семантику, обрабатываются как простые строки.</target>
        </trans-unit>
        <trans-unit id="bf45589c3e3c3f4d264bc9f93c56158f4afde11c" translate="yes" xml:space="preserve">
          <source>Note that this function will not be used if a command by this name exists (which is the case on macOS or Haiku).</source>
          <target state="translated">Обратите внимание,что эта функция не будет использоваться,если команда с таким именем существует (как в случае с macOS или Haiku).</target>
        </trans-unit>
        <trans-unit id="5bf381b343429f3c3b6b07cc6b6f0a80c7987163" translate="yes" xml:space="preserve">
          <source>Note that without the quotes or braces, fish will try to expand a variable called &lt;code&gt;$WORDs&lt;/code&gt;, which may not exist.</source>
          <target state="translated">Обратите внимание, что без кавычек или фигурных скобок fish попытается расширить переменную с именем &lt;code&gt;$WORDs&lt;/code&gt; , которая может не существовать.</target>
        </trans-unit>
        <trans-unit id="655206648d0dc7faa21d15bc23b20c851a2e5079" translate="yes" xml:space="preserve">
          <source>Note that ~/.config/fish/config.fish is sourced &lt;em&gt;after&lt;/em&gt; the snippets. This is so users can copy snippets and override some of their behavior.</source>
          <target state="translated">Обратите внимание, что ~ / .config / fish / config.fish находится &lt;em&gt;после&lt;/em&gt; фрагментов. Это сделано для того, чтобы пользователи могли копировать фрагменты и отменять некоторые из своих действий.</target>
        </trans-unit>
        <trans-unit id="e2ce3cf51c29175bd1e3054b41cb66e679925023" translate="yes" xml:space="preserve">
          <source>Note that, like GNU tools and most of fish's builtins, &lt;code&gt;contains&lt;/code&gt; interprets all arguments starting with a &lt;code&gt;-&lt;/code&gt; as options to contains, until it reaches an argument that is &lt;code&gt;--&lt;/code&gt; (two dashes). See the examples below.</source>
          <target state="translated">Обратите внимание, что, подобно инструментам GNU и большинству встроенных команд fish, &lt;code&gt;contains&lt;/code&gt; интерпретирует все аргументы, начинающиеся с &lt;code&gt;-&lt;/code&gt; как параметры для contains, пока не достигнет аргумента, который является &lt;code&gt;--&lt;/code&gt; (два дефиса). См. Примеры ниже.</target>
        </trans-unit>
        <trans-unit id="9cd1c04aa664d29ef9d4114fed80a20478f9f7c6" translate="yes" xml:space="preserve">
          <source>Note: At the moment the debug prompt is identical to your normal fish prompt. This can make it hard to recognize that you've entered a debug session. Issue 1310 is open to improve this.</source>
          <target state="translated">Примечание:В данный момент запрос на отладку идентичен вашему обычному запросу на отладку.Это может затруднить распознавание того,что вы вошли в сессию отладки.Выпуск 1310 открыт для улучшения.</target>
        </trans-unit>
        <trans-unit id="2acd9175970aa8fc3b9936ce32e6e5f5129257b5" translate="yes" xml:space="preserve">
          <source>Note: This event will be emitted even if the command is invalid. The commandline parameter includes the entire commandline verbatim, and may potentially include newlines.</source>
          <target state="translated">Примечание:Это событие будет выдано,даже если команда недействительна.Параметр командной строки включает в себя всю командную строку дословно,и потенциально может включать новые строки.</target>
        </trans-unit>
        <trans-unit id="4a71ed28fa070fd5d0f2ba5d9d8b94e51646208b" translate="yes" xml:space="preserve">
          <source>Note: fish 2.2.0 and earlier used a default of 10 milliseconds, and provided no way to configure it. That effectively made it impossible to use escape as a meta key.</source>
          <target state="translated">Примечание:fish 2.2.0 и более ранние версии использовали значение по умолчанию 10 миллисекунд,и не имели возможности его настроить.Это фактически делало невозможным использование эвакуации в качестве мета-ключа.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="03c757f6b7891744a49627d17ec9ed791ed69d26" translate="yes" xml:space="preserve">
          <source>Nothing if the flag is a boolean that takes no argument or is an implicit int flag, else</source>
          <target state="translated">Ничего,если флаг является булевым,который не принимает аргументов или является неявным флагом int,иначе</target>
        </trans-unit>
        <trans-unit id="7e9e91cddb4e1bbe3d96c5cfb7bcf12796b0c7e0" translate="yes" xml:space="preserve">
          <source>Now hub inherits all of the completions from git. Note this can also be specified in a function declaration.</source>
          <target state="translated">Теперь хаб унаследует все завершенности от гита.Обратите внимание,что это также может быть указано в декларации функции.</target>
        </trans-unit>
        <trans-unit id="377c6369b04b17877206baabd99b8340d2c1712d" translate="yes" xml:space="preserve">
          <source>Now in another shell:</source>
          <target state="translated">Теперь в другой оболочке:</target>
        </trans-unit>
        <trans-unit id="d5aead3c087eb1218d9c5de157a34a40ad6e6161" translate="yes" xml:space="preserve">
          <source>Numerical comparisons will simply fail if one of the operands is not a number:</source>
          <target state="translated">Числовые сравнения будут просто неудачными,если один из операндов не является числом:</target>
        </trans-unit>
        <trans-unit id="aeeb9e7d5766fc544e9c4260b0a26961443229c2" translate="yes" xml:space="preserve">
          <source>Oh My Fish</source>
          <target state="translated">О,моя рыба.</target>
        </trans-unit>
        <trans-unit id="c168b84a253f1a9380f35914e43b4459d37046ec" translate="yes" xml:space="preserve">
          <source>Old style long options, like '&lt;code&gt;-Wall&lt;/code&gt;'. Old style long options can be more than one character long, are preceded by a single hyphen and may not be grouped together. Option arguments are specified in the following parameter ('&lt;code&gt;-ao null&lt;/code&gt;').</source>
          <target state="translated">Длинные варианты старого стиля, такие как &amp;laquo; &lt;code&gt;-Wall&lt;/code&gt; &amp;raquo;. Длинные параметры старого стиля могут содержать более одного символа, им предшествует один дефис, и их нельзя группировать вместе. Аргументы опции указываются в следующем параметре (' &lt;code&gt;-ao null&lt;/code&gt; ').</target>
        </trans-unit>
        <trans-unit id="b9e42bb3078b6143675803071b50a1f886f1fddf" translate="yes" xml:space="preserve">
          <source>On startup, Fish evaluates a number of configuration files, which can be used to control the behavior of the shell. The location of these configuration variables is controlled by a number of environment variables, and their default or usual location is given below.</source>
          <target state="translated">При запуске Fish оценивает ряд конфигурационных файлов,которые могут быть использованы для управления поведением оболочки.Расположение этих конфигурационных переменных контролируется рядом переменных окружения,их стандартное или обычное расположение приведено ниже.</target>
        </trans-unit>
        <trans-unit id="53732b6ec19e859a0b3473ce5240c51bbdc7db63" translate="yes" xml:space="preserve">
          <source>On systems that supports this feature, jobs will print the CPU usage of each job since the last command was executed. The CPU usage is expressed as a percentage of full CPU activity. Note that on multiprocessor systems, the total activity may be more than 100%.</source>
          <target state="translated">В системах,поддерживающих эту функцию,задания будут печатать данные об использовании процессора каждого задания с момента выполнения последней команды.Использование процессора выражается в процентах от полной активности процессора.Обратите внимание,что в многопроцессорных системах общая активность может превышать 100%.</target>
        </trans-unit>
        <trans-unit id="18125968ef24a12c2f2c9db564d4fb936f8a352f" translate="yes" xml:space="preserve">
          <source>Once installed, just type in &lt;code&gt;fish&lt;/code&gt; into your current shell to try it out!</source>
          <target state="translated">После установки просто введите &lt;code&gt;fish&lt;/code&gt; в свою текущую оболочку, чтобы попробовать!</target>
        </trans-unit>
        <trans-unit id="f9801d214429ef9429f41d9ccbf53d1f50cc2cf7" translate="yes" xml:space="preserve">
          <source>One of the most common uses for functions is to slightly alter the behavior of an already existing command. For example, one might want to redefine the &lt;code&gt;ls&lt;/code&gt; command to display colors. The switch for turning on colors on GNU systems is '&lt;code&gt;--color=auto&lt;/code&gt;'. An alias, or wrapper, around &lt;code&gt;ls&lt;/code&gt; might look like this:</source>
          <target state="translated">Одно из наиболее распространенных применений функций - небольшое изменение поведения уже существующей команды. Например, можно переопределить команду &lt;code&gt;ls&lt;/code&gt; для отображения цветов. Переключатель для включения цветов в системах GNU - ' &lt;code&gt;--color=auto&lt;/code&gt; '. Псевдоним или оболочка вокруг &lt;code&gt;ls&lt;/code&gt; может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="c6ed72e8734163b3555d72a22a65213a63ac427a" translate="yes" xml:space="preserve">
          <source>Only one function's description can be changed in a single invocation of &lt;code&gt;functions -d&lt;/code&gt;.</source>
          <target state="translated">Описание только одной функции может быть изменено за один вызов &lt;code&gt;functions -d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="744f6b1ea6029a4d03e486aa51d71e6cdfe3a24a" translate="yes" xml:space="preserve">
          <source>Only part of the output can be used, see &lt;a href=&quot;#expand-index-range&quot;&gt;index range expansion&lt;/a&gt; for details.</source>
          <target state="translated">Можно использовать только часть вывода, подробности см. В &lt;a href=&quot;#expand-index-range&quot;&gt;расширении диапазона индекса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e52f4d4c344dadad003e702bffb9e5e28cdc4a21" translate="yes" xml:space="preserve">
          <source>Operators for files and directories</source>
          <target state="translated">Операторы для файлов и каталогов</target>
        </trans-unit>
        <trans-unit id="f27bb0ff136bb8c7c7f1daaac32275d53bfd219d" translate="yes" xml:space="preserve">
          <source>Operators for text strings</source>
          <target state="translated">Операторы для текстовых строк</target>
        </trans-unit>
        <trans-unit id="a47a505eb7af733ce0bd8e9777ac0dd7490e55d7" translate="yes" xml:space="preserve">
          <source>Operators to combine expressions</source>
          <target state="translated">Операторы для объединения выражений</target>
        </trans-unit>
        <trans-unit id="7fa47fe3927b334a484c669114b525abc6a94112" translate="yes" xml:space="preserve">
          <source>Operators to compare and examine numbers</source>
          <target state="translated">Операторы для сравнения и изучения номеров</target>
        </trans-unit>
        <trans-unit id="d4829f651a76eb5aa9c3d27e3534a7c418cd1fc9" translate="yes" xml:space="preserve">
          <source>Option Specifications</source>
          <target state="translated">Технические характеристики опции</target>
        </trans-unit>
        <trans-unit id="6f38993c6d0d5cf791252a01f84f61ce28090cdc" translate="yes" xml:space="preserve">
          <source>Optionally a &lt;code&gt;!&lt;/code&gt; followed by fish script to validate the value. Typically this will be a function to run. If the return status is zero the value for the flag is valid. If non-zero the value is invalid. Any error messages should be written to stdout (not stderr). See the section on &lt;a href=&quot;#arparse-validation&quot;&gt;Flag Value Validation&lt;/a&gt; for more information.</source>
          <target state="translated">Необязательно &lt;code&gt;!&lt;/code&gt; с последующим скриптом рыбы для проверки значения. Обычно это запускаемая функция. Если статус возврата равен нулю, значение флага является допустимым. Если ненулевое значение, значение недействительно. Любые сообщения об ошибках следует записывать в стандартный вывод (а не в стандартный поток). См. Раздел &amp;laquo; &lt;a href=&quot;#arparse-validation&quot;&gt;Проверка значения флага&amp;raquo;&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="14be7a9cc678ff8d2acac3f8d22e39b9c8a4df32" translate="yes" xml:space="preserve">
          <source>Other features</source>
          <target state="translated">Другие особенности</target>
        </trans-unit>
        <trans-unit id="8064e7b7ad17f0248f35efb48f0f1d68ee39d15e" translate="yes" xml:space="preserve">
          <source>Other shells such as bash and zsh use a variable named &lt;code&gt;HISTFILE&lt;/code&gt; for a similar purpose. Fish uses a different name to avoid conflicts and signal that the behavior is different (session name instead of a file path). Also, if you set the var to anything other than &lt;code&gt;fish&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; it will inhibit importing the bash history. That's because the most common use case for this feature is to avoid leaking private or sensitive history when giving a presentation.</source>
          <target state="translated">Другие оболочки, такие как bash и zsh, используют переменную с именем &lt;code&gt;HISTFILE&lt;/code&gt; для аналогичной цели. Fish использует другое имя, чтобы избежать конфликтов и сигнализировать о другом поведении (имя сеанса вместо пути к файлу). Кроме того, если вы установите для var значение, отличное от &lt;code&gt;fish&lt;/code&gt; или &lt;code&gt;default&lt;/code&gt; , это запретит импорт истории bash. Это потому, что наиболее распространенный вариант использования этой функции - избежать утечки личной или конфиденциальной истории при проведении презентации.</target>
        </trans-unit>
        <trans-unit id="ca76df4fa26ca40f2ebdbbcc9b7ac947b4b17597" translate="yes" xml:space="preserve">
          <source>Other shells, such as zsh, provide a rich glob syntax for restricting the files matched by globs. For example, &lt;code&gt;**(.)&lt;/code&gt;, to only match regular files. Fish prefers to defer such features to programs, such as &lt;code&gt;find&lt;/code&gt;, rather than reinventing the wheel. Thus, if you want to limit the wildcard expansion to just regular files the fish approach is to define and use a function. For example,</source>
          <target state="translated">Другие оболочки, такие как zsh, предоставляют богатый синтаксис glob для ограничения файлов, соответствующих глобам. Например, &lt;code&gt;**(.)&lt;/code&gt; , Чтобы соответствовать только обычным файлам. Фиш предпочитает передать такие функции программам, например, &lt;code&gt;find&lt;/code&gt; , а не изобретать колесо. Таким образом, если вы хотите ограничить расширение подстановочных знаков только обычными файлами, подход рыбы состоит в том, чтобы определить и использовать функцию. Например,</target>
        </trans-unit>
        <trans-unit id="14a838bcf64937317892425e5ab22ef3642359f4" translate="yes" xml:space="preserve">
          <source>Other variables, like &lt;code&gt;$PATH&lt;/code&gt;, really do have multiple values. During variable expansion, the variable expands to become multiple arguments:</source>
          <target state="translated">Другие переменные, такие как &lt;code&gt;$PATH&lt;/code&gt; , действительно имеют несколько значений. Во время расширения переменная расширяется и становится несколькими аргументами:</target>
        </trans-unit>
        <trans-unit id="adcbabbfd6290e1df478b0d2b37c0beb20ff4767" translate="yes" xml:space="preserve">
          <source>Outputting multiple lines is not supported in &lt;code&gt;fish_mode_prompt&lt;/code&gt;.</source>
          <target state="translated">Вывод нескольких строк в &lt;code&gt;fish_mode_prompt&lt;/code&gt; не поддерживается .</target>
        </trans-unit>
        <trans-unit id="5b8012177cdea50be6a01e8c45312b388ccc9c7a" translate="yes" xml:space="preserve">
          <source>Outside of double quotes, variables will expand to as many arguments as they have elements. That means an empty list will expand to nothing, a variable with one element will expand to that element, and a variable with multiple elements will expand to each of those elements separately.</source>
          <target state="translated">За пределами двойных кавычек,переменные будут расширяться до такого количества аргументов,сколько у них есть элементов.Это означает,что пустой список будет расширяться до нуля,переменная с одним элементом будет расширяться до этого элемента,а переменная с несколькими элементами будет расширяться до каждого из этих элементов в отдельности.</target>
        </trans-unit>
        <trans-unit id="b7cda6a843d651b6992452486c962d590a3cb164" translate="yes" xml:space="preserve">
          <source>PATH variables</source>
          <target state="translated">переменные PATH</target>
        </trans-unit>
        <trans-unit id="404b5a722c514f9f99c58c8b9832dbdc15c84e14" translate="yes" xml:space="preserve">
          <source>PATH variables act as normal arrays, except they are are implicitly joined and split on colons.</source>
          <target state="translated">Переменные PATH действуют как обычные массивы,за исключением того,что они неявно соединяются и делятся на двоеточия.</target>
        </trans-unit>
        <trans-unit id="6b76530ae6668a37f97a682d440c45d138de6409" translate="yes" xml:space="preserve">
          <source>Parameter expansion (Globbing)</source>
          <target state="translated">Расширение параметров (Глобус)</target>
        </trans-unit>
        <trans-unit id="0fdb3f75d27167ce5697671dbec55e14ed3744ea" translate="yes" xml:space="preserve">
          <source>Parentheses and the &lt;code&gt;-o&lt;/code&gt; and &lt;code&gt;-a&lt;/code&gt; operators can be combined to produce more complicated expressions. In this example, success is printed if there is a &lt;code&gt;/foo&lt;/code&gt; or &lt;code&gt;/bar&lt;/code&gt; file as well as a &lt;code&gt;/baz&lt;/code&gt; or &lt;code&gt;/bat&lt;/code&gt; file.</source>
          <target state="translated">Скобки и операторы &lt;code&gt;-o&lt;/code&gt; и &lt;code&gt;-a&lt;/code&gt; можно комбинировать для получения более сложных выражений. В этом примере успех печатается, если есть файл &lt;code&gt;/foo&lt;/code&gt; или &lt;code&gt;/bar&lt;/code&gt; , а также файл &lt;code&gt;/baz&lt;/code&gt; или &lt;code&gt;/bat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0efa09d094aec052590bdd703ecb253fb17eb1e" translate="yes" xml:space="preserve">
          <source>Path variables are a special kind of variable used to support colon-delimited path lists including PATH, CDPATH, MANPATH, PYTHONPATH, etc. All variables that end in &lt;code&gt;PATH&lt;/code&gt; (case-sensitive) become PATH variables.</source>
          <target state="translated">Переменные пути - это особый вид переменных, используемых для поддержки списков путей, разделенных двоеточиями, включая PATH, CDPATH, MANPATH, PYTHONPATH и т. Д. Все переменные, оканчивающиеся на &lt;code&gt;PATH&lt;/code&gt; (с учетом регистра), становятся переменными PATH.</target>
        </trans-unit>
        <trans-unit id="acdeb27738adfec3e214f14b0bc5ac319dee18bf" translate="yes" xml:space="preserve">
          <source>Performs a history search when the &lt;b&gt;Page Up&lt;/b&gt; key is pressed.</source>
          <target state="translated">Выполняет поиск в истории при нажатии клавиши &lt;b&gt;Page Up&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b07e355a3677aa688ad89bddfe79ee5b312d7645" translate="yes" xml:space="preserve">
          <source>Pipes and Redirections</source>
          <target state="translated">Трубы и перенаправления</target>
        </trans-unit>
        <trans-unit id="109d28af6c9d51926601f8d9e60546da74487021" translate="yes" xml:space="preserve">
          <source>Pipes usually connect file descriptor 1 (standard output) of the first process to file descriptor 0 (standard input) of the second process. It is possible to use a different output file descriptor by prepending the desired FD number and then output redirect symbol to the pipe. For example:</source>
          <target state="translated">Трубы обычно соединяют файловый дескриптор 1 (стандартный вывод)первого процесса с файловым дескриптором 0 (стандартный ввод)второго процесса.Можно использовать другой дескриптор выходного файла,предваряя нужный номер FD,а затем выводить символ перенаправления в трубу.Например:</target>
        </trans-unit>
        <trans-unit id="3247b493bc40b8745523a27d8c525cd0dc056fd5" translate="yes" xml:space="preserve">
          <source>Piping</source>
          <target state="translated">Piping</target>
        </trans-unit>
        <trans-unit id="484a02744408ea850ed69df5530d98aa375e29f4" translate="yes" xml:space="preserve">
          <source>Please note that event handlers only become active when a function is loaded, which means you might need to otherwise &lt;a href=&quot;commands#source&quot;&gt;source&lt;/a&gt; or execute a function instead of relying on &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;autoloading&lt;/a&gt;. One approach is to put it into your &lt;a href=&quot;index#initialization&quot;&gt;initialization file&lt;/a&gt;.</source>
          <target state="translated">Обратите внимание, что обработчики событий становятся активными только при загрузке функции, что означает, что вам может потребоваться &lt;a href=&quot;commands#source&quot;&gt;источник&lt;/a&gt; или выполнение функции вместо того, чтобы полагаться на &lt;a href=&quot;#syntax-function-autoloading&quot;&gt;автозагрузку&lt;/a&gt; . Один из подходов - поместить его в &lt;a href=&quot;index#initialization&quot;&gt;файл инициализации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9da79a093b23650535a151c09a73e3fee5ee4ae" translate="yes" xml:space="preserve">
          <source>Prefixing the commandline with a space will prevent the entire line from being stored in the history.</source>
          <target state="translated">Префиксация командной строки пробелом предотвращает сохранение всей строки в истории.</target>
        </trans-unit>
        <trans-unit id="fe2ed6ea3216d06709445e2c3ce6b00041d037ed" translate="yes" xml:space="preserve">
          <source>Press &lt;b&gt;Tab&lt;/b&gt;, and &lt;code&gt;fish&lt;/code&gt; will attempt to complete the command, argument, or path:</source>
          <target state="translated">Нажмите &lt;b&gt;Tab&lt;/b&gt; , и &lt;code&gt;fish&lt;/code&gt; попытается завершить команду, аргумент или путь:</target>
        </trans-unit>
        <trans-unit id="09c712c74db06b262e6e04d6f0d9c7fa02c47733" translate="yes" xml:space="preserve">
          <source>Pressing &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;Enter&lt;/b&gt; instead of pressing the &lt;b&gt;Enter&lt;/b&gt; key.</source>
          <target state="translated">Нажатие &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;Enter&lt;/b&gt; вместо нажатия клавиши &lt;b&gt;Enter&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="27bf58510d3b20325eed84381a6d30434da9e2ca" translate="yes" xml:space="preserve">
          <source>Pressing the &lt;b&gt;Enter&lt;/b&gt; key while a block of commands is unclosed, such as when one or more block commands such as &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; do not have a corresponding &lt;code&gt;end&lt;/code&gt; command.</source>
          <target state="translated">Нажатие клавиши &lt;b&gt;Enter&lt;/b&gt; при незакрытом блоке команд, например, когда одна или несколько команд блока, таких как &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;begin&lt;/code&gt; или &lt;code&gt;if&lt;/code&gt; не имеют соответствующей команды &lt;code&gt;end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27493f631ba000f95a572539cafcbb594a951944" translate="yes" xml:space="preserve">
          <source>Print Top and Bottom on separate lines, using an escape sequence</source>
          <target state="translated">Печать верхней и нижней строк на отдельных строках,используя последовательность эвакуации</target>
        </trans-unit>
        <trans-unit id="84c34db7a924b44d0ab81ef51631e488d755a55a" translate="yes" xml:space="preserve">
          <source>Print hello world to stdout</source>
          <target state="translated">Распечатать приветствие мир для stdout</target>
        </trans-unit>
        <trans-unit id="ad29dcc16fea024e7e41818ab9d4740b264b782b" translate="yes" xml:space="preserve">
          <source>Prior to the addition of this builtin command in the 2.7.0 release there were two main ways to parse the arguments passed to a fish script or function. One way was to use the OS provided &lt;code&gt;getopt&lt;/code&gt; command. The problem with that is that the GNU and BSD implementations are not compatible. Which makes using that external command difficult other than in trivial situations. The other way is to iterate over &lt;code&gt;$argv&lt;/code&gt; and use the fish &lt;code&gt;switch&lt;/code&gt; statement to decide how to handle the argument. That, however, involves a huge amount of boilerplate code. It is also borderline impossible to implement the same behavior as builtin commands.</source>
          <target state="translated">До добавления этой встроенной команды в выпуск 2.7.0 существовало два основных способа синтаксического анализа аргументов, передаваемых в сценарий или функцию Fish. Одним из способов было использование команды &lt;code&gt;getopt&lt;/code&gt; , предоставляемой ОС . Проблема в том, что реализации GNU и BSD несовместимы. Это затрудняет использование этой внешней команды, кроме как в тривиальных ситуациях. Другой способ - перебрать &lt;code&gt;$argv&lt;/code&gt; и использовать оператор &lt;code&gt;switch&lt;/code&gt; рыбы, чтобы решить, как обрабатывать аргумент. Однако это связано с огромным количеством шаблонного кода. Также невозможно реализовать то же поведение, что и встроенные команды.</target>
        </trans-unit>
        <trans-unit id="e14c52a6b5ed7f130784534e792abd7951342686" translate="yes" xml:space="preserve">
          <source>Private mode</source>
          <target state="translated">Частный режим</target>
        </trans-unit>
        <trans-unit id="7d03d42c737cd08e3c616e333f7637225318bb7d" translate="yes" xml:space="preserve">
          <source>Problem solved!</source>
          <target state="translated">Проблема решена!</target>
        </trans-unit>
        <trans-unit id="27fee3438e0d28b1f5e56d2013e82bcf5b441945" translate="yes" xml:space="preserve">
          <source>Programmable prompt</source>
          <target state="translated">Программируемая подсказка</target>
        </trans-unit>
        <trans-unit id="4eae5ed9e86eb92ca41dd75ef52fb9a0a53af761" translate="yes" xml:space="preserve">
          <source>Programmable title</source>
          <target state="translated">Программируемое название</target>
        </trans-unit>
        <trans-unit id="a817d7eb8e0f1dab755ab5203a082e5c3c094fce" translate="yes" xml:space="preserve">
          <source>Prompt</source>
          <target state="translated">Prompt</target>
        </trans-unit>
        <trans-unit id="0495187c978ea883d19171649639e1c756060adb" translate="yes" xml:space="preserve">
          <source>Quick answer:</source>
          <target state="translated">Быстрый ответ:</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="a5ab0c393626e6b25924176a035ebd63722dc7ec" translate="yes" xml:space="preserve">
          <source>Range expansion will go in reverse if the end element is earlier in the list than the start and forward if the end is later than the start, unless exactly one of the given indices is negative. This is to enable clamping without changing direction if the list has fewer elements than expected.</source>
          <target state="translated">Расширение диапазона будет идти в обратном направлении,если конечный элемент находится в списке раньше,чем начало,и вперед,если конец находится позже начала,если только точно один из данных индексов не является отрицательным.Это делается для того,чтобы включить зажим без изменения направления,если в списке меньше элементов,чем ожидалось.</target>
        </trans-unit>
        <trans-unit id="b16d80967d06f9706108437bd28e6a8d5175e9a0" translate="yes" xml:space="preserve">
          <source>Reading from or appending to a non existing file.</source>
          <target state="translated">Чтение из несуществующего файла или добавление к нему.</target>
        </trans-unit>
        <trans-unit id="3e22373b8f4786a11fc3f5247c24bd1cd140127f" translate="yes" xml:space="preserve">
          <source>Ready for more?</source>
          <target state="translated">Готовы к большему?</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">Регулярные экспрессии</target>
        </trans-unit>
        <trans-unit id="5c8c7c6ececfc7a4858b06b4968629df633fe974" translate="yes" xml:space="preserve">
          <source>Renames an existing abbreviation from &lt;code&gt;gco&lt;/code&gt; to &lt;code&gt;gch&lt;/code&gt;.</source>
          <target state="translated">Переименовывает существующее сокращение с &lt;code&gt;gco&lt;/code&gt; на &lt;code&gt;gch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc79b3cd9563c59f1fd2d978861f14b1270090f" translate="yes" xml:space="preserve">
          <source>Repeat Examples</source>
          <target state="translated">Повторить Примеры</target>
        </trans-unit>
        <trans-unit id="a879640933d6c8936ca4cc6a02a55f8cc4408041" translate="yes" xml:space="preserve">
          <source>Replace Literal Examples</source>
          <target state="translated">Заменить буквальные примеры</target>
        </trans-unit>
        <trans-unit id="13b05ad41dc01c7c29077cca05d8339a7a6429b9" translate="yes" xml:space="preserve">
          <source>Replace Regex Examples</source>
          <target state="translated">Заменить Регекс Примеры</target>
        </trans-unit>
        <trans-unit id="4c85d59c181a8bdfec393789d72d1942cf54846f" translate="yes" xml:space="preserve">
          <source>Return Values</source>
          <target state="translated">Возвращаемые значения</target>
        </trans-unit>
        <trans-unit id="27ca7249b11e61ac7f3b63efe842130af63f97b8" translate="yes" xml:space="preserve">
          <source>Run the following command in fish:</source>
          <target state="translated">Выполните следующую команду в рыбе:</target>
        </trans-unit>
        <trans-unit id="ddd9c246e03e2789458ae8bb429c9d694195cb17" translate="yes" xml:space="preserve">
          <source>Running Commands</source>
          <target state="translated">Бегущие команды</target>
        </trans-unit>
        <trans-unit id="5c5cc33a225b06807a45544c8793a5276a15976d" translate="yes" xml:space="preserve">
          <source>Running multiple programs</source>
          <target state="translated">Запуск нескольких программ</target>
        </trans-unit>
        <trans-unit id="b3fe37f1b337c360725965146e94ffa93a9708da" translate="yes" xml:space="preserve">
          <source>SEQUENCE is the character sequence to bind to. These should be written as &lt;a href=&quot;index#escapes&quot;&gt;fish escape sequences&lt;/a&gt;. For example, because pressing the Alt key and another character sends that character prefixed with an escape character, Alt-based key bindings can be written using the &lt;code&gt;\e&lt;/code&gt; escape. For example, &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;w&lt;/b&gt; can be written as &lt;code&gt;\ew&lt;/code&gt;. The control character can be written in much the same way using the &lt;code&gt;\c&lt;/code&gt; escape, for example &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;X&lt;/b&gt; (^X) can be written as &lt;code&gt;\cx&lt;/code&gt;. Note that Alt-based key bindings are case sensitive and Control-based key bindings are not. This is a constraint of text-based terminals, not &lt;code&gt;fish&lt;/code&gt;.</source>
          <target state="translated">ПОСЛЕДОВАТЕЛЬНОСТЬ - это последовательность символов для привязки. Они должны быть записаны как &lt;a href=&quot;index#escapes&quot;&gt;escape-последовательности рыб&lt;/a&gt; . Например, поскольку нажатие клавиши Alt и другой символ отправляют этот символ с префиксом escape-символа, привязки клавиш на основе Alt могут быть записаны с использованием escape-символа &lt;code&gt;\e&lt;/code&gt; . Например, &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;w&lt;/b&gt; можно записать как &lt;code&gt;\ew&lt;/code&gt; . Управляющий символ можно записать почти таким же образом, используя escape- символ &lt;code&gt;\c&lt;/code&gt; , например &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;X&lt;/b&gt; (^ X) можно записать как &lt;code&gt;\cx&lt;/code&gt; . Обратите внимание, что привязки клавиш на основе Alt чувствительны к регистру, а привязки клавиш на основе Control - нет. Это ограничение текстовых терминалов, а не &lt;code&gt;fish&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="769ee8ba6c10d0fc5cc5d5931ff5950b069f7631" translate="yes" xml:space="preserve">
          <source>STRING arguments are taken from the command line unless standard input is connected to a pipe or a file, in which case they are read from standard input, one STRING per line. It is an error to supply STRING arguments on the command line and on standard input.</source>
          <target state="translated">Аргументы STRING берутся из командной строки,если только стандартный вход не подключен к каналу или файлу,в этом случае они считываются со стандартного входа,по одному STRING на строку.Ошибкой является подача аргументов STRING в командную строку и на стандартный вход.</target>
        </trans-unit>
        <trans-unit id="3e9759d5f8593842e337c74b9202035585d520b2" translate="yes" xml:space="preserve">
          <source>Same as above but with a second flag that requires a value:</source>
          <target state="translated">То же самое,что и выше,но со вторым флагом,требующим значения:</target>
        </trans-unit>
        <trans-unit id="d562a361adfcc4bd04396673622d38c2c23c4a3b" translate="yes" xml:space="preserve">
          <source>Same as above but with a third flag that can be given multiple times saving the value of each instance seen and only the long flag name (&lt;code&gt;--token&lt;/code&gt;) can be used:</source>
          <target state="translated">То же, что и выше, но с третьим флагом, который можно указывать несколько раз, сохраняя значение каждого обнаруженного экземпляра, и можно использовать только длинное имя флага ( &lt;code&gt;--token&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c902e77d44ee1a72851bdd66a8039b7289e5469e" translate="yes" xml:space="preserve">
          <source>Say $animal contains the name of an animal. Then this code would classify it:</source>
          <target state="translated">Скажем,&quot;Животное&quot; содержит имя животного.Тогда этот код классифицирует его:</target>
        </trans-unit>
        <trans-unit id="2e406da000ac4099abeb149121071ece020d3907" translate="yes" xml:space="preserve">
          <source>Searchable history</source>
          <target state="translated">история с возможностью поиска</target>
        </trans-unit>
        <trans-unit id="b445d35ecc1c55f9e1ceba18d794fb79d964e899" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;index#editor&quot;&gt;documentation&lt;/a&gt; for more details about line editing in fish.</source>
          <target state="translated">См. &lt;a href=&quot;index#editor&quot;&gt;Документацию&lt;/a&gt; для получения более подробной информации о редактировании линий в fish.</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="67035298680ddb09dd248da78e915fd9c9627f01" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;dirs&lt;/code&gt; and &lt;code&gt;dirs -c&lt;/code&gt;.</source>
          <target state="translated">См. Также &lt;code&gt;dirs&lt;/code&gt; и &lt;code&gt;dirs -c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a3b31765df862a7d9c4531c872152ad402c53f3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;read --delimiter&lt;/code&gt;.</source>
          <target state="translated">Смотрите также &lt;code&gt;read --delimiter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7238893c67063d93ae05263dd71a5ccfc50d90c7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commands#cdh&quot;&gt;&lt;code&gt;cdh&lt;/code&gt;&lt;/a&gt; command for changing to a recently visited directory.</source>
          <target state="translated">См. Также команду &lt;a href=&quot;commands#cdh&quot;&gt; &lt;code&gt;cdh&lt;/code&gt; &lt;/a&gt; для перехода к недавно посещенному каталогу.</target>
        </trans-unit>
        <trans-unit id="01cfa9314baef15cf1a7d7383228c6d181370cb2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;commands#prevd&quot;&gt;&lt;code&gt;prevd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#pushd&quot;&gt;&lt;code&gt;pushd&lt;/code&gt;&lt;/a&gt; commands which also work with the recent &lt;code&gt;cd&lt;/code&gt; history and are provided for compatibility with other shells.</source>
          <target state="translated">См. Также команды &lt;a href=&quot;commands#prevd&quot;&gt; &lt;code&gt;prevd&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;commands#pushd&quot;&gt; &lt;code&gt;pushd&lt;/code&gt; ,&lt;/a&gt; которые также работают с недавней историей &lt;code&gt;cd&lt;/code&gt; дисков и предназначены для совместимости с другими оболочками.</target>
        </trans-unit>
        <trans-unit id="c59959e6168e702c87aad6497074fc87974da46d" translate="yes" xml:space="preserve">
          <source>See the &quot;Internals&quot; section for more on them.</source>
          <target state="translated">Подробнее о них смотрите в разделе &quot;Интерналы&quot;.</target>
        </trans-unit>
        <trans-unit id="c6e5f5869c0d557646211d7b722a3358667dc217" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#fish-opt&quot;&gt;&lt;code&gt;fish_opt&lt;/code&gt;&lt;/a&gt; command for a friendlier but more verbose way to create option specifications.</source>
          <target state="translated">См. &lt;a href=&quot;#fish-opt&quot;&gt; &lt;code&gt;fish_opt&lt;/code&gt; &lt;/a&gt; для более удобного, но более подробного способа создания спецификаций параметров.</target>
        </trans-unit>
        <trans-unit id="8ac7646fb3e869bb56303fbe3fca839b0d38f1d8" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;commands#funced&quot;&gt;funced&lt;/a&gt; and &lt;a href=&quot;commands#funcsave&quot;&gt;funcsave&lt;/a&gt; for ways to create these files automatically.</source>
          <target state="translated">См. Документацию для &lt;a href=&quot;commands#funced&quot;&gt;funced&lt;/a&gt; и &lt;a href=&quot;commands#funcsave&quot;&gt;funcsave,&lt;/a&gt; чтобы узнать о способах автоматического создания этих файлов.</target>
        </trans-unit>
        <trans-unit id="bb216107606bc95b848f93fc29c67e8fe68c93ea" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;commands#test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Обратитесь к документации для &lt;a href=&quot;commands#test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; и , &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9299a43e63898a7efcae7a83cc40f247242085fc" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;set&lt;/code&gt; for more details on the scoping rules for variables.</source>
          <target state="translated">См. Документацию по &lt;code&gt;set&lt;/code&gt; для получения дополнительных сведений о правилах области видимости для переменных.</target>
        </trans-unit>
        <trans-unit id="f325a391b2afa8d45fd9b05b9b133df7d497fc47" translate="yes" xml:space="preserve">
          <source>Separating Commands (Semicolon)</source>
          <target state="translated">Разделительные команды (точка с запятой)</target>
        </trans-unit>
        <trans-unit id="cafea76301da663d6e72c8dd0182bf1a08fe0c7b" translate="yes" xml:space="preserve">
          <source>Setting the background color only affects subsequently written characters. Fish provides no way to set the background color for the entire terminal window. Configuring the window background color (and other attributes such as its opacity) has to be done using whatever mechanisms the terminal provides.</source>
          <target state="translated">Установка цвета фона влияет только на последующие написанные символы.Рыба не позволяет установить цвет фона для всего окна терминала.Настройка цвета фона окна (и других атрибутов,таких как его непрозрачность)должна быть выполнена с использованием любых механизмов,предоставляемых терминалом.</target>
        </trans-unit>
        <trans-unit id="0c0750f1643a764b440d30cec12896d4e2f3c4f4" translate="yes" xml:space="preserve">
          <source>Shared bindings</source>
          <target state="translated">Общие крепления</target>
        </trans-unit>
        <trans-unit id="61e5ec8aae4e834701135d3867ab63125d131c5e" translate="yes" xml:space="preserve">
          <source>Shell variable and function names</source>
          <target state="translated">Имена переменных и функций оболочки</target>
        </trans-unit>
        <trans-unit id="e91aede6defa8d430f67e550004d49863d3e2e5b" translate="yes" xml:space="preserve">
          <source>Shell variables</source>
          <target state="translated">переменные Shell</target>
        </trans-unit>
        <trans-unit id="0f86f7ae2195716edf4d3ac75b6ae230d7060ba1" translate="yes" xml:space="preserve">
          <source>Shell variables are named pieces of data, which can be created, deleted and their values changed and used by the user. Variables may optionally be &quot;exported&quot;, so that a copy of the variable is available to any subprocesses the shell creates. An exported variable is referred to as an &quot;environment variable&quot;.</source>
          <target state="translated">Переменные Shell-это именованные фрагменты данных,которые могут быть созданы,удалены,а их значения изменены и использованы пользователем.Переменные могут быть опционально &quot;экспортированы&quot;,чтобы копия переменной была доступна любым подпроцессам,созданным оболочкой.Экспортируемая переменная называется &quot;переменной окружения&quot;.</target>
        </trans-unit>
        <trans-unit id="e122d1fcfbe4d2952329855d2c90efb389777230" translate="yes" xml:space="preserve">
          <source>Shells like fish are used by giving them commands. Every &lt;code&gt;fish&lt;/code&gt; command follows the same simple syntax.</source>
          <target state="translated">Снаряды, как рыба, используются, давая им команды. Каждая команда &lt;code&gt;fish&lt;/code&gt; следует одному и тому же простому синтаксису.</target>
        </trans-unit>
        <trans-unit id="42414c807cd9c1ab64d204f7113345e9c5f0a85a" translate="yes" xml:space="preserve">
          <source>Short options, like '&lt;code&gt;-a&lt;/code&gt;'. Short options are a single character long, are preceded by a single hyphen and may be grouped together (like '&lt;code&gt;-la&lt;/code&gt;', which is equivalent to '&lt;code&gt;-l -a&lt;/code&gt;'). Option arguments may be specified in the following parameter ('&lt;code&gt;-w 32&lt;/code&gt;') or by appending the option with the value ('&lt;code&gt;-w32&lt;/code&gt;').</source>
          <target state="translated">Короткие варианты, например &quot; &lt;code&gt;-a&lt;/code&gt; &quot;. Короткие параметры состоят из одного символа, им предшествует один дефис, и их можно сгруппировать (например, &amp;laquo; &lt;code&gt;-la&lt;/code&gt; &amp;raquo;, что эквивалентно &amp;laquo; &lt;code&gt;-l -a&lt;/code&gt; &amp;raquo;). Аргументы опции можно указать в следующем параметре (' &lt;code&gt;-w 32&lt;/code&gt; ') или путем добавления опции со значением (' &lt;code&gt;-w32&lt;/code&gt; ').</target>
        </trans-unit>
        <trans-unit id="214c488d368da8c81796e48eb7f6963ef7a93bff" translate="yes" xml:space="preserve">
          <source>Should you wish to uninstall fish, first ensure fish is not set as your shell. Run &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; if you are not sure.</source>
          <target state="translated">Если вы хотите удалить fish, сначала убедитесь, что рыба не установлена ​​в качестве вашей раковины. Если вы не уверены, запустите &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5a22b01fc547f4aefabc8c7a496313159dfc74d" translate="yes" xml:space="preserve">
          <source>Signal names are case insensitive and the &lt;code&gt;SIG&lt;/code&gt; prefix is optional.</source>
          <target state="translated">Имена сигналов нечувствительны к регистру, а префикс &lt;code&gt;SIG&lt;/code&gt; необязателен.</target>
        </trans-unit>
        <trans-unit id="2339b49e18e4fa7fa63c25097d1c3cb05b3abf7a" translate="yes" xml:space="preserve">
          <source>Similar to bash, fish has Emacs and Vi editing modes. The default editing mode is Emacs. You can switch to Vi mode with &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; and switch back with &lt;code&gt;fish_default_key_bindings&lt;/code&gt;. You can also make your own key bindings by creating a function and setting $fish_key_bindings to its name. For example:</source>
          <target state="translated">Подобно bash, fish имеет режимы редактирования Emacs и Vi. Режим редактирования по умолчанию - Emacs. Вы можете переключиться в режим Vi с помощью &lt;code&gt;fish_vi_key_bindings&lt;/code&gt; и вернуться обратно с помощью &lt;code&gt;fish_default_key_bindings&lt;/code&gt; . Вы также можете создавать свои собственные привязки клавиш, создав функцию и установив ее имя в $ fish_key_bindings. Например:</target>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="530fce1c2ad1ce0277a5df96933c6fbf422dc856" translate="yes" xml:space="preserve">
          <source>Some OPTION_SPEC examples:</source>
          <target state="translated">Некоторые примеры OPTION_SPEC:</target>
        </trans-unit>
        <trans-unit id="4d6baccd4c71912ba57043465594b0cf17749be7" translate="yes" xml:space="preserve">
          <source>Some bindings are shared between emacs- and vi-mode because they aren't text editing bindings or because what Vi/Vim does for a particular key doesn't make sense for a shell.</source>
          <target state="translated">Некоторые связки разделяются между emacs-и vi-режимом,потому что они не являются связками для редактирования текста,или потому что то,что Vi/Vim делает для конкретного ключа,не имеет смысла для оболочки.</target>
        </trans-unit>
        <trans-unit id="425593164f34a70e7fd63371baa3a373bc2ecb38" translate="yes" xml:space="preserve">
          <source>Some characters can not be written directly on the command line. For these characters, so called escape sequences are provided. These are:</source>
          <target state="translated">Некоторые символы не могут быть записаны непосредственно в командной строке.Для этих символов предусмотрены так называемые экранирующие последовательности.Это:</target>
        </trans-unit>
        <trans-unit id="6dd3509b210643ba6eefaffcdf24924a6a2790a7" translate="yes" xml:space="preserve">
          <source>Some common words</source>
          <target state="translated">Некоторые общие слова</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">Несколько примеров:</target>
        </trans-unit>
        <trans-unit id="9a67d5493118a559656027def8dc4fcd0cc3974f" translate="yes" xml:space="preserve">
          <source>Some features include repetitions:</source>
          <target state="translated">Некоторые особенности включают повторения:</target>
        </trans-unit>
        <trans-unit id="d39624c87b3e78e02ed8dde71f696712e0710389" translate="yes" xml:space="preserve">
          <source>Some shells (e.g., ksh, bash) feature a syntax that is a mix between command substitution and piping, called process substitution. It is used to send the output of a command into the calling command, much like command substitution, but with the difference that the output is not sent through commandline arguments but through a named pipe, with the filename of the named pipe sent as an argument to the calling program. &lt;code&gt;psub&lt;/code&gt; combined with a regular command substitution provides the same functionality.</source>
          <target state="translated">Некоторые оболочки (например, ksh, bash) имеют синтаксис, который представляет собой смесь подстановки команд и конвейерной обработки, называемую подстановкой процесса. Он используется для отправки вывода команды в вызывающую команду, очень похоже на подстановку команды, но с той разницей, что вывод отправляется не через аргументы командной строки, а через именованный канал, с именем файла именованного канала, отправляемым в качестве аргумента в вызывающую программу. &lt;code&gt;psub&lt;/code&gt; в сочетании с обычной заменой команд обеспечивает ту же функциональность.</target>
        </trans-unit>
        <trans-unit id="28861f1ca2bfa4eb42bfb98ba18be09e02df8f97" translate="yes" xml:space="preserve">
          <source>Some terminals use the &lt;code&gt;--bold&lt;/code&gt; escape sequence to switch to a brighter color set rather than increasing the weight of text.</source>
          <target state="translated">Некоторые терминалы используют escape-последовательность &lt;code&gt;--bold&lt;/code&gt; для переключения на более яркий набор цветов, а не для увеличения веса текста.</target>
        </trans-unit>
        <trans-unit id="c4dd50f777b9a845d16edeb5ac29fc4998e7e176" translate="yes" xml:space="preserve">
          <source>Some variables, like &lt;code&gt;$PWD&lt;/code&gt;, only have one value. By convention, we talk about that variable's value, but we really mean its first (and only) value.</source>
          <target state="translated">Некоторые переменные, такие как &lt;code&gt;$PWD&lt;/code&gt; , имеют только одно значение. По соглашению мы говорим о значении этой переменной, но на самом деле мы имеем в виду ее первое (и единственное) значение.</target>
        </trans-unit>
        <trans-unit id="8709ff84c2c20f30aea0078b8e4ce461f5bca70c" translate="yes" xml:space="preserve">
          <source>Sometimes features such as &lt;a href=&quot;#expand&quot;&gt;parameter expansion&lt;/a&gt; and &lt;a href=&quot;#escapes&quot;&gt;character escapes&lt;/a&gt; get in the way. When that happens, the user can write a parameter within quotes, either &amp;lsquo;&amp;rsquo;&lt;code&gt;(single quote) or&lt;/code&gt;&quot;&lt;code&gt;(double quote). There is one important difference between single quoted and double quoted strings: When using double quoted string, &amp;lt;a href=&quot;#expand-variable&quot;&amp;gt;variable expansion&amp;lt;/a&amp;gt; still takes place. Other than that, no other kind of expansion (including &amp;lt;a href=&quot;#expand-brace&quot;&amp;gt;brace expansion&amp;lt;/a&amp;gt; and parameter expansion) will take place, the parameter may contain spaces, and escape sequences are ignored. The only backslash escape accepted within single quotes is&lt;/code&gt;\'&lt;code&gt;, which escapes a single quote and&lt;/code&gt;\`, which escapes the backslash symbol. The only backslash escapes accepted within double quotes are &lt;code&gt;\&quot;&lt;/code&gt;, which escapes a double quote, &lt;code&gt;\$&lt;/code&gt;, which escapes a dollar character, &lt;code&gt;\&lt;/code&gt; followed by a newline, which deletes the backslash and the newline, and lastly &lt;code&gt;\\&lt;/code&gt;, which escapes the backslash symbol. Single quotes have no special meaning within double quotes and vice versa.</source>
          <target state="translated">Иногда мешают такие функции, как &lt;a href=&quot;#expand&quot;&gt;расширение параметров&lt;/a&gt; и &lt;a href=&quot;#escapes&quot;&gt;экранирование символов&lt;/a&gt; . Когда это происходит, пользователь может написать параметр в кавычках, либо &quot;&quot; &lt;code&gt;(single quote) or&lt;/code&gt; &quot; &lt;code&gt;(double quote). There is one important difference between single quoted and double quoted strings: When using double quoted string, &amp;lt;a href=&quot;#expand-variable&quot;&amp;gt;variable expansion&amp;lt;/a&amp;gt; still takes place. Other than that, no other kind of expansion (including &amp;lt;a href=&quot;#expand-brace&quot;&amp;gt;brace expansion&amp;lt;/a&amp;gt; and parameter expansion) will take place, the parameter may contain spaces, and escape sequences are ignored. The only backslash escape accepted within single quotes is&lt;/code&gt; \ ' &lt;code&gt;, which escapes a single quote and&lt;/code&gt; \ `, который экранирует символ обратной косой черты. В двойных кавычках допускается только экранирование обратной косой черты &lt;code&gt;\&quot;&lt;/code&gt; , которое экранирует двойные кавычки, &lt;code&gt;\$&lt;/code&gt; , которое экранирует символ доллара, &lt;code&gt;\&lt;/code&gt; , за которым следует новая строка, которая удаляет обратную косую черту и новую строку, и, наконец, &lt;code&gt;\\&lt;/code&gt; , которая экранирует обратную косую черту. одинарные кавычки не имеют особого значения в двойных кавычках и наоборот.</target>
        </trans-unit>
        <trans-unit id="5773d504847f59d4f28606344c751b42fcadfb09" translate="yes" xml:space="preserve">
          <source>Special Case: The escape Character</source>
          <target state="translated">Особый случай:Характер побега</target>
        </trans-unit>
        <trans-unit id="28dc52fcfc9145786fed85cff73226269b82a2c9" translate="yes" xml:space="preserve">
          <source>Special input functions</source>
          <target state="translated">Специальные функции ввода</target>
        </trans-unit>
        <trans-unit id="a6c32b7763c1deccd93080cf33efdb324072a965" translate="yes" xml:space="preserve">
          <source>Special variables</source>
          <target state="translated">Специальные переменные</target>
        </trans-unit>
        <trans-unit id="a0a234701d3553b3ee0fce9d93e7f64fadef5cac" translate="yes" xml:space="preserve">
          <source>Specifying your own completions is not difficult. To specify a completion, use the &lt;code&gt;complete&lt;/code&gt; command. &lt;code&gt;complete&lt;/code&gt; takes as a parameter the name of the command to specify a completion for. For example, to add a completion for the program &lt;code&gt;myprog&lt;/code&gt;, one would start the completion command with &lt;code&gt;complete -c myprog ...&lt;/code&gt;</source>
          <target state="translated">Уточнение собственных доработок несложно. Чтобы указать завершение, используйте команду &lt;code&gt;complete&lt;/code&gt; . &lt;code&gt;complete&lt;/code&gt; принимает в качестве параметра имя команды, для которой нужно указать завершение. Например, чтобы добавить завершение для программы &lt;code&gt;myprog&lt;/code&gt; , нужно запустить команду завершения с помощью &lt;code&gt;complete -c myprog ...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ac6973627e50b5b3feef24cc873cca39ec65518" translate="yes" xml:space="preserve">
          <source>Standard error, FD 2, for writing errors and warnings, defaults to writing to the screen.</source>
          <target state="translated">Стандартная ошибка,FD 2,для записи ошибок и предупреждений,по умолчанию для записи на экран.</target>
        </trans-unit>
        <trans-unit id="8116e8803b0b4ccfe612ba1239d0a4c13eb0c484" translate="yes" xml:space="preserve">
          <source>Standard input, FD 0, for reading, defaults to reading from the keyboard.</source>
          <target state="translated">Стандартный ввод,FD 0,для чтения,по умолчанию для чтения с клавиатуры.</target>
        </trans-unit>
        <trans-unit id="fd08166eefe7793a02e0886b87576b866f11ba8d" translate="yes" xml:space="preserve">
          <source>Standard output, FD 1, for writing, defaults to writing to the screen.</source>
          <target state="translated">Стандартный вывод,FD 1,для записи,по умолчанию для записи на экран.</target>
        </trans-unit>
        <trans-unit id="b3883f88eaf74aa505b11f01894c4909220af6a1" translate="yes" xml:space="preserve">
          <source>Standards</source>
          <target state="translated">Standards</target>
        </trans-unit>
        <trans-unit id="806c8aeb75c45b416dcfcd215f384af2b2abda22" translate="yes" xml:space="preserve">
          <source>Startup (Where's .bashrc?)</source>
          <target state="translated">Стартап (Где .bashrc?)</target>
        </trans-unit>
        <trans-unit id="b3cfed68ddc06bae90fd47f85fdeed65b5766e4e" translate="yes" xml:space="preserve">
          <source>Support for italics, dim, reverse, and other modes is not guaranteed in all terminal emulators. Fish attempts to determine if the terminal supports these modes even if the terminfo database may not be up-to-date.</source>
          <target state="translated">Поддержка курсива,затемнения,реверса и других режимов гарантирована не во всех терминальных эмуляторах.Рыба пытается определить,поддерживает ли терминал эти режимы,даже если база данных терминала может быть неактуальной.</target>
        </trans-unit>
        <trans-unit id="d269dff6a5e6def876fa34f03bd1eb013ca33acd" translate="yes" xml:space="preserve">
          <source>Switches differ between commands and are documented in the manual page for each command. Some switches are common to most command though, for example '&lt;code&gt;--help&lt;/code&gt;' will usually display a help text, '&lt;code&gt;-i&lt;/code&gt;' will often turn on interactive prompting before taking action, while '&lt;code&gt;-f&lt;/code&gt;' will turn it off.</source>
          <target state="translated">Переключатели различаются между командами и задокументированы на странице руководства для каждой команды. Некоторые переключатели являются общими для большинства команд, например, ' &lt;code&gt;--help&lt;/code&gt; ' обычно отображает текст справки, ' &lt;code&gt;-i&lt;/code&gt; ' часто включает интерактивные запросы перед выполнением действия, а ' &lt;code&gt;-f&lt;/code&gt; ' отключает его.</target>
        </trans-unit>
        <trans-unit id="b5eb6066faf764d428231e3c214c4d783bbf5bcc" translate="yes" xml:space="preserve">
          <source>Switching to fish?</source>
          <target state="translated">Переходишь на рыбу?</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="d27b4fd727666f53e797902bf47550ba0a21184a" translate="yes" xml:space="preserve">
          <source>Syntax Highlighting</source>
          <target state="translated">Выделение синтаксиса</target>
        </trans-unit>
        <trans-unit id="037fceb004812e2c76fd4ee125e5787960e7ee91" translate="yes" xml:space="preserve">
          <source>Syntax highlighting</source>
          <target state="translated">Подсветка синтаксиса</target>
        </trans-unit>
        <trans-unit id="418e9ee62ad6b7ba7264fdf5d0ee995e2e351045" translate="yes" xml:space="preserve">
          <source>Syntax overview</source>
          <target state="translated">Обзор синтаксиса</target>
        </trans-unit>
        <trans-unit id="afcc6a38c449b540b7b14d03d1b1f6092ebcf158" translate="yes" xml:space="preserve">
          <source>System-wide configuration files, where administrators can include initialization that should be run for all users on the system - similar to &lt;code&gt;/etc/profile&lt;/code&gt; for POSIX-style shells - in &lt;code&gt;$__fish_sysconf_dir&lt;/code&gt; (usually &lt;code&gt;/etc/fish/config.fish&lt;/code&gt;);</source>
          <target state="translated">Общесистемные файлы конфигурации, в которых администраторы могут включить инициализацию, которая должна выполняться для всех пользователей в системе - аналогично &lt;code&gt;/etc/profile&lt;/code&gt; для оболочек в стиле POSIX - в &lt;code&gt;$__fish_sysconf_dir&lt;/code&gt; (обычно &lt;code&gt;/etc/fish/config.fish&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="87564ea1bf094f88395489e37aab98a53d8a3438" translate="yes" xml:space="preserve">
          <source>Tab Completions</source>
          <target state="translated">Завершения витрины</target>
        </trans-unit>
        <trans-unit id="eb8b89e8c468a2f2b0bf3f62ac7419a0270f3b4b" translate="yes" xml:space="preserve">
          <source>Tab completion</source>
          <target state="translated">заполнение вкладки</target>
        </trans-unit>
        <trans-unit id="2ea2b2cc91429ba0736ea7b5a4dc7f2208abf174" translate="yes" xml:space="preserve">
          <source>Tab completion is one of the most time saving features of any modern shell. By tapping the tab key, the user asks &lt;code&gt;fish&lt;/code&gt; to guess the rest of the command or parameter that the user is currently typing. If &lt;code&gt;fish&lt;/code&gt; can only find one possible completion, &lt;code&gt;fish&lt;/code&gt; will write it out. If there is more than one completion, &lt;code&gt;fish&lt;/code&gt; will write out the longest prefix that all completions have in common. If the completions differ on the first character, a list of all possible completions is printed. The list features descriptions of the completions and if the list doesn't fit the screen, it is scrollable by using the arrow keys, the page up/page down keys, the tab key or the space bar.</source>
          <target state="translated">Автозавершение табуляции - одна из самых экономящих время функций любой современной оболочки. Нажимая клавишу табуляции, пользователь просит &lt;code&gt;fish&lt;/code&gt; угадать оставшуюся часть команды или параметра, который пользователь вводит в данный момент. Если &lt;code&gt;fish&lt;/code&gt; может найти только одно возможное завершение, &lt;code&gt;fish&lt;/code&gt; его запишет. Если есть более одного завершения, &lt;code&gt;fish&lt;/code&gt; запишет самый длинный префикс, который есть у всех завершений. Если завершения отличаются по первому символу, печатается список всех возможных завершений. В списке представлены описания завершений, и если список не умещается на экране, его можно прокручивать с помощью клавиш со стрелками, клавиш перехода вверх / вниз, клавиши табуляции или пробела.</target>
        </trans-unit>
        <trans-unit id="44e924f5f1b607dd0e4feccbc1d4d898f052a887" translate="yes" xml:space="preserve">
          <source>Tacklebox</source>
          <target state="translated">Tacklebox</target>
        </trans-unit>
        <trans-unit id="e3c7839574383a9eaa3d82c610c455446f6121c0" translate="yes" xml:space="preserve">
          <source>Terminal Capability Detection</source>
          <target state="translated">Обнаружение способности терминала</target>
        </trans-unit>
        <trans-unit id="b54b1fa82b8ecdc3fb07f7f9d29066e5997831e6" translate="yes" xml:space="preserve">
          <source>Tests the expression given and sets the exit status to 0 if true, and 1 if false. An expression is made up of one or more operators and their arguments.</source>
          <target state="translated">Тестирует данное выражение и устанавливает статус выхода равным 0,если истинно,и 1,если ложно.Выражение состоит из одного или нескольких операторов и их аргументов.</target>
        </trans-unit>
        <trans-unit id="6b1fc2e3b816bc95de3d9b1753ab9aa1375ff7b8" translate="yes" xml:space="preserve">
          <source>That means if you run</source>
          <target state="translated">Это значит,что если ты побежишь</target>
        </trans-unit>
        <trans-unit id="92160f08bddffe06e4520887bdd5645514caf0af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;project GitHub page&lt;/a&gt;</source>
          <target state="translated">Страница &lt;a href=&quot;https://github.com/fish-shell/fish-shell/&quot;&gt;проекта на GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc348ddd7ad603b4b7e3a6d1134042f24b0ee0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$&lt;/code&gt; symbol can also be used multiple times, as a kind of &quot;dereference&quot; operator (the &lt;code&gt;*&lt;/code&gt; in C or C++), like in the following code:</source>
          <target state="translated">Символ &lt;code&gt;$&lt;/code&gt; также можно использовать несколько раз как своего рода оператор &amp;laquo;разыменования&amp;raquo; ( &lt;code&gt;*&lt;/code&gt; в C или C ++), как в следующем коде:</target>
        </trans-unit>
        <trans-unit id="7e4fc8fc89e59cd9ece4a187b16054d89db8031c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; operators for comparing strings are not implemented.</source>
          <target state="translated">Операторы &lt;code&gt;&amp;lt;&lt;/code&gt; и &lt;code&gt;&amp;gt;&lt;/code&gt; для сравнения строк не реализованы.</target>
        </trans-unit>
        <trans-unit id="65fe6102162982a331ea3f92362fbdf8528333d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; argument is required. You do not have to include any arguments after the &lt;code&gt;--&lt;/code&gt; but you must include the &lt;code&gt;--&lt;/code&gt;. For example, this is acceptable:</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; аргумент требуется. Вам не нужно включать какие-либо аргументы после &lt;code&gt;--&lt;/code&gt; но вы должны включать &lt;code&gt;--&lt;/code&gt; . Например, это приемлемо:</target>
        </trans-unit>
        <trans-unit id="0c906c7f83627c97b083a6eb5c63248805d8c516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--&lt;/code&gt; here stops &lt;code&gt;contains&lt;/code&gt; from treating &lt;code&gt;-q&lt;/code&gt; to an option to itself. Instead it treats it as a normal string to check.</source>
          <target state="translated">&lt;code&gt;--&lt;/code&gt; здесь останавливается &lt;code&gt;contains&lt;/code&gt; от лечения &lt;code&gt;-q&lt;/code&gt; до опции к себе. Вместо этого он обрабатывает его как обычную строку для проверки.</target>
        </trans-unit>
        <trans-unit id="c88d441c07c1b7086b4b120f0e1995c32e1789db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-P&lt;/code&gt; flags (and their long flag aliases) are mutually exclusive. Only one can be specified at a time.</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; , &lt;code&gt;-p&lt;/code&gt; , &lt;code&gt;-t&lt;/code&gt; и &lt;code&gt;-P&lt;/code&gt; флаги (и их длинный флаг псевдонимы) являются взаимоисключающими. За один раз можно указать только один.</target>
        </trans-unit>
        <trans-unit id="2c58a8949ca637e3657d904f90d0683f9b8a4548" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--wraps&lt;/code&gt; options causes the specified command to inherit completions from another command. The inheriting command is said to &quot;wrap&quot; the inherited command. The wrapping command may have its own completions in addition to inherited ones. A command may wrap multiple commands, and wrapping is transitive: if A wraps B, and B wraps C, then A automatically inherits all of C's completions. Wrapping can be removed using the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; options. Note that wrapping only works for completions specified with &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--command&lt;/code&gt; and are ignored when specifying completions with &lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--path&lt;/code&gt;.</source>
          <target state="translated">Параметры &lt;code&gt;-w&lt;/code&gt; или &lt;code&gt;--wraps&lt;/code&gt; заставляют указанную команду наследовать завершения от другой команды. Говорят, что наследующая команда &amp;laquo;оборачивает&amp;raquo; унаследованную команду. Команда обертывания может иметь свои собственные завершения в дополнение к унаследованным. Команда может заключать несколько команд в оболочку, и упаковка является транзитивной: если A обертывает B, а B обертывает C, то A автоматически наследует все завершения C. Перенос можно удалить с помощью параметров &lt;code&gt;-e&lt;/code&gt; или &lt;code&gt;--erase&lt;/code&gt; . Обратите внимание, что упаковка работает только для завершений, указанных с помощью &lt;code&gt;-c&lt;/code&gt; или &lt;code&gt;--command&lt;/code&gt; , и игнорируется при указании завершения с помощью &lt;code&gt;-p&lt;/code&gt; или &lt;code&gt;--path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3779bf48914bcae0cdcc953ecc413edee9ed2fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VARNAME&lt;/code&gt; was local to the for block in releases prior to 3.0.0. This means that if you did something like this:</source>
          <target state="translated">&lt;code&gt;VARNAME&lt;/code&gt; был местный к для блока в версиях до 3.0.0. Это означает, что если вы сделали что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="da3409d273e3db5ef8ddc4ea273fbbb872d656c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;rpm&lt;/code&gt; and &lt;code&gt;yum&lt;/code&gt; commands use all installed packages as completions.</source>
          <target state="translated">&lt;code&gt;apt-get&lt;/code&gt; , &lt;code&gt;rpm&lt;/code&gt; и &lt;code&gt;yum&lt;/code&gt; команда используют все установленные пакеты в качестве пополнений.</target>
        </trans-unit>
        <trans-unit id="08c885ad47f98ee1d2fa7d61aaf2be5914055c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;end&lt;/code&gt; command does not change the current exit status. Instead, the status after it will be the status returned by the most recent command.</source>
          <target state="translated">Команда &lt;code&gt;end&lt;/code&gt; не изменяет текущий статус выхода. Вместо этого статус после него будет статусом, возвращенным самой последней командой.</target>
        </trans-unit>
        <trans-unit id="3cb7ec726c85b79feb29910ee5250baa8513a66f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish&lt;/code&gt; editor features copy and paste, a searchable history and many editor functions that can be bound to special keyboard shortcuts.</source>
          <target state="translated">В редакторе &lt;code&gt;fish&lt;/code&gt; есть функции копирования и вставки, история поиска и множество функций редактора, которые можно привязать к специальным сочетаниям клавиш.</target>
        </trans-unit>
        <trans-unit id="c64f6cc8af3f868e2009e8fec92b3aa89f2848f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fish&lt;/code&gt; implementation of &lt;code&gt;ulimit&lt;/code&gt; should behave identically to the implementation in bash, except for these differences:</source>
          <target state="translated">&lt;code&gt;fish&lt;/code&gt; реализация всех &lt;code&gt;ulimit&lt;/code&gt; должна вести себя так же реализацию в Баше, за эти различия , за исключение:</target>
        </trans-unit>
        <trans-unit id="67113321177587b92e33339a6cdbfbb714ba38b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; argument is re-used as many times as necessary to convert all of the given arguments. If a format specifier is not appropriate for the given argument, an error is printed. For example, &amp;lsquo;printf &amp;rsquo;d' &quot;102.234&quot;` produces an error, as &quot;102.234&quot; cannot be formatted as an integer.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; аргумент используется повторно столько раз , сколько необходимо , чтобы преобразовать все заданные аргументы. Если спецификатор формата не подходит для данного аргумента, печатается ошибка. Например, 'printf' d '&amp;laquo;102.234&amp;raquo; &amp;laquo;выдает ошибку, поскольку&amp;laquo; 102.234 &amp;raquo;не может быть отформатировано как целое число.</target>
        </trans-unit>
        <trans-unit id="89f23a465dd8d76eebf980544d18d2de2601f2be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make&lt;/code&gt; program uses all targets in the Makefile in the current directory as completions.</source>
          <target state="translated">Программа &lt;code&gt;make&lt;/code&gt; использует все цели в Makefile в текущем каталоге как завершенные.</target>
        </trans-unit>
        <trans-unit id="08ddda0f4e3d5dbda6ef1fb82291b1b27f800ddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mount&lt;/code&gt; command uses all mount points specified in fstab as completions.</source>
          <target state="translated">Команда &lt;code&gt;mount&lt;/code&gt; использует все точки монтирования, указанные в fstab, как завершенные.</target>
        </trans-unit>
        <trans-unit id="bac670339d33af9a7bab7a0aa6c9bff4de41f823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; command uses the MIME type database and the &lt;code&gt;.desktop&lt;/code&gt; files used by Gnome and KDE to identify filetypes and default actions. If at least one of these environments is installed, but the open command is not working, this probably means that the relevant files are installed in a non-standard location. Consider &lt;a href=&quot;index#more-help&quot;&gt;asking for more help&lt;/a&gt;.</source>
          <target state="translated">Команда &lt;code&gt;open&lt;/code&gt; использует базу данных типов MIME и файлы &lt;code&gt;.desktop&lt;/code&gt; , используемые Gnome и KDE для определения типов файлов и действий по умолчанию. Если хотя бы одна из этих сред установлена, но команда open не работает, это, вероятно, означает, что соответствующие файлы установлены в нестандартном месте. Попробуйте &lt;a href=&quot;index#more-help&quot;&gt;попросить дополнительную помощь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12db9bbc519582e7296e06534b51717da7e239b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pushd&lt;/code&gt; function adds &lt;code&gt;DIRECTORY&lt;/code&gt; to the top of the directory stack and makes it the current working directory. &lt;a href=&quot;#popd&quot;&gt;&lt;code&gt;popd&lt;/code&gt;&lt;/a&gt; will pop it off and return to the original directory.</source>
          <target state="translated">Функция &lt;code&gt;pushd&lt;/code&gt; добавляет &lt;code&gt;DIRECTORY&lt;/code&gt; в верхнюю часть стека каталогов и делает его текущим рабочим каталогом. &lt;a href=&quot;#popd&quot;&gt; &lt;code&gt;popd&lt;/code&gt; &lt;/a&gt; откроет его и вернется в исходный каталог.</target>
        </trans-unit>
        <trans-unit id="a826eafcc5f8080c789ef8d78318660a9727e115" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; command supported the &lt;code&gt;-m&lt;/code&gt; and &lt;code&gt;--mode-name&lt;/code&gt; flags in fish versions prior to 2.7.0 to specify an alternative read history file. Those flags are now deprecated and ignored. Instead, set the &lt;code&gt;fish_history&lt;/code&gt; variable to specify a history session ID. That will affect both the &lt;code&gt;read&lt;/code&gt; history file and the fish command history file. You can set it to an empty string to specify that no history should be read or written. This is useful for presentations where you do not want possibly private or sensitive history to be exposed to the audience but do want history relevant to the presentation to be available.</source>
          <target state="translated">Команда &lt;code&gt;read&lt;/code&gt; поддерживала флаги &lt;code&gt;-m&lt;/code&gt; и &lt;code&gt;--mode-name&lt;/code&gt; в версиях fish до 2.7.0, чтобы указать альтернативный файл истории чтения. Эти флаги теперь устарели и игнорируются. Вместо этого установите переменную &lt;code&gt;fish_history&lt;/code&gt; , чтобы указать идентификатор сеанса истории. Это повлияет как на файл истории &lt;code&gt;read&lt;/code&gt; и на файл истории команд fish. Вы можете установить для него пустую строку, чтобы указать, что история не должна читаться или записываться. Это полезно для презентаций, где вы не хотите, чтобы аудитория могла раскрыть личную или конфиденциальную историю, но хотите, чтобы история, имеющая отношение к презентации, была доступна.</target>
        </trans-unit>
        <trans-unit id="7fcdb96d7e5417d911e99a0401becd905a30865f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rpm&lt;/code&gt; command has several different modes. If the &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt; flag has been specified, &lt;code&gt;rpm&lt;/code&gt; should delete one or more packages, in which case several switches related to deleting packages are valid, like the &lt;code&gt;nodeps&lt;/code&gt; switch.</source>
          <target state="translated">У команды &lt;code&gt;rpm&lt;/code&gt; есть несколько разных режимов. Если &lt;code&gt;--erase&lt;/code&gt; флаг &lt;code&gt;-e&lt;/code&gt; или --erase , &lt;code&gt;rpm&lt;/code&gt; должен удалить один или несколько пакетов, и в этом случае допустимы несколько переключателей, связанных с удалением пакетов, например переключатель &lt;code&gt;nodeps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a790e8c78ea9f158b99ff23d36fc572c40897097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; command above used quotes to ensure that &lt;code&gt;Mister Noodle&lt;/code&gt; was one argument. If it had been two arguments, then &lt;code&gt;name&lt;/code&gt; would have been a list of length 2. In fact, all variables in &lt;code&gt;fish&lt;/code&gt; are really lists, that can contain any number of values, or none at all.</source>
          <target state="translated">В &lt;code&gt;set&lt;/code&gt; выше команде set использовались кавычки, чтобы гарантировать, что &lt;code&gt;Mister Noodle&lt;/code&gt; был одним из аргументов. Если бы это было два аргумента, тогда &lt;code&gt;name&lt;/code&gt; было бы списком длины 2. Фактически, все переменные в &lt;code&gt;fish&lt;/code&gt; - это действительно списки, которые могут содержать любое количество значений или вообще ни одного.</target>
        </trans-unit>
        <trans-unit id="b8a21bdde776c698d3de37f05072833e8526edd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_color&lt;/code&gt; command uses the terminfo database to look up how to change terminal colors on whatever terminal is in use. Some systems have old and incomplete terminfo databases, and may lack color information for terminals that support it. Fish will assume that all terminals can use the &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI X3.64&lt;/a&gt; escape sequences if the terminfo definition indicates a color below 16 is not supported.</source>
          <target state="translated">Команда &lt;code&gt;set_color&lt;/code&gt; использует базу данных terminfo, чтобы узнать, как изменить цвета терминала на любом используемом терминале. Некоторые системы имеют старые и неполные базы данных terminfo и могут не иметь информации о цвете для терминалов, которые ее поддерживают. Fish предположит, что все терминалы могут использовать escape-последовательности &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI X3.64&lt;/a&gt; , если определение terminfo указывает, что цвет ниже 16 не поддерживается.</target>
        </trans-unit>
        <trans-unit id="570ae270bf32027068dbc7611cc21eacc745b07d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssh&lt;/code&gt; command uses all hosts that are stored in the known_hosts file as completions. (See the ssh documentation for more information)</source>
          <target state="translated">Команда &lt;code&gt;ssh&lt;/code&gt; использует все хосты, которые хранятся в файле known_hosts, как завершенные. (Дополнительную информацию см. В документации по ssh)</target>
        </trans-unit>
        <trans-unit id="98c28ed2787aacc681a7fe21c43d77f6911bb6d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;su&lt;/code&gt; command takes any username as an argument. Usernames are given as the first colon-separated field in the file /etc/passwd. This can be specified as:</source>
          <target state="translated">Команда &lt;code&gt;su&lt;/code&gt; принимает в качестве аргумента любое имя пользователя. Имена пользователей указываются в первом поле, разделенном двоеточиями, в файле / etc / passwd. Это можно указать как:</target>
        </trans-unit>
        <trans-unit id="d0c2e5dc87ea547203543a3113293b01834dc317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;su&lt;/code&gt; command uses all users on the system as completions.</source>
          <target state="translated">Команда &lt;code&gt;su&lt;/code&gt; использует всех пользователей системы как завершающих.</target>
        </trans-unit>
        <trans-unit id="ac2d93e5ce9c99380286aea119eb1c4d811d5e80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switch&lt;/code&gt; command is used to execute one of possibly many blocks of commands depending on the value of a string. See the documentation for &lt;a href=&quot;commands#switch&quot;&gt;switch&lt;/a&gt; for more information.</source>
          <target state="translated">Команда &lt;code&gt;switch&lt;/code&gt; используется для выполнения одного из множества блоков команд в зависимости от значения строки. См. Документацию по &lt;a href=&quot;commands#switch&quot;&gt;коммутатору&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="47ad27700014770c354049370500a3fdcb1e0c70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~&lt;/code&gt; (tilde) character at the beginning of a parameter, followed by a username, is expanded into the home directory of the specified user. A lone &lt;code&gt;~&lt;/code&gt;, or a &lt;code&gt;~&lt;/code&gt; followed by a slash, is expanded into the home directory of the process owner.</source>
          <target state="translated">Символ &lt;code&gt;~&lt;/code&gt; (тильда) в начале параметра, за которым следует имя пользователя, расширяется в домашний каталог указанного пользователя. Одинокий &lt;code&gt;~&lt;/code&gt; или &lt;code&gt;~&lt;/code&gt; через слэш, раскладывается в домашний каталог владельца процесса.</target>
        </trans-unit>
        <trans-unit id="81bc67c4cc6d1500fe78dbf824dcd5a05daabcef" translate="yes" xml:space="preserve">
          <source>The Internet Relay Chat channel, #fish on &lt;code&gt;irc.oftc.net&lt;/code&gt;</source>
          <target state="translated">Канал ретрансляционного чата в Интернете, #fish на &lt;code&gt;irc.oftc.net&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38912f78e93626e5fa47b637ba81937a676623d5" translate="yes" xml:space="preserve">
          <source>The advantage is that you don't have to go mucking around in files: just run this once at the command line, and it will affect the current session and all future instances too. (Note: you should NOT add this line to &lt;code&gt;config.fish&lt;/code&gt;. If you do, the variable will get longer each time you run fish!)</source>
          <target state="translated">Преимущество заключается в том, что вам не нужно копаться в файлах: просто запустите это один раз в командной строке, и это повлияет на текущий сеанс и все будущие экземпляры. (Примечание: вам НЕ следует добавлять эту строку в &lt;code&gt;config.fish&lt;/code&gt; . Если вы это сделаете, переменная будет становиться длиннее каждый раз, когда вы запускаете fish!)</target>
        </trans-unit>
        <trans-unit id="9a5b6fa2b60fb7b30f834fa877a85006d71c86dd" translate="yes" xml:space="preserve">
          <source>The block can be removed. Any events which triggered while the block was in place will then be delivered.</source>
          <target state="translated">Блок можно снять.Любые события,которые сработали в то время,когда блок был на месте,будут доставлены.</target>
        </trans-unit>
        <trans-unit id="bb7debcb6ad4bd52a3602c3c576ba4ce44391ac4" translate="yes" xml:space="preserve">
          <source>The block is unconditionally executed. &lt;code&gt;begin; ...; end&lt;/code&gt; is equivalent to &lt;code&gt;if true; ...; end&lt;/code&gt;.</source>
          <target state="translated">Блок безоговорочно исполняется. &lt;code&gt;begin; ...; end&lt;/code&gt; эквивалентно &lt;code&gt;if true; ...; end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5cb93e79eb59eed4f3c4bd5e54faad96127309f" translate="yes" xml:space="preserve">
          <source>The colors used by fish for syntax highlighting can be configured by changing the values of a various variables. The value of these variables can be one of the colors accepted by the &lt;a href=&quot;commands#set_color&quot;&gt;set_color&lt;/a&gt; command. The &lt;code&gt;--bold&lt;/code&gt; or &lt;code&gt;-b&lt;/code&gt; switches accepted by &lt;code&gt;set_color&lt;/code&gt; are also accepted.</source>
          <target state="translated">Цвета, используемые рыбой для выделения синтаксиса, можно настроить, изменив значения различных переменных. Значением этих переменных может быть один из цветов, принимаемых командой &lt;a href=&quot;commands#set_color&quot;&gt;set_color&lt;/a&gt; . Также &lt;code&gt;--bold&lt;/code&gt; ключи --bold или &lt;code&gt;-b&lt;/code&gt; , принятые &lt;code&gt;set_color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84d325ad2d19b4840c597f9597e729e6423f6e0a" translate="yes" xml:space="preserve">
          <source>The command history is stored in the file &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt; (or &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; if that variable is set) by default. However, you can set the &lt;code&gt;fish_history&lt;/code&gt; environment variable to change the name of the history session (resulting in a &lt;code&gt;&amp;lt;session&amp;gt;_history&lt;/code&gt; file); both before starting the shell and while the shell is running.</source>
          <target state="translated">История команд по умолчанию хранится в файле &lt;code&gt;~/.local/share/fish/fish_history&lt;/code&gt; (или &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; если эта переменная установлена). Однако вы можете установить &lt;code&gt;fish_history&lt;/code&gt; среды fish_history, чтобы изменить имя сеанса истории (в результате будет &lt;code&gt;&amp;lt;session&amp;gt;_history&lt;/code&gt; файл &amp;lt;session&amp;gt; _history ); как перед запуском оболочки, так и во время ее работы.</target>
        </trans-unit>
        <trans-unit id="ad9471aeb00cd7dbf667ba8000bfffbdd6168599" translate="yes" xml:space="preserve">
          <source>The completions shipped with fish, usually installed in &lt;code&gt;/usr/share/fish/completions&lt;/code&gt;; and</source>
          <target state="translated">Заканчивания, поставляемые с рыбой, обычно устанавливаются в &lt;code&gt;/usr/share/fish/completions&lt;/code&gt; ; и</target>
        </trans-unit>
        <trans-unit id="526642f1e62598bbea0ecea2aededa98b233083a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;fish_mode_prompt&lt;/code&gt; function will output indicators about the current Vi editor mode displayed to the left of the regular prompt. Define your own function to customize the appearance of the mode indicator. You can also define an empty &lt;code&gt;fish_mode_prompt&lt;/code&gt; function to remove the Vi mode indicators. The &lt;code&gt;$fish_bind_mode variable&lt;/code&gt; can be used to determine the current mode. It will be one of &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;replace_one&lt;/code&gt;, or &lt;code&gt;visual&lt;/code&gt;.</source>
          <target state="translated">По умолчанию функция &lt;code&gt;fish_mode_prompt&lt;/code&gt; выводит индикаторы текущего режима редактора Vi, отображаемые слева от обычного приглашения. Определите свою собственную функцию, чтобы настроить внешний вид индикатора режима. Вы также можете определить пустую функцию &lt;code&gt;fish_mode_prompt&lt;/code&gt; для удаления индикаторов режима Vi. &lt;code&gt;$fish_bind_mode variable&lt;/code&gt; может быть использована для определения текущего режима. Это будет один из значений по &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;insert&lt;/code&gt; , &lt;code&gt;replace_one&lt;/code&gt; или &lt;code&gt;visual&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b701404c307944b4f207202092290f154a8ceb6b" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;code&gt;functions&lt;/code&gt;, when called with no arguments, is to print the names of all defined functions. Unless the &lt;code&gt;-a&lt;/code&gt; option is given, no functions starting with underscores are not included in the output.</source>
          <target state="translated">По умолчанию &lt;code&gt;functions&lt;/code&gt; при вызове без аргументов печатают имена всех определенных функций. Если не указана опция &lt;code&gt;-a&lt;/code&gt; , никакие функции, начинающиеся с подчеркивания, не включаются в вывод.</target>
        </trans-unit>
        <trans-unit id="3238e1ed93b89a49bf4c1e65f05bfcad2dc2ccfc" translate="yes" xml:space="preserve">
          <source>The default key binding can be set by specifying a &lt;code&gt;SEQUENCE&lt;/code&gt; of the empty string (that is, &lt;code&gt;''&lt;/code&gt; ). It will be used whenever no other binding matches. For most key bindings, it makes sense to use the &lt;code&gt;self-insert&lt;/code&gt; function (i.e. &lt;code&gt;bind '' self-insert&lt;/code&gt;) as the default keybinding. This will insert any keystrokes not specifically bound to into the editor. Non- printable characters are ignored by the editor, so this will not result in control sequences being printable.</source>
          <target state="translated">Привязку клавиш по умолчанию можно установить, указав &lt;code&gt;SEQUENCE&lt;/code&gt; пустой строки (то есть &lt;code&gt;''&lt;/code&gt; ). Он будет использоваться всякий раз, когда не совпадают другие привязки. Для большинства ключевых привязок, то имеет смысл использовать &lt;code&gt;self-insert&lt;/code&gt; функцию (т.е. &lt;code&gt;bind '' self-insert&lt;/code&gt; ) , как сочетание клавиш по умолчанию. Это вставит в редактор любые нажатия клавиш, не привязанные к ним. Непечатаемые символы игнорируются редактором, поэтому это не приведет к тому, что управляющие последовательности будут распечатаны.</target>
        </trans-unit>
        <trans-unit id="761122ce7c1e00f6a72f6459922524107cc8cd64" translate="yes" xml:space="preserve">
          <source>The delay in milliseconds since the previous character was received is included in the diagnostic information written to stderr. This information may be useful to determine the optimal &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; setting or learn the amount of lag introduced by tools like &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;mosh&lt;/code&gt; or &lt;code&gt;tmux&lt;/code&gt;.</source>
          <target state="translated">Задержка в миллисекундах с момента получения предыдущего символа включается в диагностическую информацию, записываемую в stderr. Эта информация может быть полезна для определения оптимальной настройки &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; или изучения величины задержки, вызываемой такими инструментами, как &lt;code&gt;ssh&lt;/code&gt; , &lt;code&gt;mosh&lt;/code&gt; или &lt;code&gt;tmux&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2ae9cb276e98e46e4c54626cf3a5b994505cd52" translate="yes" xml:space="preserve">
          <source>The escape key can be used standalone, for example, to switch from insertion mode to normal mode when using Vi keybindings. Escape may also be used as a &quot;meta&quot; key, to indicate the start of an escape sequence, such as function or arrow keys. Custom bindings can also be defined that begin with an escape character.</source>
          <target state="translated">Эвакуационный ключ может использоваться автономно,например,для переключения из режима вставки в нормальный режим при использовании Vi-клавиатуры.Эвакуационный ключ может также использоваться в качестве &quot;мета&quot; клавиши для обозначения начала последовательности эвакуации,например,функциональных клавиш или клавиш со стрелками.Можно также определить пользовательские привязки,которые начинаются с экранирующего символа.</target>
        </trans-unit>
        <trans-unit id="f2b67ae0b734fe8c7eb4002ecf7174bec7a097d2" translate="yes" xml:space="preserve">
          <source>The exit code of the &lt;code&gt;jobs&lt;/code&gt; builtin is &lt;code&gt;0&lt;/code&gt; if there are running background jobs and &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="translated">Код выхода встроенных &lt;code&gt;jobs&lt;/code&gt; равен &lt;code&gt;0&lt;/code&gt; , если выполняются фоновые задания, и &lt;code&gt;1&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="92a98ee3485df09b2caf60e2fe8f1f43529de92d" translate="yes" xml:space="preserve">
          <source>The exit status of &lt;code&gt;functions&lt;/code&gt; is the number of functions specified in the argument list that do not exist, which can be used in concert with the &lt;code&gt;-q&lt;/code&gt; option.</source>
          <target state="translated">Статус выхода &lt;code&gt;functions&lt;/code&gt; - это количество функций, указанных в списке аргументов, которые не существуют, которые можно использовать вместе с параметром &lt;code&gt;-q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f212eae622b07227263f98bfdb5b6ec216b4de4" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; function.</source>
          <target state="translated">Статус выхода команд в &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; не будет изменять значение &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; за пределами функции &lt;code&gt;fish_breakpoint_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5657481f999e23c3116d622970acdbbcff597a42" translate="yes" xml:space="preserve">
          <source>The exit status of commands within &lt;code&gt;fish_prompt&lt;/code&gt; will not modify the value of &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; outside of the &lt;code&gt;fish_prompt&lt;/code&gt; function.</source>
          <target state="translated">Статус выхода команд в &lt;code&gt;fish_prompt&lt;/code&gt; не изменяет значение &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; за пределами функции &lt;code&gt;fish_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff645c10072dc44f93fe8a0bc1b09a1e128e9d19" translate="yes" xml:space="preserve">
          <source>The exit status of the last foreground command to exit can always be accessed using the &lt;a href=&quot;index#variables-status&quot;&gt;$status&lt;/a&gt; variable.</source>
          <target state="translated">Статус выхода последней команды переднего плана для выхода всегда можно получить с помощью переменной &lt;a href=&quot;index#variables-status&quot;&gt;$ status&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4652deeba9fb7344bebbe6060971799e99a44a6b" translate="yes" xml:space="preserve">
          <source>The exit status of the last run command substitution is available in the &lt;a href=&quot;#variables-status&quot;&gt;status&lt;/a&gt; variable if the substitution occurs in the context of a &lt;code&gt;set&lt;/code&gt; command.</source>
          <target state="translated">Статус выхода подстановки последней команды выполнения доступен в переменной &lt;a href=&quot;#variables-status&quot;&gt;статуса,&lt;/a&gt; если подстановка происходит в контексте команды &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="110fb03150bee422319feb18aa0d332d91a7cdc7" translate="yes" xml:space="preserve">
          <source>The exit status of the while loop is the exit status of the last iteration of the &lt;code&gt;COMMANDS&lt;/code&gt; executed, or 0 if none were executed. (This matches other shells and is POSIX-compatible.)</source>
          <target state="translated">Статус выхода цикла while - это статус выхода последней итерации выполненных &lt;code&gt;COMMANDS&lt;/code&gt; или 0, если ни одна из них не была выполнена. (Это соответствует другим оболочкам и совместимо с POSIX.)</target>
        </trans-unit>
        <trans-unit id="0e8e9a53dcf07764aa42aaf44d6d7a9d7ab8311a" translate="yes" xml:space="preserve">
          <source>The exporting rules when creating or updating a variable are identical to the scoping rules for variables:</source>
          <target state="translated">Правила экспорта при создании или обновлении переменных идентичны правилам поиска переменных:</target>
        </trans-unit>
        <trans-unit id="ccd7da4c54986027f5d438b2f8ee07a3d4f4e74d" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;--&lt;/code&gt; seen is what allows the &lt;code&gt;argparse&lt;/code&gt; command to reliably separate the option specifications from the command arguments.</source>
          <target state="translated">Первое &lt;code&gt;--&lt;/code&gt; это то, что позволяет команде &lt;code&gt;argparse&lt;/code&gt; надежно отделить спецификации параметров от аргументов команды.</target>
        </trans-unit>
        <trans-unit id="f00c945cebc76b9e34b8670689ec76047f703bed" translate="yes" xml:space="preserve">
          <source>The first form (&lt;code&gt;test&lt;/code&gt;) is preferred. For compatibility with other shells, the second form is available: a matching pair of square brackets (&lt;code&gt;[ [EXPRESSION ] ]&lt;/code&gt;).</source>
          <target state="translated">Предпочтительна первая форма ( &lt;code&gt;test&lt;/code&gt; ). Для совместимости с другими оболочками доступна вторая форма: соответствующая пара квадратных скобок ( &lt;code&gt;[ [EXPRESSION ] ]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1feeb6c582e1b13feec652671af704d8c4bca81d" translate="yes" xml:space="preserve">
          <source>The first line tells fish that a function by the name of &lt;code&gt;ll&lt;/code&gt; is to be defined. To use it, simply write &lt;code&gt;ll&lt;/code&gt; on the commandline. The second line tells fish that the command &lt;code&gt;ls -l $argv&lt;/code&gt; should be called when &lt;code&gt;ll&lt;/code&gt; is invoked. '&lt;code&gt;$argv&lt;/code&gt;' is an array variable, which always contains all arguments sent to the function. In the example above, these are simply passed on to the &lt;code&gt;ls&lt;/code&gt; command. For more information on functions, see the documentation for the &lt;a href=&quot;commands#function&quot;&gt;function&lt;/a&gt; builtin.</source>
          <target state="translated">Первая строка сообщает Fish, что должна быть определена функция с именем &lt;code&gt;ll&lt;/code&gt; . Чтобы использовать его, просто напишите &lt;code&gt;ll&lt;/code&gt; в командной строке. Вторая строка сообщает Fish, что при вызове &lt;code&gt;ll&lt;/code&gt; следует вызывать команду &lt;code&gt;ls -l $argv&lt;/code&gt; . ' &lt;code&gt;$argv&lt;/code&gt; ' - это переменная массива, которая всегда содержит все аргументы, отправленные функции. В приведенном выше примере они просто передаются команде &lt;code&gt;ls&lt;/code&gt; . Дополнительные сведения о функциях см. В документации по встроенной &lt;a href=&quot;commands#function&quot;&gt;функции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5aa91cd04a31d486d202e2b1e77d870e577f521a" translate="yes" xml:space="preserve">
          <source>The first part specifies to whom this set of right applies, and can be one of &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt;, where &lt;code&gt;u&lt;/code&gt; specifies the user who owns the file, &lt;code&gt;g&lt;/code&gt; specifies the group owner of the file, &lt;code&gt;o&lt;/code&gt; specific other users rights and &lt;code&gt;a&lt;/code&gt; specifies all three should be changed.</source>
          <target state="translated">Первая часть определяет, к кому применяется этот набор прав, и может быть одним из &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;g&lt;/code&gt; , &lt;code&gt;o&lt;/code&gt; или &lt;code&gt;a&lt;/code&gt; , где &lt;code&gt;u&lt;/code&gt; указывает пользователя, которому принадлежит файл, &lt;code&gt;g&lt;/code&gt; указывает владельца группы файла, &lt;code&gt;o&lt;/code&gt; конкретные права других пользователей и &lt;code&gt;a&lt;/code&gt; указывает, что следует изменить все три.</target>
        </trans-unit>
        <trans-unit id="8197431f9332af76bce775e1de1257355f1cd95c" translate="yes" xml:space="preserve">
          <source>The fish commandline editor can be used to work on commands that are several lines long. There are three ways to make a command span more than a single line:</source>
          <target state="translated">Редактор командной строки &quot;Рыба&quot; может использоваться для работы с командами длиной в несколько строк.Существует три способа сделать команду длиннее одной строки:</target>
        </trans-unit>
        <trans-unit id="8f8186d4ab0a2d348fed572d2dce9da78099265a" translate="yes" xml:space="preserve">
          <source>The fish commandline editor works exactly the same in single line mode and in multiline mode. To move between lines use the left and right arrow keys and other such keyboard shortcuts.</source>
          <target state="translated">Редактор командной строки &quot;Рыба&quot; работает точно так же в однолинейном и многолинейном режиме.Для перемещения между строками используйте клавиши со стрелками вправо и влево,а также другие подобные клавиатурные сокращения.</target>
        </trans-unit>
        <trans-unit id="23b5304e27f02f59d7a10f53fd4009e199ac5306" translate="yes" xml:space="preserve">
          <source>The fish exit status is generally the exit status of the last foreground command. If fish is exiting because of a parse error, the exit status is 127.</source>
          <target state="translated">Статус выхода рыбы-это,как правило,статус выхода последней команды на переднем плане.Если рыба выходит из-за ошибки при разборе,статус выхода-127.</target>
        </trans-unit>
        <trans-unit id="81b0737757c6447d0c7efe9ceff078d063aa48ef" translate="yes" xml:space="preserve">
          <source>The fish user community extends fish in unique and useful ways via scripts that aren't always appropriate for bundling with the fish package. Typically because they solve a niche problem unlikely to appeal to a broad audience. You can find those extensions, including prompts, themes and useful functions, in various third-party repositories. These include:</source>
          <target state="translated">Сообщество пользователей рыбы распространяет рыбу уникальными и полезными способами с помощью скриптов,которые не всегда подходят для комплектации с пакетом рыбы.Как правило,потому,что они решают нишевые проблемы,которые вряд ли привлекут широкую аудиторию.Вы можете найти эти расширения,включая подсказки,темы и полезные функции,в различных репозиториях сторонних разработчиков.К ним относятся:</target>
        </trans-unit>
        <trans-unit id="d06891f80053c3220358df28d431b54da754d75c" translate="yes" xml:space="preserve">
          <source>The fish_mode_prompt function will output the mode indicator for use in vi-mode.</source>
          <target state="translated">Функция fish_mode_prompt выводит индикатор режима для использования в vi-режиме.</target>
        </trans-unit>
        <trans-unit id="89d3be5da20cd5974bed5d4cec48f0faf57383bf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;argparse&lt;/code&gt; options are available. They must appear before all OPTION_SPECs:</source>
          <target state="translated">Доступны следующие параметры &lt;code&gt;argparse&lt;/code&gt; . Они должны стоять перед всеми OPTION_SPEC:</target>
        </trans-unit>
        <trans-unit id="23d5e5164bbb45ea1a895b015bf1d3acf0cdeae1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;argparse&lt;/code&gt; options are available:</source>
          <target state="translated">Доступны следующие параметры &lt;code&gt;argparse&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="224bb1116b7af6da373f3bd98c7370044c04d51d" translate="yes" xml:space="preserve">
          <source>The following additional options are also understood by &lt;code&gt;ulimit&lt;/code&gt;:</source>
          <target state="translated">Под &lt;code&gt;ulimit&lt;/code&gt; также понимаются следующие дополнительные параметры :</target>
        </trans-unit>
        <trans-unit id="72e92d902d19c4f9a787cc785c9f6f673c804c7c" translate="yes" xml:space="preserve">
          <source>The following code first defines an event handler for the generic event named 'test_event', and then emits an event of that type.</source>
          <target state="translated">Следующий код сначала определяет обработчик события для общего события под названием 'test_event',а затем испускает событие такого типа.</target>
        </trans-unit>
        <trans-unit id="4dfce41da5b846516accbd2a1b32a0ea88076d5d" translate="yes" xml:space="preserve">
          <source>The following code is an implementation of the false command as a fish function</source>
          <target state="translated">Следующий код представляет собой реализацию команды false в виде функции fish</target>
        </trans-unit>
        <trans-unit id="73f428206d6cc247fb0a938bd495734a3eb822ae" translate="yes" xml:space="preserve">
          <source>The following code removes all tmp files that do not contain the word smurf.</source>
          <target state="translated">Следующий код удаляет все tmp-файлы,не содержащие слово smurf.</target>
        </trans-unit>
        <trans-unit id="479b6746587510b08a8b09d6baf9432244f03bce" translate="yes" xml:space="preserve">
          <source>The following code reports an error and exits if no file named spoon can be found.</source>
          <target state="translated">Следующий код сообщает об ошибке и выходит,если файл с именем spoon не может быть найден.</target>
        </trans-unit>
        <trans-unit id="c4c2a9bc321af801fbf29261dd0e7d5af4245506" translate="yes" xml:space="preserve">
          <source>The following code runs the &lt;code&gt;make&lt;/code&gt; command to build a program. If the build succeeds, &lt;code&gt;make&lt;/code&gt;'s exit status is 0, and the program is installed. If either step fails, the exit status is 1, and &lt;code&gt;make clean&lt;/code&gt; is run, which removes the files created by the build process.</source>
          <target state="translated">Следующий код запускает команду &lt;code&gt;make&lt;/code&gt; для создания программы. Если сборка завершается успешно, статус выхода &lt;code&gt;make&lt;/code&gt; равен 0, и программа устанавливается. Если какой- либо шаг завершился неудачно, статус выхода равен 1, и запускается программа &lt;code&gt;make clean&lt;/code&gt; , которая удаляет файлы, созданные в процессе сборки.</target>
        </trans-unit>
        <trans-unit id="546e6c9b6b78b14a90cdffaa174cd31d19fddac9" translate="yes" xml:space="preserve">
          <source>The following code runs the &lt;code&gt;make&lt;/code&gt; command to build a program. If the build succeeds, the program is installed. If either step fails, &lt;code&gt;make clean&lt;/code&gt; is run, which removes the files created by the build process.</source>
          <target state="translated">Следующий код запускает команду &lt;code&gt;make&lt;/code&gt; для создания программы. Если сборка прошла успешно, программа будет установлена. Если какой- либо шаг завершился неудачно, запускается &lt;code&gt;make clean&lt;/code&gt; , которая удаляет файлы, созданные в процессе сборки.</target>
        </trans-unit>
        <trans-unit id="22ceb5db939abfc8429d0cfac70346e285c29f90" translate="yes" xml:space="preserve">
          <source>The following code searches all .c files for &quot;smurf&quot;, and halts at the first occurrence.</source>
          <target state="translated">Следующий код ищет все .c-файлы на предмет &quot;смурфа&quot; и останавливается при первом появлении.</target>
        </trans-unit>
        <trans-unit id="4275d8a3b1aa0d62413745bb834485269f681525" translate="yes" xml:space="preserve">
          <source>The following code sets a number of variables inside of a block scope. Since the variables are set inside the block and have local scope, they will be automatically deleted when the block ends.</source>
          <target state="translated">Следующий код устанавливает ряд переменных внутри области действия блока.Поскольку переменные устанавливаются внутри блока и имеют локальную область видимости,они будут автоматически удаляться по окончании работы блока.</target>
        </trans-unit>
        <trans-unit id="9c3e3b53e3555daf8b545c545da16a2dcb0110a7" translate="yes" xml:space="preserve">
          <source>The following code stores the value 'hello' in the shell variable &lt;code&gt;$foo&lt;/code&gt;.</source>
          <target state="translated">Следующий код сохраняет значение hello в переменной оболочки &lt;code&gt;$foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="381bfb0bdea553cc88676dcf9cb0ff3a9ee0da17" translate="yes" xml:space="preserve">
          <source>The following code tests whether a file &lt;code&gt;foo.txt&lt;/code&gt; exists as a regular file.</source>
          <target state="translated">Следующий код проверяет, существует ли файл &lt;code&gt;foo.txt&lt;/code&gt; как обычный файл.</target>
        </trans-unit>
        <trans-unit id="96c71a4810d00e2a53ad0417748ddcd2d89501b6" translate="yes" xml:space="preserve">
          <source>The following code will call the ls command. Note that &lt;code&gt;fish&lt;/code&gt; does not support the use of shell variables as direct commands; &lt;code&gt;eval&lt;/code&gt; can be used to work around this.</source>
          <target state="translated">Следующий код вызовет команду ls. Обратите внимание, что &lt;code&gt;fish&lt;/code&gt; не поддерживает использование переменных оболочки в качестве прямых команд; &lt;code&gt;eval&lt;/code&gt; можно использовать, чтобы обойти это.</target>
        </trans-unit>
        <trans-unit id="ca62666931da18a9248d4ac0f516c18c3953407d" translate="yes" xml:space="preserve">
          <source>The following code will count down from a random even number between 10 and 20 to 1:</source>
          <target state="translated">Следующий код будет отсчитываться от случайного четного числа от 10 до 20 до 1:</target>
        </trans-unit>
        <trans-unit id="b827c00166140f0325b113f6c5ec11ead3608d8d" translate="yes" xml:space="preserve">
          <source>The following code will create &lt;code&gt;rmi&lt;/code&gt;, which runs &lt;code&gt;rm&lt;/code&gt; with additional arguments on every invocation.</source>
          <target state="translated">Следующий код создаст &lt;code&gt;rmi&lt;/code&gt; , который запускает &lt;code&gt;rm&lt;/code&gt; с дополнительными аргументами при каждом вызове.</target>
        </trans-unit>
        <trans-unit id="2bda4fa27dff7ecce2f691a9e2a6631fca487d27" translate="yes" xml:space="preserve">
          <source>The following code will not output anything:</source>
          <target state="translated">Следующий код ничего не выдаст:</target>
        </trans-unit>
        <trans-unit id="ef1c53d0ac92fed4883e8ae1b1d7d027d13ad785" translate="yes" xml:space="preserve">
          <source>The following code will print &quot;foo.txt exists and is readable&quot; if foo.txt is a regular file and readable</source>
          <target state="translated">Следующий код напечатает &quot;foo.txt существует и доступен для чтения&quot;,если foo.txt является обычным файлом и доступен для чтения</target>
        </trans-unit>
        <trans-unit id="1b900844821e8f04f7dd1574d0cf172ece4e3553" translate="yes" xml:space="preserve">
          <source>The following code will print &lt;code&gt;foo.txt exists&lt;/code&gt; if the file foo.txt exists and is a regular file, otherwise it will print &lt;code&gt;bar.txt exists&lt;/code&gt; if the file bar.txt exists and is a regular file, otherwise it will print &lt;code&gt;foo.txt and bar.txt do not exist&lt;/code&gt;.</source>
          <target state="translated">Следующий код напечатает, что &lt;code&gt;foo.txt exists&lt;/code&gt; если файл foo.txt существует и является обычным файлом, в противном случае он напечатает &lt;code&gt;bar.txt exists&lt;/code&gt; если файл bar.txt существует и является обычным файлом, в противном случае он напечатает &lt;code&gt;foo.txt and bar.txt do not exist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de3876978d90a169388326ae4fae09574262829b" translate="yes" xml:space="preserve">
          <source>The following operations (sub-commands) are available:</source>
          <target state="translated">Доступны следующие операции (подкоманды):</target>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">Доступны следующие варианты:</target>
        </trans-unit>
        <trans-unit id="d66ddc0c6de8a95bb5854453416293c96da8d8a9" translate="yes" xml:space="preserve">
          <source>The following options change the way &lt;code&gt;commandline&lt;/code&gt; prints the current commandline buffer:</source>
          <target state="translated">Следующие параметры изменить способ &lt;code&gt;commandline&lt;/code&gt; выводит текущий буфер командной строки:</target>
        </trans-unit>
        <trans-unit id="63df7f64ccf12b96665f8dde259ffe470d38015a" translate="yes" xml:space="preserve">
          <source>The following options change the way &lt;code&gt;commandline&lt;/code&gt; updates the command line buffer:</source>
          <target state="translated">Следующие параметры изменяют способ обновления буфера &lt;code&gt;commandline&lt;/code&gt; в командной строке:</target>
        </trans-unit>
        <trans-unit id="74214e3ec02696aeea391992facc065916f44218" translate="yes" xml:space="preserve">
          <source>The following options change what part of the commandline is printed or updated:</source>
          <target state="translated">Следующие опции изменяют то,какая часть командной строки распечатана или обновлена:</target>
        </trans-unit>
        <trans-unit id="4caebaf69abe1f045ca9b70c7d77c6343b9dba77" translate="yes" xml:space="preserve">
          <source>The following options control variable scope:</source>
          <target state="translated">Следующие опции управляют диапазоном переменных:</target>
        </trans-unit>
        <trans-unit id="de38d59c5de4e05441ae91dc9bbb795a1e1439a4" translate="yes" xml:space="preserve">
          <source>The following options output metadata about the commandline state:</source>
          <target state="translated">Следующие опции выводят метаданные о состоянии командной строки:</target>
        </trans-unit>
        <trans-unit id="2cc91c14fc643ec75cd8e42977ab3bf342c34ee4" translate="yes" xml:space="preserve">
          <source>The following parameters are available:</source>
          <target state="translated">Доступны следующие параметры:</target>
        </trans-unit>
        <trans-unit id="328c4823c00af02675ec490144bb09f24d6106dd" translate="yes" xml:space="preserve">
          <source>The following special input functions are available:</source>
          <target state="translated">Доступны следующие специальные функции ввода:</target>
        </trans-unit>
        <trans-unit id="f152dd9767da97d86c0b7bee6016016e58054d4e" translate="yes" xml:space="preserve">
          <source>The following subcommands are available.</source>
          <target state="translated">Доступны следующие подкоманды.</target>
        </trans-unit>
        <trans-unit id="58f88b1896d25d9e560265aa1ea2d352215c9687" translate="yes" xml:space="preserve">
          <source>The following variables are available to change the highlighting colors in fish:</source>
          <target state="translated">Для изменения цвета подсветки в рыбе доступны следующие переменные:</target>
        </trans-unit>
        <trans-unit id="c602bb0a290012cbead72e55c75dd6308e892909" translate="yes" xml:space="preserve">
          <source>The functions shipped with fish, usually installed in &lt;code&gt;/usr/share/fish/functions&lt;/code&gt;.</source>
          <target state="translated">Функции, поставляемые с fish, обычно устанавливаются в &lt;code&gt;/usr/share/fish/functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31d1d74253673e0e00e4ab6d298c6cfbfbe641c4" translate="yes" xml:space="preserve">
          <source>The last value assigned to &lt;code&gt;var&lt;/code&gt; when the loop terminated would not be available outside the loop. What &lt;code&gt;echo $var&lt;/code&gt; would write depended on what it was set to before the loop was run. Likely nothing.</source>
          <target state="translated">Последнее значение, присвоенное &lt;code&gt;var&lt;/code&gt; при завершении цикла, не будет доступно вне цикла. То, что напишет &lt;code&gt;echo $var&lt;/code&gt; , зависит от того, что было установлено до запуска цикла. Скорее всего, ничего.</target>
        </trans-unit>
        <trans-unit id="4b5d758036d63a8bf5273befa9ba2de30bb1d084" translate="yes" xml:space="preserve">
          <source>The latter syntax &lt;code&gt;{$WORD}&lt;/code&gt; works by exploiting &lt;a href=&quot;#expand-brace&quot;&gt;brace expansion&lt;/a&gt;.</source>
          <target state="translated">Последний синтаксис &lt;code&gt;{$WORD}&lt;/code&gt; работает за &lt;a href=&quot;#expand-brace&quot;&gt;счет раскрытия фигурных скобок&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af91f79f8373488bcf43ad9d85211f47c5490d9e" translate="yes" xml:space="preserve">
          <source>The long answer:</source>
          <target state="translated">Длинный ответ:</target>
        </trans-unit>
        <trans-unit id="3bc04ce8ee0aaf5de96a68984a57d83e6ba0f996" translate="yes" xml:space="preserve">
          <source>The most common way to set the locale to use a command like 'set -x LANG en_GB.utf8', which sets the current locale to be the English language, as used in Great Britain, using the UTF-8 character set. For a list of available locales, use 'locale -a'.</source>
          <target state="translated">Наиболее распространенный способ установки локали-использовать команду типа 'set -x LANG en_GB.utf8',которая устанавливает текущую локаль в качестве английского языка,как это используется в Великобритании,используя набор символов UTF-8.Для списка доступных локалей используйте 'locale -a'.</target>
        </trans-unit>
        <trans-unit id="65aa63047471b9a76e26dd8f43f5899f1292feb3" translate="yes" xml:space="preserve">
          <source>The names given to shell objects such as variables and function names are known as &quot;identifiers&quot;. Each type of identifier has rules that define the valid sequence of characters which compose the identifier.</source>
          <target state="translated">Имена,даваемые объектам оболочки,таким как переменные и имена функций,известны как &quot;идентификаторы&quot;.Каждый тип идентификатора имеет правила,определяющие действительную последовательность символов,из которых состоит идентификатор.</target>
        </trans-unit>
        <trans-unit id="2fe3f46a59e146e352f1c4758de7a57641a2c629" translate="yes" xml:space="preserve">
          <source>The names of these variables are mostly derived from the csh family of shells and differ from the ones used by Bourne style shells such as bash.</source>
          <target state="translated">Названия этих переменных в основном происходят из семейства оболочек csh и отличаются от тех,что используются оболочками в стиле Борна,например,bash.</target>
        </trans-unit>
        <trans-unit id="0cdd8d204de3244af011ba40dd2e1e03a80c3965" translate="yes" xml:space="preserve">
          <source>The official mailing list at &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;fish-users@lists.sourceforge.net&lt;/a&gt;</source>
          <target state="translated">Официальный список рассылки по адресу &lt;a href=&quot;https://lists.sourceforge.net/lists/listinfo/fish-users&quot;&gt;fish-users@lists.sourceforge.net&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="341137762021767c1bcfe1d4e89d1efb6ab672f6" translate="yes" xml:space="preserve">
          <source>The open command doesn't work.</source>
          <target state="translated">Открытая команда не работает.</target>
        </trans-unit>
        <trans-unit id="1270e20d3a3df8e1f5346556fc472ccabc75c9c8" translate="yes" xml:space="preserve">
          <source>The options for specifying command name and command path may be used multiple times to define the same completions for multiple commands.</source>
          <target state="translated">Опции указания имени команды и пути к команде могут использоваться несколько раз для определения одних и тех же завершений для нескольких команд.</target>
        </trans-unit>
        <trans-unit id="ff3a156169840aa3d5e264e866d9a002dac09c1f" translate="yes" xml:space="preserve">
          <source>The options for specifying command switches and wrapped commands may be used multiple times to define multiple completions for the command(s) in a single call.</source>
          <target state="translated">Опции указания переключателей команд и оберточных команд могут использоваться несколько раз для определения нескольких завершений для команды (команд)в одном вызове.</target>
        </trans-unit>
        <trans-unit id="514a8bdf395655769cdf0c1f52c06c11623edf78" translate="yes" xml:space="preserve">
          <source>The other conditionals use the &lt;a href=&quot;#variables-status&quot;&gt;exit status&lt;/a&gt; of a command to decide if a command or a block of commands should be executed. See the documentation for &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Другие условные выражения используют &lt;a href=&quot;#variables-status&quot;&gt;статус выхода&lt;/a&gt; команды, чтобы решить, следует ли выполнить команду или блок команд. Обратитесь к документации , &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;commands#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="a2490e597900e8176c6a2c4a4584d5571260ded3" translate="yes" xml:space="preserve">
          <source>The output of a series of commands can be used as the parameters to another command. If a parameter contains a set of parenthesis, the text enclosed by the parenthesis will be interpreted as a list of commands. On expansion, this list is executed, and substituted by the output. If the output is more than one line long, each line will be expanded to a new parameter. Setting &lt;code&gt;IFS&lt;/code&gt; to the empty string will disable line splitting.</source>
          <target state="translated">Выходные данные серии команд можно использовать в качестве параметров для другой команды. Если параметр содержит набор скобок, текст, заключенный в скобки, будет интерпретирован как список команд. При раскрытии этот список выполняется и заменяется выводом. Если выходные данные содержат более одной строки, каждая строка будет расширена до нового параметра. Установка &lt;code&gt;IFS&lt;/code&gt; на пустую строку отключит разделение строк.</target>
        </trans-unit>
        <trans-unit id="c076b2b362e357c8c787010692c3897b0cde8acf" translate="yes" xml:space="preserve">
          <source>The previous test can likewise be inverted:</source>
          <target state="translated">Предыдущий тест также может быть инвертирован:</target>
        </trans-unit>
        <trans-unit id="ddedd2674467015f6a5beb34ee2fbb835520f26b" translate="yes" xml:space="preserve">
          <source>The programs &lt;code&gt;man&lt;/code&gt; and &lt;code&gt;whatis&lt;/code&gt; show all installed manual pages as completions.</source>
          <target state="translated">Программы &lt;code&gt;man&lt;/code&gt; и &lt;code&gt;whatis&lt;/code&gt; показывают все установленные справочные страницы как завершенные.</target>
        </trans-unit>
        <trans-unit id="923e6b118fb538f4ca8e8f67ca4698c422b3b072" translate="yes" xml:space="preserve">
          <source>The prompt is the output of the &lt;code&gt;fish_prompt&lt;/code&gt; function. Put it in &lt;code&gt;~/.config/fish/functions/fish_prompt.fish&lt;/code&gt;. For example, a simple prompt is:</source>
          <target state="translated">&lt;code&gt;fish_prompt&lt;/code&gt; - это результат работы функции fish_prompt . Поместите его в &lt;code&gt;~/.config/fish/functions/fish_prompt.fish&lt;/code&gt; . Например, простая подсказка:</target>
        </trans-unit>
        <trans-unit id="f6c98e8413fa41203c749875900025da16302aca" translate="yes" xml:space="preserve">
          <source>The reason for providing for two output file descriptors is to allow separation of errors and warnings from regular program output.</source>
          <target state="translated">Причина предоставления двух дескрипторов выходных файлов заключается в том,что они позволяют отделять ошибки и предупреждения от вывода обычной программы.</target>
        </trans-unit>
        <trans-unit id="1c641b43a1ed9a01749c093f3a5864403b12f91c" translate="yes" xml:space="preserve">
          <source>The return status is 1 if any &lt;code&gt;REASON&lt;/code&gt; is invalid; otherwise trap returns 0.</source>
          <target state="translated">Статус возврата - 1, если какая-либо &lt;code&gt;REASON&lt;/code&gt; недействительна; в противном случае ловушка возвращает 0.</target>
        </trans-unit>
        <trans-unit id="eec28e525883ec2bf359aa9ac84f19012ae7983d" translate="yes" xml:space="preserve">
          <source>The return status of &lt;code&gt;source&lt;/code&gt; is the return status of the last job to execute. If something goes wrong while opening or reading the file, &lt;code&gt;source&lt;/code&gt; exits with a non-zero status.</source>
          <target state="translated">Статус возврата &lt;code&gt;source&lt;/code&gt; - это статус возврата последнего выполненного задания. Если что-то пойдет не так при открытии или чтении файла, &lt;code&gt;source&lt;/code&gt; завершит работу с ненулевым статусом.</target>
        </trans-unit>
        <trans-unit id="1c30a73e8a51035e518bdfeccb5ae03bbba2a49e" translate="yes" xml:space="preserve">
          <source>The same works when setting or expanding variables:</source>
          <target state="translated">То же самое работает при установке или расширении переменных:</target>
        </trans-unit>
        <trans-unit id="0df43a9567e35d287e4e0a64578b1540c9c5524d" translate="yes" xml:space="preserve">
          <source>The scoping rules when creating or updating a variable are:</source>
          <target state="translated">Правила поиска при создании или обновлении переменной:</target>
        </trans-unit>
        <trans-unit id="af1ca2dded8974103c58a768e1e91d3d877d12bd" translate="yes" xml:space="preserve">
          <source>The script should write any error messages to stdout, not stderr. It should return a status of zero if the flag value is valid otherwise a non-zero status to indicate it is invalid.</source>
          <target state="translated">Скрипт должен писать любые сообщения об ошибках в stdout,а не в stderr.Он должен возвращать статус нуля,если значение флага является действительным,в противном случае ненулевой статус,чтобы показать,что он недействителен.</target>
        </trans-unit>
        <trans-unit id="ea5694e15d95ca5a5e96c990e236cff7fa4686dd" translate="yes" xml:space="preserve">
          <source>The second part of a right specifies the mode, and can be one of &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, where &lt;code&gt;=&lt;/code&gt; specifies that the rights should be set to the new value, &lt;code&gt;+&lt;/code&gt; specifies that the specified right should be added to those previously specified and &lt;code&gt;-&lt;/code&gt; specifies that the specified rights should be removed from those previously specified.</source>
          <target state="translated">Вторая часть права определяет режим и может быть одним из &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; или &lt;code&gt;-&lt;/code&gt; , где &lt;code&gt;=&lt;/code&gt; указывает, что права должны быть установлены на новое значение, &lt;code&gt;+&lt;/code&gt; указывает, что указанные права должны быть добавлены к ранее указанным и &lt;code&gt;-&lt;/code&gt; указывает, что указанные права должны быть удалены из ранее указанных.</target>
        </trans-unit>
        <trans-unit id="7823c527da5d40f4505f5d7ca9cee1dbf65bd935" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-d&lt;/code&gt; for the &lt;code&gt;grep&lt;/code&gt; command requires that one of the strings '&lt;code&gt;read&lt;/code&gt;', '&lt;code&gt;skip&lt;/code&gt;' or '&lt;code&gt;recurse&lt;/code&gt;' is used. This can be specified writing:</source>
          <target state="translated">Параметр короткого стиля &lt;code&gt;-d&lt;/code&gt; для команды &lt;code&gt;grep&lt;/code&gt; требует, чтобы использовалась одна из строк &quot; &lt;code&gt;read&lt;/code&gt; &quot;, &quot; &lt;code&gt;skip&lt;/code&gt; &quot; или &quot; &lt;code&gt;recurse&lt;/code&gt; &quot;. Это можно указать записью:</target>
        </trans-unit>
        <trans-unit id="21aef96d543138db0f5113aa8c694e877221993a" translate="yes" xml:space="preserve">
          <source>The short style option &lt;code&gt;-o&lt;/code&gt; for the &lt;code&gt;gcc&lt;/code&gt; command requires that a file follows it. This can be done using writing:</source>
          <target state="translated">Параметр краткого стиля &lt;code&gt;-o&lt;/code&gt; для команды &lt;code&gt;gcc&lt;/code&gt; требует, чтобы за ней следовал файл. Это можно сделать, написав:</target>
        </trans-unit>
        <trans-unit id="a7c9c314ad94ef58d396d8ee54dfb17c9688e5cf" translate="yes" xml:space="preserve">
          <source>The status variable</source>
          <target state="translated">Переменная состояния</target>
        </trans-unit>
        <trans-unit id="3d79b5f2fb8b7ff9607cb6173124ce2876018175" translate="yes" xml:space="preserve">
          <source>The string FORMAT should contain format specifiers, each of which are replaced with successive arguments according to the specifier. Specifiers are detailed below, and are taken from the C library function &lt;code&gt;printf(3)&lt;/code&gt;.</source>
          <target state="translated">Строка FORMAT должна содержать описатели формата, каждый из которых заменяется последовательными аргументами в соответствии с указателем. Спецификаторы подробно описаны ниже, и взяты из функции библиотеки С &lt;code&gt;printf(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78761829292527d745af43c24666b70964c2aa8e" translate="yes" xml:space="preserve">
          <source>The third part of a right specifies what rights should be changed and can be any combination of &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt;, representing read, write and execute rights.</source>
          <target state="translated">Третья часть права определяет, какие права должны быть изменены, и может быть любой комбинацией &lt;code&gt;r&lt;/code&gt; , &lt;code&gt;w&lt;/code&gt; и &lt;code&gt;x&lt;/code&gt; , представляющих права чтения, записи и выполнения.</target>
        </trans-unit>
        <trans-unit id="f6aea30b4125640db0c941f62792d8db2583d13d" translate="yes" xml:space="preserve">
          <source>The tool will write an example &lt;code&gt;bind&lt;/code&gt; command matching the character sequence captured to stdout. If the character sequence matches a special key name (see &lt;code&gt;bind --key-names&lt;/code&gt;), both &lt;code&gt;bind CHARS ...&lt;/code&gt; and &lt;code&gt;bind -k KEYNAME ...&lt;/code&gt; usage will be shown. Additional details about the characters received, such as the delay between chars, are written to stderr.</source>
          <target state="translated">Инструмент напишет пример команды &lt;code&gt;bind&lt;/code&gt; соответствующей последовательности символов, записанной в стандартный вывод. Если последовательность символов соответствует имени специального ключа (см. &lt;code&gt;bind --key-names&lt;/code&gt; ), будет показано использование как &lt;code&gt;bind CHARS ...&lt;/code&gt; ,так и &lt;code&gt;bind -k KEYNAME ...&lt;/code&gt; .Дополнительные сведения о полученных символах, такие как задержка между символами, записываются в stderr.</target>
        </trans-unit>
        <trans-unit id="33a16e681c6b2de523ee079730543d5aaaa072a3" translate="yes" xml:space="preserve">
          <source>The umask may be expressed either as an octal number, which represents the rights that will be removed by default, or symbolically, which represents the only rights that will be granted by default.</source>
          <target state="translated">Маска может быть выражена либо в виде восьмеричного числа,представляющего права,которые будут удалены по умолчанию,либо символически,представляющего единственные права,которые будут предоставлены по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ff67961119e87010a71ffb5f982a7874fbd862b2" translate="yes" xml:space="preserve">
          <source>The user can change the settings of &lt;code&gt;fish&lt;/code&gt; by changing the values of certain variables.</source>
          <target state="translated">Пользователь может изменить настройки &lt;code&gt;fish&lt;/code&gt; , изменив значения некоторых переменных.</target>
        </trans-unit>
        <trans-unit id="92734526becf97d0102e67503ae3f5ec70437f52" translate="yes" xml:space="preserve">
          <source>The user can string together multiple commands into a so called pipeline. This means that the standard output of one command will be read in as standard input into the next command. This is done by separating the commands by the pipe character '&lt;code&gt;|&lt;/code&gt;'. For example</source>
          <target state="translated">Пользователь может объединить несколько команд в так называемый конвейер. Это означает, что стандартный вывод одной команды будет считан как стандартный ввод следующей команды. Это делается путем разделения команд вертикальной чертой ' &lt;code&gt;|&lt;/code&gt; &amp;raquo;. Например</target>
        </trans-unit>
        <trans-unit id="7b8b4db39167ca73155b4a80905652bbe883d472" translate="yes" xml:space="preserve">
          <source>The value of limit can be a number in the unit specified for the resource or one of the special values &lt;code&gt;hard&lt;/code&gt;, &lt;code&gt;soft&lt;/code&gt;, or &lt;code&gt;unlimited&lt;/code&gt;, which stand for the current hard limit, the current soft limit, and no limit, respectively.</source>
          <target state="translated">Значение лимита может быть числом в единицах измерения, указанном для ресурса, или одним из специальных значений &lt;code&gt;hard&lt;/code&gt; , &lt;code&gt;soft&lt;/code&gt; или &lt;code&gt;unlimited&lt;/code&gt; , которые обозначают текущий жесткий предел, текущий мягкий предел и отсутствие ограничения, соответственно.</target>
        </trans-unit>
        <trans-unit id="ea2f6068a9dad88efc3494909770d142904666d0" translate="yes" xml:space="preserve">
          <source>The web interface allows you to view your functions, variables and history, and to make changes to your prompt and color configuration.</source>
          <target state="translated">Веб-интерфейс позволяет просматривать ваши функции,переменные и историю,а также вносить изменения в подсказки и цветовую конфигурацию.</target>
        </trans-unit>
        <trans-unit id="27cd5ebce2dff7c39841e898f946a341a35b41e4" translate="yes" xml:space="preserve">
          <source>Then the following invocations behave like this:</source>
          <target state="translated">Тогда следующие вызовы ведут себя так:</target>
        </trans-unit>
        <trans-unit id="fa54c06d5fdedec560ab96fcbf9871934330e6d3" translate="yes" xml:space="preserve">
          <source>There are a few important things that need to be noted about aliases:</source>
          <target state="translated">Есть несколько важных вещей,которые необходимо отметить в отношении псевдонимов:</target>
        </trans-unit>
        <trans-unit id="3ba25ca105726fc0d596821887908ff16a459bda" translate="yes" xml:space="preserve">
          <source>There are also special switches for specifying that a switch requires an argument, to disable filename completion, to create completions that are only available in some combinations, etc.. For a complete description of the various switches accepted by the &lt;code&gt;complete&lt;/code&gt; command, see the documentation for the &lt;a href=&quot;commands#complete&quot;&gt;complete&lt;/a&gt; builtin, or write &lt;code&gt;complete --help&lt;/code&gt; inside the &lt;code&gt;fish&lt;/code&gt; shell.</source>
          <target state="translated">Существуют также специальные переключатели для указания того, что переключатель требует аргумента, для отключения завершения имени файла, для создания завершения, доступного только в некоторых комбинациях и т. Д. Полное описание различных переключателей, принимаемых &lt;code&gt;complete&lt;/code&gt; командой, см. В документации для &lt;a href=&quot;commands#complete&quot;&gt;полной&lt;/a&gt; встроенной функции или напишите &lt;code&gt;complete --help&lt;/code&gt; внутри оболочки &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d9df96be8b6a2362ccd2ca558b23ccf8d96cd57" translate="yes" xml:space="preserve">
          <source>There are four fish builtins that let you execute commands only if a specific criterion is met. These builtins are &lt;a href=&quot;commands#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;commands#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;commands#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Есть четыре встроенных функции Fish, которые позволяют выполнять команды только при соблюдении определенного критерия. Эти встроенные функции являются , &lt;a href=&quot;commands#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;commands#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;commands#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="255b5925229ebf64b3dccbaf56f554bfda33418a" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">Параметры для &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a56ebf43ed98e5db43b2052e83aa4d07a4140747" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;breakpoint&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;breakpoint&lt;/code&gt; нет параметров .</target>
        </trans-unit>
        <trans-unit id="c25f17ac972a261d801c33ab7a6b142dc2017014" translate="yes" xml:space="preserve">
          <source>There are no parameters for &lt;code&gt;fish_update_completions&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;fish_update_completions&lt;/code&gt; нет параметров .</target>
        </trans-unit>
        <trans-unit id="031b665a362fca99dc2232105e16d4be76ec8e13" translate="yes" xml:space="preserve">
          <source>There are three kinds of variables in fish: universal, global and local variables. Universal variables are shared between all fish sessions a user is running on one computer. Global variables are specific to the current fish session, but are not associated with any specific block scope, and will never be erased unless the user explicitly requests it using &lt;code&gt;set -e&lt;/code&gt;. Local variables are specific to the current fish session, and associated with a specific block of commands, and is automatically erased when a specific block goes out of scope. A block of commands is a series of commands that begins with one of the commands &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt;, and ends with the command &lt;code&gt;end&lt;/code&gt;. The user can specify that a variable should have either global or local scope using the &lt;code&gt;-g/--global&lt;/code&gt; or &lt;code&gt;-l/--local&lt;/code&gt; switches.</source>
          <target state="translated">В fish есть три типа переменных: универсальные, глобальные и локальные. Универсальные переменные распределяются между всеми сессиями рыбалки, которые пользователь запускает на одном компьютере. Глобальные переменные специфичны для текущего сеанса Fish, но не связаны с какой-либо конкретной областью блока и никогда не будут удалены, если пользователь явно не запросит это с помощью &lt;code&gt;set -e&lt;/code&gt; . Локальные переменные относятся к текущему сеансу Fish и связаны с конкретным блоком команд и автоматически стираются, когда конкретный блок выходит за пределы области видимости. Блок команд - это серия команд, которая начинается с одной из команд &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;function&lt;/code&gt; , &lt;code&gt;begin&lt;/code&gt; или &lt;code&gt;switch&lt;/code&gt; , и заканчивается командой &lt;code&gt;end&lt;/code&gt; . Пользователь может указать, что переменная должна иметь глобальную или локальную область видимости, используя ключи &lt;code&gt;-g/--global&lt;/code&gt; или &lt;code&gt;-l/--local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8bb46a6b8bc305c23a119159486bd2d5c470ee5" translate="yes" xml:space="preserve">
          <source>There are two breaking changes in fish 3.0: caret &lt;code&gt;^&lt;/code&gt; no longer redirects stderr, and question mark &lt;code&gt;?&lt;/code&gt; is no longer a glob. These changes are off by default. They can be enabled on a per session basis:</source>
          <target state="translated">В fish 3.0 есть два критических изменения: курсор &lt;code&gt;^&lt;/code&gt; больше не перенаправляет stderr и вопросительный знак &lt;code&gt;?&lt;/code&gt; больше не глобус. По умолчанию эти изменения отключены. Их можно включить для каждого сеанса:</target>
        </trans-unit>
        <trans-unit id="20ceb2460c137862f053425df367d426c42e4313" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;switch&lt;/code&gt; command:</source>
          <target state="translated">Также есть команда &lt;code&gt;switch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b0866a618c196f1ac7d2ced3309d7b238c006085" translate="yes" xml:space="preserve">
          <source>There may be many variables with the same name, but different scopes. When using a variable, the variable scope will be searched from the inside out, i.e. a local variable will be used rather than a global variable with the same name, a global variable will be used rather than a universal variable with the same name.</source>
          <target state="translated">Может быть много переменных с одним и тем же именем,но с разной сферой действия.При использовании переменной будет осуществляться поиск области видимости переменной изнутри,т.е.будет использоваться локальная переменная,а не глобальная переменная с тем же именем,глобальная переменная будет использоваться,а не универсальная переменная с тем же именем.</target>
        </trans-unit>
        <trans-unit id="d7f028aa2b19c153baae8d83c317ae110446208a" translate="yes" xml:space="preserve">
          <source>These are the general purpose tab completions that &lt;code&gt;fish&lt;/code&gt; provides:</source>
          <target state="translated">Таковы общие цели вкладки доработки , что &lt;code&gt;fish&lt;/code&gt; обеспечивает:</target>
        </trans-unit>
        <trans-unit id="e7972582e9c4968e777fc42db67d9b318fa79e46" translate="yes" xml:space="preserve">
          <source>These colors, and many more, can be changed by running &lt;code&gt;fish_config&lt;/code&gt;, or by modifying variables directly.</source>
          <target state="translated">Эти и многие другие цвета можно изменить, запустив &lt;code&gt;fish_config&lt;/code&gt; или напрямую изменив переменные.</target>
        </trans-unit>
        <trans-unit id="91e1e5aba0c598515d08d40af2f8d04dd57004f4" translate="yes" xml:space="preserve">
          <source>These files are all executed on the startup of every shell. If you want to run a command only on starting an interactive shell, use the exit status of the command &lt;code&gt;status --is-interactive&lt;/code&gt; to determine if the shell is interactive. If you want to run a command only when using a login shell, use &lt;code&gt;status --is-login&lt;/code&gt; instead. This will speed up the starting of non-interactive or non-login shells.</source>
          <target state="translated">Все эти файлы выполняются при запуске каждой оболочки. Если вы хотите запустить команду только при запуске интерактивной оболочки, используйте статус выхода команды &lt;code&gt;status --is-interactive&lt;/code&gt; , чтобы определить, является ли оболочка интерактивной. Если вы хотите запускать команду только при использовании оболочки входа, используйте вместо &lt;code&gt;status --is-login&lt;/code&gt; . Это ускорит запуск неинтерактивных оболочек или оболочек без входа в систему.</target>
        </trans-unit>
        <trans-unit id="80b96b3d74710e83d20ff5ac21723a42f2f052d6" translate="yes" xml:space="preserve">
          <source>These flags can appear before or immediately after one of the sub-commands listed above.</source>
          <target state="translated">Эти флаги могут появляться до или сразу после одной из подкоманд,перечисленных выше.</target>
        </trans-unit>
        <trans-unit id="018467e6400b14718548d65eb59c273e2720ed52" translate="yes" xml:space="preserve">
          <source>These paths are controlled by parameters set at build, install, or run time, and may vary from the defaults listed above.</source>
          <target state="translated">Эти пути управляются параметрами,заданными при сборке,установке или запуске,и могут отличаться от параметров по умолчанию,перечисленных выше.</target>
        </trans-unit>
        <trans-unit id="d24f98a189aa3819db3885dc20417a7ef5fd2074" translate="yes" xml:space="preserve">
          <source>They are all used in an infix manner - &lt;code&gt;5 + 2&lt;/code&gt;, not &lt;code&gt;+ 5 2&lt;/code&gt;.</source>
          <target state="translated">Все они используются инфиксным образом - &lt;code&gt;5 + 2&lt;/code&gt; , а не &lt;code&gt;+ 5 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af768071c5b224ad5b92ddb2ba1221dcbc0d859d" translate="yes" xml:space="preserve">
          <source>This also happens after &lt;a href=&quot;#expand-command-substitution&quot;&gt;command substitution&lt;/a&gt;. Therefore strings might be eliminated. This can be avoided by making the inner command return a trailing newline.</source>
          <target state="translated">Это происходит и после &lt;a href=&quot;#expand-command-substitution&quot;&gt;подстановки команд&lt;/a&gt; . Следовательно, строки могут быть устранены. Этого можно избежать, заставив внутреннюю команду возвращать завершающую новую строку.</target>
        </trans-unit>
        <trans-unit id="b50932aeaca87e43aadc296b2abd6503a42d3550" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;echo&lt;/code&gt; command. &lt;code&gt;echo&lt;/code&gt; is a command which will write its arguments to the screen. In the example above, the output will be 'hello world'. Everything in fish is done with commands. There are commands for performing a set of commands multiple times, commands for assigning variables, commands for treating a group of commands as a single command, etc.. And every single command follows the same simple syntax.</source>
          <target state="translated">Это вызывает команду &lt;code&gt;echo&lt;/code&gt; . &lt;code&gt;echo&lt;/code&gt; - это команда, которая выводит свои аргументы на экран. В приведенном выше примере результатом будет &amp;laquo;привет, мир&amp;raquo;. В fish все делается с помощью команд. Существуют команды для многократного выполнения набора команд, команды для назначения переменных, команды для обработки группы команд как одной команды и т. Д. И каждая отдельная команда следует одному и тому же простому синтаксису.</target>
        </trans-unit>
        <trans-unit id="366a5d79af152ebea92d5f861ed8a475043b7941" translate="yes" xml:space="preserve">
          <source>This can be written as:</source>
          <target state="translated">Это может быть написано как:</target>
        </trans-unit>
        <trans-unit id="2c3fa67d634b278ec1a7802bf809ac5774656af1" translate="yes" xml:space="preserve">
          <source>This code will add some directories to $PATH if they aren't yet included:</source>
          <target state="translated">Этот код добавит некоторые каталоги в $PATH,если они еще не включены:</target>
        </trans-unit>
        <trans-unit id="46b694f24aed40624e847ae57ae10b126b23d033" translate="yes" xml:space="preserve">
          <source>This command makes it easy for fish scripts and functions to handle arguments in a manner 100% identical to how fish builtin commands handle their arguments. You pass a sequence of arguments that define the options recognized, followed by a literal &lt;code&gt;--&lt;/code&gt;, then the arguments to be parsed (which might also include a literal &lt;code&gt;--&lt;/code&gt;). More on this in the &lt;a href=&quot;#argparse-usage&quot;&gt;usage&lt;/a&gt; section below.</source>
          <target state="translated">Эта команда упрощает для скриптов и функций fish обработку аргументов способом, на 100% идентичным тому, как встроенные команды fish обрабатывают свои аргументы. Вы передаете последовательность аргументов, которые определяют распознанные параметры, за которыми следует литерал &lt;code&gt;--&lt;/code&gt; , а затем аргументы для анализа (которые также могут включать в себя литерал &lt;code&gt;--&lt;/code&gt; ). Подробнее об этом в разделе &lt;a href=&quot;#argparse-usage&quot;&gt;использования&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="20cd8d04285455a5eeee7e58dc05b32ca7729358" translate="yes" xml:space="preserve">
          <source>This command provides a way to produce option specifications suitable for use with the &lt;a href=&quot;#argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; command. You can, of course, write the option specs by hand without using this command. But you might prefer to use this for the clarity it provides.</source>
          <target state="translated">Эта команда предоставляет способ создания спецификаций опций, подходящих для использования с командой &lt;a href=&quot;#argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt; . Конечно, вы можете написать спецификации параметров вручную, не используя эту команду. Но вы можете предпочесть использовать это для большей ясности.</target>
        </trans-unit>
        <trans-unit id="07448165c0f812cb8478f38c84a94b14d2215ae2" translate="yes" xml:space="preserve">
          <source>This does not overwrite custom completions.</source>
          <target state="translated">Это не перезаписывает пользовательские завершения.</target>
        </trans-unit>
        <trans-unit id="6147eda0417a76ae63d83548f1bb6d3684130031" translate="yes" xml:space="preserve">
          <source>This file has been imported from the printf in GNU Coreutils version 6.9. If you would like to use a newer version of printf, for example the one shipped with your OS, try &lt;code&gt;command printf&lt;/code&gt;.</source>
          <target state="translated">Этот файл был импортирован из printf в GNU Coreutils версии 6.9. Если вы хотите использовать более новую версию printf, например, поставляемую с вашей ОС, попробуйте &lt;code&gt;command printf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36a27e8809bc8ecec60cf5b8b496d2f657edff50" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Please call &lt;code&gt;fish_vi_key_bindings directly&lt;/code&gt;</source>
          <target state="translated">Эта функция устарела. Пожалуйста, позвоните в &lt;code&gt;fish_vi_key_bindings directly&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbbea16193e927515d0dc3be9146ab095157af42" translate="yes" xml:space="preserve">
          <source>This is a short explanation of some of the commonly used words in fish.</source>
          <target state="translated">Это краткое объяснение некоторых часто употребляемых слов в рыбе.</target>
        </trans-unit>
        <trans-unit id="8d244f1f10393a3fd4f3ebf581d37f923228ef19" translate="yes" xml:space="preserve">
          <source>This is implemented as a function and a builtin. The function will attempt to use an external realpath command if one can be found. Otherwise it falls back to the builtin. The builtin does not support any options. It's meant to be used only by scripts which need to be portable. The builtin implementation behaves like GNU realpath when invoked without any options (which is the most common use case). In general scripts should not invoke the builtin directly. They should just use &lt;code&gt;realpath&lt;/code&gt;.</source>
          <target state="translated">Это реализовано как функция и как встроенный. Функция попытается использовать внешнюю команду realpath, если она будет найдена. В противном случае он возвращается к встроенному. Встроенная функция не поддерживает никаких опций. Он предназначен для использования только скриптами, которые должны быть переносимыми. Встроенная реализация ведет себя как GNU realpath при вызове без каких-либо параметров (что является наиболее распространенным вариантом использования). Как правило, скрипты не должны вызывать встроенную функцию напрямую. Они должны просто использовать &lt;code&gt;realpath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee1d4171e513cf57adfa5dbd82bf66ed41edba27" translate="yes" xml:space="preserve">
          <source>This is not an exhaustive list and the fish project has no opinion regarding the merits of the repositories listed above or the scripts found therein.</source>
          <target state="translated">Это не исчерпывающий список,и у рыбного проекта нет мнения о достоинствах перечисленных выше репозиториев или о найденных в них скриптах.</target>
        </trans-unit>
        <trans-unit id="096d775aa834b5a98fc75f9c9df8cd5ad1df3f6c" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;index#expand-brace&quot;&gt;Brace expansion&lt;/a&gt;.</source>
          <target state="translated">Это похоже на &lt;a href=&quot;index#expand-brace&quot;&gt;расширение Brace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87b5c6aa51fef3c82ea1bd8fddb7c95bed61e89d" translate="yes" xml:space="preserve">
          <source>This is the documentation for &lt;code&gt;fish&lt;/code&gt;, the friendly interactive shell. &lt;code&gt;fish&lt;/code&gt; is a user friendly commandline shell intended mostly for interactive use. A shell is a program used to execute other programs. For the latest information on &lt;code&gt;fish&lt;/code&gt;, please visit the &lt;a href=&quot;https://fishshell.com/&quot;&gt;&lt;code&gt;fish&lt;/code&gt; homepage&lt;/a&gt;.</source>
          <target state="translated">Это документация к дружественной интерактивной оболочке &lt;code&gt;fish&lt;/code&gt; . &lt;code&gt;fish&lt;/code&gt; - удобная оболочка командной строки, предназначенная в основном для интерактивного использования. Оболочка - это программа, используемая для выполнения других программ. Для получения последней информации о &lt;code&gt;fish&lt;/code&gt; посетите &lt;a href=&quot;https://fishshell.com/&quot;&gt;домашнюю страницу &lt;/a&gt; &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="577bd6355fb298c4b6b2d6488f451eaa11f5dbb8" translate="yes" xml:space="preserve">
          <source>This is the preferred way to define your prompt as well:</source>
          <target state="translated">Это предпочтительный способ определения подсказки:</target>
        </trans-unit>
        <trans-unit id="8cc576b35450257aadce9343fd3afaecbb82068c" translate="yes" xml:space="preserve">
          <source>This means that the global value takes precedence over the universal value.</source>
          <target state="translated">Это означает,что глобальная ценность превалирует над универсальной.</target>
        </trans-unit>
        <trans-unit id="51d7db524de6aeb12230612416aa7c659663fe8a" translate="yes" xml:space="preserve">
          <source>This prompt that you see above is the &lt;code&gt;fish&lt;/code&gt; default prompt: it shows your username, hostname, and working directory.</source>
          <target state="translated">Это приглашение, которое вы видите выше, является приглашением по умолчанию для &lt;code&gt;fish&lt;/code&gt; : оно показывает ваше имя пользователя, имя хоста и рабочий каталог.</target>
        </trans-unit>
        <trans-unit id="c731bb20159682c25c6b4c24ba8357e2f689c68f" translate="yes" xml:space="preserve">
          <source>This tells you that there exists a file that starts with '&lt;code&gt;somefi&lt;/code&gt;', which is useful feedback as you type.</source>
          <target state="translated">Это говорит о том, что существует файл, который начинается с &amp;laquo; &lt;code&gt;somefi&lt;/code&gt; &amp;raquo;, что является полезным откликом при вводе .</target>
        </trans-unit>
        <trans-unit id="1ffb61bd1cd5715a466531b7a657f71109690e35" translate="yes" xml:space="preserve">
          <source>This test is mostly POSIX-compatible.</source>
          <target state="translated">Этот тест в основном POSIX-совместимый.</target>
        </trans-unit>
        <trans-unit id="44595c0d7ccfd8b4e39fcc6fb1c75e80391912f7" translate="yes" xml:space="preserve">
          <source>This tutorial assumes a basic understanding of command line shells and Unix commands, and that you have a working copy of &lt;code&gt;fish&lt;/code&gt;.</source>
          <target state="translated">В этом руководстве предполагается базовое понимание оболочек командной строки и команд Unix, а также наличие рабочей копии &lt;code&gt;fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f48d5a2439da006a37325d3b33d3046473c20c81" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure where to put your own customisations, use &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;.</source>
          <target state="translated">Этот широкий поиск может сбивать с толку. Если вы не знаете, где разместить свои собственные настройки, используйте &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f358815973e2ad20875ee5c37318a06668178037" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure, your completions probably belong in &lt;code&gt;~/.config/fish/completions&lt;/code&gt;.</source>
          <target state="translated">Этот широкий поиск может сбивать с толку. Если вы не уверены, ваши доработки, вероятно, принадлежат &lt;code&gt;~/.config/fish/completions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc8f74e5e402cdc09fe9163449bdf559dd908a47" translate="yes" xml:space="preserve">
          <source>This wide search may be confusing. If you are unsure, your functions probably belong in &lt;code&gt;~/.config/fish/functions&lt;/code&gt;.</source>
          <target state="translated">Этот широкий поиск может сбивать с толку. Если вы не уверены, возможно, ваши функции находятся в &lt;code&gt;~/.config/fish/functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a9195514b37c65c22f746374d557ac1c811b3ed" translate="yes" xml:space="preserve">
          <source>This will beep when the most recent job completes.</source>
          <target state="translated">Это будет звуковой сигнал,когда закончится самая последняя работа.</target>
        </trans-unit>
        <trans-unit id="d275d705f3563e034e584f7f1416ca37d5829386" translate="yes" xml:space="preserve">
          <source>This will run the &lt;code&gt;mkdir&lt;/code&gt; command, and if it is successful, change the current working directory to the one just created.</source>
          <target state="translated">Это запустит команду &lt;code&gt;mkdir&lt;/code&gt; , и в случае успеха изменит текущий рабочий каталог на только что созданный.</target>
        </trans-unit>
        <trans-unit id="f891073aa4578597be2a0dcd4d98d094f936e0cd" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion (replacing the command line contents), press right arrow or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. To accept the first suggested word, press &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; or &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. If the autosuggestion is not what you want, just ignore it: it won't execute unless you accept it.</source>
          <target state="translated">Для того, чтобы принять самовнушение (заменяющее содержимое командной строки), нажмите стрелку вправо или &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Для того, чтобы принять первое предложенное слово, нажмите клавишу &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt; или &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Если самовнушение не то, что вам нужно, просто игнорируйте его: оно не будет выполняться, если вы его не примете.</target>
        </trans-unit>
        <trans-unit id="18bff7130ea79ac3d65a254db2e29fd6582707f0" translate="yes" xml:space="preserve">
          <source>To accept the autosuggestion, hit &lt;b&gt;&amp;rarr;&lt;/b&gt; or &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;F&lt;/b&gt;. To accept a single word of the autosuggestion, &lt;em&gt;Alt&lt;/em&gt;-&lt;b&gt;&amp;rarr;&lt;/b&gt; (right arrow). If the autosuggestion is not what you want, just ignore it.</source>
          <target state="translated">Для того, чтобы принять самовнушение, нажмите &lt;b&gt;&amp;rarr;&lt;/b&gt; или &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;F&lt;/b&gt; . Чтобы принять отдельное слово самовнушения, &lt;em&gt;Alt&lt;/em&gt; - &lt;b&gt;&amp;rarr;&lt;/b&gt; (стрелка вправо). Если самовнушение не то, что вам нужно, просто проигнорируйте его.</target>
        </trans-unit>
        <trans-unit id="dd013ce2337c6820983e0fd191e213738ceadda7" translate="yes" xml:space="preserve">
          <source>To append standard error to a file, write &lt;code&gt;2&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Чтобы добавить в файл стандартную ошибку, напишите &lt;code&gt;2&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0108b6b821f16c26049be48e0e57d43670272afc" translate="yes" xml:space="preserve">
          <source>To append standard output to a file, write &lt;code&gt;&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Чтобы добавить стандартный вывод в файл, напишите &lt;code&gt;&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9943d195413e31ff48e223d431261ac3888d43ba" translate="yes" xml:space="preserve">
          <source>To append the output of FD N to a file, write &lt;code&gt;N&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</source>
          <target state="translated">Чтобы добавить вывод FD N в файл, напишите &lt;code&gt;N&amp;gt;&amp;gt;DESTINATION_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="193736dda0ff3338bfe47b251780f85b63fdea40" translate="yes" xml:space="preserve">
          <source>To avoid this problem, consider changing the setting which fish inherits. If this is not possible, add a statement to your &lt;a href=&quot;index#&quot;&gt;user initialization file&lt;/a&gt; (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):</source>
          <target state="translated">Чтобы избежать этой проблемы, подумайте об изменении настройки, которую наследует рыба. Если это невозможно, добавьте оператор в файл &lt;a href=&quot;index#&quot;&gt;инициализации пользователя&lt;/a&gt; (обычно &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="49e4d836110da227491a5f8bda022aa8c6061ef3" translate="yes" xml:space="preserve">
          <source>To change the number of characters per path component, set $fish_prompt_pwd_dir_length to the number of characters. Setting it to 0 or an invalid value will disable shortening entirely.</source>
          <target state="translated">Чтобы изменить количество символов в компоненте пути,установите $fish_prompt_pwd_dir_length на количество символов.Установка значения 0 или недействительного значения полностью отключит укорачивание.</target>
        </trans-unit>
        <trans-unit id="7c3563dd46a7946806ee797b7c244ebcbcfd652c" translate="yes" xml:space="preserve">
          <source>To compare strings or numbers or check file properties (whether a file exists or is writeable and such), use &lt;a href=&quot;commands#test&quot;&gt;test&lt;/a&gt;, like</source>
          <target state="translated">Чтобы сравнить строки или числа или проверить свойства файла (существует ли файл, доступен для записи и т. Д.), Используйте &lt;a href=&quot;commands#test&quot;&gt;test&lt;/a&gt; , например</target>
        </trans-unit>
        <trans-unit id="6a7f4987047f57b402d8e5f6d3639b704d77e210" translate="yes" xml:space="preserve">
          <source>To create a variable &lt;code&gt;smurf&lt;/code&gt;, containing the items &lt;code&gt;blue&lt;/code&gt; and &lt;code&gt;small&lt;/code&gt;, simply write:</source>
          <target state="translated">Чтобы создать переменную &lt;code&gt;smurf&lt;/code&gt; , содержащую элементы &lt;code&gt;blue&lt;/code&gt; и &lt;code&gt;small&lt;/code&gt; , просто напишите:</target>
        </trans-unit>
        <trans-unit id="98a0be80bb6315e5a311feb69467eb89c6ebbff0" translate="yes" xml:space="preserve">
          <source>To customize the syntax highlighting, you can set the environment variables listed in the &lt;a href=&quot;index#variables-color&quot;&gt;Variables for changing highlighting colors&lt;/a&gt; section.</source>
          <target state="translated">Чтобы настроить подсветку синтаксиса, вы можете установить переменные среды, перечисленные в разделе &amp;laquo; &lt;a href=&quot;index#variables-color&quot;&gt;Переменные для изменения цветов подсветки&lt;/a&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="27cc6de064f425d626ab9949da6c184849b875b2" translate="yes" xml:space="preserve">
          <source>To easily create a function of this form, you can use the &lt;a href=&quot;commands#alias&quot;&gt;alias&lt;/a&gt; command.</source>
          <target state="translated">Чтобы легко создать функцию этой формы, вы можете использовать команду &lt;a href=&quot;commands#alias&quot;&gt;alias&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86c65bf9fb8994e55d7d62a0a0233657bfd07c71" translate="yes" xml:space="preserve">
          <source>To get a listing of all currently started jobs, use the &lt;a href=&quot;commands#jobs&quot;&gt;&lt;code&gt;jobs&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Чтобы получить список всех запущенных в данный момент заданий, используйте команду &lt;a href=&quot;commands#jobs&quot;&gt; &lt;code&gt;jobs&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfb97c4eee9e02bf1114c1290403e1dda007a114" translate="yes" xml:space="preserve">
          <source>To implement an alias, use the &lt;code&gt;-w&lt;/code&gt; or &lt;code&gt;--wraps&lt;/code&gt; option:</source>
          <target state="translated">Чтобы реализовать псевдоним, используйте параметр &lt;code&gt;-w&lt;/code&gt; или &lt;code&gt;--wraps&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2897daf35873ca16d00ef5a1dac5a630b8c3c2e1" translate="yes" xml:space="preserve">
          <source>To make errors highlighted and red, use:</source>
          <target state="translated">Для того,чтобы сделать ошибки выделенными и красными,используйте:</target>
        </trans-unit>
        <trans-unit id="d3fa292c2ab02a989c54851cc682dc196a6ed257" translate="yes" xml:space="preserve">
          <source>To not overwrite (&quot;clobber&quot;) an existing file, write '&amp;gt;?DESTINATION' or '2&amp;gt;?DESTINATION'</source>
          <target state="translated">Чтобы не перезаписывать (&quot;затирать&quot;) существующий файл, напишите '&amp;gt;? DESTINATION' или '2&amp;gt;? DESTINATION'</target>
        </trans-unit>
        <trans-unit id="9ec5501ff931d8cf824481581d142283552d1be7" translate="yes" xml:space="preserve">
          <source>To prepend /usr/local/bin and /usr/sbin to &lt;code&gt;$PATH&lt;/code&gt;, you can write:</source>
          <target state="translated">Чтобы добавить / usr / local / bin и / usr / sbin в &lt;code&gt;$PATH&lt;/code&gt; , вы можете написать:</target>
        </trans-unit>
        <trans-unit id="e4beb8ce6e29ccb991aceef2a82e88203ebcf1e6" translate="yes" xml:space="preserve">
          <source>To provide a list of possible completions for myprog, use the &lt;code&gt;-a&lt;/code&gt; switch. If &lt;code&gt;myprog&lt;/code&gt; accepts the arguments start and stop, this can be specified as &amp;lsquo;complete -c myprog -a 'start stop&amp;rsquo;&lt;code&gt;. The argument to the&lt;/code&gt;-a` switch is always a single string. At completion time, it will be tokenized on spaces and tabs, and variable expansion, command substitution and other forms of parameter expansion will take place.</source>
          <target state="translated">Чтобы предоставить список возможных завершений для myprog, используйте переключатель &lt;code&gt;-a&lt;/code&gt; . Если &lt;code&gt;myprog&lt;/code&gt; принимает аргументы start и stop, это можно указать как 'complete -c myprog -a' start stop ' &lt;code&gt;. The argument to the&lt;/code&gt; переключателя -a` всегда является одна строка. Во время завершения он будет размечен пробелами и табуляциями, и произойдет расширение переменных, подстановка команд и другие формы расширения параметров.</target>
        </trans-unit>
        <trans-unit id="e25d06bf926dcd36845db13c547e9060f688cf44" translate="yes" xml:space="preserve">
          <source>To read standard input from a file, write &lt;code&gt;&amp;lt;SOURCE_FILE&lt;/code&gt;</source>
          <target state="translated">Чтобы прочитать стандартный ввод из файла, напишите &lt;code&gt;&amp;lt;SOURCE_FILE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efd4ccfede11d358f3540d606a3599db34a9bcee" translate="yes" xml:space="preserve">
          <source>To redirect both standard output and standard error to the file 'all_output.txt', you can write &lt;code&gt;echo Hello &amp;gt; all_output.txt 2&amp;gt;&amp;amp;1&lt;/code&gt;.</source>
          <target state="translated">Чтобы перенаправить стандартный вывод и стандартную ошибку в файл all_output.txt, вы можете написать &lt;code&gt;echo Hello &amp;gt; all_output.txt 2&amp;gt;&amp;amp;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f9c19f996d0330cf3e69a9443cdf693a9354414" translate="yes" xml:space="preserve">
          <source>To redirect input of FD N, write &lt;code&gt;N&amp;lt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Чтобы перенаправить ввод FD N, напишите &lt;code&gt;N&amp;lt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bceaef825c7c9262bebcb64ef18bc758682a29d" translate="yes" xml:space="preserve">
          <source>To redirect output of FD N, write &lt;code&gt;N&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Чтобы перенаправить вывод FD N, напишите &lt;code&gt;N&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="752b3b48d45276169440be6784b7f3a0d12fbd09" translate="yes" xml:space="preserve">
          <source>To remove /usr/local/bin from &lt;code&gt;$PATH&lt;/code&gt;, you can write:</source>
          <target state="translated">Чтобы удалить / usr / local / bin из &lt;code&gt;$PATH&lt;/code&gt; , вы можете написать:</target>
        </trans-unit>
        <trans-unit id="b2510f1ad4da5cd52177add85db1eee2d566d8fe" translate="yes" xml:space="preserve">
          <source>To save custom keybindings, put the &lt;code&gt;bind&lt;/code&gt; statements into &lt;a href=&quot;index#initialization&quot;&gt;config.fish&lt;/a&gt;. Alternatively, fish also automatically executes a function called &lt;code&gt;fish_user_key_bindings&lt;/code&gt; if it exists.</source>
          <target state="translated">Чтобы сохранить настраиваемые сочетания клавиш, поместите операторы &lt;code&gt;bind&lt;/code&gt; в &lt;a href=&quot;index#initialization&quot;&gt;config.fish&lt;/a&gt; . В качестве альтернативы fish также автоматически выполняет функцию с именем &lt;code&gt;fish_user_key_bindings&lt;/code&gt; , если она существует.</target>
        </trans-unit>
        <trans-unit id="61901ecaf8e208e6ef9d0647eaddf669c1ca4bd8" translate="yes" xml:space="preserve">
          <source>To search for previous entries containing the word 'make', type &lt;code&gt;make&lt;/code&gt; in the console and press the up key.</source>
          <target state="translated">Чтобы найти предыдущие записи, содержащие слово &amp;laquo;make&amp;raquo;, введите в консоли &lt;code&gt;make&lt;/code&gt; и нажмите клавишу &amp;laquo;вверх&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4b5da07cf8e10869da36d0830cda73f0b82b9df0" translate="yes" xml:space="preserve">
          <source>To see universal variables in action, start two fish sessions side by side, and issue the following command in one of them &lt;code&gt;set fish_color_cwd blue&lt;/code&gt;. Since &lt;code&gt;fish_color_cwd&lt;/code&gt; is a universal variable, the color of the current working directory listing in the prompt will instantly change to blue on both terminals.</source>
          <target state="translated">Чтобы увидеть универсальные переменные в действии, запустите два сеанса рыбной ловли бок о бок и выполните следующую команду в одном из них &lt;code&gt;set fish_color_cwd blue&lt;/code&gt; . Поскольку &lt;code&gt;fish_color_cwd&lt;/code&gt; - универсальная переменная, цвет списка текущего рабочего каталога в приглашении мгновенно изменится на синий на обоих терминалах.</target>
        </trans-unit>
        <trans-unit id="b44733fd0f7a6b3cff6f09a867502f4ea60ec37a" translate="yes" xml:space="preserve">
          <source>To separate a variable name from text encase the variable within double-quotes or braces.</source>
          <target state="translated">Чтобы отделить имя переменной от текста,заключите переменную в двойные кавычки или фигурные скобки.</target>
        </trans-unit>
        <trans-unit id="7e8052447e58d55b5e4f105d0ffa9d20ca69cabc" translate="yes" xml:space="preserve">
          <source>To set a variable value, use the &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt; command&lt;/a&gt;. A variable name can not be empty and can contain only letters, digits, and underscores. It may begin and end with any of those characters.</source>
          <target state="translated">Для того, чтобы установить значение переменной, используйте &lt;a href=&quot;commands#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; команды&lt;/a&gt; . Имя переменной не может быть пустым и может содержать только буквы, цифры и символы подчеркивания. Он может начинаться и заканчиваться любым из этих символов.</target>
        </trans-unit>
        <trans-unit id="698d5831491bbb9701f405a1762b10b1e4e34b8d" translate="yes" xml:space="preserve">
          <source>To set the variable &lt;code&gt;smurf_color&lt;/code&gt; to the value &lt;code&gt;blue&lt;/code&gt;, use the command &lt;code&gt;set smurf_color blue&lt;/code&gt;.</source>
          <target state="translated">Чтобы установить для переменной &lt;code&gt;smurf_color&lt;/code&gt; значение &lt;code&gt;blue&lt;/code&gt; , используйте команду &lt;code&gt;set smurf_color blue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bed9902ef9dec5f2285d68ae61ceccf41fb50e0a" translate="yes" xml:space="preserve">
          <source>To show the last command in the title:</source>
          <target state="translated">Чтобы показать последнюю команду в заголовке:</target>
        </trans-unit>
        <trans-unit id="10b0cfc6463833f72da638ff9b75529f78df15de" translate="yes" xml:space="preserve">
          <source>To specify a signal handler for the WINCH signal, write:</source>
          <target state="translated">Чтобы указать обработчик сигнала для сигнала WINCH,напишите:</target>
        </trans-unit>
        <trans-unit id="5271e92937f5c39aabd3c25c1ed834a98af6473a" translate="yes" xml:space="preserve">
          <source>To start a debug session simply run the builtin command &lt;code&gt;breakpoint&lt;/code&gt; at the point in a function or script where you wish to gain control. Also, the default action of the TRAP signal is to call this builtin. So a running script can be debugged by sending it the TRAP signal with the &lt;code&gt;kill&lt;/code&gt; command. Once in the debugger, it is easy to insert new breakpoints by using the funced function to edit the definition of a function.</source>
          <target state="translated">Чтобы начать сеанс отладки, просто запустите встроенную точку &lt;code&gt;breakpoint&lt;/code&gt; команды в той точке функции или сценария, где вы хотите получить управление. Кроме того, действие по умолчанию сигнала TRAP - вызвать эту встроенную функцию. Таким образом, запущенный сценарий можно отладить, отправив ему сигнал TRAP с командой &lt;code&gt;kill&lt;/code&gt; . Находясь в отладчике, легко вставлять новые точки останова, используя функцию funced для редактирования определения функции.</target>
        </trans-unit>
        <trans-unit id="1ca038b49940b6708e8ae180bb586be833d5a8f7" translate="yes" xml:space="preserve">
          <source>To use a &quot;,&quot; as an element, &lt;a href=&quot;#quotes&quot;&gt;quote&lt;/a&gt; or &lt;a href=&quot;#escapes&quot;&gt;escape&lt;/a&gt; it.</source>
          <target state="translated">Чтобы использовать &quot;,&quot; как элемент, заключите его в &lt;a href=&quot;#quotes&quot;&gt;кавычки&lt;/a&gt; или &lt;a href=&quot;#escapes&quot;&gt;экранируйте&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d1e2f58f1d1e885a6a557bd9d4d5d08b6944f6a" translate="yes" xml:space="preserve">
          <source>To use the value of the variable &lt;code&gt;smurf_color&lt;/code&gt;, write &lt;code&gt;$&lt;/code&gt; (dollar symbol) followed by the name of the variable, like &lt;code&gt;echo Smurfs are usually $smurf_color&lt;/code&gt;, which would print the result 'Smurfs are usually blue'.</source>
          <target state="translated">Чтобы использовать значение переменной &lt;code&gt;smurf_color&lt;/code&gt; , напишите &lt;code&gt;$&lt;/code&gt; (символ доллара), а затем имя переменной, например, &lt;code&gt;echo Smurfs are usually $smurf_color&lt;/code&gt; , что выведет результат &amp;laquo;Смурфы обычно синие&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="68bccd38cdde729f08d1dabeb1a907eb895c4a23" translate="yes" xml:space="preserve">
          <source>To write standard error to a file, write &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Чтобы записать стандартную ошибку в файл, напишите &lt;code&gt;2&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="659acd568f9529fe70705f8989914717371b557a" translate="yes" xml:space="preserve">
          <source>To write standard output to a file, write &lt;code&gt;&amp;gt;DESTINATION&lt;/code&gt;</source>
          <target state="translated">Чтобы записать стандартный вывод в файл, напишите &lt;code&gt;&amp;gt;DESTINATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73b0536304b40903244a528081e1fdc688374119" translate="yes" xml:space="preserve">
          <source>To write them on the same line, use the semicolon (&quot;;&quot;). That means the following two examples are equivalent:</source>
          <target state="translated">Чтобы написать их на одной строке,используйте точку с запятой (&quot;;&quot;).Это означает,что следующие два примера эквивалентны:</target>
        </trans-unit>
        <trans-unit id="8a17b293eb79b591812fbe348e1ab2d33402a845" translate="yes" xml:space="preserve">
          <source>Try hitting tab and see what &lt;code&gt;fish&lt;/code&gt; can do!</source>
          <target state="translated">Попробуйте нажать вкладку и посмотрите, на что способна &lt;code&gt;fish&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="fb05e0051333734c4ad4030d178c0e59ac5682e1" translate="yes" xml:space="preserve">
          <source>Turns on Vi key bindings and rebinds &lt;em&gt;Control&lt;/em&gt;-&lt;b&gt;C&lt;/b&gt; to clear the input line.</source>
          <target state="translated">Включает привязки клавиш Vi и повторно связывает &lt;em&gt;Control&lt;/em&gt; - &lt;b&gt;C,&lt;/b&gt; чтобы очистить строку ввода.</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="cddfd60fdd3770f95874832546e909dcebf4b486" translate="yes" xml:space="preserve">
          <source>Type some part of the command, and then hit the &lt;b&gt;&amp;uarr;&lt;/b&gt; or &lt;b&gt;&amp;darr;&lt;/b&gt; arrow keys to navigate through history matches.</source>
          <target state="translated">Введите часть команды, а затем нажимайте клавиши со стрелками &lt;b&gt;&amp;uarr;&lt;/b&gt; или &lt;b&gt;&amp;darr;,&lt;/b&gt; чтобы перемещаться по истории совпадений.</target>
        </trans-unit>
        <trans-unit id="d5c2f3a388810326308a4cf0f9d12d94e467f941" translate="yes" xml:space="preserve">
          <source>Undefined and empty variables expand to nothing.</source>
          <target state="translated">Неопределенные и пустые переменные расширяются до нуля.</target>
        </trans-unit>
        <trans-unit id="7f54feaec318be95b0574260bf420fada9f4de3f" translate="yes" xml:space="preserve">
          <source>Unfortunately, there is no way to make the changes take effect at once. You will need to log out and back in again.</source>
          <target state="translated">К сожалению,нет способа заставить изменения вступить в силу сразу.Вам нужно будет выйти из системы и вернуться обратно.</target>
        </trans-unit>
        <trans-unit id="145a9952034e76af8265b97c5e75a18c616e70d3" translate="yes" xml:space="preserve">
          <source>Unicode private-use characters reserved by fish</source>
          <target state="translated">Символы частного пользования Unicode,зарезервированные рыбой</target>
        </trans-unit>
        <trans-unit id="e1607dfd6b696cdd21b339099c2b8ec1f42324b3" translate="yes" xml:space="preserve">
          <source>Uninstalling fish</source>
          <target state="translated">Удаление рыбы</target>
        </trans-unit>
        <trans-unit id="b034e228b90d3e971c38c185d9c173b9fad3cb92" translate="yes" xml:space="preserve">
          <source>Universal Variables</source>
          <target state="translated">Универсальные переменные</target>
        </trans-unit>
        <trans-unit id="0ad651b3b2a50ae7d1ebd0a6ea4647b1fc3c39a6" translate="yes" xml:space="preserve">
          <source>Universal variables are variables that are shared between all the users' fish sessions on the computer. Fish stores many of its configuration options as universal variables. This means that in order to change fish settings, all you have to do is change the variable value once, and it will be automatically updated for all sessions, and preserved across computer reboots and login/logout.</source>
          <target state="translated">Универсальные переменные-это переменные,которые совместно используются всеми пользовательскими рыбными сессиями на компьютере.Fish хранит многие из своих конфигурационных опций в виде универсальных переменных.Это означает,что для изменения настроек рыбы достаточно один раз изменить значение переменной,и она будет автоматически обновляться для всех сеансов,и сохраняться при перезагрузке компьютера и входе/выходе из системы.</target>
        </trans-unit>
        <trans-unit id="44adc92f43c50d7e6bc38161bddc8ab76986e3b8" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt; does not append a new line unless it is specified as part of the string.</source>
          <target state="translated">В отличие от &lt;code&gt;echo&lt;/code&gt; , &lt;code&gt;printf&lt;/code&gt; не добавляет новую строку, если она не указана как часть строки.</target>
        </trans-unit>
        <trans-unit id="80688e6bfe64112d0b40126d6899beb59a720d8b" translate="yes" xml:space="preserve">
          <source>Unlike all other expanions, variable expansion also happens in double quoted strings. Inside double quotes (&lt;code&gt;&quot;these&quot;&lt;/code&gt;), variables will always expand to exactly one argument. If they are empty or undefined, it will result in an empty string. If they have one element, they'll expand to that element. If they have more than that, the elements will be joined with spaces.</source>
          <target state="translated">В отличие от всех других расширений, расширение переменных также происходит в строках с двойными кавычками. Внутри двойных кавычек ( &lt;code&gt;&quot;these&quot;&lt;/code&gt; ) переменные всегда расширяются до одного аргумента. Если они пусты или не определены, это приведет к пустой строке. Если у них есть один элемент, они расширятся до этого элемента. Если их больше, элементы будут соединены пробелами.</target>
        </trans-unit>
        <trans-unit id="ae2292eead056d06d02e28adb305ab1fa7a4ec35" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not have aliases or special prompt syntax. Functions take their place.</source>
          <target state="translated">В отличие от других оболочек, у &lt;code&gt;fish&lt;/code&gt; нет псевдонимов или специального синтаксиса подсказок. Их место занимают функции.</target>
        </trans-unit>
        <trans-unit id="081f5baca42ff8efaa02caf11115f980ca88911b" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; does not have an export command. Instead, a variable is exported via an option to &lt;code&gt;set&lt;/code&gt;, either &lt;code&gt;--export&lt;/code&gt; or just &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="translated">В отличие от других снарядов, у &lt;code&gt;fish&lt;/code&gt; нет команды экспорта. Вместо этого, переменный экспортируются через дополнительное устройство для &lt;code&gt;set&lt;/code&gt; , либо &lt;code&gt;--export&lt;/code&gt; или просто &lt;code&gt;-x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eee0d0201f0eeaf8c0900eea9c927bb9f91321d9" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; has no dedicated syntax for setting variables. Instead it has an ordinary command: &lt;code&gt;set&lt;/code&gt;, which takes a variable name, and then its value.</source>
          <target state="translated">В отличие от других оболочек, у &lt;code&gt;fish&lt;/code&gt; нет специального синтаксиса для установки переменных. Вместо этого у него есть обычная команда: &lt;code&gt;set&lt;/code&gt; , которая принимает имя переменной, а затем ее значение.</target>
        </trans-unit>
        <trans-unit id="a37e511dd2f26fdeffb3863f66e1a1c929cfac6a" translate="yes" xml:space="preserve">
          <source>Unlike other shells, &lt;code&gt;fish&lt;/code&gt; stores the exit status of the last command in &lt;code&gt;$status&lt;/code&gt; instead of &lt;code&gt;$?&lt;/code&gt;.</source>
          <target state="translated">В отличие от других оболочек, &lt;code&gt;fish&lt;/code&gt; сохраняет статус выхода последней команды в &lt;code&gt;$status&lt;/code&gt; вместо &lt;code&gt;$?&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="3af21d9e6a82afb93e7644e0365cdc2669f846f5" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish does not split command substitutions on any whitespace (like spaces or tabs), only newlines. This can be an issue with commands like &lt;code&gt;pkg-config&lt;/code&gt; that print what is meant to be multiple arguments on a single line. To split it on spaces too, use &lt;code&gt;string split&lt;/code&gt;.</source>
          <target state="translated">В отличие от других оболочек, fish не разделяет подстановки команд на какие-либо пробелы (например, пробелы или табуляции), а только на новые строки. Это может быть проблемой с такими командами, как &lt;code&gt;pkg-config&lt;/code&gt; , которые печатают то, что подразумевается как несколько аргументов в одной строке. Чтобы разделить его на пробелы, используйте &lt;code&gt;string split&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51633ed047475ca6ce896f07a0b3e652915476f4" translate="yes" xml:space="preserve">
          <source>Unlike other shells, fish splits command substitutions only on newlines, not spaces or tabs or the characters in $IFS.</source>
          <target state="translated">В отличие от других оболочек,fish расщепляет замены команд только на новые строки,а не на пробелы,табуляции или символы в $IFS.</target>
        </trans-unit>
        <trans-unit id="2e36f8ffbac36ebebd737db0d45fea3f73bea9ee" translate="yes" xml:space="preserve">
          <source>Unlike other shells, there is no prompt variable like PS1. To display your prompt, &lt;code&gt;fish&lt;/code&gt; executes a function with the name &lt;code&gt;fish_prompt&lt;/code&gt;, and its output is used as the prompt.</source>
          <target state="translated">В отличие от других оболочек, здесь нет переменной подсказки, такой как PS1. Чтобы отобразить ваше приглашение, &lt;code&gt;fish&lt;/code&gt; выполняет функцию с именем &lt;code&gt;fish_prompt&lt;/code&gt; , и ее вывод используется в качестве приглашения.</target>
        </trans-unit>
        <trans-unit id="dd1f16e81556a309c131d3f6b2ba87b84eb31d62" translate="yes" xml:space="preserve">
          <source>Unlike other shells, variables are not further split after substitution:</source>
          <target state="translated">В отличие от других оболочек,после замены переменные больше не разделяются:</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="4df13ec4234f96a6f1f82fccdde77669b4c4b95c" translate="yes" xml:space="preserve">
          <source>Usage Notes</source>
          <target state="translated">Примечания к использованию</target>
        </trans-unit>
        <trans-unit id="d74b204180b301da11db45838e08032a0d957c03" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt; to conditionally execute code, based on the exit status of a command.</source>
          <target state="translated">Используйте &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; и &lt;code&gt;else&lt;/code&gt; для условного выполнения кода в зависимости от статуса выхода команды.</target>
        </trans-unit>
        <trans-unit id="eb181080b44029a3622b4ef5a70c42d2deefdef1" translate="yes" xml:space="preserve">
          <source>Use one of the following switches to specify which resource limit to set or report:</source>
          <target state="translated">Используйте один из следующих переключателей,чтобы указать,какой лимит ресурсов установить или отчитаться:</target>
        </trans-unit>
        <trans-unit id="454bd477b983f01843d0ef8db935e66528a0a530" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;commands#fish_update_completions&quot;&gt;&lt;code&gt;fish_update_completions&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Используйте команду &lt;a href=&quot;commands#fish_update_completions&quot;&gt; &lt;code&gt;fish_update_completions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="173607f929222a6b2423c5f7cb2482dcefe3fd4d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;commands#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">Используйте команду &lt;a href=&quot;commands#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a070d11e8f9357b2f82f012cf1cbf197f82d8186" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$status&lt;/code&gt; variable. This replaces the &lt;code&gt;$?&lt;/code&gt; variable used in some other shells.</source>
          <target state="translated">Используйте переменную &lt;code&gt;$status&lt;/code&gt; . Это заменяет символ &lt;code&gt;$?&lt;/code&gt; переменная, используемая в некоторых других оболочках.</target>
        </trans-unit>
        <trans-unit id="31c238ddde1e3a389d384b0e3b72354aef7e4403" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;env&lt;/code&gt; command.</source>
          <target state="translated">Используйте команду &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0411e393ae78c9f8172fc0b2dbacdfcc91e4286c" translate="yes" xml:space="preserve">
          <source>Use the web configuration tool, &lt;a href=&quot;commands#fish_config&quot;&gt;&lt;code&gt;fish_config&lt;/code&gt;&lt;/a&gt;, or alter the &lt;a href=&quot;index#variables-color&quot;&gt;&lt;code&gt;fish_color&lt;/code&gt; family of environment variables&lt;/a&gt;.</source>
          <target state="translated">Используйте инструмент веб-настройки &lt;a href=&quot;commands#fish_config&quot;&gt; &lt;code&gt;fish_config&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;index#variables-color&quot;&gt; &lt;code&gt;fish_color&lt;/code&gt; семейство переменных среды fish_color&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60f35ccc6241ede38ff1ff41aa11e4d625890b21" translate="yes" xml:space="preserve">
          <source>Use them without a leading &lt;code&gt;$&lt;/code&gt; - &lt;code&gt;pi - 3&lt;/code&gt; should be about 0.</source>
          <target state="translated">Используйте их без начального &lt;code&gt;$&lt;/code&gt; - &lt;code&gt;pi - 3&lt;/code&gt; должно быть около 0.</target>
        </trans-unit>
        <trans-unit id="0cae9ed3f91cf8ab384b29a4865d0861615ac352" translate="yes" xml:space="preserve">
          <source>Useful functions for writing completions</source>
          <target state="translated">Полезные функции для завершения написания</target>
        </trans-unit>
        <trans-unit id="da533743f0159eea920a315a90c8751cf23609aa" translate="yes" xml:space="preserve">
          <source>User initialization, usually in &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; (controlled by the &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variable, and accessible as &lt;code&gt;$__fish_config_dir&lt;/code&gt;).</source>
          <target state="translated">Инициализация пользователя, обычно в &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; (управляется переменной окружения &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; и доступна как &lt;code&gt;$__fish_config_dir&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7ab03bad0e4c29694da24c66d0dfd6218d876cd9" translate="yes" xml:space="preserve">
          <source>Using another read history file</source>
          <target state="translated">Использование другого прочитанного файла истории</target>
        </trans-unit>
        <trans-unit id="b73b7dbea87b71c6a8e64d7b592b0efded7f191c" translate="yes" xml:space="preserve">
          <source>Using the &lt;em&gt;normal&lt;/em&gt; keyword will reset both background and foreground colors to whatever is the default for the terminal.</source>
          <target state="translated">Использование ключевого слова &lt;em&gt;normal&lt;/em&gt; сбрасывает цвета фона и переднего плана на значение по умолчанию для терминала.</target>
        </trans-unit>
        <trans-unit id="01391f93ace379e5306ef34014cfa60be33aafe9" translate="yes" xml:space="preserve">
          <source>Using the &lt;em&gt;normal&lt;/em&gt; keyword will reset foreground, background, and all formatting back to default.</source>
          <target state="translated">Использование ключевого слова &lt;em&gt;normal&lt;/em&gt; вернет передний план, фон и все форматирование к значениям по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f3b2ac121de4ce08e07778437bf30ed6cd6b55da" translate="yes" xml:space="preserve">
          <source>Using this command involves passing two sets of arguments separated by &lt;code&gt;--&lt;/code&gt;. The first set consists of one or more option specifications (&lt;code&gt;OPTION_SPEC&lt;/code&gt; above) and options that modify the behavior of &lt;code&gt;argparse&lt;/code&gt;. These must be listed before the &lt;code&gt;--&lt;/code&gt; argument. The second set are the arguments to be parsed in accordance with the option specifications. They occur after the &lt;code&gt;--&lt;/code&gt; argument and can be empty. More about this below but here is a simple example that might be used in a function named &lt;code&gt;my_function&lt;/code&gt;:</source>
          <target state="translated">Использование этой команды включает передачу двух наборов аргументов, разделенных знаком &lt;code&gt;--&lt;/code&gt; . Первый набор состоит из одной или нескольких спецификаций опций ( &lt;code&gt;OPTION_SPEC&lt;/code&gt; выше) и опций, которые изменяют поведение &lt;code&gt;argparse&lt;/code&gt; . Они должны быть указаны перед аргументом &lt;code&gt;--&lt;/code&gt; . Второй набор - это аргументы, которые нужно проанализировать в соответствии со спецификациями опций. Они появляются после аргумента &lt;code&gt;--&lt;/code&gt; и могут быть пустыми. Подробнее об этом ниже, но вот простой пример, который можно использовать в функции &lt;code&gt;my_function&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f09d5d78e534ac9eee0414d7d7a0fb24af84d370" translate="yes" xml:space="preserve">
          <source>Valid colors include:</source>
          <target state="translated">Действующие цвета включают в себя:</target>
        </trans-unit>
        <trans-unit id="95b8e49e0a4f7e7d23df31b6c1eedc2a79d60c67" translate="yes" xml:space="preserve">
          <source>Valid format specifiers are:</source>
          <target state="translated">Действительны спецификаторы формата:</target>
        </trans-unit>
        <trans-unit id="047ea2f72ce834a5cd86fc46331f14acbb3f9954" translate="yes" xml:space="preserve">
          <source>Variable expansion</source>
          <target state="translated">Переменное расширение</target>
        </trans-unit>
        <trans-unit id="e2eb91d2e9dd9d2efdc78a2c535e066657ae307e" translate="yes" xml:space="preserve">
          <source>Variable expansions</source>
          <target state="translated">Переменные расширения</target>
        </trans-unit>
        <trans-unit id="69cd2e4d36065246c043d32da81f65b5ec76feab" translate="yes" xml:space="preserve">
          <source>Variable scope</source>
          <target state="translated">Переменная область</target>
        </trans-unit>
        <trans-unit id="f2ffbf1cf26a2aeca0a92264405ee06ceed33e13" translate="yes" xml:space="preserve">
          <source>Variable scope for functions</source>
          <target state="translated">Переменный объем функций</target>
        </trans-unit>
        <trans-unit id="d3800988cc67ea9f9ae70495ad31314d7a633d64" translate="yes" xml:space="preserve">
          <source>Variable substitution also occurs in double quotes, but not single quotes:</source>
          <target state="translated">Переменная подстановка также происходит в двойных кавычках,но не в одинарных:</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="dc55a791f0556b1e2c98faf060801c75b48b8e87" translate="yes" xml:space="preserve">
          <source>Variables can be explicitly set to be exported with the &lt;code&gt;-x&lt;/code&gt; or &lt;code&gt;--export&lt;/code&gt; switch, or not exported with the &lt;code&gt;-u&lt;/code&gt; or &lt;code&gt;--unexport&lt;/code&gt; switch. The exporting rules when creating or updating a variable are identical to the scoping rules for variables:</source>
          <target state="translated">Переменные можно явно указать для экспорта с &lt;code&gt;--export&lt;/code&gt; переключателя &lt;code&gt;-x&lt;/code&gt; или --export или не экспортировать с &lt;code&gt;--unexport&lt;/code&gt; переключателя &lt;code&gt;-u&lt;/code&gt; или --unexport . Правила экспорта при создании или обновлении переменной идентичны правилам области видимости для переменных:</target>
        </trans-unit>
        <trans-unit id="8caf7a3931edf651d5c0eb5b032760d30623081d" translate="yes" xml:space="preserve">
          <source>Variables can be explicitly set to be universal with the &lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; switch, global with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; switch, or local with the &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--local&lt;/code&gt; switch. The scoping rules when creating or updating a variable are:</source>
          <target state="translated">Переменные могут быть явно заданы как универсальные с &lt;code&gt;--universal&lt;/code&gt; переключателя &lt;code&gt;-U&lt;/code&gt; или --universal , глобальные с &lt;code&gt;--global&lt;/code&gt; переключателя &lt;code&gt;-g&lt;/code&gt; или --global или локальные с &lt;code&gt;--local&lt;/code&gt; переключателя &lt;code&gt;-l&lt;/code&gt; или --local . Правила области видимости при создании или обновлении переменной:</target>
        </trans-unit>
        <trans-unit id="866a24aa0e9eb8db8b30498e951c623e32e65a14" translate="yes" xml:space="preserve">
          <source>Variables can be marked or unmarked as PATH variables via the &lt;code&gt;--path&lt;/code&gt; and &lt;code&gt;--unpath&lt;/code&gt; options to &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">Переменные могут быть маркированы или пометка PATH переменных через &lt;code&gt;--path&lt;/code&gt; и &lt;code&gt;--unpath&lt;/code&gt; опций для &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81a1e4b50937d575e7941efe7d24b3e8887251ba" translate="yes" xml:space="preserve">
          <source>Variables can be used as indices for expansion of variables, like so:</source>
          <target state="translated">Переменные можно использовать в качестве индексов для разложения переменных:</target>
        </trans-unit>
        <trans-unit id="d13d8872f2b85622ec05b4faa321ef701163466e" translate="yes" xml:space="preserve">
          <source>Variables for changing highlighting colors</source>
          <target state="translated">Переменные для изменения цвета подсветки</target>
        </trans-unit>
        <trans-unit id="021a38b749711c430ab7b97416e1e7f42bc63ab2" translate="yes" xml:space="preserve">
          <source>Variables in fish can be exported. This means the variable will be inherited by any commands started by fish. It is convention that exported variables are in uppercase and unexported variables are in lowercase.</source>
          <target state="translated">Переменные в рыбе могут экспортироваться.Это означает,что переменная будет наследована любыми командами,запущенными рыбой.Принято считать,что экспортируемые переменные находятся в верхнем регистре,а неимпортируемые-в нижнем.</target>
        </trans-unit>
        <trans-unit id="8b7277f6927f4830af2060ea99b89d5f43313327" translate="yes" xml:space="preserve">
          <source>Variables may be explicitly set to either exported or not exported. When an exported variable goes out of scope, it is unexported.</source>
          <target state="translated">Переменные могут быть явно установлены как экспортируемые,так и не экспортируемые.Когда экспортируемая переменная выходит за рамки,она не экспортируется.</target>
        </trans-unit>
        <trans-unit id="5daf675f51e0dc0a7ce5d91db9146d3208ab170c" translate="yes" xml:space="preserve">
          <source>Variables may be explicitly set to universal, global or local. Variables with the same name in different scopes will not be changed.</source>
          <target state="translated">Переменные могут быть явно установлены на универсальный,глобальный или локальный уровень.Переменные с одним и тем же именем в разных диапазонах не будут изменены.</target>
        </trans-unit>
        <trans-unit id="4a88384607868c891caaae0411d761359e4f6ef5" translate="yes" xml:space="preserve">
          <source>Variables whose name are in uppercase are generally exported to the commands started by fish, while those in lowercase are not exported (&lt;code&gt;CMD_DURATION&lt;/code&gt; is an exception, for historical reasons). This rule is not enforced by fish, but it is good coding practice to use casing to distinguish between exported and unexported variables. &lt;code&gt;fish&lt;/code&gt; also uses several variables internally. Such variables are prefixed with the string &lt;code&gt;__FISH&lt;/code&gt; or &lt;code&gt;__fish.&lt;/code&gt; These should never be used by the user. Changing their value may break fish.</source>
          <target state="translated">Переменные, имена которых написаны в верхнем регистре, обычно экспортируются в команды, запущенные &lt;code&gt;CMD_DURATION&lt;/code&gt; , в то время как переменные в нижнем регистре не экспортируются ( CMD_DURATION является исключением по историческим причинам). Fish не соблюдает это правило, но хорошей практикой программирования является использование оболочки для различения экспортируемых и неэкспортированных переменных. &lt;code&gt;fish&lt;/code&gt; также использует несколько переменных внутри. Такие переменные имеют префикс &lt;code&gt;__FISH&lt;/code&gt; или &lt;code&gt;__fish.&lt;/code&gt; Они никогда не должны использоваться пользователем. Изменение их стоимости может сломать рыбу.</target>
        </trans-unit>
        <trans-unit id="8de6cda0a76daf29c82a8e5cb8b2ed185cd03414" translate="yes" xml:space="preserve">
          <source>Vi mode allows for the use of Vi-like commands at the prompt. Initially, &lt;a href=&quot;#vi-mode-insert&quot;&gt;insert mode&lt;/a&gt; is active. &lt;b&gt;Escape&lt;/b&gt; enters &lt;a href=&quot;#vi-mode-command&quot;&gt;command mode&lt;/a&gt;. The commands available in command, insert and visual mode are described below. Vi mode shares &lt;a href=&quot;#shared-binds&quot;&gt;some bindings&lt;/a&gt; with &lt;a href=&quot;#emacs-mode&quot;&gt;Emacs mode&lt;/a&gt;.</source>
          <target state="translated">Режим Vi позволяет использовать в командной строке команды типа Vi. Изначально активен &lt;a href=&quot;#vi-mode-insert&quot;&gt;режим вставки&lt;/a&gt; . &lt;b&gt;Escape&lt;/b&gt; переходит в &lt;a href=&quot;#vi-mode-command&quot;&gt;командный режим&lt;/a&gt; . Команды, доступные в командном, вставном и визуальном режимах, описаны ниже. Режим Vi имеет &lt;a href=&quot;#shared-binds&quot;&gt;некоторые привязки&lt;/a&gt; к &lt;a href=&quot;#emacs-mode&quot;&gt;режиму Emacs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc7edfc16e4d70682dbbf7a6226979a31fd0ad3e" translate="yes" xml:space="preserve">
          <source>Vi mode commands</source>
          <target state="translated">Vi-командный режим</target>
        </trans-unit>
        <trans-unit id="5fb895569dd30157f331b4727bbce633510ff8ba" translate="yes" xml:space="preserve">
          <source>Visual mode</source>
          <target state="translated">Визуальный режим</target>
        </trans-unit>
        <trans-unit id="31e1f6a5be94b9a7630dae992d9a626fc08b6ea1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified in conjunction with long, short, or old style options, the specified arguments are only used as completions when attempting to complete an argument for any of the specified options. If &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arguments&lt;/code&gt; is specified without any long, short, or old style options, the specified arguments are used when completing any argument to the command (except when completing an option argument that was specified with &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--require-parameter&lt;/code&gt;).</source>
          <target state="translated">Когда &lt;code&gt;-a&lt;/code&gt; или &lt;code&gt;--arguments&lt;/code&gt; указаны вместе с опциями long, short или old style, указанные аргументы используются только как завершающие при попытке завершить аргумент для любой из указанных опций. Если &lt;code&gt;-a&lt;/code&gt; или &lt;code&gt;--arguments&lt;/code&gt; указаны без каких-либо длинных, коротких или старых параметров стиля, указанные аргументы используются при завершении любого аргумента команды (кроме случаев завершения аргумента параметра, указанного с помощью &lt;code&gt;-r&lt;/code&gt; или &lt;code&gt;--require-parameter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2505ca259992c20f2e115bd87371ef8405dc9f79" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COMMAND&lt;/code&gt; is a shellscript command, it is a good practice to put the actual code into a &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt; and simply bind to the function name. This way it becomes significantly easier to test the function while editing, and the result is usually more readable as well.</source>
          <target state="translated">Когда &lt;code&gt;COMMAND&lt;/code&gt; является командой сценария оболочки, рекомендуется поместить фактический код в &lt;a href=&quot;#function&quot;&gt;функцию&lt;/a&gt; и просто привязать ее к имени функции. Таким образом, становится значительно проще тестировать функцию во время редактирования, а результат обычно также становится более читабельным.</target>
        </trans-unit>
        <trans-unit id="0b61f14b6442d9d89b8d8fa699d95bbd93af2c25" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fish&lt;/code&gt; encounters a command, it attempts to autoload a function for that command, by looking for a file with the name of that command in &lt;code&gt;~/.config/fish/functions/&lt;/code&gt;.</source>
          <target state="translated">Когда &lt;code&gt;fish&lt;/code&gt; встречает команду, он пытается автоматически загрузить функцию для этой команды, ища файл с именем этой команды в &lt;code&gt;~/.config/fish/functions/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80ac01474d96293d4e91964bb2b3037356d135af" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;read&lt;/code&gt; reaches the end-of-file (EOF) instead of the terminator, the exit status is set to 1. Otherwise, it is set to 0.</source>
          <target state="translated">Когда &lt;code&gt;read&lt;/code&gt; достигает конца файла (EOF), а не терминатора, статус выхода устанавливается в 1. В противном случае он устанавливается в 0.</target>
        </trans-unit>
        <trans-unit id="f91db4fb609ae3c10e05da51ef90890379f33f5d" translate="yes" xml:space="preserve">
          <source>When a command lookup fails</source>
          <target state="translated">Когда поиск команды не удается</target>
        </trans-unit>
        <trans-unit id="a64df52b82b6680cee5d07a9157923c1c477f30d" translate="yes" xml:space="preserve">
          <source>When a process or job exits</source>
          <target state="translated">Когда процесс или работа заканчивается</target>
        </trans-unit>
        <trans-unit id="1b00bfa449d40b6151effb4cc0facd22af7b0736" translate="yes" xml:space="preserve">
          <source>When a signal is delivered</source>
          <target state="translated">Когда сигнал подается</target>
        </trans-unit>
        <trans-unit id="3f06f0c49199bffd6092463385d2eaaf34e91888" translate="yes" xml:space="preserve">
          <source>When all arguments are valid job specifiers, bg will background all matching jobs that exist.</source>
          <target state="translated">Когда все аргументы являются действительными спецификаторами задания,bg будет фоном для всех соответствующих заданий,которые существуют.</target>
        </trans-unit>
        <trans-unit id="24bda0993bf1f284e0377d7559e36d7befb31f8a" translate="yes" xml:space="preserve">
          <source>When an argument for a program is given on the commandline, it undergoes the process of parameter expansion before it is sent on to the command. Parameter expansion is a powerful mechanism that allows you to expand the parameter in various ways, including performing wildcard matching on files, inserting the value of a shell variable into the parameter or even using the output of another command as a parameter list.</source>
          <target state="translated">Когда в командной строке дается аргумент для программы,она проходит процесс расширения параметров перед отправкой в команду.Расширение параметров-это мощный механизм,позволяющий расширять параметр различными способами,в том числе выполняя подстановочные совпадения в файлах,вставляя значение переменной оболочки в параметр или даже используя вывод другой команды в качестве списка параметров.</target>
        </trans-unit>
        <trans-unit id="51d4ef16c4e522527f31c576578d19308f006fec" translate="yes" xml:space="preserve">
          <source>When an array is exported as an environment variable, it is either space or colon delimited, depending on whether it is a path variable:</source>
          <target state="translated">Когда массив экспортируется как переменная окружения,он либо делится пробелом,либо двоеточием,в зависимости от того,является ли он переменной пути:</target>
        </trans-unit>
        <trans-unit id="083625467bc7bf4cd25dc54b2e5d0f68812dc076" translate="yes" xml:space="preserve">
          <source>When at least one of the arguments isn't a valid job specifier (i.e. PID), &lt;code&gt;bg&lt;/code&gt; will print an error without backgrounding anything.</source>
          <target state="translated">Если хотя бы один из аргументов не является допустимым спецификатором задания (например, PID), &lt;code&gt;bg&lt;/code&gt; выведет сообщение об ошибке, ничего не создавая фона.</target>
        </trans-unit>
        <trans-unit id="a37e1f3259f6cdbb079115ac56119f8c19560a48" translate="yes" xml:space="preserve">
          <source>When calling a function, all current local variables temporarily disappear. This shadowing of the local scope is needed since the variable namespace would become cluttered, making it very easy to accidentally overwrite variables from another function.</source>
          <target state="translated">При вызове функции все текущие локальные переменные временно исчезают.Это затенение локальной области видимости необходимо,так как пространство имён переменных будет загромождено,что очень облегчает случайное перезаписывание переменных из другой функции.</target>
        </trans-unit>
        <trans-unit id="15eb860b17777aaad36a975023e7f241c10c68cb" translate="yes" xml:space="preserve">
          <source>When combining multiple parameter expansions, expansions are performed in the following order:</source>
          <target state="translated">При объединении нескольких расширений параметров расширения выполняются в следующем порядке:</target>
        </trans-unit>
        <trans-unit id="8f30248e782192746e24f20cbd06bf81e9f75b5d" translate="yes" xml:space="preserve">
          <source>When defining a new function in fish, it is possible to make it into an event handler, i.e. a function that is automatically run when a specific event takes place. Events that can trigger a handler currently are:</source>
          <target state="translated">При определении новой функции в рыбе можно превратить ее в обработчик событий,т.е.в функцию,которая автоматически запускается при наступлении определенного события.Событиями,которые могут вызывать обработчик в данный момент,являются:</target>
        </trans-unit>
        <trans-unit id="c06a76c81fd354d96a91e2098cf33daa64c9b259" translate="yes" xml:space="preserve">
          <source>When erasing completions, it is possible to either erase all completions for a specific command by specifying &lt;code&gt;complete -c COMMAND -e&lt;/code&gt;, or by specifying a specific completion option to delete by specifying either a long, short or old style option.</source>
          <target state="translated">При стирании завершений можно либо удалить все завершения для определенной команды, указав &lt;code&gt;complete -c COMMAND -e&lt;/code&gt; , либо указав конкретную опцию завершения для удаления, указав либо длинный, либо короткий, либо старый вариант стиля.</target>
        </trans-unit>
        <trans-unit id="71562657ada1f73f1b73dd5722b7668b06f50100" translate="yes" xml:space="preserve">
          <source>When fish waits for input, it will display a prompt by evaluating the &lt;code&gt;fish_prompt&lt;/code&gt; and &lt;code&gt;fish_right_prompt&lt;/code&gt; functions. The output of the former is displayed on the left and the latter's output on the right side of the terminal. The output of &lt;code&gt;fish_mode_prompt&lt;/code&gt; will be prepended on the left, though the default function only does this when in &lt;a href=&quot;index#vi-mode&quot;&gt;vi-mode&lt;/a&gt;.</source>
          <target state="translated">Когда рыба ожидает ввода, она отображает подсказку, оценивая функции &lt;code&gt;fish_prompt&lt;/code&gt; и &lt;code&gt;fish_right_prompt&lt;/code&gt; . Вывод первого отображается слева, а вывод второго - справа от терминала. Вывод &lt;code&gt;fish_mode_prompt&lt;/code&gt; будет добавлен слева, хотя функция по умолчанию делает это только в &lt;a href=&quot;index#vi-mode&quot;&gt;режиме vi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="607879a486f64cd0da9cb1a6673f02fc3b5d2fec" translate="yes" xml:space="preserve">
          <source>When in vi-mode, the &lt;a href=&quot;fish_mode_prompt&quot;&gt;&lt;code&gt;fish_mode_prompt&lt;/code&gt;&lt;/a&gt; function will display a mode indicator to the left of the prompt. The &lt;code&gt;fish_vi_cursor&lt;/code&gt; function will be used to change the cursor's shape depending on the mode in supported terminals. To disable this feature, override it with an empty function. To display the mode elsewhere (like in your right prompt), use the output of the &lt;code&gt;fish_default_mode_prompt&lt;/code&gt; function.</source>
          <target state="translated">В режиме &lt;a href=&quot;fish_mode_prompt&quot;&gt; &lt;code&gt;fish_mode_prompt&lt;/code&gt; &lt;/a&gt; функция fish_mode_prompt отображает индикатор режима слева от приглашения. Функция &lt;code&gt;fish_vi_cursor&lt;/code&gt; будет использоваться для изменения формы курсора в зависимости от режима в поддерживаемых терминалах. Чтобы отключить эту функцию, замените ее пустой функцией. Чтобы отобразить режим в другом месте (например, в правой подсказке), используйте вывод функции &lt;code&gt;fish_default_mode_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33b46dcb16afbaec6d4436b9d1a5f44e784219a0" translate="yes" xml:space="preserve">
          <source>When multiple &lt;code&gt;COMMAND&lt;/code&gt;s are provided, they are all run in the specified order when the key is pressed. Note that special input functions cannot be combined with ordinary shell script commands. The commands must be entirely a sequence of special input functions (from &lt;code&gt;bind -f&lt;/code&gt;) or all shell script commands (i.e., valid fish script).</source>
          <target state="translated">Если предоставлено несколько &lt;code&gt;COMMAND&lt;/code&gt; , все они запускаются в указанном порядке при нажатии клавиши. Обратите внимание, что специальные функции ввода нельзя комбинировать с обычными командами сценария оболочки. Команды должны быть полностью последовательностью специальных функций ввода (из &lt;code&gt;bind -f&lt;/code&gt; ) или всех команд сценария оболочки (т. Е. Допустимого сценария fish).</target>
        </trans-unit>
        <trans-unit id="60402cb8f58632c68a26ced09b11fbf6589f7279" translate="yes" xml:space="preserve">
          <source>When running in this mode, &lt;code&gt;read&lt;/code&gt; does not split the input in any way and text is redirected to standard output without any further processing or manipulation.</source>
          <target state="translated">При работе в этом режиме &lt;code&gt;read&lt;/code&gt; никоим образом не разделяет ввод, и текст перенаправляется на стандартный вывод без какой-либо дальнейшей обработки или манипуляций.</target>
        </trans-unit>
        <trans-unit id="efd94d1e11c389f3a2b8042a383ed84dc4be3715" translate="yes" xml:space="preserve">
          <source>When the cursor is over a parenthesis or a quote, &lt;code&gt;fish&lt;/code&gt; also highlights its matching quote or parenthesis.</source>
          <target state="translated">Когда курсор находится над круглой скобкой или кавычкой, &lt;code&gt;fish&lt;/code&gt; также выделяет соответствующую кавычку или скобку.</target>
        </trans-unit>
        <trans-unit id="01a87969e30ad0e39174183d05f883882efbc023" translate="yes" xml:space="preserve">
          <source>When the prompt is about to be shown</source>
          <target state="translated">Когда на экране появится подсказка</target>
        </trans-unit>
        <trans-unit id="84fb666d00ac44965366d223053ffc07523cfa5c" translate="yes" xml:space="preserve">
          <source>When the value of a variable is updated</source>
          <target state="translated">Когда значение переменной обновляется</target>
        </trans-unit>
        <trans-unit id="5149e58fb1af17e2b78bfc79105f3521233c2ff0" translate="yes" xml:space="preserve">
          <source>When two unquoted expansions directly follow each other, you need to watch out for expansions that expand to nothing. This includes undefined variables and empty lists, but also command substitutions with no output. See the &lt;a href=&quot;#cartesian-product&quot;&gt;cartesian product&lt;/a&gt; section for more information.</source>
          <target state="translated">Когда два расширения, не указанные в кавычках, следуют друг за другом, вам нужно следить за расширениями, которые не расширяются до нуля. Сюда входят неопределенные переменные и пустые списки, а также подстановки команд без вывода. Дополнительную информацию см. В разделе &lt;a href=&quot;#cartesian-product&quot;&gt;декартовых произведений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="611390b4e7bff2a4f48823eeb19ea95b7d5c6f8e" translate="yes" xml:space="preserve">
          <source>When using a variable as an argument for a test operator you should almost always enclose it in double-quotes. There are only two situations it is safe to omit the quote marks. The first is when the argument is a literal string with no whitespace or other characters special to the shell (e.g., semicolon). For example, &lt;code&gt;test -b /my/file&lt;/code&gt;. The second is using a variable that expands to exactly one element including if that element is the empty string (e.g., &amp;lsquo;set x &amp;rsquo;'&lt;code&gt;). If the variable is not set, set but with no value, or set to more than one value you must enclose it in double-quotes. For example,&lt;/code&gt;test &quot;$x&quot; = &quot;$y&quot;&lt;code&gt;. Since it is always safe to enclose variables in double-quotes when used as&lt;/code&gt;test` arguments that is the recommended practice.</source>
          <target state="translated">При использовании переменной в качестве аргумента для оператора тестирования вы почти всегда должны заключать ее в двойные кавычки. Опускать кавычки безопасно только в двух случаях. Первый - это когда аргумент представляет собой буквальную строку без пробелов или других символов, специальных для оболочки (например, точки с запятой). Например, &lt;code&gt;test -b /my/file&lt;/code&gt; . Во втором случае используется переменная, которая расширяется ровно до одного элемента, в том числе, если этот элемент является пустой строкой (например, &amp;laquo;установить x&amp;raquo; &lt;code&gt;). If the variable is not set, set but with no value, or set to more than one value you must enclose it in double-quotes. For example,&lt;/code&gt; проверьте &amp;laquo;$ x&amp;raquo; = &amp;laquo;$ y&amp;raquo; &lt;code&gt;. Since it is always safe to enclose variables in double-quotes when used as&lt;/code&gt; качестве аргументов теста всегда безопасно заключать переменные в двойные кавычки , это рекомендуется.</target>
        </trans-unit>
        <trans-unit id="423a828b908fd75e9cc37f539daeca01ccaa2ca1" translate="yes" xml:space="preserve">
          <source>When using most virtual terminals, it is possible to set the message displayed in the titlebar of the terminal window. This can be done automatically in fish by defining the &lt;code&gt;fish_title&lt;/code&gt; function. The &lt;code&gt;fish_title&lt;/code&gt; function is executed before and after a new command is executed or put into the foreground and the output is used as a titlebar message. The &lt;code&gt;status current-command&lt;/code&gt; builtin will always return the name of the job to be put into the foreground (or 'fish' if control is returning to the shell) when the &lt;code&gt;fish_prompt&lt;/code&gt; function is called. The first argument to fish_title will contain the most recently executed foreground command as a string, starting with fish 2.2.</source>
          <target state="translated">При использовании большинства виртуальных терминалов можно установить сообщение, отображаемое в заголовке окна терминала. Это можно сделать в fish автоматически, определив функцию &lt;code&gt;fish_title&lt;/code&gt; . Функция &lt;code&gt;fish_title&lt;/code&gt; выполняется до и после того, как новая команда выполняется или выводится на передний план, а вывод используется как сообщение заголовка. &lt;code&gt;status current-command&lt;/code&gt; встроенной всегда возвращает имя задания , чтобы поставить на передний план (или &amp;laquo;рыба&amp;raquo; , если управление возвращается к раковине) , когда &lt;code&gt;fish_prompt&lt;/code&gt; функция вызывается. Первый аргумент функции fish_title будет содержать последнюю выполненную команду переднего плана в виде строки, начиная с fish 2.2.</target>
        </trans-unit>
        <trans-unit id="8174e8c2267c766e6e1589bb88a15f5f751e9e9e" translate="yes" xml:space="preserve">
          <source>When using this feature together with array brackets, the brackets will always match the innermost &lt;code&gt;$&lt;/code&gt; dereference. Thus, &lt;code&gt;$$foo[5]&lt;/code&gt; will always mean the fifth element of the &lt;code&gt;foo&lt;/code&gt; variable should be dereferenced, not the fifth element of the doubly dereferenced variable &lt;code&gt;foo&lt;/code&gt;. The latter can instead be expressed as &lt;code&gt;$$foo[1][5]&lt;/code&gt;.</source>
          <target state="translated">При использовании этой функции вместе со скобками массива скобки всегда будут соответствовать самому внутреннему &lt;code&gt;$&lt;/code&gt; разыменованию. Таким образом, &lt;code&gt;$$foo[5]&lt;/code&gt; всегда будет означать , пятый элемент &lt;code&gt;foo&lt;/code&gt; переменной должен быть разыменовываются, не пятый элемент дважды разыменовано переменной &lt;code&gt;foo&lt;/code&gt; . Последнее вместо этого можно выразить как &lt;code&gt;$$foo[1][5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc413625f2d8700615beffe00723d3e066b2931" translate="yes" xml:space="preserve">
          <source>When you start a job in &lt;code&gt;fish&lt;/code&gt;, &lt;code&gt;fish&lt;/code&gt; itself will pause, and give control of the terminal to the program just started. Sometimes, you want to continue using the commandline, and have the job run in the background. To create a background job, append an &amp;amp; (ampersand) to your command. This will tell fish to run the job in the background. Background jobs are very useful when running programs that have a graphical user interface.</source>
          <target state="translated">Когда вы начинаете работу в &lt;code&gt;fish&lt;/code&gt; , &lt;code&gt;fish&lt;/code&gt; сам по себе сделает паузу, и передать управление терминалом в программу только начались. Иногда вы хотите продолжить использование командной строки и запустить задание в фоновом режиме. Чтобы создать фоновое задание, добавьте к команде символ &amp;amp; (амперсанд). Это скажет Fish запустить задание в фоновом режиме. Фоновые задания очень полезны при запуске программ с графическим пользовательским интерфейсом.</target>
        </trans-unit>
        <trans-unit id="d15c25511fa0415df6ab124fbf33636f92131f5e" translate="yes" xml:space="preserve">
          <source>Whenever a process exits, an exit status is returned to the program that started it (usually the shell). This exit status is an integer number, which tells the calling application how the execution of the command went. In general, a zero exit status means that the command executed without problem, but a non-zero exit status means there was some form of problem.</source>
          <target state="translated">Всякий раз,когда процесс завершает свою работу,программе,которая его запустила (обычно это оболочка),возвращается статус завершения.Статус выхода представляет собой целое число,которое сообщает вызывающему приложению,как прошло выполнение команды.В общем случае нулевой статус выхода означает,что команда выполнялась без проблем,а ненулевой статус выхода означает,что была какая-то проблема.</target>
        </trans-unit>
        <trans-unit id="37e6818d213a036baa5f294f8cb49db4fd377178" translate="yes" xml:space="preserve">
          <source>Where can I find extra tools for fish?</source>
          <target state="translated">Где я могу найти дополнительные инструменты для рыбы?</target>
        </trans-unit>
        <trans-unit id="079e201e9c4dd5d183821d76711a9a3942fe2c10" translate="yes" xml:space="preserve">
          <source>Where to put completions</source>
          <target state="translated">Где поставить комплектации</target>
        </trans-unit>
        <trans-unit id="218d0fd933c5736f11bfc14c23fd644e6997fe12" translate="yes" xml:space="preserve">
          <source>While loops:</source>
          <target state="translated">В то время как петли:</target>
        </trans-unit>
        <trans-unit id="c3d957621152f2cbd082b0e140ac7a547272ab27" translate="yes" xml:space="preserve">
          <source>While this will check if &lt;code&gt;hasargs&lt;/code&gt; was run with the &lt;code&gt;-q&lt;/code&gt; option:</source>
          <target state="translated">Пока это проверяет, был ли &lt;code&gt;hasargs&lt;/code&gt; с параметром &lt;code&gt;-q&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3da2ee8c41b2531ccfd9706e7ed4059f9b39b539" translate="yes" xml:space="preserve">
          <source>Why doesn't `set -Ux` (exported universal variables) seem to work?</source>
          <target state="translated">Почему не работает `set -Ux` (экспортируемые универсальные переменные)?</target>
        </trans-unit>
        <trans-unit id="1e505f696e4f6b7e0b5ed829f453debff8a4a2e5" translate="yes" xml:space="preserve">
          <source>Why doesn't history substitution (&quot;!$&quot; etc.) work?</source>
          <target state="translated">Почему подмена истории (!$&quot; и т.д.)не работает?</target>
        </trans-unit>
        <trans-unit id="567d5b34994eb0320286730214d3dd777982c9ad" translate="yes" xml:space="preserve">
          <source>Why fish?</source>
          <target state="translated">Почему рыба?</target>
        </trans-unit>
        <trans-unit id="59af40d4a351e635fdbe369d7b681d20a590a23a" translate="yes" xml:space="preserve">
          <source>Wildcard expansion</source>
          <target state="translated">Расширение Wildcard</target>
        </trans-unit>
        <trans-unit id="59047ee36a3c7c05f567f4b4586b76d8d7e3171d" translate="yes" xml:space="preserve">
          <source>Wildcard matches are sorted case insensitively. When sorting matches containing numbers, consecutive digits are considered to be one element, so that the strings '1' '5' and '12' would be sorted in the order given.</source>
          <target state="translated">Спички Wildcard сортируются нечувствительно к регистру.При сортировке совпадений,содержащих числа,последовательные цифры считаются одним элементом,так что строки '1' '5' и '12' будут отсортированы в указанном порядке.</target>
        </trans-unit>
        <trans-unit id="f4138f22664d37f96c263052adeb723fdfd7248c" translate="yes" xml:space="preserve">
          <source>Wildcards</source>
          <target state="translated">Wildcards</target>
        </trans-unit>
        <trans-unit id="278d17b7409d744f59bd2b428221655321a32bee" translate="yes" xml:space="preserve">
          <source>Will print &quot;Number of bananas in my pocket: 42&quot;, &lt;em&gt;without&lt;/em&gt; a newline.</source>
          <target state="translated">Напечатает &amp;laquo;Количество бананов в кармане: 42&amp;raquo; &lt;em&gt;без&lt;/em&gt; перевода строки.</target>
        </trans-unit>
        <trans-unit id="6d27bda981ba079ffce589e22866c0442facccba" translate="yes" xml:space="preserve">
          <source>Will print &quot;flounder fish&quot; (separated with a tab character), followed by a newline character. This is useful for writing completions, as fish expects completion scripts to output the option followed by the description, separated with a tab character.</source>
          <target state="translated">Выведет &quot;рыба камбала&quot; (разделена символом табуляции),за которым последует символ новой строки.Это полезно при написании завершений,так как fish ожидает,что сценарии завершения будут выводить опцию,за которой последует описание,разделенное символом табуляции.</target>
        </trans-unit>
        <trans-unit id="d95f3955e4775af2ffe313a32a1e156b2312cd4e" translate="yes" xml:space="preserve">
          <source>Will remove the file 'cumbersome filename.txt', while</source>
          <target state="translated">Удалит файл 'громоздкий filename.txt',в то время как</target>
        </trans-unit>
        <trans-unit id="4044b3d5cb068502c25839df6244b97ef13bfd98" translate="yes" xml:space="preserve">
          <source>With &quot;-c&quot;, it clears the directory stack instead.</source>
          <target state="translated">С помощью &quot;-c&quot; он очищает стек каталогов.</target>
        </trans-unit>
        <trans-unit id="b3f596135ed991ca7f5a3bdc45b29b16283c1e4c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;CMD&lt;/code&gt; specified, the command line buffer is erased and replaced with the contents of &lt;code&gt;CMD&lt;/code&gt;.</source>
          <target state="translated">Если указан &lt;code&gt;CMD&lt;/code&gt; , буфер командной строки стирается и заменяется содержимым &lt;code&gt;CMD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a11523e7c7f53a50eb3f5c7145415a6eeb3a11" translate="yes" xml:space="preserve">
          <source>With both variable names and values provided, &lt;code&gt;set&lt;/code&gt; assigns the variable &lt;code&gt;VARIABLE_NAME&lt;/code&gt; the values &lt;code&gt;VALUES...&lt;/code&gt;.</source>
          <target state="translated">С обеих переменных имена и значения при условии, &lt;code&gt;set&lt;/code&gt; присваивает переменной &lt;code&gt;VARIABLE_NAME&lt;/code&gt; Значения &lt;code&gt;VALUES...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3a3bdf1969b9c7b04d35c628b64777d5949f26c" translate="yes" xml:space="preserve">
          <source>With no arguments, &lt;code&gt;status&lt;/code&gt; displays a summary of the current login and job control status of the shell.</source>
          <target state="translated">Без аргументов &lt;code&gt;status&lt;/code&gt; отображает сводку текущего входа в систему и состояния управления заданиями оболочки.</target>
        </trans-unit>
        <trans-unit id="ff0f6870a82d5cfaf6592bfe8160d96a5dcb7c33" translate="yes" xml:space="preserve">
          <source>With no options, &lt;code&gt;type&lt;/code&gt; indicates how each &lt;code&gt;NAME&lt;/code&gt; would be interpreted if used as a command name.</source>
          <target state="translated">Без параметров &lt;code&gt;type&lt;/code&gt; указывает, как каждое &lt;code&gt;NAME&lt;/code&gt; будет интерпретироваться, если оно используется в качестве имени команды.</target>
        </trans-unit>
        <trans-unit id="324faf3e252b5aa14d470f7a0e509c22b0211914" translate="yes" xml:space="preserve">
          <source>With no parameters, &lt;code&gt;commandline&lt;/code&gt; returns the current value of the command line.</source>
          <target state="translated">Без параметров &lt;code&gt;commandline&lt;/code&gt; возвращает текущее значение в командной строке.</target>
        </trans-unit>
        <trans-unit id="32e508ff64591c08b5059eaf16992b090526d942" translate="yes" xml:space="preserve">
          <source>With no parameters, the current file creation mode mask is printed as an octal number.</source>
          <target state="translated">При отсутствии параметров маска текущего режима создания файла распечатывается как восьмеричное число.</target>
        </trans-unit>
        <trans-unit id="550c07a797cef93c6dca0c250695a3ee3bc836c8" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--line&lt;/code&gt; option, &lt;code&gt;read&lt;/code&gt; reads a line of input from standard input into each provided variable, stopping when each variable has been filled. The line is not tokenized.</source>
          <target state="translated">С &lt;code&gt;--line&lt;/code&gt; опции &lt;code&gt;read&lt;/code&gt; читает строку ввода из стандартного ввода в каждую предоставленную переменную, останавливаясь , когда каждая переменная была заполнена. Линия не токенизирована.</target>
        </trans-unit>
        <trans-unit id="7eb04c1870bbf00dde53d943ea601f02f6aade6f" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;-s&lt;/code&gt; option, &lt;code&gt;command&lt;/code&gt; treats every argument as a separate command to look up and sets the exit status to 0 if any of the specified commands were found, or 1 if no commands could be found. Additionally passing a &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; option prevents any paths from being printed, like &lt;code&gt;type -q&lt;/code&gt;, for testing only the exit status.</source>
          <target state="translated">С &lt;code&gt;-s&lt;/code&gt; опции, &lt;code&gt;command&lt;/code&gt; рассматривает каждый аргумент как отдельную команду для просмотра и устанавливает статус выхода 0 , если какой - либо из указанных команд были найдены, или 1 , если ни одна из команд не может быть найдено. Кроме того, передача опции &lt;code&gt;-q&lt;/code&gt; или &lt;code&gt;--quiet&lt;/code&gt; предотвращает печать любых путей, например, &lt;code&gt;type -q&lt;/code&gt; , для проверки только статуса выхода.</target>
        </trans-unit>
        <trans-unit id="bc8e1321c10d803c389c5b4efea6741544b19b13" translate="yes" xml:space="preserve">
          <source>Without arguments, it exchanges the top two directories in the stack.</source>
          <target state="translated">Без аргументов,он обменивается двумя верхними каталогами в стеке.</target>
        </trans-unit>
        <trans-unit id="1afcecbf9280e75078efa249fd70e1ac68834d9a" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;--line&lt;/code&gt; option, &lt;code&gt;read&lt;/code&gt; reads a single line of input from standard input, breaks it into tokens, and then assigns one token to each variable specified in &lt;code&gt;VARIABLES&lt;/code&gt;. If there are more tokens than variables, the complete remainder is assigned to the last variable.</source>
          <target state="translated">Без &lt;code&gt;--line&lt;/code&gt; опции &lt;code&gt;read&lt;/code&gt; читает одну строку ввода со стандартного ввода, разбивает его на лексемы, а затем присваивает один маркер для каждой переменной , указанной в &lt;code&gt;VARIABLES&lt;/code&gt; . Если токенов больше, чем переменных, полный остаток присваивается последней переменной.</target>
        </trans-unit>
        <trans-unit id="81356a4d6a0a4a4ef7b6e1d572238cf1fdea2fd0" translate="yes" xml:space="preserve">
          <source>Writing your own completions</source>
          <target state="translated">Написание собственных завершений</target>
        </trans-unit>
        <trans-unit id="7683cbf9a7b5e61b6d059df3889d47cb3365f802" translate="yes" xml:space="preserve">
          <source>You can access individual elements with square brackets. Indexing starts at 1 from the beginning, and -1 from the end:</source>
          <target state="translated">Вы можете получить доступ к отдельным элементам с помощью квадратных скобок.Индексирование начинается с 1 с начала и -1 с конца:</target>
        </trans-unit>
        <trans-unit id="22411b5ee78ea15c18bd052b59931e2ba02abfc9" translate="yes" xml:space="preserve">
          <source>You can also access ranges of elements, known as &quot;slices:&quot;</source>
          <target state="translated">Вы также можете получить доступ к различным элементам,известным как &quot;ломтики:&quot;.</target>
        </trans-unit>
        <trans-unit id="183a967967d542440e171619570f33c53983ac70" translate="yes" xml:space="preserve">
          <source>You can also declare a local variable in a block:</source>
          <target state="translated">Вы также можете объявить локальную переменную в блоке:</target>
        </trans-unit>
        <trans-unit id="c6736676dcee399ddf959a5129dcc47bfa72a06e" translate="yes" xml:space="preserve">
          <source>You can also use the Web configuration tool, &lt;a href=&quot;commands#fish_config&quot;&gt;&lt;code&gt;fish_config&lt;/code&gt;&lt;/a&gt;, to preview and choose from a gallery of sample prompts.</source>
          <target state="translated">Вы также можете использовать инструмент веб-конфигурации &lt;a href=&quot;commands#fish_config&quot;&gt; &lt;code&gt;fish_config&lt;/code&gt; &lt;/a&gt; для предварительного просмотра и выбора из галереи примеров подсказок.</target>
        </trans-unit>
        <trans-unit id="bdd92db017317ccc2cf69c4b1d28391056cb80e8" translate="yes" xml:space="preserve">
          <source>You can append (or prepend) to a list by setting the list to itself, with some additional arguments. Here we append /usr/local/bin to $PATH:</source>
          <target state="translated">Вы можете добавлять (или предвосхищать)список,устанавливая его сам,с некоторыми дополнительными аргументами.Здесь мы добавляем /usr/local/bin к $PATH:</target>
        </trans-unit>
        <trans-unit id="1bb567fe25bb6a2caba3279e69807e978438ad28" translate="yes" xml:space="preserve">
          <source>You can change &lt;code&gt;fish_history&lt;/code&gt; at any time (by using &lt;code&gt;set -x fish_history &quot;session_name&quot;&lt;/code&gt;) and it will take effect right away. If you set it to &lt;code&gt;&quot;default&quot;&lt;/code&gt;, it will use the default session name (which is &lt;code&gt;&quot;fish&quot;&lt;/code&gt;).</source>
          <target state="translated">Вы можете изменить &lt;code&gt;fish_history&lt;/code&gt; в любое время (используя &lt;code&gt;set -x fish_history &quot;session_name&quot;&lt;/code&gt; ), и это сразу же вступит в силу. Если вы установите для него значение &lt;code&gt;&quot;default&quot;&lt;/code&gt; , он будет использовать имя сеанса по умолчанию (то есть &lt;code&gt;&quot;fish&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="271d995eee26c277a042d3d479fbc5c44abb9d62" translate="yes" xml:space="preserve">
          <source>You can change these key bindings using the &lt;a href=&quot;commands#bind&quot;&gt;bind&lt;/a&gt; builtin command.</source>
          <target state="translated">Вы можете изменить эти привязки клавиш с помощью встроенной команды &lt;a href=&quot;commands#bind&quot;&gt;bind&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fbf59159cacd6194c5d1afee388fe6f9b2deba5" translate="yes" xml:space="preserve">
          <source>You can choose among some sample prompts by running &lt;code&gt;fish_config prompt&lt;/code&gt;. &lt;code&gt;fish&lt;/code&gt; also supports RPROMPT through &lt;code&gt;fish_right_prompt&lt;/code&gt;.</source>
          <target state="translated">Вы можете выбрать один из примеров подсказок, запустив &lt;code&gt;fish_config prompt&lt;/code&gt; . &lt;code&gt;fish&lt;/code&gt; также поддерживает RPROMPT через &lt;code&gt;fish_right_prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29e07248f927a66e3445195c42cee5dad321cbe4" translate="yes" xml:space="preserve">
          <source>You can create abbreviations interactively and they will be visible to other fish sessions if you use the &lt;code&gt;-U&lt;/code&gt; or &lt;code&gt;--universal&lt;/code&gt; flag or don't explicitly specify the scope and the abbreviation isn't already defined with global scope. If you want it to be visible only to the current shell use the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; flag.</source>
          <target state="translated">Вы можете создавать сокращения в интерактивном режиме, и они будут видны другим сеансам &lt;code&gt;--universal&lt;/code&gt; если вы используете флаг &lt;code&gt;-U&lt;/code&gt; или --universal или не указываете явно область видимости, а сокращение еще не определено с глобальной областью. Если вы хотите, чтобы он был виден только текущей оболочке, используйте флаг &lt;code&gt;-g&lt;/code&gt; или &lt;code&gt;--global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6e4c148ce6b5b609986d145a9a7da7ea9b88d15" translate="yes" xml:space="preserve">
          <source>You can define your own prompt:</source>
          <target state="translated">Вы можете определить свою собственную подсказку:</target>
        </trans-unit>
        <trans-unit id="f61c13e82446efa061ca7d17091f411ee83d8761" translate="yes" xml:space="preserve">
          <source>You can do so directly in &lt;code&gt;config.fish&lt;/code&gt;, like you might do in other shells with &lt;code&gt;.profile&lt;/code&gt;. See &lt;a href=&quot;#path_example&quot;&gt;this example&lt;/a&gt;.</source>
          <target state="translated">Вы можете сделать это прямо в &lt;code&gt;config.fish&lt;/code&gt; , как и в других оболочках с &lt;code&gt;.profile&lt;/code&gt; . См. &lt;a href=&quot;#path_example&quot;&gt;Этот пример&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="70c6c6dd6e2cc9d671b6c22ccdb9354bc3fcc555" translate="yes" xml:space="preserve">
          <source>You can erase a variable with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--erase&lt;/code&gt;</source>
          <target state="translated">Вы можете стереть переменную с помощью &lt;code&gt;-e&lt;/code&gt; или &lt;code&gt;--erase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bad3c32a8d2a38fb8952af3582045099d1f7782" translate="yes" xml:space="preserve">
          <source>You can include a literal space in an argument with a backslash, or by using single or double quotes:</source>
          <target state="translated">Вы можете включить буквальное пространство в аргумент с обратным слешем,или используя одинарные или двойные кавычки:</target>
        </trans-unit>
        <trans-unit id="cf2d7abc4fc8709fbd1e843b233396517d8ddaca" translate="yes" xml:space="preserve">
          <source>You can include multiple wildcards:</source>
          <target state="translated">Вы можете включить несколько спецсимволов:</target>
        </trans-unit>
        <trans-unit id="f83e4dd668d0923f31b885de0832e79602a1616d" translate="yes" xml:space="preserve">
          <source>You can iterate over a list (or a slice) with a for loop:</source>
          <target state="translated">Вы можете выполнить итерацию по списку (или фрагменту)с петлей for:</target>
        </trans-unit>
        <trans-unit id="582ba3e59d153a759cfa8931cfe3daa07df07cb8" translate="yes" xml:space="preserve">
          <source>You can list the names of all functions with the &lt;code&gt;functions&lt;/code&gt; keyword (note the plural!). &lt;code&gt;fish&lt;/code&gt; starts out with a number of functions:</source>
          <target state="translated">Вы можете перечислить имена всех функций с помощью ключевого слова &lt;code&gt;functions&lt;/code&gt; (обратите внимание на множественное число!). &lt;code&gt;fish&lt;/code&gt; начинается с ряда функций:</target>
        </trans-unit>
        <trans-unit id="cdbfa536e96ce4c5031503e10bf462df7b697afe" translate="yes" xml:space="preserve">
          <source>You can only specify one subcommand per invocation even if you use the flag form of the subcommand.</source>
          <target state="translated">Вы можете указать только одну подкоманду за вызов,даже если используете форму флага подкоманды.</target>
        </trans-unit>
        <trans-unit id="32cbb15c775d0a5c4bd4e986a03e5ca4d359b068" translate="yes" xml:space="preserve">
          <source>You can pipe between commands with the usual vertical bar:</source>
          <target state="translated">С помощью обычной вертикальной полосы вы можете соединять команды между собой:</target>
        </trans-unit>
        <trans-unit id="9d42fab7275c3711f78f4cc0e17430682558b418" translate="yes" xml:space="preserve">
          <source>You can see the current list of features via &lt;code&gt;status features&lt;/code&gt;:</source>
          <target state="translated">Вы можете просмотреть текущий список функций с помощью &lt;code&gt;status features&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d372da7b7b5d10683d41167afee54d800f912536" translate="yes" xml:space="preserve">
          <source>You can see the source for any function by passing its name to &lt;code&gt;functions&lt;/code&gt;:</source>
          <target state="translated">Вы можете увидеть источник любой функции, передав ее имя &lt;code&gt;functions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="119c7a997d5bdc2b60e626a0ba66e37ce06fb4d1" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;fish_history&lt;/code&gt; variable to another name for the current shell session. The default value (when the variable is unset) is &lt;code&gt;fish&lt;/code&gt; which corresponds to &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt;. If you set it to e.g. &lt;code&gt;fun&lt;/code&gt;, the history would be written to &lt;code&gt;$XDG_DATA_HOME/fish/fun_history&lt;/code&gt;. An empty string means history will not be stored at all. This is similar to the private session features in web browsers.</source>
          <target state="translated">Вы можете установить для переменной &lt;code&gt;fish_history&lt;/code&gt; другое имя для текущего сеанса оболочки. Значение по умолчанию (когда переменная не задана) - &lt;code&gt;fish&lt;/code&gt; , что соответствует &lt;code&gt;$XDG_DATA_HOME/fish/fish_history&lt;/code&gt; . Если вы установите, например, &lt;code&gt;fun&lt;/code&gt; , история будет записана в &lt;code&gt;$XDG_DATA_HOME/fish/fun_history&lt;/code&gt; . Пустая строка означает, что история не будет храниться вообще. Это похоже на функции частного сеанса в веб-браузерах.</target>
        </trans-unit>
        <trans-unit id="805a6b59b4757ac95f6f000c9c60c72ef172664e" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; for complex conditions. Even more complex control can be achieved with &lt;code&gt;while true&lt;/code&gt; containing a &lt;a href=&quot;#break&quot;&gt;break&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; для сложных условий. Еще более сложное управление может быть достигнуто с помощью &lt;code&gt;while true&lt;/code&gt; , содержащего &lt;a href=&quot;#break&quot;&gt;паузу&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36becbc0de8c6768b79b53bcf652c0ec7f0d05ab" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#and&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#or&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt; in the condition. See the second example below.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;#and&quot;&gt; &lt;code&gt;and&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#or&quot;&gt; &lt;code&gt;or&lt;/code&gt; &lt;/a&gt; в условии. См. Второй пример ниже.</target>
        </trans-unit>
        <trans-unit id="a29442c2c0cd9017469875929db91ad4d3e135db" translate="yes" xml:space="preserve">
          <source>You can use the following commands for this:</source>
          <target state="translated">Для этого можно использовать следующие команды:</target>
        </trans-unit>
        <trans-unit id="ae2c831ec8a49110729d78b946cea71b43a00858" translate="yes" xml:space="preserve">
          <source>You cannot create an alias to a function with the same name. Note that spaces need to be escaped in the call to &lt;code&gt;alias&lt;/code&gt; just like at the command line, &lt;em&gt;even inside quoted parts&lt;/em&gt;.</source>
          <target state="translated">Вы не можете создать псевдоним для функции с тем же именем. Обратите внимание, что при вызове &lt;code&gt;alias&lt;/code&gt; необходимо экранировать пробелы, как и в командной строке, &lt;em&gt;даже внутри цитируемых частей&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ccdace8ac9f08512755f925735f08580088b949a" translate="yes" xml:space="preserve">
          <source>You don't need to use &lt;code&gt;--&lt;/code&gt; before the expression even if it begins with a minus sign which might otherwise be interpreted as an invalid option. If you do insert &lt;code&gt;--&lt;/code&gt; before the expression it will cause option scanning to stop just like for every other command and it won't be part of the expression.</source>
          <target state="translated">Вам не нужно использовать &lt;code&gt;--&lt;/code&gt; перед выражением, даже если оно начинается со знака минус, который в противном случае мог бы быть интерпретирован как недопустимый параметр. Если вы вставите &lt;code&gt;--&lt;/code&gt; перед выражением, это приведет к остановке сканирования опций, как и для любой другой команды, и это не будет частью выражения.</target>
        </trans-unit>
        <trans-unit id="dff1182c8c84fa78c31ad7304aa236d391621f4d" translate="yes" xml:space="preserve">
          <source>You may be interested in the &lt;a href=&quot;commands#cdh&quot;&gt;&lt;code&gt;cdh&lt;/code&gt;&lt;/a&gt; command which provides a more intuitive way to navigate to recently visited directories.</source>
          <target state="translated">Возможно, вас заинтересует команда &lt;a href=&quot;commands#cdh&quot;&gt; &lt;code&gt;cdh&lt;/code&gt; ,&lt;/a&gt; которая обеспечивает более интуитивно понятный способ перехода к недавно посещенным каталогам.</target>
        </trans-unit>
        <trans-unit id="f19456ce739912cdbaadf68c5288fc6b883036c4" translate="yes" xml:space="preserve">
          <source>You may need to adjust the above path to e.g. &lt;code&gt;/usr/bin/fish&lt;/code&gt;. Use the command &lt;code&gt;which fish&lt;/code&gt; if you are unsure of where fish is installed.</source>
          <target state="translated">Возможно, вам придется изменить указанный выше путь, например, &lt;code&gt;/usr/bin/fish&lt;/code&gt; . Используйте команду &lt;code&gt;which fish&lt;/code&gt; , если вы не знаете, где установлена ​​рыба.</target>
        </trans-unit>
        <trans-unit id="f60f3dbd8379e7020fda94ce83302c2e10232183" translate="yes" xml:space="preserve">
          <source>You should not assume that only five lines will be written since we may add additional information to the output in the future.</source>
          <target state="translated">Не стоит предполагать,что будет написано только пять строк,так как в будущем мы можем добавить дополнительную информацию в выходные данные.</target>
        </trans-unit>
        <trans-unit id="d00cc0aeee9d747695090dc15483badfdd7bb562" translate="yes" xml:space="preserve">
          <source>You should not consider &lt;code&gt;RANDOM&lt;/code&gt; cryptographically secure, or even statistically accurate.</source>
          <target state="translated">Вы не должны считать &lt;code&gt;RANDOM&lt;/code&gt; криптографически безопасным или даже статистически точным.</target>
        </trans-unit>
        <trans-unit id="099d04689a14254d5c264e92a8949102945a2d8c" translate="yes" xml:space="preserve">
          <source>You will be greeted by the standard fish prompt, which means you are all set up and can start using fish:</source>
          <target state="translated">Вы будете встречены стандартной подсказкой &quot;Рыба&quot;,что означает,что вы все настроены и можете начать использовать рыбу:</target>
        </trans-unit>
        <trans-unit id="daf44230d29581bbad655cd6db1bfaf7030ab520" translate="yes" xml:space="preserve">
          <source>You would then use it in place of &lt;code&gt;**&lt;/code&gt; like this, &lt;code&gt;my_prog (ff)&lt;/code&gt;, to pass only regular files in or below $PWD to &lt;code&gt;my_prog&lt;/code&gt;.</source>
          <target state="translated">Затем вы могли бы использовать его вместо &lt;code&gt;**&lt;/code&gt; вроде этого, &lt;code&gt;my_prog (ff)&lt;/code&gt; , чтобы передавать в &lt;code&gt;my_prog&lt;/code&gt; только обычные файлы в $ PWD или ниже .</target>
        </trans-unit>
        <trans-unit id="1c67de04c7033796c6c74cd4dd03c739078b5757" translate="yes" xml:space="preserve">
          <source>You'll quickly notice that &lt;code&gt;fish&lt;/code&gt; performs syntax highlighting as you type. Invalid commands are colored red by default:</source>
          <target state="translated">Вы быстро заметите, что &lt;code&gt;fish&lt;/code&gt; выделяет синтаксис при вводе текста. По умолчанию недопустимые команды окрашены в красный цвет:</target>
        </trans-unit>
        <trans-unit id="0f1904a8c07ac4a095aa5e3b5df39a737f0d2b78" translate="yes" xml:space="preserve">
          <source>Zero is considered success, and non-zero is failure.</source>
          <target state="translated">Ноль считается успехом,а ненулевой-провалом.</target>
        </trans-unit>
        <trans-unit id="b9bce8bc7cbd4cfc74af295dc63b50f294e0fb27" translate="yes" xml:space="preserve">
          <source>abbr</source>
          <target state="translated">abbr</target>
        </trans-unit>
        <trans-unit id="10c64ce9ed7a8c30b0b458cd0cea2f41104ed020" translate="yes" xml:space="preserve">
          <source>abbr - manage fish abbreviations</source>
          <target state="translated">аббревиатура-управлять рыбными сокращениями</target>
        </trans-unit>
        <trans-unit id="682cee3cbd526832d0e8acb7535f6a975ddc96ee" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; to &lt;code&gt;/etc/shells&lt;/code&gt;</source>
          <target state="translated">добавить &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; в &lt;code&gt;/etc/shells&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="42a06677b30252b0d37eaddcaf33c622b85d08b4" translate="yes" xml:space="preserve">
          <source>alias - create a function</source>
          <target state="translated">псевдоним-создать функцию</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="4ed9a78158a5eed2a098e3c46a71c9215bfe4153" translate="yes" xml:space="preserve">
          <source>and - conditionally execute a command</source>
          <target state="translated">и-условно выполнить команду</target>
        </trans-unit>
        <trans-unit id="e750ee7c231477c66be61075d1aafe532a03970f" translate="yes" xml:space="preserve">
          <source>argparse</source>
          <target state="translated">argparse</target>
        </trans-unit>
        <trans-unit id="b3ef1b3ad484c3f1815d35a2d7273ba16d3fc004" translate="yes" xml:space="preserve">
          <source>argparse - parse options passed to a fish script or function</source>
          <target state="translated">argparse-опции разбора,переданные рыбьему скрипту или функции</target>
        </trans-unit>
        <trans-unit id="8cbd0a74c6efdb39943b290bb82c9d6b2a6ee5a6" translate="yes" xml:space="preserve">
          <source>begin</source>
          <target state="translated">begin</target>
        </trans-unit>
        <trans-unit id="d849f3a2774d5c3d8a5b753d01c1b98a89678580" translate="yes" xml:space="preserve">
          <source>begin - start a new block of code</source>
          <target state="translated">начать-запустить новый блок кода</target>
        </trans-unit>
        <trans-unit id="80f87c8847da6c872ce2fc9fec0a98a73ebc578d" translate="yes" xml:space="preserve">
          <source>bg</source>
          <target state="translated">bg</target>
        </trans-unit>
        <trans-unit id="eae83d584c6eeb26f5e657e85aaec8ab661a533a" translate="yes" xml:space="preserve">
          <source>bg - send jobs to background</source>
          <target state="translated">bg-отправлять задания в фоновом режиме</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="4d74207ae06bd7de23e2fc590a893d97bc45179b" translate="yes" xml:space="preserve">
          <source>bind - handle fish key bindings</source>
          <target state="translated">переплёт-ручка переплётов для рыбных ключей</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="eaad10d066a35f607308cf97548f180f4b9b872e" translate="yes" xml:space="preserve">
          <source>block - temporarily block delivery of events</source>
          <target state="translated">блок-временно блокировать доставку событий</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="175a258d07e2daaf5e3b38a9da4f646e868f7dd3" translate="yes" xml:space="preserve">
          <source>break - stop the current inner loop</source>
          <target state="translated">перерыв-остановка внутреннего контура тока</target>
        </trans-unit>
        <trans-unit id="5c0a31c48cda57c40dc61b785110d76593834ffd" translate="yes" xml:space="preserve">
          <source>breakpoint</source>
          <target state="translated">breakpoint</target>
        </trans-unit>
        <trans-unit id="2922ddae1fa1032ce7131127668d51bf87c71f7e" translate="yes" xml:space="preserve">
          <source>breakpoint - Launch debug mode</source>
          <target state="translated">точка останова-запуск отладочного режима</target>
        </trans-unit>
        <trans-unit id="748a336cc88c03ccb07ed5f5073d18624731b8b5" translate="yes" xml:space="preserve">
          <source>builtin</source>
          <target state="translated">builtin</target>
        </trans-unit>
        <trans-unit id="fa7c75bcd8e77b2860336c73b4baf210585bbf7f" translate="yes" xml:space="preserve">
          <source>builtin - run a builtin command</source>
          <target state="translated">построить-запустить построенную команду</target>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">case</target>
        </trans-unit>
        <trans-unit id="ecbc5351327db65d354a1a7d358353471d69609a" translate="yes" xml:space="preserve">
          <source>case - conditionally execute a block of commands</source>
          <target state="translated">случай-условно выполнить блок команд</target>
        </trans-unit>
        <trans-unit id="034778198a045c1ed80be271cdd029b76874f6fc" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>
        </trans-unit>
        <trans-unit id="fb525966ad485c5f8afa455838828ee40af068d5" translate="yes" xml:space="preserve">
          <source>cd - change directory</source>
          <target state="translated">cd-каталог изменений</target>
        </trans-unit>
        <trans-unit id="2aba119bde64723a0961a18ff7adcf76a9d24d8e" translate="yes" xml:space="preserve">
          <source>cdh</source>
          <target state="translated">cdh</target>
        </trans-unit>
        <trans-unit id="1be63f271a472b0d15f170811e4caf9972df88bb" translate="yes" xml:space="preserve">
          <source>cdh - change to a recently visited directory</source>
          <target state="translated">cdh-переход в недавно посещенный каталог</target>
        </trans-unit>
        <trans-unit id="0f8e267ee0d75f9ceaa9ed7d8f182c646d73ba65" translate="yes" xml:space="preserve">
          <source>change your default shell with &lt;code&gt;chsh -s&lt;/code&gt; to &lt;code&gt;/usr/local/bin/fish&lt;/code&gt;</source>
          <target state="translated">измените оболочку по умолчанию с помощью &lt;code&gt;chsh -s&lt;/code&gt; на &lt;code&gt;/usr/local/bin/fish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="919a6f5c6816036eaffc9cdb1996a015acf915b7" translate="yes" xml:space="preserve">
          <source>command - run a program</source>
          <target state="translated">команда-запустить программу</target>
        </trans-unit>
        <trans-unit id="92df95e63882bc424c741ba3025a247583b8fe73" translate="yes" xml:space="preserve">
          <source>commandline</source>
          <target state="translated">commandline</target>
        </trans-unit>
        <trans-unit id="bcf389e72583580fd4176da0b6e9a5409c5718c2" translate="yes" xml:space="preserve">
          <source>commandline - set or get the current command line buffer</source>
          <target state="translated">командная строка-установить или получить буфер текущей командной строки</target>
        </trans-unit>
        <trans-unit id="0737c22d3bfae812339732d14d8c7dbd6dc4e09c" translate="yes" xml:space="preserve">
          <source>complete</source>
          <target state="translated">complete</target>
        </trans-unit>
        <trans-unit id="b1b90f2b3d099b292abc0be14142c4ee0c55e03b" translate="yes" xml:space="preserve">
          <source>complete - edit command specific tab-completions</source>
          <target state="translated">полный-редактирование специфических для команд табуляции-заполнения</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="904d39bd3ceac4decbc721c45054ed1c4b2c7fdb" translate="yes" xml:space="preserve">
          <source>contains - test if a word is present in a list</source>
          <target state="translated">содержит-проверка наличия слова в списке</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="3dcfedcccb8d23e7c6644e8aaa4e93528f238e86" translate="yes" xml:space="preserve">
          <source>continue - skip the remainder of the current iteration of the current inner loop</source>
          <target state="translated">продолжить-пропустить оставшуюся часть текущей итерации текущего внутреннего цикла.</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="f9695c7d17d44b126e144bc1e4fd9b6da6439c0b" translate="yes" xml:space="preserve">
          <source>count - count the number of elements of an array</source>
          <target state="translated">счёт-подсчитать количество элементов массива</target>
        </trans-unit>
        <trans-unit id="3e96454870cb43583623cd6fd2ede60817e93fe7" translate="yes" xml:space="preserve">
          <source>dirh</source>
          <target state="translated">dirh</target>
        </trans-unit>
        <trans-unit id="0c8c1d4815753a4a62148f6267504e711947a5a6" translate="yes" xml:space="preserve">
          <source>dirh - print directory history</source>
          <target state="translated">дирх-история каталога печати</target>
        </trans-unit>
        <trans-unit id="4d47d2db541c41663c8c0bc2b1795aa88c209d4d" translate="yes" xml:space="preserve">
          <source>dirs</source>
          <target state="translated">dirs</target>
        </trans-unit>
        <trans-unit id="d78b6ac49770a83c7c282f2a24eb1a12e41b5ef0" translate="yes" xml:space="preserve">
          <source>dirs - print directory stack</source>
          <target state="translated">dirs-стек каталогов печати</target>
        </trans-unit>
        <trans-unit id="9b66695fe2c105488ed57178ad21457b4a8f4d6d" translate="yes" xml:space="preserve">
          <source>disown</source>
          <target state="translated">disown</target>
        </trans-unit>
        <trans-unit id="58603ac8c3e3cdf452a31e52281bae95d4d75e55" translate="yes" xml:space="preserve">
          <source>disown - remove a process from the list of jobs</source>
          <target state="translated">Отключить-удалить процесс из списка заданий</target>
        </trans-unit>
        <trans-unit id="b2d21e771d9f86865c5eff193663574dd1796c8f" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>
        </trans-unit>
        <trans-unit id="3da22d7a242ac6222e2c07ce546b9e4c6dd38dd1" translate="yes" xml:space="preserve">
          <source>echo - display a line of text</source>
          <target state="translated">эхо-отображение строки текста</target>
        </trans-unit>
        <trans-unit id="ae050f5b7fb8d383d62139276081853b47e7a03e" translate="yes" xml:space="preserve">
          <source>else</source>
          <target state="translated">else</target>
        </trans-unit>
        <trans-unit id="b25854c62e2574da9e59aea193dfc09880feb717" translate="yes" xml:space="preserve">
          <source>else - execute command if a condition is not met</source>
          <target state="translated">else-выполнить команду,если условие не выполнено.</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">emit</target>
        </trans-unit>
        <trans-unit id="bf4da1905dbefff0b501f9e43f751404b18c712b" translate="yes" xml:space="preserve">
          <source>emit - Emit a generic event</source>
          <target state="translated">испускать-Испускать общее событие</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="786c7d3478f2ca103089368c16db1f80f0f9c7cb" translate="yes" xml:space="preserve">
          <source>end - end a block of commands.</source>
          <target state="translated">конец-конец блока команд.</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="20a23908f3b688d4985f1907e61de8afef1f3a09" translate="yes" xml:space="preserve">
          <source>eval - evaluate the specified commands</source>
          <target state="translated">оценить-оценить указанные команды</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="766cd545cfc1fa64a7d4796ba64c27dc06bebbfc" translate="yes" xml:space="preserve">
          <source>exec - execute command in current process</source>
          <target state="translated">выполнить-выполнить команду в текущем процессе</target>
        </trans-unit>
        <trans-unit id="de3ac21778e51de199438300e1a9f816c618d33a" translate="yes" xml:space="preserve">
          <source>exit</source>
          <target state="translated">exit</target>
        </trans-unit>
        <trans-unit id="471719c1d7f23f2fb831651b4dd0b2d996e8d915" translate="yes" xml:space="preserve">
          <source>exit - exit the shell</source>
          <target state="translated">выход-выход из оболочки</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="6f9d12a083b81d8fbe0b94c63c69b42fb349ddbb" translate="yes" xml:space="preserve">
          <source>false - return an unsuccessful result</source>
          <target state="translated">ложь-вернуть неудачный результат</target>
        </trans-unit>
        <trans-unit id="72f77e84ba0149b2af1051f1318128dccf60ab60" translate="yes" xml:space="preserve">
          <source>fg</source>
          <target state="translated">fg</target>
        </trans-unit>
        <trans-unit id="d57e75549526546c15d5c9fb8e07df72a8c58c81" translate="yes" xml:space="preserve">
          <source>fg - bring job to foreground</source>
          <target state="translated">трюк-выдвигать на первый план работу</target>
        </trans-unit>
        <trans-unit id="64875fcccaac069fcb3e0e201e7d5b9166641608" translate="yes" xml:space="preserve">
          <source>fish</source>
          <target state="translated">fish</target>
        </trans-unit>
        <trans-unit id="72e0e125205009a2096ed8c57d1f27ec4b75c74b" translate="yes" xml:space="preserve">
          <source>fish - the friendly interactive shell</source>
          <target state="translated">рыба-дружелюбная интерактивная оболочка</target>
        </trans-unit>
        <trans-unit id="55daf0fb67b0105e5fee42d2b43a9981fcc9b191" translate="yes" xml:space="preserve">
          <source>fish also supports &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;. The first two are job modifiers and have lower precedence. Example usage:</source>
          <target state="translated">рыба также поддерживает &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , and &lt;code&gt;not&lt;/code&gt; . Первые два являются модификаторами задания и имеют более низкий приоритет. Пример использования:</target>
        </trans-unit>
        <trans-unit id="d0b6a9d36699331ac1f0bb6a1d6c28f0fee1e9d4" translate="yes" xml:space="preserve">
          <source>fish suggests commands as you type, based on command history, completions, and valid file paths. As you type commands, you will see a suggestion offered after the cursor, in a muted gray color (which can be changed with the &lt;code&gt;fish_color_autosuggestion&lt;/code&gt; variable).</source>
          <target state="translated">Fish предлагает команды по мере ввода на основе истории команд, завершений и допустимых путей к файлам. По мере ввода команд вы увидите предложение, предлагаемое после курсора, в приглушенном сером цвете (который можно изменить с &lt;code&gt;fish_color_autosuggestion&lt;/code&gt; переменной fish_color_autosuggestion ).</target>
        </trans-unit>
        <trans-unit id="68f36d0bf0f877357b61f16b465f75cb1a85b6d8" translate="yes" xml:space="preserve">
          <source>fish supports launching in private mode via &lt;code&gt;fish --private&lt;/code&gt; (or &lt;code&gt;fish -P&lt;/code&gt; for short). In private mode, old history is not available and any interactive commands you execute will not be appended to the global history file, making it useful both for avoiding inadvertently leaking personal information (e.g. for screencasts) and when dealing with sensitive information to prevent it being persisted to disk. You can query the global variable &lt;code&gt;fish_private_mode&lt;/code&gt; (&lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt;) if you would like to respect the user's wish for privacy and alter the behavior of your own fish scripts.</source>
          <target state="translated">fish поддерживает запуск в приватном режиме через &lt;code&gt;fish --private&lt;/code&gt; (или сокращенно &lt;code&gt;fish -P&lt;/code&gt; ). В частном режиме старая история недоступна, и любые выполняемые вами интерактивные команды не будут добавлены в файл глобальной истории, что делает его полезным как для предотвращения непреднамеренной утечки личной информации (например, для скринкастов), так и при работе с конфиденциальной информацией, чтобы предотвратить ее сохранились на диске. Вы можете запросить глобальную переменную &lt;code&gt;fish_private_mode&lt;/code&gt; ( &lt;code&gt;if set -q fish_private_mode ...&lt;/code&gt; ), если вы хотите уважать желание пользователя о конфиденциальности и изменить поведение ваших собственных скриптов для рыбалки.</target>
        </trans-unit>
        <trans-unit id="0c4f6d7aed742643b6fbdc12202fe3db52010252" translate="yes" xml:space="preserve">
          <source>fish supports the familiar &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; to combine commands, and &lt;code&gt;!&lt;/code&gt; to negate them:</source>
          <target state="translated">fish поддерживает знакомые &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; и &lt;code&gt;||&lt;/code&gt; комбинировать команды, и &lt;code&gt;!&lt;/code&gt; чтобы отрицать их:</target>
        </trans-unit>
        <trans-unit id="18585084ed30bb889b3339262219e49ab2ae44bd" translate="yes" xml:space="preserve">
          <source>fish tutorial</source>
          <target state="translated">учебное пособие по рыбной ловле</target>
        </trans-unit>
        <trans-unit id="55dedfb95373873760b0ed9625c82cb35531172a" translate="yes" xml:space="preserve">
          <source>fish waits for a period after receiving the escape character, to determine whether it is standalone or part of an escape sequence. While waiting, additional key presses make the escape key behave as a meta key. If no other key presses come in, it is handled as a standalone escape. The waiting period is set to 300 milliseconds (0.3 seconds) in the default key bindings and 10 milliseconds in the vi key bindings. It can be configured by setting the &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; variable to a value between 10 and 5000 ms. It is recommended that this be a universal variable that you set once from an interactive session.</source>
          <target state="translated">Fish ожидает в течение некоторого времени после получения escape-символа, чтобы определить, является ли он автономным или частью escape-последовательности. Во время ожидания дополнительные нажатия клавиш заставляют escape-клавишу вести себя как мета-клавишу. Если никакие другие нажатия клавиш не поступают, это обрабатывается как автономный выход. Период ожидания установлен в 300 миллисекунд (0,3 секунды) в привязках клавиш по умолчанию и 10 миллисекундах в привязках клавиш vi. Его можно настроить, установив для переменной &lt;code&gt;fish_escape_delay_ms&lt;/code&gt; значение от 10 до 5000 мс. Рекомендуется, чтобы это была универсальная переменная, которую вы устанавливаете один раз в интерактивном сеансе.</target>
        </trans-unit>
        <trans-unit id="baba6f248a72657be16047fe4da7199bc44ea8e3" translate="yes" xml:space="preserve">
          <source>fish_breakpoint_prompt</source>
          <target state="translated">fish_breakpoint_prompt</target>
        </trans-unit>
        <trans-unit id="d7bd245d8c242e03fae1578420c74d8093b0ee04" translate="yes" xml:space="preserve">
          <source>fish_breakpoint_prompt - define the appearance of the command line prompt when in the context of a `breakpoint` command</source>
          <target state="translated">fish_breakpoint_prompt-определяет внешний вид интерпретатора командной строки,когда в контексте команды `Bbreakpoint#</target>
        </trans-unit>
        <trans-unit id="5a3fc1d157b0191f6866ceecc3630a982089cde4" translate="yes" xml:space="preserve">
          <source>fish_config</source>
          <target state="translated">fish_config</target>
        </trans-unit>
        <trans-unit id="183a6fdb6a00d86295de833100112576b1cb4834" translate="yes" xml:space="preserve">
          <source>fish_config - start the web-based configuration interface</source>
          <target state="translated">fish_config-запустить веб-интерфейс конфигурации</target>
        </trans-unit>
        <trans-unit id="2397e0dc3855f2a5c3c894e107875e26a08a4480" translate="yes" xml:space="preserve">
          <source>fish_indent</source>
          <target state="translated">fish_indent</target>
        </trans-unit>
        <trans-unit id="c6e19f4ee30f4e23e4160409b9be9c8d16942cd4" translate="yes" xml:space="preserve">
          <source>fish_indent - indenter and prettifier</source>
          <target state="translated">fish_indent-индентор и выпрямитель</target>
        </trans-unit>
        <trans-unit id="127fb90e55ea67e053d705088a841052da6eef7c" translate="yes" xml:space="preserve">
          <source>fish_key_reader</source>
          <target state="translated">fish_key_reader</target>
        </trans-unit>
        <trans-unit id="69a0ebb11cb1a759ede45515c0024c4ec8c9ee18" translate="yes" xml:space="preserve">
          <source>fish_key_reader - explore what characters keyboard keys send</source>
          <target state="translated">fish_key_reader-исследуйте,какие символы посылают клавиатурные клавиши.</target>
        </trans-unit>
        <trans-unit id="b07df081e3eda23a685e0d24569437ba4ab4a6ff" translate="yes" xml:space="preserve">
          <source>fish_mode_prompt</source>
          <target state="translated">fish_mode_prompt</target>
        </trans-unit>
        <trans-unit id="753b48a0cc344eee0593915eb34429a7626e167e" translate="yes" xml:space="preserve">
          <source>fish_mode_prompt - define the appearance of the mode indicator</source>
          <target state="translated">fish_mode_prompt-определить внешний вид индикатора режима</target>
        </trans-unit>
        <trans-unit id="3c9b15ad3294d2aa5aa52ac9e2632d2eae53e420" translate="yes" xml:space="preserve">
          <source>fish_opt</source>
          <target state="translated">fish_opt</target>
        </trans-unit>
        <trans-unit id="543365accaae619eee02dcae6dea132a363085b7" translate="yes" xml:space="preserve">
          <source>fish_opt - create an option spec for the argparse command</source>
          <target state="translated">fish_opt-создать спецификацию опции для команды argparse</target>
        </trans-unit>
        <trans-unit id="6501c27fb0858cd3f54b84ab4f9f296d0dda8c9c" translate="yes" xml:space="preserve">
          <source>fish_prompt</source>
          <target state="translated">fish_prompt</target>
        </trans-unit>
        <trans-unit id="cd788e8b2b186c68bc7b4e563896df245043a589" translate="yes" xml:space="preserve">
          <source>fish_prompt - define the appearance of the command line prompt</source>
          <target state="translated">fish_prompt-определить внешний вид интерпретатора командной строки</target>
        </trans-unit>
        <trans-unit id="f78d4c9641a64c769e933588d8994ca394327414" translate="yes" xml:space="preserve">
          <source>fish_right_prompt</source>
          <target state="translated">fish_right_prompt</target>
        </trans-unit>
        <trans-unit id="4f1afbb85b31538c97624a72a30d55414589b49a" translate="yes" xml:space="preserve">
          <source>fish_right_prompt - define the appearance of the right-side command line prompt</source>
          <target state="translated">fish_right_prompt-определить внешний вид правой интерпретатора командной строки</target>
        </trans-unit>
        <trans-unit id="8b339b0c658d3c4228467574152fa75f2375b32e" translate="yes" xml:space="preserve">
          <source>fish_update_completions</source>
          <target state="translated">fish_update_completions</target>
        </trans-unit>
        <trans-unit id="90c9f004ea4a216adfd9c72340b8112edb288283" translate="yes" xml:space="preserve">
          <source>fish_update_completions - Update completions using manual pages</source>
          <target state="translated">fish_update_compltions-Обновление завершений с помощью ручных страниц</target>
        </trans-unit>
        <trans-unit id="f76de474163a63c296945fcd9d696f36636c8aef" translate="yes" xml:space="preserve">
          <source>fish_vi_mode</source>
          <target state="translated">fish_vi_mode</target>
        </trans-unit>
        <trans-unit id="410186a970357c931e2a7dec30a37b5a1e74ebea" translate="yes" xml:space="preserve">
          <source>fish_vi_mode - Enable vi mode</source>
          <target state="translated">fish_vi_mode-Включить режим vi</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="6aa32fad737b7aa5ceaccf76038f5bbfb35631a8" translate="yes" xml:space="preserve">
          <source>for - perform a set of commands multiple times.</source>
          <target state="translated">для-выполнять набор команд несколько раз.</target>
        </trans-unit>
        <trans-unit id="c039c214c3b0d96340e4ef72f733eedd0388e42d" translate="yes" xml:space="preserve">
          <source>funced</source>
          <target state="translated">funced</target>
        </trans-unit>
        <trans-unit id="0816bc375ac09bd74efea8d7a85a93023e8ffa5a" translate="yes" xml:space="preserve">
          <source>funced - edit a function interactively</source>
          <target state="translated">funced-редактируйте функцию интерактивно</target>
        </trans-unit>
        <trans-unit id="3bc1aee64f9e2c4c5efada178ad6165cab6377cc" translate="yes" xml:space="preserve">
          <source>funcsave</source>
          <target state="translated">funcsave</target>
        </trans-unit>
        <trans-unit id="2f69307df7e91d4902cb35c04dd61609789e8b05" translate="yes" xml:space="preserve">
          <source>funcsave - save the definition of a function to the user's autoload directory</source>
          <target state="translated">funcsave-сохранить определение функции в пользовательский каталог автозагрузки</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="bf41a97c9825ae2e3550fdddcd8aaf42e45d7245" translate="yes" xml:space="preserve">
          <source>function - create a function</source>
          <target state="translated">функция-создать функцию</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="a2dd0c9d390ee256fa9d3c2d2857526a5930b073" translate="yes" xml:space="preserve">
          <source>functions - print or erase functions</source>
          <target state="translated">функции печати или стирания</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="90df5c81817176fc99bd4d5ed355b097e8ac84fe" translate="yes" xml:space="preserve">
          <source>help - display fish documentation</source>
          <target state="translated">справка-отображение документации по рыбам</target>
        </trans-unit>
        <trans-unit id="66f79d8a6327c82c9033e6d65ff03322a3766c87" translate="yes" xml:space="preserve">
          <source>history</source>
          <target state="translated">history</target>
        </trans-unit>
        <trans-unit id="9c54bcb9992fb9affc2aedd28a291f6b1a369e0b" translate="yes" xml:space="preserve">
          <source>history - Show and manipulate command history</source>
          <target state="translated">история-Показать и манипулировать историей команд</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="f95ea4c87a089d830126713a97723833a9fd76fc" translate="yes" xml:space="preserve">
          <source>if - conditionally execute a command</source>
          <target state="translated">если-условно выполнить команду</target>
        </trans-unit>
        <trans-unit id="24def2dc36d8c488f6dd73f146437207b25f618c" translate="yes" xml:space="preserve">
          <source>isatty</source>
          <target state="translated">isatty</target>
        </trans-unit>
        <trans-unit id="3cfe607d872677db1789d97ef106886f84f5899b" translate="yes" xml:space="preserve">
          <source>isatty - test if a file descriptor is a tty.</source>
          <target state="translated">isatty-проверить,является ли дескриптор файла tty.</target>
        </trans-unit>
        <trans-unit id="638dbc85cd3410c50689528013eccaae778361f3" translate="yes" xml:space="preserve">
          <source>it will print &lt;code&gt;xax xbx xcx&lt;/code&gt;.</source>
          <target state="translated">он напечатает &lt;code&gt;xax xbx xcx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6966922100bf006356af2b9098e6ba3b1c190226" translate="yes" xml:space="preserve">
          <source>jobs</source>
          <target state="translated">jobs</target>
        </trans-unit>
        <trans-unit id="2c0538a731bda1d0b48cf0b71c7f1eea39760d56" translate="yes" xml:space="preserve">
          <source>jobs - print currently running jobs</source>
          <target state="translated">задания-текущие задания на печать</target>
        </trans-unit>
        <trans-unit id="eab8b533a9af65bf25991bce5aab55764e3ca4e8" translate="yes" xml:space="preserve">
          <source>jobs accepts the following switches:</source>
          <target state="translated">задания принимают следующие переключатели:</target>
        </trans-unit>
        <trans-unit id="7a488390a939c4795cc1a801e51751d5f25d800d" translate="yes" xml:space="preserve">
          <source>math</source>
          <target state="translated">math</target>
        </trans-unit>
        <trans-unit id="ac55c69e1a4e4deadae82d7d2501bb6e8354689f" translate="yes" xml:space="preserve">
          <source>math - Perform mathematics calculations</source>
          <target state="translated">математика-Выполнять математические расчёты</target>
        </trans-unit>
        <trans-unit id="5788f5d9921db1d9d54ea779e091c82300b105e9" translate="yes" xml:space="preserve">
          <source>nextd</source>
          <target state="translated">nextd</target>
        </trans-unit>
        <trans-unit id="5962cd086d9c9b34c1fe8730983fbd9559aed0f5" translate="yes" xml:space="preserve">
          <source>nextd - move forward through directory history</source>
          <target state="translated">nextd-двигаться дальше по истории каталога</target>
        </trans-unit>
        <trans-unit id="d058f2cdd7781f829008a74cc23a43186eacb161" translate="yes" xml:space="preserve">
          <source>no output.</source>
          <target state="translated">нет выхода.</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
        <trans-unit id="4575a330b9abc396835c8ef87416bed7db17b511" translate="yes" xml:space="preserve">
          <source>not - negate the exit status of a job</source>
          <target state="translated">не-отрицать статус выхода с работы</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="199b395ad03deff5d4ae7fbee3ed860eb83c6145" translate="yes" xml:space="preserve">
          <source>open - open file in its default application</source>
          <target state="translated">открыть-открыть файл в его стандартном приложении</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="711125b2ab4f03f077b0f47796a68a231b18fde3" translate="yes" xml:space="preserve">
          <source>or - conditionally execute a command</source>
          <target state="translated">или-условно выполнить команду</target>
        </trans-unit>
        <trans-unit id="4a4fca309e453918d1fa9832f4ef19832f32f1de" translate="yes" xml:space="preserve">
          <source>or opted into globally for a user:</source>
          <target state="translated">или выбрали глобально для пользователя:</target>
        </trans-unit>
        <trans-unit id="bd053f79a6a0b97eca270388d4266f6cdc2e5d1f" translate="yes" xml:space="preserve">
          <source>popd</source>
          <target state="translated">popd</target>
        </trans-unit>
        <trans-unit id="c0ad7ae5d6dea353b86b7975b175fb7ec7a5b0d8" translate="yes" xml:space="preserve">
          <source>popd - move through directory stack</source>
          <target state="translated">всплывающее окно-перемещение по стеку каталогов</target>
        </trans-unit>
        <trans-unit id="501bed2ce7870bcc5b0594fe851ae7aafaa0d983" translate="yes" xml:space="preserve">
          <source>press &lt;code&gt;Ctrl-C&lt;/code&gt; twice, or</source>
          <target state="translated">дважды нажмите &lt;code&gt;Ctrl-C&lt;/code&gt; или</target>
        </trans-unit>
        <trans-unit id="7dc7f09beed59586cbda067c6eeb7b7166812ad2" translate="yes" xml:space="preserve">
          <source>press &lt;code&gt;Ctrl-D&lt;/code&gt; twice, or</source>
          <target state="translated">дважды нажмите &lt;code&gt;Ctrl-D&lt;/code&gt; или</target>
        </trans-unit>
        <trans-unit id="e291f27c814229dc2eb10fa92c9b8c4185958322" translate="yes" xml:space="preserve">
          <source>prevd</source>
          <target state="translated">prevd</target>
        </trans-unit>
        <trans-unit id="f7c05f49b7608d19659229d1610a7b144fd04131" translate="yes" xml:space="preserve">
          <source>prevd - move backward through directory history</source>
          <target state="translated">prevd-перемещение назад по истории каталогов</target>
        </trans-unit>
        <trans-unit id="df39b4caf493869772ff3a0f95cca6a9ae7934dc" translate="yes" xml:space="preserve">
          <source>printf</source>
          <target state="translated">printf</target>
        </trans-unit>
        <trans-unit id="3c6a47d2ffca0ad0d4a07143fcfbfd3c2bf900e7" translate="yes" xml:space="preserve">
          <source>printf - display text according to a format string</source>
          <target state="translated">printf-отображение текста в соответствии со строкой формата</target>
        </trans-unit>
        <trans-unit id="21999975d6629ee4bcf6c7777ee78ef2dde68352" translate="yes" xml:space="preserve">
          <source>printf also knows a number of backslash escapes:</source>
          <target state="translated">printf также знает о нескольких побегах с обратным слешем:</target>
        </trans-unit>
        <trans-unit id="f0e9a119bdd370e572983792f8da0fd600bbb244" translate="yes" xml:space="preserve">
          <source>printf formats the string FORMAT with ARGUMENT, and displays the result.</source>
          <target state="translated">printf форматирует строку FORMAT с ARGUMENT,и отображает результат.</target>
        </trans-unit>
        <trans-unit id="03b62a0fc91ac76f534c8506377fd0cd7094b326" translate="yes" xml:space="preserve">
          <source>prompt_pwd</source>
          <target state="translated">prompt_pwd</target>
        </trans-unit>
        <trans-unit id="379685f1a28ec5f5585e4ea14e8526590620679f" translate="yes" xml:space="preserve">
          <source>prompt_pwd - Print pwd suitable for prompt</source>
          <target state="translated">prompt_pwd-Печатать pwd,подходящий для запроса</target>
        </trans-unit>
        <trans-unit id="a140601076b214970f21dd77e03c7939cd93ecdc" translate="yes" xml:space="preserve">
          <source>prompt_pwd is a function to print the current working directory in a way suitable for prompts. It will replace the home directory with &quot;~&quot; and shorten every path component but the last to a default of one character.</source>
          <target state="translated">prompt_pwd-это функция для печати текущей рабочей директории способом,подходящим для подсказок.Она заменит домашний каталог на &quot;~&quot; и сократит каждый компонент пути,но последний до одного символа по умолчанию.</target>
        </trans-unit>
        <trans-unit id="9afd2538d3d4ffb696f4dcdd4ab6baadf04ff522" translate="yes" xml:space="preserve">
          <source>psub</source>
          <target state="translated">psub</target>
        </trans-unit>
        <trans-unit id="63fbf23d9d9b481ea407c815c90933057897af4b" translate="yes" xml:space="preserve">
          <source>psub - perform process substitution</source>
          <target state="translated">psub-выполнить замену процесса</target>
        </trans-unit>
        <trans-unit id="ca99455ec63652d0ac9ec250727ee0c6c910786e" translate="yes" xml:space="preserve">
          <source>pushd</source>
          <target state="translated">pushd</target>
        </trans-unit>
        <trans-unit id="9160b1d55f9fa10d249ec7b308dccac953b32fc0" translate="yes" xml:space="preserve">
          <source>pushd - push directory to directory stack</source>
          <target state="translated">pushd-перемещение каталога в стек каталогов</target>
        </trans-unit>
        <trans-unit id="37fa265330ad83eaa879efb1e2db6380896cf639" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>
        </trans-unit>
        <trans-unit id="3f4e967878bd5e1bb4a87ca851b714379daca044" translate="yes" xml:space="preserve">
          <source>pwd - output the current working directory</source>
          <target state="translated">pwd-выводить текущую рабочую директорию</target>
        </trans-unit>
        <trans-unit id="a415ab5cc17c8c093c015ccdb7e552aee7911aa4" translate="yes" xml:space="preserve">
          <source>random</source>
          <target state="translated">random</target>
        </trans-unit>
        <trans-unit id="a2268607239de0e6afadb64003588824de27a1ad" translate="yes" xml:space="preserve">
          <source>random - generate random number</source>
          <target state="translated">случайный-генерировать случайное число</target>
        </trans-unit>
        <trans-unit id="a7afddb68260a60f86c02a021efba7f216c2e7cf" translate="yes" xml:space="preserve">
          <source>read</source>
          <target state="translated">read</target>
        </trans-unit>
        <trans-unit id="02d0fa56be4fca5d7cc0c6db5a7aa370743eb4ff" translate="yes" xml:space="preserve">
          <source>read - read line of input into variables</source>
          <target state="translated">чтение-чтение строки ввода переменных</target>
        </trans-unit>
        <trans-unit id="ff2b5744be5fceda4fc467fda551bcbf199f8fa0" translate="yes" xml:space="preserve">
          <source>realpath</source>
          <target state="translated">realpath</target>
        </trans-unit>
        <trans-unit id="2caa95ad63632ed3825a317f46514c851816d5ab" translate="yes" xml:space="preserve">
          <source>realpath - Convert a path to an absolute path without symlinks</source>
          <target state="translated">realpath-Преобразовать путь в абсолютный путь без сим-ссылок.</target>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="288b5d6d1a89a6e706dfc7486e06e4a8d8078410" translate="yes" xml:space="preserve">
          <source>return - stop the current inner function</source>
          <target state="translated">возврат-остановка текущей внутренней функции</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="063c17e14f7627ded7c57ede98e0f6ca9045fc66" translate="yes" xml:space="preserve">
          <source>set - display and change shell variables.</source>
          <target state="translated">set-отображение и изменение переменных оболочки.</target>
        </trans-unit>
        <trans-unit id="20f7c32664f5d1e0b9c515a18fcf90cdb3c57984" translate="yes" xml:space="preserve">
          <source>set_color</source>
          <target state="translated">set_color</target>
        </trans-unit>
        <trans-unit id="cff11275c6338d2e5dde20951c1557cf0de59d43" translate="yes" xml:space="preserve">
          <source>set_color - set the terminal color</source>
          <target state="translated">set_color-установить цвет терминала</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">source</target>
        </trans-unit>
        <trans-unit id="2f7991a9100c9583f2155802c7350aa74443ed20" translate="yes" xml:space="preserve">
          <source>source - evaluate contents of file.</source>
          <target state="translated">источник-оценить содержимое файла.</target>
        </trans-unit>
        <trans-unit id="506a7e1ca8d34664e2b86653d70401c523f26553" translate="yes" xml:space="preserve">
          <source>spawns &lt;code&gt;sleep&lt;/code&gt; in the background, and then waits until it finishes.</source>
          <target state="translated">создает &lt;code&gt;sleep&lt;/code&gt; в фоновом режиме, а затем ждет, пока он не закончит.</target>
        </trans-unit>
        <trans-unit id="78dbe5e491bc63d2e79ab65c266d6d41e91f56ff" translate="yes" xml:space="preserve">
          <source>spawns five jobs and &lt;code&gt;hoge&lt;/code&gt; in the background, and then waits until all &lt;code&gt;sleep&lt;/code&gt;s finishes, and doesn't wait for &lt;code&gt;hoge&lt;/code&gt; finishing.</source>
          <target state="translated">порождает пять заданий и &lt;code&gt;hoge&lt;/code&gt; в фоновом режиме, а затем ждет, пока все &lt;code&gt;sleep&lt;/code&gt; &lt;code&gt;hoge&lt;/code&gt; , и не ждет завершения hoge .</target>
        </trans-unit>
        <trans-unit id="b6e22225897433914493a887f4a4f462d9a13ced" translate="yes" xml:space="preserve">
          <source>spawns five jobs in the background, and then waits until all of them finishes.</source>
          <target state="translated">порождает пять работ на заднем плане,а затем ждет,пока все они закончатся.</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="420a0e9d08406c887fa9f473fb502e30acd9a336" translate="yes" xml:space="preserve">
          <source>status - query fish runtime information</source>
          <target state="translated">статус-запросить информацию о прогоне рыбы</target>
        </trans-unit>
        <trans-unit id="33a9e6923b5cff6e1c9fb560ddb572a069a669c0" translate="yes" xml:space="preserve">
          <source>stdin and stdout can be redirected via the familiar &amp;lt; and &amp;gt;. stderr is redirected with a &amp;gt;2.</source>
          <target state="translated">stdin и stdout можно перенаправить через знакомые &amp;lt;и&amp;gt;. stderr перенаправляется с a&amp;gt; 2.</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="5eb279c348daa58c49a3c45c42799e5a0b7195c1" translate="yes" xml:space="preserve">
          <source>string - manipulate strings</source>
          <target state="translated">строка-манипулировать строками</target>
        </trans-unit>
        <trans-unit id="b6f0c43f69fad2bd2df597f8c1f9289bf8ebf0a2" translate="yes" xml:space="preserve">
          <source>suspend</source>
          <target state="translated">suspend</target>
        </trans-unit>
        <trans-unit id="0a906b8b4efdea69b1aa7921bd59ea5a07a19f19" translate="yes" xml:space="preserve">
          <source>suspend - suspend the current shell</source>
          <target state="translated">приостанавливать-приостанавливать текущую оболочку</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">switch</target>
        </trans-unit>
        <trans-unit id="b6b1294b1f61dc5bf9ee190db20eac07851abf99" translate="yes" xml:space="preserve">
          <source>switch - conditionally execute a block of commands</source>
          <target state="translated">переключатель-условно выполнить блок команд</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">test</target>
        </trans-unit>
        <trans-unit id="4f3107d98473bb39c5345a7b62319a827c9d8057" translate="yes" xml:space="preserve">
          <source>test - perform tests on files and text</source>
          <target state="translated">тест-выполнять тесты на файлы и текст</target>
        </trans-unit>
        <trans-unit id="c87a7f7b83a3a58c6087ce1eb24509a6f210bbe6" translate="yes" xml:space="preserve">
          <source>the function description minimally escaped so it is a single line or &lt;code&gt;n/a&lt;/code&gt; if the function isn't defined.</source>
          <target state="translated">описание функции минимально экранировано, поэтому это одна строка или &lt;code&gt;n/a&lt;/code&gt; если функция не определена.</target>
        </trans-unit>
        <trans-unit id="02aa698783c53dd6998a194b4ec93ca8e6192a89" translate="yes" xml:space="preserve">
          <source>the line number within the file or zero if not applicable,</source>
          <target state="translated">номер строки в файле или ноль,если это не применимо,</target>
        </trans-unit>
        <trans-unit id="d326199cf56e0ae280f8a9fda92ba199137f5b06" translate="yes" xml:space="preserve">
          <source>the pathname as already described,</source>
          <target state="translated">отчество,как уже было описано,</target>
        </trans-unit>
        <trans-unit id="93fde051556cb8919a6c75036bae40f55a1a1718" translate="yes" xml:space="preserve">
          <source>to change this prompt see &lt;a href=&quot;#tut_prompt&quot;&gt;how to change your prompt&lt;/a&gt;</source>
          <target state="translated">чтобы изменить это приглашение, посмотрите, &lt;a href=&quot;#tut_prompt&quot;&gt;как изменить ваше приглашение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b60b004f5d8183032d2f3fcf34a581edbdea5c61" translate="yes" xml:space="preserve">
          <source>to switch to fish permanently see &lt;a href=&quot;#tut_switching_to_fish&quot;&gt;switch your default shell to fish&lt;/a&gt;</source>
          <target state="translated">чтобы постоянно переключаться на рыбу, см. &lt;a href=&quot;#tut_switching_to_fish&quot;&gt;переключение оболочки по умолчанию на рыбу&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6d307367af5382983ed0d6888c8e3e045355281" translate="yes" xml:space="preserve">
          <source>trap</source>
          <target state="translated">trap</target>
        </trans-unit>
        <trans-unit id="3abaf5ffe5c75ece5fd52f452cf4a7f90fed7421" translate="yes" xml:space="preserve">
          <source>trap - perform an action when the shell receives a signal</source>
          <target state="translated">ловушка-выполнить действие,когда оболочка получает сигнал.</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="10b80755987d5e861fcb4c74925a714ba8dce054" translate="yes" xml:space="preserve">
          <source>true - return a successful result</source>
          <target state="translated">истина-вернуть успешный результат</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="fa189f6932e07966b2945f9c641067e1250a2bb7" translate="yes" xml:space="preserve">
          <source>type - indicate how a command would be interpreted</source>
          <target state="translated">тип-указать,как будет интерпретироваться команда</target>
        </trans-unit>
        <trans-unit id="6747212f18c8e5d826c489535a7ede3cf68eb31d" translate="yes" xml:space="preserve">
          <source>type &lt;code&gt;exit&lt;/code&gt;, or</source>
          <target state="translated">введите &lt;code&gt;exit&lt;/code&gt; , или</target>
        </trans-unit>
        <trans-unit id="8f17cfc3a44394fc7a0575f4eb71f3dbd5d29eb7" translate="yes" xml:space="preserve">
          <source>type &lt;code&gt;quit&lt;/code&gt;</source>
          <target state="translated">тип &lt;code&gt;quit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e5e5b45aaa91b76b5567fa66b0d05fe7289fd30" translate="yes" xml:space="preserve">
          <source>ulimit</source>
          <target state="translated">ulimit</target>
        </trans-unit>
        <trans-unit id="6f97e285ade4768f7a97feb604606ad49d5d73d5" translate="yes" xml:space="preserve">
          <source>ulimit - set or get resource usage limits</source>
          <target state="translated">улимит-установить или получить лимиты на использование ресурсов</target>
        </trans-unit>
        <trans-unit id="4b824f445e8d64ec6f262547c18a3ab02a6fd22c" translate="yes" xml:space="preserve">
          <source>umask</source>
          <target state="translated">umask</target>
        </trans-unit>
        <trans-unit id="40ce63190ce7b180322f127f1880704153f8b29a" translate="yes" xml:space="preserve">
          <source>umask - set or get the file creation mode mask</source>
          <target state="translated">маска-установить или получить маску режима создания файла</target>
        </trans-unit>
        <trans-unit id="ed6354b5f4780263c94651c766c76e339fe47f1e" translate="yes" xml:space="preserve">
          <source>vared</source>
          <target state="translated">vared</target>
        </trans-unit>
        <trans-unit id="095ed909fb13c4817a8aeb74a62b6468a254ca8d" translate="yes" xml:space="preserve">
          <source>vared - interactively edit the value of an environment variable</source>
          <target state="translated">vared-интерактивное редактирование значения переменной окружения</target>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="5dc68f4d1dfb375d9f030f65dae3398df707ba38" translate="yes" xml:space="preserve">
          <source>wait - wait for jobs to complete</source>
          <target state="translated">ждать-ждать завершения работ</target>
        </trans-unit>
        <trans-unit id="daca2c7abafe19aed94611021e5a4bbeb2584565" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;__fish_contains_opt&lt;/code&gt; is a function that checks the command line buffer for the presence of a specified set of options.</source>
          <target state="translated">где &lt;code&gt;__fish_contains_opt&lt;/code&gt; - функция, которая проверяет буфер командной строки на наличие указанного набора параметров.</target>
        </trans-unit>
        <trans-unit id="489a6e620233cc9d22541565dff2f3ac8a1d932a" translate="yes" xml:space="preserve">
          <source>which is logically equivalent to the following:</source>
          <target state="translated">что логически эквивалентно следующему:</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
        <trans-unit id="1ff56800352145ff9f9300f91d5ae15e85c17b92" translate="yes" xml:space="preserve">
          <source>while - perform a command multiple times</source>
          <target state="translated">пока-выполнить команду несколько раз</target>
        </trans-unit>
        <trans-unit id="a605898fdfaef482c78ebc3e9e8274f6d32b1cba" translate="yes" xml:space="preserve">
          <source>will attempt to build the fish program, and any errors will be shown using the less pager.</source>
          <target state="translated">попытается собрать рыбью программу,и любые ошибки будут показаны на меньшем пейджере.</target>
        </trans-unit>
        <trans-unit id="e99b731e0ff1040d87b00c1c061573852dcca4b4" translate="yes" xml:space="preserve">
          <source>will call the &lt;code&gt;cat&lt;/code&gt; program with the parameter 'foo.txt', which will print the contents of the file 'foo.txt'. The contents of foo.txt will then be filtered through the program 'head', which will pass on the first ten lines of the file to the screen. For more information on how to combine commands through pipes, read the manual pages of the commands you want to use using the &lt;code&gt;man&lt;/code&gt; command. If you want to find out more about the &lt;code&gt;cat&lt;/code&gt; program, type &lt;code&gt;man cat&lt;/code&gt;.</source>
          <target state="translated">вызовет программу &lt;code&gt;cat&lt;/code&gt; с параметром 'foo.txt', которая распечатает содержимое файла 'foo.txt'. Затем содержимое foo.txt будет отфильтровано через заголовок программы, который выведет на экран первые десять строк файла. Для получения дополнительной информации о том, как комбинировать команды через каналы, прочитайте справочные страницы команд, которые вы хотите использовать с помощью команды &lt;code&gt;man&lt;/code&gt; . Если вы хотите узнать больше о программе &lt;code&gt;cat&lt;/code&gt; , введите &lt;code&gt;man cat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef5f8dfda25d3d985781b69dcb1b285ae55e913d" translate="yes" xml:space="preserve">
          <source>will run the &lt;code&gt;ls&lt;/code&gt; command, using the &lt;code&gt;-l&lt;/code&gt; option, while passing on any additional files and switches to &lt;code&gt;ls&lt;/code&gt;.</source>
          <target state="translated">запустит команду &lt;code&gt;ls&lt;/code&gt; с параметром &lt;code&gt;-l&lt;/code&gt; , передавая любые дополнительные файлы и переключившись на &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a80dacfdcbb824e4242afb200ba1d4cc653f254c" translate="yes" xml:space="preserve">
          <source>will start the emacs text editor in the background.</source>
          <target state="translated">запустит текстовый редактор emacs в фоновом режиме.</target>
        </trans-unit>
        <trans-unit id="875af98e94b5a2e2425bd92b03433e7c0f34dfa0" translate="yes" xml:space="preserve">
          <source>would remove the two files 'cumbersome' and 'filename.txt'.</source>
          <target state="translated">удалит два файла 'громоздкий' и 'имя файла.txt'.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
