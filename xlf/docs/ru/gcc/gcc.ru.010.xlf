<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="15880a1b0f0eff460a27bab5acca7d963ababc2e" translate="yes" xml:space="preserve">
          <source>On IA-64, use this attribute to set the addressability of an object. At present, the only supported identifier for &lt;var&gt;model-name&lt;/var&gt; is &lt;code&gt;small&lt;/code&gt;, indicating addressability via &amp;ldquo;small&amp;rdquo; (22-bit) addresses (so that their addresses can be loaded with the &lt;code&gt;addl&lt;/code&gt; instruction). Caveat: such addressing is by definition not position independent and hence this attribute must not be used for objects defined by shared libraries.</source>
          <target state="translated">На IA-64 используйте этот атрибут, чтобы установить адресуемость объекта. В настоящее время единственным поддерживаемым идентификатором для имени &lt;var&gt;model-name&lt;/var&gt; является &lt;code&gt;small&lt;/code&gt; , указывающий на возможность адресации через &amp;laquo;маленькие&amp;raquo; (22-битные) адреса (так что их адреса могут быть загружены с &lt;code&gt;addl&lt;/code&gt; инструкции addl ). Предостережение: такая адресация по определению не зависит от позиции, и, следовательно, этот атрибут не должен использоваться для объектов, определенных разделяемыми библиотеками.</target>
        </trans-unit>
        <trans-unit id="91904759c9c2457b69a1a4e416e41e9e0be813c9" translate="yes" xml:space="preserve">
          <source>On M16C/M32C targets, the &lt;code&gt;function_vector&lt;/code&gt; attribute declares a special page subroutine call function. Use of this attribute reduces the code size by 2 bytes for each call generated to the subroutine. The argument to the attribute is the vector number entry from the special page vector table which contains the 16 low-order bits of the subroutine&amp;rsquo;s entry address. Each vector table has special page number (18 to 255) that is used in &lt;code&gt;jsrs&lt;/code&gt; instructions. Jump addresses of the routines are generated by adding 0x0F0000 (in case of M16C targets) or 0xFF0000 (in case of M32C targets), to the 2-byte addresses set in the vector table. Therefore you need to ensure that all the special page vector routines should get mapped within the address range 0x0F0000 to 0x0FFFFF (for M16C) and 0xFF0000 to 0xFFFFFF (for M32C).</source>
          <target state="translated">В целях M16C / M32C атрибут &lt;code&gt;function_vector&lt;/code&gt; объявляет функцию вызова специальной подпрограммы страницы. Использование этого атрибута уменьшает размер кода на 2 байта для каждого вызова подпрограммы. Аргументом атрибута является запись номера вектора из таблицы векторов специальной страницы, которая содержит 16 младших битов адреса записи подпрограммы. Каждая векторная таблица имеет специальный номер страницы (от 18 до 255), который используется в &lt;code&gt;jsrs&lt;/code&gt; .инструкции. Адреса перехода подпрограмм генерируются путем добавления 0x0F0000 (в случае целей M16C) или 0xFF0000 (в случае целей M32C) к 2-байтовым адресам, установленным в таблице векторов. Следовательно, вам необходимо убедиться, что все специальные функции вектора страницы должны отображаться в диапазоне адресов 0x0F0000 в 0x0FFFFF (для M16C) и 0xFF0000 в 0xFFFFFF (для M32C).</target>
        </trans-unit>
        <trans-unit id="c2aa4af7831a376d6135535124d21f76860cca5a" translate="yes" xml:space="preserve">
          <source>On MIPS targets, you can use the &lt;code&gt;micromips&lt;/code&gt; and &lt;code&gt;nomicromips&lt;/code&gt; function attributes to locally select or turn off microMIPS code generation. A function with the &lt;code&gt;micromips&lt;/code&gt; attribute is emitted as microMIPS code, while microMIPS code generation is disabled for functions with the &lt;code&gt;nomicromips&lt;/code&gt; attribute. These attributes override the</source>
          <target state="translated">В целях MIPS вы можете использовать &lt;code&gt;micromips&lt;/code&gt; функций micromips и &lt;code&gt;nomicromips&lt;/code&gt; для локального выбора или отключения генерации кода microMIPS. Функция с атрибутом &lt;code&gt;micromips&lt;/code&gt; излучается как код microMIPS, тогда как генерация кода microMIPS отключена для функций с атрибутом &lt;code&gt;nomicromips&lt;/code&gt; . Эти атрибуты имеют приоритет над</target>
        </trans-unit>
        <trans-unit id="34cf824a3a810117697026d669c82b4b19acd6c0" translate="yes" xml:space="preserve">
          <source>On MIPS targets, you can use the &lt;code&gt;mips16&lt;/code&gt; and &lt;code&gt;nomips16&lt;/code&gt; function attributes to locally select or turn off MIPS16 code generation. A function with the &lt;code&gt;mips16&lt;/code&gt; attribute is emitted as MIPS16 code, while MIPS16 code generation is disabled for functions with the &lt;code&gt;nomips16&lt;/code&gt; attribute. These attributes override the</source>
          <target state="translated">В целях MIPS вы можете использовать &lt;code&gt;mips16&lt;/code&gt; функций mips16 и &lt;code&gt;nomips16&lt;/code&gt; для локального выбора или отключения генерации кода MIPS16. Функция с атрибутом &lt;code&gt;mips16&lt;/code&gt; излучается как код MIPS16, в то время как генерация кода MIPS16 отключена для функций с атрибутом &lt;code&gt;nomips16&lt;/code&gt; . Эти атрибуты имеют приоритет над</target>
        </trans-unit>
        <trans-unit id="a8a3d1b20a43045b41f22872309dca3f5ba7d92b" translate="yes" xml:space="preserve">
          <source>On MIPS targets, you can use the &lt;code&gt;nocompression&lt;/code&gt; function attribute to locally turn off MIPS16 and microMIPS code generation. This attribute overrides the</source>
          <target state="translated">В целях MIPS вы можете использовать &lt;code&gt;nocompression&lt;/code&gt; функции nocompression, чтобы локально отключить генерацию кода MIPS16 и microMIPS. Этот атрибут имеет приоритет над</target>
        </trans-unit>
        <trans-unit id="7ac9d4ebbb07978bcf6bb5025223236429b4e534" translate="yes" xml:space="preserve">
          <source>On Mach-O (Darwin) systems, this option directs the compiler emit to the glue for every direct call, and the Darwin linker decides whether to use or discard it.</source>
          <target state="translated">На системах Mach-O (Darwin)эта опция направляет компилятор на выброс клея для каждого прямого вызова,а линкер Darwin решает,использовать его или отказаться от него.</target>
        </trans-unit>
        <trans-unit id="0531f735384ce9846fa4fc334be67cf2e96fb3ad" translate="yes" xml:space="preserve">
          <source>On MeP targets this causes the compiler to use a calling convention that assumes the called function is too far away for the built-in addressing modes.</source>
          <target state="translated">На мишенях MeP это приводит к тому,что компилятор использует соглашение о вызове,которое предполагает,что вызываемая функция находится слишком далеко для встроенных режимов адресации.</target>
        </trans-unit>
        <trans-unit id="e79537bf7b0989b46efa7c25d92b58021882b02f" translate="yes" xml:space="preserve">
          <source>On MeP targets, this attribute causes the compiler to emit instructions to disable interrupts for the duration of the given function.</source>
          <target state="translated">На мишенях MeP данный атрибут заставляет компилятор выдавать инструкции по отключению прерываний на время работы данной функции.</target>
        </trans-unit>
        <trans-unit id="45c894de73eae9ba59be235302edfc626a14232c" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows and Symbian OS targets, the &lt;code&gt;dllimport&lt;/code&gt; attribute causes the compiler to reference a function or variable via a global pointer to a pointer that is set up by the DLL exporting the symbol. The attribute implies &lt;code&gt;extern&lt;/code&gt;. On Microsoft Windows targets, the pointer name is formed by combining &lt;code&gt;_imp__&lt;/code&gt; and the function or variable name.</source>
          <target state="translated">В целях Microsoft Windows и Symbian OS атрибут &lt;code&gt;dllimport&lt;/code&gt; заставляет компилятор ссылаться на функцию или переменную через глобальный указатель на указатель, установленный DLL, экспортирующей символ. Атрибут подразумевает &lt;code&gt;extern&lt;/code&gt; . В целях Microsoft Windows имя указателя формируется путем объединения &lt;code&gt;_imp__&lt;/code&gt; и имени функции или переменной.</target>
        </trans-unit>
        <trans-unit id="95c50cebcae93e25a947019e55136b1c7c018144" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows targets and Symbian OS targets the &lt;code&gt;dllexport&lt;/code&gt; attribute causes the compiler to provide a global pointer to a pointer in a DLL, so that it can be referenced with the &lt;code&gt;dllimport&lt;/code&gt; attribute. On Microsoft Windows targets, the pointer name is formed by combining &lt;code&gt;_imp__&lt;/code&gt; and the function or variable name.</source>
          <target state="translated">В целях Microsoft Windows и Symbian OS атрибут &lt;code&gt;dllexport&lt;/code&gt; заставляет компилятор предоставить глобальный указатель на указатель в DLL, чтобы на него можно было ссылаться с &lt;code&gt;dllimport&lt;/code&gt; атрибута dllimport . В целях Microsoft Windows имя указателя формируется путем объединения &lt;code&gt;_imp__&lt;/code&gt; и имени функции или переменной.</target>
        </trans-unit>
        <trans-unit id="1984118bd8c75f19c94d178d119ea2bc08e6c575" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, in addition to putting variable definitions in a named section, the section can also be shared among all running copies of an executable or DLL. For example, this small program defines shared data by putting it in a named section &lt;code&gt;shared&lt;/code&gt; and marking the section shareable:</source>
          <target state="translated">В Microsoft Windows, помимо помещения определений переменных в именованный раздел, этот раздел также может использоваться всеми работающими копиями исполняемого файла или DLL. Например, эта небольшая программа определяет общие данные, помещая их в именованный раздел для &lt;code&gt;shared&lt;/code&gt; и отмечая раздел, доступный для совместного использования:</target>
        </trans-unit>
        <trans-unit id="5416b1c81895550371270a53a7a543248ee3e4be" translate="yes" xml:space="preserve">
          <source>On NDS32 target, this attribute indicates that the specified function is an interrupt handler. The compiler generates corresponding sections for use in an interrupt handler. You can use the following attributes to modify the behavior:</source>
          <target state="translated">На цели NDS32 этот атрибут указывает,что указанная функция является обработчиком прерываний.Компилятор генерирует соответствующие секции для использования в обработчике прерываний.Для изменения поведения можно использовать следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="31667390cc139595ccf3b4f7b2d81a14b2b279d4" translate="yes" xml:space="preserve">
          <source>On Pentium and Pentium Pro, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; values should be aligned to an 8-byte boundary (see</source>
          <target state="translated">На Pentium и Pentium Pro &lt;code&gt;double&lt;/code&gt; и &lt;code&gt;long double&lt;/code&gt; значения должны быть выровнены по 8-байтовой границе (см.</target>
        </trans-unit>
        <trans-unit id="5dfd06a496b9a64bdf43d3d6ad76d85cea712405" translate="yes" xml:space="preserve">
          <source>On PowerPC64 ELFv2 and 32-bit PowerPC systems with newer GNU linkers, GCC can generate long calls using an inline PLT call sequence (see</source>
          <target state="translated">На системах PowerPC64 ELFv2 и 32-битных PowerPC с более новыми компоновщиками GNU,GCC может генерировать длинные вызовы с использованием последовательности последовательных вызовов PLT (см.раздел</target>
        </trans-unit>
        <trans-unit id="dd5d9087b606be47a509c0bceb5673fb7be39a05" translate="yes" xml:space="preserve">
          <source>On RX and RL78 targets, you may specify one or more vector numbers as arguments to the attribute, as well as naming an alternate table name. Parameters are handled sequentially, so one handler can be assigned to multiple entries in multiple tables. One may also pass the magic string &lt;code&gt;&quot;$default&quot;&lt;/code&gt; which causes the function to be used for any unfilled slots in the current table.</source>
          <target state="translated">В целях RX и RL78 вы можете указать одно или несколько векторных чисел в качестве аргументов атрибута, а также присвоить альтернативное имя таблицы. Параметры обрабатываются последовательно, поэтому один обработчик может быть назначен нескольким записям в нескольких таблицах. Также можно передать волшебную строку &lt;code&gt;&quot;$default&quot;&lt;/code&gt; которая заставляет функцию использоваться для любых незаполненных слотов в текущей таблице.</target>
        </trans-unit>
        <trans-unit id="33e99d370bf29e8aa1e2a0d04c20a669d50fbb95" translate="yes" xml:space="preserve">
          <source>On S/390 System z targets, you can use this function attribute to make GCC generate a &amp;ldquo;hot-patching&amp;rdquo; function prologue. If the</source>
          <target state="translated">В целях S / 390 System z можно использовать этот атрибут функции, чтобы GCC сгенерировал пролог функции &amp;laquo;горячего исправления&amp;raquo;. Если</target>
        </trans-unit>
        <trans-unit id="292e9b4ac1aef350519264c0f4c8ed4c8aaf3d4f" translate="yes" xml:space="preserve">
          <source>On S/390, the following options are supported:</source>
          <target state="translated">На S/390 поддерживаются следующие опции:</target>
        </trans-unit>
        <trans-unit id="85b6abd02277c312603a05d0dd98120279ff33b7" translate="yes" xml:space="preserve">
          <source>On SH targets this attribute specifies that the function or struct follows the Renesas ABI.</source>
          <target state="translated">На объектах SH этот атрибут указывает,что функция или структура следует за Renesas ABI.</target>
        </trans-unit>
        <trans-unit id="381b0f04662e37f2a1bc4d3eb4c1a729f1a242f9" translate="yes" xml:space="preserve">
          <source>On SH targets this function attribute is similar to &lt;code&gt;interrupt_handler&lt;/code&gt; but it does not save and restore all registers.</source>
          <target state="translated">В целях SH этот атрибут функции аналогичен &lt;code&gt;interrupt_handler&lt;/code&gt; , но он не сохраняет и не восстанавливает все регистры.</target>
        </trans-unit>
        <trans-unit id="964c2422605b94c99b69e72982ea74d1a785a572" translate="yes" xml:space="preserve">
          <source>On SH2A targets, this attribute declares a function to be called using the TBR relative addressing mode. The argument to this attribute is the entry number of the same function in a vector table containing all the TBR relative addressable functions. For correct operation the TBR must be setup accordingly to point to the start of the vector table before any functions with this attribute are invoked. Usually a good place to do the initialization is the startup routine. The TBR relative vector table can have at max 256 function entries. The jumps to these functions are generated using a SH2A specific, non delayed branch instruction JSR/N @(disp8,TBR). You must use GAS and GLD from GNU binutils version 2.7 or later for this attribute to work correctly.</source>
          <target state="translated">На объектах SH2A этот атрибут объявляет функцию для вызова с использованием режима относительной адресации TBR.Аргументом к данному атрибуту является номер записи одной и той же функции в векторной таблице,содержащей все TBR относительно адресуемые функции.Для корректной работы TBR должен быть настроен таким образом,чтобы указывать на начало векторной таблицы,прежде чем будут вызываться функции с данным атрибутом.Обычно хорошим местом для инициализации является рутина запуска.Таблица относительных векторов TBR может иметь не более 256 записей функций.Прыжки к этим функциям генерируются с помощью специфичной для SH2A несвоевременной инструкции ветви JSR/N @(disp8,TBR).Для корректной работы этого атрибута необходимо использовать GAS и GLD из бинутилей GNU версии 2.7 или более поздней.</target>
        </trans-unit>
        <trans-unit id="65892861359bf290a855f95e8cb6e8d95a967575" translate="yes" xml:space="preserve">
          <source>On Solaris, the &lt;code&gt;malloc&lt;/code&gt; function in the</source>
          <target state="translated">В Solaris функция &lt;code&gt;malloc&lt;/code&gt; в</target>
        </trans-unit>
        <trans-unit id="a340d1c003b3b4d0d84d1d6cf6a202ae90e97190" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems assume that all calls to variable argument functions are properly prototyped. Otherwise, the compiler must insert an instruction before every non-prototyped call to set or clear bit 6 of the condition code register (&lt;code&gt;CR&lt;/code&gt;) to indicate whether floating-point values are passed in the floating-point registers in case the function takes variable arguments. With</source>
          <target state="translated">В System V.4 и встроенных системах PowerPC предполагается, что все вызовы функций с переменным аргументом должным образом прототипированы. В противном случае компилятор должен вставлять инструкцию перед каждым вызовом, не являющимся прототипом, для установки или очистки бита 6 регистра кода условия ( &lt;code&gt;CR&lt;/code&gt; ), чтобы указать, передаются ли значения с плавающей запятой в регистры с плавающей запятой в случае, если функция принимает переменные аргументы. , С участием</target>
        </trans-unit>
        <trans-unit id="f2256a579bf82138c9c5aa41348d0b7b51d6daac" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the AIX operating system.</source>
          <target state="translated">На системах System V.4 и встроенных системах PowerPC компилируйте код для операционной системы AIX.</target>
        </trans-unit>
        <trans-unit id="fe315e3b5ed8d61b53e89ed3d62ff77ecfdae7c6" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the FreeBSD operating system.</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC компилируйте код операционной системы FreeBSD.</target>
        </trans-unit>
        <trans-unit id="525d2d75f8b7eee055469b18921362ebea9e4825" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the Linux-based GNU system.</source>
          <target state="translated">В системе V.4 и встроенных системах PowerPC компилируйте код для системы GNU на базе Linux.</target>
        </trans-unit>
        <trans-unit id="5a5ee1e2d22f0ce18e3c1c320f36b9946b4c8dfc" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the NetBSD operating system.</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC скомпилируйте код для операционной системы NetBSD.</target>
        </trans-unit>
        <trans-unit id="0051934fe318ab8cbb17fab75edbf45c96f04c11" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the OpenBSD operating system.</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC компилируйте код для операционной системы OpenBSD.</target>
        </trans-unit>
        <trans-unit id="fdb7561e353b7728421832b70506b5d4c6fa3c7e" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the processor in big-endian mode. The</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC компилируйте код для процессора в режиме big-endian.</target>
        </trans-unit>
        <trans-unit id="b791b572470291e1cfd42f57a4664b61e84003db" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code for the processor in little-endian mode. The</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC компилируйте код для процессора в режиме little-endian.</target>
        </trans-unit>
        <trans-unit id="f5beb7b132104d68f4f5cbc4a0ef4c49e27d02c4" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems compile code using calling conventions that adhere to the March 1995 draft of the System V Application Binary Interface, PowerPC processor supplement. This is the default unless you configured GCC using &amp;lsquo;</source>
          <target state="translated">В System V.4 и встраиваемых системах PowerPC код компилируется с использованием соглашений о вызовах, которые соответствуют проекту двоичного интерфейса приложений System V от марта 1995 г., дополнению к процессору PowerPC. Это значение по умолчанию, если вы не настроили GCC с помощью '</target>
        </trans-unit>
        <trans-unit id="ab88e303b786d21b1a8f42d2e000f229f5f18585" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems do (do not) adhere to the Embedded Applications Binary Interface (EABI), which is a set of modifications to the System V.4 specifications. Selecting</source>
          <target state="translated">В System V.4 и встраиваемых системах PowerPC соблюдается (не соблюдается)бинарный интерфейс для встраиваемых приложений (EABI),представляющий собой набор модификаций спецификаций System V.4.Выбор .</target>
        </trans-unit>
        <trans-unit id="2eae16e35bc06e716334b4c7921025ccfcc826e2" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems do (do not) emit register names in the assembly language output using symbolic forms.</source>
          <target state="translated">В системе System V.4 и встроенных системах PowerPC имена регистров в выводе на языке ассемблера передаются (не передаются)с помощью символических форм.</target>
        </trans-unit>
        <trans-unit id="cde6038a38326e8feda1354f3d6e68cbecd2d67e" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems do not (do) assume that register 2 contains a pointer to a global area pointing to the addresses used in the program.</source>
          <target state="translated">На System V.4 и встроенных PowerPC системах не предполагается,что регистр 2 содержит указатель на глобальную область,указывающий на адреса,используемые в программе.</target>
        </trans-unit>
        <trans-unit id="39c18d263ac536d281744080aa79ad7c482f8e46" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems do not (do) assume that unaligned memory references are handled by the system.</source>
          <target state="translated">В System V.4 и встроенных системах PowerPC не предполагается,что не выровненные ссылки на память обрабатываются системой.</target>
        </trans-unit>
        <trans-unit id="8a47777ab0b1471112076b4260b638a74879ac6e" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems do not (do) force structures and unions that contain bit-fields to be aligned to the base type of the bit-field.</source>
          <target state="translated">В системе V.4 и встраиваемых системах PowerPC структуры и соединения,содержащие битовые поля,не принуждаются (не принуждаются)к выравниванию по базовому типу битового поля.</target>
        </trans-unit>
        <trans-unit id="ca99d7fd8feba181eeef09d32b2193d269ff1a44" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems, if</source>
          <target state="translated">На системах System V.4 и встроенных системах PowerPC,если</target>
        </trans-unit>
        <trans-unit id="2eb1b46c19eb6001e288db42a1d14f5ecbe30724" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems, put small global and static data in the &lt;code&gt;.sdata&lt;/code&gt; section, which is pointed to by register &lt;code&gt;r13&lt;/code&gt;. Put small uninitialized global and static data in the &lt;code&gt;.sbss&lt;/code&gt; section, which is adjacent to the &lt;code&gt;.sdata&lt;/code&gt; section. The</source>
          <target state="translated">В системе V.4 и встроенных системах PowerPC поместите небольшие глобальные и статические данные в раздел &lt;code&gt;.sdata&lt;/code&gt; , на который указывает регистр &lt;code&gt;r13&lt;/code&gt; . Поместите небольшие неинициализированные глобальные и статические данные в раздел &lt;code&gt;.sbss&lt;/code&gt; , который находится рядом с разделом &lt;code&gt;.sdata&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1b5ddbe5dde4d7f82f6d4e94233e96793e7eba8" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems, put small global data in the &lt;code&gt;.sdata&lt;/code&gt; section. Put small uninitialized global data in the &lt;code&gt;.sbss&lt;/code&gt; section. Do not use register &lt;code&gt;r13&lt;/code&gt; to address small data however. This is the default behavior unless other</source>
          <target state="translated">В System V.4 и встроенных системах PowerPC поместите небольшие глобальные данные в раздел &lt;code&gt;.sdata&lt;/code&gt; . Поместите небольшие неинициализированные глобальные данные в секцию &lt;code&gt;.sbss&lt;/code&gt; . Однако не используйте регистр &lt;code&gt;r13&lt;/code&gt; для адресации небольших данных. Это поведение по умолчанию, если иное не</target>
        </trans-unit>
        <trans-unit id="b52ae7ecf68ab25b84dbbd1c090a7974e90f350c" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems, put small initialized &lt;code&gt;const&lt;/code&gt; global and static data in the &lt;code&gt;.sdata2&lt;/code&gt; section, which is pointed to by register &lt;code&gt;r2&lt;/code&gt;. Put small initialized non-&lt;code&gt;const&lt;/code&gt; global and static data in the &lt;code&gt;.sdata&lt;/code&gt; section, which is pointed to by register &lt;code&gt;r13&lt;/code&gt;. Put small uninitialized global and static data in the &lt;code&gt;.sbss&lt;/code&gt; section, which is adjacent to the &lt;code&gt;.sdata&lt;/code&gt; section. The</source>
          <target state="translated">В System V.4 и встраиваемых систем PowerPC, положить небольшие инициализирован &lt;code&gt;const&lt;/code&gt; глобальные и статические данные в &lt;code&gt;.sdata2&lt;/code&gt; параграфе, на который указывает регистр &lt;code&gt;r2&lt;/code&gt; . Поместите небольшие инициализированные &lt;code&gt;const&lt;/code&gt; глобальные и статические данные в раздел &lt;code&gt;.sdata&lt;/code&gt; , на который указывает регистр &lt;code&gt;r13&lt;/code&gt; . Поместите небольшие неинициализированные глобальные и статические данные в раздел &lt;code&gt;.sbss&lt;/code&gt; , который находится рядом с разделом &lt;code&gt;.sdata&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31ab20eab881b18de841e0f744838f8d79533911" translate="yes" xml:space="preserve">
          <source>On System V.4 and embedded PowerPC systems, specify that you are compiling for a VxWorks system.</source>
          <target state="translated">На системах System V.4 и встроенных PowerPC укажите,что вы выполняете компиляцию для системы VxWorks.</target>
        </trans-unit>
        <trans-unit id="3b7c9e8fe9be90e5b1711df0aa43109dbeeee519" translate="yes" xml:space="preserve">
          <source>On a PowerPC, you can compile a function with &lt;code&gt;target_clones(&quot;cpu=power9,default&quot;)&lt;/code&gt;. GCC will create two function clones, one compiled with</source>
          <target state="translated">На PowerPC вы можете скомпилировать функцию с &lt;code&gt;target_clones(&quot;cpu=power9,default&quot;)&lt;/code&gt; . GCC создаст два клона функции, одна из которых скомпилирована с</target>
        </trans-unit>
        <trans-unit id="2b6207218221cf5a21cb4ce70228ebd866adf3c7" translate="yes" xml:space="preserve">
          <source>On a SPARC, GCC aligns all values of type &lt;code&gt;double&lt;/code&gt; on an 8-byte boundary, and it expects every &lt;code&gt;double&lt;/code&gt; to be so aligned. The Sun compiler usually gives &lt;code&gt;double&lt;/code&gt; values 8-byte alignment, with one exception: function arguments of type &lt;code&gt;double&lt;/code&gt; may not be aligned.</source>
          <target state="translated">На SPARC GCC выравнивает все значения типа &lt;code&gt;double&lt;/code&gt; по 8-байтовой границе и ожидает, что каждое &lt;code&gt;double&lt;/code&gt; значение будет выровнено таким образом. Компилятор ВС обычно дает &lt;code&gt;double&lt;/code&gt; значения на выравнивание 8 байт, за одним исключением: аргументы функции типа &lt;code&gt;double&lt;/code&gt; не могут быть совмещены.</target>
        </trans-unit>
        <trans-unit id="c54d5e9842efa1190de832e68ceeddd07e1b57ec" translate="yes" xml:space="preserve">
          <source>On embedded PowerPC systems, assume that the startup module is called</source>
          <target state="translated">На встраиваемых системах PowerPC предположим,что модуль запуска называется</target>
        </trans-unit>
        <trans-unit id="8b133920834ad968fd5e3ad90be374421844ec08" translate="yes" xml:space="preserve">
          <source>On embedded PowerPC systems, put all initialized global and static data in the &lt;code&gt;.data&lt;/code&gt; section, and all uninitialized data in the &lt;code&gt;.bss&lt;/code&gt; section.</source>
          <target state="translated">Во встроенных системах PowerPC поместите все инициализированные глобальные и статические данные в раздел &lt;code&gt;.data&lt;/code&gt; , а все неинициализированные данные - в раздел &lt;code&gt;.bss&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="956164ada36cee4efdb76678bae728426fa21ad6" translate="yes" xml:space="preserve">
          <source>On embedded PowerPC systems, put global and static items less than or equal to &lt;var&gt;num&lt;/var&gt; bytes into the small data or BSS sections instead of the normal data or BSS section. By default, &lt;var&gt;num&lt;/var&gt; is 8. The</source>
          <target state="translated">На встроенных системах PowerPC, поставить глобальные и статические элементы меньше или равно &lt;var&gt;num&lt;/var&gt; байтов в небольших данных или секции BSS вместо обычных данных или секции BSS. По умолчанию &lt;var&gt;num&lt;/var&gt; равно 8.</target>
        </trans-unit>
        <trans-unit id="12a413b7674df08ad1aab1d7a97049457f7c4105" translate="yes" xml:space="preserve">
          <source>On embedded PowerPC systems, set the &lt;code&gt;PPC_EMB&lt;/code&gt; bit in the ELF flags header to indicate that &amp;lsquo;</source>
          <target state="translated">На встроенных системах PowerPC установите бит &lt;code&gt;PPC_EMB&lt;/code&gt; в заголовке флагов ELF, чтобы указать, что '</target>
        </trans-unit>
        <trans-unit id="276196a98c13434d4d4c303d9ed47e653a63a0a3" translate="yes" xml:space="preserve">
          <source>On machines where a function returns floating-point results in the 80387 register stack, some floating-point opcodes may be emitted even if</source>
          <target state="translated">На машинах,где функция возвращает результат с плавающей точкой в стеке регистров 80387,некоторые опкоды с плавающей точкой могут быть выданы,даже если</target>
        </trans-unit>
        <trans-unit id="765fd445f5f79a3b6c1bf65d331a2ab62d7c09c3" translate="yes" xml:space="preserve">
          <source>On machines with register windows, be sure to choose a global register that is not affected magically by the function call mechanism.</source>
          <target state="translated">На машинах с окнами регистров обязательно выбирайте глобальный регистр,на который магически не влияет механизм вызова функций.</target>
        </trans-unit>
        <trans-unit id="baf0367d5874a0c5c72bd2d02e6ad6a8602da5fb" translate="yes" xml:space="preserve">
          <source>On many platforms, GCC supports a different ABI for C++ than do other compilers, so the object files compiled by GCC cannot be used with object files generated by another C++ compiler.</source>
          <target state="translated">На многих платформах GCC поддерживает другой ABI для C++,нежели другие компиляторы,поэтому объектные файлы,скомпилированные GCC,нельзя использовать с объектными файлами,сгенерированными другим компилятором C++.</target>
        </trans-unit>
        <trans-unit id="4d7c2fb9e12e897dbce329dee3a106daf06850a0" translate="yes" xml:space="preserve">
          <source>On most machines, &lt;code&gt;longjmp&lt;/code&gt; restores to each global register variable the value it had at the time of the &lt;code&gt;setjmp&lt;/code&gt;. On some machines, however, &lt;code&gt;longjmp&lt;/code&gt; does not change the value of global register variables. To be portable, the function that called &lt;code&gt;setjmp&lt;/code&gt; should make other arrangements to save the values of the global register variables, and to restore them in a &lt;code&gt;longjmp&lt;/code&gt;. This way, the same thing happens regardless of what &lt;code&gt;longjmp&lt;/code&gt; does.</source>
          <target state="translated">На большинстве машин &lt;code&gt;longjmp&lt;/code&gt; восстанавливает каждой глобальной регистровой переменной значение, которое она имела на момент &lt;code&gt;setjmp&lt;/code&gt; . Однако на некоторых машинах &lt;code&gt;longjmp&lt;/code&gt; не изменяет значения глобальных переменных регистра. Чтобы быть переносимой, функция, &lt;code&gt;setjmp&lt;/code&gt; должна выполнять другие меры для сохранения значений глобальных переменных регистра и восстановления их в &lt;code&gt;longjmp&lt;/code&gt; . Таким образом, одно и то же происходит независимо от того, что делает &lt;code&gt;longjmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61f4155d039689baf9c247b710861ebab661061d" translate="yes" xml:space="preserve">
          <source>On most systems that use stabs format,</source>
          <target state="translated">На большинстве систем,которые используют формат stabs,</target>
        </trans-unit>
        <trans-unit id="164e2d1cdab76253173fd67017576978f44922c1" translate="yes" xml:space="preserve">
          <source>On some BSD systems, including some versions of Ultrix, use of profiling causes static variable destructors (currently used only in C++) not to be run.</source>
          <target state="translated">На некоторых системах BSD,в том числе и на некоторых версиях Ultrix,использование профилирования приводит к тому,что статические деструкторы переменных (в настоящее время используемые только в C++)не запускаются.</target>
        </trans-unit>
        <trans-unit id="63572090afdc3d5b19c4bea28a32908c6254289e" translate="yes" xml:space="preserve">
          <source>On some machines it may be impossible to determine the frame address of any function other than the current one; in such cases, or when the top of the stack has been reached, this function returns &lt;code&gt;0&lt;/code&gt; if the first frame pointer is properly initialized by the startup code.</source>
          <target state="translated">На некоторых машинах может быть невозможно определить адрес кадра какой-либо функции, кроме текущей; в таких случаях или при достижении вершины стека эта функция возвращает &lt;code&gt;0&lt;/code&gt; , если указатель первого кадра правильно инициализирован кодом запуска.</target>
        </trans-unit>
        <trans-unit id="c1c8ec9b26e1e50270902a24206b23748281f80a" translate="yes" xml:space="preserve">
          <source>On some machines it may be impossible to determine the return address of any function other than the current one; in such cases, or when the top of the stack has been reached, this function returns &lt;code&gt;0&lt;/code&gt; or a random value. In addition, &lt;code&gt;__builtin_frame_address&lt;/code&gt; may be used to determine if the top of the stack has been reached.</source>
          <target state="translated">На некоторых машинах может быть невозможно определить адрес возврата какой-либо функции, кроме текущей; в таких случаях или при достижении вершины стека эта функция возвращает &lt;code&gt;0&lt;/code&gt; или случайное значение. Кроме того, &lt;code&gt;__builtin_frame_address&lt;/code&gt; может использоваться, чтобы определить, достигнута ли вершина стека.</target>
        </trans-unit>
        <trans-unit id="9459429806b19bedbc3812fd4e4235d2169468c6" translate="yes" xml:space="preserve">
          <source>On some newer machines, PCC uses a reentrant convention for all structure and union returning. GCC on most of these machines uses a compatible convention when returning structures and unions in memory, but still returns small structures and unions in registers.</source>
          <target state="translated">На некоторых новых машинах PCC использует конвенцию о возвращении всех структур и союзов.На большинстве этих машин GCC использует совместимое соглашение при возврате структур и союзов в память,но все равно возвращает небольшие структуры и союзы в регистрах.</target>
        </trans-unit>
        <trans-unit id="e7a00be8ad71da46c5174d313f9a640c4604077b" translate="yes" xml:space="preserve">
          <source>On some processors, like Intel Atom, 8-bit unsigned integer divide is much faster than 32-bit/64-bit integer divide. This option generates a run-time check. If both dividend and divisor are within range of 0 to 255, 8-bit unsigned integer divide is used instead of 32-bit/64-bit integer divide.</source>
          <target state="translated">На некоторых процессорах,например,Intel Atom,8-битное целое деление без знака значительно быстрее,чем 32-битное/64-битное целое деление.Данная опция генерирует проверку времени выполнения.Если и дивиденд,и делитель находятся в диапазоне от 0 до 255,вместо 32-битного/64-битного целочисленного делителя используется 8-битное целое разделение без знака.</target>
        </trans-unit>
        <trans-unit id="962c05222fdb4b91f96523bd87b84e3ad46c65d1" translate="yes" xml:space="preserve">
          <source>On some rare x86 targets, &lt;code&gt;setjmp&lt;/code&gt; doesn&amp;rsquo;t save the registers in all circumstances. In those cases, GCC doesn&amp;rsquo;t allocate any variables in registers unless they are marked &lt;code&gt;register&lt;/code&gt;.</source>
          <target state="translated">На некоторых редких устройствах x86 &lt;code&gt;setjmp&lt;/code&gt; не сохраняет регистры ни при каких обстоятельствах. В этих случаях GCC не выделяет никаких переменных в регистрах, если они не отмечены как &lt;code&gt;register&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50b8a98a7845b95d4eb0c4bf2a96f13e10a0e926" translate="yes" xml:space="preserve">
          <source>On some systems, &amp;lsquo;</source>
          <target state="translated">В некоторых системах '</target>
        </trans-unit>
        <trans-unit id="18b57ea0d71c60c160b6870aa792c110927a6a2b" translate="yes" xml:space="preserve">
          <source>On some systems, header file directories contain machine-specific symbolic links in certain places. This makes it possible to share most of the header files among hosts running the same version of the system on different machine models.</source>
          <target state="translated">На некоторых системах заголовочные каталоги файлов в определенных местах содержат символические ссылки на машины.Это позволяет разделить большинство заголовочных файлов между хостами,на которых запущена одна и та же версия системы на разных моделях машин.</target>
        </trans-unit>
        <trans-unit id="5afa05ee4c2834411c301dd21c9dd367b2afc2a4" translate="yes" xml:space="preserve">
          <source>On some target machines, GCC supports many built-in functions specific to those machines. Generally these generate calls to specific machine instructions, but allow the compiler to schedule those calls.</source>
          <target state="translated">На некоторых целевых машинах GCC поддерживает множество встроенных функций,специфичных для этих машин.Обычно они генерируют вызовы к определенным инструкциям машины,но позволяют компилятору планировать эти вызовы.</target>
        </trans-unit>
        <trans-unit id="98a0b32bda81ede1cd6faa721c95ce64fb072f42" translate="yes" xml:space="preserve">
          <source>On some targets the attributes also accept an integer argument to specify a priority to control the order in which constructor and destructor functions are run. A constructor with a smaller priority number runs before a constructor with a larger priority number; the opposite relationship holds for destructors. So, if you have a constructor that allocates a resource and a destructor that deallocates the same resource, both functions typically have the same priority. The priorities for constructor and destructor functions are the same as those specified for namespace-scope C++ objects (see &lt;a href=&quot;c_002b_002b-attributes#C_002b_002b-Attributes&quot;&gt;C++ Attributes&lt;/a&gt;). However, at present, the order in which constructors for C++ objects with static storage duration and functions decorated with attribute &lt;code&gt;constructor&lt;/code&gt; are invoked is unspecified. In mixed declarations, attribute &lt;code&gt;init_priority&lt;/code&gt; can be used to impose a specific ordering.</source>
          <target state="translated">Для некоторых целей атрибуты также принимают целочисленный аргумент, чтобы указать приоритет для управления порядком, в котором выполняются функции конструктора и деструктора. Конструктор с меньшим номером приоритета запускается перед конструктором с большим номером приоритета; обратное соотношение верно для деструкторов. Итак, если у вас есть конструктор, который выделяет ресурс, и деструктор, освобождающий один и тот же ресурс, обе функции обычно имеют одинаковый приоритет. Приоритеты для функций конструктора и деструктора такие же, как и приоритеты, указанные для объектов &lt;a href=&quot;c_002b_002b-attributes#C_002b_002b-Attributes&quot;&gt;C ++ в&lt;/a&gt; области пространства имен (см. Атрибуты C ++ ). Однако в настоящее время порядок, в котором конструкторы для объектов C ++ со статической продолжительностью хранения и функции, украшенные &lt;code&gt;constructor&lt;/code&gt; атрибутоввызываются, не указано. В смешанных объявлениях атрибут &lt;code&gt;init_priority&lt;/code&gt; может использоваться для наложения определенного порядка.</target>
        </trans-unit>
        <trans-unit id="788803b9b10d0e01cda4976ecfb5c895ad7a5b3a" translate="yes" xml:space="preserve">
          <source>On some targets this flag has no effect because the standard calling sequence always uses a frame pointer, so it cannot be omitted.</source>
          <target state="translated">На некоторых объектах этот флаг не действует,так как стандартная вызывающая последовательность всегда использует указатель фрейма,поэтому его нельзя опустить.</target>
        </trans-unit>
        <trans-unit id="c64fcda505cd363eeb7c02acd97bfcddc4bbd34d" translate="yes" xml:space="preserve">
          <source>On some targets,</source>
          <target state="translated">По некоторым целям,</target>
        </trans-unit>
        <trans-unit id="69a2029b429c1edce694be8a2285d9fe96168834" translate="yes" xml:space="preserve">
          <source>On some targets, a special form of output operand exists by which conditions in the flags register may be outputs of the asm. The set of conditions supported are target specific, but the general rule is that the output variable must be a scalar integer, and the value is boolean. When supported, the target defines the preprocessor symbol &lt;code&gt;__GCC_ASM_FLAG_OUTPUTS__&lt;/code&gt;.</source>
          <target state="translated">Для некоторых целей существует особая форма выходного операнда, согласно которой условия в регистре флагов могут быть выходами asm. Набор поддерживаемых условий зависит от цели, но общее правило состоит в том, что выходная переменная должна быть скалярным целым числом, а значение - логическим. Если поддерживается, цель определяет символ препроцессора &lt;code&gt;__GCC_ASM_FLAG_OUTPUTS__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15856f8aeb189d03f7962b7a088a8da27e3b7698" translate="yes" xml:space="preserve">
          <source>On some targets, the instruction set contains SIMD vector instructions which operate on multiple values contained in one large register at the same time. For example, on the x86 the MMX, 3DNow! and SSE extensions can be used this way.</source>
          <target state="translated">На некоторых объектах набор инструкций содержит векторные инструкции SIMD,которые работают с несколькими значениями,содержащимися в одном большом регистре одновременно.Например,на x86 можно использовать расширения MMX,3DNow! и SSE.</target>
        </trans-unit>
        <trans-unit id="f61759f6ed3890f04c249dd91cb9dd263d93f566" translate="yes" xml:space="preserve">
          <source>On systems that provide</source>
          <target state="translated">На системах,которые обеспечивают</target>
        </trans-unit>
        <trans-unit id="3224a581ef3e35f60ddcaea7c51bc1eb2a15bb26" translate="yes" xml:space="preserve">
          <source>On systems that support dynamic linking, this overrides</source>
          <target state="translated">В системах,поддерживающих динамическую связь,это перекрывает</target>
        </trans-unit>
        <trans-unit id="40c0cbf9ca562d8813acfb29f55f0f2638a9538b" translate="yes" xml:space="preserve">
          <source>On systems that support the &lt;code&gt;visibility&lt;/code&gt; attribute, this attribute also implies &amp;ldquo;default&amp;rdquo; visibility. It is an error to explicitly specify any other visibility.</source>
          <target state="translated">В системах, которые поддерживают атрибут &lt;code&gt;visibility&lt;/code&gt; , этот атрибут также подразумевает видимость &amp;laquo;по умолчанию&amp;raquo;. Явное указание любой другой видимости является ошибкой.</target>
        </trans-unit>
        <trans-unit id="0b5a32b9b4c00b5336f23962d28d21f5785c04c6" translate="yes" xml:space="preserve">
          <source>On systems where an underscore is normally prepended to the name of a C variable, this feature allows you to define names for the linker that do not start with an underscore.</source>
          <target state="translated">В системах,где к имени переменной C обычно добавляется символ подчеркивания,эта функция позволяет определить имена компоновщика,которые не начинаются со знака подчеркивания.</target>
        </trans-unit>
        <trans-unit id="212542d3f9bd9c37cf41fc83c6e569604a10e8a0" translate="yes" xml:space="preserve">
          <source>On systems with recent GNU assembler and C library, the C++ compiler uses the &lt;code&gt;STB_GNU_UNIQUE&lt;/code&gt; binding to make sure that definitions of template static data members and static local variables in inline functions are unique even in the presence of &lt;code&gt;RTLD_LOCAL&lt;/code&gt;; this is necessary to avoid problems with a library used by two different &lt;code&gt;RTLD_LOCAL&lt;/code&gt; plugins depending on a definition in one of them and therefore disagreeing with the other one about the binding of the symbol. But this causes &lt;code&gt;dlclose&lt;/code&gt; to be ignored for affected DSOs; if your program relies on reinitialization of a DSO via &lt;code&gt;dlclose&lt;/code&gt; and &lt;code&gt;dlopen&lt;/code&gt;, you can use</source>
          <target state="translated">В системах с новейшим ассемблером GNU и библиотекой C компилятор C ++ использует привязку &lt;code&gt;STB_GNU_UNIQUE&lt;/code&gt; , чтобы гарантировать, что определения статических элементов данных шаблона и статических локальных переменных во встроенных функциях уникальны даже при наличии &lt;code&gt;RTLD_LOCAL&lt;/code&gt; ; это необходимо, чтобы избежать проблем с библиотекой, используемой двумя разными плагинами &lt;code&gt;RTLD_LOCAL&lt;/code&gt; в зависимости от определения в одном из них и, следовательно, несогласия с другим в отношении привязки символа. Но это приводит к тому, что &lt;code&gt;dlclose&lt;/code&gt; игнорируется для затронутых DSO; если ваша программа опирается на переинициализации ЦКС через &lt;code&gt;dlclose&lt;/code&gt; и &lt;code&gt;dlopen&lt;/code&gt; , вы можете использовать</target>
        </trans-unit>
        <trans-unit id="425eb623da59637995768118b04879b74012b572" translate="yes" xml:space="preserve">
          <source>On targets such as x86 that support multiple assembler dialects, all basic &lt;code&gt;asm&lt;/code&gt; blocks use the assembler dialect specified by the</source>
          <target state="translated">На целевых устройствах, таких как x86, которые поддерживают несколько диалектов ассемблера, все базовые блоки &lt;code&gt;asm&lt;/code&gt; используют диалект ассемблера, указанный в параметре</target>
        </trans-unit>
        <trans-unit id="d61cb2550f8a937ac6fdb2426039ef34d8bd79ab" translate="yes" xml:space="preserve">
          <source>On targets such as x86, GCC supports multiple assembler dialects. The</source>
          <target state="translated">На таких объектах,как x86,GCC поддерживает несколько ассемблерных диалектов.</target>
        </trans-unit>
        <trans-unit id="58cd0cfdbd27bd5c1c85588e8db09d5e47fe7abd" translate="yes" xml:space="preserve">
          <source>On targets that don&amp;rsquo;t support COMDAT, but do support weak symbols, GCC uses them. This way one copy overrides all the others, but the unused copies still take up space in the executable.</source>
          <target state="translated">В целях, которые не поддерживают COMDAT, но поддерживают слабые символы, GCC использует их. Таким образом, одна копия перекрывает все остальные, но неиспользуемые копии по-прежнему занимают место в исполняемом файле.</target>
        </trans-unit>
        <trans-unit id="db6b506cf934f95ab486d96d507e199e74530808" translate="yes" xml:space="preserve">
          <source>On targets that support strong aliases, G++ works around mangling changes by creating an alias with the correct mangled name when defining a symbol with an incorrect mangled name. This switch specifies which ABI version to use for the alias.</source>
          <target state="translated">На объектах,поддерживающих сильные псевдонимы,G++работает над изменением псевдонима,создавая псевдоним с правильным искаженным именем при определении символа с неправильным искаженным именем.Этот переключатель указывает,какую версию ABI использовать для псевдонима.</target>
        </trans-unit>
        <trans-unit id="ad2005f135085bd91be5baac596d98423c81523a" translate="yes" xml:space="preserve">
          <source>On targets that support symbol aliases, the default is</source>
          <target state="translated">Для целей,поддерживающих псевдонимы символов,по умолчанию установлено следующее значение</target>
        </trans-unit>
        <trans-unit id="08070a532da1172ea25375415fe645b0da79ac62" translate="yes" xml:space="preserve">
          <source>On targets that use instruction scheduling, this option controls the amount of debugging output the scheduler prints to the dump files.</source>
          <target state="translated">На объектах,использующих планирование инструкций,эта опция управляет количеством отладочного вывода,который планировщик распечатывает в файлы дампа.</target>
        </trans-unit>
        <trans-unit id="0357809f36796934ee518b4f582ea0c9e04da24c" translate="yes" xml:space="preserve">
          <source>On targets where the user visible pointer size is smaller than the size of an actual hardware address this function returns the extended user pointer. Targets where this is true included ILP32 mode on x86_64 or Aarch64. This function is mainly useful when writing inline assembly code.</source>
          <target state="translated">На объектах,где видимый пользователем размер указателя меньше,чем размер фактического аппаратного адреса,эта функция возвращает расширенный пользовательский указатель.На мишенях,где это истинно,включается режим ILP32 на x86_64 или Aarch64.Данная функция в основном полезна при написании встроенного ассемблерного кода.</target>
        </trans-unit>
        <trans-unit id="c74599677d84a97b951cd701c929b270ae2a8f43" translate="yes" xml:space="preserve">
          <source>On the ARC, you must specify the kind of interrupt to be handled in a parameter to the interrupt attribute like this:</source>
          <target state="translated">В ARC,вы должны указать тип прерывания для обработки в параметре атрибута прерывания,подобного этому:</target>
        </trans-unit>
        <trans-unit id="8f1b9d0583dcf355892e7a5808d90a73184b57e9" translate="yes" xml:space="preserve">
          <source>On the AVR target, there are several address spaces that can be used in order to put read-only data into the flash memory and access that data by means of the special instructions &lt;code&gt;LPM&lt;/code&gt; or &lt;code&gt;ELPM&lt;/code&gt; needed to read from flash.</source>
          <target state="translated">На цели AVR есть несколько адресных пространств, которые можно использовать для помещения данных только для чтения во флэш-память и доступа к этим данным с помощью специальных инструкций &lt;code&gt;LPM&lt;/code&gt; или &lt;code&gt;ELPM&lt;/code&gt; , необходимых для чтения из флэш-памяти.</target>
        </trans-unit>
        <trans-unit id="fa1a3a8be337624014eab65a011ba0cd4944578f" translate="yes" xml:space="preserve">
          <source>On the AVR, the hardware globally disables interrupts when an interrupt is executed. The first instruction of an interrupt handler declared with this attribute is a &lt;code&gt;SEI&lt;/code&gt; instruction to re-enable interrupts. See also the &lt;code&gt;signal&lt;/code&gt; function attribute that does not insert a &lt;code&gt;SEI&lt;/code&gt; instruction. If both &lt;code&gt;signal&lt;/code&gt; and &lt;code&gt;interrupt&lt;/code&gt; are specified for the same function, &lt;code&gt;signal&lt;/code&gt; is silently ignored.</source>
          <target state="translated">В AVR аппаратное обеспечение глобально отключает прерывания при их выполнении. Первая инструкция обработчика прерывания, объявленная с этим атрибутом, - это инструкция &lt;code&gt;SEI&lt;/code&gt; для повторного включения прерываний. См. Также атрибут функции &lt;code&gt;signal&lt;/code&gt; , который не вставляет инструкцию &lt;code&gt;SEI&lt;/code&gt; . Если для одной и той же функции указаны и &lt;code&gt;signal&lt;/code&gt; и &lt;code&gt;interrupt&lt;/code&gt; , &lt;code&gt;signal&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="5cd37ff9ade8fdf6a273265986e56386f3b6bf8a" translate="yes" xml:space="preserve">
          <source>On the H8/300H and H8S, use the same alignment rules as for the H8/300. The default for the H8/300H and H8S is to align longs and floats on 4-byte boundaries.</source>
          <target state="translated">Для H8/300H и H8S используйте те же правила выравнивания,что и для H8/300.По умолчанию для H8/300H и H8S выравнивание длинных и плавающих по 4-байтовым границам.</target>
        </trans-unit>
        <trans-unit id="11e9b1c71b01253bfa1fdd5df13310266b613077" translate="yes" xml:space="preserve">
          <source>On the HP PA machine, ADB sometimes fails to work on functions compiled with GCC. Specifically, it fails to work on functions that use &lt;code&gt;alloca&lt;/code&gt; or variable-size arrays. This is because GCC doesn&amp;rsquo;t generate HP-UX unwind descriptors for such functions. It may even be impossible to generate them.</source>
          <target state="translated">На машине HP PA ADB иногда не работает с функциями, скомпилированными с помощью GCC. В частности, он не работает с функциями, использующими массивы &lt;code&gt;alloca&lt;/code&gt; или массивы переменного размера. Это связано с тем, что GCC не генерирует дескрипторы очистки HP-UX для таких функций. Может быть, их даже невозможно создать.</target>
        </trans-unit>
        <trans-unit id="a6f0c85db03b4e781c3473176ab2b4c1d6c0940b" translate="yes" xml:space="preserve">
          <source>On the M32C target, with the R8C and M16C CPU variants, variables qualified with &lt;code&gt;__far&lt;/code&gt; are accessed using 32-bit addresses in order to access memory beyond the first 64 Ki bytes. If &lt;code&gt;__far&lt;/code&gt; is used with the M32CM or M32C CPU variants, it has no effect.</source>
          <target state="translated">На целевом устройстве M32C с вариантами ЦП R8C и M16C доступ к переменным, квалифицируемым с помощью &lt;code&gt;__far&lt;/code&gt; , осуществляется с использованием 32-разрядных адресов, чтобы получить доступ к памяти за пределами первых 64 байтов Ki. Если &lt;code&gt;__far&lt;/code&gt; используется с вариантами ЦП M32CM или M32C, это не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="8646819484a9f2352804185ed962b1134d1b1e37" translate="yes" xml:space="preserve">
          <source>On the M32R/D, use this attribute to set the addressability of an object, and of the code generated for a function. The identifier &lt;var&gt;model-name&lt;/var&gt; is one of &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, or &lt;code&gt;large&lt;/code&gt;, representing each of the code models.</source>
          <target state="translated">На M32R / D используйте этот атрибут для установки адресуемости объекта и кода, созданного для функции. Идентификатор &lt;var&gt;model-name&lt;/var&gt; может быть &lt;code&gt;small&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; или &lt;code&gt;large&lt;/code&gt; , представляя каждую из моделей кода.</target>
        </trans-unit>
        <trans-unit id="9e52ddbba667c27e2e0b8a95a8956a520ea2f402" translate="yes" xml:space="preserve">
          <source>On the MIPS platform, there is related use for local register variables with slightly different characteristics (see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/MIPS-Coprocessors.html#MIPS-Coprocessors&quot;&gt;Defining coprocessor specifics for MIPS targets&lt;/a&gt; in GNU Compiler Collection (GCC) Internals).</source>
          <target state="translated">На платформе MIPS существует связанное использование переменных локальных регистров с немного разными характеристиками (см. &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/MIPS-Coprocessors.html#MIPS-Coprocessors&quot;&gt;Определение специфики сопроцессора для целей MIPS&lt;/a&gt; во внутренних компонентах GNU Compiler Collection (GCC)).</target>
        </trans-unit>
        <trans-unit id="7d84cba170c40b006fde2258af21b87e67ebfb09" translate="yes" xml:space="preserve">
          <source>On the MSP430 target these attributes can be used to specify whether the function or variable should be placed into low memory, high memory, or the placement should be left to the linker to decide. The attributes are only significant if compiling for the MSP430X architecture.</source>
          <target state="translated">На цели MSP430 эти атрибуты могут быть использованы для указания,должна ли функция или переменная быть помещена в низкую или высокую память,или размещение должно быть оставлено на усмотрение компоновщика.Атрибуты имеют значение только при компиляции для архитектуры MSP430X.</target>
        </trans-unit>
        <trans-unit id="d95670eabb89227c4ff1a457e8d12df37bee42fd" translate="yes" xml:space="preserve">
          <source>On the PowerPC Linux VSX targets, you can declare complex types using the corresponding internal complex type, &lt;code&gt;KCmode&lt;/code&gt; for &lt;code&gt;__float128&lt;/code&gt; type and &lt;code&gt;ICmode&lt;/code&gt; for &lt;code&gt;__ibm128&lt;/code&gt; type:</source>
          <target state="translated">На целевых PowerPC Linux VSX, вы можете объявить сложные типы с использованием соответствующего внутреннего сложного типа, &lt;code&gt;KCmode&lt;/code&gt; для &lt;code&gt;__float128&lt;/code&gt; типа и &lt;code&gt;ICmode&lt;/code&gt; для &lt;code&gt;__ibm128&lt;/code&gt; типа:</target>
        </trans-unit>
        <trans-unit id="f6000ef0ce4e92f4ee54acf70fa8700653c71a5b" translate="yes" xml:space="preserve">
          <source>On the PowerPC, the following options are allowed:</source>
          <target state="translated">На PowerPC разрешены следующие опции:</target>
        </trans-unit>
        <trans-unit id="86940e5138753858b6a6f91addcad4105a370c7f" translate="yes" xml:space="preserve">
          <source>On the PowerPC, the inliner does not inline a function that has different target options than the caller, unless the callee has a subset of the target options of the caller.</source>
          <target state="translated">В PowerPC встроенная функция не включает функцию,которая имеет другие целевые опции,чем вызывающий абонент,если только вызывающий абонент не имеет подмножества целевых опций вызывающего абонента.</target>
        </trans-unit>
        <trans-unit id="45c4a00032a0dce389cc7f9c888e279c99fc2d6e" translate="yes" xml:space="preserve">
          <source>On the R8000 CPU when multiply-accumulate instructions are used, the intermediate product is calculated to infinite precision and is not subject to the FCSR Flush to Zero bit. This may be undesirable in some circumstances. On other processors the result is numerically identical to the equivalent computation using separate multiply, add, subtract and negate instructions.</source>
          <target state="translated">На процессоре R8000 при использовании инструкций по многократному накоплению промежуточный продукт вычисляется с бесконечной точностью и не зависит от бита FCSR Flush to Zero.В некоторых случаях это может быть нежелательно.На других процессорах результат численно идентичен эквивалентному вычислению с использованием отдельных команд умножения,сложения,вычитания и отрицания.</target>
        </trans-unit>
        <trans-unit id="0c2723395c05076575d0edc1ba09dc0cbf5cf2e2" translate="yes" xml:space="preserve">
          <source>On the RL78 target, variables qualified with &lt;code&gt;__far&lt;/code&gt; are accessed with 32-bit pointers (20-bit addresses) rather than the default 16-bit addresses. Non-far variables are assumed to appear in the topmost 64 KiB of the address space.</source>
          <target state="translated">На целевом RL78, переменные квалифицированы с &lt;code&gt;__far&lt;/code&gt; доступны с 32-битовых указателей (20-разрядные адреса) , а не по умолчанию 16-битовых адресов в. Предполагается, что не дальние переменные находятся в самых верхних 64 КиБ адресного пространства.</target>
        </trans-unit>
        <trans-unit id="fd6f38b7027d1749320d26f46d1a28168c174ead" translate="yes" xml:space="preserve">
          <source>On the SH Symbian OS target the &lt;code&gt;dllimport&lt;/code&gt; attribute also has another affect&amp;mdash;it can cause the vtable and run-time type information for a class to be exported. This happens when the class has a dllimported constructor or a non-inline, non-pure virtual function and, for either of those two conditions, the class also has an inline constructor or destructor and has a key function that is defined in the current translation unit.</source>
          <target state="translated">В целевой ОС Symbian SH атрибут &lt;code&gt;dllimport&lt;/code&gt; также оказывает другое влияние - он может вызвать экспорт vtable и информации о типе времени выполнения для класса. Это происходит, когда в классе есть импортированный dll-конструктор или не встроенная, нечистая виртуальная функция, и для любого из этих двух условий класс также имеет встроенный конструктор или деструктор и ключевую функцию, которая определена в текущем переводе. Блок.</target>
        </trans-unit>
        <trans-unit id="cd5e8bc41b24a03848da023d0c42ed2a7835fd49" translate="yes" xml:space="preserve">
          <source>On the SH2A target, this attribute enables the high-speed register saving and restoration using a register bank for &lt;code&gt;interrupt_handler&lt;/code&gt; routines. Saving to the bank is performed automatically after the CPU accepts an interrupt that uses a register bank.</source>
          <target state="translated">На цели SH2A этот атрибут включает высокоскоростное сохранение и восстановление регистров с использованием банка регистров для подпрограмм &lt;code&gt;interrupt_handler&lt;/code&gt; . Сохранение в банк выполняется автоматически после того, как ЦП принимает прерывание, использующее банк регистров.</target>
        </trans-unit>
        <trans-unit id="f2adbfacdc8481145065b808452ffcbbe789d6e7" translate="yes" xml:space="preserve">
          <source>On the SPU target variables may be declared as belonging to another address space by qualifying the type with the &lt;code&gt;__ea&lt;/code&gt; address space identifier:</source>
          <target state="translated">В целевом &lt;code&gt;__ea&lt;/code&gt; SPU переменные могут быть объявлены как принадлежащие другому адресному пространству путем определения типа идентификатором адресного пространства __ea :</target>
        </trans-unit>
        <trans-unit id="583c1957eff9fd54fc7ba9d8a8ce5bd6cbbb0dbc" translate="yes" xml:space="preserve">
          <source>On the i386, x86_64, IA-64, and HP-UX targets, you can declare complex types using the corresponding internal complex type, &lt;code&gt;XCmode&lt;/code&gt; for &lt;code&gt;__float80&lt;/code&gt; type and &lt;code&gt;TCmode&lt;/code&gt; for &lt;code&gt;__float128&lt;/code&gt; type:</source>
          <target state="translated">На i386, x86_64, IA-64, и цели HP-UX, вы можете объявить сложные типы с использованием соответствующего внутреннего сложного типа, &lt;code&gt;XCmode&lt;/code&gt; для &lt;code&gt;__float80&lt;/code&gt; типа и &lt;code&gt;TCmode&lt;/code&gt; для &lt;code&gt;__float128&lt;/code&gt; типа:</target>
        </trans-unit>
        <trans-unit id="c654fceb0b13e0812db2eebf6209fb23d2a4245f" translate="yes" xml:space="preserve">
          <source>On the reduced Tiny devices like ATtiny40, no address spaces are supported. Just use vanilla C / C++ code without overhead as outlined above. Attribute &lt;code&gt;progmem&lt;/code&gt; is supported but works differently, see &lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt;AVR Variable Attributes&lt;/a&gt;.</source>
          <target state="translated">На миниатюрных устройствах типа ATtiny40 адресные пространства не поддерживаются. Просто используйте ванильный код C / C ++ без накладных расходов, как описано выше. &lt;code&gt;progmem&lt;/code&gt; атрибутов поддерживается, но работает по-другому, см. &lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt;Атрибуты переменных AVR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4951a4be95b4833eb07239f4a372cdd8f2448825" translate="yes" xml:space="preserve">
          <source>On the x86 target, variables may be declared as being relative to the &lt;code&gt;%fs&lt;/code&gt; or &lt;code&gt;%gs&lt;/code&gt; segments.</source>
          <target state="translated">На целевой платформе x86 переменные могут быть объявлены относящимися к сегментам &lt;code&gt;%fs&lt;/code&gt; или &lt;code&gt;%gs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="147636575199bc4c1463a6a96921cb3caf526a23" translate="yes" xml:space="preserve">
          <source>On the x86, the following options are allowed:</source>
          <target state="translated">На x86 разрешены следующие опции:</target>
        </trans-unit>
        <trans-unit id="04f0f8c579cd5c70473d51704cbf41abb08c9dc8" translate="yes" xml:space="preserve">
          <source>On the x86, the inliner does not inline a function that has different target options than the caller, unless the callee has a subset of the target options of the caller. For example a function declared with &lt;code&gt;target(&quot;sse3&quot;)&lt;/code&gt; can inline a function with &lt;code&gt;target(&quot;sse2&quot;)&lt;/code&gt;, since &lt;code&gt;-msse3&lt;/code&gt; implies &lt;code&gt;-msse2&lt;/code&gt;.</source>
          <target state="translated">На x86 встраиваемый модуль не встраивает функцию, которая имеет другие целевые параметры, чем вызывающая сторона, если только вызываемый объект не имеет подмножества целевых параметров вызывающей стороны. Например, функция, объявленная с помощью &lt;code&gt;target(&quot;sse3&quot;)&lt;/code&gt; может встроить функцию с &lt;code&gt;target(&quot;sse2&quot;)&lt;/code&gt; , поскольку &lt;code&gt;-msse3&lt;/code&gt; подразумевает &lt;code&gt;-msse2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c4f5a0b052b2a8060d4fded035d077e00490366" translate="yes" xml:space="preserve">
          <source>On the x86-32 targets, the &lt;code&gt;cdecl&lt;/code&gt; attribute causes the compiler to assume that the calling function pops off the stack space used to pass arguments. This is useful to override the effects of the</source>
          <target state="translated">На целевых объектах x86-32 атрибут &lt;code&gt;cdecl&lt;/code&gt; заставляет компилятор предполагать, что вызывающая функция выскакивает из пространства стека, используемого для передачи аргументов. Это полезно, чтобы переопределить эффекты</target>
        </trans-unit>
        <trans-unit id="ef036c2436b70e56f5d89ed3a4bd592468b97a24" translate="yes" xml:space="preserve">
          <source>On those ARM targets that support &lt;code&gt;dllimport&lt;/code&gt; (such as Symbian OS), you can use the &lt;code&gt;notshared&lt;/code&gt; attribute to indicate that the virtual table and other similar data for a class should not be exported from a DLL. For example:</source>
          <target state="translated">На тех целевых объектах ARM, которые поддерживают &lt;code&gt;dllimport&lt;/code&gt; (например, ОС Symbian), вы можете использовать атрибут &lt;code&gt;notshared&lt;/code&gt; , чтобы указать, что виртуальная таблица и другие аналогичные данные для класса не должны экспортироваться из DLL. Например:</target>
        </trans-unit>
        <trans-unit id="70eb4df699149cfe34494e2a2d4a3053eec54b36" translate="yes" xml:space="preserve">
          <source>On x86 targets, the &lt;code&gt;fentry_name&lt;/code&gt; attribute sets the function to call on function entry when function instrumentation is enabled with</source>
          <target state="translated">В целях x86 атрибут &lt;code&gt;fentry_name&lt;/code&gt; устанавливает функцию для вызова при входе в функцию, когда инструментирование функции включено с помощью</target>
        </trans-unit>
        <trans-unit id="3c3e4dc55159d733bc6d8174d6c0b4b44576b30b" translate="yes" xml:space="preserve">
          <source>On x86 targets, the &lt;code&gt;fentry_section&lt;/code&gt; attribute sets the name of the section to record function entry instrumentation calls in when enabled with</source>
          <target state="translated">На целевых устройствах &lt;code&gt;fentry_section&lt;/code&gt; атрибут fentry_section устанавливает имя раздела для записи вызовов инструментария ввода функций, когда он включен с помощью</target>
        </trans-unit>
        <trans-unit id="13bdaf45293e8c14caaa41c024215d1502f9dedd" translate="yes" xml:space="preserve">
          <source>On x86 targets, the &lt;code&gt;force_align_arg_pointer&lt;/code&gt; attribute may be applied to individual function definitions, generating an alternate prologue and epilogue that realigns the run-time stack if necessary. This supports mixing legacy codes that run with a 4-byte aligned stack with modern codes that keep a 16-byte stack for SSE compatibility.</source>
          <target state="translated">В целях x86 атрибут &lt;code&gt;force_align_arg_pointer&lt;/code&gt; может применяться к определениям отдельных функций, генерируя альтернативный пролог и эпилог, которые при необходимости перестраивают стек времени выполнения. Это поддерживает смешивание устаревших кодов, которые работают с 4-байтовым выровненным стеком, с современными кодами, которые поддерживают 16-байтовый стек для совместимости с SSE.</target>
        </trans-unit>
        <trans-unit id="4b9b1df237cb48ab5b390c563b9173f28432ce30" translate="yes" xml:space="preserve">
          <source>On x86 targets, the &lt;code&gt;function_return&lt;/code&gt; attribute causes the compiler to convert function return with &lt;var&gt;choice&lt;/var&gt;. &amp;lsquo;</source>
          <target state="translated">В целях x86 атрибут &lt;code&gt;function_return&lt;/code&gt; заставляет компилятор преобразовывать возврат функции с &lt;var&gt;choice&lt;/var&gt; . '</target>
        </trans-unit>
        <trans-unit id="e98109b32d764a6aa78e38267f8fd0b80deffe59" translate="yes" xml:space="preserve">
          <source>On x86 targets, the &lt;code&gt;indirect_branch&lt;/code&gt; attribute causes the compiler to convert indirect call and jump with &lt;var&gt;choice&lt;/var&gt;. &amp;lsquo;</source>
          <target state="translated">На x86 целей, то &lt;code&gt;indirect_branch&lt;/code&gt; атрибут заставляет компилятор для преобразования косвенную вызова и прыгать с &lt;var&gt;choice&lt;/var&gt; . '</target>
        </trans-unit>
        <trans-unit id="6debaf7293c72e5d4ef579b9583d9c54220aa952" translate="yes" xml:space="preserve">
          <source>On x86 targets, there are several rules on the usage of stack-like registers in the operands of an &lt;code&gt;asm&lt;/code&gt;. These rules apply only to the operands that are stack-like registers:</source>
          <target state="translated">В целях x86 существует несколько правил использования стековых регистров в операндах &lt;code&gt;asm&lt;/code&gt; . Эти правила применяются только к операндам, которые являются стековыми регистрами:</target>
        </trans-unit>
        <trans-unit id="0a9ad2d6b1a6892ed184c51d63255bdbba6feecb" translate="yes" xml:space="preserve">
          <source>On x86-32 targets with SSE support, the &lt;code&gt;sseregparm&lt;/code&gt; attribute causes the compiler to pass up to 3 floating-point arguments in SSE registers instead of on the stack. Functions that take a variable number of arguments continue to pass all of their floating-point arguments on the stack.</source>
          <target state="translated">В целях x86-32 с поддержкой SSE атрибут &lt;code&gt;sseregparm&lt;/code&gt; заставляет компилятор передавать до 3 аргументов с плавающей запятой в регистрах SSE, а не в стеке. Функции, которые принимают переменное количество аргументов, продолжают передавать все свои аргументы с плавающей запятой в стек.</target>
        </trans-unit>
        <trans-unit id="b5b62a62d6592728c9f30e63c3f3d4654c7cba4c" translate="yes" xml:space="preserve">
          <source>On x86-32 targets, the &lt;code&gt;fastcall&lt;/code&gt; attribute causes the compiler to pass the first argument (if of integral type) in the register ECX and the second argument (if of integral type) in the register EDX. Subsequent and other typed arguments are passed on the stack. The called function pops the arguments off the stack. If the number of arguments is variable all arguments are pushed on the stack.</source>
          <target state="translated">В целях x86-32 атрибут &lt;code&gt;fastcall&lt;/code&gt; заставляет компилятор передавать первый аргумент (если он целочисленного типа) в регистре ECX и второй аргумент (если он целочисленного типа) в регистре EDX. Последующие и другие типизированные аргументы передаются в стек. Вызываемая функция извлекает аргументы из стека. Если количество аргументов переменное, все аргументы помещаются в стек.</target>
        </trans-unit>
        <trans-unit id="cbd1fa07b20b0b27ba6acba6bf923a6e60833164" translate="yes" xml:space="preserve">
          <source>On x86-32 targets, the &lt;code&gt;regparm&lt;/code&gt; attribute causes the compiler to pass arguments number one to &lt;var&gt;number&lt;/var&gt; if they are of integral type in registers EAX, EDX, and ECX instead of on the stack. Functions that take a variable number of arguments continue to be passed all of their arguments on the stack.</source>
          <target state="translated">На целевых объектах x86-32 атрибут &lt;code&gt;regparm&lt;/code&gt; заставляет компилятор передавать аргументы номер один в &lt;var&gt;number&lt;/var&gt; если они имеют целочисленный тип в регистрах EAX, EDX и ECX, а не в стеке. Функции, которые принимают переменное количество аргументов, продолжают передавать все свои аргументы в стек.</target>
        </trans-unit>
        <trans-unit id="3ff7dde95e04753c9aa0506316b6827d1c04e392" translate="yes" xml:space="preserve">
          <source>On x86-32 targets, the &lt;code&gt;stdcall&lt;/code&gt; attribute causes the compiler to assume that the called function pops off the stack space used to pass arguments, unless it takes a variable number of arguments.</source>
          <target state="translated">В целях x86-32 атрибут &lt;code&gt;stdcall&lt;/code&gt; заставляет компилятор предполагать, что вызываемая функция выскакивает из пространства стека, используемого для передачи аргументов, если только она не принимает переменное количество аргументов.</target>
        </trans-unit>
        <trans-unit id="7e68005038eba79aa520fa3e9f1d5a1f549a6854" translate="yes" xml:space="preserve">
          <source>On x86-32 targets, the &lt;code&gt;thiscall&lt;/code&gt; attribute causes the compiler to pass the first argument (if of integral type) in the register ECX. Subsequent and other typed arguments are passed on the stack. The called function pops the arguments off the stack. If the number of arguments is variable all arguments are pushed on the stack. The &lt;code&gt;thiscall&lt;/code&gt; attribute is intended for C++ non-static member functions. As a GCC extension, this calling convention can be used for C functions and for static member methods.</source>
          <target state="translated">В целях x86-32 атрибут &lt;code&gt;thiscall&lt;/code&gt; заставляет компилятор передавать первый аргумент (если он целочисленного типа) в регистре ECX. Последующие и другие типизированные аргументы передаются в стек. Вызываемая функция извлекает аргументы из стека. Если количество аргументов переменное, все аргументы помещаются в стек. &lt;code&gt;thiscall&lt;/code&gt; атрибут предназначен для функций нестатических членов C ++. Как расширение GCC, это соглашение о вызовах может использоваться для функций C и для статических методов-членов.</target>
        </trans-unit>
        <trans-unit id="4c75d4c9c1f7232a6ff5a36eb71f949d09c252de" translate="yes" xml:space="preserve">
          <source>On x86-32 targets, you can use this attribute to control how aggregates are returned in memory. If the caller is responsible for popping the hidden pointer together with the rest of the arguments, specify &lt;var&gt;number&lt;/var&gt; equal to zero. If callee is responsible for popping the hidden pointer, specify &lt;var&gt;number&lt;/var&gt; equal to one.</source>
          <target state="translated">В целях x86-32 вы можете использовать этот атрибут для управления тем, как агрегаты возвращаются в память. Если вызывающий отвечает за появление скрытого указателя вместе с остальными аргументами, укажите &lt;var&gt;number&lt;/var&gt; равное нулю. Если вызываемый отвечает за появление скрытого указателя, укажите &lt;var&gt;number&lt;/var&gt; равное единице.</target>
        </trans-unit>
        <trans-unit id="4fecb03395dc1395498320fbdf3198613b4b8a60" translate="yes" xml:space="preserve">
          <source>On x86-64,</source>
          <target state="translated">На x86-64,</target>
        </trans-unit>
        <trans-unit id="42dd75ddf8dffa70aaf71424d90322dc968acd07" translate="yes" xml:space="preserve">
          <source>Once you know these things about how your code works when compiled, you can look at each module to see which modules should be optimized. &lt;code&gt;gcov&lt;/code&gt; helps you determine where to work on optimization.</source>
          <target state="translated">Как только вы узнаете эти вещи о том, как работает ваш код при компиляции, вы можете посмотреть на каждый модуль, чтобы увидеть, какие модули следует оптимизировать. &lt;code&gt;gcov&lt;/code&gt; поможет вам определить, где работать над оптимизацией.</target>
        </trans-unit>
        <trans-unit id="7b43238f6f78aaf633ee23a498072b63cc24feec" translate="yes" xml:space="preserve">
          <source>One 16x16 multiplier, blocking, sequential. The following instructions are additionally enabled: &lt;code&gt;mpy&lt;/code&gt;, &lt;code&gt;mpyu&lt;/code&gt;, &lt;code&gt;mpym&lt;/code&gt;, &lt;code&gt;mpymu&lt;/code&gt;, and &lt;code&gt;mpy_s&lt;/code&gt;.</source>
          <target state="translated">Один множитель 16x16, блокирующий, последовательный. Дополнительно включены следующие инструкции: &lt;code&gt;mpy&lt;/code&gt; , &lt;code&gt;mpyu&lt;/code&gt; , &lt;code&gt;mpym&lt;/code&gt; , &lt;code&gt;mpymu&lt;/code&gt; и &lt;code&gt;mpy_s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21c409760c2daeb8e7cc4e16b05141d45f49a9c8" translate="yes" xml:space="preserve">
          <source>One 32x4 multiplier, blocking, sequential. The following instructions are additionally enabled: &lt;code&gt;mpy&lt;/code&gt;, &lt;code&gt;mpyu&lt;/code&gt;, &lt;code&gt;mpym&lt;/code&gt;, &lt;code&gt;mpymu&lt;/code&gt;, and &lt;code&gt;mpy_s&lt;/code&gt;.</source>
          <target state="translated">Один множитель 32х4, блокирующий, последовательный. Дополнительно включены следующие инструкции: &lt;code&gt;mpy&lt;/code&gt; , &lt;code&gt;mpyu&lt;/code&gt; , &lt;code&gt;mpym&lt;/code&gt; , &lt;code&gt;mpymu&lt;/code&gt; и &lt;code&gt;mpy_s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="849f208cf290b5367e3408ce32e8d353040bdae1" translate="yes" xml:space="preserve">
          <source>One attribute is currently defined for the M32R/D.</source>
          <target state="translated">В настоящее время для M32R/D определен один атрибут.</target>
        </trans-unit>
        <trans-unit id="40fe184b70220276317c0b61fedbed3c3b9cb8e1" translate="yes" xml:space="preserve">
          <source>One attribute is currently defined for xstormy16 configurations: &lt;code&gt;below100&lt;/code&gt;.</source>
          <target state="translated">В настоящее время для конфигураций &lt;code&gt;below100&lt;/code&gt; определен один атрибут: ниже100 .</target>
        </trans-unit>
        <trans-unit id="1dd2f15e1e49aa3a60aafa7cc37a3dcdf9c0a48d" translate="yes" xml:space="preserve">
          <source>One consequence is that you cannot call &lt;code&gt;mktemp&lt;/code&gt; with a string constant argument. The function &lt;code&gt;mktemp&lt;/code&gt; always alters the string its argument points to.</source>
          <target state="translated">Одним из следствий этого является то, что вы не можете вызвать &lt;code&gt;mktemp&lt;/code&gt; с аргументом строковой константы. Функция &lt;code&gt;mktemp&lt;/code&gt; всегда изменяет строку, на которую указывает ее аргумент.</target>
        </trans-unit>
        <trans-unit id="44bd2c18671505607165541a387b3b6df0ee2e30" translate="yes" xml:space="preserve">
          <source>One drawback to using this attribute is that a pointer to a &lt;em&gt;variable&lt;/em&gt; marked as &lt;code&gt;dllimport&lt;/code&gt; cannot be used as a constant address. However, a pointer to a &lt;em&gt;function&lt;/em&gt; with the &lt;code&gt;dllimport&lt;/code&gt; attribute can be used as a constant initializer; in this case, the address of a stub function in the import lib is referenced. On Microsoft Windows targets, the attribute can be disabled for functions by setting the</source>
          <target state="translated">Один из недостатков использования этого атрибута заключается в том, что указатель на &lt;em&gt;переменную,&lt;/em&gt; помеченную как &lt;code&gt;dllimport&lt;/code&gt; , не может использоваться в качестве постоянного адреса. Однако указатель на &lt;em&gt;функцию&lt;/em&gt; с атрибутом &lt;code&gt;dllimport&lt;/code&gt; можно использовать в качестве инициализатора константы; в этом случае указывается адрес функции-заглушки в библиотеке импорта. В целях Microsoft Windows атрибут можно отключить для функций, установив</target>
        </trans-unit>
        <trans-unit id="eec865ab9ca221fb872ddd30d1cd51ca9cd6aa48" translate="yes" xml:space="preserve">
          <source>One final built-in function has been added that returns the value of the 2-bit Transaction State field of the Machine Status Register (MSR) as stored in &lt;code&gt;CR0&lt;/code&gt;.</source>
          <target state="translated">Была добавлена ​​последняя встроенная функция, которая возвращает значение 2-битного поля состояния транзакции регистра состояния машины (MSR), хранящееся в &lt;code&gt;CR0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1bb56d3e41b8821842eef1d720c3d75aea46a37" translate="yes" xml:space="preserve">
          <source>One of the low eight SVE predicate registers (&lt;code&gt;P0&lt;/code&gt; to &lt;code&gt;P7&lt;/code&gt;)</source>
          <target state="translated">Один из восьми младших регистров предиката SVE (от &lt;code&gt;P0&lt;/code&gt; до &lt;code&gt;P7&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="64b686b9cc394ce49f58ad2185501cf7ed15c7d0" translate="yes" xml:space="preserve">
          <source>One of the standard libraries bypassed by</source>
          <target state="translated">Одна из стандартных библиотек в обход</target>
        </trans-unit>
        <trans-unit id="02b57e3d25b1b84de7aa1ea5322739942677791f" translate="yes" xml:space="preserve">
          <source>One or more of the following option keywords can be used to describe a group of optimizations:</source>
          <target state="translated">Для описания группы оптимизаций можно использовать одно или несколько из следующих ключевых слов опции:</target>
        </trans-unit>
        <trans-unit id="55a0fb6dad6e34221933361d3e31d20be49bd376" translate="yes" xml:space="preserve">
          <source>One or more qualifiers: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;dynamic&lt;/code&gt;, &lt;code&gt;bounded&lt;/code&gt;.</source>
          <target state="translated">Один или несколько квалификаторов: &lt;code&gt;static&lt;/code&gt; , &lt;code&gt;dynamic&lt;/code&gt; , &lt;code&gt;bounded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56bb919cccd4e254306e243c0906992cea6d6640" translate="yes" xml:space="preserve">
          <source>One such case is immediately following an &lt;code&gt;asm&lt;/code&gt; statement that either never terminates, or one that transfers control elsewhere and never returns. In this example, without the &lt;code&gt;__builtin_unreachable&lt;/code&gt;, GCC issues a warning that control reaches the end of a non-void function. It also generates code to return after the &lt;code&gt;asm&lt;/code&gt;.</source>
          <target state="translated">Один из таких случаев следует сразу за оператором &lt;code&gt;asm&lt;/code&gt; , который либо никогда не завершается, либо передает управление в другое место и никогда не возвращается. В этом примере без &lt;code&gt;__builtin_unreachable&lt;/code&gt; GCC выдает предупреждение о том, что элемент управления достигает конца непустой функции. Он также генерирует код для возврата после &lt;code&gt;asm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfb62f38764ce598607e81e73ef5564abcafbf10" translate="yes" xml:space="preserve">
          <source>One typical use case for this built-in is adjusting input and output values to non-contiguous port layouts. Some examples:</source>
          <target state="translated">Типичным случаем использования этого встроенного устройства является настройка входных и выходных значений в соответствии с несмежными схемами расположения портов.Некоторые примеры:</target>
        </trans-unit>
        <trans-unit id="cdc3d4316f37caecddf4da207a8a333a1f06f1e6" translate="yes" xml:space="preserve">
          <source>One way of using these constants is in initializing a static array that serves as a jump table:</source>
          <target state="translated">Одним из способов использования этих констант является инициализация статического массива,который служит в качестве таблицы скачков:</target>
        </trans-unit>
        <trans-unit id="4abf320685928f7114b2a671b0c8e5d78f023c66" translate="yes" xml:space="preserve">
          <source>One way to solve this problem is to compile your entire program with GCC. Another solution is to modify the function that is compiled with Sun CC to copy the argument into a local variable; local variables are always properly aligned. A third solution is to modify the function that uses the pointer to dereference it via the following function &lt;code&gt;access_double&lt;/code&gt; instead of directly with &amp;lsquo;</source>
          <target state="translated">Один из способов решить эту проблему - скомпилировать всю вашу программу с помощью GCC. Другое решение - изменить функцию, скомпилированную с Sun CC, чтобы скопировать аргумент в локальную переменную; локальные переменные всегда правильно выровнены. Третье решение - изменить функцию, которая использует указатель для разыменования, с помощью следующей функции &lt;code&gt;access_double&lt;/code&gt; , а не напрямую с помощью '</target>
        </trans-unit>
        <trans-unit id="11c60f443d3a43430190f5782a8be8122d41c489" translate="yes" xml:space="preserve">
          <source>One workaround is to insert cache barrier instructions before every memory access that might be speculatively executed and that might have side effects even if aborted.</source>
          <target state="translated">Одним из обходных путей является вставка инструкций барьера кэша перед каждым доступом к памяти,который может быть выполнен спекулятивно,и который может иметь побочные эффекты,даже если он прерван.</target>
        </trans-unit>
        <trans-unit id="46fd9a138136ce012f77c2ad875a236ea7641073" translate="yes" xml:space="preserve">
          <source>One&amp;rsquo;s complement of a 6-bit unsigned integer constant.</source>
          <target state="translated">Дополнение к 6-битовой целочисленной константе без знака.</target>
        </trans-unit>
        <trans-unit id="09ff598dbd1dd52bba3a7ce58edc2ab65caf114c" translate="yes" xml:space="preserve">
          <source>One-bit boolean register</source>
          <target state="translated">Одноразрядный логический регистр</target>
        </trans-unit>
        <trans-unit id="b86152f3b7cb1fd57d0957c837b7a02e1c1edec1" translate="yes" xml:space="preserve">
          <source>Only available if either</source>
          <target state="translated">Доступно только в том случае,если и то,и другое</target>
        </trans-unit>
        <trans-unit id="fa0e52cdfb683b064ba9081fec281277ab21b369" translate="yes" xml:space="preserve">
          <source>Only available with</source>
          <target state="translated">Только в случае,если</target>
        </trans-unit>
        <trans-unit id="d8174cb5b4a5090a1c9f6528e9032514840b01a2" translate="yes" xml:space="preserve">
          <source>Only change the lower 8 bits of the stack pointer.</source>
          <target state="translated">Меняйте только нижние 8 бит указателя стека.</target>
        </trans-unit>
        <trans-unit id="fa1093075a5bab803d61da780f973e8e456e21b9" translate="yes" xml:space="preserve">
          <source>Only enable inlining and cloning optimizations, which includes inlining, cloning, interprocedural scalar replacement of aggregates and partial inlining. As a result, when patching a function, all its callers and its clones&amp;rsquo; callers are impacted, therefore need to be patched as well.</source>
          <target state="translated">Включите только оптимизацию встраивания и клонирования, которая включает в себя встраивание, клонирование, межпроцедурную скалярную замену агрегатов и частичное встраивание. В результате при исправлении функции все ее вызывающие и вызывающие клоны затрагиваются, поэтому их также необходимо исправлять.</target>
        </trans-unit>
        <trans-unit id="98cdd885ed933d2b0d71761a5e0e3218cffb4c2b" translate="yes" xml:space="preserve">
          <source>Only enable inlining of static functions. As a result, when patching a static function, all its callers are impacted and so need to be patched as well.</source>
          <target state="translated">Включайте только встроенные статические функции.В результате,при исправлении статической функции,все вызывающие ее абоненты подвергаются воздействию и поэтому также нуждаются в исправлении.</target>
        </trans-unit>
        <trans-unit id="a790c727dbde2c9153b76b5c8a491055c1c24680" translate="yes" xml:space="preserve">
          <source>Only generate absolute relocations on word-sized values (i.e. R_ARM_ABS32). This is enabled by default on targets (uClinux, SymbianOS) where the runtime loader imposes this restriction, and when</source>
          <target state="translated">Генерируют абсолютные перемещения только на значениях в формате слова (т.е.R_ARM_ABS32).По умолчанию это включено для целей (uClinux,SymbianOS),где загрузчик времени выполнения накладывает это ограничение,и когда</target>
        </trans-unit>
        <trans-unit id="69487605cf89b2b25fc2b6052bd8701c5c25ea67" translate="yes" xml:space="preserve">
          <source>Only meaningful in line-wrapping mode. Instructs the diagnostic messages reporter to emit source location information &lt;em&gt;once&lt;/em&gt;; that is, in case the message is too long to fit on a single physical line and has to be wrapped, the source location won&amp;rsquo;t be emitted (as prefix) again, over and over, in subsequent continuation lines. This is the default behavior.</source>
          <target state="translated">Имеет смысл только в режиме переноса строк. Дает указание репортеру диагностических сообщений выдать информацию о местонахождении источника &lt;em&gt;один раз&lt;/em&gt; ; то есть в случае, если сообщение слишком длинное, чтобы поместиться в одной физической строке и должно быть упаковано, исходное местоположение не будет передаваться (как префикс) снова и снова в последующих строках продолжения. Это поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ebd505efc7bd99f753105955cdf89673e5640a71" translate="yes" xml:space="preserve">
          <source>Only meaningful in line-wrapping mode. Instructs the diagnostic messages reporter to emit the same source location information (as prefix) for physical lines that result from the process of breaking a message which is too long to fit on a single line.</source>
          <target state="translated">Имеет смысл только в режиме упаковки в линию.Поручает отчетчику диагностических сообщений выдавать одну и ту же информацию о местоположении источника (в качестве префикса)для физических строк,которые появляются в результате процесса обрывания сообщения,которое слишком длинное,чтобы поместиться в одну строку.</target>
        </trans-unit>
        <trans-unit id="330993f6286aa72148d14226b91455d3ac494a8c" translate="yes" xml:space="preserve">
          <source>Only one precompiled header can be used in a particular compilation.</source>
          <target state="translated">Только один прекомпилированный заголовок может быть использован в конкретной компиляции.</target>
        </trans-unit>
        <trans-unit id="0c89e84df5b584e830b8d2d2e716a4ce60df935f" translate="yes" xml:space="preserve">
          <source>Only output information about source files with a relative pathname (after source prefix elision). Absolute paths are usually system header files and coverage of any inline functions therein is normally uninteresting.</source>
          <target state="translated">Выводить только информацию об исходных файлах с относительным именем (после элиминации исходного префикса).Абсолютные пути обычно являются системными заголовочными файлами,и покрытие любых встроенных в них функций обычно неинтересно.</target>
        </trans-unit>
        <trans-unit id="72274ff34b747c56a57940685e3ffdf10da20513" translate="yes" xml:space="preserve">
          <source>Only print info for hot objects/functions.</source>
          <target state="translated">Печать информации только для горячих объектов/функций.</target>
        </trans-unit>
        <trans-unit id="8b24ee9bfdf40f46680f47de16c5081b87003895" translate="yes" xml:space="preserve">
          <source>Only use the first 32 general-purpose registers.</source>
          <target state="translated">Используйте только первые 32 регистра общего назначения.</target>
        </trans-unit>
        <trans-unit id="338aae9daa260c2c83f7e418040b21c679f46883" translate="yes" xml:space="preserve">
          <source>Only use these options when there are significant benefits from doing so. When you specify these options, the assembler and linker create larger object and executable files and are also slower. These options affect code generation. They prevent optimizations by the compiler and assembler using relative locations inside a translation unit since the locations are unknown until link time. An example of such an optimization is relaxing calls to short call instructions.</source>
          <target state="translated">Используйте эти опции только тогда,когда от этого есть значительная выгода.Когда вы указываете эти опции,ассемблер и компоновщик создают более крупные объектные и исполняемые файлы,а также работают медленнее.Эти опции влияют на генерацию кода.Они предотвращают оптимизацию компилятором и ассемблером,использующими относительные местоположения внутри модуля трансляции,так как местоположения неизвестны до времени компоновки.Примером такой оптимизации может служить расслабляющий вызов коротких инструкций по вызову.</target>
        </trans-unit>
        <trans-unit id="7b26ac27e9054975e1b8c28c749dd8e60046db26" translate="yes" xml:space="preserve">
          <source>Only valid if the &amp;lsquo;</source>
          <target state="translated">Действительно, только если '</target>
        </trans-unit>
        <trans-unit id="a24c971c70af3e6d67c9922de68be68fd14aa925" translate="yes" xml:space="preserve">
          <source>Only valid with</source>
          <target state="translated">Действительно только в том случае,если</target>
        </trans-unit>
        <trans-unit id="4f3ef120810b89335683d19761269a1b29d439b1" translate="yes" xml:space="preserve">
          <source>OpenRISC&amp;mdash;</source>
          <target state="translated">OpenRISC&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="ff04060b9cdf50d21da510eb2aee82a293b79942" translate="yes" xml:space="preserve">
          <source>Operand</source>
          <target state="translated">Operand</target>
        </trans-unit>
        <trans-unit id="96c8142487d93ded6eed966e1c94866edb7f6ce0" translate="yes" xml:space="preserve">
          <source>Operands are separated by commas. Each operand has this format:</source>
          <target state="translated">Оперы разделяются запятыми.Каждый операнд имеет такой формат:</target>
        </trans-unit>
        <trans-unit id="67c4124aaeb7fa5b37a4c13183fee8472dbd34a2" translate="yes" xml:space="preserve">
          <source>Operands that satisfy &amp;rsquo;m&amp;rsquo; when -mpcrel is in effect</source>
          <target state="translated">Операнды, удовлетворяющие 'm', когда действует -mpcrel</target>
        </trans-unit>
        <trans-unit id="f223672699f4c0fd304046c8f55c3a8a822eafba" translate="yes" xml:space="preserve">
          <source>Operands that satisfy &amp;rsquo;s&amp;rsquo; when -mpcrel is not in effect</source>
          <target state="translated">Операнды, удовлетворяющие 's', когда -mpcrel не действует</target>
        </trans-unit>
        <trans-unit id="a6a1e6ee77f32bbfca88fdb0ed00cdafe059d583" translate="yes" xml:space="preserve">
          <source>Operands using the &amp;lsquo;</source>
          <target state="translated">Операнды, использующие '</target>
        </trans-unit>
        <trans-unit id="dd2427f9810f7d01de4920a5fbaf944c75db0f9b" translate="yes" xml:space="preserve">
          <source>Optimization Options</source>
          <target state="translated">Оптимизация Опции оптимизации</target>
        </trans-unit>
        <trans-unit id="cab9c4fb94627ad4002c4f07a4e254f1d83181e5" translate="yes" xml:space="preserve">
          <source>Optimize debugging experience.</source>
          <target state="translated">Оптимизировать опыт отладки.</target>
        </trans-unit>
        <trans-unit id="f6711b309c1e96e21f6e3fd3f0f4cca8b00ad887" translate="yes" xml:space="preserve">
          <source>Optimize even more. GCC performs nearly all supported optimizations that do not involve a space-speed tradeoff. As compared to</source>
          <target state="translated">Оптимизировать еще больше.GCC выполняет почти все поддерживаемые оптимизации,которые не предполагают компромиссов между космической скоростью и скоростью.По сравнению с</target>
        </trans-unit>
        <trans-unit id="115cffa4f350df63881ca8bb33b21ff035557045" translate="yes" xml:space="preserve">
          <source>Optimize for &lt;var&gt;arch&lt;/var&gt;. Among other things, this option controls the way instructions are scheduled, and the perceived cost of arithmetic operations. The list of &lt;var&gt;arch&lt;/var&gt; values is the same as for</source>
          <target state="translated">Оптимизировать для &lt;var&gt;arch&lt;/var&gt; . Среди прочего, этот параметр контролирует способ планирования инструкций и предполагаемую стоимость арифметических операций. Список значений &lt;var&gt;arch&lt;/var&gt; такой же, как и для</target>
        </trans-unit>
        <trans-unit id="00bcbcf49330fd5cd07800c1cc402ad50059a9a8" translate="yes" xml:space="preserve">
          <source>Optimize for size.</source>
          <target state="translated">Оптимизировать под размер.</target>
        </trans-unit>
        <trans-unit id="b1f0ff5d58183a1211bf6345ec617611e6079a6c" translate="yes" xml:space="preserve">
          <source>Optimize sibling and tail recursive calls.</source>
          <target state="translated">Оптимизация рекурсивных звонков братьев и сестер и хвоста.</target>
        </trans-unit>
        <trans-unit id="82acb86d67d8f7c979237a3f9d5995187b58bb34" translate="yes" xml:space="preserve">
          <source>Optimize the output for the given processor, specified by microarchitecture name. Permissible values for this option are: &amp;lsquo;</source>
          <target state="translated">Оптимизировать вывод для данного процессора, заданного именем микроархитектуры. Допустимые значения для этой опции: '</target>
        </trans-unit>
        <trans-unit id="beede52c02c3ccdc57d067263b0592c5c5870f64" translate="yes" xml:space="preserve">
          <source>Optimize the prologue of variadic argument functions with respect to usage of those arguments.</source>
          <target state="translated">Оптимизация пролога функций variadic argument относительно использования этих аргументов.</target>
        </trans-unit>
        <trans-unit id="8091cf8a7f45d51dd71bbe1a181b77efee3b92fa" translate="yes" xml:space="preserve">
          <source>Optimize various standard C string functions (e.g. &lt;code&gt;strlen&lt;/code&gt;, &lt;code&gt;strchr&lt;/code&gt; or &lt;code&gt;strcpy&lt;/code&gt;) and their &lt;code&gt;_FORTIFY_SOURCE&lt;/code&gt; counterparts into faster alternatives.</source>
          <target state="translated">Оптимизируйте различные стандартные строковые функции C (например, &lt;code&gt;strlen&lt;/code&gt; , &lt;code&gt;strchr&lt;/code&gt; или &lt;code&gt;strcpy&lt;/code&gt; ) и их аналоги &lt;code&gt;_FORTIFY_SOURCE&lt;/code&gt; в более быстрые альтернативы.</target>
        </trans-unit>
        <trans-unit id="313c197a1bf79c8cb464f9108769008bb606d983" translate="yes" xml:space="preserve">
          <source>Optimize yet more.</source>
          <target state="translated">Оптимизируй еще больше.</target>
        </trans-unit>
        <trans-unit id="913d9fd2399cdf6e86c3e975d0cc5dad07465ec2" translate="yes" xml:space="preserve">
          <source>Optimize. Optimizing compilation takes somewhat more time, and a lot more memory for a large function.</source>
          <target state="translated">Оптимизируй.Оптимизация компиляции занимает несколько больше времени,а для большой функции гораздо больше памяти.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="2c7ca22e5600046b144f3d24624f25c564332dee" translate="yes" xml:space="preserve">
          <source>Option Index</source>
          <target state="translated">Опционный индекс</target>
        </trans-unit>
        <trans-unit id="c12455d26a0da53c0d68029c9bf0819232e1f305" translate="yes" xml:space="preserve">
          <source>Options in &lt;var&gt;file&lt;/var&gt; are separated by whitespace. A whitespace character may be included in an option by surrounding the entire option in either single or double quotes. Any character (including a backslash) may be included by prefixing the character to be included with a backslash. The &lt;var&gt;file&lt;/var&gt; may itself contain additional @&lt;var&gt;file&lt;/var&gt; options; any such options will be processed recursively.</source>
          <target state="translated">Параметры в &lt;var&gt;file&lt;/var&gt; разделяются пробелом. Пробельный символ может быть включен в параметр, заключив весь параметр в одинарные или двойные кавычки. Любой символ (в том числе обратная косая черта) может быть включен, добавив перед символом обратную косую черту. Сам &lt;var&gt;file&lt;/var&gt; может содержать дополнительные параметры @ &lt;var&gt;file&lt;/var&gt; ; любые такие параметры будут обрабатываться рекурсивно.</target>
        </trans-unit>
        <trans-unit id="4660151a0ebf47062b565d717689e53cf9ce9103" translate="yes" xml:space="preserve">
          <source>Options of the form</source>
          <target state="translated">Варианты формы</target>
        </trans-unit>
        <trans-unit id="23bd069950c6d99802ae19186b5b3c8a35033589" translate="yes" xml:space="preserve">
          <source>Original Intel i386 CPU.</source>
          <target state="translated">Оригинальный процессор Intel i386.</target>
        </trans-unit>
        <trans-unit id="1a9a54bb04ec8317f6fd027b56dada4bf5eca84f" translate="yes" xml:space="preserve">
          <source>Os</source>
          <target state="translated">Os</target>
        </trans-unit>
        <trans-unit id="18bee9973a249c2e29e697cfeb7c675bf6ae3fa7" translate="yes" xml:space="preserve">
          <source>Other Alpha compilers provide the equivalent options called</source>
          <target state="translated">Другие компиляторы Alpha предоставляют эквивалентные опции под названием</target>
        </trans-unit>
        <trans-unit id="cd2bf473aa5d5250266aacf77c308456d1faabee" translate="yes" xml:space="preserve">
          <source>Other C compilers won&amp;rsquo;t accept these alternative keywords; if you want to compile with another compiler, you can define the alternate keywords as macros to replace them with the customary keywords. It looks like this:</source>
          <target state="translated">Другие компиляторы C не примут эти альтернативные ключевые слова; если вы хотите скомпилировать с другим компилятором, вы можете определить альтернативные ключевые слова как макросы, чтобы заменить их обычными ключевыми словами. Выглядит это так:</target>
        </trans-unit>
        <trans-unit id="0ffe248f8b25bb61e4c3f0c71863b1ea1b623bad" translate="yes" xml:space="preserve">
          <source>Other C++ compilers may not correctly implement the standard behavior. As a result, when you switch to &lt;code&gt;g++&lt;/code&gt; from one of these compilers, you may discover that a program that appeared to work correctly in fact does not conform to the standard: &lt;code&gt;g++&lt;/code&gt; reports as undefined symbols any static data members that lack definitions.</source>
          <target state="translated">Другие компиляторы C ++ могут неправильно реализовать стандартное поведение. В результате, когда вы переключаетесь на &lt;code&gt;g++&lt;/code&gt; из одного из этих компиляторов, вы можете обнаружить, что программа, которая работала правильно, на самом деле не соответствует стандарту: &lt;code&gt;g++&lt;/code&gt; сообщает как неопределенные символы любые статические элементы данных, не имеющие определений.</target>
        </trans-unit>
        <trans-unit id="f7754320d0468c70e98bda0da0fe360c850f2c18" translate="yes" xml:space="preserve">
          <source>Other VR4120 errata require a NOP to be inserted between certain pairs of instructions. These errata are handled by the assembler, not by GCC itself.</source>
          <target state="translated">Другие ошибки VR4120 требуют вставки NOP между определенными парами инструкций.Эти ошибки обрабатываются ассемблером,а не самим GCC.</target>
        </trans-unit>
        <trans-unit id="8c84374a07e7982abd1eda236f79d01355c7610a" translate="yes" xml:space="preserve">
          <source>Other attributes are defined for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and for variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;).</source>
          <target state="translated">Другие атрибуты определены для функций (см. &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Атрибуты функций&lt;/a&gt; ), меток (см. &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Атрибуты меток&lt;/a&gt; ), счетчиков (см. &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Атрибуты перечислителя&lt;/a&gt; ), операторов (см. &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Атрибуты&lt;/a&gt; операторов ) и для переменных (см. &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Атрибуты переменных&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c2a10075dec0d365de937669196a9657d9df8590" translate="yes" xml:space="preserve">
          <source>Other built-in functions.</source>
          <target state="translated">Другие встроенные функции.</target>
        </trans-unit>
        <trans-unit id="71f741ac380c3a470196d38432e10beb772eddbf" translate="yes" xml:space="preserve">
          <source>Other integer types, such as &lt;code&gt;long int&lt;/code&gt;, and enumerated types are permitted even in strictly conforming mode.</source>
          <target state="translated">Другие целочисленные типы, такие как &lt;code&gt;long int&lt;/code&gt; и перечислимые типы, разрешены даже в режиме строгого соответствия.</target>
        </trans-unit>
        <trans-unit id="9b6d809c6085c6515fee8105cda39c6f0c8299d6" translate="yes" xml:space="preserve">
          <source>Other letters can be defined in machine-dependent fashion to stand for particular classes of registers or other arbitrary operand types. &amp;lsquo;</source>
          <target state="translated">Другие буквы могут быть определены машинно-зависимым способом для обозначения определенных классов регистров или других произвольных типов операндов. '</target>
        </trans-unit>
        <trans-unit id="31e826484120507f81d7b01e00ba111ce50563d4" translate="yes" xml:space="preserve">
          <source>Other letters in the range &amp;lsquo;</source>
          <target state="translated">Другие буквы в диапазоне '</target>
        </trans-unit>
        <trans-unit id="79d2df03f3d88bfc6b34208de56c0d8f69fae24c" translate="yes" xml:space="preserve">
          <source>Other options are passed on to one or more stages of processing. Some options control the preprocessor and others the compiler itself. Yet other options control the assembler and linker; most of these are not documented here, since you rarely need to use any of them.</source>
          <target state="translated">Остальные опции передаются на один или несколько этапов обработки.Некоторые опции управляют препроцессором,другие-самим компилятором.Другие же управляют ассемблером и компоновщиком;большинство из них здесь не документировано,так как редко приходится использовать какой-либо из них.</target>
        </trans-unit>
        <trans-unit id="58690e93570c04719b58436037bbfe7e9e889794" translate="yes" xml:space="preserve">
          <source>Other options such as</source>
          <target state="translated">Другие варианты,такие как</target>
        </trans-unit>
        <trans-unit id="b54d8cbfcf04d8c6ef55524abdd897e953dd52de" translate="yes" xml:space="preserve">
          <source>Other prefixes specified with</source>
          <target state="translated">Другие префиксы,указанные с</target>
        </trans-unit>
        <trans-unit id="12651a5c2964110c993acc911324809845963ccd" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;false&lt;/code&gt; is returned and memory is affected according to &lt;var&gt;failure_memorder&lt;/var&gt;. This memory order cannot be &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt; nor &lt;code&gt;__ATOMIC_ACQ_REL&lt;/code&gt;. It also cannot be a stronger order than that specified by &lt;var&gt;success_memorder&lt;/var&gt;.</source>
          <target state="translated">В противном случае возвращается &lt;code&gt;false&lt;/code&gt; , и память &lt;var&gt;failure_memorder&lt;/var&gt; согласно failure_memorder . Этот порядок памяти не может быть &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt; или &lt;code&gt;__ATOMIC_ACQ_REL&lt;/code&gt; . Это также не может быть более сильным порядком, чем тот, который указан в &lt;var&gt;success_memorder&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="0163f25dca25dd9eb232ac96989846b2be8a2890" translate="yes" xml:space="preserve">
          <source>Otherwise, an attribute specifier appears as part of a declaration, counting declarations of unnamed parameters and type names, and relates to that declaration (which may be nested in another declaration, for example in the case of a parameter declaration), or to a particular declarator within a declaration. Where an attribute specifier is applied to a parameter declared as a function or an array, it should apply to the function or array rather than the pointer to which the parameter is implicitly converted, but this is not yet correctly implemented.</source>
          <target state="translated">В противном случае,спецификатор атрибута появляется в составе декларации,считая декларации неназванных параметров и имен типов,и относится к этой декларации (которая может быть вложена в другую декларацию,например,в случае декларации параметров),или к конкретному декларатору внутри декларации.Если спецификатор атрибута применяется к параметру,объявленному в качестве функции или массива,он должен применяться к функции или массиву,а не к указателю,к которому параметр неявно преобразуется,однако это пока не реализовано правильно.</target>
        </trans-unit>
        <trans-unit id="9c5c46d604645721e578d5c70ebb88f027aaf128" translate="yes" xml:space="preserve">
          <source>Output &amp;lsquo;</source>
          <target state="translated">Вывод '</target>
        </trans-unit>
        <trans-unit id="647dcf3ef174bc80ea2e9689a611bd97a6a704cd" translate="yes" xml:space="preserve">
          <source>Output assembly instructions using selected &lt;var&gt;dialect&lt;/var&gt;. Also affects which dialect is used for basic &lt;code&gt;asm&lt;/code&gt; (see &lt;a href=&quot;basic-asm#Basic-Asm&quot;&gt;Basic Asm&lt;/a&gt;) and extended &lt;code&gt;asm&lt;/code&gt; (see &lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;Extended Asm&lt;/a&gt;). Supported choices (in dialect order) are &amp;lsquo;</source>
          <target state="translated">Вывести инструкции по сборке на выбранном &lt;var&gt;dialect&lt;/var&gt; . Также влияет на то, какой диалект используется для базового &lt;code&gt;asm&lt;/code&gt; (см. &lt;a href=&quot;basic-asm#Basic-Asm&quot;&gt;Basic Asm&lt;/a&gt; ) и расширенного &lt;code&gt;asm&lt;/code&gt; (см. &lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;Extended Asm&lt;/a&gt; ). Поддерживаемые варианты (в порядке диалектов):</target>
        </trans-unit>
        <trans-unit id="f8b5c88cee0a083c4b1b7974adc28656d2681e85" translate="yes" xml:space="preserve">
          <source>Output code for G-format floating-point numbers instead of D-format.</source>
          <target state="translated">Вывести код для чисел с плавающей точкой G-формата вместо D-формата.</target>
        </trans-unit>
        <trans-unit id="e560ad077bfca12ce7d694879e9c015007ae41a0" translate="yes" xml:space="preserve">
          <source>Output constraints must begin with either &amp;lsquo;</source>
          <target state="translated">Ограничения вывода должны начинаться с '</target>
        </trans-unit>
        <trans-unit id="180883c60047df12608a1941cecf8662e8d97968" translate="yes" xml:space="preserve">
          <source>Output gcov file in an easy-to-parse JSON intermediate format which does not require source code for generation. The JSON file is compressed with gzip compression algorithm and the files have</source>
          <target state="translated">Выводите gcov файл в удобном для разбора промежуточном формате JSON,не требующем для генерации исходного кода.JSON файл сжат с помощью алгоритма сжатия gzip,а файлы имеют</target>
        </trans-unit>
        <trans-unit id="9b6fcda59898207a429e1ef091692b9398444b1f" translate="yes" xml:space="preserve">
          <source>Output operand expressions must be lvalues. The compiler cannot check whether the operands have data types that are reasonable for the instruction being executed. For output expressions that are not directly addressable (for example a bit-field), the constraint must allow a register. In that case, GCC uses the register as the output of the &lt;code&gt;asm&lt;/code&gt;, and then stores that register into the output.</source>
          <target state="translated">Выражения выходных операндов должны быть lvalue. Компилятор не может проверить, имеют ли операнды типы данных, подходящие для выполняемой инструкции. Для выходных выражений, которые не адресуются напрямую (например, битовое поле), ограничение должно разрешать регистр. В этом случае GCC использует регистр в качестве вывода &lt;code&gt;asm&lt;/code&gt; , а затем сохраняет этот регистр в выводе.</target>
        </trans-unit>
        <trans-unit id="316859616622aa738df7e68ec92a5bb090fb360c" translate="yes" xml:space="preserve">
          <source>Output operands may not be &amp;ldquo;inserted&amp;rdquo; between existing stack registers. Since no 387 opcode uses a read/write operand, all output operands are dead before the &lt;code&gt;asm&lt;/code&gt;, and are pushed by the &lt;code&gt;asm&lt;/code&gt;. It makes no sense to push anywhere but the top of the reg-stack.</source>
          <target state="translated">Выходные операнды нельзя &amp;laquo;вставлять&amp;raquo; между существующими регистрами стека. Поскольку ни один код операции 387 не использует операнды чтения / записи, все выходные операнды не работают до &lt;code&gt;asm&lt;/code&gt; и передаются &lt;code&gt;asm&lt;/code&gt; . Нет смысла пихать куда-нибудь, кроме вершины рег-стека.</target>
        </trans-unit>
        <trans-unit id="43f24935d9221797dfcb78b34d6cf08d867d6284" translate="yes" xml:space="preserve">
          <source>Output operands must specifically indicate which register an output appears in after an &lt;code&gt;asm&lt;/code&gt;. &amp;lsquo;</source>
          <target state="translated">Операнды вывода должны конкретно указывать, в каком регистре вывод появляется после &lt;code&gt;asm&lt;/code&gt; . '</target>
        </trans-unit>
        <trans-unit id="faed737fa40fe25af4473d1b6bcfd0d0b292b68b" translate="yes" xml:space="preserve">
          <source>Output operands must start at the top of the reg-stack: output operands may not &amp;ldquo;skip&amp;rdquo; a register.</source>
          <target state="translated">Выходные операнды должны начинаться с вершины рег-стека: выходные операнды не могут &amp;laquo;пропускать&amp;raquo; регистр.</target>
        </trans-unit>
        <trans-unit id="a8b51102b411c12b6e0f93eb391fa91ba24693de" translate="yes" xml:space="preserve">
          <source>Output summaries for each function in addition to the file level summary.</source>
          <target state="translated">Выходные сводки по каждой функции в дополнение к сводке на уровне файлов.</target>
        </trans-unit>
        <trans-unit id="2f6f31ff885b55e9edb44a9bbaf83bcf540cfa80" translate="yes" xml:space="preserve">
          <source>Output the accumulated assembler options specified by</source>
          <target state="translated">Выведите накопленные опции ассемблера,заданные</target>
        </trans-unit>
        <trans-unit id="bca339912e193031f5941578cba2e8013cdc4fbe" translate="yes" xml:space="preserve">
          <source>Output the accumulated linker options specified by</source>
          <target state="translated">Выведите накопленные опции линкера,заданные</target>
        </trans-unit>
        <trans-unit id="abd07145d91464d8949250e737d08ee71cd3be75" translate="yes" xml:space="preserve">
          <source>Output the accumulated preprocessor options specified by</source>
          <target state="translated">Выведите накопленные опции препроцессора,заданные параметрами</target>
        </trans-unit>
        <trans-unit id="b0560621f7532768e8148f5f9549c378f9566ea1" translate="yes" xml:space="preserve">
          <source>Output to standard output instead of output files.</source>
          <target state="translated">Выводить на стандартный вывод вместо выходных файлов.</target>
        </trans-unit>
        <trans-unit id="0ec497bb07e2cf136e8af2890004bae91d0a14be" translate="yes" xml:space="preserve">
          <source>Output to the given filename prototyped declarations for all functions declared and/or defined in a translation unit, including those in header files. This option is silently ignored in any language other than C.</source>
          <target state="translated">Выводить на заданное имя файла прототипные декларации для всех функций,объявленных и/или определенных в модуле перевода,в том числе и в заголовочных файлах.Эта опция беззвучно игнорируется на любом языке,кроме C.</target>
        </trans-unit>
        <trans-unit id="62fca7a249d9dca7d004d8f4915abc2b5e965646" translate="yes" xml:space="preserve">
          <source>Outputs &amp;lsquo;</source>
          <target state="translated">Выходы '</target>
        </trans-unit>
        <trans-unit id="13d5c086d06fc973e45c927d40c8e059a1643032" translate="yes" xml:space="preserve">
          <source>Outputs a number that is unique to each instance of the &lt;code&gt;asm&lt;/code&gt; statement in the entire compilation. This option is useful when creating local labels and referring to them multiple times in a single template that generates multiple assembler instructions.</source>
          <target state="translated">Выводит число, уникальное для каждого экземпляра оператора &lt;code&gt;asm&lt;/code&gt; во всей компиляции. Эта опция полезна при создании локальных меток и многократном обращении к ним в одном шаблоне, который генерирует несколько инструкций ассемблера.</target>
        </trans-unit>
        <trans-unit id="b7054dde1d20d86e88a5b1e9f1914cd2a35614b4" translate="yes" xml:space="preserve">
          <source>Outputs a single &amp;lsquo;</source>
          <target state="translated">Выводит сингл '</target>
        </trans-unit>
        <trans-unit id="0dee1166c5edc6ac11a34fc79bdb2cb27916d9db" translate="yes" xml:space="preserve">
          <source>Outside strict ISO C mode (</source>
          <target state="translated">Вне строгого режима ISO C (</target>
        </trans-unit>
        <trans-unit id="dd7bd1ab4e4204054540331b82bdd3051fd1f8f8" translate="yes" xml:space="preserve">
          <source>Overall Options</source>
          <target state="translated">Общие параметры</target>
        </trans-unit>
        <trans-unit id="b4cd9a287c6914a99205f05078ac2e480bd2c7a2" translate="yes" xml:space="preserve">
          <source>Override the defaults for &lt;code&gt;bool&lt;/code&gt; so that &lt;code&gt;sizeof(bool)==1&lt;/code&gt;. By default &lt;code&gt;sizeof(bool)&lt;/code&gt; is &lt;code&gt;4&lt;/code&gt; when compiling for Darwin/PowerPC and &lt;code&gt;1&lt;/code&gt; when compiling for Darwin/x86, so this option has no effect on x86.</source>
          <target state="translated">Отмените значения по умолчанию для &lt;code&gt;bool&lt;/code&gt; , чтобы &lt;code&gt;sizeof(bool)==1&lt;/code&gt; . По умолчанию &lt;code&gt;sizeof(bool)&lt;/code&gt; равен &lt;code&gt;4&lt;/code&gt; при компиляции для Darwin / PowerPC и &lt;code&gt;1&lt;/code&gt; при компиляции для Darwin / x86, поэтому этот параметр не влияет на x86.</target>
        </trans-unit>
        <trans-unit id="a199208b37cd1f5b9a0a8191fd588411de91c2f1" translate="yes" xml:space="preserve">
          <source>Override the internal decision heuristic for the particular algorithm to use for inlining string operations. The allowed values for &lt;var&gt;alg&lt;/var&gt; are:</source>
          <target state="translated">Отмените внутреннюю эвристику принятия решения для конкретного алгоритма, чтобы использовать его для встраивания строковых операций. Допустимые значения для &lt;var&gt;alg&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="725dd7b59f06dae5a8f87fd7ac1c6ed71f821187" translate="yes" xml:space="preserve">
          <source>Override the internal decision heuristic to decide if &lt;code&gt;__builtin_memcpy&lt;/code&gt; should be inlined and what inline algorithm to use when the expected size of the copy operation is known. &lt;var&gt;strategy&lt;/var&gt; is a comma-separated list of &lt;var&gt;alg&lt;/var&gt;:&lt;var&gt;max_size&lt;/var&gt;:&lt;var&gt;dest_align&lt;/var&gt; triplets. &lt;var&gt;alg&lt;/var&gt; is specified in</source>
          <target state="translated">Переопределите внутреннюю эвристику принятия решения, чтобы решить, следует ли &lt;code&gt;__builtin_memcpy&lt;/code&gt; быть встроенным и какой встроенный алгоритм использовать, если известен ожидаемый размер операции копирования. &lt;var&gt;strategy&lt;/var&gt; - это список троек &lt;var&gt;alg&lt;/var&gt; : &lt;var&gt;max_size&lt;/var&gt; : &lt;var&gt;dest_align&lt;/var&gt; ,разделенных запятыми . &lt;var&gt;alg&lt;/var&gt; указан в</target>
        </trans-unit>
        <trans-unit id="9b46c3db03a238d3f5a14ace1b604afe4e45f0cd" translate="yes" xml:space="preserve">
          <source>Override the underlying type for &lt;code&gt;wchar_t&lt;/code&gt; to be &lt;code&gt;short
unsigned int&lt;/code&gt; instead of the default for the target. This option is useful for building programs to run under WINE.</source>
          <target state="translated">Замените базовый тип для &lt;code&gt;wchar_t&lt;/code&gt; на &lt;code&gt;short unsigned int&lt;/code&gt; вместо значения по умолчанию для цели. Эта опция полезна для создания программ, запускаемых под WINE.</target>
        </trans-unit>
        <trans-unit id="48df9e72f6c8bb00c7da9fa106f8a794bf0ae66b" translate="yes" xml:space="preserve">
          <source>Override tuning decisions made by the back-end in response to a</source>
          <target state="translated">Отмена решений по настройке,принятых внутренним отделом в ответ на</target>
        </trans-unit>
        <trans-unit id="e7b14d3050ddec57bd832691acdae4f4799a4d96" translate="yes" xml:space="preserve">
          <source>Overrides the command-line option &lt;code&gt;-memregs=&lt;/code&gt; for the current file. Use with care! This pragma must be before any function in the file, and mixing different memregs values in different objects may make them incompatible. This pragma is useful when a performance-critical function uses a memreg for temporary values, as it may allow you to reduce the number of memregs used.</source>
          <target state="translated">Переопределяет параметр командной строки &lt;code&gt;-memregs=&lt;/code&gt; для текущего файла. Используйте осторожно! Эта прагма должна быть перед любой функцией в файле, и смешивание разных значений memregs в разных объектах может сделать их несовместимыми. Эта прагма полезна, когда критически важная для производительности функция использует memreg для временных значений, поскольку она может позволить вам уменьшить количество используемых memreg.</target>
        </trans-unit>
        <trans-unit id="55a8f7943bb312b706050a92052877ddd19cd1fc" translate="yes" xml:space="preserve">
          <source>Overrides the command-line option &lt;code&gt;-mio-volatile&lt;/code&gt; for the current file. Note that for compatibility with future GCC releases, this option should only be used once before any &lt;code&gt;io&lt;/code&gt; variables in each file.</source>
          <target state="translated">Переопределяет параметр командной строки &lt;code&gt;-mio-volatile&lt;/code&gt; для текущего файла. Обратите внимание, что для совместимости с будущими выпусками GCC эту опцию следует использовать только один раз перед любыми переменными &lt;code&gt;io&lt;/code&gt; в каждом файле.</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="80fce3cd5d10f70e9287dc65ad351b4cf54cdde0" translate="yes" xml:space="preserve">
          <source>P register</source>
          <target state="translated">P-образный регистр</target>
        </trans-unit>
        <trans-unit id="a1fd3d9945606c835489fdf8c9492b256385656d" translate="yes" xml:space="preserve">
          <source>P+</source>
          <target state="translated">P+</target>
        </trans-unit>
        <trans-unit id="76803f0adcbaf98d2e1e19d699c318fa770240a3" translate="yes" xml:space="preserve">
          <source>P-</source>
          <target state="translated">P-</target>
        </trans-unit>
        <trans-unit id="2b16716bc26fa1b19f59589aec2ebef33f5db5d7" translate="yes" xml:space="preserve">
          <source>PCC allows typedef names to be used as function parameters.</source>
          <target state="translated">PCC позволяет использовать типизированные имена в качестве параметров функции.</target>
        </trans-unit>
        <trans-unit id="c246c3028d26fbb81d1a1f15dafa0622e6684f4e" translate="yes" xml:space="preserve">
          <source>PCC allows whitespace in the middle of compound assignment operators such as &amp;lsquo;</source>
          <target state="translated">PCC позволяет использовать пробелы в середине составных операторов присваивания, таких как '</target>
        </trans-unit>
        <trans-unit id="0a6e19866b6bb2535a3f2c2dd0776aefd4accf5d" translate="yes" xml:space="preserve">
          <source>PCLMUL instructions.</source>
          <target state="translated">PCLMUL инструкции.</target>
        </trans-unit>
        <trans-unit id="6f863e0fedbf92ef4aea9ea322ccc2a547325ef5" translate="yes" xml:space="preserve">
          <source>PDP-11&amp;mdash;</source>
          <target state="translated">PDP-11&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="8c50d8866e4321b0ad859637afa10d6ead05148c" translate="yes" xml:space="preserve">
          <source>POPCNT instruction.</source>
          <target state="translated">Инструкция POPCNT.</target>
        </trans-unit>
        <trans-unit id="e2d341dab357c92fea1cc61d3e72cb6281d41c97" translate="yes" xml:space="preserve">
          <source>PTRDIFF_MAX</source>
          <target state="translated">PTRDIFF_MAX</target>
        </trans-unit>
        <trans-unit id="7ec74130044a66b80c889b01a82126dc008750ff" translate="yes" xml:space="preserve">
          <source>Pack VLIW instructions.</source>
          <target state="translated">Упакуйте инструкции VLIW.</target>
        </trans-unit>
        <trans-unit id="dd44725ed2025ff2e1a97e1f2348c9d1ca8f2c1f" translate="yes" xml:space="preserve">
          <source>Pad with NOPs any dispatch group that has vacant issue slots, according to the scheduler&amp;rsquo;s grouping.</source>
          <target state="translated">Добавьте NOP в любую группу диспетчеризации, в которой есть свободные слоты задач, в соответствии с группировкой планировщика.</target>
        </trans-unit>
        <trans-unit id="2372cf312ccb9c8b03aea17e3c79e0a1982f2394" translate="yes" xml:space="preserve">
          <source>Pair lower lower (&lt;code&gt;pll.ps&lt;/code&gt;).</source>
          <target state="translated">Пара нижняя нижняя ( &lt;code&gt;pll.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f740b666193926024898bc0d930212a406bee8c8" translate="yes" xml:space="preserve">
          <source>Pair lower upper (&lt;code&gt;plu.ps&lt;/code&gt;).</source>
          <target state="translated">Пара нижняя верхняя ( &lt;code&gt;plu.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9eedbb6f660ceda1616660d44dce629298a3b655" translate="yes" xml:space="preserve">
          <source>Pair upper lower (&lt;code&gt;pul.ps&lt;/code&gt;).</source>
          <target state="translated">Пара верхняя нижняя ( &lt;code&gt;pul.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e0770dcfd7cae26e45306dd9f097f8dbb0edbc8" translate="yes" xml:space="preserve">
          <source>Pair upper upper (&lt;code&gt;puu.ps&lt;/code&gt;).</source>
          <target state="translated">Пара верхний верх ( &lt;code&gt;puu.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac1dfe5c81f3c8f3e57c17faae475d9260a62249" translate="yes" xml:space="preserve">
          <source>Parallelize loops, i.e., split their iteration space to run in n threads. This is only possible for loops whose iterations are independent and can be arbitrarily reordered. The optimization is only profitable on multiprocessor machines, for loops that are CPU-intensive, rather than constrained e.g. by memory bandwidth. This option implies</source>
          <target state="translated">Распараллелить циклы,т.е.разделить их итерационное пространство для выполнения в n потоках.Это возможно только для тех циклов,итерации которых независимы и могут быть произвольно переупорядочены.Оптимизация выгодна только на многопроцессорных машинах,для циклов,интенсивно использующих CPU,а не ограниченных,например,пропускной способностью памяти.Этот вариант подразумевает</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="00310a3d64efc1d0ab28741454559ddf52284d4c" translate="yes" xml:space="preserve">
          <source>Parameters of this option are analogous to the</source>
          <target state="translated">Параметры этого параметра аналогичны параметру</target>
        </trans-unit>
        <trans-unit id="ed89c3a81f547cc64d254621a2e80d0b09920687" translate="yes" xml:space="preserve">
          <source>Partial Store Order</source>
          <target state="translated">Частичный заказ в магазине</target>
        </trans-unit>
        <trans-unit id="26760520407ec598057e0350ad5e24f9ca068704" translate="yes" xml:space="preserve">
          <source>Pass &lt;var&gt;option&lt;/var&gt; as an option to the assembler. If &lt;var&gt;option&lt;/var&gt; contains commas, it is split into multiple options at the commas.</source>
          <target state="translated">Передайте &lt;var&gt;option&lt;/var&gt; как вариант ассемблеру. Если &lt;var&gt;option&lt;/var&gt; содержит запятые, он разделяется на несколько параметров через запятую.</target>
        </trans-unit>
        <trans-unit id="2d87e9abac2f57600cdd7d5c2efaf0f6e66f628c" translate="yes" xml:space="preserve">
          <source>Pass &lt;var&gt;option&lt;/var&gt; as an option to the assembler. You can use this to supply system-specific assembler options that GCC does not recognize.</source>
          <target state="translated">Передайте &lt;var&gt;option&lt;/var&gt; как вариант ассемблеру. Вы можете использовать это, чтобы предоставить системные опции ассемблера, которые GCC не распознает.</target>
        </trans-unit>
        <trans-unit id="ea3ae9b22cd6a0097fe66cc5d0b0c7c77b1e7361" translate="yes" xml:space="preserve">
          <source>Pass &lt;var&gt;option&lt;/var&gt; as an option to the linker. If &lt;var&gt;option&lt;/var&gt; contains commas, it is split into multiple options at the commas. You can use this syntax to pass an argument to the option. For example,</source>
          <target state="translated">Передайте &lt;var&gt;option&lt;/var&gt; компоновщику в качестве опции. Если &lt;var&gt;option&lt;/var&gt; содержит запятые, он разделяется на несколько параметров через запятую. Вы можете использовать этот синтаксис для передачи аргумента опции. Например,</target>
        </trans-unit>
        <trans-unit id="3b76a14ce88deda8b639a199af148cdc191f52bb" translate="yes" xml:space="preserve">
          <source>Pass &lt;var&gt;option&lt;/var&gt; as an option to the linker. You can use this to supply system-specific linker options that GCC does not recognize.</source>
          <target state="translated">Передайте &lt;var&gt;option&lt;/var&gt; компоновщику в качестве опции. Вы можете использовать это, чтобы предоставить системные параметры компоновщика, которые GCC не распознает.</target>
        </trans-unit>
        <trans-unit id="2d7525a4e6f37e298e13e376428f81521ebcf0ad" translate="yes" xml:space="preserve">
          <source>Pass &lt;var&gt;option&lt;/var&gt; as an option to the preprocessor. You can use this to supply system-specific preprocessor options that GCC does not recognize.</source>
          <target state="translated">Передайте &lt;var&gt;option&lt;/var&gt; препроцессору как опцию. Вы можете использовать это для предоставления системных опций препроцессора, которые GCC не распознает.</target>
        </trans-unit>
        <trans-unit id="3d4c02ac25f95e4b321bd7c365e291db31eb2591" translate="yes" xml:space="preserve">
          <source>Pass on (or do not pass on) the</source>
          <target state="translated">Передайте (или не передавайте)</target>
        </trans-unit>
        <trans-unit id="ebcca6f4e1a3875b263182927c19bae27d56304e" translate="yes" xml:space="preserve">
          <source>Pass the flag</source>
          <target state="translated">Передайте флаг</target>
        </trans-unit>
        <trans-unit id="edb98a025d28cabbd69e003e051e7e9e248d058f" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable dual- and single-operand instructions for telephony. Also sets the preprocessor symbol &lt;code&gt;__Xtelephony&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передается ассемблеру, чтобы включить инструкции с двумя и одним операндами для телефонии. Также устанавливает символ препроцессора &lt;code&gt;__Xtelephony&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="f90bde4ab81702f82c3a14c8f169a594acac87bc" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the 64-bit time-stamp counter extension instruction. Also sets the preprocessor symbol &lt;code&gt;__Xrtsc&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передается ассемблеру, чтобы включить 64-битную инструкцию расширения счетчика отметок времени. Также устанавливает символ препроцессора &lt;code&gt;__Xrtsc&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="4f8b46d31a4a12bcb7d5a9b4c4bc5f82313d8a46" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the DSP Pack A extensions. Also sets the preprocessor symbol &lt;code&gt;__Xdsp_packa&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передается ассемблеру, чтобы включить расширения DSP Pack A. Также устанавливает символ препроцессора &lt;code&gt;__Xdsp_packa&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="437ce81938361281bc7bdc1ba1109fae98afde5d" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the XY memory extension. Also sets the preprocessor symbol &lt;code&gt;__Xxy&lt;/code&gt;.</source>
          <target state="translated">Передается ассемблеру для включения расширения памяти XY. Также устанавливает символ препроцессора &lt;code&gt;__Xxy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192f1963f648220379d598033602fa765954e9e1" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the dual Viterbi butterfly extension. Also sets the preprocessor symbol &lt;code&gt;__Xdvbf&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передано сборщику, чтобы включить двойное расширение бабочки Витерби. Также устанавливает символ препроцессора &lt;code&gt;__Xdvbf&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="e120edac277c94aa8119101f86b7c6a0712b9fcc" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the locked load/store conditional extension. Also sets the preprocessor symbol &lt;code&gt;__Xlock&lt;/code&gt;.</source>
          <target state="translated">Передается ассемблеру для включения условного расширения заблокированной загрузки / сохранения. Также устанавливает символ препроцессора &lt;code&gt;__Xlock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ba98472aa75cacca4b08108732162c8ba249643" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler to enable the swap byte ordering extension instruction. Also sets the preprocessor symbol &lt;code&gt;__Xswape&lt;/code&gt;.</source>
          <target state="translated">Передается ассемблеру для включения инструкции расширения порядка байтов подкачки. Также устанавливает символ препроцессора &lt;code&gt;__Xswape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ad82551672605333a9c6ede433a1e6a6d571936" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler. Also sets the preprocessor symbol &lt;code&gt;__Xxmac_24&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передал сборщику. Также устанавливает символ препроцессора &lt;code&gt;__Xxmac_24&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="b5b5c4c5c6dc85e300e5d3da99c217798b87ef15" translate="yes" xml:space="preserve">
          <source>Passed down to the assembler. Also sets the preprocessor symbol &lt;code&gt;__Xxmac_d16&lt;/code&gt;. This option is deprecated.</source>
          <target state="translated">Передал сборщику. Также устанавливает символ препроцессора &lt;code&gt;__Xxmac_d16&lt;/code&gt; . Эта опция устарела.</target>
        </trans-unit>
        <trans-unit id="8e378b2ec7874c891a1160d052f02fb0e9162569" translate="yes" xml:space="preserve">
          <source>Passed through to the linker, to specify use of the &lt;code&gt;arclinux&lt;/code&gt; emulation. This option is enabled by default in tool chains built for &lt;code&gt;arc-linux-uclibc&lt;/code&gt; and &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; targets when profiling is not requested.</source>
          <target state="translated">&lt;code&gt;arclinux&lt;/code&gt; компоновщику, чтобы указать использование эмуляции arclinux . Этот параметр включен по умолчанию в цепочках инструментов, созданных для целей &lt;code&gt;arc-linux-uclibc&lt;/code&gt; &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; и arceb-linux-uclibc, когда профилирование не запрашивается.</target>
        </trans-unit>
        <trans-unit id="a028490f082637af1740d556712c0ce06eb5a830" translate="yes" xml:space="preserve">
          <source>Passed through to the linker, to specify use of the &lt;code&gt;arclinux_prof&lt;/code&gt; emulation. This option is enabled by default in tool chains built for &lt;code&gt;arc-linux-uclibc&lt;/code&gt; and &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; targets when profiling is requested.</source>
          <target state="translated">&lt;code&gt;arclinux_prof&lt;/code&gt; компоновщику, чтобы указать использование эмуляции arclinux_prof . Эта опция включена по умолчанию в цепочках инструментов, созданных для целей &lt;code&gt;arc-linux-uclibc&lt;/code&gt; &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; и arceb-linux-uclibc, когда запрашивается профилирование.</target>
        </trans-unit>
        <trans-unit id="fd42d8d9c3b5bd99cdf57029443caa7831c5b611" translate="yes" xml:space="preserve">
          <source>Passes that use the dataflow information are enabled independently at different optimization levels.</source>
          <target state="translated">Передачи,использующие информацию о потоке данных,включаются независимо на разных уровнях оптимизации.</target>
        </trans-unit>
        <trans-unit id="df4603bbe9d05798f6607572b723fee8e9240d5c" translate="yes" xml:space="preserve">
          <source>Passing</source>
          <target state="translated">Passing</target>
        </trans-unit>
        <trans-unit id="ca1bab93bc155d4bc9f92ddda956825855fee474" translate="yes" xml:space="preserve">
          <source>Passing options to the assembler.</source>
          <target state="translated">Передача опций сборщику.</target>
        </trans-unit>
        <trans-unit id="a82f31d7c90d96412082c64503f9dcd5d50cd894" translate="yes" xml:space="preserve">
          <source>Passing parameters to or from Basic &lt;code&gt;asm&lt;/code&gt;</source>
          <target state="translated">Передача параметров в или из Basic &lt;code&gt;asm&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7301fd43d902ef4b0d5fbb8c15e6456832236d7" translate="yes" xml:space="preserve">
          <source>Passing parameters to or from Extended &lt;code&gt;asm&lt;/code&gt; without using input or output operands.</source>
          <target state="translated">Передача параметров в расширенный &lt;code&gt;asm&lt;/code&gt; или из него без использования входных или выходных операндов.</target>
        </trans-unit>
        <trans-unit id="f36b9a29c6322b4f073965f6981e3c605c717562" translate="yes" xml:space="preserve">
          <source>Passing parameters to or from routines written in assembler (or other languages) using non-standard calling conventions.</source>
          <target state="translated">Передача параметров в или из подпрограмм,написанных на ассемблере (или других языках),с использованием нестандартных соглашений по вызову.</target>
        </trans-unit>
        <trans-unit id="2b8053a12982c8b5e19f801216dbc51afcd39aab" translate="yes" xml:space="preserve">
          <source>Pay special attention to code like this:</source>
          <target state="translated">Обратите особое внимание на такой код:</target>
        </trans-unit>
        <trans-unit id="ce53b63c4327f47412072347ed7949c1656ab556" translate="yes" xml:space="preserve">
          <source>Peels loops for which there is enough information that they do not roll much (from profile feedback or static analysis). It also turns on complete loop peeling (i.e. complete removal of loops with small constant number of iterations).</source>
          <target state="translated">Пилит петли,для которых достаточно информации,которую они не так уж и много прокатывают (от обратной связи по профилю или от статического анализа).Также включается полный пилинг циклов (т.е.полное удаление циклов с небольшим постоянным количеством итераций).</target>
        </trans-unit>
        <trans-unit id="10555cda3fcf7df8cd08616e7d5db51df194941b" translate="yes" xml:space="preserve">
          <source>People who have contributed to GCC.</source>
          <target state="translated">Люди,которые внесли свой вклад в GCC.</target>
        </trans-unit>
        <trans-unit id="f13a48860e36bb0177b534cc2a15b3b114032ea9" translate="yes" xml:space="preserve">
          <source>Per-thread variables.</source>
          <target state="translated">Потоковые переменные.</target>
        </trans-unit>
        <trans-unit id="73545218d23922d3a876b5c815bc65525793f423" translate="yes" xml:space="preserve">
          <source>Percentage penalty functions containing a single call to another function will receive when they are evaluated for cloning.</source>
          <target state="translated">Процентные штрафные функции,содержащие один вызов другой функции,будут получены,когда они будут оценены для клонирования.</target>
        </trans-unit>
        <trans-unit id="dcfc68277a1e2c4d9091b21b46740ae70e4d5a9c" translate="yes" xml:space="preserve">
          <source>Percentage penalty the recursive functions will receive when they are evaluated for cloning.</source>
          <target state="translated">Штраф в процентах,который получат рекурсивные функции,когда они будут оценены для клонирования.</target>
        </trans-unit>
        <trans-unit id="b1bfacd8c51fd20af1a996d2b1c9005f74a8a0d2" translate="yes" xml:space="preserve">
          <source>Perform Identical Code Folding for functions and read-only variables. The optimization reduces code size and may disturb unwind stacks by replacing a function by equivalent one with a different name. The optimization works more effectively with link-time optimization enabled.</source>
          <target state="translated">Выполните идентичное складывание кода для функций и переменных,доступных только для чтения.Оптимизация уменьшает размер кода и может нарушить размотку стеков,заменяя функцию на эквивалентную с другим именем.Оптимизация работает более эффективно с включенной оптимизацией во время ссылки.</target>
        </trans-unit>
        <trans-unit id="a6a8c1431d58909bfaffe9050c8733ea996d20bc" translate="yes" xml:space="preserve">
          <source>Perform Value Range Propagation on trees. This is similar to the constant propagation pass, but instead of values, ranges of values are propagated. This allows the optimizers to remove unnecessary range checks like array bound checks and null pointer checks. This is enabled by default at</source>
          <target state="translated">Выполните Распространение Диапазона Значений на деревьях.Это похоже на постоянный проход распространения,но вместо значений распространяются диапазоны значений.Это позволяет оптимизаторам убрать ненужные проверки диапазонов,такие как проверки с привязкой к массиву и проверки нулевых указателей.По умолчанию это включено при</target>
        </trans-unit>
        <trans-unit id="f11a18844b7820edfc7cfe8256d4e394a5329f58" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point add using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битное добавление плавающей запятой IEEE с использованием округления до нечетности в качестве режима округления.</target>
        </trans-unit>
        <trans-unit id="ad630415b45adc0f11ff88c9ad397123e4ccfb1f" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point divide using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битное IEEE деление с плавающей запятой,используя режим округления до нечетности.</target>
        </trans-unit>
        <trans-unit id="21b7a42855f16a63bf420afa4550fc9d4fc080ac" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point fused multiply and add operation using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битное умножение плавающей запятой IEEE с плавающей запятой и добавьте операцию,используя округление до нечетности в качестве режима округления.</target>
        </trans-unit>
        <trans-unit id="37ed36e9d63104743cea777f5e55fc078dfd943b" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point multiply using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битное IEEE умножение с плавающей запятой,используя режим округления до нечетных.</target>
        </trans-unit>
        <trans-unit id="737a589634f68c1da9ecbd09594b87b83ec0aa7c" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point square root using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битный IEEE квадратный корень с плавающей точкой,используя округление до нечетности как режим округления.</target>
        </trans-unit>
        <trans-unit id="ead0f18b8a1f24823972492647bc71a9e31e2c4a" translate="yes" xml:space="preserve">
          <source>Perform a 128-bit IEEE floating point subtract using round to odd as the rounding mode.</source>
          <target state="translated">Выполните 128-битное вычитание с плавающей запятой IEEE,используя режим округления до нечетности.</target>
        </trans-unit>
        <trans-unit id="68de9811e50d3937c1ad606957f9ce3a651afee7" translate="yes" xml:space="preserve">
          <source>Perform a forward propagation pass on RTL. The pass tries to combine two instructions and checks if the result can be simplified. If loop unrolling is active, two passes are performed and the second is scheduled after loop unrolling.</source>
          <target state="translated">Выполните передачу вперёд на RTL.Пасс пытается скомбинировать две инструкции и проверяет,можно ли упростить результат.Если разворачивание цикла активно,то выполняются два прохода,а второй запланирован после разворачивания цикла.</target>
        </trans-unit>
        <trans-unit id="6dba988e88741e74ba501068678e1ab16f88bb77" translate="yes" xml:space="preserve">
          <source>Perform a global common subexpression elimination pass. This pass also performs global constant and copy propagation.</source>
          <target state="translated">Выполните глобальный общий проход по устранению подвыражений.Этот проход также выполняет глобальную константу и копирование распространения.</target>
        </trans-unit>
        <trans-unit id="d64787311f720e83d55ee7c16d5127e619d4c2d5" translate="yes" xml:space="preserve">
          <source>Perform a number of minor optimizations that are relatively expensive.</source>
          <target state="translated">Выполнить ряд мелких оптимизаций,которые являются относительно дорогими.</target>
        </trans-unit>
        <trans-unit id="e4ef7411a4a596cce036263deed71704a6a4403d" translate="yes" xml:space="preserve">
          <source>Perform a variety of simple scalar cleanups (constant/copy propagation, redundancy elimination, range propagation and expression simplification) based on a dominator tree traversal. This also performs jump threading (to reduce jumps to jumps). This flag is enabled by default at</source>
          <target state="translated">Выполнение различных простых скалярных чисток (распространение константы/копии,устранение избыточности,распространение диапазона и упрощение выражений)на основе обхода дерева доминаторов.При этом также выполняются прыжки в потоке (для уменьшения прыжков к прыжкам).Этот флаг включен по умолчанию при</target>
        </trans-unit>
        <trans-unit id="c690704255c1ecf4d6857e6000f1190b108f7ea6" translate="yes" xml:space="preserve">
          <source>Perform basic block vectorization on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните базовую блочную векторизацию на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="eeac5885ee87ab9527e79d1e7e4c5d0a5ab9cfee" translate="yes" xml:space="preserve">
          <source>Perform branch target register load optimization after prologue / epilogue threading.</source>
          <target state="translated">Выполните оптимизацию загрузки регистров целевых ветвей после потоков пролога/эпилога.</target>
        </trans-unit>
        <trans-unit id="f22ee925531c470bf10c56d8ec49b3ad79443d58" translate="yes" xml:space="preserve">
          <source>Perform branch target register load optimization before prologue / epilogue threading. The use of target registers can typically be exposed only during reload, thus hoisting loads out of loops and doing inter-block scheduling needs a separate optimization pass.</source>
          <target state="translated">Выполните оптимизацию загрузки регистров ветвей перед потоком пролога/эпилога.Использование целевых регистров,как правило,может быть подвержено только во время перезагрузки,таким образом,подъем нагрузки из циклов и выполнение межблочного планирования требует отдельного прохода оптимизации.</target>
        </trans-unit>
        <trans-unit id="78ecf7dff1475297797e70aa8e37b17a7fe0ba23" translate="yes" xml:space="preserve">
          <source>Perform code hoisting. Code hoisting tries to move the evaluation of expressions executed on all paths to the function exit as early as possible. This is especially useful as a code size optimization, but it often helps for code speed as well. This flag is enabled by default at</source>
          <target state="translated">Выполните кодовый подъем.Подъем кода пытается перенести оценку выражений,выполняемых на всех путях,на выход из функции как можно раньше.Это особенно полезно при оптимизации размера кода,но часто помогает и для скорости работы кода.По умолчанию этот флаг включен при</target>
        </trans-unit>
        <trans-unit id="d42beff05151efc426a83c25d60382c077faa4d8" translate="yes" xml:space="preserve">
          <source>Perform conditional dead code elimination (DCE) for calls to built-in functions that may set &lt;code&gt;errno&lt;/code&gt; but are otherwise free of side effects. This flag is enabled by default at</source>
          <target state="translated">Выполните условное исключение мертвого кода (DCE) для вызовов встроенных функций, которые могут устанавливать &lt;code&gt;errno&lt;/code&gt; , но в остальном не имеют побочных эффектов. Этот флаг установлен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="3acf0b56088845895309ffb7ff3f62580c187452" translate="yes" xml:space="preserve">
          <source>Perform conversion of simple initializations in a switch to initializations from a scalar array. This flag is enabled by default at</source>
          <target state="translated">Выполните преобразование простых инициализаций в коммутатор инициализаций из скалярного массива.Этот флаг включен по умолчанию при</target>
        </trans-unit>
        <trans-unit id="76903ec0550edaa382bc63ed2ba99b071ffdb752" translate="yes" xml:space="preserve">
          <source>Perform copy propagation on trees. This pass eliminates unnecessary copy operations. This flag is enabled by default at</source>
          <target state="translated">Выполните копирование распространения на деревьях.Этот проход устраняет ненужные операции копирования.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="6d7ec7c39be13500a07e954c10fb63594d459307" translate="yes" xml:space="preserve">
          <source>Perform cross-jumping transformation. This transformation unifies equivalent code and saves code size. The resulting code may or may not perform better than without cross-jumping.</source>
          <target state="translated">Выполните трансформацию с перекрестным прыжком.Это преобразование унифицирует эквивалентный код и сохраняет размер кода.Полученный код может работать лучше,чем без перекрестного прыжка.</target>
        </trans-unit>
        <trans-unit id="f21edf0cd1996b67db995a9d0465125524c66c2d" translate="yes" xml:space="preserve">
          <source>Perform dead code elimination (DCE) on RTL. Enabled by default at</source>
          <target state="translated">Выполните устранение мертвого кода (DCE)на RTL.По умолчанию включено на</target>
        </trans-unit>
        <trans-unit id="3dbd69c046baefc1f0428ff45ebf37c050ee9b35" translate="yes" xml:space="preserve">
          <source>Perform dead code elimination (DCE) on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните устранение мертвого кода (DCE)на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="1fac6b62e0201c67a765b9639bb451910616441d" translate="yes" xml:space="preserve">
          <source>Perform dead store elimination (DSE) on RTL. Enabled by default at</source>
          <target state="translated">Выполните ликвидацию мертвого магазина (DSE)на RTL.По умолчанию включено на</target>
        </trans-unit>
        <trans-unit id="9c91758280f32089239ead4d20b5ec849be15a87" translate="yes" xml:space="preserve">
          <source>Perform dead store elimination (DSE) on trees. A dead store is a store into a memory location that is later overwritten by another store without any intervening loads. In this case the earlier store can be deleted. This flag is enabled by default at</source>
          <target state="translated">Выполните ликвидацию мертвого магазина (DSE)на деревьях.Мертвое хранилище-это хранилище в ячейку памяти,которая позже перезаписывается другим хранилищем без каких-либо промежуточных нагрузок.В этом случае предыдущее хранилище может быть удалено.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="753e71f3a5ff6388d6a57662208a4d8d6dc2cf2a" translate="yes" xml:space="preserve">
          <source>Perform final value replacement. If a variable is modified in a loop in such a way that its value when exiting the loop can be determined using only its initial value and the number of loop iterations, replace uses of the final value by such a computation, provided it is sufficiently cheap. This reduces data dependencies and may allow further simplifications. Enabled by default at</source>
          <target state="translated">Выполните замену конечной стоимости.Если переменная изменяется в цикле таким образом,что ее значение при выходе из цикла можно определить,используя только ее начальное значение и количество итераций цикла,замените использование конечного значения на такое вычисление,при условии,что оно достаточно дешевое.Это уменьшает зависимости данных и может позволить внести дальнейшие упрощения.Включено по умолчанию при</target>
        </trans-unit>
        <trans-unit id="70b6a364a52abbfd9ee8ac29b5164966fafd5f6e" translate="yes" xml:space="preserve">
          <source>Perform forward propagation on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните прямое размножение на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="673d903cfc5f5e6d5fb3bb1eee0f4c9f6c48077e" translate="yes" xml:space="preserve">
          <source>Perform forward store motion on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните прямое движение магазина на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="d36329f87f0281004169238a916fdfdf7420040e" translate="yes" xml:space="preserve">
          <source>Perform full redundancy elimination (FRE) on trees. The difference between FRE and PRE is that FRE only considers expressions that are computed on all paths leading to the redundant computation. This analysis is faster than PRE, though it exposes fewer redundancies. This flag is enabled by default at</source>
          <target state="translated">Выполните полное устранение дублирования (FRE)на деревьях.Разница между FRE и PRE заключается в том,что FRE рассматривает только выражения,которые вычисляются по всем путям,ведущим к избыточным вычислениям.Этот анализ быстрее,чем PRE,хотя и подвергает меньшему количеству избыточностей.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="3f354c46e4dde1d877eb683cb0a6100f2cbc4bca" translate="yes" xml:space="preserve">
          <source>Perform function cloning to make interprocedural constant propagation stronger. When enabled, interprocedural constant propagation performs function cloning when externally visible function can be called with constant arguments. Because this optimization can create multiple copies of functions, it may significantly increase code size (see</source>
          <target state="translated">Выполните клонирование функций,чтобы сделать межпроцедурное постоянное распространение сильнее.Если включено,распространение межпроцедурных констант выполняет клонирование функций,когда внешне видимая функция может быть вызвана с константными аргументами.Поскольку такая оптимизация может создать несколько копий функций,она может существенно увеличить объем кода (см.раздел &quot;Оптимизация&quot;).</target>
        </trans-unit>
        <trans-unit id="154c76319b0c62d9b2e90e2513183f271e8cf0cd" translate="yes" xml:space="preserve">
          <source>Perform function-local points-to analysis on trees. This flag is enabled by default at</source>
          <target state="translated">Выполнять функционально-локальный анализ по точкам на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="56af57ea7e8c24ebc43912154747d0770817c691" translate="yes" xml:space="preserve">
          <source>Perform hoisting of loads from conditional pointers on trees. This pass is enabled by default at</source>
          <target state="translated">Выполнять подъем грузов из условных указателей на деревья.По умолчанию этот проход включен при</target>
        </trans-unit>
        <trans-unit id="4ab70db777954340ed7abb290ec401d3cad6d79c" translate="yes" xml:space="preserve">
          <source>Perform induction variable optimizations (strength reduction, induction variable merging and induction variable elimination) on trees.</source>
          <target state="translated">Выполните оптимизацию индукционных переменных (снижение прочности,слияние индукционных переменных и устранение индукционных переменных)на деревьях.</target>
        </trans-unit>
        <trans-unit id="1073eeaaee6148009c2caccc4b4d6c7d341bbb2f" translate="yes" xml:space="preserve">
          <source>Perform interprocedural constant propagation. This optimization analyzes the program to determine when values passed to functions are constants and then optimizes accordingly. This optimization can substantially increase performance if the application has constants passed to functions. This flag is enabled by default at</source>
          <target state="translated">Выполните межпроцедурное постоянное распространение.Данная оптимизация анализирует программу на предмет определения того,когда значения,передаваемые функциям,являются константами,а затем соответствующим образом оптимизирует.Такая оптимизация может существенно повысить производительность,если в приложении есть константы,передаваемые функциям.Данный флаг включен по умолчанию при</target>
        </trans-unit>
        <trans-unit id="20c997fc23010523f8221d0a92c5b9e6c4050935" translate="yes" xml:space="preserve">
          <source>Perform interprocedural pointer analysis and interprocedural modification and reference analysis. This option can cause excessive memory and compile-time usage on large compilation units. It is not enabled by default at any optimization level.</source>
          <target state="translated">Выполнять межпроцедурный анализ указателей и межпроцедурную модификацию и анализ ссылок.Эта опция может привести к избыточному использованию памяти и времени компиляции на больших единицах компиляции.По умолчанию она не включена ни на одном уровне оптимизации.</target>
        </trans-unit>
        <trans-unit id="4921214a12f7612e4410a372e1807efabe260fc7" translate="yes" xml:space="preserve">
          <source>Perform interprocedural profile propagation. The functions called only from cold functions are marked as cold. Also functions executed once (such as &lt;code&gt;cold&lt;/code&gt;, &lt;code&gt;noreturn&lt;/code&gt;, static constructors or destructors) are identified. Cold functions and loop less parts of functions executed once are then optimized for size. Enabled by default at</source>
          <target state="translated">Выполните межпроцедурное распространение профиля. Функции, вызываемые только из холодных функций, помечаются как холодные. Также идентифицируются функции, выполняемые один раз (например, &lt;code&gt;cold&lt;/code&gt; , &lt;code&gt;noreturn&lt;/code&gt; , статические конструкторы или деструкторы). Затем холодные функции и части функций без цикла, выполняемые один раз, оптимизируются по размеру. Включено по умолчанию в</target>
        </trans-unit>
        <trans-unit id="fb68f0d0ee8b6c41ae81d56a47219400b71ee1b8" translate="yes" xml:space="preserve">
          <source>Perform interprocedural scalar replacement of aggregates, removal of unused parameters and replacement of parameters passed by reference by parameters passed by value.</source>
          <target state="translated">Выполнять межпроцедурную скалярную замену агрегатов,удаление неиспользуемых параметров и замену параметров,переданных по ссылке,на параметры,переданные по значению.</target>
        </trans-unit>
        <trans-unit id="f5a5996d13689478fbbcfefaf187644cb0bd68f3" translate="yes" xml:space="preserve">
          <source>Perform loop distribution of patterns that can be code generated with calls to a library. This flag is enabled by default at</source>
          <target state="translated">Выполнять распределение циклов по шаблонам,которые могут быть сгенерированы с помощью вызовов библиотеки.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="b51b13ca91f32e55112e18c7be23871252a6a72b" translate="yes" xml:space="preserve">
          <source>Perform loop distribution. This flag can improve cache performance on big loop bodies and allow further loop optimizations, like parallelization or vectorization, to take place. For example, the loop</source>
          <target state="translated">Выполните распределение по петлям.Этот флаг может улучшить производительность кэша на больших телах цикла и позволить проводить дальнейшие оптимизации цикла,такие как распараллеливание или векторизация.Например,цикл</target>
        </trans-unit>
        <trans-unit id="00772bc8e86a7b4ab6c55ba37b514b8f5f461b5a" translate="yes" xml:space="preserve">
          <source>Perform loop header copying on trees. This is beneficial since it increases effectiveness of code motion optimizations. It also saves one jump. This flag is enabled by default at</source>
          <target state="translated">Выполните копирование заголовков петли на деревья.Это выгодно,так как повышает эффективность оптимизации движения кода.Это также экономит один прыжок.Этот флаг включен по умолчанию при</target>
        </trans-unit>
        <trans-unit id="6482eb095ab0106534173067ba63a63b4e772180" translate="yes" xml:space="preserve">
          <source>Perform loop interchange outside of graphite. This flag can improve cache performance on loop nest and allow further loop optimizations, like vectorization, to take place. For example, the loop</source>
          <target state="translated">Выполняйте обмен петлями вне графита.Этот флаг может улучшить производительность кэша на гнезде цикла и позволить провести дальнейшую оптимизацию цикла,такую как векторизация.Например,цикл</target>
        </trans-unit>
        <trans-unit id="babeb9c2acdfb002d90adf1ca5e9065ac71e5cf8" translate="yes" xml:space="preserve">
          <source>Perform loop invariant motion on trees. This pass moves only invariants that are hard to handle at RTL level (function calls, operations that expand to nontrivial sequences of insns). With</source>
          <target state="translated">Выполните инвариантное движение петли на деревьях.Этот проход перемещает только инварианты,с которыми сложно работать на уровне RTL (вызовы функций,операции,которые расширяются до нетривиальных последовательностей вставок).С .</target>
        </trans-unit>
        <trans-unit id="3759039cae2d11146e7c0dfe601eacde292dd1d1" translate="yes" xml:space="preserve">
          <source>Perform loop nest optimizations. Same as</source>
          <target state="translated">Выполните оптимизацию гнездового цикла.Так же,как и</target>
        </trans-unit>
        <trans-unit id="6a64dbc5caecc19bd9b50ef676cc69a1b212fa95" translate="yes" xml:space="preserve">
          <source>Perform loop optimizations on trees. This flag is enabled by default at</source>
          <target state="translated">Выполняйте оптимизацию циклов на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="121a475df0390f719f03e11127e3dd161d431728" translate="yes" xml:space="preserve">
          <source>Perform loop vectorization on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните векторизацию петли на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="f7516a23fd7e60004d67be66a314a10a37b3fdbd" translate="yes" xml:space="preserve">
          <source>Perform merging of narrow stores to consecutive memory addresses. This pass merges contiguous stores of immediate values narrower than a word into fewer wider stores to reduce the number of instructions. This is enabled by default at</source>
          <target state="translated">Выполните слияние узких хранилищ с последовательными адресами памяти.При этом происходит слияние узких хранилищ непосредственных значений,более узких,чем слово,в меньшие по ширине хранилища,что позволяет уменьшить количество инструкций.По умолчанию это включено при</target>
        </trans-unit>
        <trans-unit id="1807eb51aa29cd70afd6f6f94c9e10f8d8e2a87a" translate="yes" xml:space="preserve">
          <source>Perform more aggressive SMS-based modulo scheduling with register moves allowed. By setting this flag certain anti-dependences edges are deleted, which triggers the generation of reg-moves based on the life-range analysis. This option is effective only with</source>
          <target state="translated">Выполняйте более агрессивное SMS-планирование по модулю с разрешенными перемещениями регистра.При установке этого флага удаляются некоторые антизависимые границы,что приводит к генерации рег-движений на основе анализа жизненного диапазона.Эта опция эффективна только при</target>
        </trans-unit>
        <trans-unit id="ebc09c6b12bc75f0257526fb06df9feb9bf5a73f" translate="yes" xml:space="preserve">
          <source>Perform optimizations that check to see if a jump branches to a location where another comparison subsumed by the first is found. If so, the first branch is redirected to either the destination of the second branch or a point immediately following it, depending on whether the condition is known to be true or false.</source>
          <target state="translated">Выполните оптимизацию,которая проверяет,не найдены ли ветки прыжка в место,где найдено другое сравнение,подпадающее под первое.Если да,то первая ветка перенаправляется либо в место назначения второй ветки,либо в точку,следующую сразу за ней,в зависимости от того,известно ли условие истинности или ложности.</target>
        </trans-unit>
        <trans-unit id="8bd151314b28d93fbbbfc848886d1f59ee15eb4c" translate="yes" xml:space="preserve">
          <source>Perform partial redundancy elimination (PRE) on trees. This flag is enabled by default at</source>
          <target state="translated">Выполните частичное устранение дублирования (PRE)на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="5a687acdfae667c8ef7b171f66546043ce33e5d1" translate="yes" xml:space="preserve">
          <source>Perform pattern matching on SSA PHI nodes to optimize conditional code. This pass is enabled by default at</source>
          <target state="translated">Выполните совпадение шаблонов на узлах SSA PHI для оптимизации условного кода.Этот проход включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="d2e68d673229fe5ee8d59afbd3fa0d22ff809b67" translate="yes" xml:space="preserve">
          <source>Perform predictive commoning optimization, i.e., reusing computations (especially memory loads and stores) performed in previous iterations of loops.</source>
          <target state="translated">Выполнить прогностическую оптимизацию объединения,т.е.повторное использование вычислений (особенно нагрузок на память и хранилища),выполненных в предыдущих итерациях циклов.</target>
        </trans-unit>
        <trans-unit id="26325618e11578248e60d5c5ff4d5018d8830e39" translate="yes" xml:space="preserve">
          <source>Perform preprocessing as a separate pass before compilation. By default, GCC performs preprocessing as an integrated part of input tokenization and parsing. If this option is provided, the appropriate language front end (&lt;code&gt;cc1&lt;/code&gt;, &lt;code&gt;cc1plus&lt;/code&gt;, or &lt;code&gt;cc1obj&lt;/code&gt; for C, C++, and Objective-C, respectively) is instead invoked twice, once for preprocessing only and once for actual compilation of the preprocessed input. This option may be useful in conjunction with the</source>
          <target state="translated">Выполните предварительную обработку как отдельный проход перед компиляцией. По умолчанию GCC выполняет предварительную обработку как неотъемлемую часть токенизации и синтаксического анализа входных данных. Если этот параметр предоставлен, соответствующий интерфейсный интерфейс языка ( &lt;code&gt;cc1&lt;/code&gt; , &lt;code&gt;cc1plus&lt;/code&gt; или &lt;code&gt;cc1obj&lt;/code&gt; для C, C ++ и Objective-C соответственно) вызывается дважды: один раз только для предварительной обработки и один раз для фактической компиляции предварительно обработанных входных данных. Эта опция может быть полезна в сочетании с</target>
        </trans-unit>
        <trans-unit id="62b772c98eeb18277e47f6941de481fe39743b88" translate="yes" xml:space="preserve">
          <source>Perform reassociation on trees. This flag is enabled by default at</source>
          <target state="translated">Провести рессоциацию на деревьях.Этот флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="813a6aee318424bad47fc31e7a836620510b882c" translate="yes" xml:space="preserve">
          <source>Perform scalar replacement of aggregates. This pass replaces structure references with scalars to prevent committing structures to memory too early. This flag is enabled by default at</source>
          <target state="translated">Выполните скалярную замену агрегатов.Этот проход заменяет ссылки на структуры скалярами,чтобы предотвратить фиксацию структур в памяти слишком рано.Этот флаг включен по умолчанию при</target>
        </trans-unit>
        <trans-unit id="b26f36abadc06bc5e7c208db61bbe3c358c44821" translate="yes" xml:space="preserve">
          <source>Perform sparse conditional bit constant propagation on trees and propagate pointer alignment information. This pass only operates on local scalar variables and is enabled by default at</source>
          <target state="translated">Выполните разрежение условных битовых констант на деревьях и распространите информацию о выравнивании указателя.Этот проход работает только с локальными скалярными переменными и включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="98694aae92ae0c01003bcd09f650c827470ff6ab" translate="yes" xml:space="preserve">
          <source>Perform sparse conditional constant propagation (CCP) on trees. This pass only operates on local scalar variables and is enabled by default at</source>
          <target state="translated">Выполните разреженное условное постоянное распространение (CCP)на деревьях.Этот проход работает только на локальных скалярных переменных и по умолчанию включен на</target>
        </trans-unit>
        <trans-unit id="8f21fbfa919feaca891f89e479b5cefd818de1a6" translate="yes" xml:space="preserve">
          <source>Perform straight-line strength reduction on trees. This recognizes related expressions involving multiplications and replaces them by less expensive calculations when possible. This is enabled by default at</source>
          <target state="translated">Выполните снижение прочности прямой линии на деревьях.Это позволит распознать связанные выражения,связанные с умножением,и заменить их,когда это возможно,менее дорогостоящими вычислениями.По умолчанию это включено при</target>
        </trans-unit>
        <trans-unit id="fc1747c25395001b1247e16471c4481c44d67bd9" translate="yes" xml:space="preserve">
          <source>Perform swing modulo scheduling immediately before the first scheduling pass. This pass looks at innermost loops and reorders their instructions by overlapping different iterations.</source>
          <target state="translated">Выполняйте планирование по модулю качания непосредственно перед первым проходом по расписанию.Этот проход рассматривает внутренние циклы и переупорядочивает их указания,перекрывая различные итерации.</target>
        </trans-unit>
        <trans-unit id="a919828d7b7d52d94d6f24adec36ae549e8a769d" translate="yes" xml:space="preserve">
          <source>Perform tail duplication to enlarge superblock size. This transformation simplifies the control flow of the function allowing other optimizations to do a better job.</source>
          <target state="translated">Выполните дублирование хвоста для увеличения размера суперблока.Это преобразование упрощает процесс управления функцией,позволяя другим оптимизациям делать более качественную работу.</target>
        </trans-unit>
        <trans-unit id="8a7a4b7c3b7e1bdf82389ca95d6d1678d6326545" translate="yes" xml:space="preserve">
          <source>Perform temporary expression replacement during the SSA-&amp;gt;normal phase. Single use/single def temporaries are replaced at their use location with their defining expression. This results in non-GIMPLE code, but gives the expanders much more complex trees to work on resulting in better RTL generation. This is enabled by default at</source>
          <target state="translated">Выполните временную замену выражения во время фазы SSA-&amp;gt; normal. Одноразовые / одноразовые временные конструкции заменяются в месте их использования их определяющим выражением. Это приводит к не-GIMPLE-коду, но дает экспандерам гораздо более сложные деревья для работы, что приводит к лучшей генерации RTL. По умолчанию это включено в</target>
        </trans-unit>
        <trans-unit id="04e4b2d91846b5259c4027f98674900fe1e5e1ea" translate="yes" xml:space="preserve">
          <source>Perform vectorization on trees. This flag enables</source>
          <target state="translated">Выполните векторизацию на деревьях.Этот флаг включает в себя</target>
        </trans-unit>
        <trans-unit id="bf3de408c364e89ef2141957569f6e056a16d34e" translate="yes" xml:space="preserve">
          <source>Performs a target dependent pass over the instruction stream to schedule instructions of same type together because target machine can execute them more efficiently if they are adjacent to each other in the instruction flow.</source>
          <target state="translated">Выполняет целевой зависимый проход по потоку команд,чтобы запланировать команды одного типа вместе,потому что целевая машина может выполнять их более эффективно,если они находятся рядом друг с другом в потоке команд.</target>
        </trans-unit>
        <trans-unit id="0cf20e92e0ce42954a3e029ad821a60784d2e15d" translate="yes" xml:space="preserve">
          <source>Permissible names are: &amp;lsquo;</source>
          <target state="translated">Допустимые имена: '</target>
        </trans-unit>
        <trans-unit id="af0a0da269eb7e218ba55c95eef7829d862234bb" translate="yes" xml:space="preserve">
          <source>Permissible names for this option are the same as those for</source>
          <target state="translated">Допустимые имена для этой опции те же,что и для</target>
        </trans-unit>
        <trans-unit id="35baeb043fe816dcaf36ed0df9f003c63e8e45b3" translate="yes" xml:space="preserve">
          <source>Permissible values for these parameters are: &lt;code&gt;reset&lt;/code&gt;, &lt;code&gt;software_exception&lt;/code&gt;, &lt;code&gt;page_miss&lt;/code&gt;, &lt;code&gt;timer0&lt;/code&gt;, &lt;code&gt;timer1&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;dma0&lt;/code&gt;, &lt;code&gt;dma1&lt;/code&gt;, &lt;code&gt;wand&lt;/code&gt; and &lt;code&gt;swi&lt;/code&gt;. Multiple parameters indicate that multiple entries in the interrupt vector table should be initialized for this function, i.e. for each parameter &lt;var&gt;name&lt;/var&gt;, a jump to the function is emitted in the section ivt_entry_&lt;var&gt;name&lt;/var&gt;. The parameter(s) may be omitted entirely, in which case no interrupt vector table entry is provided.</source>
          <target state="translated">Допустимые значения для этих параметров: &lt;code&gt;reset&lt;/code&gt; , &lt;code&gt;software_exception&lt;/code&gt; , &lt;code&gt;page_miss&lt;/code&gt; , &lt;code&gt;timer0&lt;/code&gt; , &lt;code&gt;timer1&lt;/code&gt; , &lt;code&gt;message&lt;/code&gt; , &lt;code&gt;dma0&lt;/code&gt; , &lt;code&gt;dma1&lt;/code&gt; , &lt;code&gt;wand&lt;/code&gt; и &lt;code&gt;swi&lt;/code&gt; . Множественные параметры указывают, что для этой функции следует инициализировать несколько записей в таблице векторов прерываний, т.е. для каждого &lt;var&gt;name&lt;/var&gt; параметра в разделе ivt_entry_ &lt;var&gt;name&lt;/var&gt; выполняется переход к функции . Параметр (ы) можно полностью опустить, и в этом случае запись в таблице векторов прерываний не предоставляется.</target>
        </trans-unit>
        <trans-unit id="b9723fc078a6d12e16c3d4a9c0abd787a24129b7" translate="yes" xml:space="preserve">
          <source>Permissible values for this parameter are &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;supervisor&lt;/code&gt;, and &lt;code&gt;machine&lt;/code&gt;. If there is no parameter, then it defaults to &lt;code&gt;machine&lt;/code&gt;.</source>
          <target state="translated">Допустимые значения для этого параметра: &lt;code&gt;user&lt;/code&gt; , &lt;code&gt;supervisor&lt;/code&gt; и &lt;code&gt;machine&lt;/code&gt; . Если параметра нет, то по умолчанию используется &lt;code&gt;machine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cc7aed9a0397bf927110c664bfb64b86eeabb19" translate="yes" xml:space="preserve">
          <source>Permissible values for this parameter are: &lt;code&gt;IRQ&lt;/code&gt;, &lt;code&gt;FIQ&lt;/code&gt;, &lt;code&gt;SWI&lt;/code&gt;, &lt;code&gt;ABORT&lt;/code&gt; and &lt;code&gt;UNDEF&lt;/code&gt;.</source>
          <target state="translated">Допустимые значения для этого параметра: &lt;code&gt;IRQ&lt;/code&gt; , &lt;code&gt;FIQ&lt;/code&gt; , &lt;code&gt;SWI&lt;/code&gt; , &lt;code&gt;ABORT&lt;/code&gt; и &lt;code&gt;UNDEF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57d5e1c32f10448459df52f2af315ff5a35b20a7" translate="yes" xml:space="preserve">
          <source>Permissible values for this parameter are: &lt;code&gt;ilink1&lt;/code&gt; and &lt;code&gt;ilink2&lt;/code&gt;.</source>
          <target state="translated">Допустимые значения для этого параметра: &lt;code&gt;ilink1&lt;/code&gt; и &lt;code&gt;ilink2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f3f12e5bf476c3ff221016dda60f3c7460d0647" translate="yes" xml:space="preserve">
          <source>Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with the Invariant Sections being &amp;ldquo;Funding Free Software&amp;rdquo;, the Front-Cover Texts being (a) (see below), and with the Back-Cover Texts being (b) (see below). A copy of the license is included in the section entitled &amp;ldquo;GNU Free Documentation License&amp;rdquo;.</source>
          <target state="translated">Разрешается копировать, распространять и / или изменять этот документ в соответствии с условиями лицензии GNU Free Documentation License версии 1.3 или любой более поздней версии, опубликованной Free Software Foundation; при этом неизменяемые разделы означают &amp;laquo;Финансирование бесплатного программного обеспечения&amp;raquo;, тексты лицевой обложки - (а) (см. ниже), а тексты задней обложки - (б) (см. ниже). Копия лицензии включена в раздел &amp;laquo;Лицензия свободной документации GNU&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="cb303e16e1de5b240406d59f6d4950a031fdb18c" translate="yes" xml:space="preserve">
          <source>Permit scheduling of function prologue and epilogue sequences. Using this option can result in code that is not compliant with the C-SKY V2 ABI prologue requirements and that cannot be debugged or backtraced. It is disabled by default.</source>
          <target state="translated">Разрешение на планирование последовательности функций пролога и эпилога.Использование данной опции может привести к появлению кода,который не соответствует требованиям ABI-пролога C-SKY V2,и который не может быть отлажен или отслежен.По умолчанию она отключена.</target>
        </trans-unit>
        <trans-unit id="efb7f323fa4189969e284506cb84cfc7c5590b36" translate="yes" xml:space="preserve">
          <source>Place a stop bit after every cycle when scheduling. This option is on by default.</source>
          <target state="translated">Поставьте стоповый бит после каждого цикла при составлении расписания.Эта опция включена по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f322bfc998e9190a4bf5a7767d3d6625d8974da3" translate="yes" xml:space="preserve">
          <source>Place each function or data item into its own section in the output file if the target supports arbitrary sections. The name of the function or the name of the data item determines the section&amp;rsquo;s name in the output file.</source>
          <target state="translated">Поместите каждую функцию или элемент данных в отдельный раздел в выходном файле, если цель поддерживает произвольные разделы. Имя функции или имя элемента данных определяет имя раздела в выходном файле.</target>
        </trans-unit>
        <trans-unit id="d5dd2f33d892c7609324f2984b75dba44e198b60" translate="yes" xml:space="preserve">
          <source>Place output in file &lt;var&gt;file&lt;/var&gt;. This applies to whatever sort of output is being produced, whether it be an executable file, an object file, an assembler file or preprocessed C code.</source>
          <target state="translated">Поместите вывод в файл &lt;var&gt;file&lt;/var&gt; . Это применимо к любому типу вывода, будь то исполняемый файл, объектный файл, файл ассемблера или предварительно обработанный код C.</target>
        </trans-unit>
        <trans-unit id="6702fed7fed6176a523c58b5ddd51a1d929453f7" translate="yes" xml:space="preserve">
          <source>Please note the warning under</source>
          <target state="translated">Пожалуйста,обратите внимание на предупреждение в разделе</target>
        </trans-unit>
        <trans-unit id="fa1c5292c2aed3e9e6527fac2de8fd113fa58e19" translate="yes" xml:space="preserve">
          <source>Pointer arguments to variadic functions.</source>
          <target state="translated">Аргументы указателей к вариадическим функциям.</target>
        </trans-unit>
        <trans-unit id="c72a43085fa8bb37fba01322fd21a237f32d0882" translate="yes" xml:space="preserve">
          <source>Pointer register (r26&amp;ndash;r31)</source>
          <target state="translated">Регистр указателя (r26 &amp;ndash; r31)</target>
        </trans-unit>
        <trans-unit id="548e8a6d360621f369a6ac68a9d06d3b535c4226" translate="yes" xml:space="preserve">
          <source>Pointer with long displacement.</source>
          <target state="translated">Стрелка с длинным смещением.</target>
        </trans-unit>
        <trans-unit id="f829df7980df5422cdac2c36bfd4a6a0924d2a9d" translate="yes" xml:space="preserve">
          <source>Pointer with short displacement.</source>
          <target state="translated">Стрелка с коротким смещением.</target>
        </trans-unit>
        <trans-unit id="221a34492903a7d75d1476fa80d265dd838ae397" translate="yes" xml:space="preserve">
          <source>Pointers in the implementation are 16 bits wide. The address of a function or label is represented as word address so that indirect jumps and calls can target any code address in the range of 64 Ki words.</source>
          <target state="translated">Указатели в реализации имеют ширину 16 бит.Адрес функции или метки представлен в виде адреса слова,так что косвенные прыжки и вызовы могут быть направлены на любой адрес кода в диапазоне 64 Ki слов.</target>
        </trans-unit>
        <trans-unit id="b71846dbdd6d5df077c8d26dc154bb35c68e7752" translate="yes" xml:space="preserve">
          <source>Pointers to arrays with qualifiers work as expected.</source>
          <target state="translated">Указатели на массивы с классификаторами работают,как и ожидалось.</target>
        </trans-unit>
        <trans-unit id="da127d1a6d3dff99efb435318078508cb04231bb" translate="yes" xml:space="preserve">
          <source>Popping the arguments after the function call can be expensive on AVR so that accumulating the stack space might lead to smaller executables because arguments need not be removed from the stack after such a function call.</source>
          <target state="translated">Вытаскивание аргументов после вызова функции может быть дорогостоящим в AVR,так что накопление места в стеке может привести к меньшему количеству исполняемых файлов,так как аргументы не нужно удалять из стека после такого вызова функции.</target>
        </trans-unit>
        <trans-unit id="1ec131a13f5ccb0f8a6fa30408faa2bccded3261" translate="yes" xml:space="preserve">
          <source>Position-independent code requires special support, and therefore works only on certain machines.</source>
          <target state="translated">Позиционно-независимый код требует особой поддержки и поэтому работает только на определенных машинах.</target>
        </trans-unit>
        <trans-unit id="ff1fde2f659bcd7d20cf19e7e6dbdfb1735e0055" translate="yes" xml:space="preserve">
          <source>Position-independent code requires special support, and therefore works only on certain machines. For the x86, GCC supports PIC for System V but not for the Sun 386i. Code generated for the IBM RS/6000 is always position-independent.</source>
          <target state="translated">Позиционно-независимый код требует особой поддержки и поэтому работает только на определенных машинах.Для x86 GCC поддерживает PIC для System V,но не для Sun 386i.Код,генерируемый для IBM RS/6000,всегда является позиционно-независимым.</target>
        </trans-unit>
        <trans-unit id="d29deccf36aae92e4a7875b6f993d6712f4c48c0" translate="yes" xml:space="preserve">
          <source>PowerPC 405 32-bit Embedded CPU.</source>
          <target state="translated">32-разрядный встроенный процессор PowerPC 405.</target>
        </trans-unit>
        <trans-unit id="b1d2fd0956b324f2b71d45c79701e634006f0998" translate="yes" xml:space="preserve">
          <source>PowerPC 440 32-bit Embedded CPU.</source>
          <target state="translated">PowerPC 440 32-битный встроенный процессор.</target>
        </trans-unit>
        <trans-unit id="8c88a5ec0bad9b2ec3a6e912ad1b84fe1cb0e913" translate="yes" xml:space="preserve">
          <source>PowerPC and IBM RS6000&amp;mdash;</source>
          <target state="translated">PowerPC и IBM RS6000&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="bcb9720231f4eefcc2911c6644e67562366e664a" translate="yes" xml:space="preserve">
          <source>Pragmas accepted by GCC.</source>
          <target state="translated">Прагмы приняты GCC.</target>
        </trans-unit>
        <trans-unit id="ae3be2297868a8755878b8140bb470b2659e5173" translate="yes" xml:space="preserve">
          <source>Pragmas to control overflow and rounding behaviors are not implemented.</source>
          <target state="translated">Прагмы по контролю над переполнением и округлением поведения не реализуются.</target>
        </trans-unit>
        <trans-unit id="8e93065e97687afdb6c2cb1807aa95de831b3446" translate="yes" xml:space="preserve">
          <source>Predefine &lt;var&gt;name&lt;/var&gt; as a macro, with definition &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Заранее определите &lt;var&gt;name&lt;/var&gt; как макрос с определением &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e38583cb5384743db9afcc426cedec4f148c0b26" translate="yes" xml:space="preserve">
          <source>Predicate register (&amp;lsquo;</source>
          <target state="translated">Регистр предикатов ('</target>
        </trans-unit>
        <trans-unit id="f6c24206b3789713e962d5bee080397fea9809bf" translate="yes" xml:space="preserve">
          <source>Predicate registers in register file A (A0&amp;ndash;A2 on C64X and higher, A1 and A2 otherwise).</source>
          <target state="translated">Регистры предикатов в регистровом файле A (A0 &amp;ndash; A2 на C64X и выше, A1 и A2 в противном случае).</target>
        </trans-unit>
        <trans-unit id="fec436f1165c01f7b8c12f56c12ec41ae48daa7c" translate="yes" xml:space="preserve">
          <source>Predicate registers in register file B (B0&amp;ndash;B2).</source>
          <target state="translated">Регистры предикатов в регистровом файле B (B0 &amp;ndash; B2).</target>
        </trans-unit>
        <trans-unit id="d010b8de73801ea6c16e7a693f380cb435e67997" translate="yes" xml:space="preserve">
          <source>Prefer 128-bit vector width for instructions.</source>
          <target state="translated">Предпочитает 128-битную векторную ширину для инструкций.</target>
        </trans-unit>
        <trans-unit id="c72722357c9f06e0451f0baf6353c7d5bd987c68" translate="yes" xml:space="preserve">
          <source>Prefer 256-bit vector width for instructions.</source>
          <target state="translated">Предпочитает 256-битную векторную ширину для инструкций.</target>
        </trans-unit>
        <trans-unit id="3d1a90957e39dc52fe3e0a5dff721af2c1533ae9" translate="yes" xml:space="preserve">
          <source>Prefer 512-bit vector width for instructions.</source>
          <target state="translated">Предпочитает 512-битную векторную ширину для инструкций.</target>
        </trans-unit>
        <trans-unit id="55b3d6f2f24c6bd41aa8d455a302118a96706fdb" translate="yes" xml:space="preserve">
          <source>Prefer initialization to assignment in constructors.</source>
          <target state="translated">Предпочтение отдается инициализации,а не назначению в конструкторах.</target>
        </trans-unit>
        <trans-unit id="e5fe97372ea4c44c05ad1e9f80e485c5b8d2b708" translate="yes" xml:space="preserve">
          <source>Prefer word access when reading byte quantities.</source>
          <target state="translated">Предпочитает доступ к словам при чтении количества байтов.</target>
        </trans-unit>
        <trans-unit id="751bcd963c78ac89d226c347c0db73a5eb17519e" translate="yes" xml:space="preserve">
          <source>Prefer zero-displacement conditional branches for conditional move instruction patterns. This can result in faster code on the SH4 processor.</source>
          <target state="translated">Предпочтение отдается условным ветвям с нулевым смещением для условных схем обучения перемещению.Это может привести к более быстрому коду на процессоре SH4.</target>
        </trans-unit>
        <trans-unit id="62927f12aebe8245ca7ccbec4d045c60284016e4" translate="yes" xml:space="preserve">
          <source>Preferentially allocate registers that allow short instruction generation. This can result in increased instruction count, so this may either reduce or increase overall code size.</source>
          <target state="translated">Предпочтительно выделять регистры,которые позволяют генерировать короткие инструкции.Это может привести к увеличению количества инструкций,так что это может либо уменьшить,либо увеличить общий размер кода.</target>
        </trans-unit>
        <trans-unit id="a1fdf593aa54fe21b57f9608b9af0f175a51f5bf" translate="yes" xml:space="preserve">
          <source>Prepend (do not prepend) a &amp;lsquo;</source>
          <target state="translated">Добавить (не добавлять) в начало</target>
        </trans-unit>
        <trans-unit id="7b1baabda5f4c155086c1133972437c2a11a8717" translate="yes" xml:space="preserve">
          <source>Preprocessor Options</source>
          <target state="translated">Опции препроцессора</target>
        </trans-unit>
        <trans-unit id="c52cfab87f1f18bc931d7a53ed6f0f346f5be727" translate="yes" xml:space="preserve">
          <source>Preserve complete path information in the names of generated</source>
          <target state="translated">Сохранять полную информацию о пути в именах генерируемых</target>
        </trans-unit>
        <trans-unit id="133f0b62da14d995af8aaf975f0c4e6493e01234" translate="yes" xml:space="preserve">
          <source>Pretend the symbol &lt;var&gt;symbol&lt;/var&gt; is undefined, to force linking of library modules to define it. You can use</source>
          <target state="translated">Представьте, что символ &lt;var&gt;symbol&lt;/var&gt; не определен, чтобы принудительно связать модули библиотеки для его определения. Ты можешь использовать</target>
        </trans-unit>
        <trans-unit id="93b748cdea3b771906f02431b0afee34e97035a0" translate="yes" xml:space="preserve">
          <source>Prevent floating-point registers from being used in any manner. This is necessary for compiling kernels that perform lazy context switching of floating-point registers. If you use this option and attempt to perform floating-point operations, the compiler aborts.</source>
          <target state="translated">Предотвратить использование регистров с плавающей запятой.Это необходимо для компиляции ядер,выполняющих ленивое переключение контекста регистров с плавающей точкой.Если вы используете эту опцию и пытаетесь выполнять операции с плавающей точкой,компилятор прерывает работу.</target>
        </trans-unit>
        <trans-unit id="bb7e629d281cc1130ee30ba469e70f725c11a1a9" translate="yes" xml:space="preserve">
          <source>Prevent the compiler from using indexing address modes. This avoids some rather obscure problems when compiling MIG generated code under MACH.</source>
          <target state="translated">Не позволяйте компилятору использовать режимы адресации индексации.Это позволяет избежать некоторых довольно непонятных проблем при компиляции MIG сгенерированного кода под MACH.</target>
        </trans-unit>
        <trans-unit id="a884d00641db1ef92c5861d9f7679506da26ff4e" translate="yes" xml:space="preserve">
          <source>Prevent the reordering of instructions in the function prologue, or the merging of those instruction with the instructions in the function&amp;rsquo;s body. This means that all functions start with a recognizable set of instructions (or in fact one of a choice from a small set of different function prologues), and this information can be used to locate the start of functions inside an executable piece of code. The default is</source>
          <target state="translated">Предотвратите переупорядочивание инструкций в прологе функции или слияние этих инструкций с инструкциями в теле функции. Это означает, что все функции начинаются с узнаваемого набора инструкций (или фактически с одного из вариантов выбора из небольшого набора различных прологов функций), и эта информация может использоваться для определения местоположения начала функций внутри исполняемого фрагмента кода. По умолчанию</target>
        </trans-unit>
        <trans-unit id="8bee5f1a685fff3e9255748fa0a591a79f24269b" translate="yes" xml:space="preserve">
          <source>Prevents GCC from issuing a warning message if it finds more than one fast interrupt handler when it is compiling a file. The default is to issue a warning for each extra fast interrupt handler found, as the RX only supports one such interrupt.</source>
          <target state="translated">Предотвращает GCC от выдачи предупреждающего сообщения,если он находит более одного быстрого обработчика прерываний при компиляции файла.По умолчанию предупреждение выдается для каждого найденного сверхбыстрого обработчика прерываний,так как RX поддерживает только одно такое прерывание.</target>
        </trans-unit>
        <trans-unit id="0c298d2156eb911587b91d6784586e592c266917" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;_0040encode#g_t_0040encode&quot;&gt;@encode&lt;/a&gt;, Up: &lt;a href=&quot;type-encoding#Type-encoding&quot;&gt;Type encoding&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;_0040encode#g_t_0040encode&quot;&gt;@encode&lt;/a&gt; , Вверх: &lt;a href=&quot;type-encoding#Type-encoding&quot;&gt;Кодировка типа&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Индекс&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="45ae7dc171d8dbf2c108f57d090926498ec01d52" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;basic-powerpc-built_002din-functions-available-on-isa-2_002e07#Basic-PowerPC-Built_002din-Functions-Available-on-ISA-2_002e07&quot;&gt;Basic PowerPC Built-in Functions Available on ISA 2.07&lt;/a&gt;, Up: &lt;a href=&quot;basic-powerpc-built_002din-functions#Basic-PowerPC-Built_002din-Functions&quot;&gt;Basic PowerPC Built-in Functions&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;basic-powerpc-built_002din-functions-available-on-isa-2_002e07#Basic-PowerPC-Built_002din-Functions-Available-on-ISA-2_002e07&quot;&gt;Базовые встроенные функции PowerPC, доступные в ISA 2.07&lt;/a&gt; , Вверх: &lt;a href=&quot;basic-powerpc-built_002din-functions#Basic-PowerPC-Built_002din-Functions&quot;&gt;Базовые встроенные функции PowerPC&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Индекс&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="92416ecc83e7012e1b2389fd283cb8d6c4bca85a" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;c99-thread_002dlocal-edits#C99-Thread_002dLocal-Edits&quot;&gt;C99 Thread-Local Edits&lt;/a&gt;, Up: &lt;a href=&quot;thread_002dlocal#Thread_002dLocal&quot;&gt;Thread-Local&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;c99-thread_002dlocal-edits#C99-Thread_002dLocal-Edits&quot;&gt;C99 Локальные изменения потока&lt;/a&gt; , Вверх: &lt;a href=&quot;thread_002dlocal#Thread_002dLocal&quot;&gt;Локальные изменения &lt;/a&gt;&lt;a href=&quot;index#SEC_Contents&quot;&gt;потока&lt;/a&gt; [ Содержание ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="095b2c8cec2a9ee9cd6a1fc1d2c2268ef5e58bb5" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;dynamically-registering-methods#Dynamically-registering-methods&quot;&gt;Dynamically registering methods&lt;/a&gt;, Up: &lt;a href=&quot;messaging-with-the-gnu-objective_002dc-runtime#Messaging-with-the-GNU-Objective_002dC-runtime&quot;&gt;Messaging with the GNU Objective-C runtime&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Назад: &lt;a href=&quot;dynamically-registering-methods#Dynamically-registering-methods&quot;&gt;Динамическая регистрация методов&lt;/a&gt; , Вверх: &lt;a href=&quot;messaging-with-the-gnu-objective_002dc-runtime#Messaging-with-the-GNU-Objective_002dC-runtime&quot;&gt;Обмен сообщениями в среде выполнения GNU Objective-C&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8f89899827d8a560e31e2ca14d0a8300f657be83" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;Environment Variables&lt;/a&gt;, Up: &lt;a href=&quot;invoking-gcc#Invoking-GCC&quot;&gt;Invoking GCC&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;Переменные среды&lt;/a&gt; , Вверх: &lt;a href=&quot;invoking-gcc#Invoking-GCC&quot;&gt;Вызов GCC&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3abd0fcac2246de54cbf842bcf5c2d572e95cf49" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;fast-enumeration-details#Fast-enumeration-details&quot;&gt;Fast enumeration details&lt;/a&gt;, Up: &lt;a href=&quot;fast-enumeration#Fast-enumeration&quot;&gt;Fast enumeration&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Назад: &lt;a href=&quot;fast-enumeration-details#Fast-enumeration-details&quot;&gt;Детали быстрого перечисления&lt;/a&gt; , Вверх: &lt;a href=&quot;fast-enumeration#Fast-enumeration&quot;&gt;Быстрое перечисление&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cd478c56630e085181033925575eebae41d495c" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;gcov_002dtool-intro#Gcov_002dtool-Intro&quot;&gt;Gcov-tool Intro&lt;/a&gt;, Up: &lt;a href=&quot;gcov_002dtool#Gcov_002dtool&quot;&gt;Gcov-tool&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;gcov_002dtool-intro#Gcov_002dtool-Intro&quot;&gt;Gcov-tool Intro&lt;/a&gt; , Вверх: &lt;a href=&quot;gcov_002dtool#Gcov_002dtool&quot;&gt;Gcov-tool&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e40d48fc32253bef8628625302a0abbcde80f82" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;global-register-variables#Global-Register-Variables&quot;&gt;Global Register Variables&lt;/a&gt;, Up: &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;global-register-variables#Global-Register-Variables&quot;&gt;Глобальные регистровые переменные&lt;/a&gt; , Вверх: &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Явные регистровые переменные&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="180c60ac0f109d44e10ade3943d2c55400d71f8d" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;modifiers#Modifiers&quot;&gt;Modifiers&lt;/a&gt;, Up: &lt;a href=&quot;constraints#Constraints&quot;&gt;Constraints&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;modifiers#Modifiers&quot;&gt;Модификаторы&lt;/a&gt; , Вверх: &lt;a href=&quot;constraints#Constraints&quot;&gt;Ограничения&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2690cc6bd85085d1a20978cb1ff148ed57eeb42a" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;non_002dbugs#Non_002dbugs&quot;&gt;Non-bugs&lt;/a&gt;, Up: &lt;a href=&quot;trouble#Trouble&quot;&gt;Trouble&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;non_002dbugs#Non_002dbugs&quot;&gt;Без ошибок&lt;/a&gt; , Вверх: &lt;a href=&quot;trouble#Trouble&quot;&gt;Проблема&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="518a1b2a1a9d78ecacf627dac6376da5b9566530" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;paired_002dsingle-built_002din-functions#Paired_002dSingle-Built_002din-Functions&quot;&gt;Paired-Single Built-in Functions&lt;/a&gt;, Up: &lt;a href=&quot;mips-loongson-built_002din-functions#MIPS-Loongson-Built_002din-Functions&quot;&gt;MIPS Loongson Built-in Functions&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Назад: &lt;a href=&quot;paired_002dsingle-built_002din-functions#Paired_002dSingle-Built_002din-Functions&quot;&gt;Встроенные функции&lt;/a&gt; , связанные с парой , Вверх: &lt;a href=&quot;mips-loongson-built_002din-functions#MIPS-Loongson-Built_002din-Functions&quot;&gt;Встроенные функции MIPS Loongson&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a6424fd89847064955d1584a816d8d119f016ca" translate="yes" xml:space="preserve">
          <source>Previous: &lt;a href=&quot;powerpc-altivec-built_002din-functions-available-on-isa-2_002e07#PowerPC-AltiVec-Built_002din-Functions-Available-on-ISA-2_002e07&quot;&gt;PowerPC AltiVec Built-in Functions Available on ISA 2.07&lt;/a&gt;, Up: &lt;a href=&quot;powerpc-altivec_002fvsx-built_002din-functions#PowerPC-AltiVec_002fVSX-Built_002din-Functions&quot;&gt;PowerPC AltiVec/VSX Built-in Functions&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Предыдущая: &lt;a href=&quot;powerpc-altivec-built_002din-functions-available-on-isa-2_002e07#PowerPC-AltiVec-Built_002din-Functions-Available-on-ISA-2_002e07&quot;&gt;Встроенные функции PowerPC AltiVec, доступные в ISA 2.07&lt;/a&gt; , Вверх: &lt;a href=&quot;powerpc-altivec_002fvsx-built_002din-functions#PowerPC-AltiVec_002fVSX-Built_002din-Functions&quot;&gt;Встроенные функции PowerPC AltiVec / VSX&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Содержание&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Индекс&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5070ca712488a6295aeb93bb4b823f413e03dde1" translate="yes" xml:space="preserve">
          <source>Print (on standard error output) the commands executed to run the stages of compilation. Also print the version number of the compiler driver program and of the preprocessor and the compiler proper.</source>
          <target state="translated">Распечатайте (на стандартном выводе ошибок)команды,выполняемые для запуска этапов компиляции.Также выведите номер версии драйвера компилятора,а также номер препроцессора и собственно компилятора.</target>
        </trans-unit>
        <trans-unit id="f0802ef33bb80e0daadac78e85825604f940dbf7" translate="yes" xml:space="preserve">
          <source>Print (on the standard output) a description of target-specific command-line options for each tool. For some targets extra target-specific information may also be printed.</source>
          <target state="translated">Распечатайте (на стандартном выводе)описание специфических для каждого инструмента опций командной строки.Для некоторых целей может быть также напечатана дополнительная информация по конкретным целям.</target>
        </trans-unit>
        <trans-unit id="da44c4f450112c4e0f6f8b3b80edf560950a6ee6" translate="yes" xml:space="preserve">
          <source>Print (on the standard output) a description of the command-line options understood by &lt;code&gt;gcc&lt;/code&gt;. If the</source>
          <target state="translated">Распечатайте (в стандартный вывод) описание параметров командной строки, понятных &lt;code&gt;gcc&lt;/code&gt; . Если</target>
        </trans-unit>
        <trans-unit id="e18b1edf66bd2215edee93ad1bfe2475848c1c40" translate="yes" xml:space="preserve">
          <source>Print (on the standard output) a description of the command-line options understood by the compiler that fit into all specified classes and qualifiers. These are the supported classes:</source>
          <target state="translated">Выведите (на стандартном выводе)описание понятных компилятору опций командной строки,которые подходят для всех заданных классов и классификаторов.Это поддерживаемые классы:</target>
        </trans-unit>
        <trans-unit id="36e2db25cdaf136a1b1871f7bddede044a014af0" translate="yes" xml:space="preserve">
          <source>Print (or do not print) additional debug information when compiling. The default is to not print debug information.</source>
          <target state="translated">Печатайте (или не печатайте)дополнительную отладочную информацию при компиляции.По умолчанию не печатать отладочную информацию.</target>
        </trans-unit>
        <trans-unit id="042a1c2bccf30839985d02fecb0aaa588016c586" translate="yes" xml:space="preserve">
          <source>Print &lt;var&gt;str&lt;/var&gt; as an error message. &lt;var&gt;str&lt;/var&gt; is terminated by a newline. Use this when inconsistent options are detected.</source>
          <target state="translated">Вывести &lt;var&gt;str&lt;/var&gt; как сообщение об ошибке. &lt;var&gt;str&lt;/var&gt; заканчивается новой строкой. Используйте это при обнаружении несогласованных параметров.</target>
        </trans-unit>
        <trans-unit id="646c20558d20e2f30241cc9574d344b39d2a71e9" translate="yes" xml:space="preserve">
          <source>Print CPU tuning information as comment in assembler file. This is an option used only for regression testing of the compiler and not intended for ordinary use in compiling code. This option is disabled by default.</source>
          <target state="translated">Распечатать информацию о настройке процессора в виде комментария в ассемблерном файле.Данная опция используется только для регрессионного тестирования компилятора и не предназначена для обычного использования при компиляции кода.По умолчанию данная опция отключена.</target>
        </trans-unit>
        <trans-unit id="0c02ead981dc46c74eca673ebbadeb5775102eb4" translate="yes" xml:space="preserve">
          <source>Print a raw representation of the tree. By default, trees are pretty-printed into a C-like representation.</source>
          <target state="translated">Напечатайте необработанное изображение дерева.По умолчанию деревья красиво распечатываются в C-подобное представление.</target>
        </trans-unit>
        <trans-unit id="bee9976317d77665142eb597fb744cf4a5bc63c3" translate="yes" xml:space="preserve">
          <source>Print an absolute memory reference.</source>
          <target state="translated">Выведите на печать справку об абсолютной памяти.</target>
        </trans-unit>
        <trans-unit id="c1b62ec38c8c02ce83661de096266f4e8ad36d5d" translate="yes" xml:space="preserve">
          <source>Print detailed optimization information. This includes &amp;lsquo;</source>
          <target state="translated">Распечатайте подробную информацию по оптимизации. Это включает '</target>
        </trans-unit>
        <trans-unit id="747925ea13ebc5265845c242e39f7d5de361cc9c" translate="yes" xml:space="preserve">
          <source>Print fix-it hints to stderr in unified diff format, after any diagnostics are printed. For example:</source>
          <target state="translated">Печать подсказок fix-it в stderr в унифицированном диф-формате,после любой диагностики.Например:</target>
        </trans-unit>
        <trans-unit id="27e48e9709e199f67d90728d88acda8122e690ad" translate="yes" xml:space="preserve">
          <source>Print full gcda filename.</source>
          <target state="translated">Напечатайте полное имя файла gcda.</target>
        </trans-unit>
        <trans-unit id="b3444c534ef235bd7cfb2bb1457050c5df19fa98" translate="yes" xml:space="preserve">
          <source>Print function level overlap score.</source>
          <target state="translated">Счетчик перекрытия уровня функции печати.</target>
        </trans-unit>
        <trans-unit id="2259612d90015512d8565367d9b66e6d1907b7e3" translate="yes" xml:space="preserve">
          <source>Print information about missed optimizations. Individual passes control which information to include in the output.</source>
          <target state="translated">Печать информации о пропущенных оптимизациях.Отдельный передает управление тем,какую информацию включить в вывод.</target>
        </trans-unit>
        <trans-unit id="0e737c134e058a6b5be3c38b4d61e9060cbe2d6f" translate="yes" xml:space="preserve">
          <source>Print information when an optimization is successfully applied. It is up to a pass to decide which information is relevant. For example, the vectorizer passes print the source location of loops which are successfully vectorized.</source>
          <target state="translated">Печать информации при успешном применении оптимизации.Решение о том,какая информация имеет отношение к делу,зависит от прохода.Например,векторизатор выведет исходное местоположение циклов,которые успешно векторизованы.</target>
        </trans-unit>
        <trans-unit id="49e8d2891f1bb00bf2fce45c40fe769f980367c0" translate="yes" xml:space="preserve">
          <source>Print object level overlap score.</source>
          <target state="translated">Счетчик перекрытия уровня объекта печати.</target>
        </trans-unit>
        <trans-unit id="3a95fbc869807d22e5b89ec0f92871dcddcd83ac" translate="yes" xml:space="preserve">
          <source>Print on</source>
          <target state="translated">Печать на</target>
        </trans-unit>
        <trans-unit id="fdc5672b8cdd0196a1822504903f9194000cffdc" translate="yes" xml:space="preserve">
          <source>Print raw symbol name (without syntax-specific prefixes).</source>
          <target state="translated">Распечатайте необработанное имя символа (без синтаксических префиксов).</target>
        </trans-unit>
        <trans-unit id="8b3eb16e33ebf816827fd23a1d5134fcb39c5577" translate="yes" xml:space="preserve">
          <source>Print the DImode name of the register.</source>
          <target state="translated">Распечатайте DImode имя регистра.</target>
        </trans-unit>
        <trans-unit id="8cbb39fe370973258d3221791eb533a79143c1a4" translate="yes" xml:space="preserve">
          <source>Print the HImode name of the register.</source>
          <target state="translated">Распечатайте HImode имя регистра.</target>
        </trans-unit>
        <trans-unit id="5f0523fe616c1a4ec29efecc044a8b533dbfc088" translate="yes" xml:space="preserve">
          <source>Print the QImode name for a &amp;ldquo;high&amp;rdquo; register.</source>
          <target state="translated">Выведите имя QImode для &amp;laquo;высокого&amp;raquo; регистра.</target>
        </trans-unit>
        <trans-unit id="cba0544fdad24e8c71fa2998d0fc17006f470a5d" translate="yes" xml:space="preserve">
          <source>Print the QImode name of the register.</source>
          <target state="translated">Выведите на печать QImode имя регистра.</target>
        </trans-unit>
        <trans-unit id="415fe8734ed5c7ca7d367010aad83e19c898fcd9" translate="yes" xml:space="preserve">
          <source>Print the SImode name of the register.</source>
          <target state="translated">Выведите на печать название SImode регистра.</target>
        </trans-unit>
        <trans-unit id="7bde1647cee4db781bd592bee36a2a9579dff9ad" translate="yes" xml:space="preserve">
          <source>Print the address in Double Integer (DImode) mode (8 bytes) when the target is 64-bit. Otherwise mode is unspecified (VOIDmode).</source>
          <target state="translated">Выведите адрес в режиме Double Integer (DImode)(8 байт),когда целевой является 64-битный.Иначе режим не определен (VOIDmode).</target>
        </trans-unit>
        <trans-unit id="0a2a748643cbf5bccb4c8b64fbb809daa63616ff" translate="yes" xml:space="preserve">
          <source>Print the address of each node. Usually this is not meaningful as it changes according to the environment and source file. Its primary use is for tying up a dump file with a debug environment.</source>
          <target state="translated">Распечатайте адрес каждого узла.Обычно это не имеет смысла,так как изменяется в зависимости от окружения и исходного файла.В основном он используется для связывания файла дампа со средой отладки.</target>
        </trans-unit>
        <trans-unit id="c30bf938013bc01150cd4223148df68eeb709db3" translate="yes" xml:space="preserve">
          <source>Print the compiler version (for example, &lt;code&gt;3.0&lt;/code&gt;, &lt;code&gt;6.3.0&lt;/code&gt; or &lt;code&gt;7&lt;/code&gt;)&amp;mdash;and don&amp;rsquo;t do anything else. This is the compiler version used in filesystem paths and specs. Depending on how the compiler has been configured it can be just a single number (major version), two numbers separated by a dot (major and minor version) or three numbers separated by dots (major, minor and patchlevel version).</source>
          <target state="translated">&lt;code&gt;6.3.0&lt;/code&gt; версию компилятора (например, &lt;code&gt;3.0&lt;/code&gt; , 6.3.0 или &lt;code&gt;7&lt;/code&gt; ) - и больше ничего не делайте. Это версия компилятора, используемая в путях и спецификациях файловой системы. В зависимости от того, как был настроен компилятор, это может быть просто одно число (основная версия), два числа, разделенных точкой (основная и дополнительная версия), или три числа, разделенных точками (основная, дополнительная версия и версия на уровне исправлений).</target>
        </trans-unit>
        <trans-unit id="39f02afa5381880ed9364aabcf135637b524d215" translate="yes" xml:space="preserve">
          <source>Print the compiler&amp;rsquo;s built-in specs&amp;mdash;and don&amp;rsquo;t do anything else. (This is used when GCC itself is being built.) See &lt;a href=&quot;spec-files#Spec-Files&quot;&gt;Spec Files&lt;/a&gt;.</source>
          <target state="translated">Распечатайте встроенные спецификации компилятора и больше ничего не делайте. (Это используется, когда строится сам GCC.) См. &lt;a href=&quot;spec-files#Spec-Files&quot;&gt;Файлы спецификаций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="653f7adb65f1f84d8d88241f8ddf357af1eec6c5" translate="yes" xml:space="preserve">
          <source>Print the compiler&amp;rsquo;s target machine (for example, &amp;lsquo;</source>
          <target state="translated">Выведите целевую машину компилятора (например, '</target>
        </trans-unit>
        <trans-unit id="2ea813d3d56acd15b7aece5721398087dd287686" translate="yes" xml:space="preserve">
          <source>Print the directory name corresponding to the multilib selected by any other switches present in the command line. This directory is supposed to exist in &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt;.</source>
          <target state="translated">Выведите имя каталога, соответствующее множеству файлов, выбранных любыми другими переключателями, присутствующими в командной строке. Предполагается, что этот каталог существует в &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce50f8d87d282115171e0d700a3119dab66c3b68" translate="yes" xml:space="preserve">
          <source>Print the full absolute name of the library file &lt;var&gt;library&lt;/var&gt; that would be used when linking&amp;mdash;and don&amp;rsquo;t do anything else. With this option, GCC does not compile or link anything; it just prints the file name.</source>
          <target state="translated">Выведите полное абсолютное имя библиотеки файлов &lt;var&gt;library&lt;/var&gt; , которая будет использоваться при компоновке, и больше ничего не делайте. С этой опцией GCC ничего не компилирует и не связывает; он просто печатает имя файла.</target>
        </trans-unit>
        <trans-unit id="2d08bb037870c1271f6d358ce7e39175cb5c6846" translate="yes" xml:space="preserve">
          <source>Print the full compiler version&amp;mdash;and don&amp;rsquo;t do anything else. The output is always three numbers separated by dots, major, minor and patchlevel version.</source>
          <target state="translated">Распечатайте полную версию компилятора и больше ничего не делайте. Вывод всегда состоит из трех чисел, разделенных точками, - основной, дополнительной и версии исправлений.</target>
        </trans-unit>
        <trans-unit id="1ca2b71a9e603f4ac7cb5b1a49646b6058026d67" translate="yes" xml:space="preserve">
          <source>Print the label name with no punctuation.</source>
          <target state="translated">Распечатайте имя этикетки без знаков препинания.</target>
        </trans-unit>
        <trans-unit id="ed777f4d8158d9a13715e5d83bcf213db1f9294b" translate="yes" xml:space="preserve">
          <source>Print the mapping from multilib directory names to compiler switches that enable them. The directory name is separated from the switches by &amp;lsquo;</source>
          <target state="translated">Распечатайте сопоставление имен мультибиблиотечных каталогов с переключателями компилятора, которые их включают. Имя каталога отделяется от переключателей знаком '</target>
        </trans-unit>
        <trans-unit id="b73d8c440e7cc936048904194d2e85dfdb15e4ef" translate="yes" xml:space="preserve">
          <source>Print the name and the counter upper bound for all debug counters.</source>
          <target state="translated">Выведите имя и верхнюю границу счетчика для всех отладочных счетчиков.</target>
        </trans-unit>
        <trans-unit id="c0f3c0f3c07600ebb279734d69613c90e09b8dbd" translate="yes" xml:space="preserve">
          <source>Print the name of each header file used, in addition to other normal activities. Each name is indented to show how deep in the &amp;lsquo;</source>
          <target state="translated">Выведите имя каждого использованного файла заголовка в дополнение к другим обычным действиям. Каждое имя имеет отступ, чтобы показать, насколько глубоко в '</target>
        </trans-unit>
        <trans-unit id="6ed5656674995024e55926271a786ceb4ef7c456" translate="yes" xml:space="preserve">
          <source>Print the name of the configured installation directory and a list of program and library directories &lt;code&gt;gcc&lt;/code&gt; searches&amp;mdash;and don&amp;rsquo;t do anything else.</source>
          <target state="translated">Выведите имя настроенного каталога установки и список каталогов программ и библиотек, которые выполняет поиск &lt;code&gt;gcc&lt;/code&gt; , и больше ничего не делайте.</target>
        </trans-unit>
        <trans-unit id="f46fbec7a98d95993ab6d7180f46da35309a305c" translate="yes" xml:space="preserve">
          <source>Print the opcode suffix for the size of the current integer operand (one of &lt;code&gt;b&lt;/code&gt;/&lt;code&gt;w&lt;/code&gt;/&lt;code&gt;l&lt;/code&gt;/&lt;code&gt;q&lt;/code&gt;).</source>
          <target state="translated">Выведите суффикс кода операции для размера текущего целочисленного операнда (один из &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;w&lt;/code&gt; / &lt;code&gt;l&lt;/code&gt; / &lt;code&gt;q&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="908b57b33b152b029092573720dba6a435ce6981" translate="yes" xml:space="preserve">
          <source>Print the path to OS libraries for the selected multiarch, relative to some</source>
          <target state="translated">Выведите путь к библиотекам ОС для выбранной многоархитектуры,относительно некоторых из них</target>
        </trans-unit>
        <trans-unit id="5d7b39edfb2bb437d185c29750569c1585d1f048" translate="yes" xml:space="preserve">
          <source>Print the path to OS libraries for the selected multilib, relative to some</source>
          <target state="translated">Выведите путь к библиотекам ОС для выбранного мультилиба,по отношению к некоторым из них</target>
        </trans-unit>
        <trans-unit id="b628c9460b668c00eb8e6efa459a4b3817bd622d" translate="yes" xml:space="preserve">
          <source>Print the suffix added to the target sysroot when searching for headers, or give an error if the compiler is not configured with such a suffix&amp;mdash;and don&amp;rsquo;t do anything else.</source>
          <target state="translated">Выведите суффикс, добавленный к целевому системному корню при поиске заголовков, или выдайте ошибку, если компилятор не настроен с таким суффиксом - и больше ничего не делайте.</target>
        </trans-unit>
        <trans-unit id="08d61da80381f2354abfcc2dc79c82da27bcfcde" translate="yes" xml:space="preserve">
          <source>Print the target sysroot directory that is used during compilation. This is the target sysroot specified either at configure time or using the</source>
          <target state="translated">Выведите на печать целевую директорию sysroot,которая используется при компиляции.Это целевой sysroot,заданный либо при настройке,либо при использовании параметра</target>
        </trans-unit>
        <trans-unit id="38b6abf4c9502a0a96a0b149ec935db21970d271" translate="yes" xml:space="preserve">
          <source>Print verbose information about optimizations, such as certain transformations, more detailed messages about decisions etc.</source>
          <target state="translated">Печать подробной информации об оптимизациях,например,об определенных трансформациях,более подробных сообщениях о решениях и т.д.</target>
        </trans-unit>
        <trans-unit id="a2dcd67e0df70361f07cda6c2139ad5ffd3e3acd" translate="yes" xml:space="preserve">
          <source>Print verbose informations related to basic blocks and arcs.</source>
          <target state="translated">Печать многословной информации,связанной с основными блоками и дугами.</target>
        </trans-unit>
        <trans-unit id="14433cdcc593ba724150c5d3b1d1053f1e28730c" translate="yes" xml:space="preserve">
          <source>Print warning messages for constructs found in system header files. Warnings from system headers are normally suppressed, on the assumption that they usually do not indicate real problems and would only make the compiler output harder to read. Using this command-line option tells GCC to emit warnings from system headers as if they occurred in user code. However, note that using</source>
          <target state="translated">Печать предупреждающих сообщений для конструкций,найденных в системных заголовочных файлах.Предупреждения из системных заголовков обычно подавляются,исходя из предположения,что они обычно не указывают на реальные проблемы и только усложняют чтение вывода компилятора.Использование этой опции командной строки говорит GCC выдавать предупреждения из системных заголовков так,как если бы они возникали в пользовательском коде.Однако,обратите внимание,что использование</target>
        </trans-unit>
        <trans-unit id="483c1121bee3466e31656e5ccaa4978d23e0bae2" translate="yes" xml:space="preserve">
          <source>Printable strings which are the name of the current function.</source>
          <target state="translated">Строки для печати,которые являются именем текущей функции.</target>
        </trans-unit>
        <trans-unit id="b65afc72a52b24c7e17f59c175dc14fa999357ad" translate="yes" xml:space="preserve">
          <source>Printing GCC configuration info, statistics, and debugging dumps.</source>
          <target state="translated">Печать информации о конфигурации GCC,статистики и отладочных дампов.</target>
        </trans-unit>
        <trans-unit id="223d9059a8851156459124a029c324e8d582a617" translate="yes" xml:space="preserve">
          <source>Prints &lt;var&gt;string&lt;/var&gt; as a compiler message on compilation. The message is informational only, and is neither a compilation warning nor an error. Newlines can be included in the string by using the &amp;lsquo;</source>
          <target state="translated">Печатает &lt;var&gt;string&lt;/var&gt; как сообщение компилятора при компиляции. Сообщение носит исключительно информационный характер и не является ни предупреждением компиляции, ни ошибкой. Новые строки могут быть включены в строку с помощью символа '</target>
        </trans-unit>
        <trans-unit id="ba052fde4908541fb5507b0c0b8fa5890f691843" translate="yes" xml:space="preserve">
          <source>Prints a report with internal details on the workings of the link-time optimizer. The contents of this report vary from version to version. It is meant to be useful to GCC developers when processing object files in LTO mode (via</source>
          <target state="translated">Печатает отчет с внутренней информацией о работе линк-оптимизатора.Содержание этого отчета варьируется от версии к версии.Он предназначен для использования разработчиками GCC при обработке объектных файлов в режиме LTO (через</target>
        </trans-unit>
        <trans-unit id="356b649f8a5b2eeac75d52d3fde25687e1baf75a" translate="yes" xml:space="preserve">
          <source>PrivateHeaders</source>
          <target state="translated">PrivateHeaders</target>
        </trans-unit>
        <trans-unit id="2ad988ff4da432b2bd8d59157204ad932c4a0a31" translate="yes" xml:space="preserve">
          <source>Probability (in percent) that C++ inline function with comdat visibility are shared across multiple compilation units.</source>
          <target state="translated">Вероятность (в процентах),что встроенная функция C++с видимостью комдата совместно используется несколькими модулями компиляции.</target>
        </trans-unit>
        <trans-unit id="850fe6834f667b77b7e2ae19ee297ae3dd8470cf" translate="yes" xml:space="preserve">
          <source>Problems using GCC with other compilers, and with certain linkers, assemblers and debuggers.</source>
          <target state="translated">Проблемы использования GCC с другими компиляторами,а также с некоторыми компоновщиками,ассемблерами и отладчиками.</target>
        </trans-unit>
        <trans-unit id="9c6060b3674c249414e5152b2230ab7030cef431" translate="yes" xml:space="preserve">
          <source>Process &lt;var&gt;file&lt;/var&gt; after the compiler reads in the standard</source>
          <target state="translated">Обработать &lt;var&gt;file&lt;/var&gt; после того, как компилятор прочитает стандартный</target>
        </trans-unit>
        <trans-unit id="191842ffa605d8dc7494dd7b68d3c292602796ee" translate="yes" xml:space="preserve">
          <source>Process &lt;var&gt;file&lt;/var&gt; as if &lt;code&gt;#include &quot;file&quot;&lt;/code&gt; appeared as the first line of the primary source file. However, the first directory searched for &lt;var&gt;file&lt;/var&gt; is the preprocessor&amp;rsquo;s working directory &lt;em&gt;instead of&lt;/em&gt; the directory containing the main source file. If not found there, it is searched for in the remainder of the &lt;code&gt;#include &quot;&amp;hellip;&quot;&lt;/code&gt; search chain as normal.</source>
          <target state="translated">Обрабатывать &lt;var&gt;file&lt;/var&gt; как если бы &lt;code&gt;#include &quot;file&quot;&lt;/code&gt; появился в первой строке первичного исходного файла. Однако первый каталог, в котором выполняется поиск &lt;var&gt;file&lt;/var&gt; - это рабочий каталог препроцессора, &lt;em&gt;а не&lt;/em&gt; каталог, содержащий основной исходный файл. Если он там не найден, он ищется в оставшейся части поисковой цепочки &lt;code&gt;#include &quot;&amp;hellip;&quot;&lt;/code&gt; как обычно.</target>
        </trans-unit>
        <trans-unit id="6734f891a855dd7a87c6c0bfe8fa052810c7d184" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;asm&lt;/code&gt; spec. This is used to compute the switches to be passed to the assembler.</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;asm&lt;/code&gt; . Это используется для вычисления переключателей, которые нужно передать ассемблеру.</target>
        </trans-unit>
        <trans-unit id="38573e03d0821a17e48df49ff92134f08123d891" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;asm_final&lt;/code&gt; spec. This is a spec string for passing switches to an assembler post-processor, if such a program is needed.</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;asm_final&lt;/code&gt; . Это строка спецификации для передачи переключателей постпроцессору ассемблера, если такая программа необходима.</target>
        </trans-unit>
        <trans-unit id="c24b1fe466497f7be4ea4b8ebfb1c796e853db45" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;cc1&lt;/code&gt; spec. This is used to construct the options to be passed to the actual C compiler (&lt;code&gt;cc1&lt;/code&gt;).</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;cc1&lt;/code&gt; . Это используется для создания параметров, передаваемых в фактический компилятор C ( &lt;code&gt;cc1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d6f17bdc842d5e5f40364c825949e630921d84fa" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;cc1plus&lt;/code&gt; spec. This is used to construct the options to be passed to the actual C++ compiler (&lt;code&gt;cc1plus&lt;/code&gt;).</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;cc1plus&lt;/code&gt; . Это используется для создания параметров, передаваемых в фактический компилятор C ++ ( &lt;code&gt;cc1plus&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d5396bf6c9ae0325ba2157fe3770f71223e19ef3" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;cpp&lt;/code&gt; spec. This is used to construct the arguments to be passed to the C preprocessor.</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;cpp&lt;/code&gt; . Это используется для создания аргументов, передаваемых препроцессору C.</target>
        </trans-unit>
        <trans-unit id="8c1edb26c6deccdbec0712ee2d8d11b418fd33df" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;endfile&lt;/code&gt; spec. This is a spec string that specifies the last object files that are passed to the linker.</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;endfile&lt;/code&gt; . Это строка спецификации, которая определяет последние объектные файлы, переданные компоновщику.</target>
        </trans-unit>
        <trans-unit id="a2255c514c878d9f84e377c0c64a134c8dce070b" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;lib&lt;/code&gt; spec. This is a spec string for deciding which libraries are included on the command line to the linker.</source>
          <target state="translated">Обработать &lt;code&gt;lib&lt;/code&gt; спецификации. Это строка спецификации для определения того, какие библиотеки включить в командную строку компоновщику.</target>
        </trans-unit>
        <trans-unit id="21eaf027956ca118a365869c3f14adfd31ded482" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;libgcc&lt;/code&gt; spec. This is a spec string for deciding which GCC support library is included on the command line to the linker.</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;libgcc&lt;/code&gt; . Это строка спецификации для решения, какая библиотека поддержки GCC включена в командную строку компоновщика.</target>
        </trans-unit>
        <trans-unit id="4bace10c4995ad6f02604a1283502179576e6980" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;link&lt;/code&gt; spec. This is the spec for computing the command line passed to the linker. Typically it makes use of the &amp;lsquo;</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;link&lt;/code&gt; . Это спецификация для вычисления командной строки, переданной компоновщику. Обычно в нем используется символ '</target>
        </trans-unit>
        <trans-unit id="fb8c4d2ece6f487a7a0a494e47ae351215a61c64" translate="yes" xml:space="preserve">
          <source>Process the &lt;code&gt;startfile&lt;/code&gt; spec. This is a spec for deciding which object files are the first ones passed to the linker. Typically this might be a file named</source>
          <target state="translated">Обработайте спецификацию &lt;code&gt;startfile&lt;/code&gt; . Это спецификация для решения, какие объектные файлы будут первыми переданы компоновщику. Обычно это может быть файл с именем</target>
        </trans-unit>
        <trans-unit id="ec518e4b3e80564c09131d1ae87879a3f6d17ed9" translate="yes" xml:space="preserve">
          <source>Processors based on the AMD K8 core with x86-64 instruction set support, including the AMD Opteron, Athlon 64, and Athlon 64 FX processors. (This supersets MMX, SSE, SSE2, 3DNow!, enhanced 3DNow! and 64-bit instruction set extensions.)</source>
          <target state="translated">Процессоры на базе ядра AMD K8 с поддержкой набора команд x86-64,в том числе процессоры AMD Opteron,Athlon 64 и Athlon 64 FX.(Это превосходит MMX,SSE,SSE2,3DNow!,расширенные 3DNow! и 64-битные расширения набора инструкций).</target>
        </trans-unit>
        <trans-unit id="62590afcaa5b3d90840b2e3dacaeab111c2a8e70" translate="yes" xml:space="preserve">
          <source>Produce a Mach-o bundle format file. See man ld(1) for more information.</source>
          <target state="translated">Производите файл формата пучка Mach-o.Дополнительную информацию см.в man ld(1).</target>
        </trans-unit>
        <trans-unit id="9cedce134ad1d6e39e6ac28f5ea367bb4ac3cf33" translate="yes" xml:space="preserve">
          <source>Produce a core dump whenever an error occurs.</source>
          <target state="translated">Создавайте дамп ядра при возникновении ошибки.</target>
        </trans-unit>
        <trans-unit id="ba338fc5c81c60c18e5763d1fadce97ad1e61e6a" translate="yes" xml:space="preserve">
          <source>Produce a dynamically linked position independent executable on targets that support it. For predictable results, you must also specify the same set of options used for compilation (</source>
          <target state="translated">Создайте динамически связанный позиционный независимый исполняемый файл по целям,которые его поддерживают.Для предсказуемых результатов необходимо также указать тот же набор опций,который используется для компиляции (</target>
        </trans-unit>
        <trans-unit id="6cb3358c313e561510d03d4f43da46e9f117e2c5" translate="yes" xml:space="preserve">
          <source>Produce a notes file that the &lt;code&gt;gcov&lt;/code&gt; code-coverage utility (see &lt;a href=&quot;gcov#Gcov&quot;&gt;&lt;code&gt;gcov&lt;/code&gt;&amp;mdash;a Test Coverage Program&lt;/a&gt;) can use to show program coverage. Each source file&amp;rsquo;s note file is called</source>
          <target state="translated">Создайте файл примечаний, который утилита покрытия кода &lt;code&gt;gcov&lt;/code&gt; (см. &lt;a href=&quot;gcov#Gcov&quot;&gt; &lt;code&gt;gcov&lt;/code&gt; - Программа покрытия тестов&lt;/a&gt; ) может использовать для демонстрации покрытия программы. Файл заметки каждого исходного файла называется</target>
        </trans-unit>
        <trans-unit id="8b280710ae96a8b8d8e74aa28a812b327df111b1" translate="yes" xml:space="preserve">
          <source>Produce a relocatable object as output. This is also known as partial linking.</source>
          <target state="translated">Производите перемещаемый объект на выходе.Это также известно как частичная связь.</target>
        </trans-unit>
        <trans-unit id="26aa77097b9a063e69af15c39e1ef1623a1a0dab" translate="yes" xml:space="preserve">
          <source>Produce a shared object which can then be linked with other objects to form an executable. Not all systems support this option. For predictable results, you must also specify the same set of options used for compilation (</source>
          <target state="translated">Создайте разделяемый объект,который затем может быть связан с другими объектами,чтобы сформировать исполняемый файл.Не все системы поддерживают этот вариант.Для предсказуемых результатов,вы также должны указать тот же самый набор опций,который используется для компиляции (</target>
        </trans-unit>
        <trans-unit id="82a6e20338c2d2cb9f44077a8123f0423ba29a56" translate="yes" xml:space="preserve">
          <source>Produce a static position independent executable on targets that support it. A static position independent executable is similar to a static executable, but can be loaded at any address without a dynamic linker. For predictable results, you must also specify the same set of options used for compilation (</source>
          <target state="translated">Производите статический позиционный независимый исполняемый файл на поддерживающих его целях.Независимый от позиции статический исполняемый файл похож на статический исполняемый файл,но может быть загружен по любому адресу без динамического компоновщика.Для предсказуемых результатов необходимо также указать тот же набор опций,что и при компиляции (</target>
        </trans-unit>
        <trans-unit id="229bc991f84912dbb707cad7f57cc3c00958246f" translate="yes" xml:space="preserve">
          <source>Produce all the dumps listed above.</source>
          <target state="translated">Произвести все вышеперечисленные свалки.</target>
        </trans-unit>
        <trans-unit id="c830b4e289b1d603d4b29ad3603ac7fe06258efc" translate="yes" xml:space="preserve">
          <source>Produce code optimized for the most common IA32/AMD64/EM64T processors. If you know the CPU on which your code will run, then you should use the corresponding</source>
          <target state="translated">Производить код,оптимизированный для наиболее распространенных процессоров IA32/AMD64/EM64T.Если вы знаете,на каком процессоре будет выполняться ваш код,то вам следует использовать соответствующий</target>
        </trans-unit>
        <trans-unit id="874624fe120d74004c74672b177571000bb8d675" translate="yes" xml:space="preserve">
          <source>Produce code optimized for the most current Intel processors, which are Haswell and Silvermont for this version of GCC. If you know the CPU on which your code will run, then you should use the corresponding</source>
          <target state="translated">Производите код,оптимизированный для самых современных процессоров Intel,которыми являются Haswell и Silvermont для этой версии GCC.Если вы знаете,на каком процессоре будет выполняться ваш код,то вы должны использовать соответствующий</target>
        </trans-unit>
        <trans-unit id="59d6dfa4b2545178e43d697c719e6e2891444e31" translate="yes" xml:space="preserve">
          <source>Produce code that conforms more closely to IBM XL compiler semantics when using AIX-compatible ABI. Pass floating-point arguments to prototyped functions beyond the register save area (RSA) on the stack in addition to argument FPRs. Do not assume that most significant double in 128-bit long double value is properly rounded when comparing values and converting to double. Use XL symbol names for long double support routines.</source>
          <target state="translated">Производить код,более близкий к семантике компилятора IBM XL при использовании AIX-совместимого ABI.Передача аргументов с плавающей точкой в прототипные функции за пределами области сохранения регистров (RSA)на стеке в дополнение к аргументам FPR.Не предполагайте,что наиболее значимый двойник в 128-битном длинном двойном значении правильно округляется при сравнении значений и преобразовании в двойник.Используйте имена символов XL для процедур поддержки long double.</target>
        </trans-unit>
        <trans-unit id="70aa8e6a5aa6f95946582de4d3eebc24892a15cb" translate="yes" xml:space="preserve">
          <source>Produce compressed debug sections in DWARF format, if that is supported. If &lt;var&gt;type&lt;/var&gt; is not given, the default type depends on the capabilities of the assembler and linker used. &lt;var&gt;type&lt;/var&gt; may be one of &amp;lsquo;</source>
          <target state="translated">Создавать сжатые отладочные разделы в формате DWARF, если он поддерживается. Если &lt;var&gt;type&lt;/var&gt; не указан, тип по умолчанию зависит от возможностей используемого ассемблера и компоновщика. &lt;var&gt;type&lt;/var&gt; может быть одним из '</target>
        </trans-unit>
        <trans-unit id="d785038635c115caba3a3a72ca445989fe650fad" translate="yes" xml:space="preserve">
          <source>Produce debugging information for use by GDB. This means to use the most expressive format available (DWARF, stabs, or the native format if neither of those are supported), including GDB extensions if at all possible.</source>
          <target state="translated">Производить отладочную информацию для использования GDB.Это означает использование наиболее выразительного из доступных форматов (DWARF,stabs или &quot;родной&quot; формат,если ни один из них не поддерживается),включая расширения GDB,если это вообще возможно.</target>
        </trans-unit>
        <trans-unit id="6e76e1882b03d7c105da1aec1b4b65497ef05063" translate="yes" xml:space="preserve">
          <source>Produce debugging information in Alpha/VMS debug format (if that is supported). This is the format used by DEBUG on Alpha/VMS systems.</source>
          <target state="translated">Производить отладочную информацию в отладочном формате Alpha/VMS (если это поддерживается).Это формат,используемый DEBUG на системах Alpha/VMS.</target>
        </trans-unit>
        <trans-unit id="1c89bdfbe7ff24838a86019c90957a16af275605" translate="yes" xml:space="preserve">
          <source>Produce debugging information in DWARF format (if that is supported). The value of &lt;var&gt;version&lt;/var&gt; may be either 2, 3, 4 or 5; the default version for most targets is 4. DWARF Version 5 is only experimental.</source>
          <target state="translated">Создавайте отладочную информацию в формате DWARF (если он поддерживается). Значение &lt;var&gt;version&lt;/var&gt; может быть 2, 3, 4 или 5; версия по умолчанию для большинства целей - 4. DWARF версии 5 является только экспериментальной.</target>
        </trans-unit>
        <trans-unit id="21dc1c45a8426cfd7ea86f0ff5efd716fb463aa3" translate="yes" xml:space="preserve">
          <source>Produce debugging information in XCOFF format (if that is supported), using GNU extensions understood only by the GNU debugger (GDB). The use of these extensions is likely to make other debuggers crash or refuse to read the program, and may cause assemblers other than the GNU assembler (GAS) to fail with an error.</source>
          <target state="translated">Производить отладочную информацию в формате XCOFF (если это поддерживается),используя расширения GNU,понятные только отладчику GNU (GDB).Применение этих расширений,вероятно,приведет к падению других отладчиков или отказу в чтении программы,а также может привести к тому,что ассемблеры,отличные от ассемблера GNU (GAS),потерпят неудачу с ошибкой.</target>
        </trans-unit>
        <trans-unit id="1c31c10a8554b29470b180047c3e117a364d7374" translate="yes" xml:space="preserve">
          <source>Produce debugging information in XCOFF format (if that is supported). This is the format used by the DBX debugger on IBM RS/6000 systems.</source>
          <target state="translated">Производство отладочной информации в формате XCOFF (если это поддерживается).Этот формат используется отладчиком DBX на системах IBM RS/6000.</target>
        </trans-unit>
        <trans-unit id="a8732936178c413fac329a93443e75c2a16089d0" translate="yes" xml:space="preserve">
          <source>Produce debugging information in stabs format (if that is supported), for only symbols that are actually used.</source>
          <target state="translated">Производить отладочную информацию в формате stabs (если это поддерживается),только для символов,которые фактически используются.</target>
        </trans-unit>
        <trans-unit id="798e83cefb7f6ea7ef9a535cd3ace3be5a753318" translate="yes" xml:space="preserve">
          <source>Produce debugging information in stabs format (if that is supported), using GNU extensions understood only by the GNU debugger (GDB). The use of these extensions is likely to make other debuggers crash or refuse to read the program.</source>
          <target state="translated">Производить отладочную информацию в формате stabs (если это поддерживается),используя расширения GNU,понятные только отладчику GNU (GDB).Применение этих расширений,вероятно,приведет к падению других отладчиков или отказу в чтении программы.</target>
        </trans-unit>
        <trans-unit id="e675746f0878092c9d5ac57cb51767441496530c" translate="yes" xml:space="preserve">
          <source>Produce debugging information in stabs format (if that is supported), without GDB extensions. This is the format used by DBX on most BSD systems. On MIPS, Alpha and System V Release 4 systems this option produces stabs debugging output that is not understood by DBX. On System V Release 4 systems this option requires the GNU assembler.</source>
          <target state="translated">Производить отладочную информацию в формате stabs (если это поддерживается),без расширений GDB.Это формат,используемый DBX на большинстве систем BSD.На системах MIPS,Alpha и System V Release 4 эта опция производит вывод отладочной информации в формате stabs,не понятном для DBX.В системах System V Release 4 этот параметр требует наличия ассемблера GNU.</target>
        </trans-unit>
        <trans-unit id="2effb462b688a145487a6f229d8da95bd056d019" translate="yes" xml:space="preserve">
          <source>Produce debugging information in the operating system&amp;rsquo;s native format (stabs, COFF, XCOFF, or DWARF). GDB can work with this debugging information.</source>
          <target state="translated">Создавайте отладочную информацию в собственном формате операционной системы (stabs, COFF, XCOFF или DWARF). GDB может работать с этой отладочной информацией.</target>
        </trans-unit>
        <trans-unit id="1c30c7a4385f1b1870365ef3b00c760d3c2db0e3" translate="yes" xml:space="preserve">
          <source>Producing an AutoFDO profile data file requires running your program with the &lt;code&gt;perf&lt;/code&gt; utility on a supported GNU/Linux target system. For more information, see &lt;a href=&quot;https://perf.wiki.kernel.org/&quot;&gt;https://perf.wiki.kernel.org/&lt;/a&gt;.</source>
          <target state="translated">Создание файла данных профиля AutoFDO требует запуска вашей программы с утилитой &lt;code&gt;perf&lt;/code&gt; в поддерживаемой целевой системе GNU / Linux. Для получения дополнительной информации см. &lt;a href=&quot;https://perf.wiki.kernel.org/&quot;&gt;Https://perf.wiki.kernel.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d16847b11987e862bb0226a6dbf93a65cab5ec8" translate="yes" xml:space="preserve">
          <source>Producing debuggable code.</source>
          <target state="translated">Производство отладочного кода.</target>
        </trans-unit>
        <trans-unit id="66065140c4bd69f9a929457e5e1f5ddcadca4b33" translate="yes" xml:space="preserve">
          <source>Profiles collected using an instrumented binary for multi-threaded programs may be inconsistent due to missed counter updates. When this option is specified, GCC uses heuristics to correct or smooth out such inconsistencies. By default, GCC emits an error message when an inconsistent profile is detected.</source>
          <target state="translated">Профили,собранные с помощью инструментального двоичного файла для многопоточных программ,могут быть непоследовательными из-за пропущенных обновлений счетчиков.При указании этой опции GCC использует эвристику для исправления или сглаживания таких несоответствий.По умолчанию GCC выдает сообщение об ошибке при обнаружении несовместимого профиля.</target>
        </trans-unit>
        <trans-unit id="215364611f5d742bb3cf5b6bc5f45d76aedfc488" translate="yes" xml:space="preserve">
          <source>Profiling run-time library reports various errors related to profile manipulation and profile saving. Errors are printed into standard error output or &amp;lsquo;</source>
          <target state="translated">Библиотека времени выполнения профилирования сообщает о различных ошибках, связанных с изменением профиля и сохранением профиля. Ошибки выводятся в стандартный вывод ошибок или в '</target>
        </trans-unit>
        <trans-unit id="6d0967a146a9cd54e7f2cfdefd92dad89185e247" translate="yes" xml:space="preserve">
          <source>Profiling tools help you analyze your code&amp;rsquo;s performance. Using a profiler such as &lt;code&gt;gcov&lt;/code&gt; or &lt;code&gt;gprof&lt;/code&gt;, you can find out some basic performance statistics, such as:</source>
          <target state="translated">Инструменты профилирования помогают анализировать производительность вашего кода. Используя профилировщик, такой как &lt;code&gt;gcov&lt;/code&gt; или &lt;code&gt;gprof&lt;/code&gt; , вы можете узнать базовую статистику производительности, например:</target>
        </trans-unit>
        <trans-unit id="299845fbcd8fc09058a26974d7a1694c0d922e8b" translate="yes" xml:space="preserve">
          <source>Program Instrumentation Options</source>
          <target state="translated">Опции программной аппаратуры</target>
        </trans-unit>
        <trans-unit id="bce0913595ade4c39c8c03d2dbf27980dd7aa2d2" translate="yes" xml:space="preserve">
          <source>Program precision. This option is the default and means a trap handler can only identify which program caused a floating-point exception.</source>
          <target state="translated">Точность программы.Эта опция является опцией по умолчанию и означает,что обработчик ловушки может только определять,какая программа вызвала исключение с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="2e30a8e13f6fe61be9a133d07d1e5fc7f1ccd080" translate="yes" xml:space="preserve">
          <source>Programmers normally use conditionals on &lt;code&gt;__STDC__&lt;/code&gt; to ask whether it is safe to use certain features of ISO C, such as function prototypes or ISO token concatenation. Since plain &lt;code&gt;gcc&lt;/code&gt; supports all the features of ISO C, the correct answer to these questions is &amp;ldquo;yes&amp;rdquo;.</source>
          <target state="translated">Программисты обычно используют условные &lt;code&gt;__STDC__&lt;/code&gt; для __STDC__, чтобы спросить, безопасно ли использовать определенные функции ISO C, такие как прототипы функций или конкатенация токенов ISO. Поскольку простой &lt;code&gt;gcc&lt;/code&gt; поддерживает все функции ISO C, правильный ответ на эти вопросы - &amp;laquo;да&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a0bd705cf04e9357c2ea73ca926ccbac6b893041" translate="yes" xml:space="preserve">
          <source>Programs that use preprocessing directives in the middle of macro arguments do not work with GCC. For example, a program like this will not work:</source>
          <target state="translated">Программы,использующие директивы препроцессирования в середине макроаргументов,не работают с GCC.Например,такая программа не будет работать:</target>
        </trans-unit>
        <trans-unit id="f2ac6418060115eaba540e4ea02f9d2bc08e06a3" translate="yes" xml:space="preserve">
          <source>Programs written to compile with C++-to-C translators get the value of &lt;code&gt;__STDC__&lt;/code&gt; that goes with the C compiler that is subsequently used. These programs must test &lt;code&gt;__STDC__&lt;/code&gt; to determine what kind of C preprocessor that compiler uses: whether they should concatenate tokens in the ISO C fashion or in the traditional fashion.</source>
          <target state="translated">Программы, написанные для компиляции с помощью трансляторов C ++ на C, получают значение &lt;code&gt;__STDC__&lt;/code&gt; , которое соответствует компилятору C, который используется впоследствии. Эти программы должны тестировать &lt;code&gt;__STDC__&lt;/code&gt; , чтобы определить, какой препроцессор C использует этот компилятор: должны ли они объединять токены в стиле ISO C или традиционным способом.</target>
        </trans-unit>
        <trans-unit id="5a9cb5a82aeec8a68235c0ced346ccbfb76bb12a" translate="yes" xml:space="preserve">
          <source>Propagate information about uses of a value up the definition chain in order to simplify the definitions. For example, this pass strips sign operations if the sign of a value never matters. The flag is enabled by default at</source>
          <target state="translated">Распространяйте информацию об использовании значения вверх по цепочке определений для упрощения определений.Например,эта передача отнимает операции со знаком,если знак значения никогда не имеет значения.Флаг включен по умолчанию на</target>
        </trans-unit>
        <trans-unit id="fa7dd81f88cb5c4139f9dbe0c73fbba733aa4a44" translate="yes" xml:space="preserve">
          <source>Protected visibility is like default visibility except that it indicates that references within the defining module bind to the definition in that module. That is, the declared entity cannot be overridden by another module.</source>
          <target state="translated">Защищенная видимость похожа на видимость по умолчанию,за исключением того,что указывает на то,что ссылки внутри определяющего модуля привязываются к определению в этом модуле.То есть объявленная сущность не может быть переопределена другим модулем.</target>
        </trans-unit>
        <trans-unit id="af2b8481cf932700a1d1fe584409316090685bcd" translate="yes" xml:space="preserve">
          <source>Prototype declarations and old-style definitions.</source>
          <target state="translated">Прототипные декларации и определения старого образца.</target>
        </trans-unit>
        <trans-unit id="281df885a6152b0fc99de98c97f687a7bacdb5ad" translate="yes" xml:space="preserve">
          <source>Provide a user-defined function to handle NMI exception.</source>
          <target state="translated">Предоставьте пользовательскую функцию для обработки исключений NMI.</target>
        </trans-unit>
        <trans-unit id="a507043f2b5ce9798e6d052565a1ba8fcc61bd09" translate="yes" xml:space="preserve">
          <source>Provide a user-defined function to handle warm reset exception.</source>
          <target state="translated">Предоставьте определяемую пользователем функцию для работы с исключением &quot;теплого сброса&quot;.</target>
        </trans-unit>
        <trans-unit id="ba0e24e32262e9027ddf344b0bbb6826b30533e8" translate="yes" xml:space="preserve">
          <source>Providing multiple strings as arguments separated by commas to specify multiple options is equivalent to separating the option suffixes with a comma (&amp;lsquo;</source>
          <target state="translated">Предоставление нескольких строк в качестве аргументов, разделенных запятыми для указания нескольких параметров, эквивалентно разделению суффиксов параметров запятой ('</target>
        </trans-unit>
        <trans-unit id="c6e467f9fef2c6ec37e713ef7ce97be04a79d3ee" translate="yes" xml:space="preserve">
          <source>Pseudo type</source>
          <target state="translated">псевдотип</target>
        </trans-unit>
        <trans-unit id="2ec15755e92f7ec74b89a276482fe0679fe6a677" translate="yes" xml:space="preserve">
          <source>Put all data, not just small objects, into the sections reserved for small data, and use addressing relative to the &lt;code&gt;B14&lt;/code&gt; register to access them.</source>
          <target state="translated">Поместите все данные, а не только небольшие объекты, в разделы, зарезервированные для небольших данных, и используйте адресацию относительно регистра &lt;code&gt;B14&lt;/code&gt; для доступа к ним.</target>
        </trans-unit>
        <trans-unit id="14d82a1bb301488807b0804cf1d8b4aed130dcd1" translate="yes" xml:space="preserve">
          <source>Put definitions of externally-visible data in a small data section if that data is no bigger than &lt;var&gt;num&lt;/var&gt; bytes. GCC can then generate more efficient accesses to the data; see</source>
          <target state="translated">Поместите определения данных, видимых извне, в небольшой раздел данных, если размер этих данных не превышает &lt;var&gt;num&lt;/var&gt; байтов. Затем GCC может генерировать более эффективный доступ к данным; видеть</target>
        </trans-unit>
        <trans-unit id="ee1f4e4ed1983ff05857b16e6d5463e63d52f87d" translate="yes" xml:space="preserve">
          <source>Put definitions of externally-visible data in a small data section if that data is no bigger than &lt;var&gt;num&lt;/var&gt; bytes. The default value of &lt;var&gt;num&lt;/var&gt; is 4 for any ARC configuration, or 8 when we have double load/store operations.</source>
          <target state="translated">Поместите определения данных, видимых извне, в небольшой раздел данных, если размер этих данных не превышает &lt;var&gt;num&lt;/var&gt; байтов. Значение по умолчанию &lt;var&gt;num&lt;/var&gt; равно 4 для любой конфигурации ARC или 8, когда у нас есть двойные операции загрузки / сохранения.</target>
        </trans-unit>
        <trans-unit id="dd10aa9229d46223067d4529eb087ca1d5b4bb37" translate="yes" xml:space="preserve">
          <source>Put extra commentary information in the generated assembly code to make it more readable. This option is generally only of use to those who actually need to read the generated assembly code (perhaps while debugging the compiler itself).</source>
          <target state="translated">Поместите дополнительную комментарийную информацию в сгенерированный ассемблерный код,чтобы сделать его более читабельным.Этот вариант,как правило,полезен только тем,кому действительно необходимо читать сгенерированный ассемблерный код (возможно,в процессе отладки самого компилятора).</target>
        </trans-unit>
        <trans-unit id="4efa75b425ee3379e46be03951b8fed10951f423" translate="yes" xml:space="preserve">
          <source>Put global and static data smaller than &lt;var&gt;n&lt;/var&gt; bytes into a special section (on some targets).</source>
          <target state="translated">Поместите глобальные и статические данные размером менее &lt;var&gt;n&lt;/var&gt; байт в специальный раздел (для некоторых целей).</target>
        </trans-unit>
        <trans-unit id="803e4d47363b74310533dbbacf9cf5e406c33858" translate="yes" xml:space="preserve">
          <source>Put global and static objects less than or equal to &lt;var&gt;num&lt;/var&gt; bytes into the small data or BSS sections instead of the normal data or BSS sections. The default value of &lt;var&gt;num&lt;/var&gt; is 8.</source>
          <target state="translated">Поместите глобальные и статические объекты, размер которых меньше или равно &lt;var&gt;num&lt;/var&gt; байтов, в разделы малых данных или BSS вместо обычных данных или разделов BSS. Значение по умолчанию &lt;var&gt;num&lt;/var&gt; 8.</target>
        </trans-unit>
        <trans-unit id="325fbb1dff6b2bc48b832b2c0837a0d4aa50c625" translate="yes" xml:space="preserve">
          <source>Put global and static objects less than or equal to &lt;var&gt;num&lt;/var&gt; bytes into the small data or BSS sections instead of the normal data or BSS sections. The default value of &lt;var&gt;num&lt;/var&gt; is 8. The</source>
          <target state="translated">Поместите глобальные и статические объекты, размер которых меньше или равно &lt;var&gt;num&lt;/var&gt; байтов, в разделы малых данных или BSS вместо обычных данных или разделов BSS. Значение по умолчанию &lt;var&gt;num&lt;/var&gt; равно 8.</target>
        </trans-unit>
        <trans-unit id="2845f96bd365594a3cd3c2c2ff97b86e1f179d72" translate="yes" xml:space="preserve">
          <source>Put read-only objects in the &lt;code&gt;.sdata&lt;/code&gt; section as well. This is the default.</source>
          <target state="translated">Также поместите объекты только для &lt;code&gt;.sdata&lt;/code&gt; раздел .sdata . Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="aaee271d332c564c26a565ff260fd11119341a45" translate="yes" xml:space="preserve">
          <source>Put small global and static data in the &lt;code&gt;.neardata&lt;/code&gt; section, which is pointed to by register &lt;code&gt;B14&lt;/code&gt;. Put small uninitialized global and static data in the &lt;code&gt;.bss&lt;/code&gt; section, which is adjacent to the &lt;code&gt;.neardata&lt;/code&gt; section. Put small read-only data into the &lt;code&gt;.rodata&lt;/code&gt; section. The corresponding sections used for large pieces of data are &lt;code&gt;.fardata&lt;/code&gt;, &lt;code&gt;.far&lt;/code&gt; and &lt;code&gt;.const&lt;/code&gt;.</source>
          <target state="translated">Поместите небольшие глобальные и статические данные в раздел &lt;code&gt;.neardata&lt;/code&gt; , на который указывает регистр &lt;code&gt;B14&lt;/code&gt; . Поместите небольшие неинициализированные глобальные и статические данные в раздел &lt;code&gt;.bss&lt;/code&gt; , который находится рядом с разделом &lt;code&gt;.neardata&lt;/code&gt; . Поместите небольшие данные только для &lt;code&gt;.rodata&lt;/code&gt; раздел .rodata . Соответствующие разделы, используемые для больших &lt;code&gt;.fardata&lt;/code&gt; данных: .fardata , &lt;code&gt;.far&lt;/code&gt; и &lt;code&gt;.const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2399d291f04f4ceb6a5d4d94e2129947be998a8" translate="yes" xml:space="preserve">
          <source>Put small global and static data in the small data area, and generate special instructions to reference them.</source>
          <target state="translated">Поместите небольшие глобальные и статические данные в небольшую область данных и сгенерируйте специальные инструкции для ссылки на них.</target>
        </trans-unit>
        <trans-unit id="d62b1c870b332795e163f0098650ca88ceaf5c00" translate="yes" xml:space="preserve">
          <source>Put small global and static data in the small data area, but do not generate special code to reference them.</source>
          <target state="translated">Поместите небольшие глобальные и статические данные в небольшую область данных,но не генерируйте специальный код для их привязки.</target>
        </trans-unit>
        <trans-unit id="f427abf1ae046d699cd5f6fec41113c62676ed1b" translate="yes" xml:space="preserve">
          <source>Put static or global variables whose size is &lt;var&gt;n&lt;/var&gt; bytes or less into the first 32 kilobytes of memory.</source>
          <target state="translated">Поместите статические или глобальные переменные, размер которых не превышает &lt;var&gt;n&lt;/var&gt; байтов, в первые 32 килобайта памяти.</target>
        </trans-unit>
        <trans-unit id="c3a89106111c4929799b74f87481c16b67c9438e" translate="yes" xml:space="preserve">
          <source>Put static or global variables whose size is &lt;var&gt;n&lt;/var&gt; bytes or less into the small data area that register &lt;code&gt;gp&lt;/code&gt; points to. The small data area can hold up to 64 kilobytes.</source>
          <target state="translated">Поместите статические или глобальные переменные размером &lt;var&gt;n&lt;/var&gt; байтов или меньше в небольшую область данных, на которую указывает &lt;code&gt;gp&lt;/code&gt; . Небольшая область данных может содержать до 64 килобайт.</target>
        </trans-unit>
        <trans-unit id="90b5e26c9c08b39bd895b34bb6ae576000e2eb1e" translate="yes" xml:space="preserve">
          <source>Put static or global variables whose size is &lt;var&gt;n&lt;/var&gt; bytes or less into the tiny data area that register &lt;code&gt;ep&lt;/code&gt; points to. The tiny data area can hold up to 256 bytes in total (128 bytes for byte references).</source>
          <target state="translated">Поместите статические или глобальные переменные размером &lt;var&gt;n&lt;/var&gt; байтов или меньше в крошечную область данных, на которую указывает регистр &lt;code&gt;ep&lt;/code&gt; . Крошечная область данных может содержать до 256 байтов (128 байтов для байтовых ссылок).</target>
        </trans-unit>
        <trans-unit id="fb78a5b9af064b32c202bfb144d8f6d597bc15ce" translate="yes" xml:space="preserve">
          <source>Put uninitialized &lt;code&gt;const&lt;/code&gt; variables in the read-only data section. This option is only meaningful in conjunction with</source>
          <target state="translated">Поместите неинициализированные &lt;code&gt;const&lt;/code&gt; переменные в раздел данных только для чтения. Этот параметр имеет смысл только в сочетании с</target>
        </trans-unit>
        <trans-unit id="15266f7e96e613e475613699a09898779a9cf785" translate="yes" xml:space="preserve">
          <source>Putting statements and declarations inside expressions.</source>
          <target state="translated">Помещение выражений и деклараций в выражения.</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="2fb1858154779be9095d34bc86481decea9864b5" translate="yes" xml:space="preserve">
          <source>Qualifiers</source>
          <target state="translated">Qualifiers</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="51d0c108a00931316d1d9196895d716cd8591259" translate="yes" xml:space="preserve">
          <source>R10</source>
          <target state="translated">R10</target>
        </trans-unit>
        <trans-unit id="a8c8c0f94567fb54e5baecfbbe7a22ad9ffe90a8" translate="yes" xml:space="preserve">
          <source>R9</source>
          <target state="translated">R9</target>
        </trans-unit>
        <trans-unit id="4ed9df973cbf299009483fc686300ba83d456ff4" translate="yes" xml:space="preserve">
          <source>RAM larger than 64 KiB is not supported by GCC for AVR targets. If you use inline assembler to read from locations outside the 16-bit address range and change one of the &lt;code&gt;RAMP&lt;/code&gt; registers, you must reset it to zero after the access.</source>
          <target state="translated">ОЗУ больше 64 КБ не поддерживается GCC для целей AVR. Если вы используете встроенный ассемблер для чтения из мест за пределами 16-битного диапазона адресов и изменения одного из регистров &lt;code&gt;RAMP&lt;/code&gt; , вы должны сбросить его до нуля после доступа.</target>
        </trans-unit>
        <trans-unit id="cdc0f19760327ced87ad8aee74afab31fe72c4fe" translate="yes" xml:space="preserve">
          <source>REG_BR_PROB</source>
          <target state="translated">REG_BR_PROB</target>
        </trans-unit>
        <trans-unit id="f440f2eda03ec65b7157428e14ccfd6f3d0babc7" translate="yes" xml:space="preserve">
          <source>RISC-V&amp;mdash;</source>
          <target state="translated">RISC-V&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="647dca504e5b45f643aed4172949afe845cda414" translate="yes" xml:space="preserve">
          <source>RL78&amp;mdash;</source>
          <target state="translated">RL78&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="575f4784d61d9c2b0ea79d87650e89f3ea480cc7" translate="yes" xml:space="preserve">
          <source>RTL if-conversion tries to remove conditional branches around a block and replace them with conditionally executed instructions. This parameter gives the maximum number of instructions in a block which should be considered for if-conversion. The compiler will also use other heuristics to decide whether if-conversion is likely to be profitable.</source>
          <target state="translated">RTL if-conversion пытается удалить условные ветки вокруг блока и заменить их условно выполненными инструкциями.Этот параметр дает максимальное количество инструкций в блоке,которое следует учитывать при if-преобразовании.Компилятор также будет использовать другие эвристики,чтобы решить,будет ли преобразование выгодным.</target>
        </trans-unit>
        <trans-unit id="8ffe843fed02ef77ab2e92d415d12da14c23bcab" translate="yes" xml:space="preserve">
          <source>RTL if-conversion will try to remove conditional branches around a block and replace them with conditionally executed instructions. These parameters give the maximum permissible cost for the sequence that would be generated by if-conversion depending on whether the branch is statically determined to be predictable or not. The units for this parameter are the same as those for the GCC internal seq_cost metric. The compiler will try to provide a reasonable default for this parameter using the BRANCH_COST target macro.</source>
          <target state="translated">RTL if-conversion будет пытаться удалить условные ветки вокруг блока и заменить их условно выполненными инструкциями.Эти параметры дают максимально допустимую стоимость последовательности,которая будет генерироваться при if-преобразовании в зависимости от того,является ли ветвь статически предсказуемой или нет.Единицы измерения для этого параметра такие же,как и для внутренней метрики seq_cost GCC.Компилятор попытается предоставить разумное значение по умолчанию для этого параметра,используя целевой макрос BRANCH_COST.</target>
        </trans-unit>
        <trans-unit id="b61bd2259b081aeab3036fb11de5495fed60c76b" translate="yes" xml:space="preserve">
          <source>RTM Function: int &lt;strong id=&quot;index-_005fxtest&quot;&gt;_xtest&lt;/strong&gt; ()</source>
          <target state="translated">Функция RTM: int &lt;strong id=&quot;index-_005fxtest&quot;&gt;_xtest&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="ee01945fd30707cfbb63a1376c78162c28d86d32" translate="yes" xml:space="preserve">
          <source>RTM Function: unsigned &lt;strong id=&quot;index-_005fxbegin&quot;&gt;_xbegin&lt;/strong&gt; ()</source>
          <target state="translated">Функция RTM: unsigned &lt;strong id=&quot;index-_005fxbegin&quot;&gt;_xbegin&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="e8ff66f739eabb13f3e3a702095e9beb4ceb7801" translate="yes" xml:space="preserve">
          <source>RTM Function: void &lt;strong id=&quot;index-_005fxabort&quot;&gt;_xabort&lt;/strong&gt; (status)</source>
          <target state="translated">Функция RTM: void &lt;strong id=&quot;index-_005fxabort&quot;&gt;_xabort&lt;/strong&gt; (статус)</target>
        </trans-unit>
        <trans-unit id="9b706c796609ffc332644946cbe8681890d7242e" translate="yes" xml:space="preserve">
          <source>RTM Function: void &lt;strong id=&quot;index-_005fxend&quot;&gt;_xend&lt;/strong&gt; ()</source>
          <target state="translated">Функция RTM: void &lt;strong id=&quot;index-_005fxend&quot;&gt;_xend&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="828c78a41071d9949c1d88a38a7d2dcd59e5c5f3" translate="yes" xml:space="preserve">
          <source>RX&amp;mdash;</source>
          <target state="translated">RX&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="d7b79d74a6226f5fa551619ad3ed2cd4c064e1e4" translate="yes" xml:space="preserve">
          <source>RX200</source>
          <target state="translated">RX200</target>
        </trans-unit>
        <trans-unit id="6b0bdb50e97b5f7896cc50adf9568df594becf5a" translate="yes" xml:space="preserve">
          <source>RX600</source>
          <target state="translated">RX600</target>
        </trans-unit>
        <trans-unit id="e9b5640a7d2c4fd0e5ab9dc9d14a004b2b5bb4b9" translate="yes" xml:space="preserve">
          <source>RX610</source>
          <target state="translated">RX610</target>
        </trans-unit>
        <trans-unit id="75a59f2d35f8f89735f1550d0fb20ce1794b174c" translate="yes" xml:space="preserve">
          <source>Range 24 to 31, rotatert:SI 8 to 1 expressed as rotate</source>
          <target state="translated">Диапазон от 24 до 31,rotatert:SI 8 до 1,выраженный в виде вращения</target>
        </trans-unit>
        <trans-unit id="03a9b8383aae047c9acd6c38cefaa42394133afe" translate="yes" xml:space="preserve">
          <source>Range 8 to 15, rotatert:HI 8 to 1 expressed as rotate</source>
          <target state="translated">Диапазон от 8 до 15,rotatert:HI 8 до 1 выражается как вращающийся</target>
        </trans-unit>
        <trans-unit id="b09e126e8976753eddde68fb3b2daae37eaf29a0" translate="yes" xml:space="preserve">
          <source>Range of signed numbers that don&amp;rsquo;t fit in 16 bits</source>
          <target state="translated">Диапазон чисел со знаком, которые не помещаются в 16 бит</target>
        </trans-unit>
        <trans-unit id="3f3d7a48648a100cea8d8857ee93983cdfde6d2e" translate="yes" xml:space="preserve">
          <source>Rather than allocating fixed registers via clobbers to provide scratch registers for an &lt;code&gt;asm&lt;/code&gt; statement, an alternative is to define a variable and make it an early-clobber output as with &lt;code&gt;a2&lt;/code&gt; and &lt;code&gt;a3&lt;/code&gt; in the example below. This gives the compiler register allocator more freedom. You can also define a variable and make it an output tied to an input as with &lt;code&gt;a0&lt;/code&gt; and &lt;code&gt;a1&lt;/code&gt;, tied respectively to &lt;code&gt;ap&lt;/code&gt; and &lt;code&gt;lda&lt;/code&gt;. Of course, with tied outputs your &lt;code&gt;asm&lt;/code&gt; can&amp;rsquo;t use the input value after modifying the output register since they are one and the same register. What&amp;rsquo;s more, if you omit the early-clobber on the output, it is possible that GCC might allocate the same register to another of the inputs if GCC could prove they had the same value on entry to the &lt;code&gt;asm&lt;/code&gt;. This is why &lt;code&gt;a1&lt;/code&gt; has an early-clobber. Its tied input, &lt;code&gt;lda&lt;/code&gt; might conceivably be known to have the value 16 and without an early-clobber share the same register as &lt;code&gt;%11&lt;/code&gt;. On the other hand, &lt;code&gt;ap&lt;/code&gt; can&amp;rsquo;t be the same as any of the other inputs, so an early-clobber on &lt;code&gt;a0&lt;/code&gt; is not needed. It is also not desirable in this case. An early-clobber on &lt;code&gt;a0&lt;/code&gt; would cause GCC to allocate a separate register for the &lt;code&gt;&quot;m&quot; (*(const double (*)[]) ap)&lt;/code&gt; input. Note that tying an input to an output is the way to set up an initialized temporary register modified by an &lt;code&gt;asm&lt;/code&gt; statement. An input not tied to an output is assumed by GCC to be unchanged, for example &lt;code&gt;&quot;b&quot; (16)&lt;/code&gt; below sets up &lt;code&gt;%11&lt;/code&gt; to 16, and GCC might use that register in following code if the value 16 happened to be needed. You can even use a normal &lt;code&gt;asm&lt;/code&gt; output for a scratch if all inputs that might share the same register are consumed before the scratch is used. The VSX registers clobbered by the &lt;code&gt;asm&lt;/code&gt; statement could have used this technique except for GCC&amp;rsquo;s limit on the number of &lt;code&gt;asm&lt;/code&gt; parameters.</source>
          <target state="translated">Вместо того, чтобы выделять фиксированные регистры через clobbers, чтобы предоставить временные регистры для оператора &lt;code&gt;asm&lt;/code&gt; , альтернатива состоит в том, чтобы определить переменную и сделать ее выходом раннего clobber, как с &lt;code&gt;a2&lt;/code&gt; и &lt;code&gt;a3&lt;/code&gt; в примере ниже. Это дает распределителю регистров компилятора больше свободы. Вы также можете определить переменную и сделать ее выходом, привязанным к входу, как с &lt;code&gt;a0&lt;/code&gt; и &lt;code&gt;a1&lt;/code&gt; , привязанными соответственно к &lt;code&gt;ap&lt;/code&gt; и &lt;code&gt;lda&lt;/code&gt; . Конечно, с привязанными выходами ваш &lt;code&gt;asm&lt;/code&gt; не может использовать входное значение после изменения выходного регистра, так как это один и тот же регистр. Более того, если вы опустите ранний clobber на выходе, возможно, что GCC может выделить тот же регистр для другого из входов, если GCC сможет доказать, что они имеют одинаковое значение при входе в &lt;code&gt;asm&lt;/code&gt; . Вот почему у &lt;code&gt;a1&lt;/code&gt; есть ранний сбой. Его связанный вход, &lt;code&gt;lda&lt;/code&gt; , вероятно, может быть известен как имеющий значение 16 и без раннего clobber использовать тот же регистр, что и &lt;code&gt;%11&lt;/code&gt; . С другой стороны, &lt;code&gt;ap&lt;/code&gt; не может быть таким же, как любой из других входов, поэтому ранний срез на &lt;code&gt;a0&lt;/code&gt; не требуется. В этом случае это тоже нежелательно. Ранний затор на &lt;code&gt;a0&lt;/code&gt; заставит GCC выделить отдельный регистр для ввода &lt;code&gt;&quot;m&quot; (*(const double (*)[]) ap)&lt;/code&gt; . Обратите внимание, что привязка входа к выходу - это способ настроить инициализированный временный регистр, измененный оператором &lt;code&gt;asm&lt;/code&gt; . GCC предполагает, что вход, не связанный с выходом, не изменился, например, &lt;code&gt;&quot;b&quot; (16)&lt;/code&gt; ниже устанавливает &lt;code&gt;%11&lt;/code&gt; до 16, и GCC может использовать этот регистр в следующем коде, если значение 16 необходимо. Вы даже можете использовать обычный вывод &lt;code&gt;asm&lt;/code&gt; для царапины, если все входные данные, которые могут совместно использовать один и тот же регистр, потребляются до использования царапины. Регистры VSX, закрытые оператором &lt;code&gt;asm&lt;/code&gt; , могли бы использовать этот метод, за исключением ограничения GCC на количество &lt;code&gt;asm&lt;/code&gt; параметры.</target>
        </trans-unit>
        <trans-unit id="3d48db591bff1043a0d8039e8ccf5e783e97e6a2" translate="yes" xml:space="preserve">
          <source>Rcq</source>
          <target state="translated">Rcq</target>
        </trans-unit>
        <trans-unit id="521f78e80ba6f8863e858ff98f48391a0330829a" translate="yes" xml:space="preserve">
          <source>Rcw</source>
          <target state="translated">Rcw</target>
        </trans-unit>
        <trans-unit id="8b8331348b2521f417469192e2b07ba6bae059df" translate="yes" xml:space="preserve">
          <source>Re-run common subexpression elimination after loop optimizations are performed.</source>
          <target state="translated">Повторный запуск устранения общих подвыражений после выполнения циклических оптимизаций.</target>
        </trans-unit>
        <trans-unit id="47e55523da5572635c20ab856b76afcfa5225486" translate="yes" xml:space="preserve">
          <source>Read command-line options from &lt;var&gt;file&lt;/var&gt;. The options read are inserted in place of the original @&lt;var&gt;file&lt;/var&gt; option. If &lt;var&gt;file&lt;/var&gt; does not exist, or cannot be read, then the option will be treated literally, and not removed.</source>
          <target state="translated">Прочитать параметры командной строки из &lt;var&gt;file&lt;/var&gt; . Считанные параметры вставляются вместо исходного параметра @ &lt;var&gt;file&lt;/var&gt; . Если &lt;var&gt;file&lt;/var&gt; не существует или не может быть прочитан, опция будет обработана буквально, а не удалена.</target>
        </trans-unit>
        <trans-unit id="ee0598dcd3bf6f16e79ad5d502ed56654313a31d" translate="yes" xml:space="preserve">
          <source>Read the most or least (respectively) significant half of X and store it in &lt;var&gt;dest&lt;/var&gt;.</source>
          <target state="translated">Считайте наиболее или наименее значимую (соответственно) половину X и сохраните ее в &lt;var&gt;dest&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7a126a185b0d0082578e19ef3a5daeade792a6f6" translate="yes" xml:space="preserve">
          <source>Read the specified profile directory and rewrite to a new directory.</source>
          <target state="translated">Считайте указанный каталог профиля и перезапишите его в новый каталог.</target>
        </trans-unit>
        <trans-unit id="1324c749c5caee9deabe2d1d46a7919f7a43e96a" translate="yes" xml:space="preserve">
          <source>Read the value of Y and store it into &lt;var&gt;dest&lt;/var&gt;.</source>
          <target state="translated">Считайте значение Y и сохраните его в &lt;var&gt;dest&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2e0e1585c9e916aa0dcd09633e5b74f9bffa47f5" translate="yes" xml:space="preserve">
          <source>Reading across the 64 KiB section boundary of the &lt;code&gt;__flash&lt;/code&gt; or &lt;code&gt;__flash&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; address spaces shows undefined behavior. The only address space that supports reading across the 64 KiB flash segment boundaries is &lt;code&gt;__memx&lt;/code&gt;.</source>
          <target state="translated">Чтение через границу раздела 64 КиБ адресного пространства &lt;code&gt;__flash&lt;/code&gt; или &lt;code&gt;__flash&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; показывает неопределенное поведение. Единственное адресное пространство, которое поддерживает чтение через границы сегмента флэш-памяти 64 &lt;code&gt;__memx&lt;/code&gt; - это __memx .</target>
        </trans-unit>
        <trans-unit id="cc9977fd47f39524c5c4335bb2cc07440e340402" translate="yes" xml:space="preserve">
          <source>Real C type</source>
          <target state="translated">Реальный тип С</target>
        </trans-unit>
        <trans-unit id="b01207b1c7506846e0bfacee12ec2af4714dfc01" translate="yes" xml:space="preserve">
          <source>Realign the stack at entry. On the x86, the</source>
          <target state="translated">Выровняйте стопку при входе.На x86,на</target>
        </trans-unit>
        <trans-unit id="f8d3df1ed60f0155cff1c249d5d8c961d1ce5254" translate="yes" xml:space="preserve">
          <source>Recall that a compound statement is a sequence of statements surrounded by braces; in this construct, parentheses go around the braces. For example:</source>
          <target state="translated">Вспомните,что составной оператор-это последовательность операторов,окруженных фигурными скобками;в этой конструкции круглые скобки идут вокруг фигурных скобок.Например:</target>
        </trans-unit>
        <trans-unit id="f625feb6c1f19cc48c16f0f10876aa7bd3ff669d" translate="yes" xml:space="preserve">
          <source>Recognize EUCJP characters.</source>
          <target state="translated">Распознавать символы EUCJP.</target>
        </trans-unit>
        <trans-unit id="7c01853b77bfeb03d9b038e23e661cf8dc08fff1" translate="yes" xml:space="preserve">
          <source>Recognize JIS characters.</source>
          <target state="translated">Узнать символы JIS.</target>
        </trans-unit>
        <trans-unit id="794f97acfad850c064b040b0a84cf0cc856becc0" translate="yes" xml:space="preserve">
          <source>Recognize SJIS characters.</source>
          <target state="translated">Распознавание символов SJIS.</target>
        </trans-unit>
        <trans-unit id="27cc26e0565438fda7c152cefdfd1b3f962fba55" translate="yes" xml:space="preserve">
          <source>Record the time consumed by infrastructure parts separately for each pass.</source>
          <target state="translated">Записывайте время,затрачиваемое частями инфраструктуры,отдельно для каждого прохода.</target>
        </trans-unit>
        <trans-unit id="ecb4684dd74316d7840b5ce3326149ec45004d04" translate="yes" xml:space="preserve">
          <source>Recursive inlining is profitable only for function having deep recursion in average and can hurt for function having little recursion depth by increasing the prologue size or complexity of function body to other optimizers.</source>
          <target state="translated">Рекурсивное вливание выгодно только для функции,имеющей в среднем глубокую рекурсию,и может повредить для функции,имеющей небольшую глубину рекурсии,увеличив размер пролога или сложность тела функции до других оптимизаторов.</target>
        </trans-unit>
        <trans-unit id="6d1dad90db7b45d2f00d2160233fcf301ebfc624" translate="yes" xml:space="preserve">
          <source>Reduce compilation time and make debugging produce the expected results. This is the default.</source>
          <target state="translated">Сократите время компиляции и сделайте так,чтобы отладка дала ожидаемые результаты.По умолчанию.</target>
        </trans-unit>
        <trans-unit id="6aec65068eeb8842d5e5c7061649e6408aeb8661" translate="yes" xml:space="preserve">
          <source>Reduce stack alignment on call sites if possible. Enabled by default.</source>
          <target state="translated">Уменьшите выравнивание стека на сайтах звонков,если это возможно.Включено по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7ae7930fe556a2ec3059d5f1104e863261afd8f6" translate="yes" xml:space="preserve">
          <source>Reduce target register priority for r0..r3 / r12..r15.</source>
          <target state="translated">Уменьшить приоритет целевого регистра для r0...r3/r12...r15.</target>
        </trans-unit>
        <trans-unit id="1cb5fa5caf504f40df07a2cdb9428651f086d6df" translate="yes" xml:space="preserve">
          <source>Reduced-precision reciprocal (sequence step 1) (&lt;code&gt;recip1.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt;).</source>
          <target state="translated">Снижение точности обратной (шаг последовательности 1) ( &lt;code&gt;recip1.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b50a97d7c07e8e5ac702942c6a7c44137ba2c8f" translate="yes" xml:space="preserve">
          <source>Reduced-precision reciprocal (sequence step 2) (&lt;code&gt;recip2.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt;).</source>
          <target state="translated">Снижение точности обратной (последовательность шаг 2) ( &lt;code&gt;recip2.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="311a85e245f0ddc53f02f904b2b964a9654bf632" translate="yes" xml:space="preserve">
          <source>Reduced-precision reciprocal square root (sequence step 1) (&lt;code&gt;rsqrt1.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt;).</source>
          <target state="translated">Снижение точности обратный квадратный корень (шаг последовательность 1) ( &lt;code&gt;rsqrt1.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3ac4a799c5d637561c73e206b8150513e28619c" translate="yes" xml:space="preserve">
          <source>Reduced-precision reciprocal square root (sequence step 2) (&lt;code&gt;rsqrt2.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt;).</source>
          <target state="translated">Снижение точности обратный квадратный корень (последовательность шаг 2) ( &lt;code&gt;rsqrt2.&lt;var&gt;fmt&lt;/var&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="12e0462f32071ff4845c302840bb4153c2588c2c" translate="yes" xml:space="preserve">
          <source>Reduction add (&lt;code&gt;addr.ps&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;addr.ps&lt;/code&gt; ( адрес .ps ).</target>
        </trans-unit>
        <trans-unit id="e0d244d016314e418eaa174fb12395086f569f16" translate="yes" xml:space="preserve">
          <source>Reduction multiply (&lt;code&gt;mulr.ps&lt;/code&gt;).</source>
          <target state="translated">Уменьшение умножить ( &lt;code&gt;mulr.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0bb3aef854538033314f9b9054c89b202a7a46e1" translate="yes" xml:space="preserve">
          <source>Reentrant functions disable interrupts upon entry and enable them upon exit. Reentrant functions cannot also have the &lt;code&gt;naked&lt;/code&gt; or &lt;code&gt;critical&lt;/code&gt; attributes. They can have the &lt;code&gt;interrupt&lt;/code&gt; attribute.</source>
          <target state="translated">Реентерабельные функции отключают прерывания при входе и включают их при выходе. Реентерабельные функции также не могут иметь &lt;code&gt;naked&lt;/code&gt; или &lt;code&gt;critical&lt;/code&gt; атрибуты. Они могут иметь атрибут &lt;code&gt;interrupt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="572b0899e79b2675d4a7828ac0598f6989f2d4b9" translate="yes" xml:space="preserve">
          <source>References to input, output, and goto operands in the assembler template of extended &lt;code&gt;asm&lt;/code&gt; statements can use modifiers to affect the way the operands are formatted in the code output to the assembler. For example, the following code uses the &amp;lsquo;</source>
          <target state="translated">Ссылки на операнды ввода, вывода и перехода в шаблоне ассемблера расширенных операторов &lt;code&gt;asm&lt;/code&gt; могут использовать модификаторы, чтобы влиять на способ форматирования операндов в коде, выводимом на ассемблер. Например, в следующем коде используется символ '</target>
        </trans-unit>
        <trans-unit id="b1fccad55d1cd1e1deefbf2127cfdfd61810f2dd" translate="yes" xml:space="preserve">
          <source>Refrain from adding &lt;code&gt;.ident&lt;/code&gt; directives to the output file (this is the default).</source>
          <target state="translated">Воздержитесь от добавления директив &lt;code&gt;.ident&lt;/code&gt; в выходной файл (это значение по умолчанию).</target>
        </trans-unit>
        <trans-unit id="3001d626a710b17789a0092c43744394347ea069" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;$3&lt;/code&gt;. Do not use this constraint in new code; it is retained only for compatibility with glibc.</source>
          <target state="translated">Зарегистрируйте &lt;code&gt;$3&lt;/code&gt; . Не используйте это ограничение в новом коде; он сохранен только для совместимости с glibc.</target>
        </trans-unit>
        <trans-unit id="3567485f11d416ff7283001d94e2df1c5725db16" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;r1&lt;/code&gt;</source>
          <target state="translated">Зарегистрируйте &lt;code&gt;r1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9eb9c84600134957bc0bafd88d9264e6fe1a9153" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;r2&lt;/code&gt;</source>
          <target state="translated">Зарегистрируйте &lt;code&gt;r2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09b82e9bbfda6d5a540f8220132caa45617cfba9" translate="yes" xml:space="preserve">
          <source>Register &lt;code&gt;r3&lt;/code&gt;</source>
          <target state="translated">Зарегистрируйте &lt;code&gt;r3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6bc4e57659e02dd40d1f5e77c49bbd03b18fc44" translate="yes" xml:space="preserve">
          <source>Register B14 (aka DP).</source>
          <target state="translated">Регистрация В14 (он же ДП).</target>
        </trans-unit>
        <trans-unit id="533a97d446a8a5b93bc162a4324dc4171fb8ddfe" translate="yes" xml:space="preserve">
          <source>Register R12.</source>
          <target state="translated">Зарегистрировать R12.</target>
        </trans-unit>
        <trans-unit id="f1c1d776b68a0b27c9825edf576eb52eaa0cc6ec" translate="yes" xml:space="preserve">
          <source>Register R13.</source>
          <target state="translated">Зарегистрировать R13.</target>
        </trans-unit>
        <trans-unit id="1052cf107720625d376ff935f6870b8efc3827a7" translate="yes" xml:space="preserve">
          <source>Register destructors for objects with static storage duration with the &lt;code&gt;__cxa_atexit&lt;/code&gt; function rather than the &lt;code&gt;atexit&lt;/code&gt; function. This option is required for fully standards-compliant handling of static destructors, but only works if your C library supports &lt;code&gt;__cxa_atexit&lt;/code&gt;.</source>
          <target state="translated">Зарегистрируйте деструкторы для объектов со статической продолжительностью хранения с &lt;code&gt;__cxa_atexit&lt;/code&gt; функции __cxa_atexit, а не функции &lt;code&gt;atexit&lt;/code&gt; . Эта опция требуется для полностью совместимой со стандартами обработки статических деструкторов, но работает только в том случае, если ваша библиотека C поддерживает &lt;code&gt;__cxa_atexit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c42270e4a24dd0bfbae7acb6e659ccc0acf3f22" translate="yes" xml:space="preserve">
          <source>Register file A (A0&amp;ndash;A31).</source>
          <target state="translated">Зарегистрируйте файл A (A0 &amp;ndash; A31).</target>
        </trans-unit>
        <trans-unit id="bdb218bd85a72cf91961a4baf75015f2c537debf" translate="yes" xml:space="preserve">
          <source>Register file A, excluding predicate registers (A3&amp;ndash;A31, plus A0 if not C64X or higher).</source>
          <target state="translated">Файл регистров A, за исключением регистров предикатов (A3 &amp;ndash; A31, плюс A0, если не C64X или выше).</target>
        </trans-unit>
        <trans-unit id="1742f2e75d608f80fedddd8e77336383043c25ae" translate="yes" xml:space="preserve">
          <source>Register file B (B0&amp;ndash;B31).</source>
          <target state="translated">Зарегистрируйте файл B (B0 &amp;ndash; B31).</target>
        </trans-unit>
        <trans-unit id="1444488f53becce76ff486bdb18d0cd8356cea74" translate="yes" xml:space="preserve">
          <source>Register file B, excluding predicate registers (B3&amp;ndash;B31).</source>
          <target state="translated">Файл регистров B, исключая регистры предикатов (B3 &amp;ndash; B31).</target>
        </trans-unit>
        <trans-unit id="a59bf4be334c96a8db1601f16454148488cc2943" translate="yes" xml:space="preserve">
          <source>Register from r0 to r11 (all 16-bit registers)</source>
          <target state="translated">Регистрация от r0 до r11 (все 16-битные регистры)</target>
        </trans-unit>
        <trans-unit id="480c1a3005b1f1617a3032a48dc7e43063c42c0c" translate="yes" xml:space="preserve">
          <source>Register from r12 to r15 (all 32-bit registers)</source>
          <target state="translated">Регистрация от r12 до r15 (все 32-битные регистры)</target>
        </trans-unit>
        <trans-unit id="2b3c2b112d10d3044f325ab4493e523def957e04" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;ACCG_REGS&lt;/code&gt; (&lt;code&gt;accg0&lt;/code&gt; to &lt;code&gt;accg7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;ACCG_REGS&lt;/code&gt; (от &lt;code&gt;accg0&lt;/code&gt; до &lt;code&gt;accg7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7da0fdc2c3630cb8c657242c1c4ac92c07fc0b4b" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;ACC_REGS&lt;/code&gt; (&lt;code&gt;acc0&lt;/code&gt; to &lt;code&gt;acc7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;ACC_REGS&lt;/code&gt; (от &lt;code&gt;acc0&lt;/code&gt; до &lt;code&gt;acc7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d01bcabe56f9176a78fd1c7f42ce5bc52571e38" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;CC_REGS&lt;/code&gt; (&lt;code&gt;fcc0&lt;/code&gt; to &lt;code&gt;fcc3&lt;/code&gt; and &lt;code&gt;icc0&lt;/code&gt; to &lt;code&gt;icc3&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;CC_REGS&lt;/code&gt; (от &lt;code&gt;fcc0&lt;/code&gt; до &lt;code&gt;fcc3&lt;/code&gt; и &lt;code&gt;icc0&lt;/code&gt; до &lt;code&gt;icc3&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="60401b0367db40fb60a9cde0e01a905072f4adce" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;CR_REGS&lt;/code&gt; (&lt;code&gt;cc0&lt;/code&gt; to &lt;code&gt;cc7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;CR_REGS&lt;/code&gt; (от &lt;code&gt;cc0&lt;/code&gt; до &lt;code&gt;cc7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="59a99c246bcf173869c670543e28aefb7eaef202" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;EVEN_ACC_REGS&lt;/code&gt; (&lt;code&gt;acc0&lt;/code&gt; to &lt;code&gt;acc7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;EVEN_ACC_REGS&lt;/code&gt; (от &lt;code&gt;acc0&lt;/code&gt; до &lt;code&gt;acc7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd4f2434b1ee5dd0a73e566a4353d3b841b3be02" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;EVEN_REGS&lt;/code&gt; (&lt;code&gt;gr0&lt;/code&gt; to &lt;code&gt;gr63&lt;/code&gt;). Odd registers are excluded not in the class but through the use of a machine mode larger than 4 bytes.</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;EVEN_REGS&lt;/code&gt; (от &lt;code&gt;gr0&lt;/code&gt; до &lt;code&gt;gr63&lt;/code&gt; ). Нечетные регистры исключаются не из класса, а за счет использования машинного режима размером более 4 байтов.</target>
        </trans-unit>
        <trans-unit id="7684a3097ebf46a01e56e039fccba7728030eae8" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;FCC_REGS&lt;/code&gt; (&lt;code&gt;fcc0&lt;/code&gt; to &lt;code&gt;fcc3&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;FCC_REGS&lt;/code&gt; (от &lt;code&gt;fcc0&lt;/code&gt; до &lt;code&gt;fcc3&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5924427c40695e1f7e3fa17f28b85c901bb780f0" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;FCR_REGS&lt;/code&gt; (&lt;code&gt;cc0&lt;/code&gt; to &lt;code&gt;cc3&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;FCR_REGS&lt;/code&gt; (от &lt;code&gt;cc0&lt;/code&gt; до &lt;code&gt;cc3&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="65d5a8ed496d976776f700862d585c95cb234cc1" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;FEVEN_REGS&lt;/code&gt; (&lt;code&gt;fr0&lt;/code&gt; to &lt;code&gt;fr63&lt;/code&gt;). Odd registers are excluded not in the class but through the use of a machine mode larger than 4 bytes.</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;FEVEN_REGS&lt;/code&gt; (от &lt;code&gt;fr0&lt;/code&gt; до &lt;code&gt;fr63&lt;/code&gt; ). Нечетные регистры исключаются не из класса, а за счет использования машинного режима размером более 4 байтов.</target>
        </trans-unit>
        <trans-unit id="253b27d108e605b64087cadbee528e59c1f7a79f" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;FPR_REGS&lt;/code&gt; (&lt;code&gt;fr0&lt;/code&gt; to &lt;code&gt;fr63&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;FPR_REGS&lt;/code&gt; (от &lt;code&gt;fr0&lt;/code&gt; до &lt;code&gt;fr63&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1a9a5917a9352a9b774047a78e988238f033f90b" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;GPR_REGS&lt;/code&gt; (&lt;code&gt;gr0&lt;/code&gt; to &lt;code&gt;gr63&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;GPR_REGS&lt;/code&gt; (от &lt;code&gt;gr0&lt;/code&gt; до &lt;code&gt;gr63&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="de6724c19d1c6001733a2c683050c56b6b1affbc" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;ICC_REGS&lt;/code&gt; (&lt;code&gt;icc0&lt;/code&gt; to &lt;code&gt;icc3&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;ICC_REGS&lt;/code&gt; (от &lt;code&gt;icc0&lt;/code&gt; до &lt;code&gt;icc3&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0ca423076130e7e6489d4f896160ff5e22f77c62" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;ICR_REGS&lt;/code&gt; (&lt;code&gt;cc4&lt;/code&gt; to &lt;code&gt;cc7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;ICR_REGS&lt;/code&gt; (от &lt;code&gt;cc4&lt;/code&gt; до &lt;code&gt;cc7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="148c41bd7ab7376f2591378add35d9d26efd9177" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;LR_REG&lt;/code&gt; (the &lt;code&gt;lr&lt;/code&gt; register).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;LR_REG&lt;/code&gt; ( регистр &lt;code&gt;lr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a34d537ea831c75f947b48a3453e17d88afefaf4" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;QUAD_ACC_REGS&lt;/code&gt; (&lt;code&gt;acc0&lt;/code&gt; to &lt;code&gt;acc7&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;QUAD_ACC_REGS&lt;/code&gt; (от &lt;code&gt;acc0&lt;/code&gt; до &lt;code&gt;acc7&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="510647219824fa78b9f755cf92ce845481e8c212" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;QUAD_FPR_REGS&lt;/code&gt; (&lt;code&gt;fr0&lt;/code&gt; to &lt;code&gt;fr63&lt;/code&gt;). Register numbers not divisible by 4 are excluded not in the class but through the use of a machine mode larger than 8 bytes.</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;QUAD_FPR_REGS&lt;/code&gt; (от &lt;code&gt;fr0&lt;/code&gt; до &lt;code&gt;fr63&lt;/code&gt; ). Номера регистров, не делящиеся на 4, исключаются не из класса, а из-за использования машинного режима, превышающего 8 байтов.</target>
        </trans-unit>
        <trans-unit id="b2a1adf092bc540d607f8adfe316ebd0e23d6e5f" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;QUAD_REGS&lt;/code&gt; (&lt;code&gt;gr2&lt;/code&gt; to &lt;code&gt;gr63&lt;/code&gt;). Register numbers not divisible by 4 are excluded not in the class but through the use of a machine mode larger than 8 bytes.</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;QUAD_REGS&lt;/code&gt; (от &lt;code&gt;gr2&lt;/code&gt; до &lt;code&gt;gr63&lt;/code&gt; ). Номера регистров, не делящиеся на 4, исключаются не из класса, а из-за использования машинного режима, превышающего 8 байтов.</target>
        </trans-unit>
        <trans-unit id="a9cbfc355864e59c43680683d72198de7278ba3e" translate="yes" xml:space="preserve">
          <source>Register in the class &lt;code&gt;SPR_REGS&lt;/code&gt; (&lt;code&gt;lcr&lt;/code&gt; and &lt;code&gt;lr&lt;/code&gt;).</source>
          <target state="translated">Зарегистрируйтесь в классе &lt;code&gt;SPR_REGS&lt;/code&gt; ( &lt;code&gt;lcr&lt;/code&gt; и &lt;code&gt;lr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="769f1e93ba84a3021586676ebf74ba9a35bdb862" translate="yes" xml:space="preserve">
          <source>Register offset addressing</source>
          <target state="translated">Адрес смещения регистра</target>
        </trans-unit>
        <trans-unit id="c5f75dbc07c39bcb48abaeacbb855b7e10bf33e2" translate="yes" xml:space="preserve">
          <source>Register pair X (r27:r26)</source>
          <target state="translated">Регистрационная пара X (r27:r26)</target>
        </trans-unit>
        <trans-unit id="3b43e753bc9f5bc9b63c0e261a0e69e87d9b370f" translate="yes" xml:space="preserve">
          <source>Register pair Y (r29:r28)</source>
          <target state="translated">Регистрационная пара Y (r29:r28)</target>
        </trans-unit>
        <trans-unit id="8e0fa3a292eb7a9cffe0fac8e87c12161eb6cf21" translate="yes" xml:space="preserve">
          <source>Register pair Z (r31:r30)</source>
          <target state="translated">Регистрационная пара Z (r31:r30)</target>
        </trans-unit>
        <trans-unit id="025dbba0464975dfda3cfdcc9c21e3f5a63bca74" translate="yes" xml:space="preserve">
          <source>Register r0.</source>
          <target state="translated">Регистрация r0.</target>
        </trans-unit>
        <trans-unit id="2559f54d5a47f8d70d102e65a5685a865132ce80" translate="yes" xml:space="preserve">
          <source>Register r1.</source>
          <target state="translated">Регистрация r1.</target>
        </trans-unit>
        <trans-unit id="c9b7b7b870bca848747bbe900b4af27c68299883" translate="yes" xml:space="preserve">
          <source>Register r2.</source>
          <target state="translated">Регистрация r2.</target>
        </trans-unit>
        <trans-unit id="c7b019e71df945fd75260cb8b739e27afabcb89d" translate="yes" xml:space="preserve">
          <source>Register r8.</source>
          <target state="translated">Регистрация r8.</target>
        </trans-unit>
        <trans-unit id="cfa7fdd3bd0b34e806122b121b229661568a7a14" translate="yes" xml:space="preserve">
          <source>Registers are a scarce resource on most systems and allowing the compiler to manage their usage usually results in the best code. However, under special circumstances it can make sense to reserve some globally. For example this may be useful in programs such as programming language interpreters that have a couple of global variables that are accessed very often.</source>
          <target state="translated">Регистры являются дефицитным ресурсом на большинстве систем и позволяют компилятору управлять их использованием,как правило,приводят к наилучшему коду.Однако при особых обстоятельствах может иметь смысл зарезервировать некоторые из них в глобальном масштабе.Например,это может быть полезно в таких программах,как интерпретаторы языка программирования,которые имеют пару глобальных переменных,к которым обращаются очень часто.</target>
        </trans-unit>
        <trans-unit id="9258e74b890dc26f006130edaeedc1c986bbea52" translate="yes" xml:space="preserve">
          <source>Registers chat can hold 16 bit values, including all control registers.</source>
          <target state="translated">Регистрационный чат может содержать 16 битных значений,включая все управляющие регистры.</target>
        </trans-unit>
        <trans-unit id="756cb0ca2dcd3e9a9e7bd75807e28976eb525101" translate="yes" xml:space="preserve">
          <source>Registers from r0 to r14 (registers without stack pointer)</source>
          <target state="translated">Регистры от r0 до r14 (регистры без указателя стека)</target>
        </trans-unit>
        <trans-unit id="02e3921f37f882ea8d9c75adce25fafdbe8692d7" translate="yes" xml:space="preserve">
          <source>Registers from r0 to r15</source>
          <target state="translated">Регистры от r0 до r15</target>
        </trans-unit>
        <trans-unit id="f9f658d92ebc98d15c63ce46e1732d5659102ede" translate="yes" xml:space="preserve">
          <source>Registers from r16 to r23</source>
          <target state="translated">Регистры от r16 до r23</target>
        </trans-unit>
        <trans-unit id="079d6f1b242baa1c7f0618d4f05a489251d1825b" translate="yes" xml:space="preserve">
          <source>Registers from r16 to r31</source>
          <target state="translated">Регистры от r16 до r31</target>
        </trans-unit>
        <trans-unit id="489ac96c6b638b89a7b8ba2debb3353857a6eef8" translate="yes" xml:space="preserve">
          <source>Registers from r24 to r31. These registers can be used in &amp;lsquo;</source>
          <target state="translated">Регистры от r24 до r31. Эти регистры можно использовать в</target>
        </trans-unit>
        <trans-unit id="eeebb5d987a8e9e62e6d397774e01593c964d34f" translate="yes" xml:space="preserve">
          <source>Registers r0 and r1.</source>
          <target state="translated">Регистры r0 и r1.</target>
        </trans-unit>
        <trans-unit id="8300b61d2af50cc4dabd9f53915430a576a4f4a2" translate="yes" xml:space="preserve">
          <source>Registers r0 through r7.</source>
          <target state="translated">Регистры от r0 до r7.</target>
        </trans-unit>
        <trans-unit id="1bdabc9e342c28d99561b12e0784162f57cd5ff1" translate="yes" xml:space="preserve">
          <source>Registers r8 and r9.</source>
          <target state="translated">Регистры r8 и r9.</target>
        </trans-unit>
        <trans-unit id="46b53a197a4a621fbf89bc41aa1be3ce75327950" translate="yes" xml:space="preserve">
          <source>Registers that can be used with displacements ($a0, $a1, $sb).</source>
          <target state="translated">Регистры,которые могут быть использованы с перемещениями ($a0,$a1,$sb).</target>
        </trans-unit>
        <trans-unit id="d44cddb1d6b35d0af8eee84e19b037c303c54a0d" translate="yes" xml:space="preserve">
          <source>Registers that can hold 16 bit values.</source>
          <target state="translated">Регистры,которые могут содержать 16-битные значения.</target>
        </trans-unit>
        <trans-unit id="10c61cbba1cb11bc1f9e9cef337e27161929a237" translate="yes" xml:space="preserve">
          <source>Registers that can hold 32 bit values.</source>
          <target state="translated">Регистры,которые могут содержать 32-битные значения.</target>
        </trans-unit>
        <trans-unit id="55f1a6e3e272896d0899d9ea18b33ee00c7e2940" translate="yes" xml:space="preserve">
          <source>Registers that can hold QI values.</source>
          <target state="translated">Регистры,которые могут содержать значения QI.</target>
        </trans-unit>
        <trans-unit id="cf58d717e47b85a4f429025faf79666cce971c58" translate="yes" xml:space="preserve">
          <source>Registers that can hold pointers (16 bit registers for r8c, m16c; 24 bit registers for m32cm, m32c).</source>
          <target state="translated">Регистры,которые могут содержать указатели (16 битных регистров для r8c,m16c;24 битных регистра для m32cm,m32c).</target>
        </trans-unit>
        <trans-unit id="caf84b9bb95c9665246bc340b9cdec9d8e62178c" translate="yes" xml:space="preserve">
          <source>Registers usable as base-regs of memory addresses in ARCompact 16-bit memory instructions: &lt;code&gt;r0&lt;/code&gt;-&lt;code&gt;r3&lt;/code&gt;, &lt;code&gt;r12&lt;/code&gt;-&lt;code&gt;r15&lt;/code&gt;, &lt;code&gt;sp&lt;/code&gt;. This constraint can only match when the</source>
          <target state="translated">Регистры, используемые в качестве базовых регистров адресов памяти в 16-битных инструкциях памяти ARCompact: &lt;code&gt;r0&lt;/code&gt; - &lt;code&gt;r3&lt;/code&gt; , &lt;code&gt;r12&lt;/code&gt; - &lt;code&gt;r15&lt;/code&gt; , &lt;code&gt;sp&lt;/code&gt; . Это ограничение может соответствовать только тогда, когда</target>
        </trans-unit>
        <trans-unit id="a35caf683ee22a98f2498aca90a5baa9b5082d4e" translate="yes" xml:space="preserve">
          <source>Registers usable in ARCompact 16-bit instructions: &lt;code&gt;r0&lt;/code&gt;-&lt;code&gt;r3&lt;/code&gt;, &lt;code&gt;r12&lt;/code&gt;-&lt;code&gt;r15&lt;/code&gt;. This constraint can only match when the</source>
          <target state="translated">Регистры, используемые в 16-битных инструкциях ARCompact: &lt;code&gt;r0&lt;/code&gt; - &lt;code&gt;r3&lt;/code&gt; , &lt;code&gt;r12&lt;/code&gt; - &lt;code&gt;r15&lt;/code&gt; . Это ограничение может соответствовать только тогда, когда</target>
        </trans-unit>
        <trans-unit id="19e1e0518e942309076618fad593fdad104075c6" translate="yes" xml:space="preserve">
          <source>Registers used for circular buffering, i.e. I, B, or L registers.</source>
          <target state="translated">Регистры,используемые для круговой буферизации,т.е.регистры I,B или L.</target>
        </trans-unit>
        <trans-unit id="77ea1d61c29764c1f5fd6dc887e5e48e1ad31364" translate="yes" xml:space="preserve">
          <source>Regrettable things we cannot change, but not quite bugs.</source>
          <target state="translated">Жалкие вещи мы не можем изменить,но не совсем ошибки.</target>
        </trans-unit>
        <trans-unit id="d425b70c81109fac404a0fdbe25847f8affed9e1" translate="yes" xml:space="preserve">
          <source>Relaxed Memory Order</source>
          <target state="translated">Порядок расслабленной памяти</target>
        </trans-unit>
        <trans-unit id="dcf0a37891b53a0ada46be28abcde8419a66138e" translate="yes" xml:space="preserve">
          <source>Relaxing must be turned on if linker stubs are needed, see the section on &lt;code&gt;EIND&lt;/code&gt; and linker stubs below.</source>
          <target state="translated">Если требуются заглушки компоновщика, необходимо &lt;code&gt;EIND&lt;/code&gt; , см. Раздел об EIND и заглушках компоновщика ниже.</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="bd65f12268c9cd14645e3d325d57c4b3512607f7" translate="yes" xml:space="preserve">
          <source>Remove all occurrences of &lt;code&gt;-S&lt;/code&gt; from the command line. Note&amp;mdash;this command is position dependent. &amp;lsquo;</source>
          <target state="translated">Удалите все вхождения &lt;code&gt;-S&lt;/code&gt; из командной строки. Примечание. Эта команда зависит от позиции. '</target>
        </trans-unit>
        <trans-unit id="5b528b4646554331e8a3d8f764cb6e6d2423c0b0" translate="yes" xml:space="preserve">
          <source>Remove all symbol table and relocation information from the executable.</source>
          <target state="translated">Удалите всю таблицу символов и информацию о перемещении из исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="9042eb2108ad4333137f668f9d20f239e0364cbc" translate="yes" xml:space="preserve">
          <source>Rename the spec string &lt;var&gt;old_name&lt;/var&gt; to &lt;var&gt;new_name&lt;/var&gt;.</source>
          <target state="translated">Переименуйте строку спецификации &lt;var&gt;old_name&lt;/var&gt; в &lt;var&gt;new_name&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a57f3dbe9a8b794ea15e657f613c3dee256ad6e3" translate="yes" xml:space="preserve">
          <source>Reorder basic blocks in the compiled function in order to reduce number of taken branches and improve code locality.</source>
          <target state="translated">Переупорядочивание основных блоков в скомпилированной функции с целью уменьшения количества взятых ветвей и улучшения локализации кода.</target>
        </trans-unit>
        <trans-unit id="868b5a2b9f40116ce6cc017884431ba3599c4f2c" translate="yes" xml:space="preserve">
          <source>Reorder functions in the object file in order to improve code locality. This is implemented by using special subsections &lt;code&gt;.text.hot&lt;/code&gt; for most frequently executed functions and &lt;code&gt;.text.unlikely&lt;/code&gt; for unlikely executed functions. Reordering is done by the linker so object file format must support named sections and linker must place them in a reasonable way.</source>
          <target state="translated">Измените порядок функций в объектном файле, чтобы улучшить локальность кода. Это реализуется с помощью специальных подразделов &lt;code&gt;.text.hot&lt;/code&gt; для наиболее часто выполняемых функций и &lt;code&gt;.text.unlikely&lt;/code&gt; для маловероятно выполняемых функций. Переупорядочение выполняется компоновщиком, поэтому формат объектного файла должен поддерживать именованные разделы, а компоновщик должен размещать их разумным образом.</target>
        </trans-unit>
        <trans-unit id="4db98af9e39320a953bbea6bb998fe7493c40e5e" translate="yes" xml:space="preserve">
          <source>Replaced by</source>
          <target state="translated">Замененоено</target>
        </trans-unit>
        <trans-unit id="66ec31a6cc491021c387eb4e55e0ad4c5a4f7424" translate="yes" xml:space="preserve">
          <source>Report the CPU time taken by each subprocess in the compilation sequence. For C source files, this is the compiler proper and assembler (plus the linker if linking is done).</source>
          <target state="translated">Сообщайте о процессорном времени,затраченном каждым подпроцессом в последовательности компиляции.Для исходных файлов на C-это собственно компилятор и ассемблер (плюс компоновщик,если компоновка произведена).</target>
        </trans-unit>
        <trans-unit id="886e8af128447aeefef31c794358ef6bddcacd1c" translate="yes" xml:space="preserve">
          <source>Request debugging information and also use &lt;var&gt;level&lt;/var&gt; to specify how much information. The default level is 2.</source>
          <target state="translated">Запросите отладочную информацию, а также используйте &lt;var&gt;level&lt;/var&gt; чтобы указать объем информации. Уровень по умолчанию - 2.</target>
        </trans-unit>
        <trans-unit id="50792516332342d0d1eda395f8cfbb177e04fe78" translate="yes" xml:space="preserve">
          <source>Require (do not require) that code using the standard (uncompressed) MIPS ISA be link-compatible with MIPS16 and microMIPS code, and vice versa.</source>
          <target state="translated">Требовать (не требовать),чтобы код,использующий стандартный (несжатый)MIPS ISA,был совместим по ссылке с кодом MIPS16 и microMIPS,и наоборот.</target>
        </trans-unit>
        <trans-unit id="af5306e882621ffa9b4f415a4290811d77c026c0" translate="yes" xml:space="preserve">
          <source>Require a constant operand and print the constant expression with no punctuation.</source>
          <target state="translated">Требуйте операнд константы и выведите константное выражение без знаков препинания.</target>
        </trans-unit>
        <trans-unit id="75dfdca44a05f21975d7bfe493dd698fbb1af400" translate="yes" xml:space="preserve">
          <source>Reserve space once for outgoing arguments in the function prologue rather than around each call. Generally beneficial for performance and size. Also needed for unwinding to avoid changing the stack frame around conditional code.</source>
          <target state="translated">Резервируйте место один раз для исходящих аргументов в прологе функции,а не вокруг каждого вызова.В целом полезно для производительности и размера.Также необходим для размотки,чтобы избежать изменения фрейма стека вокруг условного кода.</target>
        </trans-unit>
        <trans-unit id="7fdab2693d6cbb613b61178d94663186d04bbeb3" translate="yes" xml:space="preserve">
          <source>Restricts generation of IT blocks to conform to the rules of ARMv8-A. IT blocks can only contain a single 16-bit instruction from a select set of instructions. This option is on by default for ARMv8-A Thumb mode.</source>
          <target state="translated">Ограничивает создание блоков ИТ в соответствии с правилами ARMv8-A.IT-блоки могут содержать только одну 16-битную инструкцию из выбранного набора инструкций.Эта опция включена по умолчанию для режима ARMv8-A Thumb.</target>
        </trans-unit>
        <trans-unit id="e5415cb36e8b15e5a43bee566eb1a298ee341943" translate="yes" xml:space="preserve">
          <source>Return &amp;ldquo;short&amp;rdquo; &lt;code&gt;struct&lt;/code&gt; and &lt;code&gt;union&lt;/code&gt; values in memory like longer ones, rather than in registers. This convention is less efficient, but it has the advantage of allowing intercallability between GCC-compiled files and files compiled with other compilers, particularly the Portable C Compiler (pcc).</source>
          <target state="translated">Возвращает &amp;laquo;короткие&amp;raquo; значения &lt;code&gt;struct&lt;/code&gt; и &lt;code&gt;union&lt;/code&gt; в памяти как более длинные, а не в регистры. Это соглашение менее эффективно, но оно имеет то преимущество, что позволяет взаимодействовать между файлами, скомпилированными GCC, и файлами, скомпилированными с помощью других компиляторов, особенно Portable C Compiler (pcc).</target>
        </trans-unit>
        <trans-unit id="a50ab20cde7d366a67815b583ce3fa9e992f502c" translate="yes" xml:space="preserve">
          <source>Return 1 if &lt;var&gt;val&lt;/var&gt; is known to have the byte alignment given by &lt;var&gt;alignval&lt;/var&gt;, otherwise return 0. Note that this is different from</source>
          <target state="translated">Верните 1, если известно, что у &lt;var&gt;val&lt;/var&gt; есть выравнивание байтов, заданное &lt;var&gt;alignval&lt;/var&gt; , в противном случае верните 0. Обратите внимание, что это отличается от</target>
        </trans-unit>
        <trans-unit id="f0dd2a1246825d5d496ccaf1b983d6b8565185f3" translate="yes" xml:space="preserve">
          <source>Return 8-byte vectors in memory instead of MMX registers. This is the default on Solaris 8 and 9 and VxWorks to match the ABI of the Sun Studio compilers until version 12. Later compiler versions (starting with Studio 12 Update 1) follow the ABI used by other x86 targets, which is the default on Solaris 10 and later. &lt;em&gt;Only&lt;/em&gt; use this option if you need to remain compatible with existing code produced by those previous compiler versions or older versions of GCC.</source>
          <target state="translated">Возвращает 8-байтовые векторы в память вместо регистров MMX. Это значение по умолчанию в Solaris 8 и 9 и VxWorks, чтобы соответствовать ABI компиляторов Sun Studio до версии 12. Более поздние версии компилятора (начиная с Studio 12 Update 1) следуют ABI, используемому другими целями x86, который является значением по умолчанию в Solaris. 10 и позже. &lt;em&gt;Только&lt;/em&gt; использовать этот параметр , если необходимо сохранить совместимость с существующим кодом создаваемого этими предыдущими версиями компилятора или более ранними версиями GCC.</target>
        </trans-unit>
        <trans-unit id="c21aa754cb318c04fb0ee764bc873d27cf0f356a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;struct&lt;/code&gt; and &lt;code&gt;union&lt;/code&gt; values in registers when possible. This is more efficient for small structures than</source>
          <target state="translated">По возможности возвращайте значения &lt;code&gt;struct&lt;/code&gt; и &lt;code&gt;union&lt;/code&gt; в регистры. Это более эффективно для небольших структур, чем</target>
        </trans-unit>
        <trans-unit id="36902af805238b98afe6ec42c8fc287d8ef121a4" translate="yes" xml:space="preserve">
          <source>Return VMS condition codes from &lt;code&gt;main&lt;/code&gt;. The default is to return POSIX-style condition (e.g. error) codes.</source>
          <target state="translated">Вернуть коды состояния VMS из &lt;code&gt;main&lt;/code&gt; . По умолчанию возвращаются коды условий (например, ошибки) в стиле POSIX.</target>
        </trans-unit>
        <trans-unit id="4a959557662cc82b19295040cf9540ea2756207a" translate="yes" xml:space="preserve">
          <source>Return a nonzero value if a transaction is currently active, otherwise 0.</source>
          <target state="translated">Возвращает ненулевое значение,если транзакция в данный момент активна,в противном случае 0.</target>
        </trans-unit>
        <trans-unit id="e2b1c139ef70f0354479708d23d7002bd34b77b0" translate="yes" xml:space="preserve">
          <source>Return all structures in memory (as specified by the AIX ABI).</source>
          <target state="translated">Возвращает все структуры в памяти (как указано в AIX ABI).</target>
        </trans-unit>
        <trans-unit id="30d548f2a666f3d2dacef41428651a854ac9ec7e" translate="yes" xml:space="preserve">
          <source>Return floating-point results in ac0 (fr0 in Unix assembler syntax).</source>
          <target state="translated">Возврат результатов с плавающей точкой в ac0 (fr0 в синтаксисе ассемблера Unix).</target>
        </trans-unit>
        <trans-unit id="18c78c8de7fda3409221e2eb382dd5b60425f50a" translate="yes" xml:space="preserve">
          <source>Return floating-point results in memory. This is the default.</source>
          <target state="translated">Возврат результатов с плавающей точкой в память.По умолчанию.</target>
        </trans-unit>
        <trans-unit id="b755295260a7fdcf5823a2b1f0e58a7da66e2993" translate="yes" xml:space="preserve">
          <source>Return structures smaller than 8 bytes in registers (as specified by the SVR4 ABI).</source>
          <target state="translated">Возвращает структуры размером менее 8 байт в регистрах (как указано в SVR4 ABI).</target>
        </trans-unit>
        <trans-unit id="3d89b1dbd918009a622c075a1068bdd32199587c" translate="yes" xml:space="preserve">
          <source>Return the content of a system register which is mapped by &lt;var&gt;sr&lt;/var&gt;.</source>
          <target state="translated">Вернуть содержимое системного регистра, отображаемого &lt;var&gt;sr&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4c8c8de6a7d4547a06d2be7861947f5101a14fa7" translate="yes" xml:space="preserve">
          <source>Return the content of a user space register which is mapped by &lt;var&gt;usr&lt;/var&gt;.</source>
          <target state="translated">Вернуть содержимое регистра пользовательского пространства, отображаемого &lt;var&gt;usr&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b6ef9796498d3cf9c9b3db66db0d93d9f477244a" translate="yes" xml:space="preserve">
          <source>Return the full 64-bit value of IACC0. The &lt;var&gt;reg&lt;/var&gt; argument is reserved for future expansion and must be 0.</source>
          <target state="translated">Вернуть полное 64-битное значение IACC0. &lt;var&gt;reg&lt;/var&gt; аргумент зарезервирован для расширения в будущем и должен быть 0.</target>
        </trans-unit>
        <trans-unit id="d91fca12a5b708d6ecc723a264ae13bbf294ac10" translate="yes" xml:space="preserve">
          <source>Return the value of IACC0H if &lt;var&gt;reg&lt;/var&gt; is 0 and IACC0L if &lt;var&gt;reg&lt;/var&gt; is 1. Other values of &lt;var&gt;reg&lt;/var&gt; are rejected as invalid.</source>
          <target state="translated">Возвращает значение IACC0H, если &lt;var&gt;reg&lt;/var&gt; равно 0, и IACC0L, если &lt;var&gt;reg&lt;/var&gt; равно 1. Другие значения &lt;var&gt;reg&lt;/var&gt; отклоняются как недопустимые.</target>
        </trans-unit>
        <trans-unit id="7c3c1904eaf1f7ff88cdff376d592fd0116b430c" translate="yes" xml:space="preserve">
          <source>Return using the &lt;code&gt;deret&lt;/code&gt; instruction. Interrupt handlers that don&amp;rsquo;t have this attribute return using &lt;code&gt;eret&lt;/code&gt; instead.</source>
          <target state="translated">Возвращение с использованием &lt;code&gt;deret&lt;/code&gt; инструкции. Обработчики прерываний, у которых нет этого атрибута, вместо этого возвращают, используя &lt;code&gt;eret&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491a48cde73679c4ca1d8a8c89727d674aeaaaf5" translate="yes" xml:space="preserve">
          <source>Returning the new address in register &lt;code&gt;$31&lt;/code&gt;.</source>
          <target state="translated">Возвращение нового адреса в регистр &lt;code&gt;$31&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74c0a885f7ba9097f37e8734157c3ad725a829d5" translate="yes" xml:space="preserve">
          <source>Returns &lt;var&gt;x&lt;/var&gt; with the order of the bytes reversed; for example, &lt;code&gt;0xaabb&lt;/code&gt; becomes &lt;code&gt;0xbbaa&lt;/code&gt;. Byte here always means exactly 8 bits.</source>
          <target state="translated">Возвращает &lt;var&gt;x&lt;/var&gt; с обратным порядком байтов; например, &lt;code&gt;0xaabb&lt;/code&gt; становится &lt;code&gt;0xbbaa&lt;/code&gt; . Байт здесь всегда означает ровно 8 бит.</target>
        </trans-unit>
        <trans-unit id="0b996dc11180c5ec0a219a9ff967979bab82ce06" translate="yes" xml:space="preserve">
          <source>Returns a positive infinity, if supported by the floating-point format, else &lt;code&gt;DBL_MAX&lt;/code&gt;. This function is suitable for implementing the ISO C macro &lt;code&gt;HUGE_VAL&lt;/code&gt;.</source>
          <target state="translated">Возвращает положительную бесконечность, если поддерживается форматом с плавающей запятой, иначе &lt;code&gt;DBL_MAX&lt;/code&gt; . Эта функция подходит для реализации макроса ISO C &lt;code&gt;HUGE_VAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="444af2bf8634b26ae9a1f1a7ad3d817e427a36b4" translate="yes" xml:space="preserve">
          <source>Returns one plus the index of the least significant 1-bit of &lt;var&gt;x&lt;/var&gt;, or if &lt;var&gt;x&lt;/var&gt; is zero, returns zero.</source>
          <target state="translated">Возвращает единицу плюс индекс наименее значимого 1-битного числа &lt;var&gt;x&lt;/var&gt; или, если &lt;var&gt;x&lt;/var&gt; равен нулю, возвращает ноль.</target>
        </trans-unit>
        <trans-unit id="dd145587033c252d0c6c626afd75667794945e4a" translate="yes" xml:space="preserve">
          <source>Returns the first argument raised to the power of the second. Unlike the &lt;code&gt;pow&lt;/code&gt; function no guarantees about precision and rounding are made.</source>
          <target state="translated">Возвращает первый аргумент в степени второго. В отличие от функции &lt;code&gt;pow&lt;/code&gt; не дается никаких гарантий точности и округления.</target>
        </trans-unit>
        <trans-unit id="4894d6f1b8e22494899330d0555ad8ffa8201099" translate="yes" xml:space="preserve">
          <source>Returns the number of 1-bits in &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">Возвращает количество единиц в &lt;var&gt;x&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ce29b9b6bb07f313a52a112df90327683c6c87b7" translate="yes" xml:space="preserve">
          <source>Returns the number of leading 0-bits in &lt;var&gt;x&lt;/var&gt;, starting at the most significant bit position. If &lt;var&gt;x&lt;/var&gt; is 0, the result is undefined.</source>
          <target state="translated">Возвращает количество ведущих 0-битов в &lt;var&gt;x&lt;/var&gt; , начиная с позиции самого старшего бита. Если &lt;var&gt;x&lt;/var&gt; равен 0, результат не определен.</target>
        </trans-unit>
        <trans-unit id="bafa0131b220bae62b75cbabaa4716f183d3539a" translate="yes" xml:space="preserve">
          <source>Returns the number of leading redundant sign bits in &lt;var&gt;x&lt;/var&gt;, i.e. the number of bits following the most significant bit that are identical to it. There are no special cases for 0 or other values.</source>
          <target state="translated">Возвращает количество ведущих избыточных битов знака в &lt;var&gt;x&lt;/var&gt; , то есть количество битов, следующих за старшим значащим битом, которые идентичны ему. Нет никаких особых случаев для 0 или других значений.</target>
        </trans-unit>
        <trans-unit id="8891f7de90b5ed2a6bcf46eb0d0dd183cbf8e095" translate="yes" xml:space="preserve">
          <source>Returns the number of trailing 0-bits in &lt;var&gt;x&lt;/var&gt;, starting at the least significant bit position. If &lt;var&gt;x&lt;/var&gt; is 0, the result is undefined.</source>
          <target state="translated">Возвращает количество завершающих 0-битов в &lt;var&gt;x&lt;/var&gt; , начиная с позиции младшего разряда . Если &lt;var&gt;x&lt;/var&gt; равен 0, результат не определен.</target>
        </trans-unit>
        <trans-unit id="683aba47e0d0f99bd0b4e45d3206d9722f1a751a" translate="yes" xml:space="preserve">
          <source>Returns the openacc gang, worker or vector id depending on whether &lt;var&gt;x&lt;/var&gt; is 0, 1 or 2.</source>
          <target state="translated">Возвращает группу openacc, идентификатор рабочего или вектора в зависимости от того, равен ли &lt;var&gt;x&lt;/var&gt; 0, 1 или 2.</target>
        </trans-unit>
        <trans-unit id="b954a6b3f64ab16c6a6435467af5731684d67694" translate="yes" xml:space="preserve">
          <source>Returns the openacc gang, worker or vector size depending on whether &lt;var&gt;x&lt;/var&gt; is 0, 1 or 2.</source>
          <target state="translated">Возвращает группу openacc, размер воркера или вектора в зависимости от того, равно ли &lt;var&gt;x&lt;/var&gt; 0, 1 или 2.</target>
        </trans-unit>
        <trans-unit id="ce96cb4941a37e756412838ec82f95aa7bf28c53" translate="yes" xml:space="preserve">
          <source>Returns the parity of &lt;var&gt;x&lt;/var&gt;, i.e. the number of 1-bits in &lt;var&gt;x&lt;/var&gt; modulo 2.</source>
          <target state="translated">Возвращает четность &lt;var&gt;x&lt;/var&gt; , то есть количество 1-битов в &lt;var&gt;x&lt;/var&gt; по модулю 2.</target>
        </trans-unit>
        <trans-unit id="db0ab2a04434d84e5f96198ad75f2283577abc26" translate="yes" xml:space="preserve">
          <source>Returns the size of an object pointed to by &lt;var&gt;ptr&lt;/var&gt;. See &lt;a href=&quot;object-size-checking#Object-Size-Checking&quot;&gt;Object Size Checking&lt;/a&gt;, for a detailed description of the function.</source>
          <target state="translated">Возвращает размер объекта, на который указывает &lt;var&gt;ptr&lt;/var&gt; . См. &amp;laquo; &lt;a href=&quot;object-size-checking#Object-Size-Checking&quot;&gt;Проверка размера объекта&amp;raquo;&lt;/a&gt; для подробного описания функции.</target>
        </trans-unit>
        <trans-unit id="68a547fa5de03ac85628195326b7b381d300173e" translate="yes" xml:space="preserve">
          <source>Returns the value that is currently set in the &amp;lsquo;</source>
          <target state="translated">Возвращает значение, которое в настоящее время установлено в '</target>
        </trans-unit>
        <trans-unit id="662ea5f2d376e017455cb3f3b25cf7d3dcc098a2" translate="yes" xml:space="preserve">
          <source>Revision 2 of the ASE was introduced in the second half of 2006. This revision adds extra instructions to the original ASE, but is otherwise backwards-compatible with it. You can select revision 2 using the command-line option</source>
          <target state="translated">Вторая редакция ASE была введена во второй половине 2006 года.Эта ревизия добавляет дополнительные инструкции к первоначальному ASE,но в остальном она обратно совместима с ним.Вы можете выбрать ревизию 2,используя опцию командной строки.</target>
        </trans-unit>
        <trans-unit id="0f30b33f89f9ca36be8f698bd38e6d3998be756f" translate="yes" xml:space="preserve">
          <source>Rewrite the profile after removing a subset of the gcda files, while maintaining the consistency of the summary and the histogram.</source>
          <target state="translated">Перезапись профиля после удаления подмножества gcda-файлов,сохраняя при этом согласованность сводки и гистограммы.</target>
        </trans-unit>
        <trans-unit id="2fe16a196b9fb96bcf22656d266c0859479e525c" translate="yes" xml:space="preserve">
          <source>Right-shift of -1, i.e., a bit mask with a trailing block of ones, the rest being zeroes. Or to put it another way, one less than a power of two. Can only match when the</source>
          <target state="translated">Правое смещение -1,т.е.битовая маска с трейлинговым блоком из единицы,остальное-нули.Или,другими словами,на один меньше,чем на два.Может совпадать только тогда,когда</target>
        </trans-unit>
        <trans-unit id="e687f82379bd394253bac71b24072104b029d942" translate="yes" xml:space="preserve">
          <source>Round towards minus infinity.</source>
          <target state="translated">Круглый к минус бесконечности.</target>
        </trans-unit>
        <trans-unit id="1c3cd028b5f1e6b0edc653ec95977523018f750c" translate="yes" xml:space="preserve">
          <source>Run a pass to pack branches into VLIW instructions (default).</source>
          <target state="translated">Выполните переход к упаковке веток в инструкции VLIW (по умолчанию).</target>
        </trans-unit>
        <trans-unit id="9411013c77a06e01966ed1ee47bcab5ff91c1389" translate="yes" xml:space="preserve">
          <source>Run the program on a representative workload to generate the arc profile information. This may be repeated any number of times. You can run concurrent instances of your program, and provided that the file system supports locking, the data files will be correctly updated. Unless a strict ISO C dialect option is in effect, &lt;code&gt;fork&lt;/code&gt; calls are detected and correctly handled without double counting.</source>
          <target state="translated">Запустите программу на типичной рабочей нагрузке, чтобы сгенерировать информацию о профиле дуги. Это можно повторять любое количество раз. Вы можете запускать параллельные экземпляры своей программы, и при условии, что файловая система поддерживает блокировку, файлы данных будут правильно обновляться. Если не действует строгий диалект ISO C, вызовы &lt;code&gt;fork&lt;/code&gt; обнаруживаются и правильно обрабатываются без двойного подсчета.</target>
        </trans-unit>
        <trans-unit id="750febd8962214edbdb1e987e070e09b26bed006" translate="yes" xml:space="preserve">
          <source>Run variable tracking pass. It computes where variables are stored at each position in code. Better debugging information is then generated (if the debugging information format supports this information).</source>
          <target state="translated">Запустите переменный проход отслеживания.Вычисляет,где хранятся переменные на каждой позиции в коде.Затем генерируется более качественная отладочная информация (если формат отладочной информации поддерживает эту информацию).</target>
        </trans-unit>
        <trans-unit id="02a6d5433704778d27c91a559d1a246126ca2b03" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;gcov&lt;/code&gt; with your program&amp;rsquo;s source file names as arguments will now produce a listing of the code along with frequency of execution for each line. For example, if your program is called</source>
          <target state="translated">Запуск &lt;code&gt;gcov&lt;/code&gt; с именами исходных файлов вашей программы в качестве аргументов теперь приведет к появлению списка кода вместе с частотой выполнения для каждой строки. Например, если ваша программа называется</target>
        </trans-unit>
        <trans-unit id="6f72aac6d9b0821f24cd11653e9e1ea61d3b8eda" translate="yes" xml:space="preserve">
          <source>Running the program will cause profile output to be generated. For each source file compiled with</source>
          <target state="translated">При запуске программы будет сгенерирован вывод профиля.Для каждого исходного файла,скомпилированного с</target>
        </trans-unit>
        <trans-unit id="c8eb0737c3e070d91c82da44ad778a26941751ad" translate="yes" xml:space="preserve">
          <source>S/390 and zSeries&amp;mdash;</source>
          <target state="translated">S / 390 и zSeries&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="0a939f740002d6325878635a4ecb4eff29305501" translate="yes" xml:space="preserve">
          <source>SGPR register</source>
          <target state="translated">SGPR-регистр</target>
        </trans-unit>
        <trans-unit id="52fb4091ed310353e09517862a36800ca2c86150" translate="yes" xml:space="preserve">
          <source>SGPR registers valid as a source for scalar memory instructions (excludes M0 and EXEC)</source>
          <target state="translated">Регистры SGPR действительны как источник для скалярных инструкций памяти (исключая M0 и EXEC).</target>
        </trans-unit>
        <trans-unit id="650aa12551cfc9241e1cd5e644660f68d55f375f" translate="yes" xml:space="preserve">
          <source>SGPR registers valid as a source or destination for vector instructions (excludes EXEC)</source>
          <target state="translated">Регистры SGPR действительны как источник или пункт назначения для векторных инструкций (исключая EXEC)</target>
        </trans-unit>
        <trans-unit id="e7dc62b437b8a1360c1151acc32ef2d34c838e11" translate="yes" xml:space="preserve">
          <source>SGPR registers valid for instruction destinations, including VCC, M0 and EXEC</source>
          <target state="translated">Регистры SGPR действительны для пунктов назначения команд,включая VCC,M0 и EXEC.</target>
        </trans-unit>
        <trans-unit id="06d98e22c3590a0e22d3bfe590a8875bfcf62f6b" translate="yes" xml:space="preserve">
          <source>SGPR registers valid for instruction sources, including VCC, M0, EXEC and SCC</source>
          <target state="translated">Регистры SGPR,действительные для источников команд,включая VCC,M0,EXEC и SCC.</target>
        </trans-unit>
        <trans-unit id="c6b62b4cc9ebcf08c9d4f483e4f102a627e7a387" translate="yes" xml:space="preserve">
          <source>SGR substring for deleted lines within generated patches.</source>
          <target state="translated">SGR подстрока для удаленных строк в сгенерированных патчах.</target>
        </trans-unit>
        <trans-unit id="4233963b1da8186d90f6982e524e354494399405" translate="yes" xml:space="preserve">
          <source>SGR substring for error: markers.</source>
          <target state="translated">SGR подстрока для ошибки:маркеры.</target>
        </trans-unit>
        <trans-unit id="f0f2ece3f5afef3a96618fb40d9e516c0938cd83" translate="yes" xml:space="preserve">
          <source>SGR substring for filename headers within generated patches.</source>
          <target state="translated">SGR подстрока для заголовков имен файлов в генерируемых патчах.</target>
        </trans-unit>
        <trans-unit id="ef3de6666e18bb1d0075a653fd3207878cc7a23b" translate="yes" xml:space="preserve">
          <source>SGR substring for first additional range.</source>
          <target state="translated">SGR субстратизация для первого дополнительного диапазона.</target>
        </trans-unit>
        <trans-unit id="4047e51ab31499ea74aa0557270ff12e007c7adc" translate="yes" xml:space="preserve">
          <source>SGR substring for fix-it hints suggesting text to be deleted.</source>
          <target state="translated">SGR подстрока для подсказок fix-it,предлагающих удалить текст.</target>
        </trans-unit>
        <trans-unit id="26c66a34977746cd4a9a18d107d2484d6baf05b6" translate="yes" xml:space="preserve">
          <source>SGR substring for fix-it hints suggesting text to be inserted or replaced.</source>
          <target state="translated">Подстрока SGR для подсказок fix-it,предлагающая вставить или заменить текст.</target>
        </trans-unit>
        <trans-unit id="a9e49a359d82dca9087414389ea6203f7d97c096" translate="yes" xml:space="preserve">
          <source>SGR substring for highlighting mismatching types within template arguments in the C++ frontend.</source>
          <target state="translated">SGR подстрока для подсветки несовпадающих типов в аргументах шаблонов во фронтенде C++.</target>
        </trans-unit>
        <trans-unit id="c2c54171666812e81afa463446e8b8c7bf07a44f" translate="yes" xml:space="preserve">
          <source>SGR substring for information printed within quotes.</source>
          <target state="translated">SGR подстрока для информации,распечатанной в кавычках.</target>
        </trans-unit>
        <trans-unit id="21ec7b29e8556fe0733397c42965d397a384f312" translate="yes" xml:space="preserve">
          <source>SGR substring for inserted lines within generated patches.</source>
          <target state="translated">SGR подстрока для вставленных строк в генерируемых патчах.</target>
        </trans-unit>
        <trans-unit id="631ff44ce6295a577998e0d45d27d8697542d130" translate="yes" xml:space="preserve">
          <source>SGR substring for location information, &amp;lsquo;</source>
          <target state="translated">Подстрока SGR для информации о местоположении, '</target>
        </trans-unit>
        <trans-unit id="13b8b196547b7c911a6008681f44695559ee3d8a" translate="yes" xml:space="preserve">
          <source>SGR substring for note: markers.</source>
          <target state="translated">SGR подстрока для примечаний:маркеры.</target>
        </trans-unit>
        <trans-unit id="3c69ac2294e9dd81357177aa53e734578849f1b7" translate="yes" xml:space="preserve">
          <source>SGR substring for second additional range.</source>
          <target state="translated">SGR субстратизация для второго дополнительного диапазона.</target>
        </trans-unit>
        <trans-unit id="0836e70b794378ba99fbdf640887a055c2507059" translate="yes" xml:space="preserve">
          <source>SGR substring for the starts of hunks within generated patches.</source>
          <target state="translated">SGR субстратизация для запуска ханков в сгенерированных патчах.</target>
        </trans-unit>
        <trans-unit id="2ce0ddcf3a9872af855e6e18893f63c26237ec2f" translate="yes" xml:space="preserve">
          <source>SGR substring for warning: markers.</source>
          <target state="translated">SGR подстрока для предупреждения:маркеры.</target>
        </trans-unit>
        <trans-unit id="4ef460c02c4bda0400a9d02a2e56bc8688eea615" translate="yes" xml:space="preserve">
          <source>SIMD builtins provided by the compiler can be used to generate the vector instructions. This section describes the available builtins and their usage in programs. With the</source>
          <target state="translated">Для генерации векторных инструкций можно использовать SIMD-строки,предоставляемые компилятором.В данном разделе описаны доступные сборки и их использование в программах.С помощью</target>
        </trans-unit>
        <trans-unit id="ae4985ac14b1eabd45a1c1fcc429ea9f7090e85d" translate="yes" xml:space="preserve">
          <source>SIMD vector types declared using &lt;code&gt;__attribute ((vector_size))&lt;/code&gt; were mangled in a non-standard way that does not allow for overloading of functions taking vectors of different sizes.</source>
          <target state="translated">Типы векторов SIMD, объявленные с использованием &lt;code&gt;__attribute ((vector_size))&lt;/code&gt; , были искажены нестандартным способом, который не позволяет перегрузить функции, принимающие векторы разных размеров.</target>
        </trans-unit>
        <trans-unit id="256c9f9a067e633db18da0ec81de7b585e074898" translate="yes" xml:space="preserve">
          <source>SIZE_MAX</source>
          <target state="translated">SIZE_MAX</target>
        </trans-unit>
        <trans-unit id="0c1688b370e73b8fab30795615287ddf0ee92cde" translate="yes" xml:space="preserve">
          <source>SPARC&amp;mdash;</source>
          <target state="translated">SPARC&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="4c33d2e33886a24479b8c7ca85ded7473e3a114a" translate="yes" xml:space="preserve">
          <source>SPU&amp;mdash;</source>
          <target state="translated">SPU&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="d5ef57a9b4e24298fd79d6a4c241fc751bc397dc" translate="yes" xml:space="preserve">
          <source>SSE constant zero operand.</source>
          <target state="translated">SSE постоянная нулевой операнд.</target>
        </trans-unit>
        <trans-unit id="6b6185655c0d6d39e8477b7cf295bc855e8520de" translate="yes" xml:space="preserve">
          <source>SSE instructions.</source>
          <target state="translated">Инструкции SSE.</target>
        </trans-unit>
        <trans-unit id="ad670c94b7871773b33360abf956fb366993570e" translate="yes" xml:space="preserve">
          <source>SSE2 instructions.</source>
          <target state="translated">инструкции SSE2.</target>
        </trans-unit>
        <trans-unit id="2369317c8b51e3b18170998e24ffa71aa0b8a0d0" translate="yes" xml:space="preserve">
          <source>SSE3 instructions.</source>
          <target state="translated">SSE3 инструкции.</target>
        </trans-unit>
        <trans-unit id="52027268fb40ad079dd27f174909bf61fa52b68f" translate="yes" xml:space="preserve">
          <source>SSE4.1 instructions.</source>
          <target state="translated">SSE4.1 инструкции.</target>
        </trans-unit>
        <trans-unit id="1220ef87db9d2afe63d2dbbebe7cc117f311cd6d" translate="yes" xml:space="preserve">
          <source>SSE4.2 instructions.</source>
          <target state="translated">SSE4.2 инструкции.</target>
        </trans-unit>
        <trans-unit id="14c8a208e6acf4297b13ae5c14762fb6cb87c9a5" translate="yes" xml:space="preserve">
          <source>SSE4A instructions.</source>
          <target state="translated">инструкции SSE4A.</target>
        </trans-unit>
        <trans-unit id="a824cf2031e7a9f24844581ed281a20b09b219a7" translate="yes" xml:space="preserve">
          <source>SSSE3 instructions.</source>
          <target state="translated">инструкции SSSE3.</target>
        </trans-unit>
        <trans-unit id="75f02b7e3264b6af278eeb7499231b0a15daefdb" translate="yes" xml:space="preserve">
          <source>STVX</source>
          <target state="translated">STVX</target>
        </trans-unit>
        <trans-unit id="f54d3d8da212d77cf012ec70b98f091e4df6592b" translate="yes" xml:space="preserve">
          <source>STXVD2X</source>
          <target state="translated">STXVD2X</target>
        </trans-unit>
        <trans-unit id="464ed831ffed8bdfd8130295a2edb2d9e9578400" translate="yes" xml:space="preserve">
          <source>STXVW4X</source>
          <target state="translated">STXVW4X</target>
        </trans-unit>
        <trans-unit id="b0dabbf327525cacc4497069188029fd059e7389" translate="yes" xml:space="preserve">
          <source>Safely accessing C data and calling functions from basic &lt;code&gt;asm&lt;/code&gt; is more complex than it may appear. To access C data, it is better to use extended &lt;code&gt;asm&lt;/code&gt;.</source>
          <target state="translated">Безопасный доступ к данным C и вызов функций из базового &lt;code&gt;asm&lt;/code&gt; сложнее, чем может показаться. Для доступа к данным C лучше использовать расширенный &lt;code&gt;asm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e1a6674d38590faffffeb4695d9d452b5339baa" translate="yes" xml:space="preserve">
          <source>Same as</source>
          <target state="translated">Как и</target>
        </trans-unit>
        <trans-unit id="69d40738c15585e5ece8390b1d9dcc4417cde63d" translate="yes" xml:space="preserve">
          <source>Same as &amp;lsquo;</source>
          <target state="translated">Такой же как '</target>
        </trans-unit>
        <trans-unit id="a79ab980d305db447bee9c479d0843b84bd7f8c7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;__builtin_tbegin&lt;/code&gt; but without FPR saves and restores. Using this variant in code making use of FPRs will leave the FPRs in undefined state when entering the transaction abort handler code.</source>
          <target state="translated">То же, что &lt;code&gt;__builtin_tbegin&lt;/code&gt; , но без сохранения и восстановления FPR. Использование этого варианта в коде, использующем FPR, оставит FPR в неопределенном состоянии при вводе кода обработчика прерывания транзакции.</target>
        </trans-unit>
        <trans-unit id="4de3c96aaa50bbcebfe6c154f9425492819e4fda" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;__builtin_tbegin_retry&lt;/code&gt; but without FPR saves and restores. Using this variant in code making use of FPRs will leave the FPRs in undefined state when entering the transaction abort handler code.</source>
          <target state="translated">То же, что и &lt;code&gt;__builtin_tbegin_retry&lt;/code&gt; , но без сохранения и восстановления FPR. Использование этого варианта в коде, использующем FPR, оставит FPR в неопределенном состоянии при вводе кода обработчика прерывания транзакции.</target>
        </trans-unit>
        <trans-unit id="aac99bb488266e0b7b7ade351899535fdea6eef8" translate="yes" xml:space="preserve">
          <source>Sanitize global variables in selected user-defined sections. &lt;var&gt;si&lt;/var&gt; may contain wildcards.</source>
          <target state="translated">Очистить глобальные переменные в выбранных пользовательских разделах. &lt;var&gt;si&lt;/var&gt; может содержать подстановочные знаки.</target>
        </trans-unit>
        <trans-unit id="9384413dcf3a99a56f6d5fb6ddd74fec9e18520d" translate="yes" xml:space="preserve">
          <source>Saturating addition. Return the result of adding &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, storing the value 32767 if the result overflows.</source>
          <target state="translated">Насыщающее дополнение. Вернуть результат сложения &lt;var&gt;x&lt;/var&gt; и &lt;var&gt;y&lt;/var&gt; , сохранив значение 32767, если результат переполнится.</target>
        </trans-unit>
        <trans-unit id="504215725299cdd825dda25f0c85b38e0bd4d51e" translate="yes" xml:space="preserve">
          <source>Saturating subtraction. Return the result of subtracting &lt;var&gt;y&lt;/var&gt; from &lt;var&gt;x&lt;/var&gt;, storing the value -32768 if the result overflows.</source>
          <target state="translated">Насыщающее вычитание. Верните результат вычитания &lt;var&gt;y&lt;/var&gt; из &lt;var&gt;x&lt;/var&gt; , сохранив значение -32768, если результат переполнится.</target>
        </trans-unit>
        <trans-unit id="20ad33acfaabe4d68a4482f6776dcaa2a9be1f91" translate="yes" xml:space="preserve">
          <source>Says that .ZZ files are, in fact, C++ source files.</source>
          <target state="translated">Говорит,что файлы .ZZ на самом деле являются исходными файлами C++.</target>
        </trans-unit>
        <trans-unit id="b29493698792fa428aa92855b6cf7ad4a0f77c71" translate="yes" xml:space="preserve">
          <source>Says to make debugging dumps during compilation as specified by &lt;var&gt;letters&lt;/var&gt;. The flags documented here are those relevant to the preprocessor. Other &lt;var&gt;letters&lt;/var&gt; are interpreted by the compiler proper, or reserved for future versions of GCC, and so are silently ignored. If you specify &lt;var&gt;letters&lt;/var&gt; whose behavior conflicts, the result is undefined. See &lt;a href=&quot;developer-options#Developer-Options&quot;&gt;Developer Options&lt;/a&gt;, for more information.</source>
          <target state="translated">Говорит делать отладочные дампы во время компиляции, как указано &lt;var&gt;letters&lt;/var&gt; . Задокументированные здесь флаги относятся к препроцессору. Остальные &lt;var&gt;letters&lt;/var&gt; интерпретируются компилятором или зарезервированы для будущих версий GCC, и поэтому игнорируются. Если указать &lt;var&gt;letters&lt;/var&gt; , поведение которых противоречит, результат не определен. См. Дополнительные сведения в разделе &amp;laquo; &lt;a href=&quot;developer-options#Developer-Options&quot;&gt;Параметры разработчика&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4060536ee75ab5287f71dfb97d864d7f22d2ca94" translate="yes" xml:space="preserve">
          <source>Says to make debugging dumps during compilation at times specified by &lt;var&gt;letters&lt;/var&gt;. This is used for debugging the RTL-based passes of the compiler.</source>
          <target state="translated">Говорит делать отладочные дампы во время компиляции в моменты времени указанные &lt;var&gt;letters&lt;/var&gt; . Это используется для отладки проходов компилятора на основе RTL.</target>
        </trans-unit>
        <trans-unit id="d4f20ee224e1157c9c2cb4923edd8e603ca68078" translate="yes" xml:space="preserve">
          <source>Scalar condition register: SCC</source>
          <target state="translated">Регистр состояния Скаляра:SCC</target>
        </trans-unit>
        <trans-unit id="112620d6eb072a0c362e896824493987aba20f3a" translate="yes" xml:space="preserve">
          <source>Scale factor to apply to the number of blocks in a threading path when comparing to the number of (scaled) statements.</source>
          <target state="translated">Масштабный коэффициент для применения к количеству блоков в потоковом пути при сравнении с количеством (масштабированных)операторов.</target>
        </trans-unit>
        <trans-unit id="95dbc5e98d074c513e988faebfbccb22e09ae395" translate="yes" xml:space="preserve">
          <source>Scale factor to apply to the number of statements in a threading path when comparing to the number of (scaled) blocks.</source>
          <target state="translated">Масштабный коэффициент для применения к количеству операторов в потоковом пути при сравнении с количеством (масштабированных)блоков.</target>
        </trans-unit>
        <trans-unit id="86cf479673ca3b066e5d67cd80cb00f46a9ad376" translate="yes" xml:space="preserve">
          <source>Scale the profile counters. The specified value can be in floating point value, or simple fraction value form, such 1, 2, 2/3, and 5/3.</source>
          <target state="translated">Масштабируйте счетчики профиля.Указанное значение может быть в форме с плавающей точкой или в форме простой дроби,например,1,2,2/3 и 5/3.</target>
        </trans-unit>
        <trans-unit id="ff4952674116ca1ef68e6dc524bc6fd65b2aa9ad" translate="yes" xml:space="preserve">
          <source>Scaling factor in calculation of maximum distance an expression can be moved by GCSE optimizations. This is currently supported only in the code hoisting pass. The bigger the ratio, the more aggressive code hoisting is with simple expressions, i.e., the expressions that have cost less than</source>
          <target state="translated">Масштабный коэффициент при вычислении максимального расстояния выражение может быть перемещено с помощью GCSE-оптимизаций.В настоящее время это поддерживается только в передаче кода на подъем.Чем больше коэффициент,тем более агрессивный подъем кода происходит при использовании простых выражений,т.е.выражений,которые стоят меньше,чем</target>
        </trans-unit>
        <trans-unit id="532227f59708576e594e220bb0a8588203d0536c" translate="yes" xml:space="preserve">
          <source>Schedule code according to the constraints for the machine type &lt;var&gt;cpu-type&lt;/var&gt;. The choices for &lt;var&gt;cpu-type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Запланируйте код в соответствии с ограничениями для типа компьютера &lt;var&gt;cpu-type&lt;/var&gt; . Варианты &lt;var&gt;cpu-type&lt;/var&gt; : '</target>
        </trans-unit>
        <trans-unit id="512110c2a7a87680ea125d2d5070dd617326491f" translate="yes" xml:space="preserve">
          <source>Schedule instructions using selective scheduling algorithm. Selective scheduling runs instead of the first scheduler pass.</source>
          <target state="translated">Запланируйте инструкции с использованием селективного алгоритма планирования.Выборочное планирование выполняется вместо первого прохода планировщика.</target>
        </trans-unit>
        <trans-unit id="a8bc58f0865e7ffaa1277982a9a30e1e6328ca0f" translate="yes" xml:space="preserve">
          <source>Schedule instructions using selective scheduling algorithm. Selective scheduling runs instead of the second scheduler pass.</source>
          <target state="translated">Запланируйте инструкции с использованием селективного алгоритма планирования.Выборочное планирование выполняется вместо второго прохода планировщика.</target>
        </trans-unit>
        <trans-unit id="b5c9dbe52234ab7adfb9709d744b3335541af679" translate="yes" xml:space="preserve">
          <source>Schedule type of omp schedule for loops parallelized by parloops (static, dynamic, guided, auto, runtime).</source>
          <target state="translated">Тип расписания ОМП для циклов,распараллеленных парлопами (статический,динамический,управляемый,автоматический,время выполнения).</target>
        </trans-unit>
        <trans-unit id="090706d50c1a9631674ea954b72f473248174f5c" translate="yes" xml:space="preserve">
          <source>Schedules as an EV4 and has no instruction set extensions.</source>
          <target state="translated">Планируется как EV4 и не имеет расширений набора инструкций.</target>
        </trans-unit>
        <trans-unit id="e3bebf86216646d883305006d7a92a77b0a80860" translate="yes" xml:space="preserve">
          <source>Schedules as an EV5 and has no instruction set extensions.</source>
          <target state="translated">Планируется как EV5 и не имеет расширений набора инструкций.</target>
        </trans-unit>
        <trans-unit id="01ff3c69f7080eed625112079f8743f5f048b2bc" translate="yes" xml:space="preserve">
          <source>Schedules as an EV5 and supports the BWX and MAX extensions.</source>
          <target state="translated">Планируется как EV5 и поддерживает расширения BWX и MAX.</target>
        </trans-unit>
        <trans-unit id="b44df77a439d014c7e3b18a60c36ae6be23b8bed" translate="yes" xml:space="preserve">
          <source>Schedules as an EV5 and supports the BWX extension.</source>
          <target state="translated">Планируется как EV5 и поддерживает расширение BWX.</target>
        </trans-unit>
        <trans-unit id="d98e18423f9732958ffea0c6bd4bd7f9f1294627" translate="yes" xml:space="preserve">
          <source>Schedules as an EV6 and supports the BWX, CIX, FIX, and MAX extensions.</source>
          <target state="translated">Планируется как EV6 и поддерживает расширения BWX,CIX,FIX и MAX.</target>
        </trans-unit>
        <trans-unit id="bbf50f85903256e541bbf3311b99e71d3918fbbc" translate="yes" xml:space="preserve">
          <source>Schedules as an EV6 and supports the BWX, FIX, and MAX extensions.</source>
          <target state="translated">Планируется как EV6 и поддерживает расширения BWX,FIX и MAX.</target>
        </trans-unit>
        <trans-unit id="2933ec5911ccb0e4b7c1d0f9419a5e7a7d360e81" translate="yes" xml:space="preserve">
          <source>Scoped enumerators passed as arguments to a variadic function are promoted like unscoped enumerators, causing &lt;code&gt;va_arg&lt;/code&gt; to complain. On most targets this does not actually affect the parameter passing ABI, as there is no way to pass an argument smaller than &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">Перечислители с заданной областью, переданные в качестве аргументов функции с переменным числом аргументов, продвигаются как перечислители без области действия, что вызывает жалобу &lt;code&gt;va_arg&lt;/code&gt; . На большинстве целей это фактически не влияет на передачу параметра ABI, так как нет возможности передать аргумент меньше &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="178b5f6bb9943f6de74ed00010972a24a7bb5622" translate="yes" xml:space="preserve">
          <source>Search for &lt;var&gt;file&lt;/var&gt; and insert its text at the current point in the specs file.</source>
          <target state="translated">Найдите &lt;var&gt;file&lt;/var&gt; и вставьте его текст в текущую точку в файле спецификаций.</target>
        </trans-unit>
        <trans-unit id="ba898c1a0a41a81bab594f983313300f956e596d" translate="yes" xml:space="preserve">
          <source>Search the directories &lt;var&gt;dirs&lt;/var&gt;, and no others, for libraries specified with</source>
          <target state="translated">Искать в каталогах &lt;var&gt;dirs&lt;/var&gt; , и никакие другие, библиотеки, указанные с помощью</target>
        </trans-unit>
        <trans-unit id="240544ba3059ddd6fa51173abfa71bc79edad6e6" translate="yes" xml:space="preserve">
          <source>Search the library named &lt;var&gt;library&lt;/var&gt; when linking. (The second alternative with the library as a separate argument is only for POSIX compliance and is not recommended.)</source>
          <target state="translated">При компоновке ищите библиотеку с именем &lt;var&gt;library&lt;/var&gt; . (Вторая альтернатива с библиотекой в ​​качестве отдельного аргумента предназначена только для соответствия POSIX и не рекомендуется.)</target>
        </trans-unit>
        <trans-unit id="2f6637081eaeba40dac20edac8983d65e9c687dd" translate="yes" xml:space="preserve">
          <source>Second from top of 80387 floating-point stack (&lt;code&gt;%st(1)&lt;/code&gt;).</source>
          <target state="translated">Второй сверху стека с плавающей запятой 80387 ( &lt;code&gt;%st(1)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f2a9e9979a3fe235f6129e47257fa2f36d503ac5" translate="yes" xml:space="preserve">
          <source>Second, the argument is passed to the function using the calling conventions of the first member of the transparent union, not the calling conventions of the union itself. All members of the union must have the same machine representation; this is necessary for this argument passing to work properly.</source>
          <target state="translated">Во-вторых,аргумент передается в функцию с использованием вызывающих конвенций первого члена прозрачного профсоюза,а не вызывающих конвенций самого профсоюза.Все члены профсоюза должны иметь одинаковое машинное представительство;это необходимо для правильной передачи аргумента.</target>
        </trans-unit>
        <trans-unit id="ea3456e6bd81cdabf3c368be0bfbf5a7261e636e" translate="yes" xml:space="preserve">
          <source>Second, when the type of an anonymous field is a &lt;code&gt;typedef&lt;/code&gt; for a &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt;, code may refer to the field using the name of the &lt;code&gt;typedef&lt;/code&gt;.</source>
          <target state="translated">Во-вторых, когда тип анонимного поля является &lt;code&gt;typedef&lt;/code&gt; для &lt;code&gt;struct&lt;/code&gt; или &lt;code&gt;union&lt;/code&gt; , код может ссылаться на поле, используя имя &lt;code&gt;typedef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4677b56029d2d5a1454e15af8e873ba7843c108" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;arm-options#ARM-Options&quot;&gt;ARM Options&lt;/a&gt; and &lt;a href=&quot;aarch64-options#AArch64-Options&quot;&gt;AArch64 Options&lt;/a&gt; for more information on the availability of extensions.</source>
          <target state="translated">См &lt;a href=&quot;arm-options#ARM-Options&quot;&gt;Параметры ARM&lt;/a&gt; и &lt;a href=&quot;aarch64-options#AArch64-Options&quot;&gt;Параметры AArch64&lt;/a&gt; для получения более подробной информации о наличии расширений.</target>
        </trans-unit>
        <trans-unit id="a3ed7b770e23a9147c81b72b94f04738551cd044" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assembler-options#Assembler-Options&quot;&gt;Passing Options to the Assembler&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;assembler-options#Assembler-Options&quot;&gt;Передача параметров ассемблеру&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fa624e4b9bdd50f27ab9969ddbd05fadec90527" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes.</source>
          <target state="translated">См. В разделе &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Синтаксис атрибутов&lt;/a&gt; подробную информацию о точном синтаксисе использования атрибутов.</target>
        </trans-unit>
        <trans-unit id="e7798844f22a2c2e6d35571a21bc9b88a41e9976" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="translated">См &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Функции контроллинга C Диалектом&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b629b8d91d57fd123b970633646d0ea0d91cd217" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;.</source>
          <target state="translated">См. Раздел &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Параметры, управляющие диалектом C ++&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9f7ae4d625bd6f1865541dd19d916bd7384014" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;c_002b_002b-interface#C_002b_002b-Interface&quot;&gt;Declarations and Definitions in One Header&lt;/a&gt;, for another way to control placement of these constructs.</source>
          <target state="translated">См. &amp;laquo; &lt;a href=&quot;c_002b_002b-interface#C_002b_002b-Interface&quot;&gt;Объявления и определения в одном заголовке&amp;raquo;&lt;/a&gt; , чтобы узнать о другом способе управления размещением этих конструкций.</target>
        </trans-unit>
        <trans-unit id="f65573cc9b99e9cba7846f00d5e0e8a7a8e51df7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;Options for Code Generation Conventions&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;Параметры для соглашений о создании кода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2c2c26650fff8c74769de012a123d508e5fd307" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;Options for Debugging Your Program&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;debugging-options#Debugging-Options&quot;&gt;Параметры для отладки вашей программы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed60c5c11a89d5b8997565970e20adef9aae6e73" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;developer-options#Developer-Options&quot;&gt;GCC Developer Options&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;developer-options#Developer-Options&quot;&gt;Параметры разработчика GCC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="068f02a10a991b8dd4c9c4d4f1176aa1f6736565" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;diagnostic-message-formatting-options#Diagnostic-Message-Formatting-Options&quot;&gt;Options to Control Diagnostic Messages Formatting&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;diagnostic-message-formatting-options#Diagnostic-Message-Formatting-Options&quot;&gt;Параметры управления форматированием диагностических сообщений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="980f2aedfa176760da97d08ae0c35c00555524bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;Options for Directory Search&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;Параметры поиска в каталоге&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7df942c5c9bf184f3f2a89ce21ae90ce25b87ab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;, for details of the semantics of attributes applying to functions. See &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;, for details of the semantics of attributes applying to variables. See &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;, for details of the semantics of attributes applying to structure, union and enumerated types. See &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;, for details of the semantics of attributes applying to labels. See &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;, for details of the semantics of attributes applying to enumerators. See &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;, for details of the semantics of attributes applying to statements.</source>
          <target state="translated">См. &amp;laquo; &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Атрибуты функций&amp;raquo;&lt;/a&gt; для получения подробной информации о семантике атрибутов, применяемых к функциям. См. &amp;laquo; &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Атрибуты переменных&amp;raquo;&lt;/a&gt; для получения подробной информации о семантике атрибутов, применяемых к переменным. См. В разделе &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Атрибуты типа&lt;/a&gt; подробные сведения о семантике атрибутов, применяемых к типам структуры, объединения и перечисления. См. &amp;laquo; &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Атрибуты метки&amp;raquo;&lt;/a&gt; для получения подробной информации о семантике атрибутов, применяемых к меткам. См. В разделе &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Атрибуты перечислителя&lt;/a&gt; подробную информацию о семантике атрибутов, применяемых к перечислителям. См. &amp;laquo; &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Атрибуты&lt;/a&gt; оператора&amp;raquo; для получения подробной информации о семантике атрибутов, применяемых к операторам.</target>
        </trans-unit>
        <trans-unit id="01ea811dd42662016230f114720fe01339ff4419" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;function-multiversioning#Function-Multiversioning&quot;&gt;Function Multiversioning&lt;/a&gt;, where it is used to specify the default function version.</source>
          <target state="translated">См. Раздел &amp;laquo; &lt;a href=&quot;function-multiversioning#Function-Multiversioning&quot;&gt;Многоверсия функций&amp;raquo;&lt;/a&gt; , где он используется для указания версии функции по умолчанию.</target>
        </trans-unit>
        <trans-unit id="148b71982b9647e6d6ecafa6882d1190f5b5569f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;Implementation-defined behavior&lt;/a&gt; in The C Preprocessor, for details of these aspects of implementation-defined behavior.</source>
          <target state="translated">См. Описание &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;поведения, определяемого реализацией&lt;/a&gt; в Препроцессоре C, для получения подробной информации об этих аспектах поведения, определяемого реализацией.</target>
        </trans-unit>
        <trans-unit id="18443493189256836930c6a050f4842f9c78519f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;Implementation-defined behavior&lt;/a&gt; in The C Preprocessor.</source>
          <target state="translated">См. Описание &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;поведения, определенного реализацией&lt;/a&gt; в Препроцессоре C.</target>
        </trans-unit>
        <trans-unit id="c7d31e8396ed3e8775b3882f9a8562adac8992e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;Implementation-defined behavior&lt;/a&gt; in The C Preprocessor. &lt;code&gt;char16_t&lt;/code&gt; and &lt;code&gt;char32_t&lt;/code&gt; literals are always encoded in UTF-16 and UTF-32 respectively.</source>
          <target state="translated">См. Описание &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Implementation_002ddefined-behavior.html#Implementation_002ddefined-behavior&quot;&gt;поведения, определенного реализацией&lt;/a&gt; в Препроцессоре C. Литералы &lt;code&gt;char16_t&lt;/code&gt; и &lt;code&gt;char32_t&lt;/code&gt; всегда кодируются в UTF-16 и UTF-32 соответственно.</target>
        </trans-unit>
        <trans-unit id="658fbadcbe7e3cfa27592bb7cc8aab369c0db247" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Pragmas.html#Pragmas&quot;&gt;Pragmas&lt;/a&gt; in The C Preprocessor, for details of pragmas accepted by GCC on all targets. See &lt;a href=&quot;pragmas#Pragmas&quot;&gt;Pragmas Accepted by GCC&lt;/a&gt;, for details of target-specific pragmas.</source>
          <target state="translated">См. &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Pragmas.html#Pragmas&quot;&gt;Прагмы&lt;/a&gt; в препроцессоре C, где подробно описаны прагмы, принимаемые GCC для всех целей. См. &lt;a href=&quot;pragmas#Pragmas&quot;&gt;Прагмы, принятые GCC&lt;/a&gt; , для получения подробной информации о прагмах для конкретных целей.</target>
        </trans-unit>
        <trans-unit id="21007d084137c7d2ec1671d76187750384f6f2e0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Machine-Modes.html#Machine-Modes&quot;&gt;Machine Modes&lt;/a&gt; in GNU Compiler Collection (GCC) Internals, for a list of the possible keywords for &lt;var&gt;mode&lt;/var&gt;. You may also specify a mode of &lt;code&gt;byte&lt;/code&gt; or &lt;code&gt;__byte__&lt;/code&gt; to indicate the mode corresponding to a one-byte integer, &lt;code&gt;word&lt;/code&gt; or &lt;code&gt;__word__&lt;/code&gt; for the mode of a one-word integer, and &lt;code&gt;pointer&lt;/code&gt; or &lt;code&gt;__pointer__&lt;/code&gt; for the mode used to represent pointers.</source>
          <target state="translated">См. &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Machine-Modes.html#Machine-Modes&quot;&gt;Машинные режимы&lt;/a&gt; во внутреннем устройстве GNU Compiler Collection (GCC), где приведен список возможных ключевых слов для &lt;var&gt;mode&lt;/var&gt; . Вы также можете указать режим &lt;code&gt;byte&lt;/code&gt; или &lt;code&gt;__byte__&lt;/code&gt; , чтобы указать режим, соответствующий однобайтовому целому числу, &lt;code&gt;word&lt;/code&gt; или &lt;code&gt;__word__&lt;/code&gt; для режима однословного целого числа, и &lt;code&gt;pointer&lt;/code&gt; или &lt;code&gt;__pointer__&lt;/code&gt; для режима, используемого для представления указателей.</target>
        </trans-unit>
        <trans-unit id="2b73e4c61d6aa3ba91f4f3757ed312f0dea34e9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gfortran/Standards.html#Standards&quot;&gt;Standards&lt;/a&gt; in The GNU Fortran Compiler, for details of standards supported by GNU Fortran.</source>
          <target state="translated">См. &amp;laquo; &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gfortran/Standards.html#Standards&quot;&gt;Стандарты&lt;/a&gt; в компиляторе GNU Fortran&amp;raquo; для получения подробной информации о стандартах, поддерживаемых GNU Fortran.</target>
        </trans-unit>
        <trans-unit id="d4544c625c9250deeb4d1b2109535476e6a41bc9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gnat_rm/index.html#Top&quot;&gt;About This Guide&lt;/a&gt; in GNAT Reference Manual, for information on standard conformance and compatibility of the Ada compiler.</source>
          <target state="translated">См. Раздел &amp;laquo; &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gnat_rm/index.html#Top&quot;&gt;Об этом руководстве&amp;raquo;&lt;/a&gt; в Справочном руководстве GNAT для получения информации о соответствии стандартам и совместимости компилятора Ada.</target>
        </trans-unit>
        <trans-unit id="02206115a18ef138f866a5377cf36d2dcdf3f39c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Option Index&lt;/a&gt;, for an index to GCC&amp;rsquo;s options.</source>
          <target state="translated">См. &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Указатель опций&lt;/a&gt; , чтобы узнать об опциях GCC.</target>
        </trans-unit>
        <trans-unit id="f92b372afeb33fdcb2e400c22586894ceb4a8913" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.akkadia.org/drepper/tls.pdf&quot;&gt;ELF Handling For Thread-Local Storage&lt;/a&gt; for a detailed explanation of the four thread-local storage addressing models, and how the runtime is expected to function.</source>
          <target state="translated">См. &lt;a href=&quot;https://www.akkadia.org/drepper/tls.pdf&quot;&gt;Обработка ELF для локального хранилища потоков&lt;/a&gt; для подробного объяснения четырех моделей адресации локального хранилища потока и того, как среда выполнения должна функционировать.</target>
        </trans-unit>
        <trans-unit id="8e13ff5ec63319e8432be9ffc09617dcfec5efa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Program Instrumentation Options&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Параметры инструментария программы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c45509f6f79a8b5d9dfd4c1f3557aba0312fefe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;link-options#Link-Options&quot;&gt;Options for Linking&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;link-options#Link-Options&quot;&gt;Параметры для связывания&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d926ae4839442bf4ca475259e4691d6d87ea8e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;microsoft-windows-function-attributes#Microsoft-Windows-Function-Attributes&quot;&gt;Microsoft Windows Function Attributes&lt;/a&gt;, for discussion of the &lt;code&gt;dllexport&lt;/code&gt; and &lt;code&gt;dllimport&lt;/code&gt; attributes.</source>
          <target state="translated">См. &lt;a href=&quot;microsoft-windows-function-attributes#Microsoft-Windows-Function-Attributes&quot;&gt;Атрибуты функций Microsoft Windows&lt;/a&gt; для обсуждения атрибутов &lt;code&gt;dllexport&lt;/code&gt; и &lt;code&gt;dllimport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9f06eae06e3de3e9542d05510637a475fc262bd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;objective_002dc-and-objective_002dc_002b_002b-dialect-options#Objective_002dC-and-Objective_002dC_002b_002b-Dialect-Options&quot;&gt;Options Controlling Objective-C and Objective-C++ Dialects&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;objective_002dc-and-objective_002dc_002b_002b-dialect-options#Objective_002dC-and-Objective_002dC_002b_002b-Dialect-Options&quot;&gt;Параметры, управляющие диалектами Objective-C и Objective-C ++&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c63c6c8e460a8cf682e66ddf66e9aa0d0e42598" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Options that Control Optimization&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Параметры, управляющие оптимизацией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85e23a477ff3ed397006f7d7b24f8677346f373f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Options Controlling the Kind of Output&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Параметры управления типом вывода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8f74f8e18121481259f5157b4129afe2078cfe1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;preprocessor-options#Preprocessor-Options&quot;&gt;Options Controlling the Preprocessor&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;preprocessor-options#Preprocessor-Options&quot;&gt;Параметры управления препроцессором&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7419f71237f51267399c64c7786cdedb41924e54" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;rs_002f6000-and-powerpc-options#RS_002f6000-and-PowerPC-Options&quot;&gt;RS/6000 and PowerPC Options&lt;/a&gt;, for more information on whether long calls are necessary.</source>
          <target state="translated">Дополнительные сведения о необходимости длительных вызовов см. В разделе &amp;laquo; &lt;a href=&quot;rs_002f6000-and-powerpc-options#RS_002f6000-and-PowerPC-Options&quot;&gt;Параметры RS / 6000 и PowerPC&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be6a4b97c04d8e12e6e473deb1c9a9e10689a66e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;standards#Standards&quot;&gt;Language Standards Supported by GCC&lt;/a&gt;, for details of freestanding and hosted environments.</source>
          <target state="translated">См. Раздел &amp;laquo; &lt;a href=&quot;standards#Standards&quot;&gt;Языковые стандарты, поддерживаемые GCC&amp;raquo;&lt;/a&gt; для получения подробной информации об автономных и размещенных средах.</target>
        </trans-unit>
        <trans-unit id="ba9a6e9c7aff941ff05b9acae516bf8bb6d040a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;submodel-options#Submodel-Options&quot;&gt;Machine-Dependent Options&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;submodel-options#Submodel-Options&quot;&gt;Машинно-зависимые параметры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2ef31c8cf0906842f80898060f3a9631a0e782b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Options to Request or Suppress Warnings&lt;/a&gt;, for more detail on these and related command-line options.</source>
          <target state="translated">Дополнительные сведения об этих и связанных параметрах командной строки см. В разделе &amp;laquo; &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Параметры запроса или подавления предупреждений&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="434c807b2e25d15f5d415ef83533343f55fbfad1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Options to Request or Suppress Warnings&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Параметры запроса или подавления предупреждений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="bda50b9f3b2060976d692aee1d5a5eba1e23d6ef" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;interrupt&lt;/code&gt; function attribute.</source>
          <target state="translated">См. Также атрибут функции &lt;code&gt;interrupt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb6c38f7196a47f72f632cd6967a92ae3e51f69" translate="yes" xml:space="preserve">
          <source>See also under &lt;a href=&quot;x86-options#x86-Options&quot;&gt;x86 Options&lt;/a&gt; for standard options.</source>
          <target state="translated">См. Также стандартные параметры в разделе &amp;laquo; &lt;a href=&quot;x86-options#x86-Options&quot;&gt;Параметры x86&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ac2d935c64bc2be469f96342d1ea704cfe35909" translate="yes" xml:space="preserve">
          <source>See below for a documentation of the individual parameters controlling inlining and for the defaults of these parameters.</source>
          <target state="translated">См.ниже документацию по отдельным параметрам,управляющим встраиванием,а также по умолчанию этих параметров.</target>
        </trans-unit>
        <trans-unit id="2ccea17a61232afe4c2d489d47c0c9f6ac6d3602" translate="yes" xml:space="preserve">
          <source>Select a different format for printing diagnostics. &lt;var&gt;FORMAT&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">Выберите другой формат для печати диагностики. &lt;var&gt;FORMAT&lt;/var&gt; - это '</target>
        </trans-unit>
        <trans-unit id="1ce47ca4d6aa3221bdc1ff64eaa11ecfaa3bd85d" translate="yes" xml:space="preserve">
          <source>Select application model &lt;var&gt;app-model&lt;/var&gt;. Valid models are</source>
          <target state="translated">Выберите модель &lt;var&gt;app-model&lt;/var&gt; . Действительные модели</target>
        </trans-unit>
        <trans-unit id="d1e50956bbd1c0ef350e09e3963ba2a16dd200cb" translate="yes" xml:space="preserve">
          <source>Select between generating code that executes in ARM and Thumb states. The default for most configurations is to generate code that executes in ARM state, but the default can be changed by configuring GCC with the</source>
          <target state="translated">Выберите между генерирующим кодом,который выполняется в состояниях ARM и &quot;Большой палец&quot;.По умолчанию для большинства конфигураций генерируется код,который выполняется в состоянии ARM,но значение по умолчанию можно изменить,настроив GCC с помощью параметра</target>
        </trans-unit>
        <trans-unit id="fbbf6e0767f80e0a0e9d40cacab1bf157a107962" translate="yes" xml:space="preserve">
          <source>Select big- or little-endian code. The default is little-endian.</source>
          <target state="translated">Выберите большой или маленький код.По умолчанию это little-endian.</target>
        </trans-unit>
        <trans-unit id="b9e930cb008c241b5c815eaa75c8616049a76f3c" translate="yes" xml:space="preserve">
          <source>Select fraction of the entry block frequency of executions of basic block in function given basic block needs to have to be considered hot.</source>
          <target state="translated">Выбор доли входного блока частоты исполнения основного блока в функции данный основной блок должен считаться горячим.</target>
        </trans-unit>
        <trans-unit id="5d7f15e7b6cef89c571f030f1f45d8b85b80d1bd" translate="yes" xml:space="preserve">
          <source>Select fraction of the maximal count of repetitions of basic block in program given basic block needs to have to be considered hot (used in non-LTO mode)</source>
          <target state="translated">Выберите долю максимального количества повторений основного блока в программе,которую необходимо считать горячей (используемой в режиме,отличном от LTO).</target>
        </trans-unit>
        <trans-unit id="36c07223da795b37e11fd68e818cf3c38a43554f" translate="yes" xml:space="preserve">
          <source>Select fraction of the maximal frequency of executions of a basic block in a function to align the basic block.</source>
          <target state="translated">Выберите долю максимальной частоты исполнения основного блока в функции для выравнивания основного блока.</target>
        </trans-unit>
        <trans-unit id="9dc9d80b086954c572282f72064b77416ea46446" translate="yes" xml:space="preserve">
          <source>Select hardware or software floating-point implementations. The default is soft float.</source>
          <target state="translated">Выберите аппаратную или программную реализацию с плавающей запятой.По умолчанию используется мягкий диск с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="4805085c7cdeea70b47df74e1f45155c6818e56a" translate="yes" xml:space="preserve">
          <source>Select the CPU for which code is generated. &lt;var&gt;name&lt;/var&gt; may be one of &amp;lsquo;</source>
          <target state="translated">Выберите ЦП, для которого создается код. &lt;var&gt;name&lt;/var&gt; может быть одним из '</target>
        </trans-unit>
        <trans-unit id="5298db8756dae785af6835a7d749dc6e4b0e83e6" translate="yes" xml:space="preserve">
          <source>Select the FDPIC ABI, which uses function descriptors to represent pointers to functions. Without any PIC/PIE-related options, it implies</source>
          <target state="translated">Выберите FDPIC ABI,который использует дескрипторы функций для представления указателей на функции.Без каких-либо опций,связанных с PIC/PIE,это подразумевает.</target>
        </trans-unit>
        <trans-unit id="b96987a051865812581f43da2e6b76b38be2e5d6" translate="yes" xml:space="preserve">
          <source>Select the MCU to target. This is used to create a C preprocessor symbol based upon the MCU name, converted to upper case and pre- and post-fixed with &amp;lsquo;</source>
          <target state="translated">Выберите MCU для нацеливания. Это используется для создания символа препроцессора C на основе имени MCU, преобразованного в верхний регистр и предварительно и после фиксированного с помощью '</target>
        </trans-unit>
        <trans-unit id="34d05e3013dad1f7bde8dbed8f375c5a52258615" translate="yes" xml:space="preserve">
          <source>Select the branch protection features to use. &amp;lsquo;</source>
          <target state="translated">Выберите функции защиты ответвления, которые нужно использовать. '</target>
        </trans-unit>
        <trans-unit id="2bf2cc4264a1022ff36bdedefe29b59b658dcdb3" translate="yes" xml:space="preserve">
          <source>Select the floating-point processor. This option can only be used with</source>
          <target state="translated">Выберите процессор с плавающей запятой.Эта опция может быть использована только с</target>
        </trans-unit>
        <trans-unit id="980188b0321fba68ce5bd61028cfbc3eaef9c423" translate="yes" xml:space="preserve">
          <source>Select the function scope on which branch protection will be applied. The behavior and permissible arguments are the same as for the command-line option</source>
          <target state="translated">Выберите область действия функции,к которой будет применена защита ветви.Поведение и допустимые аргументы такие же,как и для опции командной строки</target>
        </trans-unit>
        <trans-unit id="d7cbd726a83eac18e26570056a1fab4af001c14c" translate="yes" xml:space="preserve">
          <source>Select the function scope on which return address signing will be applied. Permissible values are &amp;lsquo;</source>
          <target state="translated">Выберите область действия функции, к которой будет применена подпись обратного адреса. Допустимые значения: '</target>
        </trans-unit>
        <trans-unit id="429411e25d795ae5c5e83a75cda8f5a21a98ceca" translate="yes" xml:space="preserve">
          <source>Select the function scope on which return address signing will be applied. The behavior and permissible arguments are the same as for the command-line option</source>
          <target state="translated">Выберите область действия функции,к которой будет применяться подпись адреса возврата.Поведение и допустимые аргументы такие же,как и для опции командной строки</target>
        </trans-unit>
        <trans-unit id="cad7dc1efa3eac596691110965725da6620b1019" translate="yes" xml:space="preserve">
          <source>Select the processor type for which to generate code. Possible values are &amp;lsquo;</source>
          <target state="translated">Выберите тип процессора, для которого нужно сгенерировать код. Возможные значения: '</target>
        </trans-unit>
        <trans-unit id="8f2f44369855722542be7f026c33d280a03e5883" translate="yes" xml:space="preserve">
          <source>Select the type of traceback table. Valid values for &lt;var&gt;traceback_type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Выберите тип таблицы трассировки. Допустимые значения для &lt;var&gt;traceback_type&lt;/var&gt; : '</target>
        </trans-unit>
        <trans-unit id="7e33cf27814e6b940d30b3e1737b7c77cdf2dd07" translate="yes" xml:space="preserve">
          <source>Selects one of the built-in core configurations. Each MeP chip has one or more modules in it; each module has a core CPU and a variety of coprocessors, optional instructions, and peripherals. The &lt;code&gt;MeP-Integrator&lt;/code&gt; tool, not part of GCC, provides these configurations through this option; using this option is the same as using all the corresponding command-line options. The default configuration is &amp;lsquo;</source>
          <target state="translated">Выбирает одну из встроенных конфигураций ядра. В каждом чипе MeP есть один или несколько модулей; каждый модуль имеет центральный процессор и множество сопроцессоров, дополнительных инструкций и периферийных устройств. Инструмент &lt;code&gt;MeP-Integrator&lt;/code&gt; , не являющийся частью GCC, предоставляет эти конфигурации с помощью этой опции; использование этого параметра аналогично использованию всех соответствующих параметров командной строки. Конфигурация по умолчанию - '</target>
        </trans-unit>
        <trans-unit id="365acdbdf4035eefca1a110d44e0b136c3ce634c" translate="yes" xml:space="preserve">
          <source>Selects the IEEE rounding mode. Other Alpha compilers call this option</source>
          <target state="translated">Выбирает режим округления IEEE.Другие альфа-компиляторы называют эту опцию</target>
        </trans-unit>
        <trans-unit id="994fea32157f20c5fab4acc82606581a7793a57c" translate="yes" xml:space="preserve">
          <source>Selects the type of CPU to be targeted. Currently the only supported type is &amp;lsquo;</source>
          <target state="translated">Выбирает целевой тип ЦП. В настоящее время поддерживается только тип '</target>
        </trans-unit>
        <trans-unit id="c91d8046baa6bef1bf16fff71b19c1547c4000e2" translate="yes" xml:space="preserve">
          <source>Selects the type of RX CPU to be targeted. Currently three types are supported, the generic &amp;lsquo;</source>
          <target state="translated">Выбирает целевой тип ЦП RX. В настоящее время поддерживаются три типа: общий '</target>
        </trans-unit>
        <trans-unit id="aaf8d2e6bd32db4a0d11443d63ebb0f809925ed1" translate="yes" xml:space="preserve">
          <source>Selects which section constant data is placed in. &lt;var&gt;name&lt;/var&gt; may be &amp;lsquo;</source>
          <target state="translated">Выбирает, в какой раздел будут помещены данные констант. &lt;var&gt;name&lt;/var&gt; может быть '</target>
        </trans-unit>
        <trans-unit id="a326f0729df90ca61ebaebd51aa74199758de422" translate="yes" xml:space="preserve">
          <source>Sending a message in the GNU Objective-C runtime is composed of two separate steps. First, there is a call to the lookup function, &lt;code&gt;objc_msg_lookup ()&lt;/code&gt; (or, in the case of messages to super, &lt;code&gt;objc_msg_lookup_super ()&lt;/code&gt;). This runtime function takes as argument the receiver and the selector of the method to be called; it returns the &lt;code&gt;IMP&lt;/code&gt;, that is a pointer to the function implementing the method. The second step of method invocation consists of casting this pointer function to the appropriate function pointer type, and calling the function pointed to it with the right arguments.</source>
          <target state="translated">Отправка сообщения в среде выполнения GNU Objective-C состоит из двух отдельных шагов. Во-первых, это вызов функции поиска &lt;code&gt;objc_msg_lookup ()&lt;/code&gt; (или, в случае сообщений для super, &lt;code&gt;objc_msg_lookup_super ()&lt;/code&gt; ). Эта функция времени выполнения принимает в качестве аргумента получатель и селектор вызываемого метода; он возвращает &lt;code&gt;IMP&lt;/code&gt; , то есть указатель на функцию, реализующую метод. Второй шаг вызова метода состоит в приведении этой функции-указателя к соответствующему типу указателя функции и вызову функции, на которую она указывает, с правильными аргументами.</target>
        </trans-unit>
        <trans-unit id="b72ffc8386ea0ea78c13552225aab02558985774" translate="yes" xml:space="preserve">
          <source>Separate as much DWARF debugging information as possible into a separate output file with the extension</source>
          <target state="translated">Разделите как можно больше отладочной информации DWARF в отдельном выходном файле с расширением</target>
        </trans-unit>
        <trans-unit id="a0c8baa5021f22a8ce8d11940201cb0f1ef70ad0" translate="yes" xml:space="preserve">
          <source>Sequential Consistency</source>
          <target state="translated">Последовательная последовательность</target>
        </trans-unit>
        <trans-unit id="db8c4e6b85438b041d4b954b044c9acc5ea86188" translate="yes" xml:space="preserve">
          <source>Set 80387 floating-point precision to 32, 64 or 80 bits. When</source>
          <target state="translated">Установите точность с плавающей точкой 80387 на 32,64 или 80 бит.При</target>
        </trans-unit>
        <trans-unit id="6f094549c4101d290a41a69929786b1083499073" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_dispatch_id&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_dispatch_id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e063a374a4f9b63d6fbc54a457afb454bf3dc60b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_dispatch_ptr&lt;/code&gt; flag. Always on (required to locate the launch dimensions).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_dispatch_ptr&lt;/code&gt; . Всегда включен (требуется для определения размеров запуска).</target>
        </trans-unit>
        <trans-unit id="4bf6767f6db51278dce4ba489ee759bfe27ca860" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_flat_scratch_init&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_flat_scratch_init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e018c4a2413ef8651cec5e018baeed25a64535ef" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_grid_workgroup_count_x&lt;/code&gt; flag. Always on (required to use OpenACC/OpenMP).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_grid_workgroup_count_x&lt;/code&gt; . Всегда включен (требуется для использования OpenACC / OpenMP).</target>
        </trans-unit>
        <trans-unit id="8a3463fca2684949d657154ef95e5116320e933b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_grid_workgroup_count_y&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_grid_workgroup_count_y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9121d61d52bfdfdb7d41c445246f7a36b8486d92" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_grid_workgroup_count_z&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_grid_workgroup_count_z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47dd861ea509bc2bed29c0b97e6909d4e6ec3ffa" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_kernarg_segment_ptr&lt;/code&gt; flag. Always on (required to locate the kernel arguments, &quot;kernargs&quot;).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_kernarg_segment_ptr&lt;/code&gt; . Всегда включен (требуется для поиска аргументов ядра, &amp;laquo;kernargs&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="cd7c041f21c0b317df592ef375a2d79306809a19" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_private_segment_buffer&lt;/code&gt; flag. Always on (required to locate the stack).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_private_segment_buffer&lt;/code&gt; . Всегда включен (требуется для поиска стека).</target>
        </trans-unit>
        <trans-unit id="6cb3983fd9748551d692e967fc5d0571ccaac036" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_private_segment_size&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_private_segment_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e321e30fee9a76386f96bea4dafdd22df3c58297" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_private_segment_wave_byte_offset&lt;/code&gt; flag. Always on (required to locate the stack).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_private_segment_wave_byte_offset&lt;/code&gt; . Всегда включен (требуется для поиска стека).</target>
        </trans-unit>
        <trans-unit id="318a046da8f702fe1ef7095bb61e01886dd9a552" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_queue_ptr&lt;/code&gt; flag. Always on (required to convert address spaces).</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_queue_ptr&lt;/code&gt; . Всегда включен (требуется для преобразования адресных пространств).</target>
        </trans-unit>
        <trans-unit id="f2dea393dcbc34f57c9589ed5c20be98ac3c0bd2" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_workgroup_id_x&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_workgroup_id_x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="922f6db77c2bc32594aaaea2ec14d4d827c574c4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_workgroup_id_y&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_workgroup_id_y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e0b73f99741e4ae34f7adcad5960d6204fcfd0" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_workgroup_id_z&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_workgroup_id_z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31293ecfe585105b73e60e083df6e0122cc62953" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_sgpr_workgroup_info&lt;/code&gt; flag.</source>
          <target state="translated">Установите флаг &lt;code&gt;enable_sgpr_workgroup_info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="380057a6f93584a7133cb8fb90b07c8a8cc27fc3" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; parameter. Always on (can&amp;rsquo;t be disabled).</source>
          <target state="translated">Установите параметр &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; . Всегда включен (нельзя отключить).</target>
        </trans-unit>
        <trans-unit id="2399bb34bb60e0afafdf365068c0d7d3cf7ce8fd" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; parameter. Always on (required to enable vectorization.)</source>
          <target state="translated">Установите параметр &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; . Всегда включен (требуется для включения векторизации.)</target>
        </trans-unit>
        <trans-unit id="82aa777ac54dda2b6c22bad4293654db9c8f37c4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; parameter. Always on (required to use OpenACC/OpenMP).</source>
          <target state="translated">Установите параметр &lt;code&gt;enable_vgpr_workitem_id&lt;/code&gt; . Всегда включен (требуется для использования OpenACC / OpenMP).</target>
        </trans-unit>
        <trans-unit id="1105231c54783be6055a3890df5dbc54a64a890f" translate="yes" xml:space="preserve">
          <source>Set IACC0H to &lt;var&gt;x&lt;/var&gt; if &lt;var&gt;reg&lt;/var&gt; is 0 and IACC0L to &lt;var&gt;x&lt;/var&gt; if &lt;var&gt;reg&lt;/var&gt; is 1. Other values of &lt;var&gt;reg&lt;/var&gt; are rejected as invalid.</source>
          <target state="translated">Установите IACC0H равным &lt;var&gt;x&lt;/var&gt; , если &lt;var&gt;reg&lt;/var&gt; равен 0, и IACC0L равным &lt;var&gt;x&lt;/var&gt; , если &lt;var&gt;reg&lt;/var&gt; равен 1. Остальные значения &lt;var&gt;reg&lt;/var&gt; отклоняются как недопустимые.</target>
        </trans-unit>
        <trans-unit id="ee53a79e935585433b8493e61ec418d3cf4dbe69" translate="yes" xml:space="preserve">
          <source>Set all subsequent functions to have the &lt;code&gt;long_call&lt;/code&gt; attribute.</source>
          <target state="translated">Установите для всех последующих функций атрибут &lt;code&gt;long_call&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d60d9bf9dcc9adc753b1eb2a43c3660a75d81801" translate="yes" xml:space="preserve">
          <source>Set all subsequent functions to have the &lt;code&gt;short_call&lt;/code&gt; attribute.</source>
          <target state="translated">Установите для всех последующих функций атрибут &lt;code&gt;short_call&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97836a72f6504940ee575ca631515c1b5c65d1b7" translate="yes" xml:space="preserve">
          <source>Set architecture type or tuning for &lt;var&gt;gpu&lt;/var&gt;. Supported values for &lt;var&gt;gpu&lt;/var&gt; are</source>
          <target state="translated">Установите тип архитектуры или настройку для &lt;var&gt;gpu&lt;/var&gt; . Поддерживаемые значения для &lt;var&gt;gpu&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="0c9ead2e0e9ad50453ecaadabc1a54be0e28b16c" translate="yes" xml:space="preserve">
          <source>Set architecture type, register usage, and instruction scheduling parameters for &lt;var&gt;cpu&lt;/var&gt;. There are also shortcut alias options available for backward compatibility and convenience. Supported values for &lt;var&gt;cpu&lt;/var&gt; are</source>
          <target state="translated">Задайте тип архитектуры, использование регистров и параметры планирования инструкций для &lt;var&gt;cpu&lt;/var&gt; . Существуют также варианты ярлыков псевдонимов, доступные для обратной совместимости и удобства. Поддерживаемые значения для &lt;var&gt;cpu&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="64a7071b5e71b31be5eb05dbe2fa3aa85d88985c" translate="yes" xml:space="preserve">
          <source>Set architecture type, register usage, and instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;. Supported values for &lt;var&gt;cpu_type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Установите тип архитектуры, использование регистров и параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; . Поддерживаемые значения для &lt;var&gt;cpu_type&lt;/var&gt; : '</target>
        </trans-unit>
        <trans-unit id="2d8d13e552ebd3846286db451c6c5b431512dad9" translate="yes" xml:space="preserve">
          <source>Set instruction scheduling parameters for &lt;var&gt;cpu&lt;/var&gt;, overriding any implied by</source>
          <target state="translated">Установите параметры планирования инструкций для &lt;var&gt;cpu&lt;/var&gt; , отменяя любые подразумеваемые</target>
        </trans-unit>
        <trans-unit id="2715a46db2794f249b7a95e35f8fbd08b56ac85b" translate="yes" xml:space="preserve">
          <source>Set name of __fentry__ symbol called at function entry for -pg -mfentry functions.</source>
          <target state="translated">Установите имя символа __fentry__,вызываемого при входе в функцию для функций -pg -mfentry.</target>
        </trans-unit>
        <trans-unit id="516912ad28df352c9af39b170d45bd0f779026e3" translate="yes" xml:space="preserve">
          <source>Set name of section to record -mrecord-mcount calls (default __mcount_loc).</source>
          <target state="translated">Задать имя секции для записи -mrecord-mcount calls (по умолчанию __mcount_loc).</target>
        </trans-unit>
        <trans-unit id="5b5c27a6d88589e59ef75449f5dd3ac676e7651f" translate="yes" xml:space="preserve">
          <source>Set only the instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;. The instruction set is not changed.</source>
          <target state="translated">Установите только параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; . Набор инструкций не меняется.</target>
        </trans-unit>
        <trans-unit id="96d85595444fd17f8fc2c443c3589b270f0ca169" translate="yes" xml:space="preserve">
          <source>Set probability threshold for unaligning branches. When tuning for &amp;lsquo;</source>
          <target state="translated">Установите порог вероятности для невыровненных ветвей. При настройке на '</target>
        </trans-unit>
        <trans-unit id="0ea21e9156c401cfb3bdea0993d6be3967bad591" translate="yes" xml:space="preserve">
          <source>Set the branch costs for conditional branch instructions to &lt;var&gt;cost&lt;/var&gt;. Reasonable values for &lt;var&gt;cost&lt;/var&gt; are small, non-negative integers. The default branch cost is 0.</source>
          <target state="translated">Задайте стоимость перехода для условных инструкций перехода к &lt;var&gt;cost&lt;/var&gt; . Разумные значения &lt;var&gt;cost&lt;/var&gt; - небольшие неотрицательные целые числа. Стоимость ветки по умолчанию равна 0.</target>
        </trans-unit>
        <trans-unit id="0f86bf8c6795fb942b4cb5cea169bd8c5df0318b" translate="yes" xml:space="preserve">
          <source>Set the branch costs to roughly &lt;code&gt;n&lt;/code&gt; instructions. The default is 1.</source>
          <target state="translated">Установите стоимость ветки примерно на &lt;code&gt;n&lt;/code&gt; инструкций. По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="ff18182da94c7d99a8b4c2f28568b2d883024732" translate="yes" xml:space="preserve">
          <source>Set the code model to one of</source>
          <target state="translated">Установите кодовую модель на одну из</target>
        </trans-unit>
        <trans-unit id="78eeaac8789a3827df0a0d0ed12693670bedcea6" translate="yes" xml:space="preserve">
          <source>Set the cost of branches to roughly &lt;var&gt;n&lt;/var&gt; instructions.</source>
          <target state="translated">Установите стоимость веток примерно на &lt;var&gt;n&lt;/var&gt; инструкций.</target>
        </trans-unit>
        <trans-unit id="d6c018249bccc05c5ac1fc5bfd4c0431b5934b35" translate="yes" xml:space="preserve">
          <source>Set the cost of branches to roughly &lt;var&gt;num&lt;/var&gt; &amp;ldquo;simple&amp;rdquo; instructions. This cost is only a heuristic and is not guaranteed to produce consistent results across releases.</source>
          <target state="translated">Установите стоимость ветвей примерно &lt;var&gt;num&lt;/var&gt; &amp;laquo;простых&amp;raquo; инструкций. Эта стоимость носит чисто эвристический характер и не гарантирует получения согласованных результатов для всех выпусков.</target>
        </trans-unit>
        <trans-unit id="52c26e276ceb37a9e0ef6641f16eb200d20fd608" translate="yes" xml:space="preserve">
          <source>Set the cost of branches to roughly &lt;var&gt;num&lt;/var&gt; &amp;ldquo;simple&amp;rdquo; instructions. This cost is only a heuristic and is not guaranteed to produce consistent results across releases. A zero cost redundantly selects the default, which is based on the</source>
          <target state="translated">Установите стоимость ветвей примерно &lt;var&gt;num&lt;/var&gt; &amp;laquo;простых&amp;raquo; инструкций. Эта стоимость носит чисто эвристический характер и не гарантирует получения согласованных результатов для всех выпусков. При нулевой стоимости избыточно выбирается значение по умолчанию, основанное на</target>
        </trans-unit>
        <trans-unit id="5a0841b373cdd65fccf05bdefa98b9359151f994" translate="yes" xml:space="preserve">
          <source>Set the cost to assume for a multiply insn.</source>
          <target state="translated">Установите стоимость,предполагаемую для умножения insn.</target>
        </trans-unit>
        <trans-unit id="9b5cc228ada7a61f910769476607cbb994fb6862" translate="yes" xml:space="preserve">
          <source>Set the default ELF image symbol visibility to the specified option&amp;mdash;all symbols are marked with this unless overridden within the code. Using this feature can very substantially improve linking and load times of shared object libraries, produce more optimized code, provide near-perfect API export and prevent symbol clashes. It is &lt;strong&gt;strongly&lt;/strong&gt; recommended that you use this in any shared objects you distribute.</source>
          <target state="translated">Установите видимость символа изображения ELF по умолчанию для указанного параметра - все символы помечаются этим, если они не переопределены в коде. Использование этой функции может значительно улучшить время связывания и загрузки библиотек общих объектов, создать более оптимизированный код, обеспечить почти идеальный экспорт API и предотвратить конфликты символов. Он &lt;strong&gt;настоятельно&lt;/strong&gt; рекомендуется использовать это в каких - либо общих объектов вы распространяете.</target>
        </trans-unit>
        <trans-unit id="ea1605288d268d2678207ef0c71d1f4525e63f8a" translate="yes" xml:space="preserve">
          <source>Set the default instance variable visibility to the specified option so that instance variables declared outside the scope of any access modifier directives default to the specified visibility.</source>
          <target state="translated">Установите видимость переменной экземпляра по умолчанию для указанной опции так,чтобы переменные экземпляра,объявленные вне рамок любых директив модификатора доступа по умолчанию для указанной видимости.</target>
        </trans-unit>
        <trans-unit id="2a86ab7ec489c5eb483da27838bf7e2eb9274102" translate="yes" xml:space="preserve">
          <source>Set the default scalar storage order of structures and unions to the specified endianness. The accepted values are &amp;lsquo;</source>
          <target state="translated">Задайте для скалярного порядка хранения структур и объединений по умолчанию заданный порядок байтов. Допустимые значения:</target>
        </trans-unit>
        <trans-unit id="f3dbc51abbb4a58e848b6c7fade12f6fc892b4eb" translate="yes" xml:space="preserve">
          <source>Set the default size of pointers. Possible options for &lt;var&gt;size&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Установите размер указателей по умолчанию. Возможные варианты &lt;var&gt;size&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="62f2e2f7b01631d9a6515e5e155db801fef2b550" translate="yes" xml:space="preserve">
          <source>Set the directory to search for plugins that are passed by</source>
          <target state="translated">Установите в каталоге поиск плагинов,которые передаются через</target>
        </trans-unit>
        <trans-unit id="344c767b23b4250954654e45ee61197856443517" translate="yes" xml:space="preserve">
          <source>Set the directory to search for the profile data files in to &lt;var&gt;path&lt;/var&gt;. This option affects only the profile data generated by</source>
          <target state="translated">Задайте каталог для поиска файлов данных профиля в &lt;var&gt;path&lt;/var&gt; . Этот параметр влияет только на данные профиля, созданные</target>
        </trans-unit>
        <trans-unit id="c88a9680382a42696b15d1fef7d2ae2621b8c420" translate="yes" xml:space="preserve">
          <source>Set the distance between tab stops. This helps the preprocessor report correct column numbers in warnings or errors, even if tabs appear on the line. If the value is less than 1 or greater than 100, the option is ignored. The default is 8.</source>
          <target state="translated">Установите расстояние между закладками.Это поможет препроцессору сообщать правильные номера столбцов в предупреждениях или ошибках,даже если в строке появляются закладки.Если значение меньше 1 или больше 100,опция игнорируется.По умолчанию установлено значение 8.</target>
        </trans-unit>
        <trans-unit id="1d08f91e70e865b37a7c6408c62bba8aaf4795be" translate="yes" xml:space="preserve">
          <source>Set the division strategy to be used for integer division operations. &lt;var&gt;strategy&lt;/var&gt; can be one of:</source>
          <target state="translated">Установите стратегию деления, которая будет использоваться для операций целочисленного деления. &lt;var&gt;strategy&lt;/var&gt; может быть одной из:</target>
        </trans-unit>
        <trans-unit id="39cb7b5430317218ec8ac64bf16cfa98e3b257be" translate="yes" xml:space="preserve">
          <source>Set the execution character set, used for string and character constants. The default is UTF-8. &lt;var&gt;charset&lt;/var&gt; can be any encoding supported by the system&amp;rsquo;s &lt;code&gt;iconv&lt;/code&gt; library routine.</source>
          <target state="translated">Установите набор символов выполнения, используемый для строковых и символьных констант. По умолчанию используется UTF-8. &lt;var&gt;charset&lt;/var&gt; может быть любой кодировкой, поддерживаемой подпрограммой библиотеки &lt;code&gt;iconv&lt;/code&gt; системы .</target>
        </trans-unit>
        <trans-unit id="51202b29bb6ce9f52c2e1294c6b529a40bcf359f" translate="yes" xml:space="preserve">
          <source>Set the full 64-bit value of IACC0 to &lt;var&gt;x&lt;/var&gt;. The &lt;var&gt;reg&lt;/var&gt; argument is reserved for future expansion and must be 0.</source>
          <target state="translated">Установите полное 64-битное значение IACC0 равным &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;reg&lt;/var&gt; аргумент зарезервирован для расширения в будущем и должен быть 0.</target>
        </trans-unit>
        <trans-unit id="b310b7c6a38563bb5ac12d36d2b4fae1244b8499" translate="yes" xml:space="preserve">
          <source>Set the input character set, used for translation from the character set of the input file to the source character set used by GCC. If the locale does not specify, or GCC cannot get this information from the locale, the default is UTF-8. This can be overridden by either the locale or this command-line option. Currently the command-line option takes precedence if there&amp;rsquo;s a conflict. &lt;var&gt;charset&lt;/var&gt; can be any encoding supported by the system&amp;rsquo;s &lt;code&gt;iconv&lt;/code&gt; library routine.</source>
          <target state="translated">Установите входной набор символов, используемый для перевода из набора символов входного файла в исходный набор символов, используемый GCC. Если языковой стандарт не указан или GCC не может получить эту информацию из языкового стандарта, по умолчанию используется UTF-8. Это можно изменить с помощью языкового стандарта или этого параметра командной строки. В настоящее время параметр командной строки имеет приоритет в случае конфликта. &lt;var&gt;charset&lt;/var&gt; может быть любой кодировкой, поддерживаемой подпрограммой библиотеки &lt;code&gt;iconv&lt;/code&gt; системы .</target>
        </trans-unit>
        <trans-unit id="652927b7d54857ab31904ba55c5609207b150484" translate="yes" xml:space="preserve">
          <source>Set the instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;, but do not set the architecture type or register usage, as</source>
          <target state="translated">Задайте параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; , но не устанавливайте тип архитектуры или использование регистра, как</target>
        </trans-unit>
        <trans-unit id="11f00614fec90c6021e141511f6f276e35bf0cb8" translate="yes" xml:space="preserve">
          <source>Set the instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;, but do not set the instruction set or register set that the option</source>
          <target state="translated">Задайте параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; , но не устанавливайте набор инструкций или набор регистров, для которых параметр</target>
        </trans-unit>
        <trans-unit id="50be1da58f5d233c63ebfa9b37341f9609727916" translate="yes" xml:space="preserve">
          <source>Set the instruction set and instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;. You can specify either the &amp;lsquo;</source>
          <target state="translated">Установите набор инструкций и параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; . Вы можете указать либо '</target>
        </trans-unit>
        <trans-unit id="3637c6b1faf044bd713cef9c135202d8f375fec1" translate="yes" xml:space="preserve">
          <source>Set the instruction set, register set, and instruction scheduling parameters for array element type &lt;var&gt;ae_type&lt;/var&gt;. Supported values for &lt;var&gt;ae_type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Установите набор инструкций, набор регистров и параметры планирования инструкций для типа элемента массива &lt;var&gt;ae_type&lt;/var&gt; . Поддерживаемые значения для &lt;var&gt;ae_type&lt;/var&gt; : '</target>
        </trans-unit>
        <trans-unit id="2130c0c09cc91a0c33f4d19aae8686d805e90ec1" translate="yes" xml:space="preserve">
          <source>Set the instruction set, register set, and instruction scheduling parameters for machine type &lt;var&gt;cpu_type&lt;/var&gt;. Supported values for &lt;var&gt;cpu_type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Установите набор инструкций, набор регистров и параметры планирования инструкций для типа машины &lt;var&gt;cpu_type&lt;/var&gt; . Поддерживаемые значения для &lt;var&gt;cpu_type&lt;/var&gt; : '</target>
        </trans-unit>
        <trans-unit id="4c79cc68a1f91929b96557468c86dfcad2cce72f" translate="yes" xml:space="preserve">
          <source>Set the internal debug counter lower and upper bound. &lt;var&gt;counter-value-list&lt;/var&gt; is a comma-separated list of &lt;var&gt;name&lt;/var&gt;:&lt;var&gt;lower_bound&lt;/var&gt;:&lt;var&gt;upper_bound&lt;/var&gt; tuples which sets the lower and the upper bound of each debug counter &lt;var&gt;name&lt;/var&gt;. The &lt;var&gt;lower_bound&lt;/var&gt; is optional and is zero initialized if not set. All debug counters have the initial upper bound of &lt;code&gt;UINT_MAX&lt;/code&gt;; thus &lt;code&gt;dbg_cnt&lt;/code&gt; returns true always unless the upper bound is set by this option. For example, with</source>
          <target state="translated">Установите нижнюю и верхнюю границу внутреннего счетчика отладки. &lt;var&gt;counter-value-list&lt;/var&gt; - это список &lt;var&gt;lower_bound&lt;/var&gt; &lt;var&gt;upper_bound&lt;/var&gt; кортежей &lt;var&gt;name&lt;/var&gt; : lower_bound : upper_bound, который устанавливает нижнюю и верхнюю границу каждого &lt;var&gt;name&lt;/var&gt; счетчика отладки . Параметр &lt;var&gt;lower_bound&lt;/var&gt; является необязательным и инициализируется нулем, если не установлен. Все счетчики отладки имеют начальную верхнюю границу &lt;code&gt;UINT_MAX&lt;/code&gt; ; таким образом, &lt;code&gt;dbg_cnt&lt;/code&gt; всегда возвращает истину, если верхняя граница не установлена ​​этой опцией. Например, с</target>
        </trans-unit>
        <trans-unit id="6a2e63898a05f461ab31f6f83dad590dc851ec3a" translate="yes" xml:space="preserve">
          <source>Set the list of functions that are excluded from instrumentation (see the description of</source>
          <target state="translated">Установите список функций,которые исключены из приборостроения (см.описание</target>
        </trans-unit>
        <trans-unit id="42e134132bf53619895cfe9c4d4c0a63e9ff7d7c" translate="yes" xml:space="preserve">
          <source>Set the maximum amount for a single stack increment operation. Large values can increase the speed of programs that contain functions that need a large amount of stack space, but they can also trigger a segmentation fault if the stack is extended too much. The default value is 0x1000.</source>
          <target state="translated">Установите максимальное значение для операции приращения стека за один раз.Большие значения могут увеличить скорость работы программ,содержащих функции,которым требуется большое пространство стека,но они также могут вызвать ошибку сегментации,если стек будет слишком сильно расширен.Значение по умолчанию-0x1000.</target>
        </trans-unit>
        <trans-unit id="d4f670c7bd6ab86529aad1732ecfea40af410c2b" translate="yes" xml:space="preserve">
          <source>Set the maximum instantiation depth for template classes to &lt;var&gt;n&lt;/var&gt;. A limit on the template instantiation depth is needed to detect endless recursions during template class instantiation. ANSI/ISO C++ conforming programs must not rely on a maximum depth greater than 17 (changed to 1024 in C++11). The default value is 900, as the compiler can run out of stack space before hitting 1024 in some situations.</source>
          <target state="translated">Установите максимальную глубину создания экземпляров для классов шаблонов равной &lt;var&gt;n&lt;/var&gt; . Ограничение глубины создания экземпляра шаблона необходимо для обнаружения бесконечных рекурсий во время создания экземпляра класса шаблона. Программы, соответствующие ANSI / ISO C ++, не должны полагаться на максимальную глубину, превышающую 17 (изменено на 1024 в C ++ 11). Значение по умолчанию - 900, так как в некоторых ситуациях компилятору может не хватить места в стеке до достижения 1024.</target>
        </trans-unit>
        <trans-unit id="f0c34cb3bf3e4cbb7843f5530d7dab6ff427a4a8" translate="yes" xml:space="preserve">
          <source>Set the maximum nested evaluation depth for C++11 constexpr functions to &lt;var&gt;n&lt;/var&gt;. A limit is needed to detect endless recursion during constant expression evaluation. The minimum specified by the standard is 512.</source>
          <target state="translated">Установите максимальную глубину вложенной оценки для функций constexpr C ++ 11 равной &lt;var&gt;n&lt;/var&gt; . Предел необходим для обнаружения бесконечной рекурсии во время вычисления постоянного выражения. Минимум, установленный стандартом, - 512.</target>
        </trans-unit>
        <trans-unit id="b1da5be9c3391cd736caa92a61985889a98f2b05" translate="yes" xml:space="preserve">
          <source>Set the maximum number of existing candidates that are considered when seeking a basis for a new straight-line strength reduction candidate.</source>
          <target state="translated">Установить максимальное число существующих кандидатов,которое учитывается при поиске основы для нового кандидата на сокращение силы прямой линии.</target>
        </trans-unit>
        <trans-unit id="cfe13945b74f8afda07bf3e9441d08f927ed94f9" translate="yes" xml:space="preserve">
          <source>Set the maximum number of instructions executed in parallel in reassociated tree. This parameter overrides target dependent heuristics used by default if has non zero value.</source>
          <target state="translated">Установите максимальное количество инструкций,выполняемых параллельно в переназначенном дереве.Этот параметр переопределяет используемую по умолчанию целевую зависимую эвристику,если она не имеет нулевого значения.</target>
        </trans-unit>
        <trans-unit id="ad1d48dcf4aec833ed476a8c06e702825b1456b2" translate="yes" xml:space="preserve">
          <source>Set the maximum number of iterations for a loop in C++14 constexpr functions to &lt;var&gt;n&lt;/var&gt;. A limit is needed to detect infinite loops during constant expression evaluation. The default is 262144 (1&amp;lt;&amp;lt;18).</source>
          <target state="translated">Установите максимальное количество итераций для цикла в функциях constexpr C ++ 14 равным &lt;var&gt;n&lt;/var&gt; . Предел необходим для обнаружения бесконечных циклов во время вычисления постоянного выражения. По умолчанию 262144 (1 &amp;lt;&amp;lt; 18).</target>
        </trans-unit>
        <trans-unit id="b10b01f3627d31eea1b8ecfa0a7d6381d1c99dfd" translate="yes" xml:space="preserve">
          <source>Set the maximum number of operations during a single constexpr evaluation. Even when number of iterations of a single loop is limited with the above limit, if there are several nested loops and each of them has many iterations but still smaller than the above limit, or if in a body of some loop or even outside of a loop too many expressions need to be evaluated, the resulting constexpr evaluation might take too long. The default is 33554432 (1&amp;lt;&amp;lt;25).</source>
          <target state="translated">Установите максимальное количество операций во время одной оценки constexpr. Даже если количество итераций одного цикла ограничено указанным выше пределом, если имеется несколько вложенных циклов, и каждый из них имеет много итераций, но все же меньше указанного выше предела, или если в теле некоторого цикла или даже за пределами loop необходимо вычислить слишком много выражений, итоговая оценка constexpr может занять слишком много времени. По умолчанию 33554432 (1 &amp;lt;&amp;lt; 25).</target>
        </trans-unit>
        <trans-unit id="2d5dabb85d70dc403cca1e25a382c4592a347c35" translate="yes" xml:space="preserve">
          <source>Set the maximum number of template instantiation notes for a single warning or error to &lt;var&gt;n&lt;/var&gt;. The default value is 10.</source>
          <target state="translated">Установите максимальное количество примечаний по созданию экземпляров шаблона для одного предупреждения или ошибки равным &lt;var&gt;n&lt;/var&gt; . Значение по умолчанию - 10.</target>
        </trans-unit>
        <trans-unit id="47ea880c254638d27a922dbb4046bb1a923dc25e" translate="yes" xml:space="preserve">
          <source>Set the memory model in force on the processor to one of</source>
          <target state="translated">Установите модель памяти,действующую на процессоре,в одно из следующих значений</target>
        </trans-unit>
        <trans-unit id="d8ff5750579f8eb1fad99e9d99cd9274a1f87812" translate="yes" xml:space="preserve">
          <source>Set the merge weights of the &lt;var&gt;directory1&lt;/var&gt; and &lt;var&gt;directory2&lt;/var&gt;, respectively. The default weights are 1 for both.</source>
          <target state="translated">Установите веса слияния &lt;var&gt;directory1&lt;/var&gt; и &lt;var&gt;directory2&lt;/var&gt; соответственно. Вес по умолчанию равен 1 для обоих.</target>
        </trans-unit>
        <trans-unit id="e2cd2322187a5ecdca2024a2990e890bcbbf394b" translate="yes" xml:space="preserve">
          <source>Set the name of the library function used for 32-bit signed division to &lt;var&gt;name&lt;/var&gt;. This only affects the name used in the &amp;lsquo;</source>
          <target state="translated">Задайте имя библиотечной функции, используемой для 32-битного деления со &lt;var&gt;name&lt;/var&gt; . Это влияет только на имя, используемое в '</target>
        </trans-unit>
        <trans-unit id="eaddd89d6c99265ee29e5fc045d536ee700140e2" translate="yes" xml:space="preserve">
          <source>Set the offset between the top of the stack and the stack pointer. E.g., a value of 8 means that the eight bytes in the range &lt;code&gt;sp+0&amp;hellip;sp+7&lt;/code&gt; can be used by leaf functions without stack allocation. Values other than &amp;lsquo;</source>
          <target state="translated">Установите смещение между вершиной стека и указателем стека. Например, значение 8 означает, что восемь байтов в диапазоне &lt;code&gt;sp+0&amp;hellip;sp+7&lt;/code&gt; могут использоваться листовыми функциями без выделения стека. Значения, отличные от '</target>
        </trans-unit>
        <trans-unit id="adf223dfbaa5deae634aec76651716f604f84bf4" translate="yes" xml:space="preserve">
          <source>Set the output profile directory. Default output directory name is &lt;var&gt;merged_profile&lt;/var&gt;.</source>
          <target state="translated">Задайте каталог выходного профиля. Имя каталога вывода по умолчанию - &lt;var&gt;merged_profile&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4acbb536ee226dd76cd7df2c462f1fe127b3f4" translate="yes" xml:space="preserve">
          <source>Set the output profile directory. Default output name is &lt;var&gt;rewrite_profile&lt;/var&gt;.</source>
          <target state="translated">Задайте каталог выходного профиля. Имя вывода по умолчанию - &lt;var&gt;rewrite_profile&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="7c0d7893ab57d9f01b9082ae29d8d0f77891bc37" translate="yes" xml:space="preserve">
          <source>Set the prevailing mode of the floating-point unit. This determines the floating-point mode that is provided and expected at function call and return time. Making this mode match the mode you predominantly need at function start can make your programs smaller and faster by avoiding unnecessary mode switches.</source>
          <target state="translated">Установите преобладающий режим работы устройства с плавающей запятой.Это определяет режим с плавающей запятой,который предоставляется и ожидается при вызове функции и времени возврата.Приведение этого режима в соответствие с режимом,преобладающим при запуске функций,позволяет сократить и ускорить выполнение программ,избегая ненужных переключений режимов.</target>
        </trans-unit>
        <trans-unit id="762a949ea014b3f016344afca377c6c1fd120d31" translate="yes" xml:space="preserve">
          <source>Set the threshold for hot counter value.</source>
          <target state="translated">Установите порог для значения горячего счетчика.</target>
        </trans-unit>
        <trans-unit id="d1910b7ca1cbad135b71510c6caa598c927aef30" translate="yes" xml:space="preserve">
          <source>Set the verbose mode.</source>
          <target state="translated">Установите подробный режим.</target>
        </trans-unit>
        <trans-unit id="44eafd221897534f159d32b54a0983fafc5fa037" translate="yes" xml:space="preserve">
          <source>Set the wide execution character set, used for wide string and character constants. The default is UTF-32 or UTF-16, whichever corresponds to the width of &lt;code&gt;wchar_t&lt;/code&gt;. As with</source>
          <target state="translated">Установите широкий набор символов выполнения, используемый для широких строковых и символьных констант. По умолчанию используется UTF-32 или UTF-16, в зависимости от того, что соответствует ширине &lt;code&gt;wchar_t&lt;/code&gt; . Как и с</target>
        </trans-unit>
        <trans-unit id="bd789ae89e298186acebd68ef9887011219d47fa" translate="yes" xml:space="preserve">
          <source>Set to 1 if the prefetch hints should be issued for non-constant strides. Set to 0 if prefetch hints should be issued only for strides that are known to be constant and below</source>
          <target state="translated">Установите на 1,если предвыборные подсказки должны выдаваться для нестандартных шаганий.Установите 0,если предварительная трассировка должна выдаваться только для постоянных и нижеуказанных шагов.</target>
        </trans-unit>
        <trans-unit id="dd1bb2779bea0f760b1f72945047e7f54094a87c" translate="yes" xml:space="preserve">
          <source>Sets a maximum number of hash table slots to use during variable tracking dataflow analysis of any function. If this limit is exceeded with variable tracking at assignments enabled, analysis for that function is retried without it, after removing all debug insns from the function. If the limit is exceeded even without debug insns, var tracking analysis is completely disabled for the function. Setting the parameter to zero makes it unlimited.</source>
          <target state="translated">Устанавливает максимальное количество слотов хэш-таблиц для использования во время анализа потока данных переменных любой функции.Если этот предел превышен при включённом отслеживании переменных при присваивании,то анализ для этой функции перепроверяется без него,после удаления всех отладочных вставок из функции.Если этот предел превышен даже без отладочных вставок,анализ отслеживания переменных для этой функции полностью отключается.Установка параметра в ноль делает его неограниченным.</target>
        </trans-unit>
        <trans-unit id="f4f7877852a522804eb61c6aaaac182eccebc50d" translate="yes" xml:space="preserve">
          <source>Sets a maximum number of recursion levels when attempting to map variable names or debug temporaries to value expressions. This trades compilation time for more complete debug information. If this is set too low, value expressions that are available and could be represented in debug information may end up not being used; setting this higher may enable the compiler to find more complex debug expressions, but compile time and memory use may grow.</source>
          <target state="translated">Устанавливает максимальное количество уровней рекурсии при попытке сопоставить имена переменных или отладить временные значения выражений.Позволяет торговать временем компиляции для получения более полной отладочной информации.Если задать слишком низкий уровень,то доступные выражения-значения,которые могут быть представлены в отладочной информации,могут в конечном итоге не использоваться;установка более высокого уровня может позволить компилятору найти более сложные отладочные выражения,но при этом время компиляции и использование памяти может увеличиться.</target>
        </trans-unit>
        <trans-unit id="08565d52b6000f5a1a238ccd0e999b10428d5194" translate="yes" xml:space="preserve">
          <source>Sets a threshold on the number of debug markers (e.g. begin stmt markers) to avoid complexity explosion at inlining or expanding to RTL. If a function has more such gimple stmts than the set limit, such stmts will be dropped from the inlined copy of a function, and from its RTL expansion.</source>
          <target state="translated">Устанавливает порог по количеству отладочных маркеров (например,маркеры начала stmt),чтобы избежать взрыва сложности при встраивании или расширении до RTL.Если функция имеет больше таких gimple stmts,чем заданный предел,то такие stmts будут выпадать из инкрустированной копии функции,а также из ее RTL-расширения.</target>
        </trans-unit>
        <trans-unit id="adcadd51c3ed80675dda04731a772d76952914d2" translate="yes" xml:space="preserve">
          <source>Sets the &amp;lsquo;</source>
          <target state="translated">Устанавливает '</target>
        </trans-unit>
        <trans-unit id="a6ae8e4718c6afa26e8b518098d3712cd253890c" translate="yes" xml:space="preserve">
          <source>Sets the latency the scheduler should assume for typical memory references as seen by the application. This number is highly dependent on the memory access patterns used by the application and the size of the external cache on the machine.</source>
          <target state="translated">Устанавливает латентность,которую планировщик должен предполагать для типичных обращений к памяти,как видит приложение.Это число сильно зависит от шаблонов доступа к памяти,используемых приложением,и размера внешнего кэша на машине.</target>
        </trans-unit>
        <trans-unit id="0fa1baca9f030dc5a8c265ad0c68afe11b1a04b0" translate="yes" xml:space="preserve">
          <source>Sets the model of atomic operations and additional parameters as a comma separated list. For details on the atomic built-in functions see &lt;a href=&quot;_005f_005fatomic-builtins#g_t_005f_005fatomic-Builtins&quot;&gt;__atomic Builtins&lt;/a&gt;. The following models and parameters are supported:</source>
          <target state="translated">Устанавливает модель атомарных операций и дополнительные параметры в виде списка, разделенного запятыми. Подробнее об атомарных встроенных функциях см. &lt;a href=&quot;_005f_005fatomic-builtins#g_t_005f_005fatomic-Builtins&quot;&gt;__Atomic Builtins&lt;/a&gt; . Поддерживаются следующие модели и параметры:</target>
        </trans-unit>
        <trans-unit id="7b750af233a34aa4bcb53aaa3706d626453eaabe" translate="yes" xml:space="preserve">
          <source>Sets the options</source>
          <target state="translated">Устанавливает параметры</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="d6ea280156ba317ca69c3a8a9a76acf1203369c2" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; is nearly equivalent to passing</source>
          <target state="translated">Установка &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; почти эквивалентна передаче</target>
        </trans-unit>
        <trans-unit id="4baf79749a36e87ddec4441787603ea1ca97f46a" translate="yes" xml:space="preserve">
          <source>Setting the rounding of floating-point operations to less than the default 80 bits can speed some programs by 2% or more. Note that some mathematical libraries assume that extended-precision (80-bit) floating-point operations are enabled by default; routines in such libraries could suffer significant loss of accuracy, typically through so-called &amp;ldquo;catastrophic cancellation&amp;rdquo;, when this option is used to set the precision to less than extended precision.</source>
          <target state="translated">Установка для округления операций с плавающей запятой значения меньше 80 бит по умолчанию может ускорить некоторые программы на 2% или более. Обратите внимание, что некоторые математические библиотеки предполагают, что операции с плавающей запятой расширенной точности (80-битные) включены по умолчанию; подпрограммы в таких библиотеках могут понести значительную потерю точности, обычно из-за так называемой &amp;laquo;катастрофической отмены&amp;raquo;, когда этот параметр используется для установки точности ниже расширенной.</target>
        </trans-unit>
        <trans-unit id="159856f2826a4750f12fa9fc42e4ec6a3bb1171a" translate="yes" xml:space="preserve">
          <source>Several parameters control the tree inliner used in GCC. This number sets the maximum number of instructions (counted in GCC&amp;rsquo;s internal representation) in a single function that the tree inliner considers for inlining. This only affects functions declared inline and methods implemented in a class declaration (C++).</source>
          <target state="translated">Несколько параметров управляют инлайнером дерева, используемым в GCC. Это число устанавливает максимальное количество инструкций (подсчитанных во внутреннем представлении GCC) в одной функции, которую инлайнер дерева рассматривает для встраивания. Это влияет только на функции, объявленные встроенными, и методы, реализованные в объявлении класса (C ++).</target>
        </trans-unit>
        <trans-unit id="c8709090fc808377d68cf694b1141ced48d2601f" translate="yes" xml:space="preserve">
          <source>Shift amount register</source>
          <target state="translated">Реестр сменной суммы</target>
        </trans-unit>
        <trans-unit id="7fc448ecaaa6700b369be5c5a12e31cfde0d7dab" translate="yes" xml:space="preserve">
          <source>Shift count operand.</source>
          <target state="translated">Сменный операнд.</target>
        </trans-unit>
        <trans-unit id="42345631131c9de97e00bb02984b6911be9a2bc4" translate="yes" xml:space="preserve">
          <source>Shift count operands are probably signed more often than unsigned. Warning about this would cause far more annoyance than good.</source>
          <target state="translated">Операндов со сдвигом,вероятно,подписывают чаще,чем неподписанные.Предупреждение об этом вызовет гораздо больше раздражения,чем пользы.</target>
        </trans-unit>
        <trans-unit id="dfe491f4c15e6a3a57cef7ef5658d06a18ca9681" translate="yes" xml:space="preserve">
          <source>Short Table of Contents</source>
          <target state="translated">Краткое содержание</target>
        </trans-unit>
        <trans-unit id="a3534d8b3591be1366a119ae1eea2780cd912060" translate="yes" xml:space="preserve">
          <source>Short instructions are used opportunistically.</source>
          <target state="translated">Короткие инструкции используются оппортунистически.</target>
        </trans-unit>
        <trans-unit id="4826dabecb65371171f46aae0549ce70f11c795f" translate="yes" xml:space="preserve">
          <source>Short structures and unions are those whose size and alignment match that of some integer type.</source>
          <target state="translated">Короткие структуры и союзы-это структуры,размер и выравнивание которых совпадают с размерами некоторого целочисленного типа.</target>
        </trans-unit>
        <trans-unit id="daad79e8ea5157946382f52ca69c7ec66d0706c4" translate="yes" xml:space="preserve">
          <source>Shorten some address references at link time, when possible; uses the linker option</source>
          <target state="translated">Укорачивайте некоторые адресные ссылки во время ссылки,когда это возможно;используйте опцию линкера</target>
        </trans-unit>
        <trans-unit id="bf389fd92901d9498a4ee5b421310db154ba5af7" translate="yes" xml:space="preserve">
          <source>Shrink-wrap separate parts of the prologue and epilogue separately, so that those parts are only executed when needed. This option is on by default, but has no effect unless</source>
          <target state="translated">Отдельно оберните отдельные части пролога и эпилога,чтобы эти части выполнялись только при необходимости.Эта опция включена по умолчанию,но не действует,если только</target>
        </trans-unit>
        <trans-unit id="3f90a5630eb62603c02b0eff8ce0d082b77006ba" translate="yes" xml:space="preserve">
          <source>Sign bit count. Return the number of consecutive bits in &lt;var&gt;value&lt;/var&gt; that have the same value as the sign bit. The result is the number of leading sign bits minus one, giving the number of redundant sign bits in &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Количество битов знака. Возвращает количество последовательных битов в &lt;var&gt;value&lt;/var&gt; которые имеют то же значение, что и знаковый бит. Результатом является количество ведущих битов знака минус один, что дает количество избыточных битов знака в &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e061183cc39dbc6eb9f3804e7d82ef6aa01d7857" translate="yes" xml:space="preserve">
          <source>Signed 11-bit integer constant</source>
          <target state="translated">Подписанная 11-битная целочисленная константа</target>
        </trans-unit>
        <trans-unit id="17824e219e7e79f7144971183788b809379ad314" translate="yes" xml:space="preserve">
          <source>Signed 12-bit integer constant, for use in MOVI instructions</source>
          <target state="translated">Подписанная 12-битная целочисленная константа,для использования в инструкциях MOVI.</target>
        </trans-unit>
        <trans-unit id="2e366745a62f714ade88d7c0bd1a8931142b604e" translate="yes" xml:space="preserve">
          <source>Signed 13-bit constant</source>
          <target state="translated">Подписанная 13-битная константа</target>
        </trans-unit>
        <trans-unit id="4994a9f7bbfde0f98689a94230ffb2b0e3e5762e" translate="yes" xml:space="preserve">
          <source>Signed 13-bit constant, sign-extended to 32 or 64 bits</source>
          <target state="translated">Подписанная 13-битная константа,знак расширенный до 32 или 64 бит.</target>
        </trans-unit>
        <trans-unit id="7551ab4b6a7325d726d85dd8a288a32c7ad688ad" translate="yes" xml:space="preserve">
          <source>Signed 14-bit integer constant</source>
          <target state="translated">Подписанная 14-битная целочисленная константа</target>
        </trans-unit>
        <trans-unit id="db68d6aa5c4dcc27204f228e4dfa27c519354e21" translate="yes" xml:space="preserve">
          <source>Signed 16 bit integer (in the range -32768 to 32767)</source>
          <target state="translated">Подписанное 16-битное целое число (в диапазоне от -32768 до 32767).</target>
        </trans-unit>
        <trans-unit id="d6ec7293b64cddf6362ece0a6f483e55c61b7cd4" translate="yes" xml:space="preserve">
          <source>Signed 16-bit constant</source>
          <target state="translated">Подписанная 16-битная константа</target>
        </trans-unit>
        <trans-unit id="d5fed732c6b8716304eae31b104725b0d08b2445" translate="yes" xml:space="preserve">
          <source>Signed 16-bit constant (-32768&amp;ndash;32767)</source>
          <target state="translated">16-битная константа со знаком (-32768&amp;ndash;32767)</target>
        </trans-unit>
        <trans-unit id="404101bb3dac0d3736cddd146de5ec8c922d9a53" translate="yes" xml:space="preserve">
          <source>Signed 16-bit constant shifted left 16 bits</source>
          <target state="translated">Подпись 16-битная постоянная смещена влево 16 бит</target>
        </trans-unit>
        <trans-unit id="98375bb355d2181393a2db0e74a7f1e184e3c272" translate="yes" xml:space="preserve">
          <source>Signed 16-bit constant shifted left 16 bits. (Used with &lt;code&gt;l.movhi&lt;/code&gt;)</source>
          <target state="translated">Знаковая 16-битная константа, сдвинутая влево на 16 бит. (Используется с &lt;code&gt;l.movhi&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fdfaee517f78cd79192cde0e2bb40ec8bf507d88" translate="yes" xml:space="preserve">
          <source>Signed 16-bit integer constant.</source>
          <target state="translated">Подписанная 16-битная целочисленная константа.</target>
        </trans-unit>
        <trans-unit id="8577a9d2f5d95e6a261403245526b07f6b430127" translate="yes" xml:space="preserve">
          <source>Signed 3 bit integer (in the range -3 to 4)</source>
          <target state="translated">Подписанное 3-битное целое число (в диапазоне от -3 до 4).</target>
        </trans-unit>
        <trans-unit id="258aee98ee71baaef5cdc776f36eef32bd26c55b" translate="yes" xml:space="preserve">
          <source>Signed 4 bit integer (in the range -8 to 7)</source>
          <target state="translated">Подписанное 4-битное целое число (в диапазоне от -8 до 7).</target>
        </trans-unit>
        <trans-unit id="7a883110530359bda18df559e5a279936aa50db5" translate="yes" xml:space="preserve">
          <source>Signed 5-bit constant</source>
          <target state="translated">Подписанная 5-разрядная константа</target>
        </trans-unit>
        <trans-unit id="2e5e45d0ac38a40e675de10e051b4dbe8bc4276a" translate="yes" xml:space="preserve">
          <source>Signed 5-bit constant integer that can be loaded into an altivec register.</source>
          <target state="translated">Подписанное 5-битное целое константное число,которое может быть загружено в регистр altivec.</target>
        </trans-unit>
        <trans-unit id="5f652f0cc47ab3c928aefe77d9c5b400f8c289d3" translate="yes" xml:space="preserve">
          <source>Signed 5-bit integer constant</source>
          <target state="translated">Подписанная 5-разрядная целочисленная константа</target>
        </trans-unit>
        <trans-unit id="c9e48c645aa0b87a95100fbbeff86623f971b222" translate="yes" xml:space="preserve">
          <source>Signed 7 bit integer (in the range -64 to 63)</source>
          <target state="translated">Подписанное 7-битное целое число (в диапазоне от -64 до 63).</target>
        </trans-unit>
        <trans-unit id="a86e1174fb545f9d4ebd6f20bf01348603efafe4" translate="yes" xml:space="preserve">
          <source>Signed 8-bit integer constant, for use in ADDI instructions</source>
          <target state="translated">Подписанная 8-битная целочисленная константа,для использования в инструкциях ADDI</target>
        </trans-unit>
        <trans-unit id="4c94edb4279f10dbe5d95209fe71d0f96db252dc" translate="yes" xml:space="preserve">
          <source>Signed 8-bit integer constant.</source>
          <target state="translated">Подписанная 8-битная целочисленная константа.</target>
        </trans-unit>
        <trans-unit id="d272c273c51624f1dfdb18228a674026c85385e3" translate="yes" xml:space="preserve">
          <source>Signed constant that fits in 32 bits</source>
          <target state="translated">Подписанная константа,которая помещается в 32 бита.</target>
        </trans-unit>
        <trans-unit id="f1265b4b3d2e744579f9692016435bbe3b254213" translate="yes" xml:space="preserve">
          <source>Signed constant that fits in 4 bits</source>
          <target state="translated">Подписанная константа,которая помещается в 4 бита.</target>
        </trans-unit>
        <trans-unit id="5fe2facf8fa221348236eecc0c22b38ad313e882" translate="yes" xml:space="preserve">
          <source>Signed constant that fits in 5 bits</source>
          <target state="translated">Подписанная константа,которая помещается в 5 бит.</target>
        </trans-unit>
        <trans-unit id="545b5582447a4f3516b54b2967e68fc278ea9ad8" translate="yes" xml:space="preserve">
          <source>Signed constant that fits in 6 bits</source>
          <target state="translated">Подписанная константа,которая помещается в 6 бит.</target>
        </trans-unit>
        <trans-unit id="fd73c4e772cdc0f6e26ab1480292e828319d76b5" translate="yes" xml:space="preserve">
          <source>Signed immediate 10-bit value.</source>
          <target state="translated">Подписано мгновенное 10-битное значение.</target>
        </trans-unit>
        <trans-unit id="c5a8dbe6ead600b15b992c7b4bcf2efdb71ef681" translate="yes" xml:space="preserve">
          <source>Signed immediate 11-bit value.</source>
          <target state="translated">Подписано немедленное 11-битное значение.</target>
        </trans-unit>
        <trans-unit id="a9356a59861e3c3eddcf1709eba030136286aebc" translate="yes" xml:space="preserve">
          <source>Signed immediate 15-bit value.</source>
          <target state="translated">Подписано немедленное 15-битное значение.</target>
        </trans-unit>
        <trans-unit id="bd0cffbf0853e1a9f6e67fd93c760a34d836c070" translate="yes" xml:space="preserve">
          <source>Signed immediate 16-bit value.</source>
          <target state="translated">Подписано немедленное 16-битное значение.</target>
        </trans-unit>
        <trans-unit id="a37369d99fd2a342362e9005528625a1180d725a" translate="yes" xml:space="preserve">
          <source>Signed immediate 17-bit value.</source>
          <target state="translated">Подписано немедленное 17-битное значение.</target>
        </trans-unit>
        <trans-unit id="58ba7a0e897855d208deefd5f1aafdaebb7cbcad" translate="yes" xml:space="preserve">
          <source>Signed immediate 19-bit value.</source>
          <target state="translated">Подписано немедленное 19-битное значение.</target>
        </trans-unit>
        <trans-unit id="d83875e20f0c4256559e6ad41957f6681f0f9fa4" translate="yes" xml:space="preserve">
          <source>Signed immediate 20-bit value.</source>
          <target state="translated">Подписано мгновенное 20-битное значение.</target>
        </trans-unit>
        <trans-unit id="772df3ebaa8079e1347500ef9b5a7974d1afc6fb" translate="yes" xml:space="preserve">
          <source>Signed immediate 5-bit value.</source>
          <target state="translated">Подписано немедленное 5-битное значение.</target>
        </trans-unit>
        <trans-unit id="bed3d07e5abfe469789a6ad8fe518ca8c515cc56" translate="yes" xml:space="preserve">
          <source>Signed number whose magnitude is greater than 0x100</source>
          <target state="translated">Подписанное число,чья величина больше 0x100</target>
        </trans-unit>
        <trans-unit id="7dd7717c5fdb2f197d7bb925e85ce43ecfb76df1" translate="yes" xml:space="preserve">
          <source>Signed number whose magnitude is greater than 0x80</source>
          <target state="translated">Подписанное число,магнитуда которого больше 0x80</target>
        </trans-unit>
        <trans-unit id="0939c3fe5c0d5d2bff40d1b5db20a06321bba976" translate="yes" xml:space="preserve">
          <source>Similar to</source>
          <target state="translated">Подобно</target>
        </trans-unit>
        <trans-unit id="d539a06616b59e9c0b7a9e23630c3741a65d5d1c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; but takes an extra argument specifying an upper bound for &lt;var&gt;size&lt;/var&gt; in case its value cannot be computed at compile time, for use by</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; , но принимает дополнительный аргумент, определяющий верхнюю границу для &lt;var&gt;size&lt;/var&gt; в случае, если его значение не может быть вычислено во время компиляции, для использования</target>
        </trans-unit>
        <trans-unit id="ea1f6fc78d2de9307f7b88ab0282a15257495c59" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_bswap16&lt;/code&gt;, except the argument and return types are 32 bit.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_bswap16&lt;/code&gt; , за исключением того, что типы аргумента и возвращаемого значения являются 32-битными.</target>
        </trans-unit>
        <trans-unit id="287de43f15b38812ca35a70d4d7f3e0bbc21298b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_bswap32&lt;/code&gt;, except the argument and return types are 64 bit.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_bswap32&lt;/code&gt; , за исключением того, что типы аргументов и возвращаемых значений являются 64-битными.</target>
        </trans-unit>
        <trans-unit id="103307679937d9d214ea5a77118584bb62226212" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_clrsb&lt;/code&gt;, except the argument type is &lt;code&gt;long long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_clrsb&lt;/code&gt; , за исключением того, что тип аргумента &lt;code&gt;long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9811f01cbffd069bcc5462448b89027d4f2ec50" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_clrsb&lt;/code&gt;, except the argument type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_clrsb&lt;/code&gt; , за исключением &lt;code&gt;long&lt;/code&gt; типа аргумента .</target>
        </trans-unit>
        <trans-unit id="df68abde10040a09c09e6b0b67f91ab09e952842" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_clz&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_clz&lt;/code&gt; , за исключением того, что тип аргумента - &lt;code&gt;unsigned long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f59576794aa7ba8bdf20faea4b1656733f7cd810" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_clz&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_clz&lt;/code&gt; , за исключением того, что тип аргумента имеет значение &lt;code&gt;unsigned long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba918034130e18befe466fce358d135c77bcf300" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_ctz&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_ctz&lt;/code&gt; , за исключением того, что тип аргумента - &lt;code&gt;unsigned long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18c0fbde15c08851968dc27a9a4c9c3e731fb512" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_ctz&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_ctz&lt;/code&gt; , за исключением того, что тип аргумента является &lt;code&gt;unsigned long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c02104ee06367b8a197baa2a19b2abc09a1e31d1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_ffs&lt;/code&gt;, except the argument type is &lt;code&gt;long long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_ffs&lt;/code&gt; , за исключением того, что тип аргумента &lt;code&gt;long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d6beb2a9ac335ca9f6e943f00f7fb214000908" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_ffs&lt;/code&gt;, except the argument type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_ffs&lt;/code&gt; , за исключением того, что тип аргумента &lt;code&gt;long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41c22622d956d1ffb73b5455c532f810279add42" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except a warning is generated if the target floating-point format does not support infinities.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что выдается предупреждение, если целевой формат с плавающей запятой не поддерживает бесконечности.</target>
        </trans-unit>
        <trans-unit id="a3824e629002ce80fc504751d9f1603b9da7d561" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="008da3964b6f0002d0e9671a9ad995b6c420ce79" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что тип возврата - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3a7adf1a6224d5bf5cb7c613e9a778b88a8c44b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except the return type is &lt;code&gt;__float128&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;__float128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1ffbe411a36969832b5f38087ea616365eec591" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except the return type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="186ce490303bc44a81961f86210149a388cbfd93" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_huge_val&lt;/code&gt;, except the return type is &lt;code&gt;long double&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_huge_val&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;long double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4256a1779131be828664fbc4607bd86235fc8f63" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal128&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3fc9b57c65d245ef2ebac66b67318e250147f5d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal32&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec19c1b8f5bd592906a07150f56b4d809cec3b3a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal64&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57f4cede60e9110addaf6366460fd28f55f54667" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59d4025e2d73946d427adb0f6d32cc098e01d334" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1d67c7c6c9f71b26da8ec675376459c0921c713" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;__float128&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;__float128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="896466811c11f3c4ee9e850f02d545950afb9b4d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;float&lt;/code&gt;. This function is suitable for implementing the ISO C99 macro &lt;code&gt;INFINITY&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;float&lt;/code&gt; . Эта функция подходит для реализации макроса ISO C99 &lt;code&gt;INFINITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76bb498c29da1b35254a143c1ace9763a1b7c3a7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_inf&lt;/code&gt;, except the return type is &lt;code&gt;long double&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_inf&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;long double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d97d51092a352913796ed842ffe0791359432b2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal128&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53d0a1658ae40e15391cc06844539577593fad36" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal32&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0fb2196b87a982f142cbeace7c2dfa53a9a5586" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;_Decimal64&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Decimal64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="972fe72faee34d4a1bafa2164a917e9478d32f29" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="517865e97371f1de64149fe1cc44de8533e7d916" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80a4f0bb5594bf8db6aa07b69d98290c7b0cb4d2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;__float128&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;__float128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee7af1fac130e9139e3597fcacf0ac51e23ffa68" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f02308aa234b8f5dba187e0535ecce86dade187" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the return type is &lt;code&gt;long double&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;long double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c9ad9b208b6e73ec53236ae7ef08d2a9f0beabb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nan&lt;/code&gt;, except the significand is forced to be a signaling NaN. The &lt;code&gt;nans&lt;/code&gt; function is proposed by &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n965.htm&quot;&gt;WG14 N965&lt;/a&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nan&lt;/code&gt; , за исключением того, что мантисса вынуждена быть сигнальным NaN. Функция &lt;code&gt;nans&lt;/code&gt; предложена &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n965.htm&quot;&gt;WG14 N965&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25d07b665f89fcc40387d17242580a6c52085352" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nans&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nans&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="125a42543c42a9a4c876178d1cd519e3e1ac3337" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nans&lt;/code&gt;, except the return type is &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nans&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c928fffe5233a8745a6b29699edadd2bd3d1840c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nans&lt;/code&gt;, except the return type is &lt;code&gt;__float128&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nans&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;__float128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c71386ef3f149c7961c5dd435e803b5b814adc62" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nans&lt;/code&gt;, except the return type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_nans&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3b4d3c3ce7578550309b9e1b7c63b2aeae76345" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_nans&lt;/code&gt;, except the return type is &lt;code&gt;long double&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_nans&lt;/code&gt; , за исключением того, что тип возвращаемого значения - &lt;code&gt;long double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88f8bef8cb3e9f1b7034b6cd67d536931b56ab97" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_parity&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_parity&lt;/code&gt; , за исключением того, что тип аргумента - &lt;code&gt;unsigned long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b8444edd220546f2658052bf55756594cf3d7e6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_parity&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_parity&lt;/code&gt; , за исключением того, что тип аргумента имеет значение &lt;code&gt;unsigned long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6da5b45f1e360ae211b94e56690a0b8fa88ee21" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_popcount&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_popcount&lt;/code&gt; , за исключением того, что тип аргумента - &lt;code&gt;unsigned long long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff3e55487db84f15ffa29a16f3d14063de2220f3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_popcount&lt;/code&gt;, except the argument type is &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;__builtin_popcount&lt;/code&gt; , за исключением того, что тип аргумента является &lt;code&gt;unsigned long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6bdffa702ce1bb4acc9747edb48016c4599e76d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_powi&lt;/code&gt;, except the argument and return types are &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_powi&lt;/code&gt; , за исключением того, что типы аргументов и возвращаемых значений являются &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c49d8fe4e2b5fa5d1e76762b1beb13a3295e5948" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;__builtin_powi&lt;/code&gt;, except the argument and return types are &lt;code&gt;long double&lt;/code&gt;.</source>
          <target state="translated">Подобно &lt;code&gt;__builtin_powi&lt;/code&gt; , за исключением того, что типы аргумента и возвращаемого значения - &lt;code&gt;long double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c1e3e4bbd07650298754513f3e3a44bed8e82b1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;isinf&lt;/code&gt;, except the return value is -1 for an argument of &lt;code&gt;-Inf&lt;/code&gt; and 1 for an argument of &lt;code&gt;+Inf&lt;/code&gt;. Note while the parameter list is an ellipsis, this function only accepts exactly one floating-point argument. GCC treats this parameter as type-generic, which means it does not do default promotion from float to double.</source>
          <target state="translated">Аналогично &lt;code&gt;isinf&lt;/code&gt; , за исключением того, что возвращаемое значение равно -1 для аргумента &lt;code&gt;-Inf&lt;/code&gt; и 1 для аргумента &lt;code&gt;+Inf&lt;/code&gt; . Обратите внимание, что хотя список параметров представляет собой многоточие, эта функция принимает только один аргумент с плавающей запятой. GCC рассматривает этот параметр как универсальный, что означает, что по умолчанию он не продвигается с float на double.</target>
        </trans-unit>
        <trans-unit id="f30b0c19d239509bdc4a9dccfa54aa40be3c10c1" translate="yes" xml:space="preserve">
          <source>Similar to the stack- data- and const-align options above, these options arrange for stack frame, writable data and constants to all be 32-bit, 16-bit or 8-bit aligned. The default is 32-bit alignment.</source>
          <target state="translated">Подобно описанным выше опциям выравнивания стека данных и констант,эти опции позволяют выравнивать фрейм стека,записываемые данные и константы до 32-битного,16-битного или 8-битного выравнивания.По умолчанию 32-битное выравнивание.</target>
        </trans-unit>
        <trans-unit id="b4b6e8c3d6c60e969147af3a81dfe25b7338a216" translate="yes" xml:space="preserve">
          <source>Similarly to</source>
          <target state="translated">подобно</target>
        </trans-unit>
        <trans-unit id="8599edec7c2ed57ef8914ff45d22cb4fe06042cc" translate="yes" xml:space="preserve">
          <source>Similarly, access by taking the address, casting the resulting pointer and dereferencing the result has undefined behavior, even if the cast uses a union type, e.g.:</source>
          <target state="translated">Аналогичным образом,доступ путем взятия адреса,приведения результирующего указателя и разыменования результата имеет неопределённое поведение,даже если приведение использует союзный тип,например</target>
        </trans-unit>
        <trans-unit id="41ba9557152bce164799d0130f0eb9f9280e308f" translate="yes" xml:space="preserve">
          <source>Similarly, compiling code with G++ that must use a C++ library other than the GNU C++ library requires specifying the location of the header files for that other library.</source>
          <target state="translated">Аналогичным образом,компиляция кода с G++,которая должна использовать библиотеку Си++,отличную от библиотеки Си++GNU,требует указания места расположения заголовочных файлов этой другой библиотеки.</target>
        </trans-unit>
        <trans-unit id="638ae03227c9ec9c0ea2e3c27a8de52a23a69e64" translate="yes" xml:space="preserve">
          <source>Similarly, it is not safe to access the global register variables from signal handlers or from more than one thread of control. Unless you recompile them specially for the task at hand, the system library routines may temporarily use the register for other things. Furthermore, since the register is not reserved exclusively for the variable, accessing it from handlers of asynchronous signals may observe unrelated temporary values residing in the register.</source>
          <target state="translated">Точно так же небезопасен доступ к глобальным регистровым переменным от обработчиков сигналов или от нескольких потоков управления.Если вы не перекомпилируете их специально для данной задачи,подпрограммы системной библиотеки могут временно использовать регистр для других целей.Более того,поскольку регистр не зарезервирован исключительно для переменной,доступ к нему из обработчиков асинхронных сигналов может наблюдать несвязанные временные значения,находящиеся в регистре.</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="33c848578be7e9d6967258af62c4197dfe644969" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;spu_add&lt;/code&gt; is a macro, the vector constant in the example is treated as four separate arguments. Wrap the entire argument in parentheses for this to work.</source>
          <target state="translated">Поскольку &lt;code&gt;spu_add&lt;/code&gt; - это макрос, векторная константа в примере рассматривается как четыре отдельных аргумента. Чтобы это сработало, заключите весь аргумент в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="59c049b9dd5a46fabeed926b81db03e50fbbf544" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;vec_add&lt;/code&gt; is a macro, the vector constant in the example is treated as four separate arguments. Wrap the entire argument in parentheses for this to work.</source>
          <target state="translated">Поскольку &lt;code&gt;vec_add&lt;/code&gt; - это макрос, векторная константа в примере рассматривается как четыре отдельных аргумента. Чтобы это сработало, заключите весь аргумент в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="f22660df453a96c806164b9cde945b16ac8135b9" translate="yes" xml:space="preserve">
          <source>Since GCC does not parse the assembler template, it has no visibility of any symbols it references. This may result in GCC discarding those symbols as unreferenced unless they are also listed as input, output, or goto operands.</source>
          <target state="translated">Так как GCC не разбирает ассемблерный шаблон,он не видит никаких символов,на которые ссылается.Это может привести к тому,что GCC отбросит эти символы как безымянные,если только они не перечислены также как входные,выходные или goto операнды.</target>
        </trans-unit>
        <trans-unit id="b000a8b411ebdceb551939a35ee69b160bbe25b6" translate="yes" xml:space="preserve">
          <source>Since ISO C99 defines this function in terms of &lt;code&gt;strtod&lt;/code&gt;, which we do not implement, a description of the parsing is in order. The string is parsed as by &lt;code&gt;strtol&lt;/code&gt;; that is, the base is recognized by leading &amp;lsquo;</source>
          <target state="translated">Поскольку ISO C99 определяет эту функцию в терминах &lt;code&gt;strtod&lt;/code&gt; , которую мы не реализуем, описание синтаксического анализа необходимо. Строка анализируется как &lt;code&gt;strtol&lt;/code&gt; ; то есть база распознается ведущими '</target>
        </trans-unit>
        <trans-unit id="892917377ab8c3ffb653fb42e72d9ed1bdd00343" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;__builtin_alloca&lt;/code&gt; function doesn&amp;rsquo;t validate its argument it is the responsibility of its caller to make sure the argument doesn&amp;rsquo;t cause it to exceed the stack size limit. The &lt;code&gt;__builtin_alloca&lt;/code&gt; function is provided to make it possible to allocate on the stack arrays of bytes with an upper bound that may be computed at run time. Since C99 Variable Length Arrays offer similar functionality under a portable, more convenient, and safer interface they are recommended instead, in both C99 and C++ programs where GCC provides them as an extension. See &lt;a href=&quot;variable-length#Variable-Length&quot;&gt;Variable Length&lt;/a&gt;, for details.</source>
          <target state="translated">Поскольку функция &lt;code&gt;__builtin_alloca&lt;/code&gt; не проверяет свой аргумент, ее вызывающая сторона несет ответственность за то, чтобы аргумент не превышал лимит размера стека. Функция &lt;code&gt;__builtin_alloca&lt;/code&gt; предназначена для того, чтобы можно было выделять в стеке массивы байтов с верхней границей, которая может быть вычислена во время выполнения. Поскольку массивы переменной длины C99 предлагают аналогичную функциональность в портативном, более удобном и безопасном интерфейсе, они рекомендуются вместо этого в программах на C99 и C ++, где GCC предоставляет их в качестве расширения. Подробнее см. &lt;a href=&quot;variable-length#Variable-Length&quot;&gt;Переменная длина&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4baf9c380b14381cf54e66f25724ec841c6dbbc1" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; function doesn&amp;rsquo;t validate its &lt;var&gt;size&lt;/var&gt; argument it is the responsibility of its caller to make sure the argument doesn&amp;rsquo;t cause it to exceed the stack size limit. The &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; function is provided to make it possible to allocate on the stack overaligned arrays of bytes with an upper bound that may be computed at run time. Since C99 Variable Length Arrays offer the same functionality under a portable, more convenient, and safer interface they are recommended instead, in both C99 and C++ programs where GCC provides them as an extension. See &lt;a href=&quot;variable-length#Variable-Length&quot;&gt;Variable Length&lt;/a&gt;, for details.</source>
          <target state="translated">Поскольку функция &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; не проверяет свой аргумент &lt;var&gt;size&lt;/var&gt; ее вызывающая сторона несет ответственность за то, чтобы аргумент не превышал предел размера стека. Функция &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; предназначена для того, чтобы можно было выделять в стеке массивы байтов с превышением допустимого диапазона с верхней границей, которая может быть вычислена во время выполнения. Поскольку массивы переменной длины C99 предлагают ту же функциональность в портативном, более удобном и безопасном интерфейсе, они рекомендуются вместо этого в программах на C99 и C ++, где GCC предоставляет их в качестве расширения. Подробнее см. &lt;a href=&quot;variable-length#Variable-Length&quot;&gt;Переменная длина&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0258c9861f729a6d6a1e77969495b52ec885eef9" translate="yes" xml:space="preserve">
          <source>Since the two variable &lt;code&gt;i&lt;/code&gt; in the example above have incompatible types, enabling only</source>
          <target state="translated">Поскольку две переменные &lt;code&gt;i&lt;/code&gt; в приведенном выше примере имеют несовместимые типы, разрешается только</target>
        </trans-unit>
        <trans-unit id="d388c0730bf40209b77631102dd7aa30902cc328" translate="yes" xml:space="preserve">
          <source>Since there are occasions where a switch case fall through is desirable, GCC provides an attribute, &lt;code&gt;__attribute__ ((fallthrough))&lt;/code&gt;, that is to be used along with a null statement to suppress this warning that would normally occur:</source>
          <target state="translated">Поскольку есть случаи, когда случай переключения желателен, GCC предоставляет атрибут &lt;code&gt;__attribute__ ((fallthrough))&lt;/code&gt; , который должен использоваться вместе с нулевым оператором для подавления этого предупреждения, которое обычно возникает:</target>
        </trans-unit>
        <trans-unit id="9d33bdb0c97347197e4dad14823945cd2f7cbcbd" translate="yes" xml:space="preserve">
          <source>Single functions can be exempted from inlining by marking them with the &lt;code&gt;noinline&lt;/code&gt; attribute.</source>
          <target state="translated">Отдельные функции можно освободить от встраивания, пометив их атрибутом &lt;code&gt;noinline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e677e33f125717883b72d6689c2a09bd6ab65171" translate="yes" xml:space="preserve">
          <source>Single-precision floating point:</source>
          <target state="translated">Одиночная точность с плавающей точкой:</target>
        </trans-unit>
        <trans-unit id="76bd493ed8bb81652313a482dd8f8e1005d241c8" translate="yes" xml:space="preserve">
          <source>Size of max partition for WHOPR (in estimated instructions). to provide an upper bound for individual size of partition. Meant to be used only with balanced partitioning.</source>
          <target state="translated">Размер макс.раздела для WHOPR (в расчетных инструкциях).для обеспечения верхней границы для индивидуального размера раздела.Используется только при сбалансированной разметке.</target>
        </trans-unit>
        <trans-unit id="e240bffdb5210e2a9fb3c1ceaef0728216aabbc4" translate="yes" xml:space="preserve">
          <source>Size of minimal partition for WHOPR (in estimated instructions). This prevents expenses of splitting very small programs into too many partitions.</source>
          <target state="translated">Размер минимального перегородки для WHOPR (в расчетных инструкциях).Это предотвращает расходы на разбиение очень маленьких программ на слишком большое количество разделов.</target>
        </trans-unit>
        <trans-unit id="feac389ca59136d24edc664765fb58951d1a7cbe" translate="yes" xml:space="preserve">
          <source>Slightly looser rules for escaped newlines.</source>
          <target state="translated">Слегка проигрышные правила для сбежавших новостей.</target>
        </trans-unit>
        <trans-unit id="6ae97113b3cf739a346d55e68c010f462fdbf99d" translate="yes" xml:space="preserve">
          <source>Small integer constants can use a shared data structure, reducing the compiler&amp;rsquo;s memory usage and increasing its speed. This sets the maximum value of a shared integer constant.</source>
          <target state="translated">Маленькие целочисленные константы могут использовать общую структуру данных, уменьшая использование памяти компилятором и увеличивая его скорость. Это устанавливает максимальное значение общей целочисленной константы.</target>
        </trans-unit>
        <trans-unit id="3c352006f28e617e3092550875bb98a37c3e499d" translate="yes" xml:space="preserve">
          <source>Small model objects live in the lower 16MB of memory (so that their addresses can be loaded with the &lt;code&gt;ld24&lt;/code&gt; instruction), and are callable with the &lt;code&gt;bl&lt;/code&gt; instruction.</source>
          <target state="translated">Небольшие объекты модели находятся в нижних 16 МБ памяти (так что их адреса могут быть загружены с &lt;code&gt;ld24&lt;/code&gt; инструкции ld24 ) и вызываются с помощью инструкции &lt;code&gt;bl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3714fde637fe384ead8d5eb02c1a4c25f02d146" translate="yes" xml:space="preserve">
          <source>Small model objects live in the lower 16MB of memory (so that their addresses can be loaded with the &lt;code&gt;ld24&lt;/code&gt; instruction).</source>
          <target state="translated">Небольшие объекты модели находятся в нижних 16 МБ памяти (так что их адреса могут быть загружены с &lt;code&gt;ld24&lt;/code&gt; инструкции ld24 ).</target>
        </trans-unit>
        <trans-unit id="87cc781515efd4b579bb2ce6bb66d4b4e6b7b78a" translate="yes" xml:space="preserve">
          <source>So the first alternative for the 68000&amp;rsquo;s logical-or could be written as &lt;code&gt;&quot;+m&quot; (output) : &quot;ir&quot; (input)&lt;/code&gt;. The second could be &lt;code&gt;&quot;+r&quot; 
(output): &quot;irm&quot; (input)&lt;/code&gt;. However, the fact that two memory locations cannot be used in a single instruction prevents simply using &lt;code&gt;&quot;+rm&quot; 
(output) : &quot;irm&quot; (input)&lt;/code&gt;. Using multi-alternatives, this might be written as &lt;code&gt;&quot;+m,r&quot; (output) : &quot;ir,irm&quot; (input)&lt;/code&gt;. This describes all the available alternatives to the compiler, allowing it to choose the most efficient one for the current conditions.</source>
          <target state="translated">Итак, первая альтернатива для логического ИЛИ 68000 может быть записана как &lt;code&gt;&quot;+m&quot; (output) : &quot;ir&quot; (input)&lt;/code&gt; . Второй может быть &lt;code&gt;&quot;+r&quot; (output): &quot;irm&quot; (input)&lt;/code&gt; . Однако тот факт, что две ячейки памяти не могут использоваться в одной инструкции, не позволяет просто использовать &lt;code&gt;&quot;+rm&quot; (output) : &quot;irm&quot; (input)&lt;/code&gt; . Используя множественные альтернативы, это можно записать как &lt;code&gt;&quot;+m,r&quot; (output) : &quot;ir,irm&quot; (input)&lt;/code&gt; . Здесь описаны все доступные альтернативы компилятору, что позволяет ему выбрать наиболее эффективный для текущих условий.</target>
        </trans-unit>
        <trans-unit id="3274a855ec94ec43ea5e4111fdadde792b5b93db" translate="yes" xml:space="preserve">
          <source>So, for example,</source>
          <target state="translated">Так,например,</target>
        </trans-unit>
        <trans-unit id="059987d18facbbac8112608278433db26ec67739" translate="yes" xml:space="preserve">
          <source>Software developers also use coverage testing in concert with testsuites, to make sure software is actually good enough for a release. Testsuites can verify that a program works as expected; a coverage program tests to see how much of the program is exercised by the testsuite. Developers can then determine what kinds of test cases need to be added to the testsuites to create both better testing and a better final product.</source>
          <target state="translated">Разработчики программного обеспечения также используют тестирование покрытия совместно с тестируемыми комплектами,чтобы убедиться,что программное обеспечение на самом деле достаточно хорошо для выпуска.Тестовые комплекты могут проверить,что программа работает так,как ожидается;тесты программы покрытия проверяют,как много программы выполняется тестирующим комплектом.Разработчики могут затем определить,какие виды тестовых сценариев должны быть добавлены в тестируемые комплекты,чтобы создать как лучшее тестирование,так и лучший конечный продукт.</target>
        </trans-unit>
        <trans-unit id="3fb15357d03c25c5a9704aae9669697852ee9b79" translate="yes" xml:space="preserve">
          <source>Solaris targets support the &lt;code&gt;cmn_err&lt;/code&gt; (or &lt;code&gt;__cmn_err__&lt;/code&gt;) format check. &lt;code&gt;cmn_err&lt;/code&gt; accepts a subset of the standard &lt;code&gt;printf&lt;/code&gt; conversions, and the two-argument &lt;code&gt;%b&lt;/code&gt; conversion for displaying bit-fields. See the Solaris man page for &lt;code&gt;cmn_err&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;cmn_err&lt;/code&gt; объекты Solaris поддерживают &lt;code&gt;__cmn_err__&lt;/code&gt; формата cmn_err (или __cmn_err__ ). &lt;code&gt;cmn_err&lt;/code&gt; принимает подмножество стандартных преобразований &lt;code&gt;printf&lt;/code&gt; и преобразование &lt;code&gt;%b&lt;/code&gt; с двумя аргументами для отображения битовых полей. См. Дополнительную информацию на странице руководства Solaris для &lt;code&gt;cmn_err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00b2aad45d07b70e1b7eefea74316913901b6e42" translate="yes" xml:space="preserve">
          <source>Some</source>
          <target state="translated">Some</target>
        </trans-unit>
        <trans-unit id="50992012bdba46e4be18c1991255dee68fa34161" translate="yes" xml:space="preserve">
          <source>Some 387 emulators do not support the &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt; and &lt;code&gt;sqrt&lt;/code&gt; instructions for the 387. Specify this option to avoid generating those instructions. This option is overridden when</source>
          <target state="translated">Некоторые эмуляторы 387 не поддерживают инструкции &lt;code&gt;sin&lt;/code&gt; , &lt;code&gt;cos&lt;/code&gt; и &lt;code&gt;sqrt&lt;/code&gt; для 387. Укажите этот параметр, чтобы избежать генерации этих инструкций. Эта опция отменяется, когда</target>
        </trans-unit>
        <trans-unit id="e8e19b82266af7db1443a3fea1acad2ebf9ad814" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;asm&lt;/code&gt; statements may need extra stack space for internal calculations. This can be guaranteed by clobbering stack registers unrelated to the inputs and outputs.</source>
          <target state="translated">Некоторым операторам &lt;code&gt;asm&lt;/code&gt; может потребоваться дополнительное пространство стека для внутренних вычислений. Это может быть гарантировано затиранием регистров стека, не связанных с входами и выходами.</target>
        </trans-unit>
        <trans-unit id="e9932d75815f4a1da8b9c3167803247d114d4d3e" translate="yes" xml:space="preserve">
          <source>Some AVR devices (AT90S8515, ATmega103) must not skip 32-bit instructions because of a hardware erratum. Skip instructions are &lt;code&gt;SBRS&lt;/code&gt;, &lt;code&gt;SBRC&lt;/code&gt;, &lt;code&gt;SBIS&lt;/code&gt;, &lt;code&gt;SBIC&lt;/code&gt; and &lt;code&gt;CPSE&lt;/code&gt;. The second macro is only defined if &lt;code&gt;__AVR_HAVE_JMP_CALL__&lt;/code&gt; is also set.</source>
          <target state="translated">Некоторые устройства AVR (AT90S8515, ATmega103) не должны пропускать 32-битные инструкции из-за аппаратной ошибки. Пропустить инструкции &lt;code&gt;SBRS&lt;/code&gt; , &lt;code&gt;SBRC&lt;/code&gt; , &lt;code&gt;SBIS&lt;/code&gt; , &lt;code&gt;SBIC&lt;/code&gt; и &lt;code&gt;CPSE&lt;/code&gt; . Второй макрос определяется, только если также установлено &lt;code&gt;__AVR_HAVE_JMP_CALL__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8587f1a252be44a26b4bf83b41b8cacfabe3c53" translate="yes" xml:space="preserve">
          <source>Some AVR devices support memories larger than the 64 KiB range that can be accessed with 16-bit pointers. To access memory locations outside this 64 KiB range, the content of a &lt;code&gt;RAMP&lt;/code&gt; register is used as high part of the address: The &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt; address register is concatenated with the &lt;code&gt;RAMPX&lt;/code&gt;, &lt;code&gt;RAMPY&lt;/code&gt;, &lt;code&gt;RAMPZ&lt;/code&gt; special function register, respectively, to get a wide address. Similarly, &lt;code&gt;RAMPD&lt;/code&gt; is used together with direct addressing.</source>
          <target state="translated">Некоторые устройства AVR поддерживают память размером более 64 КиБ, к которой можно получить доступ с помощью 16-битных указателей. Для доступа к ячейкам памяти за пределами этого диапазона 64 КиБ содержимое регистра &lt;code&gt;RAMP&lt;/code&gt; используется как старшая часть адреса: регистр адреса &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; объединяется с &lt;code&gt;RAMPZ&lt;/code&gt; специальной функции &lt;code&gt;RAMPX&lt;/code&gt; , &lt;code&gt;RAMPY&lt;/code&gt; , RAMPZ соответственно, чтобы получить широкий адрес. Аналогичным образом &lt;code&gt;RAMPD&lt;/code&gt; используется вместе с прямой адресацией.</target>
        </trans-unit>
        <trans-unit id="b652248718bfad5072f0c61fa63785c614519d9b" translate="yes" xml:space="preserve">
          <source>Some Cortex-M3 cores can cause data corruption when &lt;code&gt;ldrd&lt;/code&gt; instructions with overlapping destination and base registers are used. This option avoids generating these instructions. This option is enabled by default when</source>
          <target state="translated">Некоторые ядра Cortex-M3 могут вызвать повреждение данных при &lt;code&gt;ldrd&lt;/code&gt; инструкций ldrd с перекрывающимися целевым и базовым регистрами. Эта опция позволяет избежать генерации этих инструкций. Эта опция включена по умолчанию, когда</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
