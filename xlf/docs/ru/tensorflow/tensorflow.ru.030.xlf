<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="44d879e45f19c9532689762ba8424920b9bfe4cc" translate="yes" xml:space="preserve">
          <source>Dict of metric results keyed by name. The values of the dict can be one of the following: (1) instance of &lt;code&gt;Metric&lt;/code&gt; class. (2) Results of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple. &lt;code&gt;metric_tensor&lt;/code&gt; should be evaluated without any impact on state (typically is a pure computation results based on variables.). For example, it should not trigger the &lt;code&gt;update_op&lt;/code&gt; or requires any input fetching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909a303efd4136c5fdf13b2a25b3f731e087560f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names mapped to tuple of floats representing the mean and standard deviation of the training data (e.g., {&quot;foo&quot; : (0., 1.)}). Only need if &lt;code&gt;inference_input_type&lt;/code&gt; is &lt;code&gt;QUANTIZED_UINT8&lt;/code&gt;. real_input_value = (quantized_input_value - mean_value) / std_dev_value. (default {})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1f5c7726cca2a2b467cb0ffa34d4eeb72e4a3f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names to list of integers representing input shapes (e.g., {&quot;foo&quot; : [1, 16, 16, 3]}). Automatically determined when input shapes is None (e.g., {&quot;foo&quot; : None}). (default None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c06d03fccbcf390913553db386aaa71b9c2fea8" translate="yes" xml:space="preserve">
          <source>Dict or list of pairs of a boolean scalar tensor and a callable which returns a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17898922d89bbf7422792b3e546712173284779f" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments for &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508a643ac347c8b219c1ccfb18cd8a7355d609dd" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments to pass to &lt;code&gt;fn()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965ddba423e3bd39494a9aba3603fc61353b628d" translate="yes" xml:space="preserve">
          <source>Dict with keyword per-thread arguments for &lt;code&gt;merge_fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f230a35346dd8bb6d9625795bf4574bf538157" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.predict_step&lt;/code&gt;, it typically returns a dict with a key 'outputs' containing the model's outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646f5007fb09f50418f0f945ee66fb0e10d117a6" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.test_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f672c30d598a6cd145779add379be036bf9041f3" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.train_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9d0b713e5a9c004469847af05441763e87b562" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2548a8ff7d943de6313c443fecdf50e3b85bfba" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, must use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9191b665af88e9e8db607184fe50ebf58b507a1" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5beb4336b9460465ea32fb817eddf8f1ebba8276" translate="yes" xml:space="preserve">
          <source>Dict, metric results for this training epoch, and for the validation epoch if validation is performed. Validation result keys are prefixed with &lt;code&gt;val_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4a149b781e100501d8027a6e543a37620f960a" translate="yes" xml:space="preserve">
          <source>Dict, where keys are names of the variables in the checkpoint and values are current variables or names of current variables (in default graph).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c162cef6dbd2be2f250c055244944595fc1234" translate="yes" xml:space="preserve">
          <source>Dict. Aggregated metric results up until this batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766035e064f475d1317fd12785982c859e8d34cc" translate="yes" xml:space="preserve">
          <source>Dict. Currently no data is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a178bc723c3ed2d7366b9e7b2e87ae9dd86613ca" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_epoch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148347a68d512e356eee0089331e25d7389256af" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_test_batch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437723684bb6ac64398771a961076e8bece6f7f5" translate="yes" xml:space="preserve">
          <source>Dict. Training parameters (eg. verbosity, batch size, number of epochs...).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d89dbad18e146d854f74b9ed3ea7180258e67" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e37cefa6c33fb6c584ebae8fd741daf8e29d704" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fdcb2ad9792b61fd52fda1b9926d23f7214baa" translate="yes" xml:space="preserve">
          <source>Dictionary mapping integer axes to a specific dimension value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5d33c90e0d9798d9a480cbc5070c0dbe280ed8" translate="yes" xml:space="preserve">
          <source>Dictionary of configured experimental optimizer options</source>
          <target state="translated">Словарь настроенных параметров экспериментального оптимизатора</target>
        </trans-unit>
        <trans-unit id="cd05f23cb61033e45591049c256b81b3322f2191" translate="yes" xml:space="preserve">
          <source>Dictionary of environment variable settings. If None, no environment variables will be set for the child process. This is to make tests more hermetic. NOTE: this behavior is different than the standard subprocess module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f0b83be7243655320426136df37a300fc8dcf5" translate="yes" xml:space="preserve">
          <source>Dictionary of experimental optimizer options to configure. Valid keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a803cc139fcb180166cfe08ca2f07bf64a8dd09b" translate="yes" xml:space="preserve">
          <source>Dictionary of options that are required to load the delegate. All keys and values in the dictionary should be convertible to str. Consult the documentation of the specific delegate for required and legal options. (default None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b0a7067cfc907b74add2ff5e454b6f21b5a06" translate="yes" xml:space="preserve">
          <source>Dictionary of parameter names mapped to their values.</source>
          <target state="translated">Словарь имен параметров,привязанных к их значениям.</target>
        </trans-unit>
        <trans-unit id="692e97759c5554276675078a2fefb82c8e19cbd6" translate="yes" xml:space="preserve">
          <source>Dictionary of parameters used to instantiate this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">Словарь параметров, используемых для создания экземпляра этого &lt;code&gt;Distribution&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="953a555a1e6495ca26794c7f94466334cf208343" translate="yes" xml:space="preserve">
          <source>Dictionary or dictionaries of &lt;code&gt;{name: object}&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3659edc3b8f1ab253617a6adb73d8830b5077" translate="yes" xml:space="preserve">
          <source>Dictionary with extra keyword args that are passed to the Flag &lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9cdf65929e404b3fb997372c724572402ebe6e" translate="yes" xml:space="preserve">
          <source>Dictionary with job names as key and number of tasks in the job as value. Defaults to as many 'worker's as there are (Slurm) tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a129d5879607993b9a5af9730ed1d34c8749054e" translate="yes" xml:space="preserve">
          <source>Dictionary: configuration dictionary. - Keras Optimizer instance (it will be returned unchanged). - TensorFlow Optimizer instance (it will be wrapped as a Keras Optimizer).</source>
          <target state="translated">Словарь:словарь настроек.-Экземпляр Keras Optimizer (будет возвращен без изменений).-Экземпляр TensorFlow Optimizer (будет обернут как Keras Optimizer).</target>
        </trans-unit>
        <trans-unit id="69d175e81af1fe4ee0b582d10973f9c5fd60b6f3" translate="yes" xml:space="preserve">
          <source>Dictionary; optional custom HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec875ba1bed287ce7bb6f77c34544a7bdd7169be" translate="yes" xml:space="preserve">
          <source>Difference between two successive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7053cc3bf650cd21039b39217036ddd606fbdf92" translate="yes" xml:space="preserve">
          <source>Differences from &lt;code&gt;CheckpointSaverHook&lt;/code&gt;:</source>
          <target state="translated">Отличия от &lt;code&gt;CheckpointSaverHook&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5979266576871d21b2afe287422bfec66c9f8601" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;recall_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;recall_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;recall_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">Отличается от &lt;code&gt;recall_at_k&lt;/code&gt; тем, что прогнозы должны быть в форме индексов высшего класса &lt;code&gt;k&lt;/code&gt; , тогда как &lt;code&gt;recall_at_k&lt;/code&gt; ожидает логитов. Для &lt;code&gt;recall_at_k&lt;/code&gt; более подробной информации см. Remont_at_k .</target>
        </trans-unit>
        <trans-unit id="be909077c0641dc699923f6b079868063b8f51f3" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;sparse_precision_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;sparse_precision_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;sparse_precision_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">Отличается от &lt;code&gt;sparse_precision_at_k&lt;/code&gt; тем, что прогнозы должны быть в форме индексов высшего класса &lt;code&gt;k&lt;/code&gt; , тогда как &lt;code&gt;sparse_precision_at_k&lt;/code&gt; ожидает логитов. Обратитесь к &lt;code&gt;sparse_precision_at_k&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="71b654a46473d2ed0c7aa5dcfaceb5a36f6c2744" translate="yes" xml:space="preserve">
          <source>Digamma</source>
          <target state="translated">Digamma</target>
        </trans-unit>
        <trans-unit id="f4a4825ca5ca26010a11513b1ed31f16442ba31c" translate="yes" xml:space="preserve">
          <source>Dilation2D</source>
          <target state="translated">Dilation2D</target>
        </trans-unit>
        <trans-unit id="7a5e4f90dfd04f0ae80692f5452b3abdb87db450" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropFilter</source>
          <target state="translated">Dilation2DBackpropFilter</target>
        </trans-unit>
        <trans-unit id="bc8f1d85c3909ccfed4ada73ff7ba64b493c322b" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropInput</source>
          <target state="translated">Dilation2DBackpropInput</target>
        </trans-unit>
        <trans-unit id="5b21f885f597e9e74a55d4389b351564142f53dd" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the domain of this operator.</source>
          <target state="translated">Размер (в смысле векторных пространств)домена этого оператора.</target>
        </trans-unit>
        <trans-unit id="be230f49ad256184670ae811a2455494d85c47d3" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the range of this operator.</source>
          <target state="translated">Размер (в смысле векторных пространств)диапазона этого оператора.</target>
        </trans-unit>
        <trans-unit id="81e1794ad324d87e9c3913bd4e690a960b22a7bd" translate="yes" xml:space="preserve">
          <source>Dimension along which to normalize. A scalar or a vector of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e605fbab33cf913d60208b6de17431f62da70c5d" translate="yes" xml:space="preserve">
          <source>Dimension moduli are computed as follows:</source>
          <target state="translated">Модули измерения вычисляются следующим образом:</target>
        </trans-unit>
        <trans-unit id="3943de17d44cccd425d2bd7cc5f97716aeaf9ac4" translate="yes" xml:space="preserve">
          <source>Dimension modulo are computed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12353dfd6f2cf8e65515e61ad27ef6f22399f498" translate="yes" xml:space="preserve">
          <source>Dimension to concatenate along. Must be in range [-rank, rank), where rank is the number of dimensions in each input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddfbac242ac55614543ee86ed26494de45d412b" translate="yes" xml:space="preserve">
          <source>Dimensions are combined as follows:</source>
          <target state="translated">Размеры комбинируются следующим образом:</target>
        </trans-unit>
        <trans-unit id="0b1428aa50cfced90eb241c03bec0e26433bb51c" translate="yes" xml:space="preserve">
          <source>Dimensions are compared as follows:</source>
          <target state="translated">Размеры сравниваются следующим образом:</target>
        </trans-unit>
        <trans-unit id="652fefec3558d17b4cbbf981d82b724df3b2008f" translate="yes" xml:space="preserve">
          <source>Dimensions are divided as follows:</source>
          <target state="translated">Размеры разделены следующим образом:</target>
        </trans-unit>
        <trans-unit id="184715345bdd753f41c29c261ac6ecb895b9c071" translate="yes" xml:space="preserve">
          <source>Dimensions are subtracted as follows:</source>
          <target state="translated">Размеры вычитаются следующим образом:</target>
        </trans-unit>
        <trans-unit id="19062e66ee039136c8d284ba410e9e11a1c74f93" translate="yes" xml:space="preserve">
          <source>Dimensions are summed as follows:</source>
          <target state="translated">Размеры суммируются следующим образом:</target>
        </trans-unit>
        <trans-unit id="581c373342481761b0c26c77e0171656cbaceb9f" translate="yes" xml:space="preserve">
          <source>Dimensions set to &lt;code&gt;None&lt;/code&gt; are not updated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4f953596edfc1abe7c86e97539af55b2287f27" translate="yes" xml:space="preserve">
          <source>DirectedInterleaveDataset</source>
          <target state="translated">DirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="d3fa81283d2aa4a2b1537786c7a78e5ebfbdfb4e" translate="yes" xml:space="preserve">
          <source>Directly calling a regularizer</source>
          <target state="translated">Прямой вызов регулятора</target>
        </trans-unit>
        <trans-unit id="6dffacc4a7f337ffd42bfbd75f187d8a0411546c" translate="yes" xml:space="preserve">
          <source>Directly constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47db5c108e42f46b065238adb0dcb583634f4b8c" translate="yes" xml:space="preserve">
          <source>Directory containing the SavedModel files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013b158d76f61c00a04d7b712532c489deea3731" translate="yes" xml:space="preserve">
          <source>Directory in which the SavedModel protocol buffer and variables to be loaded are located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b920e4b3618466000ec34f6f3a5c62331a87d6f7" translate="yes" xml:space="preserve">
          <source>Directory name.</source>
          <target state="translated">Имя каталога.</target>
        </trans-unit>
        <trans-unit id="981a7757f49be188cf8c4baa4b42d1642ef61b80" translate="yes" xml:space="preserve">
          <source>Directory to save &lt;code&gt;Estimator&lt;/code&gt; model parameters, graph, summary files for TensorBoard, etc. If unset a directory will be created with &lt;code&gt;tempfile.mkdtemp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b836c4b14fac25373b6fd58bea5de8b432d112d8" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e3f46c4adb6335d58c44815a854d49516a56f" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b24c0e810e5eb3091900fcdad911e32a212bb0d" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b50157320760ad190f8e6a58208d90ac50955" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model. If &lt;code&gt;PathLike&lt;/code&gt; object, the path will be resolved. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37aec56764fe7bfe309080cb06352bdc69f54563" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing images for a class. Otherwise, the directory structure is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0453b553548b68ff0d55e89cd0536b5f784d499d" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing text files for a class. Otherwise, the directory structure is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f445403d8c7d0fda5f7f2d8e17b4691e759e6f" translate="yes" xml:space="preserve">
          <source>Directory where the model was saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28b85ec57058b1331f1057608fb05c79aff840" translate="yes" xml:space="preserve">
          <source>Directory where the variables were saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b848d7f7fc24ccbaad105decf5ce924f8a7ea623" translate="yes" xml:space="preserve">
          <source>Directory where to write the graph. This can refer to remote filesystems, such as Google Cloud Storage (GCS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457a972c4e4938b22e2dc6c61707fd82b71ef298" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50127a0440dcdfd4fcc4b1a7610aeb013e2c55b" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ab2c01286b85519de6608b2334ff814f08dd79" translate="yes" xml:space="preserve">
          <source>Dirichlet distribution.</source>
          <target state="translated">Дирихлетское распределение.</target>
        </trans-unit>
        <trans-unit id="1917ae3fe4d2ed647744d55c2cb8ea81f700b72d" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial compound distribution.</source>
          <target state="translated">Дирихлет-Мультиномиальное распределение соединений.</target>
        </trans-unit>
        <trans-unit id="68297b1e56f2e835bd2af468d143d667ced725a4" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;compound distribution&lt;/a&gt;, i.e., its samples are generated as follows.</source>
          <target state="translated">Дирихле-мультиномиальное распределение является &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;составным распределением&lt;/a&gt; , т. Е. Его выборки формируются следующим образом.</target>
        </trans-unit>
        <trans-unit id="dcc145048cdbabbcc050df2754ce6b49ee03abc5" translate="yes" xml:space="preserve">
          <source>Disable the currently-enabled debugging dumping.</source>
          <target state="translated">Отключите отладочный дампинг,включенный в данный момент.</target>
        </trans-unit>
        <trans-unit id="16a2605998dad2d1fcad09094c83291b2e53a3aa" translate="yes" xml:space="preserve">
          <source>Disable the eager/graph unified numerics checking mechanism.</source>
          <target state="translated">Отключите механизм проверки единых числовых показателей.</target>
        </trans-unit>
        <trans-unit id="b798d88b1318376c424af4e62e8d7f241b546c8f" translate="yes" xml:space="preserve">
          <source>Disables TensorFlow 2.x behaviors.</source>
          <target state="translated">Отключает поведение TensorFlow 2.x.</target>
        </trans-unit>
        <trans-unit id="521eac72229eba3d7914bfe240d507f9814af96b" translate="yes" xml:space="preserve">
          <source>Disables eager execution.</source>
          <target state="translated">Отключает жаждущее исполнение.</target>
        </trans-unit>
        <trans-unit id="d920733a667102618722334c044ebf1ee6edab0c" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">Отключает экспериментальный мост-компилятор на базе MLIR TensorFlow.</target>
        </trans-unit>
        <trans-unit id="2b3074c068d3c39a640dcc9793052a2c950a4659" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca32bbcea39d01e178ad885103e73c62caaf7cc5" translate="yes" xml:space="preserve">
          <source>Disables the V2 TensorShape behavior and reverts to V1 behavior.</source>
          <target state="translated">Отключает поведение V2 TensorShape и возвращается к поведению V1.</target>
        </trans-unit>
        <trans-unit id="62499cf079682b5ed73eeda6e8cbc8ac744df372" translate="yes" xml:space="preserve">
          <source>Disables the V2 dtype behavior for Keras layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b59c0ad3afaeeb9957f97a642af99ad71bbdf5" translate="yes" xml:space="preserve">
          <source>Disables the mixed precision graph rewrite.</source>
          <target state="translated">Отключает перезапись графа смешанной точности.</target>
        </trans-unit>
        <trans-unit id="6afd9d583451263bea47be88824edfe1d46acd10" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda68923c74f85d5a0279934ce0a35d017664fe9" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient. Defaults to 0.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a94fad4038a6c4f3e0eefa175f4ebe5569b6d6" translate="yes" xml:space="preserve">
          <source>Dispatches cwise mul for &quot;Dense&lt;em&gt;Dense&quot; and &quot;Dense&lt;/em&gt;Sparse&quot;.</source>
          <target state="translated">Отправляет хитрый муль для &quot;Dense &lt;em&gt;Dense&quot; и &quot;Dense&lt;/em&gt; Sparse&quot;.</target>
        </trans-unit>
        <trans-unit id="b3c2dac39cc3cf2bcaa90c8f8c260a4d52934cb6" translate="yes" xml:space="preserve">
          <source>Dispatches to add for strings and add_v2 for all other types.</source>
          <target state="translated">Диспетчеры для добавления для строк и add_v2 для всех остальных типов.</target>
        </trans-unit>
        <trans-unit id="47e0c198980f7d73c8f31eb26e60152b3bfca63a" translate="yes" xml:space="preserve">
          <source>Display name for step counts (usually &quot;step&quot; or &quot;sample&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41538a9b6e4478f54a08c16b868672e44d806fc" translate="yes" xml:space="preserve">
          <source>Displays a progress bar.</source>
          <target state="translated">Отображает шкалу прогресса.</target>
        </trans-unit>
        <trans-unit id="179f03d1bb4a10eb88ed2e485ea242f0b1a7a517" translate="yes" xml:space="preserve">
          <source>Distribute values in array based on replica_id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9124082f9e48ad99385248615c76c39fb14b7a53" translate="yes" xml:space="preserve">
          <source>Distributed Training Tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf96e7ea26bee8689a9fb32dee3b96652c0b1998" translate="yes" xml:space="preserve">
          <source>Distributed training with Keras</source>
          <target state="translated">Распределенное обучение с Keras</target>
        </trans-unit>
        <trans-unit id="3a0184db4ec730df13780c0bc32937d407e08e80" translate="yes" xml:space="preserve">
          <source>Distributed training with TensorFlow</source>
          <target state="translated">Распределенное обучение с TensorFlow</target>
        </trans-unit>
        <trans-unit id="eb66401eefced642a598afe65af5943e81734ce7" translate="yes" xml:space="preserve">
          <source>Distributed version of Stochastic Dual Coordinate Ascent (SDCA) optimizer for</source>
          <target state="translated">Распределенная версия оптимизатора Стохастического Двухкоординатного Восхождения (SDCA)для</target>
        </trans-unit>
        <trans-unit id="2286ed7345235e9d18c6fcd99a94911aa6bac7da" translate="yes" xml:space="preserve">
          <source>DistributedValues input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5c699aa3f4d9196eba5dd8be8839096cf69f87" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Распространяет экземпляры &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; ,&lt;/a&gt; созданные вызовами &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fabb3e99d51e74cd9bf48a43262694d355937f2" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Распространяет экземпляры &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; ,&lt;/a&gt; созданные вызовами &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3394e1fdd6861a0bbd13c70458c5c7db5ff67b58" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Распространяет экземпляры &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; ,&lt;/a&gt; созданные вызовами &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb5f91468faf0f4ba99bc8820e017c05f291bdd" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Распространяет экземпляры &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; ,&lt;/a&gt; созданные вызовами &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192dd8b05d9b41aa26bf9424fba779d44a515f90" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via &lt;code&gt;dataset&lt;/code&gt;.</source>
          <target state="translated">Распространяет экземпляр tf.data.Dataset, предоставленный через &lt;code&gt;dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98d7d4ad30a1f3b6a280f4f0d9a95de8aaac9329" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via dataset.</source>
          <target state="translated">Распространяет экземпляр tf.data.Dataset,предоставленный через набор данных.</target>
        </trans-unit>
        <trans-unit id="a9272351388ebc819fa201ab73595f99c851d9b5" translate="yes" xml:space="preserve">
          <source>Distribution parameter for scale.</source>
          <target state="translated">Параметр распределения для масштаба.</target>
        </trans-unit>
        <trans-unit id="200938400bb94e17e87c3c7df85c8268812f04b4" translate="yes" xml:space="preserve">
          <source>Distribution parameter for standard deviation.</source>
          <target state="translated">Параметр распределения для стандартного отклонения.</target>
        </trans-unit>
        <trans-unit id="3b6f75528c74b056a3bcfcdcd45e98beceb2553e" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the location.</source>
          <target state="translated">Параметр распределения для местоположения.</target>
        </trans-unit>
        <trans-unit id="e89ccf6e77ca8273281a020421991fa84566fb35" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the mean.</source>
          <target state="translated">Параметр распределения для среднего.</target>
        </trans-unit>
        <trans-unit id="4fb883e63a4c3f13d19c2425d84223e22d36d438" translate="yes" xml:space="preserve">
          <source>Distribution parameters are automatically broadcast in all functions; see examples for details.</source>
          <target state="translated">Параметры распределения автоматически транслируются во всех функциях;подробнее см.примеры.</target>
        </trans-unit>
        <trans-unit id="fb7c5e4b77643e7474e2d21dd2896fc952052045" translate="yes" xml:space="preserve">
          <source>Div</source>
          <target state="translated">Div</target>
        </trans-unit>
        <trans-unit id="8050d548b3e9fa3bbc762582e12fb8ffca0cd74c" translate="yes" xml:space="preserve">
          <source>DivNoNan</source>
          <target state="translated">DivNoNan</target>
        </trans-unit>
        <trans-unit id="0d3b0db2bd3c7e99bf63c286b760d9693978e92b" translate="yes" xml:space="preserve">
          <source>Divide the gradient by the root of this average</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d90cb11062e93dd06a3c330fa055ba03def4253" translate="yes" xml:space="preserve">
          <source>Divide the model's input(s) into multiple sub-batches.</source>
          <target state="translated">Разделите вход(ы)модели на несколько суб-партий.</target>
        </trans-unit>
        <trans-unit id="1c83131611b315e50330f4357ec0a30492c4e55f" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Разделите эту переменную на &lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd3cab1dbc4ab5f3e0135860f29cd0a670455ba7" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Разделите эту переменную на &lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9fc6bee0dc76250df9c7249450c058a5b1248ea" translate="yes" xml:space="preserve">
          <source>Divide two values using Python 2 semantics.</source>
          <target state="translated">Разделите два значения с помощью семантики Питона 2.</target>
        </trans-unit>
        <trans-unit id="0b11878bad0b769611401c6fae7db2c6d95fbabc" translate="yes" xml:space="preserve">
          <source>Divides &lt;code&gt;x / y&lt;/code&gt; elementwise, rounding toward the most negative integer.</source>
          <target state="translated">Делит &lt;code&gt;x / y&lt;/code&gt; поэлементно, округляя до наиболее отрицательного целого числа.</target>
        </trans-unit>
        <trans-unit id="7054c933ef39643ba301622090f151d74f3786dd" translate="yes" xml:space="preserve">
          <source>Divides a variable reference by sparse updates.</source>
          <target state="translated">Разделяет ссылку на переменную по разрозненным обновлениям.</target>
        </trans-unit>
        <trans-unit id="f6cc4908b9c759475fad4485ce4f300757dc9dfe" translate="yes" xml:space="preserve">
          <source>Divides sparse updates into the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c14857e94927b4042c441ca64da6e9584933d0" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 2 division operator semantics). (deprecated)</source>
          <target state="translated">Деление x/y по элементам (с использованием семантики оператора деления на питоне 2).(устаревший)</target>
        </trans-unit>
        <trans-unit id="9d62e7e02cc809f4b5d0b7e656e69318bec428dc" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 3 division operator semantics).</source>
          <target state="translated">Деление x/y по элементам (с использованием семантики оператора деления на питоне 3).</target>
        </trans-unit>
        <trans-unit id="5f99d20ff90050d8dfae43f5ffeab6deb712b94a" translate="yes" xml:space="preserve">
          <source>Do not call.</source>
          <target state="translated">Не звоните.</target>
        </trans-unit>
        <trans-unit id="0e19cbaf835cde80c7e4a1d8a1c24b2e13f0e983" translate="yes" xml:space="preserve">
          <source>Do not generate side-effect outputs.</source>
          <target state="translated">Не генерируйте выходы с побочными эффектами.</target>
        </trans-unit>
        <trans-unit id="f6bb458eb36bbb106bec0d33a4372f73fe1da874" translate="yes" xml:space="preserve">
          <source>Documentation specific to this application of &lt;code&gt;decorator_func&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a78a048e146bfd34662d0525db757b7a96e1cb" translate="yes" xml:space="preserve">
          <source>Documenting RaggedTensor Shapes</source>
          <target state="translated">Документирование форм тензора ржавчины</target>
        </trans-unit>
        <trans-unit id="164630c36dde0c82111b1f3dc0afd4875333d29a" translate="yes" xml:space="preserve">
          <source>Does first run which shows the eval metrics before training.</source>
          <target state="translated">Делает первый запуск,который показывает оценочные показатели до обучения.</target>
        </trans-unit>
        <trans-unit id="f99e6c429c8885c047333a226cf62534ccc256b0" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is lesser than the accumulator's global_step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc4470c2a0db343ff16d7ce4c084129536fad15" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is smaller than the accumulator's global_step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0886ab9d39600e06d3738d56360cc4a6c8d3f1" translate="yes" xml:space="preserve">
          <source>Does not calculate some metrics that do not make sense, such as AUC.</source>
          <target state="translated">Не вычисляет некоторые метрики,которые не имеют смысла,такие как AUC.</target>
        </trans-unit>
        <trans-unit id="d3a16e859f7ea844fb2347c5f66d4fdc50974d5b" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;label_vocabulary&lt;/code&gt;. Instead, labels must be float in the range [0, 1].</source>
          <target state="translated">Не поддерживает &lt;code&gt;label_vocabulary&lt;/code&gt; . Вместо этого метки должны быть плавающими в диапазоне [0, 1].</target>
        </trans-unit>
        <trans-unit id="2083af700419e9f00d99ec199155887f45dff43e" translate="yes" xml:space="preserve">
          <source>Does not write the &lt;code&gt;GraphDef&lt;/code&gt; and &lt;code&gt;MetaGraphDef&lt;/code&gt; to the summary.</source>
          <target state="translated">Не записывает &lt;code&gt;GraphDef&lt;/code&gt; и &lt;code&gt;MetaGraphDef&lt;/code&gt; в сводку.</target>
        </trans-unit>
        <trans-unit id="d61d2abccb36c5385e1fe79f0a4f01955d7746b7" translate="yes" xml:space="preserve">
          <source>Does nothing if the EventFileWriter was not closed.</source>
          <target state="translated">Ничего не делает,если EventFileWriter не был закрыт.</target>
        </trans-unit>
        <trans-unit id="bf3dd4e6c21aafe1e3c10a490dd20e8f64e442a7" translate="yes" xml:space="preserve">
          <source>Does nothing. Only useful as a placeholder for control edges.</source>
          <target state="translated">Ничего не делает.Полезен только как держатель для контрольных кромок.</target>
        </trans-unit>
        <trans-unit id="d3e3c649e5b2cfba3be856308817874db914b357" translate="yes" xml:space="preserve">
          <source>Does nothing. Serves as a control trigger for scheduling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db14ebf285ed7bf2f6744a63f15f17d02d61f9f" translate="yes" xml:space="preserve">
          <source>Dominik Csiba, Zheng Qu, Peter Richtarik. 2015</source>
          <target state="translated">Доминик Ссиба,Чжэн Ку,Питер Рихтарик.2015</target>
        </trans-unit>
        <trans-unit id="6907bb65c3f0588d3aeb5d107fec1d5df41c9b41" translate="yes" xml:space="preserve">
          <source>Dot-product attention layer, a.k.a. Luong-style attention.</source>
          <target state="translated">Точнопродуктовый слой внимания,так же известный как &quot;Внимание в стиле Лунга&quot;.</target>
        </trans-unit>
        <trans-unit id="4239e3dac779bf2a52d558154614129f43ea75c8" translate="yes" xml:space="preserve">
          <source>Dots per inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059832445bef72ff3ab2311ac70c27ec32c98a0e" translate="yes" xml:space="preserve">
          <source>Downloads a file from a URL if it not already in the cache.</source>
          <target state="translated">Загружает файл с URL,если его еще нет в кэше.</target>
        </trans-unit>
        <trans-unit id="0a71aa2a51d8d6b0d1ffc004a583ef5ad70bd2e8" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the time dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb71bfc4a903dc49201137d9ebdbc5d40bda9424" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt; for each dimension along the features axis. The window is shifted by &lt;code&gt;strides&lt;/code&gt; in each dimension. The resulting output when using &quot;valid&quot; padding option has a shape(number of rows or columns) of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c49ce076647fedea8cacae28bc07eeba742440c" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt;. The window is shifted by &lt;code&gt;strides&lt;/code&gt;. The resulting output when using &quot;valid&quot; padding option has a shape of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf70ae2cb6c75d0a9c4fb58d52a95a4a4fb3459" translate="yes" xml:space="preserve">
          <source>Draw bounding boxes on a batch of images.</source>
          <target state="translated">Рисование ограничительных ящиков на партии изображений.</target>
        </trans-unit>
        <trans-unit id="4832723fe356ae26384348ce3008f3ec5bc2040f" translate="yes" xml:space="preserve">
          <source>Draw integers: &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</source>
          <target state="translated">Нарисуйте целые числа: &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d68ab4523cc9f189dea2f73d3573f15a45252e77" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxes</source>
          <target state="translated">DrawBoundingBoxes</target>
        </trans-unit>
        <trans-unit id="f9881a84226c3a072daea77439292b0ab957dbb4" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxesV2</source>
          <target state="translated">DrawBoundingBoxesV2</target>
        </trans-unit>
        <trans-unit id="9b35511abd43696bf6f2e8a3e63057c2e2053cb2" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="translated">Рисует образцы &lt;code&gt;shape&lt;/code&gt; из каждого заданного гамма-распределения.</target>
        </trans-unit>
        <trans-unit id="2f485a98bd7eab55347fa5d55f73b85c721e211f" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="translated">Рисует образцы &lt;code&gt;shape&lt;/code&gt; из каждого из заданных распределений Пуассона.</target>
        </trans-unit>
        <trans-unit id="e3c5f61f54c9fb2fa435235e5351a40f0e8d2a52" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a categorical distribution.</source>
          <target state="translated">Построение детерминистических псевдослучайных выборок из категориального распределения.</target>
        </trans-unit>
        <trans-unit id="ab9f458f58c6bdd4d02bf827a8dcab230cd2aa13" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">Построение детерминистических псевдослучайных выборок из многочленного распределения.(устаревший)</target>
        </trans-unit>
        <trans-unit id="c1b5d2a737bbdb42a41c618560b2a667a7806c1f" translate="yes" xml:space="preserve">
          <source>Draws samples from a categorical distribution.</source>
          <target state="translated">Снимает образцы с категориального распределения.</target>
        </trans-unit>
        <trans-unit id="520c25c8c100cbba7ddc5253242eb10fefc010a8" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c8e9dd3484d5fab6f23e4b9289081d88d7c16" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">Рисует образцы из мультиномиального распределения.(устаревший)</target>
        </trans-unit>
        <trans-unit id="678cd1621474883b2cd35a303f85069b99439e67" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ea0aece380fb969bb44bea8eb12ff47f0c3bda" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8ebd161f63ebaf1f3afa9990959a8073318852" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(3 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6fdd6ef0436ae937dac1cce78ebb7c168e8c10" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / (fan_in + fan_out))&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b8b198ca33fbce90a37e7044ff34a5f60c2478" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61e33bf74dc6cb23e31a4742f4452d5d238daaf" translate="yes" xml:space="preserve">
          <source>Dress</source>
          <target state="translated">Dress</target>
        </trans-unit>
        <trans-unit id="d9c26e925d08589194f1628e9ba35c4cbbff118c" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting.</source>
          <target state="translated">Выпадение состоит в случайном порядке установки фракции &lt;code&gt;rate&lt;/code&gt; входных блоков до 0 при каждом обновлении во время тренировки, которая помогает предотвратить переобучению.</target>
        </trans-unit>
        <trans-unit id="0c910938bf7951e235266a0bde634cd7e83f6bb7" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting. The units that are kept are scaled by &lt;code&gt;1 / (1 - rate)&lt;/code&gt;, so that their sum is unchanged at training time and inference time.</source>
          <target state="translated">Выпадение состоит в случайном порядке установки фракции &lt;code&gt;rate&lt;/code&gt; входных блоков до 0 при каждом обновлении во время тренировки, которая помогает предотвратить переобучению. Сохраняемые единицы масштабируются на &lt;code&gt;1 / (1 - rate)&lt;/code&gt; , так что их сумма не изменяется во время обучения и времени вывода.</target>
        </trans-unit>
        <trans-unit id="3ed6660be55d41788a76a36a5bdcb02238dd7845" translate="yes" xml:space="preserve">
          <source>Dtype of the samples (int or float dtypes are permissible, as samples are discrete). Default: int32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace81bb63ee8802a4e450fa90e2282ee9728797a" translate="yes" xml:space="preserve">
          <source>Dtype to use for generated arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbbbfe9cc4b00f63183937c62d18cf85f4976f6" translate="yes" xml:space="preserve">
          <source>Dtype to use for the generated arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e0feccd09febde5feb158c937e2615c85dfbfe" translate="yes" xml:space="preserve">
          <source>Dtype to use. Default to &lt;code&gt;None&lt;/code&gt;, in which case the global setting &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; is used (unless you changed it, it defaults to &quot;float32&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc3b807502ca4f8b87062e501e9e44937bf4f8d" translate="yes" xml:space="preserve">
          <source>Dtypes and casting</source>
          <target state="translated">нюансы и литьё</target>
        </trans-unit>
        <trans-unit id="2cce0dbfc4150d144a2b52097f134c7eb97a528d" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;filters&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">Двойственность: Эрозия &lt;code&gt;value&lt;/code&gt; с помощью &lt;code&gt;filters&lt;/code&gt; равна отрицанию дилатации &lt;code&gt;-value&lt;/code&gt; отраженных &lt;code&gt;filters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de135649e6ee68cb3c671dd05ce04b87cd5cb6ad" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;kernel&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;kernel&lt;/code&gt;.</source>
          <target state="translated">Двойственность: Эрозия &lt;code&gt;value&lt;/code&gt; по &lt;code&gt;kernel&lt;/code&gt; равна отрицанию дилатации &lt;code&gt;-value&lt;/code&gt; отраженным &lt;code&gt;kernel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14b395b9ef340667cc069ff8a0df7f484517809d" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient of this function evaluated at x=100 is NaN. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b6fa41ad24ce7aeced29282a9ba7b232ae4d3b" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient this function evaluated at x=100 is NaN. For example:</source>
          <target state="translated">Из-за числовой нестабильности градиент этой функции,оцененный при x=100,равен NaN.Например:</target>
        </trans-unit>
        <trans-unit id="4f553621edbd655917227d809420fe6a55a1545e" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a RaggedTensor from being used as a Python bool.</source>
          <target state="translated">Фальшивый метод для предотвращения использования тензора RaggedTensor в качестве питоновской шерсти.</target>
        </trans-unit>
        <trans-unit id="fa31bd5c69618abc2823fa976d807fbc423f01db" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a tensor from being used as a Python &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Фиктивный метод для предотвращения использования тензора в качестве &lt;code&gt;bool&lt;/code&gt; Python .</target>
        </trans-unit>
        <trans-unit id="5b762a19d2487de9921f5eccbd8c97bad2f06ba2" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent iteration.</source>
          <target state="translated">Манекен-метод для предотвращения итерации.</target>
        </trans-unit>
        <trans-unit id="88b0bdba3d3f459c41e963f09a5ef3c292f2b696" translate="yes" xml:space="preserve">
          <source>DummyIterationCounter</source>
          <target state="translated">DummyIterationCounter</target>
        </trans-unit>
        <trans-unit id="eb1dc57dcf66566314b788f693c778451a15ca93" translate="yes" xml:space="preserve">
          <source>DummyMemoryCache</source>
          <target state="translated">DummyMemoryCache</target>
        </trans-unit>
        <trans-unit id="f3ab4575dc0133a1dfcc58a0645455ba8d875d5f" translate="yes" xml:space="preserve">
          <source>DummySeedGenerator</source>
          <target state="translated">DummySeedGenerator</target>
        </trans-unit>
        <trans-unit id="9e551da6df8f5debe44fc9163e31b03c846581e3" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors from op types that matches to the regular expression (through Python's &lt;code&gt;re.match()&lt;/code&gt;). &quot;Op type&quot; refers to the names of the TensorFlow operations (e.g., &quot;MatMul&quot;, &quot;LogSoftmax&quot;), which may repeat in a TensorFlow function. It does &lt;em&gt;not&lt;/em&gt; refer to the names of nodes (e.g., &quot;dense/MatMul&quot;, &quot;dense_1/MatMul_1&quot;) which are unique within a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7078f157aac2573044c918d8a4a3b7b6033ac22" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors of which the specified dtypes. This optional argument can be in any of the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e9b9d832a57a4165f92d3f8bd0ca6c42d1de4" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their (negated) contributions add.</source>
          <target state="translated">Дублирующиеся записи обрабатываются правильно: если несколько &lt;code&gt;indices&lt;/code&gt; ссылаются на одно и то же место, их (отрицательные) вклады складываются.</target>
        </trans-unit>
        <trans-unit id="e539ae8c6c5e97585904cac6f7578e33be0fb9a3" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acea7eb7cb19dad19066e361fb49fdeacdcbaf92" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions are combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a40b59eaf6d38fb8daf8662b8b0b03a0012ed11" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions combine.</source>
          <target state="translated">Повторяющиеся записи обрабатываются правильно: если несколько &lt;code&gt;indices&lt;/code&gt; ссылаются на одно и то же место, их вклады объединяются.</target>
        </trans-unit>
        <trans-unit id="d4e22b417b9aad707bab26acf128ef0124f02c98" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions divide.</source>
          <target state="translated">Дублирующиеся записи обрабатываются правильно: если несколько &lt;code&gt;indices&lt;/code&gt; ссылаются на одно и то же место, их вклады делятся.</target>
        </trans-unit>
        <trans-unit id="49769bf3963b221867efd0dad9c6f794695da9ab" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions multiply.</source>
          <target state="translated">Повторяющиеся записи обрабатываются правильно: если несколько &lt;code&gt;indices&lt;/code&gt; ссылаются на одно и то же место, их вклады умножаются.</target>
        </trans-unit>
        <trans-unit id="a78cf7fe187f03163a0ea5705dfc52d2311860a1" translate="yes" xml:space="preserve">
          <source>Duration of monitoring in ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb239a1e72b6cedecb73f3c757df8c7fb234d18" translate="yes" xml:space="preserve">
          <source>Duration of tracing or monitoring in ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f721b600ecff1c2f6cd4e8aedd23a2ffb0e5bf0e" translate="yes" xml:space="preserve">
          <source>During training or evaluation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3556ffa59e7016962eddbdf5eb6d7a50758ad15f" translate="yes" xml:space="preserve">
          <source>Dynamic loss scaling works by adjusting the loss scale as training progresses. The goal is to keep the loss scale as high as possible without overflowing the gradients. As long as the gradients do not overflow, raising the loss scale never hurts.</source>
          <target state="translated">Масштабирование динамических потерь работает путем корректировки шкалы потерь по ходу обучения.Цель заключается в том,чтобы держать шкалу потерь как можно выше,не переполняя градиенты.До тех пор,пока градиенты не переполняются,повышение шкалы потерь никогда не повредит.</target>
        </trans-unit>
        <trans-unit id="8036cb63420240722f3fe4f252c9e7f16cf09fb2" translate="yes" xml:space="preserve">
          <source>DynamicPartition</source>
          <target state="translated">DynamicPartition</target>
        </trans-unit>
        <trans-unit id="4894cc7f856dc85cad8a5fec6ef3904d62cdf5f4" translate="yes" xml:space="preserve">
          <source>DynamicStitch</source>
          <target state="translated">DynamicStitch</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="553eb325fbe958c2a5134089156c0c0d30531dbd" translate="yes" xml:space="preserve">
          <source>E.g. 'float16', 'float32', 'float64'.</source>
          <target state="translated">Например,&quot;float16&quot;,&quot;float32&quot;,&quot;float64&quot;.</target>
        </trans-unit>
        <trans-unit id="d3c30f7d8e03d15a2b309cfdae4b64a59e955e38" translate="yes" xml:space="preserve">
          <source>E.g. &lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, &lt;code&gt;'float64'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b35962744d58a4f3a29a207b905f8bf3e6b32bb" translate="yes" xml:space="preserve">
          <source>E.g. for use with categorical_crossentropy.</source>
          <target state="translated">Например,для использования с категориальной_кроссентропией.</target>
        </trans-unit>
        <trans-unit id="f07399e21baeb77233b6eed898e333a622f5516e" translate="yes" xml:space="preserve">
          <source>E.g. if applied to a list of two tensors &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; of shape &lt;code&gt;(batch_size, n)&lt;/code&gt;, the output will be a tensor of shape &lt;code&gt;(batch_size, 1)&lt;/code&gt; where each entry &lt;code&gt;i&lt;/code&gt; will be the dot product between &lt;code&gt;a[i]&lt;/code&gt; and &lt;code&gt;b[i]&lt;/code&gt;.</source>
          <target state="translated">Например , если применяется к списку двух тензоров и &lt;code&gt;b&lt;/code&gt; формы &lt;code&gt;(batch_size, n)&lt;/code&gt; , то выходной сигнал будет тензором формы &lt;code&gt;(batch_size, 1)&lt;/code&gt; , где каждая запись &lt;code&gt;i&lt;/code&gt; будет скалярное произведение между &lt;code&gt;a[i]&lt;/code&gt; и &lt;code&gt;b[i]&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e9a9ae577fc05703e91c9c38ac1aa199f5acce8" translate="yes" xml:space="preserve">
          <source>E.g. if your &lt;code&gt;batch_size&lt;/code&gt; is 64 and you use &lt;code&gt;gpus=2&lt;/code&gt;, then we will divide the input into 2 sub-batches of 32 samples, process each sub-batch on one GPU, then return the full batch of 64 processed samples.</source>
          <target state="translated">Например, если ваш &lt;code&gt;batch_size&lt;/code&gt; равен 64 и вы используете &lt;code&gt;gpus=2&lt;/code&gt; , то мы разделим входные данные на 2 подгруппы по 32 сэмпла, обработаем каждую подгруппу на одном GPU, а затем вернем полную партию из 64 обработанных сэмплов.</target>
        </trans-unit>
        <trans-unit id="7a50e4ddce82d1e382c64c27bc1a5097eaaf42ae" translate="yes" xml:space="preserve">
          <source>E.g. the file doesn't exist, or has wrong permissions.</source>
          <target state="translated">Например,файл не существует или имеет неправильные разрешения.</target>
        </trans-unit>
        <trans-unit id="9ce6b6213f33632a81a05054aa5419039c89636a" translate="yes" xml:space="preserve">
          <source>E.g. var = state_ops._temporary&lt;em&gt;variable([1, 2], types.float&lt;/em&gt;) var_name = var.op.name var = state_ops.assign(var, [[4.0, 5.0]]) var = state_ops.assign_add(var, [[6.0, 7.0]]) final = state_ops._destroy_temporary_variable(var, var_name=var_name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56b3fdb05fe66fc4675e13c12200b61fa0385c6" translate="yes" xml:space="preserve">
          <source>E.g., the example given above that maps &lt;code&gt;fn=lambda t: tf.range(t, t + 3)&lt;/code&gt; across &lt;code&gt;elems&lt;/code&gt; could be rewritten more efficiently using vectorized ops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="08883fe576df50b0b7d3a4d8dda8f6a63d367c09" translate="yes" xml:space="preserve">
          <source>ELUs have negative values which pushes the mean of the activations closer to zero. Mean activations that are closer to zero enable faster learning as they bring the gradient closer to the natural gradient. ELUs saturate to a negative value when the argument gets smaller. Saturation means a small derivative which decreases the variation and the information that is propagated to the next layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087220079a98b1d1823eb02904051957f9c3396d" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL: A context manager for overriding gradient functions.</source>
          <target state="translated">ЭКСПЕРИМЕНТАЛЬНО:Контекстный менеджер для переопределения функций градиента.</target>
        </trans-unit>
        <trans-unit id="244fae62654320ff433d44decdc3be79b3430ab3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">Каждый &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; сопоставляется с &lt;code&gt;Tensor&lt;/code&gt; указанного типа (или &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; ,&lt;/a&gt; если не указан) и формы &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7df4b10a00470916437516599dfdf8bb1e811a1" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">Каждый &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; сопоставляется с &lt;code&gt;Tensor&lt;/code&gt; указанного типа (или &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; ,&lt;/a&gt; если не указан) и формы &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7e4d019d3e2860dff98a8cb85154875f07d7fb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">Каждый &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; сопоставляется с &lt;code&gt;Tensor&lt;/code&gt; указанного типа (или &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; ,&lt;/a&gt; если не указан) и формы &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . Все &lt;code&gt;serialized&lt;/code&gt; примеры будут дополнены значением &lt;code&gt;default_value&lt;/code&gt; по второму измерению.</target>
        </trans-unit>
        <trans-unit id="227990327c0f9190e29f55dcbf4d15fa08ca91bd" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">Каждый &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; сопоставляется с &lt;code&gt;Tensor&lt;/code&gt; указанного типа (или &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; ,&lt;/a&gt; если не указан) и формы &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . Все &lt;code&gt;serialized&lt;/code&gt; примеры будут дополнены значением &lt;code&gt;default_value&lt;/code&gt; по второму измерению.</target>
        </trans-unit>
        <trans-unit id="5ff4b1e49bfa42b9d26c149bad5739f6cc2aeb05" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;../../io/raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">Каждый &lt;code&gt;RaggedFeature&lt;/code&gt; сопоставляется с &lt;code&gt;RaggedTensor&lt;/code&gt; указанного типа. Он формируется путем наложения &lt;code&gt;RaggedTensor&lt;/code&gt; для каждого примера, где &lt;code&gt;RaggedTensor&lt;/code&gt; для каждого отдельного примера создается с использованием тензоров, указанных в &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; и &lt;code&gt;RaggedTensor.partition&lt;/code&gt; . Подробности и примеры см. &lt;a href=&quot;../../io/raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; документации tf.io.RaggedFeature .</target>
        </trans-unit>
        <trans-unit id="8968c019afc90ee635fe7107260ce001e1786670" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">Каждый &lt;code&gt;RaggedFeature&lt;/code&gt; сопоставляется с &lt;code&gt;RaggedTensor&lt;/code&gt; указанного типа. Он формируется путем наложения &lt;code&gt;RaggedTensor&lt;/code&gt; для каждого примера, где &lt;code&gt;RaggedTensor&lt;/code&gt; для каждого отдельного примера создается с использованием тензоров, указанных в &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; и &lt;code&gt;RaggedTensor.partition&lt;/code&gt; . Подробности и примеры см. &lt;a href=&quot;raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; документации tf.io.RaggedFeature .</target>
        </trans-unit>
        <trans-unit id="dc0e95cd9937e083aa36c1610babea4271ff0514" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">Каждый &lt;code&gt;SparseFeature&lt;/code&gt; сопоставляется с &lt;code&gt;SparseTensor&lt;/code&gt; указанного типа, представляющего Tensor of &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . Его &lt;code&gt;values&lt;/code&gt; берутся из функции в примерах с ключом &lt;code&gt;value_key&lt;/code&gt; . А &lt;code&gt;values[i]&lt;/code&gt; происходят от позиции &lt;code&gt;k&lt;/code&gt; в особенности в качестве примера ввода пакетной &lt;code&gt;batch&lt;/code&gt; . Эта позиционная информация записывается в &lt;code&gt;indices[i]&lt;/code&gt; как &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; где &lt;code&gt;index_j&lt;/code&gt; - &lt;code&gt;k-th&lt;/code&gt; значение функции в примере с ключом &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt;. Другими словами, мы разделяем индексы (кроме первого индекса, указывающего пакетную запись) &lt;code&gt;SparseTensor&lt;/code&gt; по размерности на разные функции &lt;code&gt;Example&lt;/code&gt; . Из-за своей сложности &lt;code&gt;VarLenFeature&lt;/code&gt; по возможности следует предпочесть &lt;code&gt;SparseFeature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20445b8511d480f26ea72e773e616bd8d567d165" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/io/SparseFeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f213d9552e1c0b7750efae44b94f6e3a054d5" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">Каждый &lt;code&gt;SparseFeature&lt;/code&gt; сопоставляется с &lt;code&gt;SparseTensor&lt;/code&gt; указанного типа, представляющего Tensor of &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . Его &lt;code&gt;values&lt;/code&gt; берутся из функции в примерах с ключом &lt;code&gt;value_key&lt;/code&gt; . А &lt;code&gt;values[i]&lt;/code&gt; происходят от позиции &lt;code&gt;k&lt;/code&gt; в особенности в качестве примера ввода пакетной &lt;code&gt;batch&lt;/code&gt; . Эта позиционная информация записывается в &lt;code&gt;indices[i]&lt;/code&gt; как &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; где &lt;code&gt;index_j&lt;/code&gt; - &lt;code&gt;k-th&lt;/code&gt; значение функции в примере с ключом &lt;a href=&quot;sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt;. Другими словами, мы разделяем индексы (кроме первого индекса, указывающего пакетную запись) &lt;code&gt;SparseTensor&lt;/code&gt; по размерности на разные функции &lt;code&gt;Example&lt;/code&gt; . Из-за своей сложности &lt;code&gt;VarLenFeature&lt;/code&gt; по возможности следует предпочесть &lt;code&gt;SparseFeature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4db2f7c49d4f1060f145f5df05f3ac3f70dc51a7" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseTensor&lt;/code&gt; corresponding to &lt;code&gt;sequence_features&lt;/code&gt; represents a ragged vector. Its indices are &lt;code&gt;[time, index]&lt;/code&gt;, where &lt;code&gt;time&lt;/code&gt; is the &lt;code&gt;FeatureList&lt;/code&gt; entry and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that time.</source>
          <target state="translated">Каждый &lt;code&gt;SparseTensor&lt;/code&gt; , соответствующий &lt;code&gt;sequence_features&lt;/code&gt; , представляет собой рваный вектор. Его индексы - &lt;code&gt;[time, index]&lt;/code&gt; , где &lt;code&gt;time&lt;/code&gt; - это запись &lt;code&gt;FeatureList&lt;/code&gt; , а &lt;code&gt;index&lt;/code&gt; - это индекс значения в списке значений, связанных с этим временем.</target>
        </trans-unit>
        <trans-unit id="0e6b6726eed1f881ece79a8557b7490a3a12373d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;VarLenFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a ragged matrix. Its indices are &lt;code&gt;[batch, index]&lt;/code&gt; where &lt;code&gt;batch&lt;/code&gt; identifies the example in &lt;code&gt;serialized&lt;/code&gt;, and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that feature and example.</source>
          <target state="translated">Каждый &lt;code&gt;VarLenFeature&lt;/code&gt; сопоставляется с &lt;code&gt;SparseTensor&lt;/code&gt; указанного типа, представляющего рваную матрицу. Его индексы - &lt;code&gt;[batch, index]&lt;/code&gt; где &lt;code&gt;batch&lt;/code&gt; идентифицирует &lt;code&gt;serialized&lt;/code&gt; пример , а &lt;code&gt;index&lt;/code&gt; - это индекс значения в списке значений, связанных с этой функцией и примером.</target>
        </trans-unit>
        <trans-unit id="f1bc576f02c202f427e41cb41858ad752ac7548f" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;data[i].shape&lt;/code&gt; must start with the corresponding &lt;code&gt;indices[i].shape&lt;/code&gt;, and the rest of &lt;code&gt;data[i].shape&lt;/code&gt; must be constant w.r.t. &lt;code&gt;i&lt;/code&gt;. That is, we must have &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt;. In terms of this &lt;code&gt;constant&lt;/code&gt;, the output shape is</source>
          <target state="translated">Каждый &lt;code&gt;data[i].shape&lt;/code&gt; должен начинаться с соответствующего &lt;code&gt;indices[i].shape&lt;/code&gt; , а остальные &lt;code&gt;data[i].shape&lt;/code&gt; должны быть постоянными относительно &lt;code&gt;i&lt;/code&gt; . То есть у нас должны быть &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt; . В терминах этой &lt;code&gt;constant&lt;/code&gt; форма вывода будет</target>
        </trans-unit>
        <trans-unit id="9918d15a3b50a9df8c8da4f16dfbf38a0b690d2a" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;op_jj&lt;/code&gt; on the diagonal is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;. &lt;code&gt;LinearOperator&lt;/code&gt;s in row &lt;code&gt;j&lt;/code&gt; of the blockwise structure must have &lt;code&gt;range_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;, and &lt;code&gt;LinearOperators&lt;/code&gt; in column &lt;code&gt;j&lt;/code&gt; must have &lt;code&gt;domain_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89ddb81cecdb78c46e47a25c2243e84460594e3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;opj&lt;/code&gt; is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;.</source>
          <target state="translated">Каждый &lt;code&gt;opj&lt;/code&gt; должен представлять квадратную матрицу и, следовательно, будет иметь форму &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be00db719d1ddeffb3b52a4e144efe9293d8f3f3" translate="yes" xml:space="preserve">
          <source>Each accumulator averages once enough gradients (replicas_to_aggregate) have been accumulated.</source>
          <target state="translated">Каждый аккумулятор усредняется после накопления достаточного количества градиентов (replicas_to_aggregate).</target>
        </trans-unit>
        <trans-unit id="441cc16d923fb9e6899572323e898557206ab000" translate="yes" xml:space="preserve">
          <source>Each batch component of the output permutation represents a permutation of &lt;code&gt;N&lt;/code&gt; elements, where the input sparse matrix components each have &lt;code&gt;N&lt;/code&gt; rows. That is, the component contains each of the integers &lt;code&gt;{0, .. N-1}&lt;/code&gt; exactly once. The &lt;code&gt;i&lt;/code&gt;th element represents the row index that the &lt;code&gt;i&lt;/code&gt;th row maps to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c1de68d7fc0e0b85125dfe0bb3e6024c8a2fef" translate="yes" xml:space="preserve">
          <source>Each bin value in the output indicates number of occurrences of the particular index. Here, index 1 in output has a value 2. This indicates value 1 occurs two times in &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">Каждое значение ячейки в выходных данных указывает количество вхождений определенного индекса. Здесь индекс 1 на выходе имеет значение 2. Это означает, что значение 1 встречается в &lt;code&gt;values&lt;/code&gt; два раза .</target>
        </trans-unit>
        <trans-unit id="46a35ac5d392d8a4c5717e0c79a99d2ec77af715" translate="yes" xml:space="preserve">
          <source>Each comparison returns a boolean &lt;code&gt;true&lt;/code&gt; (if &lt;code&gt;input_value &amp;gt; threshold&lt;/code&gt;) or and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca410c02aafe78f19d5f192ccdac3dcb53dfc437" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a square symmetric matrix; only the lower triangular part of the matrix is read. The values of the sparse matrix does not affect the returned permutation, only the sparsity pattern of the sparse matrix is used. Hence, a single AMD ordering may be reused for the Cholesky decompositions of sparse matrices with the same sparsity pattern but with possibly different values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5077956249be3e57d44f61a973c84229d1b44c4f" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a symmetric positive definite (SPD) matrix; although only the lower triangular part of the matrix is read. If any individual component is not SPD, then an InvalidArgument error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6712c61f3c9c472a7796d2e229fbb1c47ce399bd" translate="yes" xml:space="preserve">
          <source>Each conceptual range specification is encoded in the op's argument. This encoding is best understand by considering a non-trivial example. In particular, &lt;code&gt;foo[1, 2:4, None, ..., :-3:-1, :]&lt;/code&gt; will be encoded as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd67b0ec0b49f6ce7d82128e4a2712babeef4ea" translate="yes" xml:space="preserve">
          <source>Each element in the list has the following properties</source>
          <target state="translated">Каждый элемент списка имеет следующие свойства</target>
        </trans-unit>
        <trans-unit id="c87a6f35b5ba769325830ea659978838364ed0c5" translate="yes" xml:space="preserve">
          <source>Each element of the input Tensor is converted to an array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eff09768619dd4cfe4a6371293c28c087e9bbff" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;output&lt;/code&gt; is the mean of the corresponding size &lt;code&gt;ksize&lt;/code&gt; window in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Каждая запись в &lt;code&gt;output&lt;/code&gt; представляет собой среднее значение соответствующего размера &lt;code&gt;ksize&lt;/code&gt; окна в &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea831f12c1ec3212d288941d3c8bcb421edfe2df" translate="yes" xml:space="preserve">
          <source>Each instance supplies its own input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43a986e9580b1bf352d7fdac828cc905e217997" translate="yes" xml:space="preserve">
          <source>Each invocation of batch emits an &lt;code&gt;id&lt;/code&gt; scalar which will be used to identify this particular invocation when doing unbatch or its gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa1a6302073ad781167a8cd550ee605d20a64a5" translate="yes" xml:space="preserve">
          <source>Each item in texts can also be a list, in which case we assume each item of that list to be a token.</source>
          <target state="translated">Каждый элемент в тексте также может быть списком,и в этом случае мы предполагаем,что каждый элемент этого списка является жетоном.</target>
        </trans-unit>
        <trans-unit id="7ef25610b63ee3daa8cb47e92bed65b82174f660" translate="yes" xml:space="preserve">
          <source>Each job may also be specified as a sparse mapping from task indices to network addresses. This enables a server to be configured without needing to know the identity of (for example) all other worker tasks:</source>
          <target state="translated">Каждое задание также может быть указано как разреженное отображение от индексов заданий до сетевых адресов.Это позволяет настроить сервер без необходимости знать идентичность (например)всех остальных рабочих задач:</target>
        </trans-unit>
        <trans-unit id="1cdb23ee45a94e6a87da472c4a1c6f6fa240b0c1" translate="yes" xml:space="preserve">
          <source>Each layer has a dtype, which is typically the dtype of the layer's computations and variables. A layer's dtype can be queried via the &lt;a href=&quot;layer#dtype&quot;&gt;&lt;code&gt;Layer.dtype&lt;/code&gt;&lt;/a&gt; property. The dtype is specified with the &lt;code&gt;dtype&lt;/code&gt; constructor argument. In TensorFlow 2, the dtype defaults to &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; if no dtype is passed. &lt;code&gt;floatx()&lt;/code&gt; itself defaults to &quot;float32&quot;. Additionally, layers will cast their inputs to the layer's dtype in TensorFlow 2. When mixed precision is used, layers may have different computation and variable dtypes. See &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt; for details on layer dtypes.</source>
          <target state="translated">Каждый уровень имеет dtype, который обычно является dtype вычислений и переменных уровня. Тип слоя dtype можно запросить через свойство &lt;a href=&quot;layer#dtype&quot;&gt; &lt;code&gt;Layer.dtype&lt;/code&gt; &lt;/a&gt; . Dtype указывается с &lt;code&gt;dtype&lt;/code&gt; конструктора dtype . В TensorFlow 2 для dtype по умолчанию используется &lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt; если dtype не передан. &lt;code&gt;floatx()&lt;/code&gt; себе floatx () по умолчанию имеет значение &amp;laquo;float32&amp;raquo;. Кроме того, слои будут преобразовывать свои входные данные в dtype слоя в TensorFlow 2. Когда используется смешанная точность, слои могут иметь разные вычисления и переменные dtypes. См. &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt; для получения подробной информации о типах слоев.</target>
        </trans-unit>
        <trans-unit id="bb6241a556989afbd18759ec55fc7521c7320211" translate="yes" xml:space="preserve">
          <source>Each matrix may be transposed or adjointed (conjugated and transposed) according to the Boolean parameters &lt;code&gt;transpose_a&lt;/code&gt;, &lt;code&gt;adjoint_a&lt;/code&gt;, &lt;code&gt;transpose_b&lt;/code&gt; and &lt;code&gt;adjoint_b&lt;/code&gt;. At most one of &lt;code&gt;transpose_a&lt;/code&gt; or &lt;code&gt;adjoint_a&lt;/code&gt; may be True. Similarly, at most one of &lt;code&gt;transpose_b&lt;/code&gt; or &lt;code&gt;adjoint_b&lt;/code&gt; may be True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3e9548de72147ce2c10db7ff80fccfc964f054" translate="yes" xml:space="preserve">
          <source>Each member of the TensorList corresponds to one row of the input tensor, specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a436999bdcc841459f2d09c5dee0a8dc7aeb18" translate="yes" xml:space="preserve">
          <source>Each meta graph added to the SavedModel must be annotated with tags. The tags provide a means to identify the specific meta graph to load and restore, along with the shared set of variables and assets.</source>
          <target state="translated">Каждый мета-график,добавленный в SavedModel,должен быть аннотирован тегами.Тэги служат средством идентификации конкретного мета-графа для загрузки и восстановления,наряду с общим набором переменных и активов.</target>
        </trans-unit>
        <trans-unit id="4069de9e0766e0eb24cc7204db2911acde8497f0" translate="yes" xml:space="preserve">
          <source>Each newswire is encoded as a list of word indexes (integers). For convenience, words are indexed by overall frequency in the dataset, so that for instance the integer &quot;3&quot; encodes the 3rd most frequent word in the data. This allows for quick filtering operations such as: &quot;only consider the top 10,000 most common words, but eliminate the top 20 most common words&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ac48be6c56c94160a763562ebfbaed8ade1b51" translate="yes" xml:space="preserve">
          <source>Each op which emits a non-empty batch will also emit a non-empty batch_index Tensor, which, is a [K, 3] matrix where each row contains the invocation's id, start, and length of elements of each set of Tensors present in batched_tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec5ef88be1db2fa1a95ac0325a1bf99f771c0ac" translate="yes" xml:space="preserve">
          <source>Each output element consists of a key-value pair represented as a pair of scalar string &lt;code&gt;Tensor&lt;/code&gt;s, where the first &lt;code&gt;Tensor&lt;/code&gt; contains the key and the second &lt;code&gt;Tensor&lt;/code&gt; contains the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d446cb40035fb845f01a6f1a77eaf839d593c4" translate="yes" xml:space="preserve">
          <source>Each output patch can be reshaped to &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt;, where &lt;code&gt;depth&lt;/code&gt; is &lt;code&gt;images.shape[3]&lt;/code&gt;.</source>
          <target state="translated">Каждый выходной патч может быть изменен на &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt; , где &lt;code&gt;depth&lt;/code&gt; - &lt;code&gt;images.shape[3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c97cdddb81cdc590bd76534c8b39698ca73775c8" translate="yes" xml:space="preserve">
          <source>Each output pixel is computed by first transforming the pixel's footprint into the input tensor and then averaging the pixels that intersect the footprint. An input pixel's contribution to the average is weighted by the fraction of its area that intersects the footprint. This is the same as OpenCV's INTER_AREA.</source>
          <target state="translated">Каждый выходной пиксель вычисляется путем сначала преобразования отпечатка пикселя во входной тензор,а затем путем усреднения пикселей,пересекающих отпечаток.Вклад входного пиксела в среднее взвешивается по доле его площади,которая пересекает отпечаток.Это то же самое,что и INTER_AREA в OpenCV.</target>
        </trans-unit>
        <trans-unit id="64b34b561d406bfd771adf13970772919b62c25d" translate="yes" xml:space="preserve">
          <source>Each output tensor is a dense tensor. This means that it is padded to hold the largest number of repeated elements seen in the input minibatch. (The shape is also padded by one to prevent zero-sized dimensions). The actual repeat counts for each example in the minibatch can be found in the &lt;code&gt;sizes&lt;/code&gt; output. In many cases the output of &lt;code&gt;decode_proto&lt;/code&gt; is fed immediately into tf.squeeze if missing values are not a concern. When using tf.squeeze, always pass the squeeze dimension explicitly to avoid surprises.</source>
          <target state="translated">Каждый выходной тензор - это плотный тензор. Это означает, что он дополнен, чтобы удерживать наибольшее количество повторяющихся элементов во входном мини-пакете. (Форма также дополняется единицей, чтобы предотвратить размеры нулевого размера). Фактическое количество повторов для каждого примера в мини-партии можно найти в выходных данных &lt;code&gt;sizes&lt;/code&gt; . Во многих случаях вывод &lt;code&gt;decode_proto&lt;/code&gt; сразу же передается в tf.squeeze, если отсутствующие значения не вызывают беспокойства. При использовании tf.squeeze всегда явно передавайте размер сжатия, чтобы избежать сюрпризов.</target>
        </trans-unit>
        <trans-unit id="e6c91b6c2633362632f841c1ccb66bafe6332463" translate="yes" xml:space="preserve">
          <source>Each queue element is a tuple of one or more tensors, where each tuple component has a static dtype, and may have a static shape. The queue implementations support versions of enqueue and dequeue that handle single elements, versions that support enqueuing and dequeuing a batch of elements at once.</source>
          <target state="translated">Каждый элемент очереди представляет собой кортеж одного или нескольких тензоров,где каждый компонент кортежа имеет статический d-тип и может иметь статическую форму.Реализации очереди поддерживают версии enqueue и dequeue,которые обрабатывают отдельные элементы,версии,которые поддерживают enqueuing и dequeuing партии элементов сразу.</target>
        </trans-unit>
        <trans-unit id="551331f0073d6068b977b29fa7d823f6b93a3a5c" translate="yes" xml:space="preserve">
          <source>Each replica will take a single, different input from the inputs provided by one &lt;code&gt;get_next&lt;/code&gt; call on the input iterator.</source>
          <target state="translated">Каждая реплика будет принимать отдельные входные данные, отличные от входных данных, предоставленных одним вызовом &lt;code&gt;get_next&lt;/code&gt; на итераторе ввода.</target>
        </trans-unit>
        <trans-unit id="7f72f560c3d5b91e9a45405fd49d9679f5bbf4a3" translate="yes" xml:space="preserve">
          <source>Each row in the produced Tensor corresponds to the element in the TensorList specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5901818bcf4a21a5306c5bc783179fa30627b69" translate="yes" xml:space="preserve">
          <source>Each row of the &lt;code&gt;output&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt; will contain the explicit values from the same row in &lt;code&gt;st_input&lt;/code&gt;. &lt;code&gt;st_input&lt;/code&gt; must be ragged-right. If not it is not ragged-right, then an error will be generated.</source>
          <target state="translated">Каждая строка &lt;code&gt;output&lt;/code&gt; &lt;code&gt;RaggedTensor&lt;/code&gt; будет содержать явные значения из той же строки в &lt;code&gt;st_input&lt;/code&gt; . &lt;code&gt;st_input&lt;/code&gt; должен быть правым рваным. Если нет, то это не оборванное право, то будет сгенерирована ошибка.</target>
        </trans-unit>
        <trans-unit id="c216ccaa4d6eb31eeeeece9b91a97e7a2a1c5560" translate="yes" xml:space="preserve">
          <source>Each row of the returned &lt;code&gt;RaggedTensor&lt;/code&gt; contains a single sequence:</source>
          <target state="translated">Каждая строка возвращенного &lt;code&gt;RaggedTensor&lt;/code&gt; содержит одну последовательность:</target>
        </trans-unit>
        <trans-unit id="17e3eb7d39e837af72f23c35fc67b178925d530b" translate="yes" xml:space="preserve">
          <source>Each sequence has to a list of integers. In other words, sequences should be a list of sequences</source>
          <target state="translated">Каждая последовательность должна иметь список целых чисел.Другими словами,последовательности должны представлять собой список последовательностей.</target>
        </trans-unit>
        <trans-unit id="4e7b8ab60e2411c388ca12cf758dfa5c1a65a3f3" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='left')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bc0c4c8fa961e5c50c549ca608b718db80c7b0" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='right')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a4d7a3191432c4f1d74ce9050f003924f736da" translate="yes" xml:space="preserve">
          <source>Each tensor in the result list corresponds to one row of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea291be19a509a559a73149b95c038a31edc72b" translate="yes" xml:space="preserve">
          <source>Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of &lt;code&gt;vocab_file&lt;/code&gt; and &lt;code&gt;unigrams&lt;/code&gt; needs to be passed to this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e3878678f2b0a73d6ce75df8834a154d82279a" translate="yes" xml:space="preserve">
          <source>Each value in &lt;code&gt;feed_dict&lt;/code&gt; must be convertible to a numpy array of the dtype of the corresponding key.</source>
          <target state="translated">Каждое значение в &lt;code&gt;feed_dict&lt;/code&gt; должно быть преобразовано в массив numpy типа dtype соответствующего ключа.</target>
        </trans-unit>
        <trans-unit id="1eddebe67f51e2e98765c6c9e0fd906261da9314" translate="yes" xml:space="preserve">
          <source>Each value in the result represents the square root of the sum of the real and imaginary parts of an FFT on the current window of samples. In this way, the lowest dimension represents the power of each frequency in the current window, and adjacent windows are concatenated in the next dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fef5c634fcde75fa5e28df6cc454787267bb471" translate="yes" xml:space="preserve">
          <source>Each vector along the class dimension should hold a valid probability distribution e.g. for the case in which labels are of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, each row of &lt;code&gt;labels[i]&lt;/code&gt; must be a valid probability distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1e4d53433d9039c46f4248ad092a43c3a14839" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the finction is applied along.</source>
          <target state="translated">Каждый вектор обрабатывается независимо. На &lt;code&gt;axis&lt;/code&gt; аргумент , который устанавливает ось ввода finction приложено вдоль.</target>
        </trans-unit>
        <trans-unit id="29c1fe6a6572e141688b5c7bca927a840cc3db38" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the function is applied along.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0468f80c3414aaba1c31f9343982b0cf7d54f2" translate="yes" xml:space="preserve">
          <source>Each yield is a 3-tuple: the pathname of a directory, followed by lists of all its subdirectories and leaf files. That is, each yield looks like: &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt;. Each item is a string.</source>
          <target state="translated">Каждый yield представляет собой 3-кортеж: путь к каталогу, за которым следуют списки всех его подкаталогов и конечных файлов. То есть каждый выход выглядит так: &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt; . Каждый элемент представляет собой строку.</target>
        </trans-unit>
        <trans-unit id="7f50bc776ee8ac768be6f39d5bf960f531e28e50" translate="yes" xml:space="preserve">
          <source>Eager Compatibility</source>
          <target state="translated">Энергосберегающая совместимость</target>
        </trans-unit>
        <trans-unit id="47417439c687992a16b5c56566761d74801e7f76" translate="yes" xml:space="preserve">
          <source>Eager defined functions are functions decorated by tf.contrib.eager.defun.</source>
          <target state="translated">Определенные с нетерпением функции-это функции,оформленные tf.contrib.eager.defun.</target>
        </trans-unit>
        <trans-unit id="2b122e79faaa952b4168aa1fa16fa8a264711947" translate="yes" xml:space="preserve">
          <source>Eager execution</source>
          <target state="translated">жадное исполнение</target>
        </trans-unit>
        <trans-unit id="26da12bbabc651ef3fa4d97385bc838c93cbbb88" translate="yes" xml:space="preserve">
          <source>Eager execution cannot be enabled after TensorFlow APIs have been used to create or execute graphs. It is typically recommended to invoke this function at program startup and not in a library (as most libraries should be usable both with and without eager execution).</source>
          <target state="translated">Активное выполнение не может быть включено после использования API TensorFlow для создания или выполнения графиков.Обычно рекомендуется вызывать эту функцию при запуске программы,а не в библиотеке (так как большинство библиотек должно быть удобно использовать как с жадным исполнением,так и без него).</target>
        </trans-unit>
        <trans-unit id="ea4653faaf8b5c79819a2ca1f3ed18364e2ccc26" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled by default and this API returns &lt;code&gt;True&lt;/code&gt; in most of cases. However, this API might return &lt;code&gt;False&lt;/code&gt; in the following use cases.</source>
          <target state="translated">Активное выполнение включено по умолчанию, и этот API в большинстве случаев возвращает &lt;code&gt;True&lt;/code&gt; . Однако этот API может возвращать значение &lt;code&gt;False&lt;/code&gt; в следующих случаях использования.</target>
        </trans-unit>
        <trans-unit id="457086cec84666e014a19f01e4250cd0d71041e6" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled in the outermost context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d26f61db0485b6d7b42588dcdd8a60acfb62a2" translate="yes" xml:space="preserve">
          <source>Eager execution is typically enabled via &lt;a href=&quot;enable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt;&lt;/a&gt;, but may also be enabled within the context of a Python function via tf.contrib.eager.py_func.</source>
          <target state="translated">Активное выполнение обычно включается через &lt;a href=&quot;enable_eager_execution&quot;&gt; &lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt; &lt;/a&gt; , но также может быть включено в контексте функции Python через tf.contrib.eager.py_func.</target>
        </trans-unit>
        <trans-unit id="6d06564a36a9559d2e0a5392cfeb6c660976f37d" translate="yes" xml:space="preserve">
          <source>Eager execution provides an imperative interface to TensorFlow. With eager execution enabled, TensorFlow functions execute operations immediately (as opposed to adding to a graph to be executed later in a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt;) and return concrete values (as opposed to symbolic references to a node in a computational graph).</source>
          <target state="translated">Активное выполнение обеспечивает обязательный интерфейс для TensorFlow. При включенном нетерпеливом выполнении функции TensorFlow выполняют операции немедленно (в отличие от добавления к графу, который будет выполняться позже в &lt;a href=&quot;session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt; ) и возвращают конкретные значения (в отличие от символических ссылок на узел в вычислительном графе) .</target>
        </trans-unit>
        <trans-unit id="2cfb1b3e6b97e592ebcc30338ad523ea602b8bc3" translate="yes" xml:space="preserve">
          <source>EagerPyFunc</source>
          <target state="translated">EagerPyFunc</target>
        </trans-unit>
        <trans-unit id="a8fc50e8e18487e58459997371c0df412c59129e" translate="yes" xml:space="preserve">
          <source>Eagerly executes a python function to compute func(input)-&amp;gt;output. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cbba3896e6df9149bdcccd4f43477fd6268f65" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3cdcecf51a2f7be5b781220a956f9c2b0b72b0" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup_sparse().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207de216011ca74ce6638b919e37a863ce6e5c3d" translate="yes" xml:space="preserve">
          <source>EditDistance</source>
          <target state="translated">EditDistance</target>
        </trans-unit>
        <trans-unit id="b5725757ffa6f438d6a1a3133c5b50874a3dfd45" translate="yes" xml:space="preserve">
          <source>Efficiency of the transform is not critical, and using &lt;code&gt;map_fn&lt;/code&gt; is more readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bc58428735ee8f0c80598baae3e59551f7ae8f" translate="yes" xml:space="preserve">
          <source>Efficient Backprop, &lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;Lecun et al., 1998&lt;/a&gt;</source>
          <target state="translated">Эффективный &lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;обратный поток&lt;/a&gt; , Лекун и др., 1998 г.</target>
        </trans-unit>
        <trans-unit id="e76314f5d6e0a97f03753acc7a70778c22f74ea1" translate="yes" xml:space="preserve">
          <source>Efficient Learning using Forward-Backward Splitting: &lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting&quot;&gt;Duchi et al., 2009&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541e98fb2dce535c7b2da83f12b31189d20f638f" translate="yes" xml:space="preserve">
          <source>Efficient Object Localization Using Convolutional Networks</source>
          <target state="translated">Эффективная локализация объектов с помощью конвволюционных сетей</target>
        </trans-unit>
        <trans-unit id="d6abc47afa812ef58db279f94c1c36828411a382" translate="yes" xml:space="preserve">
          <source>EfficientNet models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05b9e141fa80e412892c6cd14bcda5f86d6b8da" translate="yes" xml:space="preserve">
          <source>Efficiently get the [batch] diagonal part of this operator.</source>
          <target state="translated">Эффективно получить диагональную часть оператора [партия].</target>
        </trans-unit>
        <trans-unit id="13124d2b4da61f7aa5ea141ded16fbed7f0f6d86" translate="yes" xml:space="preserve">
          <source>Eig</source>
          <target state="translated">Eig</target>
        </trans-unit>
        <trans-unit id="c8ec125266deeea7c4f953a5aa6fdd84d6f82aa9" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. Sorted in non-decreasing order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1a5ed6683b9d4dd60c31701c552c42328d36f7" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. The vector &lt;code&gt;e[..., :]&lt;/code&gt; contains the &lt;code&gt;N&lt;/code&gt; eigenvalues of &lt;code&gt;tensor[..., :, :]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25b857ec8868262c6fbadab11ce9b1e7c009be8" translate="yes" xml:space="preserve">
          <source>Eigenvectors. Shape is &lt;code&gt;[..., N, N]&lt;/code&gt;. The columns of the inner most matrices contain eigenvectors of the corresponding matrices in &lt;code&gt;tensor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7269d88813a122dd6b4c8836b591f55f6ef940" translate="yes" xml:space="preserve">
          <source>Einsum</source>
          <target state="translated">Einsum</target>
        </trans-unit>
        <trans-unit id="219d9a97a56bfa83e87ec96f25c1896bc4e10be9" translate="yes" xml:space="preserve">
          <source>Einsum allows defining Tensors by defining their element-wise computation. This computation is defined by &lt;code&gt;equation&lt;/code&gt;, a shorthand form based on Einstein summation. As an example, consider multiplying two matrices A and B to form a matrix C. The elements of C are given by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6332fbc7665932299c4f65efff98735e87f37759" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of image files found in the directory. Labels should be sorted according to the alphanumeric order of the image file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e692a1b7521cf4da8b4b5796e22fe60b90963fd" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of text files found in the directory. Labels should be sorted according to the alphanumeric order of the text file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaec3c8b49c5745db2d6043e40b48bc9c18bdeb" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5', indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd4ca6670b03a9bfab2e16a5fc8a8e3f5ffde0e" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5'. A &lt;code&gt;filepath&lt;/code&gt; ending in '.h5' or '.keras' will default to HDF5 if &lt;code&gt;save_format&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;. Otherwise &lt;code&gt;None&lt;/code&gt; defaults to 'tf'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d062d930d0d4de07457feda8bc0831bc6e5596" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;'tf'&lt;/code&gt; or &lt;code&gt;'h5'&lt;/code&gt;, indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d76697506e42ec307d4529322ddbe19f22d213c" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;None&lt;/code&gt; (default to original size) or tuple of ints &lt;code&gt;(img_height, img_width)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffafa3d0304f38e47fbf37a645ad9ccf6604e90" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on &lt;code&gt;K.learning_phase&lt;/code&gt;.</source>
          <target state="translated">Либо &lt;code&gt;x&lt;/code&gt; , либо &lt;code&gt;alt&lt;/code&gt; на основе &lt;code&gt;K.learning_phase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e5dbc63f9b3142dc5475c5c804320a7f9337ebb" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on the &lt;code&gt;training&lt;/code&gt; flag. the &lt;code&gt;training&lt;/code&gt; flag defaults to &lt;code&gt;K.learning_phase()&lt;/code&gt;.</source>
          <target state="translated">Либо &lt;code&gt;x&lt;/code&gt; , либо &lt;code&gt;alt&lt;/code&gt; в зависимости от флага &lt;code&gt;training&lt;/code&gt; . на &lt;code&gt;training&lt;/code&gt; флаг по умолчанию &lt;code&gt;K.learning_phase()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe1ca5362ad2a08c3954b55d07cd568f8d5058f" translate="yes" xml:space="preserve">
          <source>Either None (indicating no masking) or a callable with the same signature as the &lt;code&gt;compute_mask&lt;/code&gt; layer method, or a tensor that will be returned as output mask regardless of what the input is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df1b219e2ba52e54c743655b14e433cb2458129" translate="yes" xml:space="preserve">
          <source>Either a 3-D float Tensor of shape [height, width, depth], or a 4-D Tensor of shape [batch_size, height, width, depth].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380feaa1f505e0addd504a1accfac5dfd33bf8ce" translate="yes" xml:space="preserve">
          <source>Either a &lt;code&gt;Dimension&lt;/code&gt; instance, an integer, or None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423c905a5a8c1eace2913afcbcfb0708d77ef8a7" translate="yes" xml:space="preserve">
          <source>Either a Python boolean, or a TensorFlow boolean scalar tensor (e.g. a placeholder). Whether to return the output in training mode (normalized with statistics of the current batch) or in inference mode (normalized with moving statistics). &lt;strong&gt;NOTE&lt;/strong&gt;: make sure to set this parameter correctly, or else your training/inference will not work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6595d5734cae8b02144503445c30f8dcbbcd46a9" translate="yes" xml:space="preserve">
          <source>Either a bool or a scalar boolean tensor. If False, the caller should skip applying &lt;code&gt;grads&lt;/code&gt; to the variables this step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edba00896125970f012882b1ce17126dfb9cc31" translate="yes" xml:space="preserve">
          <source>Either a scalar &lt;code&gt;N&lt;/code&gt;, or a list or an &lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or &lt;code&gt;Tensor&lt;/code&gt; the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, respectively. The number of axes for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must be equal. If &lt;code&gt;axes=0&lt;/code&gt;, computes the outer product between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4db703c5115c54df4b0b6654ecde498f48b471" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (described above). Order in which &lt;code&gt;fetches&lt;/code&gt; operations are evaluated inside the call is undefined.</source>
          <target state="translated">Либо одно значение, если &lt;code&gt;fetches&lt;/code&gt; - это один элемент графа, либо список значений, если &lt;code&gt;fetches&lt;/code&gt; - это список, либо словарь с теми же ключами, что и &lt;code&gt;fetches&lt;/code&gt; если это словарь (описанный выше). Порядок, в котором операции &lt;code&gt;fetches&lt;/code&gt; оцениваются внутри вызова, не определен.</target>
        </trans-unit>
        <trans-unit id="fcf124e1ec0a0a15f09c663dd04829849e8eb3fc" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">Либо одно значение, если &lt;code&gt;fetches&lt;/code&gt; - это один элемент графа, либо список значений, если &lt;code&gt;fetches&lt;/code&gt; - это список, либо словарь с теми же ключами, что и &lt;code&gt;fetches&lt;/code&gt; если это словарь (см. Документацию по &lt;code&gt;run&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3eb23dd0ccf4cd4670feebda643a09647355a941" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b584bc32c186044680b73b62928607b6633394" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b2a5363bfd28450b1ee6f5c4e71f38dfb994ca" translate="yes" xml:space="preserve">
          <source>Either an integer indicating the number of splits along &lt;code&gt;axis&lt;/code&gt; or a 1-D integer &lt;code&gt;Tensor&lt;/code&gt; or Python list containing the sizes of each output tensor along &lt;code&gt;axis&lt;/code&gt;. If a scalar, then it must evenly divide &lt;code&gt;value.shape[axis]&lt;/code&gt;; otherwise the sum of sizes along the split axis must match that of the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dd63725103a91eac4d917b615e68ab3beaa44b" translate="yes" xml:space="preserve">
          <source>Either assigns values immediately if variables to restore have been created already, or defers restoration until the variables are created. Dependencies added after this call will be matched if they have a corresponding object in the checkpoint (the restore request will queue in any trackable object waiting for the expected dependency to be added).</source>
          <target state="translated">Либо назначает значения немедленно,если переменные для восстановления уже созданы,либо откладывает восстановление до тех пор,пока переменные не будут созданы.Зависимости,добавленные после этого вызова,будут сопоставлены,если в контрольной точке есть соответствующий объект (запрос на восстановление будет стоять в очереди на любой отслеживаемый объект,ожидающий добавления ожидаемой зависимости).</target>
        </trans-unit>
        <trans-unit id="448b20303154a96259807e9b8b83147054894fb5" translate="yes" xml:space="preserve">
          <source>Either classes or scores or both must be set.</source>
          <target state="translated">Должны быть установлены либо классы,либо баллы,либо и то,и другое.</target>
        </trans-unit>
        <trans-unit id="8f347750abdcdb3827d9ee5d868094a42b375fe5" translate="yes" xml:space="preserve">
          <source>Either matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to &lt;code&gt;True&lt;/code&gt;. These are &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">Любая матрица может быть транспонирована или присоединена (сопряжена и транспонирована) на лету, установив для одного из соответствующих флагов значение &lt;code&gt;True&lt;/code&gt; . По умолчанию это &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53797e79edd27930af5859b922a6b2a7b5bdf1a6" translate="yes" xml:space="preserve">
          <source>Either saves in HDF5 or in TensorFlow format based on the &lt;code&gt;save_format&lt;/code&gt; argument.</source>
          <target state="translated">Сохраняется либо в формате HDF5, либо в формате &lt;code&gt;save_format&lt;/code&gt; на основе аргумента save_format .</target>
        </trans-unit>
        <trans-unit id="eb6197851e946ffe9ed420c4ae011f04cbcdc10a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A name for the operation (optional). &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;filters`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e846e78ce644e29dc7af4f11843fd0355e728b4" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4638a2d653dd4eb92ead8e82c012ac8dda60e9aa" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&lt;code&gt;&quot;SAME&quot;&lt;/code&gt; or &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;/code&gt;. When explicit padding used and data_format is &lt;code&gt;&quot;NCHW&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98017d368e570d514552b910ff1bd1af7ae428c5" translate="yes" xml:space="preserve">
          <source>Element-wise absolute value.</source>
          <target state="translated">Абсолютное значение по Элементу.</target>
        </trans-unit>
        <trans-unit id="78020e1b843ad8d8b0d46f516b9cac5e7dc65b9e" translate="yes" xml:space="preserve">
          <source>Element-wise equality between two tensors.</source>
          <target state="translated">Элементное равенство между двумя тензорами.</target>
        </trans-unit>
        <trans-unit id="ca64c7c534dabf70dfed1eb6dc70b44fa38b0ccd" translate="yes" xml:space="preserve">
          <source>Element-wise exponential.</source>
          <target state="translated">Элементный экспоненциальный.</target>
        </trans-unit>
        <trans-unit id="213307a14887e855cc376ef29b1c517922979973" translate="yes" xml:space="preserve">
          <source>Element-wise exponentiation.</source>
          <target state="translated">Элементное выражение.</target>
        </trans-unit>
        <trans-unit id="2264a97a4de7acba1b83aee85d16a9f837ae5ff9" translate="yes" xml:space="preserve">
          <source>Element-wise inequality between two tensors.</source>
          <target state="translated">Элементное неравенство между двумя тензорами.</target>
        </trans-unit>
        <trans-unit id="9ee943cf4b9c4af0ae00101b435fa732547c6a20" translate="yes" xml:space="preserve">
          <source>Element-wise log.</source>
          <target state="translated">Журнал по Элементу.</target>
        </trans-unit>
        <trans-unit id="89a4d2c72a30a07811d44ea78fbc021903cf4719" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two tensors.</source>
          <target state="translated">По Элементу максимум два тензора.</target>
        </trans-unit>
        <trans-unit id="792e29246325fc012d7c71ccbfcbec06fc46c4b7" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two tensors.</source>
          <target state="translated">Минимум два тензора по Элементу.</target>
        </trans-unit>
        <trans-unit id="d2e07e1dec77fee8b77d01ca17740a2266df70d5" translate="yes" xml:space="preserve">
          <source>Element-wise multiplication of a sparse matrix with a dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf3909281d01b6aeb4e0d7519f5b59953f327cd" translate="yes" xml:space="preserve">
          <source>Element-wise rounding to the closest integer.</source>
          <target state="translated">Элементное округление до ближайшего целого.</target>
        </trans-unit>
        <trans-unit id="61e18f83bff69cdbde9a9f5f55ae3a649e9b0c60" translate="yes" xml:space="preserve">
          <source>Element-wise sigmoid.</source>
          <target state="translated">Элементный сигмовидный.</target>
        </trans-unit>
        <trans-unit id="070f468605c58753ce57d39af8312f11d94c4af5" translate="yes" xml:space="preserve">
          <source>Element-wise sign.</source>
          <target state="translated">Элементный знак.</target>
        </trans-unit>
        <trans-unit id="56f8da5e2231c69a7a51b7abf0358aeb9ae42429" translate="yes" xml:space="preserve">
          <source>Element-wise square root.</source>
          <target state="translated">Квадратный корень Элемента.</target>
        </trans-unit>
        <trans-unit id="dd8913b917191e051975a666af524532e336480e" translate="yes" xml:space="preserve">
          <source>Element-wise square.</source>
          <target state="translated">Площадь Элемента.</target>
        </trans-unit>
        <trans-unit id="4a6ac47e9c2496c554ade7ff071a81074d224a3a" translate="yes" xml:space="preserve">
          <source>Element-wise tanh.</source>
          <target state="translated">Элементный загар.</target>
        </trans-unit>
        <trans-unit id="7d6405e81daea2ee6eabc8745d4a27bf65b6948c" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt; y).</source>
          <target state="translated">Поэлементное значение истинности (x&amp;gt; y).</target>
        </trans-unit>
        <trans-unit id="29b77c6f4cfd5cd17ea8d6410b420dc1c621e7c2" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt;= y).</source>
          <target state="translated">Поэлементное значение истинности (x&amp;gt; = y).</target>
        </trans-unit>
        <trans-unit id="b0b69f9a42693e2346143d414a3e98fe0f8a3639" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt; y).</source>
          <target state="translated">Поэлементное значение истинности (x &amp;lt;y).</target>
        </trans-unit>
        <trans-unit id="2062fabe4ac424967ff0d008cda56315cc93dfab" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt;= y).</source>
          <target state="translated">Поэлементное значение истинности (x &amp;lt;= y).</target>
        </trans-unit>
        <trans-unit id="e8c81beff185a49555c7d38080f1307fa0e996f4" translate="yes" xml:space="preserve">
          <source>Element-wise value clipping.</source>
          <target state="translated">Элементное вырезание значений.</target>
        </trans-unit>
        <trans-unit id="b961a210f2d79245a9d3af5d6f47fd0a5b49e3c6" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Элементами могут быть вложенные структуры кортежей, именованные кортежи и словари. Компоненты элемента могут быть любого типа, представленного &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; , включая &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94931272648c62fb3ad1e0aa8316b17376df627c" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Note that Python lists are &lt;em&gt;not&lt;/em&gt; treated as nested structures of components. Instead, lists are converted to tensors and treated as components. For example, the element &lt;code&gt;(1, [1, 2, 3])&lt;/code&gt; has only two components; the tensor &lt;code&gt;1&lt;/code&gt; and the tensor &lt;code&gt;[1, 2, 3]&lt;/code&gt;. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4377ae485d3bfaf8bf271a435b0fad66752fcfce" translate="yes" xml:space="preserve">
          <source>Elements come out of the barrier when they are complete, and in the order in which they were placed into the barrier. The indices output provides information about the batch in which each element was originally inserted into the barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837d5bca6a2536af9b3f581528ad4014139ab8ca" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is non-decreasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially non-decreasing.</source>
          <target state="translated">Элементы &lt;code&gt;x&lt;/code&gt; сравниваются в строковом порядке. Тензор &lt;code&gt;[x[0],...]&lt;/code&gt; не убывает, если для каждой смежной пары выполняется &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt; . Если &lt;code&gt;x&lt;/code&gt; имеет менее двух элементов, он тривиально не убывает.</target>
        </trans-unit>
        <trans-unit id="c61d81f0fbebf9d7141fc0ad59baf078a97c457b" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is strictly increasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially strictly increasing.</source>
          <target state="translated">Элементы &lt;code&gt;x&lt;/code&gt; сравниваются в строковом порядке. Тензор &lt;code&gt;[x[0],...]&lt;/code&gt; строго возрастает, если для каждой смежной пары выполняется &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt; . Если в &lt;code&gt;x&lt;/code&gt; меньше двух элементов, он строго возрастает тривиально.</target>
        </trans-unit>
        <trans-unit id="4dc731347a173d7e073cb0fba2df1b0819210af7" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;Dataset&lt;/code&gt; are grouped together by length and then are padded and batched.</source>
          <target state="translated">Элементы &lt;code&gt;Dataset&lt;/code&gt; группируются по длине, а затем дополняются и группируются.</target>
        </trans-unit>
        <trans-unit id="a197c432dad195eda4fde7342eee45a5fcb648a2" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input must either be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a0623a4155ed9364977209435f1be44fe29103" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise AND of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Поэлементно вычисляет поразрядное И для &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb969553b4858295e01a3d6f8ad6eaf372be726c" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise OR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Поэлементно вычисляет поразрядное ИЛИ &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a05ebe19c26d9b40a955aba0105f5c386a8c09b" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise XOR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Поэлементно вычисляет побитовое исключающее ИЛИ &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8565fc2ae8f5566706199d638cf76533351bcc91" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise left-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Поэлементно вычисляет побитовый сдвиг влево &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75c9971bf7398ee8aae281ee6e2b5f6cdd93c860" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise right-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Поэлементно вычисляет побитовый сдвиг вправо &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9c075ef1bb96e78c3aeb788db6fdaa2ad6900d8" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">Else</target>
        </trans-unit>
        <trans-unit id="f63b6fda8c1d5fc8c3b067d8b3484c72fd8bde26" translate="yes" xml:space="preserve">
          <source>Else, 4D tensor with shape: &lt;code&gt;(samples, filters, new_rows, new_cols)&lt;/code&gt; if data_format='channels_first' or 4D tensor with shape: &lt;code&gt;(samples, new_rows, new_cols, filters)&lt;/code&gt; if data_format='channels_last'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02ec6df2e4d02d170385ed26ba3d8f8db8b5eb9" translate="yes" xml:space="preserve">
          <source>Else, N-D tensor with shape &lt;code&gt;[batch_size, output_size]&lt;/code&gt;, where &lt;code&gt;output_size&lt;/code&gt; could be a high dimension tensor shape.</source>
          <target state="translated">&lt;code&gt;[batch_size, output_size]&lt;/code&gt; тензор ND с формой [batch_size, output_size] , где &lt;code&gt;output_size&lt;/code&gt; может быть формой тензора большой размерности.</target>
        </trans-unit>
        <trans-unit id="08d50cb65d0e77a5bb79701db8ed4980b646ac23" translate="yes" xml:space="preserve">
          <source>Else, we will return the global Keras session assuming it matches the current graph.</source>
          <target state="translated">В противном случае,мы вернем глобальную сессию Keras,если она соответствует текущему графику.</target>
        </trans-unit>
        <trans-unit id="de6f454352ca47ec357dabfaa33cd93a1f9ce566" translate="yes" xml:space="preserve">
          <source>Elu</source>
          <target state="translated">Elu</target>
        </trans-unit>
        <trans-unit id="d01bd80879b349683733e5d1ec5baed6c2f291a2" translate="yes" xml:space="preserve">
          <source>EluGrad</source>
          <target state="translated">EluGrad</target>
        </trans-unit>
        <trans-unit id="dbab1f77c2fa1efee02c3a9de683182e574ad133" translate="yes" xml:space="preserve">
          <source>Embedding for a DNN model:</source>
          <target state="translated">Встраивание для модели DNN:</target>
        </trans-unit>
        <trans-unit id="5f1914aef63cb18255e0d73bf9dd86ecf6e822ae" translate="yes" xml:space="preserve">
          <source>Emits randomized records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="0df4bd7c35e855099ed1dadafd9aa430275f2289" translate="yes" xml:space="preserve">
          <source>EmptyTensorList</source>
          <target state="translated">EmptyTensorList</target>
        </trans-unit>
        <trans-unit id="eae69d19ffba73c01cbbf7e007672f5917a4e516" translate="yes" xml:space="preserve">
          <source>Enable all features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fe59ed1244f53116bb5c0e75cfa18eecac587f" translate="yes" xml:space="preserve">
          <source>Enable dumping debugging information from a TensorFlow program.</source>
          <target state="translated">Включить дампинг отладочной информации из программы TensorFlow.</target>
        </trans-unit>
        <trans-unit id="20a9d31054c9d598ffffccd5a4dbb93e89b63981" translate="yes" xml:space="preserve">
          <source>Enable mixed precision via a graph rewrite.</source>
          <target state="translated">Включить смешанную точность с помощью переписывания графов.</target>
        </trans-unit>
        <trans-unit id="a0bd6180f771c064da1f1a770b7daac29a771883" translate="yes" xml:space="preserve">
          <source>Enable or disable JIT compilation of operators within the scope.</source>
          <target state="translated">Включить или отключить компиляцию операторов JIT.</target>
        </trans-unit>
        <trans-unit id="222fb4bafa995e3993fcca0f4ff075713e48e674" translate="yes" xml:space="preserve">
          <source>Enable tensor numerics checking in an eager/graph unified fashion.</source>
          <target state="translated">Включите проверку тензорной числовой величины в едином режиме &quot;жажда/графика&quot;.</target>
        </trans-unit>
        <trans-unit id="1540a7c7e147411e5bfea16321035794907e1710" translate="yes" xml:space="preserve">
          <source>Enable the V2 dtype behavior for Keras layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5a474bba7abadff8b42d6aeff482a53678a17c" translate="yes" xml:space="preserve">
          <source>Enable visualizations for TensorBoard.</source>
          <target state="translated">Включите визуализации для TensorBoard.</target>
        </trans-unit>
        <trans-unit id="11c564b53610a3d8ae88148f0774441fd283eb58" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Включает / отключает активное выполнение &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53cf39d33875070afa7ed0b3695e6633b06a3095" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1afb1bf35ef313cbb3e295ba11df528f6e82d34" translate="yes" xml:space="preserve">
          <source>Enables TensorFlow 2.x behaviors.</source>
          <target state="translated">Обеспечивает поведение TensorFlow 2.x.</target>
        </trans-unit>
        <trans-unit id="eefb45023037033b3697cb9f9c0b288e668b7b3d" translate="yes" xml:space="preserve">
          <source>Enables eager execution for the lifetime of this program.</source>
          <target state="translated">Позволяет выполнять программу в течение всего срока ее службы.</target>
        </trans-unit>
        <trans-unit id="3e0b95f0fa43081f563196966995b24de120f0ba" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">Обеспечивает экспериментальный MLIR-основанный мост компилятора TensorFlow.</target>
        </trans-unit>
        <trans-unit id="321394eedd961dcd1e7093ef04a11e936e2d3b05" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4761221bfce06cf2c473a5ac7aededbd81781ab7" translate="yes" xml:space="preserve">
          <source>Enables this summary writer for the current thread.</source>
          <target state="translated">Включает эту программу для записи в текущем потоке.</target>
        </trans-unit>
        <trans-unit id="f11ea0aebe664ae119dec001a0b9f2d29f3ca87b" translate="yes" xml:space="preserve">
          <source>Encapsulates metric logic and state.</source>
          <target state="translated">Инкапсулирует метрическую логику и состояние.</target>
        </trans-unit>
        <trans-unit id="03deba2273e4d1245d1695249ace3ac3cb04e064" translate="yes" xml:space="preserve">
          <source>Encode a tensor of ints into unicode strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d24a34fa72ad98d28372d4386ca19052a1f4fd" translate="yes" xml:space="preserve">
          <source>Encode audio data using the WAV file format.</source>
          <target state="translated">Кодируйте звуковые данные с помощью формата WAV файла.</target>
        </trans-unit>
        <trans-unit id="abdaadb2d4bd18ba0c09e21ce45020cd7b4b86ae" translate="yes" xml:space="preserve">
          <source>Encode strings into web-safe base64 format.</source>
          <target state="translated">Кодирование строк в безопасный для Интернета формат base64.</target>
        </trans-unit>
        <trans-unit id="968ebe80fffbafa93be61d3ae4c6827d20a11eac" translate="yes" xml:space="preserve">
          <source>EncodeBase64</source>
          <target state="translated">EncodeBase64</target>
        </trans-unit>
        <trans-unit id="81d21d283ed47705a4a5239add986fc53f16fbad" translate="yes" xml:space="preserve">
          <source>EncodeJpeg</source>
          <target state="translated">EncodeJpeg</target>
        </trans-unit>
        <trans-unit id="9736dbeaeca28f865990647979abfdc12a915af3" translate="yes" xml:space="preserve">
          <source>EncodeJpegVariableQuality</source>
          <target state="translated">EncodeJpegVariableQuality</target>
        </trans-unit>
        <trans-unit id="256ca4a630c1ad4dd4d9d7e63b4f4341461643b8" translate="yes" xml:space="preserve">
          <source>EncodePng</source>
          <target state="translated">EncodePng</target>
        </trans-unit>
        <trans-unit id="6987fe797a5924074b03c0ad70d89c2d4e1aa8aa" translate="yes" xml:space="preserve">
          <source>EncodeProto</source>
          <target state="translated">EncodeProto</target>
        </trans-unit>
        <trans-unit id="8957a376f479497d6e40a818880082a8bb2f4bb2" translate="yes" xml:space="preserve">
          <source>EncodeWav</source>
          <target state="translated">EncodeWav</target>
        </trans-unit>
        <trans-unit id="16a4fa81ee2e04bd7a401eba8428d573c4a50803" translate="yes" xml:space="preserve">
          <source>Encodes a &lt;code&gt;RaggedTensor&lt;/code&gt; into a &lt;code&gt;variant&lt;/code&gt; Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c95c7b314e36b497965b9d97cb027f94d7aeb8" translate="yes" xml:space="preserve">
          <source>Encodes each sequence of Unicode code points in &lt;code&gt;input&lt;/code&gt; into a string.</source>
          <target state="translated">Кодирует каждую последовательность кодовых точек Unicode на &lt;code&gt;input&lt;/code&gt; в строку.</target>
        </trans-unit>
        <trans-unit id="1314b20b59619cbf6729cf12663e572416610647" translate="yes" xml:space="preserve">
          <source>Encodes the given &lt;code&gt;RaggedTensor&lt;/code&gt; and returns a &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is True, then input &lt;code&gt;RaggedTensor&lt;/code&gt; is unbatched along the zero-th dimension, each component &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded into a scalar &lt;code&gt;variant&lt;/code&gt; Tensor, and these are stacked to return a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is False, then the input &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded as is and a scalar &lt;code&gt;variant&lt;/code&gt; Tensor is returned. A &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded by first creating a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor with &lt;code&gt;ragged_rank + 1&lt;/code&gt; elements, containing the splits and values Tensors of the &lt;code&gt;RaggedTensor&lt;/code&gt;. Then the 1-D &lt;code&gt;variant&lt;/code&gt; Tensor is wrapped in a scalar &lt;code&gt;variant&lt;/code&gt; Tensor. See &lt;code&gt;RaggedTensorFromVariant&lt;/code&gt; for the corresponding decoding logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c18781d5d5838a386e7f2e416fc47f7b0e506a" translate="yes" xml:space="preserve">
          <source>Encoding to use when writing string content. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004003571b664f555c79b413696ee33e12ad9b5d" translate="yes" xml:space="preserve">
          <source>End character that is appended at the end the printed string. Defaults to the newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cf7d581450a0a51eeea499b6b02f740f714fb5" translate="yes" xml:space="preserve">
          <source>Enqueue a Tensor on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc13a62fb9e2a8300bb9fe311ec0d5d8dde6065" translate="yes" xml:space="preserve">
          <source>Enqueue multiple Tensor values on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b78c4f830efb634df5877484f66b46105d79ec" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingIntegerBatch</source>
          <target state="translated">EnqueueTPUEmbeddingIntegerBatch</target>
        </trans-unit>
        <trans-unit id="cdca9f2840c0a160faa76ce84dfd26d10b2e15c0" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingRaggedTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingRaggedTensorBatch</target>
        </trans-unit>
        <trans-unit id="1328f41df615d38a5b73994f5f5369d416436810" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseBatch</target>
        </trans-unit>
        <trans-unit id="15f70eb0f8aceba7658fead772c7b4ff1e4d1d95" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseTensorBatch</target>
        </trans-unit>
        <trans-unit id="5683cb6af38e31071180cef9386ec900be332114" translate="yes" xml:space="preserve">
          <source>Enqueues a different list of tensors in different threads. Implemented using a queue -- a &lt;code&gt;QueueRunner&lt;/code&gt; for the queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">Ставит в очередь другой список тензоров в разных потоках. Реализовано с использованием очереди - это &lt;code&gt;QueueRunner&lt;/code&gt; для очереди добавляется к текущей &lt;code&gt;Graph&lt;/code&gt; &amp;laquo;s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; коллекции.</target>
        </trans-unit>
        <trans-unit id="8670322121e626d81f991f7d69880960bd89a370" translate="yes" xml:space="preserve">
          <source>Enqueues a tuple of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e30314779202231181351b84dd34846567a2f6" translate="yes" xml:space="preserve">
          <source>Enqueues and Dequeues to the &lt;code&gt;PriorityQueue&lt;/code&gt; must include an additional tuple entry at the beginning: the &lt;code&gt;priority&lt;/code&gt;. The priority must be an int64 scalar (for &lt;code&gt;enqueue&lt;/code&gt;) or an int64 vector (for &lt;code&gt;enqueue_many&lt;/code&gt;).</source>
          <target state="translated">Постановка и снятие с очереди в &lt;code&gt;PriorityQueue&lt;/code&gt; должна включать в себя дополнительную запись кортежа: &lt;code&gt;priority&lt;/code&gt; . Приоритет должен быть скаляром int64 (для &lt;code&gt;enqueue&lt;/code&gt; ) или вектором int64 (для &lt;code&gt;enqueue_many&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d81d953ea363374239fe43375852b3f34687f421" translate="yes" xml:space="preserve">
          <source>Enqueues id tensors for embedding lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce82621edcce5f93df7566dd835d9503feeccdf" translate="yes" xml:space="preserve">
          <source>Enqueues one element to this queue.</source>
          <target state="translated">Заносит один элемент в эту очередь.</target>
        </trans-unit>
        <trans-unit id="90cb2e60d785aff93add1fa0fe7d6d52fb7d8d2d" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more elements to this queue.</source>
          <target state="translated">Задает ноль или больше элементов в эту очередь.</target>
        </trans-unit>
        <trans-unit id="d477e8507b00563f90dd22902da1f3308522cfb5" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more tuples of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556d9beffa9d2d825aeeaef90ce79c6045e5e75a" translate="yes" xml:space="preserve">
          <source>EnsureShape</source>
          <target state="translated">EnsureShape</target>
        </trans-unit>
        <trans-unit id="ec07a7b9b065fec4ccc1c035390c238f21a7e560" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;tensor&lt;/code&gt; is being traced by this tape.</source>
          <target state="translated">Гарантирует, что &lt;code&gt;tensor&lt;/code&gt; отслеживается этой лентой.</target>
        </trans-unit>
        <trans-unit id="ffa73138967f2617b65584ab4b4ab573ff280e77" translate="yes" xml:space="preserve">
          <source>Ensures that flag is not None during program execution.</source>
          <target state="translated">Гарантирует,что флаг не будет None во время выполнения программы.</target>
        </trans-unit>
        <trans-unit id="7fba0ef82f0ba5fc0578d25be123e547e761deca" translate="yes" xml:space="preserve">
          <source>Ensures that flags are not None during program execution.</source>
          <target state="translated">Гарантирует,что флаги не будут НЕТ во время выполнения программы.</target>
        </trans-unit>
        <trans-unit id="f60f893825ab5c6287261b63b08497391b1a898d" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is True.</source>
          <target state="translated">Гарантирует,что только один флаг среди имен flag_names будет True.</target>
        </trans-unit>
        <trans-unit id="bc4926f456b6fdb9061da1916b7b3991e5255b89" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is not None.</source>
          <target state="translated">Гарантирует,что только один флаг среди имен flag_names не является None.</target>
        </trans-unit>
        <trans-unit id="69a41907388c0788d6b8b4645f59723bf71ee624" translate="yes" xml:space="preserve">
          <source>Ensures that the tensor's shape matches the expected shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3df735c2334b1de3bf6c1f0225248a5c4288f43" translate="yes" xml:space="preserve">
          <source>Ensures the minimum quantization range is at least this value. The legacy default value for this is 0.01, but it is strongly suggested to set it to 0 for new uses.</source>
          <target state="translated">Обеспечивает минимальный диапазон квантования,по крайней мере,это значение.Старое значение по умолчанию для этого равно 0,01,но настоятельно рекомендуется установить его в 0 для новых применений.</target>
        </trans-unit>
        <trans-unit id="108e622621a22768df2fd21e0560d0f2153d1f24" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../../../../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обеспечивает вызов обернутой &lt;code&gt;cell&lt;/code&gt; с помощью &lt;a href=&quot;../../../../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56c85bfc40629f5356a3bdc6b8c8134d0ee69412" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обеспечивает вызов обернутой &lt;code&gt;cell&lt;/code&gt; с помощью &lt;a href=&quot;../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="2e5bdaceef564fe90342bc0f3ce09baebe939955" translate="yes" xml:space="preserve">
          <source>Enter a &lt;code&gt;with&lt;/code&gt; block.</source>
          <target state="translated">Введите &lt;code&gt;with&lt;/code&gt; блоком.</target>
        </trans-unit>
        <trans-unit id="b0ae8455b8c259c16540b2b4caa23a215c50998e" translate="yes" xml:space="preserve">
          <source>Entering a context pushes it onto a stack of contexts. The context is exited when the test completes. Contexts are are exited in the reverse order of entering. They will always be exited, regardless of test failure/success. The context stack is specific to the test being run.</source>
          <target state="translated">Вход в контекст выталкивает его в стопку контекстов.По завершении теста контекст выходит из него.Контексты выходят в обратном порядке ввода.Они всегда будут выходить,независимо от сбоя/успешности теста.Контекстный стек специфичен для выполняемого теста.</target>
        </trans-unit>
        <trans-unit id="7012453966d1bac934e1d3e92a246ac6fb8ab8a8" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bb4e96bc7eba7fb90d20bfb46d35f260824e45" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d69298189781e9dc71eaa40ab6d56ce3c27a87" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e3e7fb253c150ba1022252d5de42f1f4fafe16" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ecb2f7e332bf0fb5c218b03f880139861b909c" translate="yes" xml:space="preserve">
          <source>Enters a context inside which operations are recorded on this tape.</source>
          <target state="translated">Вводит контекст,внутри которого записываются операции на этой ленте.</target>
        </trans-unit>
        <trans-unit id="ec2767c9f459a9d70c78a2313f5bda7adc985835" translate="yes" xml:space="preserve">
          <source>Enum class defining the sets of ops available to generate TFLite models.</source>
          <target state="translated">Enum-класс,определяющий наборы оп,доступных для генерации моделей TFLite.</target>
        </trans-unit>
        <trans-unit id="5da1a5e506a157807d67486433bb20b695758042" translate="yes" xml:space="preserve">
          <source>Enum defining the optimizations to apply when generating tflite graphs.</source>
          <target state="translated">Перечислите оптимизации,которые необходимо применить при генерации tflite-графиков.</target>
        </trans-unit>
        <trans-unit id="90423c583dcce5d727bda87136e47d717acb8520" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of this dataset.</source>
          <target state="translated">Перечисляет элементы этого набора данных.</target>
        </trans-unit>
        <trans-unit id="01b295f0689d0f580498d3834fd01d32f53a29b4" translate="yes" xml:space="preserve">
          <source>Enum|str|None, the default value of the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="cd3d6832786f1cdc0d074cbe3810dfbe4b6e9e02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Эквивалент &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; для DCT типа I, типа II и типа III.</target>
        </trans-unit>
        <trans-unit id="ab669c6ea64e65572ad94f354d53bdd4410c35f5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Эквивалент &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; для DCT типа I, типа II и типа III.</target>
        </trans-unit>
        <trans-unit id="c335be99965d030f218f7e74ee4341c2f9b62983" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d5723a51e05abac66211f4b5113c9f9e3d398b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e57bb76843be992582303de7a25b51e9e44284" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;latest_checkpoint&quot;&gt;&lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;directory&lt;/code&gt; is the constructor argument to &lt;code&gt;CheckpointManager&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;a href=&quot;latest_checkpoint&quot;&gt; &lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt; &lt;/a&gt; где &lt;code&gt;directory&lt;/code&gt; является аргументом конструктора для &lt;code&gt;CheckpointManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12aa27fa14fcfb779b3cf6f07826d3611283aed6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_brightness()&lt;/code&gt; using a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta)&lt;/code&gt;.</source>
          <target state="translated">Эквивалентно &lt;code&gt;adjust_brightness()&lt;/code&gt; с использованием &lt;code&gt;delta&lt;/code&gt; случайно выбранной в интервале &lt;code&gt;[-max_delta, max_delta)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09b3e81f789e49b586499d0779cb698dbd59d557" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_contrast()&lt;/code&gt; but uses a &lt;code&gt;contrast_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">Эквивалентна &lt;code&gt;adjust_contrast()&lt;/code&gt; но использует &lt;code&gt;contrast_factor&lt;/code&gt; случайно выбранный в интервале &lt;code&gt;[lower, upper]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96de3d3339d8bc99a5232fb80056e877509a902d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_hue()&lt;/code&gt; but uses a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt;.</source>
          <target state="translated">Эквивалентна &lt;code&gt;adjust_hue()&lt;/code&gt; но использует случайно выбранную &lt;code&gt;delta&lt;/code&gt; в интервале &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23655f0c3ac756adc718b9fd03358f4fad3f0856" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_saturation()&lt;/code&gt; but uses a &lt;code&gt;saturation_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">Эквивалентна &lt;code&gt;adjust_saturation()&lt;/code&gt; но использует &lt;code&gt;saturation_factor&lt;/code&gt; , случайно выбранный в интервале &lt;code&gt;[lower, upper]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="404cc18c094b513b6de1b7e6cc0bbe8e08dec237" translate="yes" xml:space="preserve">
          <source>Equivalent to C++ std::nextafter function.</source>
          <target state="translated">Эквивалент функции C++std::nextafter.</target>
        </trans-unit>
        <trans-unit id="72cfeb2ec979751608d18293a4bbbaf58c556044" translate="yes" xml:space="preserve">
          <source>Equivalent to LSTMCell class but adds peephole connections.</source>
          <target state="translated">Эквивалентна классу LSTMCell,но добавляет глазковые соединения.</target>
        </trans-unit>
        <trans-unit id="810acbc718abeba54a4adeae3c2bc19fd0867a76" translate="yes" xml:space="preserve">
          <source>Equivalent to exiting and reentering the tape context manager with a new tape. For example, the two following code blocks are equivalent:</source>
          <target state="translated">Эквивалентно выходу и повторному вводу контекстного менеджера ленты с новой лентой.Например,два следующих блока кода эквивалентны:</target>
        </trans-unit>
        <trans-unit id="b366fb9cced85d8ec2219c1c3626cd699229e2a0" translate="yes" xml:space="preserve">
          <source>Equivalent to np.all</source>
          <target state="translated">Эквивалент np.all</target>
        </trans-unit>
        <trans-unit id="fbe368530856e5c02dea4749ee86033afb2c2971" translate="yes" xml:space="preserve">
          <source>Equivalent to np.angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fc2cd887f06a6be5984678e87d9fbefcde58be" translate="yes" xml:space="preserve">
          <source>Equivalent to np.any</source>
          <target state="translated">Эквивалент np.any</target>
        </trans-unit>
        <trans-unit id="d711c6043710156c83e0fd47abc01149d5b65b9c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.arange</source>
          <target state="translated">Эквивалент np.arange</target>
        </trans-unit>
        <trans-unit id="462b17f25f33760631b5543a184f6df84e7995e8" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ceil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee0150060273e31bed6d8ae4a4de2b9f0e05d04" translate="yes" xml:space="preserve">
          <source>Equivalent to np.exp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cf2f3020533dd8c6cbc5a7f040679ea75d7f9b" translate="yes" xml:space="preserve">
          <source>Equivalent to np.full</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b171c66d286b4a58fc825ae37893711f5af4c1" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isfinite</source>
          <target state="translated">Эквивалент np.isfinite</target>
        </trans-unit>
        <trans-unit id="6cf06734befd58f2b3ab4e13986301474581e2b4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isinf</source>
          <target state="translated">Эквивалент np.isinf</target>
        </trans-unit>
        <trans-unit id="6374258bee9e66935fc1c66d495136b655269e4f" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isnan</source>
          <target state="translated">Эквивалент np.isnan</target>
        </trans-unit>
        <trans-unit id="e67fc8f2ff9c19708af4e26884cc5d44a056998d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.linalg.lstsq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28577bb9f14f8ade1168ec629722ccf6597345cd" translate="yes" xml:space="preserve">
          <source>Equivalent to np.max</source>
          <target state="translated">Эквивалент np.max</target>
        </trans-unit>
        <trans-unit id="c49e9cf38c7cdbe9cab7db7f9370177b6fad0411" translate="yes" xml:space="preserve">
          <source>Equivalent to np.mean</source>
          <target state="translated">Эквивалент np.mean</target>
        </trans-unit>
        <trans-unit id="1f5202370c40436aa2f849ee038707e5fa15d036" translate="yes" xml:space="preserve">
          <source>Equivalent to np.min</source>
          <target state="translated">Эквивалент np.min</target>
        </trans-unit>
        <trans-unit id="5c252cf1e4e24cf6dab4facf869d89e7b422643c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ndim</source>
          <target state="translated">Эквивалент np.ndim</target>
        </trans-unit>
        <trans-unit id="a2db935156477455d5981e031397d5045da461a3" translate="yes" xml:space="preserve">
          <source>Equivalent to np.prod</source>
          <target state="translated">Эквивалент np.prod</target>
        </trans-unit>
        <trans-unit id="7c2e12dc7d621e63f14287eb0e10506db2d014d4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.size()</source>
          <target state="translated">Эквивалент np.size()</target>
        </trans-unit>
        <trans-unit id="88b5636e608c91ffa2f14af120465515724e7c21" translate="yes" xml:space="preserve">
          <source>Equivalent to np.std</source>
          <target state="translated">Эквивалент np.std</target>
        </trans-unit>
        <trans-unit id="e54f8c7f961fc750868c04b530028b12df8cfd2d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.sum apart the fact that numpy upcast uint8 and int32 to int64 while tensorflow returns the same dtype as the input.</source>
          <target state="translated">Эквивалент np.sum,кроме того,что numpy upcast uint8 и int32-int64,а tensorflow возвращает тот же тип d,что и входной.</target>
        </trans-unit>
        <trans-unit id="f94035d29b7b5f5ef4935b41748906c6edd0f44a" translate="yes" xml:space="preserve">
          <source>Equivalent to np.unravel_index</source>
          <target state="translated">Эквивалент np.unravel_index</target>
        </trans-unit>
        <trans-unit id="3d8d4f70c2a6dcee6138e42da4ea9d8d57941bcf" translate="yes" xml:space="preserve">
          <source>Equivalent to np.var</source>
          <target state="translated">Эквивалент np.var</target>
        </trans-unit>
        <trans-unit id="f4cc023d491adabad2e8a109c3d3dd4a8e975fd0" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3937688953cfcbcfe89823523f42d4889fd2130" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html</source>
          <target state="translated">Эквивалент numpy.fft.ffthift.https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html.</target>
        </trans-unit>
        <trans-unit id="9d205f3c81ff628d0981811f199086832aed22b6" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2b0117f7b7eb348201a45c446fbae4c04b64d" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html</source>
          <target state="translated">Эквивалент numpy.fft.ifftshift.https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html.</target>
        </trans-unit>
        <trans-unit id="cd3c10ac298fc83779d7180b62df3acfd2028ba1" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.linalg.slogdet, although no sign is returned since only hermitian positive definite matrices are supported.</source>
          <target state="translated">Эквивалент numpy.linalg.slogdet,хотя знак не возвращается,так как поддерживаются только положительные определенные матрицы отшельников.</target>
        </trans-unit>
        <trans-unit id="f5e3349b347b523ccfe7d2d36cdf4f830d6d6768" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.polyval.</source>
          <target state="translated">Эквивалент нумизматического поливала.</target>
        </trans-unit>
        <trans-unit id="9ab93c1fc5b434981966382e2d02f35fad157362" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.expm</source>
          <target state="translated">Эквивалентна для Scipy.linalg.expm</target>
        </trans-unit>
        <trans-unit id="449cff5debc79a532910321ef441b805ab2c2ee5" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.solve_triangular</source>
          <target state="translated">Эквивалентна саспи.линальг.решённым трёхугольникам</target>
        </trans-unit>
        <trans-unit id="fe91403d74c0b4a8f14baf895508059d0ee6e0b2" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.dawsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7d555473271127b617bb6e0ade0e8b28687028" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5717fd66f59e41b5a46912c32daefbc3aef0ab" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expit</source>
          <target state="translated">Эквивалентна сайту scipy.special.expit</target>
        </trans-unit>
        <trans-unit id="1f4e9e13934cb20ad789e608907c04597e256190" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel first output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1560270df46b23a7f166b9f0f265cbfa7d38e327" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel second output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aaa9170e1859f7e5b84e4283ea1ae7b31ff453" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0</source>
          <target state="translated">Эквивалентна сайту scipy.special.i0</target>
        </trans-unit>
        <trans-unit id="8e266498a6b1a7a26b01def5d42f8b17286ec637" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9289834302ab9464efb15c64a7277f13e51e14fa" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1</source>
          <target state="translated">Эквивалентна для Scipy.special.i1</target>
        </trans-unit>
        <trans-unit id="438a970c0f9806ade1fdb0e1c5141f68e49632ce" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494880ed4da70e8cfa70d15ee89749ccea4c6720" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035c3a0e0f560151d55ab605438e7e17fd213d98" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2afadabad61f66baa5f4e52785c46bbc5dee7f" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24bf216a788d22e20029dc3dc2a7ec04d083aec" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ab4d1dcd8a5d9d1528325d657c6dc21676a889" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31f0dd433c9919cbad7d6f1998b2dd1a2d3e774" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f26e00b296f0c73d0fd01066823b1180b1d56a0" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.spence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071e64e40768cc1326e55f1845c4512bbceb773" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.xlog1py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b978115a57aecee7065e75844d526e492214b88" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3045f4419de2fe174d86f22c5c3d8795b8bc929" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3648248d37cad618c8d49524831902e774028989" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;hooks&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. List of &lt;code&gt;SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the evaluation call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6da4b8d9829fada9fb24e19ea2b809e3ff4ce77" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;input_fn&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Creating input functions&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe107e95b7bba5c1aea496cd05695a842cb323d" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;name&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Name of the evaluation if user needs to run multiple evaluations on different data sets, such as on training data vs test data. Metrics for different evaluations are saved in separate folders, and appear separately in tensorboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046f1d41c872592c322db28767dd41f18f6ee0e0" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;steps&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Number of steps for which to evaluate model. If &lt;code&gt;None&lt;/code&gt;, evaluates until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">Эквивалентно:</target>
        </trans-unit>
        <trans-unit id="1a8be36ef006e5ae5869b06fb4ce1ec0f4902254" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен: &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f934428c26b01d7bcf82028a03b831fb56280136" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt;.</source>
          <target state="translated">Эквивалентен: &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb531627cb5378a0c7f2b5b0b593f0afe538fe70" translate="yes" xml:space="preserve">
          <source>Equivalently, you could call &lt;code&gt;tf.transpose(x, perm=[1, 0])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f2ad31f01046014353ecaf907869188111f8c7" translate="yes" xml:space="preserve">
          <source>Erf</source>
          <target state="translated">Erf</target>
        </trans-unit>
        <trans-unit id="b69ca406dc79373ba0bcba41524f4bd1cd044d3c" translate="yes" xml:space="preserve">
          <source>Erfc</source>
          <target state="translated">Erfc</target>
        </trans-unit>
        <trans-unit id="51ea53a72345d158f82636a88a9b303a31fcacbc" translate="yes" xml:space="preserve">
          <source>Erfinv</source>
          <target state="translated">Erfinv</target>
        </trans-unit>
        <trans-unit id="a645773837690910bfe191d893e21cd8eb8555ea" translate="yes" xml:space="preserve">
          <source>Essentially, any &quot;input&quot; into this pseudo op is fed into an identity, and attributes are added to that input before being used by the constituent ops that make up the pseudo op. A similar process is done to any output that is to be exported from the current op.</source>
          <target state="translated">По сути,любой &quot;вход&quot; в эту псевдооперации подается в идентификатор,и атрибуты добавляются к этому входу перед использованием составными операционными,которые составляют псевдооперации.Аналогичный процесс выполняется для любого вывода,который будет экспортирован из текущей операции.</target>
        </trans-unit>
        <trans-unit id="be113f49d343fbf9bdb54f8a121ec96a1956f264" translate="yes" xml:space="preserve">
          <source>Estimator class to train and evaluate TensorFlow models.</source>
          <target state="translated">Класс Оценщик для обучения и оценки моделей TensorFlow.</target>
        </trans-unit>
        <trans-unit id="416cc25603177f39e318971f80a871d50a7f3f1c" translate="yes" xml:space="preserve">
          <source>Estimator with TPU support.</source>
          <target state="translated">Стимулятор с поддержкой TPU.</target>
        </trans-unit>
        <trans-unit id="d4f26dbdb3530b0db4729beb33b45379d57ce337" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebfc8db92bef1788c1d79262f904742e51adf04" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. In most cases, this arg is not used and can be removed in the method implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd220bca4f3a5773a7be9a01c838bdbaadd598f" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. To be used in case loss calculation is different in Train and Eval mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cd78140c026ea638f4d4fa08182ce0b8bf624a" translate="yes" xml:space="preserve">
          <source>Estimator.</source>
          <target state="translated">Estimator.</target>
        </trans-unit>
        <trans-unit id="af787345575f0fd2e39357b726f019e445fae069" translate="yes" xml:space="preserve">
          <source>Estimator: High level tools for working with models.</source>
          <target state="translated">Стимулятор:Инструмент высокого уровня для работы с моделями.</target>
        </trans-unit>
        <trans-unit id="d52f4d3825efd220d2de6a981b23c8e26fcde5ab" translate="yes" xml:space="preserve">
          <source>Estimators</source>
          <target state="translated">Estimators</target>
        </trans-unit>
        <trans-unit id="af9670f7a09c493acafa589d4a49f01a2c26b1e8" translate="yes" xml:space="preserve">
          <source>Estimators are not compatible with eager execution.</source>
          <target state="translated">Оценочные приборы не совместимы с жадным исполнением.</target>
        </trans-unit>
        <trans-unit id="c80aba17df6ad98b90215b78b10de509262f4ee8" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">Оценщики можно использовать, пока включено активное выполнение. Обратите внимание, что &lt;code&gt;input_fn&lt;/code&gt; и все хуки выполняются внутри контекста графа, поэтому они должны быть написаны для совместимости с режимом графа. Обратите внимание, что код &lt;code&gt;input_fn&lt;/code&gt; , использующий &lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; ,&lt;/a&gt; обычно работает как в графическом, так и в активном режимах.</target>
        </trans-unit>
        <trans-unit id="bb20f6b000f74c9b8993c6209840216e01db70f6" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">Оценщики можно использовать, пока включено активное выполнение. Обратите внимание, что &lt;code&gt;input_fn&lt;/code&gt; и все хуки выполняются внутри контекста графа, поэтому они должны быть написаны для совместимости с режимом графа. Обратите внимание, что код &lt;code&gt;input_fn&lt;/code&gt; , использующий &lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; ,&lt;/a&gt; обычно работает как в графическом, так и в активном режимах.</target>
        </trans-unit>
        <trans-unit id="3f86a08c52f7a8629e290b2e0fdcf1c0e4e98581" translate="yes" xml:space="preserve">
          <source>Estimators returned by &lt;code&gt;model_to_estimator&lt;/code&gt; are configured so that they can handle sample weights (similar to &lt;code&gt;keras_model.fit(x, y, sample_weights)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cdeeb6347a7147da63530f5a217391c98f7d8c" translate="yes" xml:space="preserve">
          <source>EuclideanNorm</source>
          <target state="translated">EuclideanNorm</target>
        </trans-unit>
        <trans-unit id="55c8f7aec13ca9beaa33e9ffb481df7f5c134062" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors.</source>
          <target state="translated">Оцениваются значения тензоров &lt;code&gt;predictions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b03b079690ef84f55b17ebc43b48b934b906b85" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors. The &lt;code&gt;predictions&lt;/code&gt; tensors will contain at least two keys 'dfc' and 'bias' for model explanations. The &lt;code&gt;dfc&lt;/code&gt; value corresponds to the contribution of each feature to the overall prediction for this instance (positive indicating that the feature makes it more likely to select class 1 and negative less likely). The &lt;code&gt;dfc&lt;/code&gt; is an OrderedDict, where the keys are the feature column names and the values are the contributions. It is sorted by the absolute value of the contribution (e.g OrderedDict([('age', -0.54), ('gender', 0.4), ('fare', 0.21)])). The 'bias' value will be the same across all the instances, corresponding to the probability (classification) or prediction (regression) of the training data distribution.</source>
          <target state="translated">Оцениваются значения тензоров &lt;code&gt;predictions&lt;/code&gt; . В &lt;code&gt;predictions&lt;/code&gt; тензоры будут содержать , по меньшей мере , два ключей &amp;laquo;УПД&amp;raquo; и &amp;laquo;смещение&amp;raquo; для модели объяснения. Значение &lt;code&gt;dfc&lt;/code&gt; соответствует вкладу каждой функции в общий прогноз для этого экземпляра (положительное значение означает, что функция увеличивает вероятность выбора класса 1, а отрицательное - с меньшей вероятностью). &lt;code&gt;dfc&lt;/code&gt; - это OrderedDict, где ключи - это имена столбцов функций, а значения - вклады. Он сортируется по абсолютному значению вклада (например, OrderedDict ([('возраст', -0,54), ('пол', 0,4), ('тариф &amp;raquo;, 0,21)])). Значение &amp;laquo;смещения&amp;raquo; будет одинаковым для всех экземпляров, что соответствует вероятности (классификации) или прогнозу (регрессии) распределения обучающих данных.</target>
        </trans-unit>
        <trans-unit id="76038f0588757b840cdc5f204dab1364cf8043c3" translate="yes" xml:space="preserve">
          <source>Evaluates tensors and returns numpy values.</source>
          <target state="translated">Оценивает тензоры и возвращает числовые значения.</target>
        </trans-unit>
        <trans-unit id="57f3d0259235141125775431f66c96eedebbbfdb" translate="yes" xml:space="preserve">
          <source>Evaluates the model given evaluation data &lt;code&gt;input_fn&lt;/code&gt;.</source>
          <target state="translated">Оценивает модель по данным оценки &lt;code&gt;input_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ef0884484aa688ed75f2c6150bd98f64412bc0f" translate="yes" xml:space="preserve">
          <source>Evaluates the model on a data generator. (deprecated)</source>
          <target state="translated">Оценивает модель на генераторе данных.(устарело)</target>
        </trans-unit>
        <trans-unit id="19439d681060998c65fa8a49375cbf14d7f1b6d2" translate="yes" xml:space="preserve">
          <source>Evaluates the value of a variable.</source>
          <target state="translated">Оценивает значение переменной.</target>
        </trans-unit>
        <trans-unit id="462093d87b1e51760b2f9cc1fc346faa48a26ec8" translate="yes" xml:space="preserve">
          <source>Evaluates this sparse tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">Оценивает этот разреженный тензор в &lt;code&gt;Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b58bb64bee2dee0e3524de394e209a784dcb0f34" translate="yes" xml:space="preserve">
          <source>Evaluates this tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">Оценивает этот тензор в &lt;code&gt;Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="0cd35e83aa25817cd1618d052bf5cc8037dc8e37" translate="yes" xml:space="preserve">
          <source>Evaluation-related metrics.</source>
          <target state="translated">Показатели,связанные с оценкой.</target>
        </trans-unit>
        <trans-unit id="ba2134478429a6124d3817e9431c37bcebf0953c" translate="yes" xml:space="preserve">
          <source>Event shape describes the shape of a single draw from the distribution; it may be dependent across dimensions. For scalar distributions, the event shape is &lt;code&gt;[]&lt;/code&gt;. For a 5-dimensional MultivariateNormal, the event shape is &lt;code&gt;[5]&lt;/code&gt;.</source>
          <target state="translated">Форма события описывает форму единственного розыгрыша из раздачи; это может зависеть от размеров. Для скалярных распределений форма события - &lt;code&gt;[]&lt;/code&gt; . Для 5-мерного MultivariateNormal форма события &lt;code&gt;[5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25be266b05af077a0ad8cad7a0ec10e539d9e8c6" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Iterator&lt;/code&gt; must implement the &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; method.</source>
          <target state="translated">Каждый &lt;code&gt;Iterator&lt;/code&gt; должен реализовывать метод &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe8b10297f23cdaa6155e6a8f85d988c3f770227" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;.</source>
          <target state="translated">Каждая &lt;code&gt;RNNCell&lt;/code&gt; должна иметь указанные ниже свойства и реализовывать &lt;code&gt;call&lt;/code&gt; с подписью &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad1161061553cd086534b164c366eee7799627f7" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;. The optional third input argument, &lt;code&gt;scope&lt;/code&gt;, is allowed for backwards compatibility purposes; but should be left off for new subclasses.</source>
          <target state="translated">Каждая &lt;code&gt;RNNCell&lt;/code&gt; должна иметь указанные ниже свойства и реализовывать &lt;code&gt;call&lt;/code&gt; с подписью &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; . Необязательный третий входной аргумент, &lt;code&gt;scope&lt;/code&gt; , разрешен для целей обратной совместимости; но его следует оставить для новых подклассов.</target>
        </trans-unit>
        <trans-unit id="299d42e26abca2a31082df354b4ce65b46c0fca9" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Sequence&lt;/code&gt; must implement the &lt;code&gt;__getitem__&lt;/code&gt; and the &lt;code&gt;__len__&lt;/code&gt; methods. If you want to modify your dataset between epochs you may implement &lt;code&gt;on_epoch_end&lt;/code&gt;. The method &lt;code&gt;__getitem__&lt;/code&gt; should return a complete batch.</source>
          <target state="translated">Каждая &lt;code&gt;Sequence&lt;/code&gt; должна реализовывать &lt;code&gt;__getitem__&lt;/code&gt; и &lt;code&gt;__len__&lt;/code&gt; . Если вы хотите изменить свой набор данных между эпохами, вы можете реализовать &lt;code&gt;on_epoch_end&lt;/code&gt; . Метод &lt;code&gt;__getitem__&lt;/code&gt; должен возвращать полный пакет.</target>
        </trans-unit>
        <trans-unit id="ba703b38e62df0a565a8b36051f1b5465409c88f" translate="yes" xml:space="preserve">
          <source>Every layer should expose (if appropriate) an &lt;code&gt;input_spec&lt;/code&gt; attribute: a list of instances of InputSpec (one per input tensor).</source>
          <target state="translated">Каждый слой должен предоставлять (при необходимости) атрибут &lt;code&gt;input_spec&lt;/code&gt; : список экземпляров InputSpec (по одному на каждый входной тензор).</target>
        </trans-unit>
        <trans-unit id="8bd051443b2507e1e127e99b553cf6ecedbd48b0" translate="yes" xml:space="preserve">
          <source>Everything else is converted to string an passed as such.</source>
          <target state="translated">Все остальное преобразуется в строку,которая передается как таковая.</target>
        </trans-unit>
        <trans-unit id="a560e4a67aad7f7189f87087c7d35159f5129b69" translate="yes" xml:space="preserve">
          <source>Exactly like the 'fetches' argument to Session.Run(). Can be a single tensor or op, a list of 'fetches' or a dictionary of fetches. For example: fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = {'step': global_step_tensor, 'summ': summary_op} Note that this can recurse as expected: fetches = {'step': global_step_tensor, 'ops': [train_op, check_nan_op]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e1a86a05a4d56f6d81c0b00a84c07add962695" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;feed_dict&lt;/code&gt; argument to &lt;code&gt;Session.Run()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8859bb982bd6bcc2cef25780b2635ee30bc1cef5" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;options&lt;/code&gt; argument to &lt;code&gt;Session.run()&lt;/code&gt;, i.e., a config_pb2.RunOptions proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c10cd9cb9743620899024d1b7a59c133ba2b6d" translate="yes" xml:space="preserve">
          <source>Exactly one of scaffold or summary_op should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="02d0824b069aa373c4cf4ddcd2dd958338db515f" translate="yes" xml:space="preserve">
          <source>Example (Basic):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c2d66e4ea637a4a0137be3b06206da397b182f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64) with list of inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be129b9effca85fd73cedf877225d7fd3be08b1f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6077956451fe769ecd79ba197242b337aa56e97" translate="yes" xml:space="preserve">
          <source>Example (MNIST):</source>
          <target state="translated">Пример (МНИСТ):</target>
        </trans-unit>
        <trans-unit id="59dbc1f0ab80dda2191ea75d024e449751be97e7" translate="yes" xml:space="preserve">
          <source>Example (Profile):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7138ac77df2473be41d42b8461f4176e7177837a" translate="yes" xml:space="preserve">
          <source>Example (SipHash64):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace0e0f9d53f65c4ba8752cde26fc5d8ed59a8b9" translate="yes" xml:space="preserve">
          <source>Example (Siphash64 with a single integer, same as &lt;code&gt;salt=[133, 133]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">Пример 1:</target>
        </trans-unit>
        <trans-unit id="da5ccd8cab037ca820324afb7dcac63b912e00e1" translate="yes" xml:space="preserve">
          <source>Example 1: Dump tensor data from only MatMul and Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt;.</source>
          <target state="translated">Пример 1. Вывести тензорные данные только из MatMul и Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00f2824ef36718d7b7d0ce5ea9877431abcb6311" translate="yes" xml:space="preserve">
          <source>Example 1: Plain reading and writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54793e4dba84f7eb76a0c7f033fb712c51563cbd" translate="yes" xml:space="preserve">
          <source>Example 1: Training models with weights merge on CPU</source>
          <target state="translated">Пример 1:Учебные модели с весами сливаются на процессоре.</target>
        </trans-unit>
        <trans-unit id="5d3ce3e08ccb49fe9b24c378131cf033db05e0d0" translate="yes" xml:space="preserve">
          <source>Example 1: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = 1&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">Пример 1: Когда &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; являются матрицами (порядок 2), case &lt;code&gt;axes = 1&lt;/code&gt; эквивалентен умножению матриц.</target>
        </trans-unit>
        <trans-unit id="44aa2a3d8bb3df8026afff479956490d45243b1b" translate="yes" xml:space="preserve">
          <source>Example 1: calling &lt;code&gt;clear_session()&lt;/code&gt; when creating models in a loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8576e377acadb06ae63ce3356fa61a5f7c100a8d" translate="yes" xml:space="preserve">
          <source>Example 1: plain reading and writing.</source>
          <target state="translated">Пример 1:простое чтение и запись.</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">Пример 2:</target>
        </trans-unit>
        <trans-unit id="a0072322bb33224e627486eea8196e2cef187111" translate="yes" xml:space="preserve">
          <source>Example 2: Dump tensors from all ops &lt;em&gt;except&lt;/em&gt; Relu: &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt;. This filter operates in a logical AND relation with &lt;code&gt;tensor_dtypes&lt;/code&gt;.</source>
          <target state="translated">Пример 2: Дамп тензоров из всех операций, &lt;em&gt;кроме&lt;/em&gt; Relu: &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt; . Этот фильтр работает в отношении логического И с &lt;code&gt;tensor_dtypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5225a972efb4ae38389305cf614f741f3d1a81" translate="yes" xml:space="preserve">
          <source>Example 2: Fibonacci sequence algorithm that writes in a loop then returns.</source>
          <target state="translated">Пример 2:Алгоритм последовательности Фибоначчи,который записывает в цикле,затем возвращается.</target>
        </trans-unit>
        <trans-unit id="515816f78c8886d90b64cb87784a0e52b994e92b" translate="yes" xml:space="preserve">
          <source>Example 2: Training models with weights merge on CPU using cpu_relocation</source>
          <target state="translated">Пример 2:Обучающие модели с весами сливаются на процессоре с помощью cpu_relocation.</target>
        </trans-unit>
        <trans-unit id="00f4b73ff4f42e9b3ac7b8892c354d447dfc1b6e" translate="yes" xml:space="preserve">
          <source>Example 2: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">Пример 2: Когда &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; являются матрицами (порядок 2), case &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; эквивалентен умножению матриц.</target>
        </trans-unit>
        <trans-unit id="48f04df33e3c0cd0666c729b322b6e7bf863b56e" translate="yes" xml:space="preserve">
          <source>Example 2: resetting the layer name generation counter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cc9414d73f94556c9a7ce298c76f13bcc30b6c" translate="yes" xml:space="preserve">
          <source>Example 2: temporal regression. Consider an array &lt;code&gt;data&lt;/code&gt; of scalar values, of shape &lt;code&gt;(steps,)&lt;/code&gt;. To generate a dataset that uses the past 10 timesteps to predict the next timestep, you would use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4166bf97179d81c42dccef3ab9d1594a5dec5d" translate="yes" xml:space="preserve">
          <source>Example 3:</source>
          <target state="translated">Пример 3:</target>
        </trans-unit>
        <trans-unit id="73c9fd171924cd42c9e1951075109ba86ba1baf9" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96c081d4f4394bb3b52f2f3107ea003ee80610" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a tf.Variable.</source>
          <target state="translated">Пример 3:Простой цикл,взаимодействующий с переменной tf.Variable.</target>
        </trans-unit>
        <trans-unit id="518a9d9961987c5c80745f1ee48711b13ff01f7d" translate="yes" xml:space="preserve">
          <source>Example 3: Training models with weights merge on GPU (recommended for NV-link)</source>
          <target state="translated">Пример 3:Обучающие модели с весами сливаются на GPU (рекомендуется для NV-link).</target>
        </trans-unit>
        <trans-unit id="8bc402b2102c57373c5203d5cf2a384bbae75dfc" translate="yes" xml:space="preserve">
          <source>Example 3: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes=0&lt;/code&gt; gives the outer product, a tensor of order 4.</source>
          <target state="translated">Пример 3: Когда &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; являются матрицами (порядок 2), case &lt;code&gt;axes=0&lt;/code&gt; дает внешнее произведение, тензор порядка 4.</target>
        </trans-unit>
        <trans-unit id="9f56d8c4e40812933a18ec960fa550620bea44e5" translate="yes" xml:space="preserve">
          <source>Example 4: Suppose that \(a_{ijk}\) and \(b_{lmn}\) represent two tensors of order 3. Then, &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; is the order 4 tensor \(c_{jklm}\) whose entry corresponding to the indices \((j,k,l,m)\) is given by:</source>
          <target state="translated">Пример 4: Предположим, что \ (a_ {ijk} \) и \ (b_ {lmn} \) представляют два тензора порядка 3. Тогда &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; - это порядок 4 тензор \ (c_ {jklm} \), запись которого, соответствующая индексам \ ((j, k, l, m) \), задается следующим образом:</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="72c9431a353d348bf8c4106eea5b09e0b7f2778c" translate="yes" xml:space="preserve">
          <source>Example Use with canned &lt;a href=&quot;dnnestimator&quot;&gt;&lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Пример использования с стандартным &lt;a href=&quot;dnnestimator&quot;&gt; &lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a12ac3226f96243d920a907c8a0e054170d6de2a" translate="yes" xml:space="preserve">
          <source>Example docstring for subclasses.</source>
          <target state="translated">Пример доктрины для подклассов.</target>
        </trans-unit>
        <trans-unit id="3296a393ddb54725a2f31cf8e8df73eebb8bf7a1" translate="yes" xml:space="preserve">
          <source>Example for the basic usage that &lt;code&gt;inputs&lt;/code&gt; has static shape:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428a9c1753100388a07947adc9c9b9cad373af77" translate="yes" xml:space="preserve">
          <source>Example in overridden &lt;a href=&quot;../model#train_step&quot;&gt;&lt;code&gt;Model.train_step&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2470add2c6a58385f524faf02b9f161d2b9bc41e" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for chief training worker (must have one and only one):</source>
          <target state="translated">Пример &lt;code&gt;TF_CONFIG&lt;/code&gt; для главного тренера (должен быть один и только один):</target>
        </trans-unit>
        <trans-unit id="e4cae7f2cb3eaf2c3f14687c6350d50e604ce166" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for evaluator task. Evaluator is a special task that is not part of the training cluster. There could be only one. It is used for model evaluation.</source>
          <target state="translated">Пример &lt;code&gt;TF_CONFIG&lt;/code&gt; для задачи оценщика. Оценщик - это особая задача, не входящая в учебный кластер. Может быть только один. Он используется для оценки модели.</target>
        </trans-unit>
        <trans-unit id="ef2f1dc4fba9e75335a84bfba753831e0da2c4a4" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for non-chief training worker (optional, could be multiple):</source>
          <target state="translated">Пример &lt;code&gt;TF_CONFIG&lt;/code&gt; для внештатного сотрудника по обучению (необязательно, может быть несколько):</target>
        </trans-unit>
        <trans-unit id="ded11bc3e41cf55332a58d41ca020fcd2188cd47" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for parameter server, aka ps (could be multiple):</source>
          <target state="translated">Пример &lt;code&gt;TF_CONFIG&lt;/code&gt; для сервера параметров, он же ps (может быть несколько):</target>
        </trans-unit>
        <trans-unit id="abc3473fe9e86406df846110504f296764db37be" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;separate_compiled_gradients&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379a2f6a98c8e26698ce4b95cb603e6934140326" translate="yes" xml:space="preserve">
          <source>Example of Hermitian spectrum</source>
          <target state="translated">Пример гермитского спектра</target>
        </trans-unit>
        <trans-unit id="410ba918bf6ec843555f4b7293b763b00b8cc2ef" translate="yes" xml:space="preserve">
          <source>Example of a Toeplitz operator.</source>
          <target state="translated">Пример оператора Toeplitz.</target>
        </trans-unit>
        <trans-unit id="85f83dfee4e4a7f3dc6a9fe829210faa673ca277" translate="yes" xml:space="preserve">
          <source>Example of a self-adjoint positive definite operator</source>
          <target state="translated">Пример самосогласованного позитивного определённого оператора</target>
        </trans-unit>
        <trans-unit id="bd71b08b62b75e20a6fe472c0485a74694a90a9a" translate="yes" xml:space="preserve">
          <source>Example of adding a dependency to an operation:</source>
          <target state="translated">Пример добавления зависимости к операции:</target>
        </trans-unit>
        <trans-unit id="19b1020ef2b58eb6f4263d8e0a075a3c4bb220fe" translate="yes" xml:space="preserve">
          <source>Example of checkpointing the training pipeline:</source>
          <target state="translated">Пример контрольно-пропускного пункта тренировочного трубопровода:</target>
        </trans-unit>
        <trans-unit id="e58777718a24aefbe5a8f18566dd1948a1ccda1d" translate="yes" xml:space="preserve">
          <source>Example of chief node:</source>
          <target state="translated">Пример главного узла:</target>
        </trans-unit>
        <trans-unit id="598ad303ca20efc27a6504a95d01c0ebffb9a01c" translate="yes" xml:space="preserve">
          <source>Example of creating a BestExporter for training and evaluation:</source>
          <target state="translated">Пример создания BestExporter для обучения и оценки:</target>
        </trans-unit>
        <trans-unit id="c12f0c5dc38b2d562905eaf2ecae6ab52735894e" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel</source>
          <target state="translated">Пример определения в терминах реального сверточного ядра</target>
        </trans-unit>
        <trans-unit id="a787a1cecc5ed812272f0d7761614b0f57551910" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel,</source>
          <target state="translated">Пример определения в терминах реального сверточного ядра,</target>
        </trans-unit>
        <trans-unit id="0d1833ce48bd953f7fd46604bc9bce116e25b3c1" translate="yes" xml:space="preserve">
          <source>Example of distributed training:</source>
          <target state="translated">Пример распределенного обучения:</target>
        </trans-unit>
        <trans-unit id="ecde918e06456ccf3e309b6af50e5db3b7c87f0a" translate="yes" xml:space="preserve">
          <source>Example of evaluator node (evaluator is not part of training cluster):</source>
          <target state="translated">Пример узла вычислителя (вычислитель не входит в учебный кластер):</target>
        </trans-unit>
        <trans-unit id="daaacb4ed6b5ae6e3e41fcd268463fb2ccc0f877" translate="yes" xml:space="preserve">
          <source>Example of forcing real &lt;code&gt;dtype&lt;/code&gt; when spectrum is Hermitian</source>
          <target state="translated">Пример принуждения реального &lt;code&gt;dtype&lt;/code&gt; , когда спектр эрмитовский</target>
        </trans-unit>
        <trans-unit id="918b8c1d76391d7274c5d707b3918475217ced2f" translate="yes" xml:space="preserve">
          <source>Example of local (non-distributed) training:</source>
          <target state="translated">Пример местного (не распределенного)обучения:</target>
        </trans-unit>
        <trans-unit id="e010de83f03e8242af1897d4347b3a81d8ac97e5" translate="yes" xml:space="preserve">
          <source>Example of non-chief node:</source>
          <target state="translated">Пример нешифтового узла:</target>
        </trans-unit>
        <trans-unit id="d0e3466008dace46e07f808a1f06c480bbbb79c1" translate="yes" xml:space="preserve">
          <source>Example of overriding the generated code for an Op.</source>
          <target state="translated">Пример переопределения сгенерированного кода для Op.</target>
        </trans-unit>
        <trans-unit id="f6cf4690fc42df9a6f19c4ccafdd420bd4e92fac" translate="yes" xml:space="preserve">
          <source>Example of restoring the shadow variable values:</source>
          <target state="translated">Пример восстановления значений теневой переменной:</target>
        </trans-unit>
        <trans-unit id="f8e92e4b9c782e54338b631c928bc19d13a6a181" translate="yes" xml:space="preserve">
          <source>Example of separate_compiled_gradients: # In the example below, the computations for f, g and h will all be compiled # in separate scopes. with tf.xla.experimental.jit_scope( separate_compiled_gradients=True): f = tf.matmul(a, b) g = tf.gradients([f], [a, b], name='mygrads1') h = tf.gradients([f], [a, b], name='mygrads2')</source>
          <target state="translated">Пример separate_compiled_gradients:#В приведенном ниже примере все вычисления для f,g и h будут скомпилированы#в отдельных диапазонах с помощью tf.xla.experimental.jit_scope(separate_compiled_gradients=True):f=tf.matmul(a,b)g=tf.gradients([f],[a,b],name='mygrads1')h=tf.gradients([f],[a,b],name='mygrads2')</target>
        </trans-unit>
        <trans-unit id="7bea3d481c7a2794a987da82b4e5f8d462a88cb7" translate="yes" xml:space="preserve">
          <source>Example of transforming images and masks together.</source>
          <target state="translated">Пример совместного преобразования изображений и масок.</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="c0322b2251169a4535d936bc1bccd14d484afce5" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow(x, y)&lt;/code&gt;:</source>
          <target state="translated">Пример использования &lt;code&gt;.flow(x, y)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c0865312d276fd0319aad510a1030d3d4f8c75ff" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow_from_directory(directory)&lt;/code&gt;:</source>
          <target state="translated">Пример использования &lt;code&gt;.flow_from_directory(directory)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="17ee9c7dc231b0022d7e16e963e816d3352760d2" translate="yes" xml:space="preserve">
          <source>Example output of parsing spec:</source>
          <target state="translated">Пример вывода спецификации синтаксического анализа:</target>
        </trans-unit>
        <trans-unit id="fc7841c33080ffba2d1a0ca228445d0e2ddf4147" translate="yes" xml:space="preserve">
          <source>Example subclass implementation:</source>
          <target state="translated">Пример реализации подкласса:</target>
        </trans-unit>
        <trans-unit id="23a6730f497d34a35c741cd2b9796963be0ff9b6" translate="yes" xml:space="preserve">
          <source>Example that generates a new set of random values every time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24c06aaebac8148ec7e01e32b14230d85a014e6" translate="yes" xml:space="preserve">
          <source>Example that outputs a reproducible result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763eb5d5b2e48beaa61334211d57a0c9e577b80f" translate="yes" xml:space="preserve">
          <source>Example usage (CPU/GPU):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc0aed6d9786af922825e910e0abddb6daeae3" translate="yes" xml:space="preserve">
          <source>Example usage of custom metric which uses features:</source>
          <target state="translated">Пример использования пользовательской метрики,использующей функции:</target>
        </trans-unit>
        <trans-unit id="527331abb9a52bf41a6b1416d788e85f6a63201e" translate="yes" xml:space="preserve">
          <source>Example usage when creating a training model:</source>
          <target state="translated">Пример использования при создании учебной модели:</target>
        </trans-unit>
        <trans-unit id="50bc38165379f784619be50f96100e5733f89c78" translate="yes" xml:space="preserve">
          <source>Example usage when graph building:</source>
          <target state="translated">Пример использования при построении графиков:</target>
        </trans-unit>
        <trans-unit id="d491a17cd1bf3dfee0c39d0be6f0237a61eac0da" translate="yes" xml:space="preserve">
          <source>Example usage with &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; graph execution:</source>
          <target state="translated">Пример использования с &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; графа tf.function :</target>
        </trans-unit>
        <trans-unit id="3d925e2167606d6281c7a1f9f1e3722e50282b90" translate="yes" xml:space="preserve">
          <source>Example usage with a classifier:</source>
          <target state="translated">Пример использования с классификатором:</target>
        </trans-unit>
        <trans-unit id="3dd8e2ddb23eb53f7b94afc131020ea44347eb1d" translate="yes" xml:space="preserve">
          <source>Example usage with a regressor:</source>
          <target state="translated">Пример использования с регрессором:</target>
        </trans-unit>
        <trans-unit id="e115860bfdc04344656cefb82bb56606592684c7" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution enabled:</source>
          <target state="translated">Пример использования с включенным принудительным исполнением:</target>
        </trans-unit>
        <trans-unit id="8f636fd517a7e7db44a40549cdde033c8ec480ba" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution, the default in TF 2.0:</source>
          <target state="translated">Пример использования с нетерпеливым исполнением,по умолчанию в TF 2.0:</target>
        </trans-unit>
        <trans-unit id="cc4b7b9efd8878f1980dc8448f032a1237ad9ca9" translate="yes" xml:space="preserve">
          <source>Example usage with legacy TF 1.x graph execution:</source>
          <target state="translated">Пример использования с наследственным исполнением графика TF 1.x:</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="83c760bcfee1aeea54f4dc68746006988fa4120c" translate="yes" xml:space="preserve">
          <source>Example usage: ```python tf.profiler.experimental.server.start('6009') # do your training here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bdc51ed832749b92021e3dd981f9c56dedbdf5" translate="yes" xml:space="preserve">
          <source>Example using shape_invariants:</source>
          <target state="translated">Пример использования варианта shape_invariants:</target>
        </trans-unit>
        <trans-unit id="56f2357642c5f96165493821d43a89ed35fbd56e" translate="yes" xml:space="preserve">
          <source>Example which demonstrates non-strict semantics: In the following example, the final value of the counter &lt;code&gt;i&lt;/code&gt; does not depend on &lt;code&gt;x&lt;/code&gt;. So the &lt;code&gt;while_loop&lt;/code&gt; can increment the counter parallel to updates of &lt;code&gt;x&lt;/code&gt;. However, because the loop counter at one loop iteration depends on the value at the previous iteration, the loop counter itself cannot be incremented in parallel. Hence if we just want the final value of the counter (which we print on the line &lt;code&gt;print(sess.run(i))&lt;/code&gt;), then &lt;code&gt;x&lt;/code&gt; will never be incremented, but the counter will be updated on a single thread. Conversely, if we want the value of the output (which we print on the line &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt;), then the counter may be incremented on its own thread, while &lt;code&gt;x&lt;/code&gt; can be incremented in parallel on a separate thread. In the extreme case, it is conceivable that the thread incrementing the counter runs until completion before &lt;code&gt;x&lt;/code&gt; is incremented even a single time. The only thing that can never happen is that the thread updating &lt;code&gt;x&lt;/code&gt; can never get ahead of the counter thread because the thread incrementing &lt;code&gt;x&lt;/code&gt; depends on the value of the counter.</source>
          <target state="translated">Пример, демонстрирующий нестрогую семантику: В следующем примере окончательное значение счетчика &lt;code&gt;i&lt;/code&gt; не зависит от &lt;code&gt;x&lt;/code&gt; . Таким образом, &lt;code&gt;while_loop&lt;/code&gt; может увеличивать счетчик параллельно с обновлениями &lt;code&gt;x&lt;/code&gt; . Однако, поскольку счетчик цикла на одной итерации цикла зависит от значения на предыдущей итерации, сам счетчик цикла не может увеличиваться параллельно. Следовательно, если нам просто нужно окончательное значение счетчика (которое мы печатаем в строке &lt;code&gt;print(sess.run(i))&lt;/code&gt; ), то &lt;code&gt;x&lt;/code&gt; никогда не будет увеличиваться, но счетчик будет обновляться в одном потоке. И наоборот, если нам нужно значение вывода (которое мы печатаем в строке &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt; ), то счетчик может увеличиваться в отдельном потоке, а &lt;code&gt;x&lt;/code&gt; может увеличиваться параллельно в отдельном потоке. В крайнем случае возможно, что поток, увеличивающий счетчик, будет работать до завершения, прежде чем &lt;code&gt;x&lt;/code&gt; будет увеличен хотя бы один раз. Единственное, что никогда не может случиться, это то, что поток, обновляющий &lt;code&gt;x&lt;/code&gt; , никогда не сможет опередить поток счетчика, потому что поток, увеличивающий &lt;code&gt;x&lt;/code&gt; , зависит от значения счетчика.</target>
        </trans-unit>
        <trans-unit id="4a3b161e7903a377f4897fa329d44f597e09c69b" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File '/us/states.txt' contains 51 lines - the first line is 'XX', and the other 50 each have a 2-character U.S. state abbreviation. Both a literal 'XX' in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">Пример с &lt;code&gt;default_value&lt;/code&gt; : Файл &amp;laquo;/us/states.txt&amp;raquo; содержит 51 строку - первая строка - &amp;laquo;XX&amp;raquo;, а остальные 50 содержат двухсимвольное сокращение штата США. И литералу &amp;laquo;XX&amp;raquo; на входе, и другим значениям, отсутствующим в файле, будет присвоен идентификатор 0. Всем остальным будет присвоен соответствующий номер строки 1-50.</target>
        </trans-unit>
        <trans-unit id="3692e468e65c6e00dbcc913dca39948c41e9a2c8" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 51 lines - the first line is &lt;code&gt;'XX'&lt;/code&gt;, and the other 50 each have a 2-character U.S. state abbreviation. Both a literal &lt;code&gt;'XX'&lt;/code&gt; in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">Пример с &lt;code&gt;default_value&lt;/code&gt; : Файл &lt;code&gt;'/us/states.txt'&lt;/code&gt; содержит 51 строку - первая строка - &lt;code&gt;'XX'&lt;/code&gt; , а остальные 50 содержат двухсимвольное сокращение штата США. И литералу &lt;code&gt;'XX'&lt;/code&gt; на входе, и другим значениям, отсутствующим в файле, будет присвоен идентификатор 0. Всем остальным будет присвоен соответствующий номер строки 1-50.</target>
        </trans-unit>
        <trans-unit id="0bcd2321ebb901af6f07ff3194e39b45e4583569" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-4 corresponding to its index (e.g., input 'B' produces output 3). All other inputs are assigned &lt;code&gt;default_value&lt;/code&gt; 0.</source>
          <target state="translated">Пример с &lt;code&gt;default_value&lt;/code&gt; : В следующем примере каждому входу в &lt;code&gt;vocabulary_list&lt;/code&gt; назначается ID 0-4, соответствующий его индексу (например, вход 'B' производит выход 3). Всем остальным входам присваивается &lt;code&gt;default_value&lt;/code&gt; 0.</target>
        </trans-unit>
        <trans-unit id="041df3298d747f84dc836614f9a8d0706b82bb0c" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File '/us/states.txt' contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">Пример с &lt;code&gt;num_oov_buckets&lt;/code&gt; : Файл '/us/states.txt' содержит 50 строк, каждая с двухсимвольным сокращением штата США. Всем входам со значениями в этом файле присваиваются идентификаторы 0-49, соответствующие номеру строки. Все остальные значения хешируются и получают ID 50-54.</target>
        </trans-unit>
        <trans-unit id="93f561d6bc93f5cf5b940311eba631bc8eebd85e" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">Пример с &lt;code&gt;num_oov_buckets&lt;/code&gt; : Файл &lt;code&gt;'/us/states.txt'&lt;/code&gt; содержит 50 строк, каждая с двухсимвольным сокращением штата США. Всем входам со значениями в этом файле присваиваются идентификаторы 0-49, соответствующие номеру строки. Все остальные значения хешируются и получают ID 50-54.</target>
        </trans-unit>
        <trans-unit id="8dba832f3b5e04108a0e19946d3c85263dad3f49" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-3 corresponding to its index (e.g., input 'B' produces output 2). All other inputs are hashed and assigned an ID 4-5.</source>
          <target state="translated">Пример с &lt;code&gt;num_oov_buckets&lt;/code&gt; : В следующем примере, каждый вход в &lt;code&gt;vocabulary_list&lt;/code&gt; присваивается идентификатор 0-3 , соответствующий индексу (например, вход &amp;laquo;B&amp;raquo; производит выход 2). Все остальные входы хешируются и получают ID 4-5.</target>
        </trans-unit>
        <trans-unit id="d23061b7cd392ab5eb922c8ff6543c34bdcb5a2d" translate="yes" xml:space="preserve">
          <source>Example with nesting and a namedtuple:</source>
          <target state="translated">Пример с вложением и именем:</target>
        </trans-unit>
        <trans-unit id="a72363b38997b4f64381ddc4dee5e0c9078d4238" translate="yes" xml:space="preserve">
          <source>Example with two replicas: Replica 0 &lt;code&gt;value&lt;/code&gt;: {'a': 1, 'b': [40, 1]} Replica 1 &lt;code&gt;value&lt;/code&gt;: {'a': 3, 'b': [ 2, 98]}</source>
          <target state="translated">Пример с двумя репликами: &lt;code&gt;value&lt;/code&gt; реплики 0 : {'a': 1, 'b': [40, 1]} &lt;code&gt;value&lt;/code&gt; реплики 1 : {'a': 3, 'b': [2, 98]}</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c507dcbf8c6dab62a26b1aeddf57994497c904a7" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is a tuple/list of integers) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=(2, 3) the output will be a list of 4 string tensors: &lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;, &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8658bae51974acc059803a94aa98b93309fee6d8" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is an integer) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=2, the output will be a list of 6 string tensors: &lt;code&gt;[[b'1'], [b'4']]&lt;/code&gt;&lt;code&gt;[[b'2'], [b'5']]&lt;/code&gt;&lt;code&gt;[[b'3'], [b'6']]&lt;/code&gt;&lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f932f20a3593b81060616a973ebd451c6b19358b" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt;=None) If the layer receives three inputs: &lt;code&gt;a=[[1], [4]]&lt;/code&gt;, &lt;code&gt;b=[[2], [5]]&lt;/code&gt;, &lt;code&gt;c=[[3], [6]]&lt;/code&gt; the output will be a string tensor: &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567d171adb2f3af5c831c8014d6d2644694164d6" translate="yes" xml:space="preserve">
          <source>Example: - [0, 1, 1] and [1, 0, 1] compare equal. - [0, 0, 1] and [0, 1] compare unequal.</source>
          <target state="translated">Пример:-[0,1,1]и [1,0,1]сравнивать равное.-[0,0,1]и [0,1]сравнить неравнозначно.</target>
        </trans-unit>
        <trans-unit id="c9f9b94d080f139845f4dafcda33f41b366ff378" translate="yes" xml:space="preserve">
          <source>Example: Create summaries manually every 100 steps in the chief.</source>
          <target state="translated">Пример:Создавайте сводки вручную каждые 100 шагов шефа.</target>
        </trans-unit>
        <trans-unit id="173aca822521be5b122b73f49f1871722c08366e" translate="yes" xml:space="preserve">
          <source>Example: Print selected summary values.</source>
          <target state="translated">Пример:Печать выбранных суммарных значений.</target>
        </trans-unit>
        <trans-unit id="a784b5743567dd18b16e6d3b489c110a8d1c990b" translate="yes" xml:space="preserve">
          <source>Example: Print the contents of an events file.</source>
          <target state="translated">Пример:Распечатать содержимое файла событий.</target>
        </trans-unit>
        <trans-unit id="ce3ba84d0b17d8bc4d409ce764e426e1c5492185" translate="yes" xml:space="preserve">
          <source>Example: Run IO ops on &quot;localhost&quot; while saving a checkpoint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e6fc1b2b82b717f6610ef6179737c68ecbc81b" translate="yes" xml:space="preserve">
          <source>Example: Start a thread to print losses. We want this thread to run every 60 seconds, so we launch it with &lt;code&gt;sv.loop()&lt;/code&gt;.</source>
          <target state="translated">Пример: запустить поток для печати потерь. Мы хотим, чтобы этот поток запускался каждые 60 секунд, поэтому мы запускаем его с помощью &lt;code&gt;sv.loop()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94f6ca6939c144eae87aaf899e625c5d04303ebc" translate="yes" xml:space="preserve">
          <source>Example: The following ragged tensors are equivalent, and all represent the nested list &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt;.</source>
          <target state="translated">Пример: Следующие рваные тензоры эквивалентны, и все они представляют собой вложенный список &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6000fe791e40d6738b7d6b145a5c4796da7c9eff" translate="yes" xml:space="preserve">
          <source>Example: The sparse tensor</source>
          <target state="translated">Пример:Редкий тензор</target>
        </trans-unit>
        <trans-unit id="4831dd77f2817a6c577b6208057931f2ede2496f" translate="yes" xml:space="preserve">
          <source>Example: decay 1/t with a rate of 0.5:</source>
          <target state="translated">Пример:распад 1/т со скоростью 0,5:</target>
        </trans-unit>
        <trans-unit id="5be7d9a2564ff822574226c3c6979bdbd88cd6e4" translate="yes" xml:space="preserve">
          <source>Example: decay every 100000 steps with a base of 0.96:</source>
          <target state="translated">Пример:распад каждые 100000 шагов с базой 0,96:</target>
        </trans-unit>
        <trans-unit id="ace5a52f8a2edfc2fb79b4c37c4790b5eb41eee8" translate="yes" xml:space="preserve">
          <source>Example: decay exponentially with a base of 0.96:</source>
          <target state="translated">Пример:распад экспоненциально с базой 0,96:</target>
        </trans-unit>
        <trans-unit id="ce11d63dc1b31ac81a1b58ec71985d1a67e4f9f8" translate="yes" xml:space="preserve">
          <source>Example: decay from 0.1 to 0.01 in 10000 steps using sqrt (i.e. power=0.5):</source>
          <target state="translated">Пример:распад от 0,1 до 0,01 за 10000 шагов с использованием sqrt (т.е.мощность=0,5):</target>
        </trans-unit>
        <trans-unit id="793c28fc14e5a01f7866d225e6c0168a3353b837" translate="yes" xml:space="preserve">
          <source>Example: use a learning rate that's 1.0 for the first 100001 steps, 0.5 for the next 10000 steps, and 0.1 for any additional steps.</source>
          <target state="translated">Пример:используйте скорость обучения 1,0 для первых 100001 шагов,0,5 для последующих 10000 шагов и 0,1 для любых дополнительных шагов.</target>
        </trans-unit>
        <trans-unit id="6104a08ed7eb335488d3ea3f93c6210a1cc4746c" translate="yes" xml:space="preserve">
          <source>Example::</source>
          <target state="translated">Example::</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="87dd337717aa93a3e1f625c5009322053b08b819" translate="yes" xml:space="preserve">
          <source>Examples of initialization of one or a batch of distributions.</source>
          <target state="translated">Примеры инициализации одного или партии дистрибутивов.</target>
        </trans-unit>
        <trans-unit id="0d99cda6b7a8a98bf3b0ce2b08deac42570d99ca" translate="yes" xml:space="preserve">
          <source>Examples with batched 'params' and 'indices':</source>
          <target state="translated">Примеры с последовательно соединенными 'параметрами' и 'индексами':</target>
        </trans-unit>
        <trans-unit id="96a999e4ee43ac4a3bdacd6c1add9ad5873a7a08" translate="yes" xml:space="preserve">
          <source>Examples with weighted inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="bd4014a1dc07ec31c81fa13596a60e308e956f83" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, the content of this page is licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 License&lt;/a&gt;, and code samples are licensed under the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. For details, see the &lt;a href=&quot;https://developers.google.com/site-policies&quot;&gt;Google Developers Site Policies&lt;/a&gt;. Java is a registered trademark of Oracle and/or its affiliates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c51ae4b24c4cbf9a6a7c14ecfe48987ef8f41f" translate="yes" xml:space="preserve">
          <source>Exception class expected to be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db926df5edbb2e0244efc4cb72d768c859bda52" translate="yes" xml:space="preserve">
          <source>Exception handling:</source>
          <target state="translated">Обработка исключений:</target>
        </trans-unit>
        <trans-unit id="6e1fd6ee78dd93cc7393132c2166292f654b771e" translate="yes" xml:space="preserve">
          <source>Exception types for TensorFlow errors.</source>
          <target state="translated">Типы исключений для ошибок TensorFlow.</target>
        </trans-unit>
        <trans-unit id="977efc1e7b7b4e10da4b7bbfee5ff5338ebbf975" translate="yes" xml:space="preserve">
          <source>Exceptions include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce152fd2a50b95401ab6996a9060742977853fe6" translate="yes" xml:space="preserve">
          <source>Exceptions include: 1) None output: a NoOp would be returned which control-depends on computation. 2) Single value output: A tuple containing the value would be returned. 3) Operation-only outputs: a NoOp would be returned which control-depends on computation. TODO(b/121383831): Investigate into removing these special cases.</source>
          <target state="translated">Исключения включают:1)Отсутствие вывода:будет возвращено NoOp,контроль над которым зависит от вычислений.2)Вывод одного значения:Кортеж,содержащий значение,будет возвращен.3)Выводы только для операций:будет возвращен NoOp,управление которым зависит от вычислений.TODO(b/121383831):Расследуйте вопрос об удалении этих особых случаев.</target>
        </trans-unit>
        <trans-unit id="a435b066a07d346a649075f82061604178c943e1" translate="yes" xml:space="preserve">
          <source>Exceptions raised but not handled by the &lt;code&gt;QueueRunner&lt;/code&gt; threads.</source>
          <target state="translated">Исключения возникают, но не обрабатываются потоками &lt;code&gt;QueueRunner&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0668261fe61ad5e97be94ab196c8aaabcd82c1" translate="yes" xml:space="preserve">
          <source>Exceptions raised in queue runner threads are handled in one of two ways depending on whether or not a &lt;code&gt;Coordinator&lt;/code&gt; was passed to &lt;code&gt;create_threads()&lt;/code&gt;:</source>
          <target state="translated">Исключения, возникающие в потоках обработчика очереди, обрабатываются одним из двух способов в зависимости от того, был ли &lt;code&gt;Coordinator&lt;/code&gt; передан в &lt;code&gt;create_threads()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7a50ad2d338624f150d3e12c3d98da4eca3b2fd" translate="yes" xml:space="preserve">
          <source>Exceptions that indicate that the training inputs have been exhausted, &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;, also cause &lt;code&gt;sv.should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt; but are not re-raised from the &lt;code&gt;with&lt;/code&gt; block: they indicate a normal termination.</source>
          <target state="translated">Исключения, указывающие на то, что обучающие входные данные были исчерпаны, &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; , также заставляют &lt;code&gt;sv.should_stop()&lt;/code&gt; возвращать &lt;code&gt;True&lt;/code&gt; , но не повторно возникают из блока &lt;code&gt;with&lt;/code&gt; : они указывают на нормальное завершение.</target>
        </trans-unit>
        <trans-unit id="5f3013605a5648326257001d4f2130af330c7e64" translate="yes" xml:space="preserve">
          <source>Execute all cleanup functions. Normally called for you after tearDown.</source>
          <target state="translated">Выполните все функции очистки.Обычно звонят после сноса.</target>
        </trans-unit>
        <trans-unit id="11e375cf08a633917df1df912958f4d60e2eee13" translate="yes" xml:space="preserve">
          <source>Execute function &lt;code&gt;fn()&lt;/code&gt; inside the critical section.</source>
          <target state="translated">Выполнить функцию &lt;code&gt;fn()&lt;/code&gt; внутри критической секции.</target>
        </trans-unit>
        <trans-unit id="7dbdd16c5192dee3ed26ddf33bb3da6a11b3d34c" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &quot;per-replica&quot; values, such as those produced by a &quot;distributed &lt;code&gt;Dataset&lt;/code&gt;&quot;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of those &quot;per-replica&quot; values that correspond to that replica.</source>
          <target state="translated">Выполняет операции, указанные в &lt;code&gt;fn&lt;/code&gt; , на каждой реплике. Если &lt;code&gt;args&lt;/code&gt; или &lt;code&gt;kwargs&lt;/code&gt; имеют значения &amp;laquo;на реплику&amp;raquo;, например, созданные &amp;laquo;распределенным &lt;code&gt;Dataset&lt;/code&gt; &amp;raquo;, когда &lt;code&gt;fn&lt;/code&gt; выполняется на конкретной реплике, она будет выполняться с компонентом тех значений &amp;laquo;на реплику&amp;raquo;, которые соответствуют эта реплика.</target>
        </trans-unit>
        <trans-unit id="5841423de68ab109a1435156854cbf378aa60aee" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793811098469d54083ca269e98c267afe8d60bb8" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5343586f8c3bd6ef69d152c018d8d765f2f6d4f6" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabacb7ccca613c5884ce0618be4bfb1a6d7c455" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a75d59c79f71a41f7d05e765e21135e40ec896e" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">Выполнение внутри &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; , если предварительно не &lt;a href=&quot;../../init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cfe9cbddad329689e0b90de125001daf8c95885" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10bab3a1306869bb43217c1e5e4cddf7e6bfae" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">Выполнение внутри &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; , если предварительно не &lt;a href=&quot;init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="955fdac0a2d1875b5b0361db0e7a3df47df9aae7" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ae6f15527ec34c1543d31bebd784257e5cbaf2" translate="yes" xml:space="preserve">
          <source>Executing inside a transformation function for &lt;code&gt;tf.dataset&lt;/code&gt;.</source>
          <target state="translated">Выполнение внутри функции преобразования для &lt;code&gt;tf.dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afc09c3890cde7a5439e81dd8b697e05a081e2fa" translate="yes" xml:space="preserve">
          <source>Execution of TensorFlow operations (ops) and Functions and their stack traces, op types, names (if available) and contexts. In addition, depending on the value of the &lt;code&gt;tensor_debug_mode&lt;/code&gt; argument (see Args section below), the value(s) of the output tensors or more concise summaries of the tensor values will be dumped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83b6fe3aebf13744e866019556d9129cd7a55be" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Exit</target>
        </trans-unit>
        <trans-unit id="5f0f9a8e624edb47e9fd7dbb2e16409d83c4e71d" translate="yes" xml:space="preserve">
          <source>Exit a &lt;code&gt;with&lt;/code&gt; block, closing the file.</source>
          <target state="translated">Выйти из блока &lt;code&gt;with&lt;/code&gt; , закрыв файл.</target>
        </trans-unit>
        <trans-unit id="7597ba2e0b5e39e1679b27fd60557a68be49930a" translate="yes" xml:space="preserve">
          <source>Exit makes its input &lt;code&gt;data&lt;/code&gt; available to the parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d33b74e48885a60aeaefa61848809d032af067" translate="yes" xml:space="preserve">
          <source>Exit the training loop by causing &lt;code&gt;should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Выйдите из цикла обучения, заставив &lt;code&gt;should_stop()&lt;/code&gt; вернуть &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b741870e6731ad0d91e1fee0b121c9f3b3a9d19" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the hooked session does following things in order:</source>
          <target state="translated">Выход: при &lt;code&gt;close()&lt;/code&gt; подключенный сеанс выполняет следующие действия по порядку:</target>
        </trans-unit>
        <trans-unit id="59b327accbcb0a5b8afa0c7176dd223df7684025" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the monitored session does following things in order:</source>
          <target state="translated">Выход: при &lt;code&gt;close()&lt;/code&gt; наблюдаемый сеанс выполняет следующие действия по порядку:</target>
        </trans-unit>
        <trans-unit id="0a2899914246f5edc88765d0b9e6fab5ce9088ec" translate="yes" xml:space="preserve">
          <source>Exits the current frame to its parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5215e7ca7db8397a68e271056050a9a72b04b5" translate="yes" xml:space="preserve">
          <source>Exits the recording context, no further operations are traced.</source>
          <target state="translated">Выходит из контекста записи,дальнейшие операции не отслеживаются.</target>
        </trans-unit>
        <trans-unit id="5871b8d86fba0af13c05dc83a5e5933bb7903327" translate="yes" xml:space="preserve">
          <source>Exp</source>
          <target state="translated">Exp</target>
        </trans-unit>
        <trans-unit id="d02ced268437285031df31496017840406816fe9" translate="yes" xml:space="preserve">
          <source>ExpandDims</source>
          <target state="translated">ExpandDims</target>
        </trans-unit>
        <trans-unit id="66a9c909a6870e627a057373b51b024e1e234caa" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;signal&lt;/code&gt;'s &lt;code&gt;axis&lt;/code&gt; dimension into frames of &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">Расширяет &lt;code&gt;signal&lt;/code&gt; &amp;laquo;ы &lt;code&gt;axis&lt;/code&gt; измерения в рамках &lt;code&gt;frame_length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07ec8fb3c2f9a83f1212c818198eb18be20fc96d" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed78d9c68766d3f7974883e79c3c2ee397fb39eb" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is autoset to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e84cf5e41c690d15bf04dd53eb3e1940d7efd1" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is true by default, and will raise a &lt;code&gt;ValueError&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70987b15a924000fa4f03cb6e44741dda41cd7" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This will raise a &lt;code&gt;ValueError&lt;/code&gt; if set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e87e18362504eb493f757e889ff7557b3cdc2e" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c504faeac42d016045a3082d97b557d41aee06" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is self-adjoint and &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), in which case this defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff80b6e2ad8b0833e96612b403a04151f29ed1a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;diag.dtype&lt;/code&gt; is real, this is auto-set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cc2479f628e5648a10b370823417e9c1b39fdf" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;dtype&lt;/code&gt; is real, this is equivalent to being symmetric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dd6410b060182728c189e0e384ff137722e537" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;spectrum&lt;/code&gt; is real, this will always be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d7e4f427b394af81c6c4755816e52af211febd" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This is autoset to true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7bef5599ae0ea17823b7a05c81525bc12ac32b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This operator is self-adjoint only if it is diagonal with real-valued diagonal entries. In this case it is advised to use &lt;code&gt;LinearOperatorDiag&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc1778998960a4510dd14f56469a3c7e0b4e606" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989ac1b9782932aecb9a84d1e7a4a8d73c97ad85" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;is_positive_definite&lt;/code&gt; is auto-set to be &lt;code&gt;True&lt;/code&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38e8c0840dd780167a952867f95db2acf2d0996" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. This operator is non-singular if and only if its diagonal elements are all non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cccae7dfe0cda76f54ba64adc4914faea09d18" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf3e819c295b6f44464b217eea5321c5b58880b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d6af70faf7a9dc007318b94b3635220360dc9c" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt; This is autoset to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2db543c8e1b7a95823f6a52b9906c10ae273b2a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices This is autoset to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff00bc8b663b09d5424f0d8864089f62157862" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the real part of all eigenvalues is positive. We do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfa6b06c71067ca9ea4c135d41086622cfc642f" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is positive-definite &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), and &lt;code&gt;is_diag_update_positive&lt;/code&gt;, in which case this defaults to &lt;code&gt;True&lt;/code&gt;. Note that we say an operator is positive definite when the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139da9d95153e25dba3f850415efd887fc0ca747" translate="yes" xml:space="preserve">
          <source>Expected DataType of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae81d71558cec8f56b66dc632a87a59164ece86" translate="yes" xml:space="preserve">
          <source>Expected data type of &lt;code&gt;inputs&lt;/code&gt; (optional). A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input dtype from &lt;code&gt;inputs[0]&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a72255293a9f42dbeb2fc3b382c3fcfbdc4543a" translate="yes" xml:space="preserve">
          <source>Expected data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da1e174718b4d7c76cc0fc29691b94431b714b9" translate="yes" xml:space="preserve">
          <source>Expected output shape from function. This argument can be inferred if not explicitly provided. Can be a tuple or function. If a tuple, it only specifies the first dimension onward; sample dimension is assumed either the same as the input: &lt;code&gt;output_shape = (input_shape[0], ) + output_shape&lt;/code&gt; or, the input is &lt;code&gt;None&lt;/code&gt; and the sample dimension is also &lt;code&gt;None&lt;/code&gt;: &lt;code&gt;output_shape = (None, ) + output_shape&lt;/code&gt; If a function, it specifies the entire shape as a function of the input shape: &lt;code&gt;output_shape = f(input_shape)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706c65c0918b3142862741c4abde68fb16d9eaf4" translate="yes" xml:space="preserve">
          <source>Expected shape of elements of &lt;code&gt;inputs&lt;/code&gt; (optional). Also controls the output shape of this op, which may affect type inference in other ops. A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input shape from the shapes in &lt;code&gt;inputs&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa55c83a32144678a956c6c55f5dece7f72317d3" translate="yes" xml:space="preserve">
          <source>Expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ad79af0021ac4858d9226489ac9c04faf0e6f5" translate="yes" xml:space="preserve">
          <source>Experimental API for building input pipelines.</source>
          <target state="translated">Экспериментальный API для строительства входных трубопроводов.</target>
        </trans-unit>
        <trans-unit id="3d922543e8a08722d92b6501b870ec822f4dcd58" translate="yes" xml:space="preserve">
          <source>Experimental API for using the tf.data service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ff10b66d8731358ac8244e1c00f640e01f684c" translate="yes" xml:space="preserve">
          <source>Experimental Distribution Strategy library.</source>
          <target state="translated">Библиотека экспериментальной стратегии распределения.</target>
        </trans-unit>
        <trans-unit id="c121ce5da3d3b76d2d947821ab9df93eb5477aa7" translate="yes" xml:space="preserve">
          <source>Experimental context manager for use when defining a custom summary op.</source>
          <target state="translated">Экспериментальный контекстный менеджер для использования при определении пользовательских сводок.</target>
        </trans-unit>
        <trans-unit id="7a6421eb20a45fe885418ff8f23d4fdab4324bf1" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. A list of optimizations to apply when converting the model. E.g. &lt;code&gt;[Optimize.DEFAULT]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33059df1673928f219a82fc5c8e21a650d6696a0" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Enables MLIR-based conversion instead of TOCO conversion. (default True)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399ecdd35ea931bb278f134ef1957739d468702b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Set of OpsSet options supported by the device. (default set([OpsSet.TFLITE_BUILTINS]))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599e7a942acaca60cbb896ff7ac216dbee02a59b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Specification of target device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a18834879a6b44f43ff0c592756de68465d8408" translate="yes" xml:space="preserve">
          <source>Experimental. Subject to change. List of &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; objects returned by lite.load_delegate().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926762eb23930f8e3ae64c0d83b8664da2e042b6" translate="yes" xml:space="preserve">
          <source>Experimental: this exists to support the usage of V1-style manual summary writing (via the construction of a &lt;a href=&quot;../../compat/v1/summary&quot;&gt;&lt;code&gt;tf.compat.v1.Summary&lt;/code&gt;&lt;/a&gt; protocol buffer) with the V2 summary writing API.</source>
          <target state="translated">Экспериментально: это существует для поддержки использования ручного написания сводки в стиле V1 (посредством создания &lt;a href=&quot;../../compat/v1/summary&quot;&gt; &lt;code&gt;tf.compat.v1.Summary&lt;/code&gt; &lt;/a&gt; протокола tf.compat.v1.Summary ) с API записи сводки V2.</target>
        </trans-unit>
        <trans-unit id="f7e30aa22d9814c16511469aa8ccea8e0ceb1682" translate="yes" xml:space="preserve">
          <source>ExperimentalAssertNextDataset</source>
          <target state="translated">ExperimentalAssertNextDataset</target>
        </trans-unit>
        <trans-unit id="65a9eaa214c2a4a7283e27ec54d2f74b5ae2773e" translate="yes" xml:space="preserve">
          <source>ExperimentalAutoShardDataset</source>
          <target state="translated">ExperimentalAutoShardDataset</target>
        </trans-unit>
        <trans-unit id="1155741c4e50830e9866f67930ced6ece2a730dd" translate="yes" xml:space="preserve">
          <source>ExperimentalBytesProducedStatsDataset</source>
          <target state="translated">ExperimentalBytesProducedStatsDataset</target>
        </trans-unit>
        <trans-unit id="cbb67531ef0b8de9c7ab10906728997a5cbc980d" translate="yes" xml:space="preserve">
          <source>ExperimentalCSVDataset</source>
          <target state="translated">ExperimentalCSVDataset</target>
        </trans-unit>
        <trans-unit id="8bee6db1545035b8173d88fdc5b803b34673e6c9" translate="yes" xml:space="preserve">
          <source>ExperimentalChooseFastestDataset</source>
          <target state="translated">ExperimentalChooseFastestDataset</target>
        </trans-unit>
        <trans-unit id="9747e2520b851d2c9cdcc2a7d37822bc8ce67a1a" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetCardinality</source>
          <target state="translated">ExperimentalDatasetCardinality</target>
        </trans-unit>
        <trans-unit id="744fc8c282f05b7d196dd0c52340ab3eb80696c3" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetToTFRecord</source>
          <target state="translated">ExperimentalDatasetToTFRecord</target>
        </trans-unit>
        <trans-unit id="7d42bec61bd63539cde98d948c54ac2dec9f4699" translate="yes" xml:space="preserve">
          <source>ExperimentalDenseToSparseBatchDataset</source>
          <target state="translated">ExperimentalDenseToSparseBatchDataset</target>
        </trans-unit>
        <trans-unit id="082cfaae261616a23f42f235c5504196cfa1ccb6" translate="yes" xml:space="preserve">
          <source>ExperimentalDirectedInterleaveDataset</source>
          <target state="translated">ExperimentalDirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="cde31577a692b8f70044f3f8b993b9353e33ccee" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByReducerDataset</source>
          <target state="translated">ExperimentalGroupByReducerDataset</target>
        </trans-unit>
        <trans-unit id="b20d0e98014287b37df084a390ad2964a66cdec5" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByWindowDataset</source>
          <target state="translated">ExperimentalGroupByWindowDataset</target>
        </trans-unit>
        <trans-unit id="cd226a753993460716068aab4ac098440988b719" translate="yes" xml:space="preserve">
          <source>ExperimentalIgnoreErrorsDataset</source>
          <target state="translated">ExperimentalIgnoreErrorsDataset</target>
        </trans-unit>
        <trans-unit id="0f8ed95ca666d8abc80de6bea158a14f751c9e1d" translate="yes" xml:space="preserve">
          <source>ExperimentalIteratorGetDevice</source>
          <target state="translated">ExperimentalIteratorGetDevice</target>
        </trans-unit>
        <trans-unit id="74317fb26b51f75d9003946ff00db597c1d45889" translate="yes" xml:space="preserve">
          <source>ExperimentalLMDBDataset</source>
          <target state="translated">ExperimentalLMDBDataset</target>
        </trans-unit>
        <trans-unit id="6588329804a91e0d3359b84129bf1790a12ee937" translate="yes" xml:space="preserve">
          <source>ExperimentalLatencyStatsDataset</source>
          <target state="translated">ExperimentalLatencyStatsDataset</target>
        </trans-unit>
        <trans-unit id="c06ab95c37522d990f18a0d3291b5f3ab69cff66" translate="yes" xml:space="preserve">
          <source>ExperimentalMapAndBatchDataset</source>
          <target state="translated">ExperimentalMapAndBatchDataset</target>
        </trans-unit>
        <trans-unit id="3d23d6b39dbdaeef53034bab2667a9f1cc87a494" translate="yes" xml:space="preserve">
          <source>ExperimentalMapDataset</source>
          <target state="translated">ExperimentalMapDataset</target>
        </trans-unit>
        <trans-unit id="15b03882b59c1a98ce2908f2d444d9121425ac1f" translate="yes" xml:space="preserve">
          <source>ExperimentalMatchingFilesDataset</source>
          <target state="translated">ExperimentalMatchingFilesDataset</target>
        </trans-unit>
        <trans-unit id="4b833f982f61c3bd6fafd895bae1d8fb00c87a74" translate="yes" xml:space="preserve">
          <source>ExperimentalMaxIntraOpParallelismDataset</source>
          <target state="translated">ExperimentalMaxIntraOpParallelismDataset</target>
        </trans-unit>
        <trans-unit id="68e8ae2163663736bb0add1d59999d9242e6b1f3" translate="yes" xml:space="preserve">
          <source>ExperimentalNonSerializableDataset</source>
          <target state="translated">ExperimentalNonSerializableDataset</target>
        </trans-unit>
        <trans-unit id="f60719db25db93a181e6f986dde77f319ba249aa" translate="yes" xml:space="preserve">
          <source>ExperimentalParallelInterleaveDataset</source>
          <target state="translated">ExperimentalParallelInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="0aea8d666c6a10cfbf8edf68dcca7aec781c1ea4" translate="yes" xml:space="preserve">
          <source>ExperimentalParseExampleDataset</source>
          <target state="translated">ExperimentalParseExampleDataset</target>
        </trans-unit>
        <trans-unit id="099b044748453a100e44dc683a0f72d509004a8f" translate="yes" xml:space="preserve">
          <source>ExperimentalPrivateThreadPoolDataset</source>
          <target state="translated">ExperimentalPrivateThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="18b8df73deafffd3934e6d88caf12b2921e3f1fd" translate="yes" xml:space="preserve">
          <source>ExperimentalRandomDataset</source>
          <target state="translated">ExperimentalRandomDataset</target>
        </trans-unit>
        <trans-unit id="00573977acb262636f3acf86f1ec2199d26fc97d" translate="yes" xml:space="preserve">
          <source>ExperimentalRebatchDataset</source>
          <target state="translated">ExperimentalRebatchDataset</target>
        </trans-unit>
        <trans-unit id="16fa967c2653dada3e2c8d637963a97b43e6bf79" translate="yes" xml:space="preserve">
          <source>ExperimentalScanDataset</source>
          <target state="translated">ExperimentalScanDataset</target>
        </trans-unit>
        <trans-unit id="f9ef41dff7ba49a65cfb578f0b833503d1b71e5d" translate="yes" xml:space="preserve">
          <source>ExperimentalSetStatsAggregatorDataset</source>
          <target state="translated">ExperimentalSetStatsAggregatorDataset</target>
        </trans-unit>
        <trans-unit id="2c3105da1590b28b73544964faca6a841c448407" translate="yes" xml:space="preserve">
          <source>ExperimentalSleepDataset</source>
          <target state="translated">ExperimentalSleepDataset</target>
        </trans-unit>
        <trans-unit id="8dd787031e43dcee025e349d118489e793e09010" translate="yes" xml:space="preserve">
          <source>ExperimentalSlidingWindowDataset</source>
          <target state="translated">ExperimentalSlidingWindowDataset</target>
        </trans-unit>
        <trans-unit id="ffb62879f1f7865bbeb865a48812c4855e98f60b" translate="yes" xml:space="preserve">
          <source>ExperimentalSqlDataset</source>
          <target state="translated">ExperimentalSqlDataset</target>
        </trans-unit>
        <trans-unit id="ddde7bd97ceccc95a18ec3c2cd39a701d7cc909d" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorHandle</source>
          <target state="translated">ExperimentalStatsAggregatorHandle</target>
        </trans-unit>
        <trans-unit id="b498a5ab1740eb4b388270e116912049f504a754" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorSummary</source>
          <target state="translated">ExperimentalStatsAggregatorSummary</target>
        </trans-unit>
        <trans-unit id="a5025a95ecf320f6f166894f4c2fd55374b60430" translate="yes" xml:space="preserve">
          <source>ExperimentalTakeWhileDataset</source>
          <target state="translated">ExperimentalTakeWhileDataset</target>
        </trans-unit>
        <trans-unit id="ba249b389273fdcaa2dab5dca9593102149edae1" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolDataset</source>
          <target state="translated">ExperimentalThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="244b028889d39bd37099f6970ba90c68b81a1315" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolHandle</source>
          <target state="translated">ExperimentalThreadPoolHandle</target>
        </trans-unit>
        <trans-unit id="62eda0fa3c2336159806f0983c6c70960ec181e5" translate="yes" xml:space="preserve">
          <source>ExperimentalUnbatchDataset</source>
          <target state="translated">ExperimentalUnbatchDataset</target>
        </trans-unit>
        <trans-unit id="417f165202c1a73d9e2d67b8e71845b115a74022" translate="yes" xml:space="preserve">
          <source>ExperimentalUniqueDataset</source>
          <target state="translated">ExperimentalUniqueDataset</target>
        </trans-unit>
        <trans-unit id="4c7acad73b567cdcac462ff81f82e54fc6e9259c" translate="yes" xml:space="preserve">
          <source>Expint</source>
          <target state="translated">Expint</target>
        </trans-unit>
        <trans-unit id="60523673d27da2d9be21c4afc99bbda53781fda4" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;experimental/get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd544f84e957b227c02bc3cf27684a28e62d4091" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a785ca84d56b6101e1f706382fe3e7b06ddbd6" translate="yes" xml:space="preserve">
          <source>Explicitly marks flags as parsed.</source>
          <target state="translated">Явно отмечает флаги как разобранные.</target>
        </trans-unit>
        <trans-unit id="ecb86881f951179445ed42ff4652a7bc2018af23" translate="yes" xml:space="preserve">
          <source>Expm1</source>
          <target state="translated">Expm1</target>
        </trans-unit>
        <trans-unit id="ffc0eb352d4fd554ec47ef13b09615fbcdd6b7f9" translate="yes" xml:space="preserve">
          <source>Exponential Linear Unit.</source>
          <target state="translated">Экспоненциальный линейный блок.</target>
        </trans-unit>
        <trans-unit id="bb5f4f32cc189b6f4dd670fd7b30f74c670b7228" translate="yes" xml:space="preserve">
          <source>Exponential activation function.</source>
          <target state="translated">Функция экспоненциальной активации.</target>
        </trans-unit>
        <trans-unit id="0e03e02cd515bba42965eafc38e09638d1ba2c6f" translate="yes" xml:space="preserve">
          <source>Exponential distribution.</source>
          <target state="translated">Экспоненциальное распределение.</target>
        </trans-unit>
        <trans-unit id="9101b4b871e5e17bd87173bc3ae8137c9a7080f0" translate="yes" xml:space="preserve">
          <source>Exponential linear unit.</source>
          <target state="translated">Экспоненциальный линейный блок.</target>
        </trans-unit>
        <trans-unit id="f7d014f81f67852159a641e23ea7c906c62bb828" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt;.</source>
          <target state="translated">Экспоненциально масштабируемая модифицированная функция Бесселя порядка 0, определяемая как &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77d30ccae12ce68a067ccfe3da843d3e6bcf076" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt;.</source>
          <target state="translated">Экспоненциально масштабируемая модифицированная функция Бесселя порядка 0, определяемая как &lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9eafc8668c9f38493ae76076b35f34c2fd52217" translate="yes" xml:space="preserve">
          <source>Export output defaults to &lt;code&gt;RegressionOutput&lt;/code&gt;, whereas &lt;code&gt;BinaryClassHead&lt;/code&gt; defaults to &lt;code&gt;PredictOutput&lt;/code&gt;.</source>
          <target state="translated">По умолчанию для экспорта вывода используется &lt;code&gt;RegressionOutput&lt;/code&gt; , а для &lt;code&gt;BinaryClassHead&lt;/code&gt; - &lt;code&gt;PredictOutput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="c2c3e4d4e94806a23552dd6d4ca1e15b82a0cf12" translate="yes" xml:space="preserve">
          <source>Exporting from a function without a fixed signature:</source>
          <target state="translated">Экспорт из функции без фиксированной подписи:</target>
        </trans-unit>
        <trans-unit id="c9270ad488e74dac5b3f8cf66707fb174a4a97cc" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported unless both &lt;code&gt;graph_def&lt;/code&gt; and &lt;code&gt;graph&lt;/code&gt; are provided. No graph exists when eager execution is enabled.</source>
          <target state="translated">Экспорт / импорт мета-графиков не поддерживается, если не &lt;code&gt;graph_def&lt;/code&gt; и graph_def, и &lt;code&gt;graph&lt;/code&gt; . Когда включено активное выполнение, графа не существует.</target>
        </trans-unit>
        <trans-unit id="972bac7a70608bcda85786ab7a37bc49e2557b73" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported. No graph exists when eager execution is enabled.</source>
          <target state="translated">Экспорт/импорт мета-графиков не поддерживается.Граф не существует,когда включено ускоренное исполнение.</target>
        </trans-unit>
        <trans-unit id="85ec1e4960a7b50429456e650b9743c6b77af376" translate="yes" xml:space="preserve">
          <source>Exports a &lt;a href=&quot;../../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; as a Tensorflow SavedModel. (deprecated)</source>
          <target state="translated">Экспортирует &lt;a href=&quot;../../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; как SavedModel Tensorflow. (не рекомендуется)</target>
        </trans-unit>
        <trans-unit id="037b7cc0a3b1a8fa8456d461b271816999bb63f2" translate="yes" xml:space="preserve">
          <source>Exports a &lt;code&gt;SavedModel&lt;/code&gt; with &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; for each requested mode.</source>
          <target state="translated">Экспортирует &lt;code&gt;SavedModel&lt;/code&gt; с &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; для каждого запрошенного режима.</target>
        </trans-unit>
        <trans-unit id="178c80ffa7dd8fc1feabbbefe3b4b843e40d326c" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir.</source>
          <target state="translated">Экспортирует граф вывода как &lt;code&gt;SavedModel&lt;/code&gt; в заданный каталог .</target>
        </trans-unit>
        <trans-unit id="18db89eda532930544f1808335bc755809b1d792" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir. (deprecated)</source>
          <target state="translated">Экспортирует граф вывода как &lt;code&gt;SavedModel&lt;/code&gt; в заданный каталог . (не рекомендуется)</target>
        </trans-unit>
        <trans-unit id="d9fa3e5e307c033249da957003469524b5f0592b" translate="yes" xml:space="preserve">
          <source>Exports the Trackable object &lt;code&gt;obj&lt;/code&gt; to &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel format&lt;/a&gt;.</source>
          <target state="translated">Экспортирует отслеживаемый объект &lt;code&gt;obj&lt;/code&gt; в &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;формат SavedModel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1098ed652cfc03241430f4e8dedb771d99c6430" translate="yes" xml:space="preserve">
          <source>Exports the given &lt;code&gt;Estimator&lt;/code&gt; to a specific format.</source>
          <target state="translated">Экспортирует заданный &lt;code&gt;Estimator&lt;/code&gt; в определенный формат.</target>
        </trans-unit>
        <trans-unit id="8cdb15936b0cda5e7bcdd95275d1bcfe21a8a851" translate="yes" xml:space="preserve">
          <source>Exposes custom classes/functions to Keras deserialization internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7149496d9a4839c6fb3b5c02bc8d74740f250834" translate="yes" xml:space="preserve">
          <source>Expressions:</source>
          <target state="translated">Expressions:</target>
        </trans-unit>
        <trans-unit id="9292a42dc8a204a53ed967ecd444f32d375aa5ed" translate="yes" xml:space="preserve">
          <source>Extend the list by appending all the items in the given list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a734e674b16dcd29acb5b6a787730554e875a6ad" translate="yes" xml:space="preserve">
          <source>Extension_for_non_symmetric_matrices</source>
          <target state="translated">Extension_for_non_symmetric_matrices</target>
        </trans-unit>
        <trans-unit id="df4b823b15b51a230d5a933752ab9b61e72a53d7" translate="yes" xml:space="preserve">
          <source>Extra args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ea69930ab8df3bb4d3ee0410b1d6bda0c2a6c" translate="yes" xml:space="preserve">
          <source>Extra assets may be written into the &lt;code&gt;SavedModel&lt;/code&gt; via the &lt;code&gt;assets_extra&lt;/code&gt; argument. This should be a dict, where each key gives a destination path (including the filename) relative to the assets.extra directory. The corresponding value gives the full path of the source file to be copied. For example, the simple case of copying a single file without renaming it is specified as &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt;.</source>
          <target state="translated">Дополнительные активы могут быть записаны в &lt;code&gt;SavedModel&lt;/code&gt; с помощью аргумента &lt;code&gt;assets_extra&lt;/code&gt; . Это должен быть dict, где каждый ключ указывает путь назначения (включая имя файла) относительно каталога assets.extra. Соответствующее значение дает полный путь к копируемому исходному файлу. Например, простой случай копирования одного файла без его переименования определяется как &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211ecd9ad94e025432cb8149b1285e365c03b78a" translate="yes" xml:space="preserve">
          <source>Extra kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492bdefca5e8d605f4b78c8b4ffdeb101c4ed050" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt; and put them in the &quot;depth&quot; output dimension.</source>
          <target state="translated">Извлеките &lt;code&gt;patches&lt;/code&gt; из &lt;code&gt;images&lt;/code&gt; и поместите их в выходной размер &amp;laquo;глубина&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f7fef71d1e5d8b73071d4f157fbc1a59a9a9a893" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">Извлекайте &lt;code&gt;patches&lt;/code&gt; из &lt;code&gt;images&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="584d91d7ab384adf62f6fecbe1176e042c71db3c" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;input&lt;/code&gt; and put them in the &quot;depth&quot; output dimension. 3D extension of &lt;code&gt;extract_image_patches&lt;/code&gt;.</source>
          <target state="translated">Извлеките &lt;code&gt;patches&lt;/code&gt; из &lt;code&gt;input&lt;/code&gt; и поместите их в выходное измерение &amp;laquo;глубина&amp;raquo;. 3D-расширение &lt;code&gt;extract_image_patches&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69af2d30e21c558a02bea7b213da79207f5bd726" translate="yes" xml:space="preserve">
          <source>Extract the shape information of a JPEG-encoded image.</source>
          <target state="translated">Извлеките информацию о форме изображения в формате JPEG.</target>
        </trans-unit>
        <trans-unit id="538a777bb1a01feffc2ac87710b68583d6d20265" translate="yes" xml:space="preserve">
          <source>Extract the subgraph that can reach any of the nodes in 'dest_nodes'. (deprecated)</source>
          <target state="translated">Извлечь подграф,который может достигать любого из узлов в 'dest_nodes'.(устаревший)</target>
        </trans-unit>
        <trans-unit id="1c6ba3898062d75db279ace7c913306852b9ce0a" translate="yes" xml:space="preserve">
          <source>ExtractGlimpse</source>
          <target state="translated">ExtractGlimpse</target>
        </trans-unit>
        <trans-unit id="7871302e2e4d89c45db94e39de3d4b0f5eb46393" translate="yes" xml:space="preserve">
          <source>ExtractGlimpseV2</source>
          <target state="translated">ExtractGlimpseV2</target>
        </trans-unit>
        <trans-unit id="73c5ac1e11985b5070e973bb22c95e12b69bb5a0" translate="yes" xml:space="preserve">
          <source>ExtractImagePatches</source>
          <target state="translated">ExtractImagePatches</target>
        </trans-unit>
        <trans-unit id="50e443aa3db1214e9d2db1699a6ecfbeb4227bcc" translate="yes" xml:space="preserve">
          <source>ExtractJpegShape</source>
          <target state="translated">ExtractJpegShape</target>
        </trans-unit>
        <trans-unit id="7b9c5c5beec37d55a7d01b0acf6dc6eee7d44202" translate="yes" xml:space="preserve">
          <source>ExtractVolumePatches</source>
          <target state="translated">ExtractVolumePatches</target>
        </trans-unit>
        <trans-unit id="62cea78f9cb3874209e78f283267d217fe6be5d3" translate="yes" xml:space="preserve">
          <source>Extraction of the average gradient is blocked until the required number of gradients has been accumulated.</source>
          <target state="translated">Извлечение среднего градиента блокируется до тех пор,пока не будет накоплено необходимое количество градиентов.</target>
        </trans-unit>
        <trans-unit id="eafc900bb37fc83073f4ab7e2220e6aa0f85ad74" translate="yes" xml:space="preserve">
          <source>Extracts a glimpse from the input tensor.</source>
          <target state="translated">Извлекает взгляд из входного тензора.</target>
        </trans-unit>
        <trans-unit id="1a34851a4628f1022c20a689edabaafb13781ffb" translate="yes" xml:space="preserve">
          <source>Extracts a slice from a tensor.</source>
          <target state="translated">Извлекает кусочек из тензора.</target>
        </trans-unit>
        <trans-unit id="a97f13695905e343228e8d4f2e7b8debcf2167f3" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized Python array indexing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c645ed0f344783927bb0e282ac98e2846942b8fa" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized python array indexing).</source>
          <target state="translated">Извлекает прорезиненный кусок тензора (обобщенная индексация питонового массива).</target>
        </trans-unit>
        <trans-unit id="9e84628410abbba57634c26ee47624e6fb5c5296" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them using bilinear sampling or nearest neighbor sampling (possibly with aspect ratio change) to a common output size specified by &lt;code&gt;crop_size&lt;/code&gt;. This is more general than the &lt;code&gt;crop_to_bounding_box&lt;/code&gt; op which extracts a fixed size slice from the input image and does not allow resizing or aspect ratio change.</source>
          <target state="translated">&lt;code&gt;crop_size&lt;/code&gt; из тензора входного изображения и изменяет их размер, используя билинейную выборку или выборку ближайшего соседа (возможно, с изменением соотношения сторон) до общего выходного размера, указанного в параметре crop_size . Это более общий характер, чем &lt;code&gt;crop_to_bounding_box&lt;/code&gt; которая извлекает фрагмент фиксированного размера из входного изображения и не позволяет изменять размер или соотношение сторон.</target>
        </trans-unit>
        <trans-unit id="962f25f0a4474fb874998be05b54cc637211919e" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them.</source>
          <target state="translated">Извлекает кадры из тензора входного изображения и изменяет их размер.</target>
        </trans-unit>
        <trans-unit id="fef180b7f701790513171158add127c2106f4b90" translate="yes" xml:space="preserve">
          <source>Extracts image patches from the input tensor to form a &lt;em&gt;virtual&lt;/em&gt; tensor of shape &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt;.</source>
          <target state="translated">Извлекает фрагменты изображения из входного тензора, чтобы сформировать &lt;em&gt;виртуальный&lt;/em&gt; тензор формы &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07cd688c87891e471e62de3b6577eae0f97141a7" translate="yes" xml:space="preserve">
          <source>Extracts the average gradient in the given ConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba27b40ca140da982edd658693287a156367197" translate="yes" xml:space="preserve">
          <source>Extracts the average sparse gradient in a SparseConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8300dc1be4d8761c3816eeb71051b6b621dd6e" translate="yes" xml:space="preserve">
          <source>FFT</source>
          <target state="translated">FFT</target>
        </trans-unit>
        <trans-unit id="701d26b9ad9ca0c72e3cdc8a462873f5d778a499" translate="yes" xml:space="preserve">
          <source>FFT2D</source>
          <target state="translated">FFT2D</target>
        </trans-unit>
        <trans-unit id="eb09b8cfd6bd03a6f6997bd421aa03a67c598f30" translate="yes" xml:space="preserve">
          <source>FFT3D</source>
          <target state="translated">FFT3D</target>
        </trans-unit>
        <trans-unit id="0a33510e3c5de82084404c96929039a466c01517" translate="yes" xml:space="preserve">
          <source>FIFOQueue</source>
          <target state="translated">FIFOQueue</target>
        </trans-unit>
        <trans-unit id="ed5def1a4d6839767b84256f0e902a49fe1a15e9" translate="yes" xml:space="preserve">
          <source>FIFOQueueV2</source>
          <target state="translated">FIFOQueueV2</target>
        </trans-unit>
        <trans-unit id="fa59b7e25f71438c8e4f2fdd9767a47ee015c4d1" translate="yes" xml:space="preserve">
          <source>FILL THIS IN</source>
          <target state="translated">ЗАПОЛНИТЬ ЭТОТУ</target>
        </trans-unit>
        <trans-unit id="c5b64b5401b853d517a09f93af33024aa358f75b" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision</source>
          <target state="translated">точность FP32/FP16</target>
        </trans-unit>
        <trans-unit id="e68c9f5ad44202d7785d32aa64913fc9806abe58" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision with pre-built engines</source>
          <target state="translated">Точность FP32/FP16 с предварительно изготовленными двигателями</target>
        </trans-unit>
        <trans-unit id="e0930077f2b148812df888941f2d13cf6e9ddce0" translate="yes" xml:space="preserve">
          <source>Fact</source>
          <target state="translated">Fact</target>
        </trans-unit>
        <trans-unit id="cf05de317e8bffe740353b81c2056ee7a780f56c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by the '!=' operator.</source>
          <target state="translated">Ошибка,если два объекта равны,как это определяется оператором '!='.</target>
        </trans-unit>
        <trans-unit id="d688f47ff119167da8f40aca7cf48da60d0e1d3c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is less than the given delta.</source>
          <target state="translated">Неудача,если два объекта равны по разнице,округленной до заданного числа десятичных разрядов (по умолчанию 7)и сравниваемой с нулем,или по сравнению с тем,что разница между двумя объектами меньше заданной дельты.</target>
        </trans-unit>
        <trans-unit id="ac6d0b1d84f00848578493c90ccdd59e68b9978d" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by the '==' operator.</source>
          <target state="translated">Ошибка,если два объекта неравны по смыслу оператора '=='.</target>
        </trans-unit>
        <trans-unit id="9e1cddafab3d11ebc7f9b67baa9212b85f01704a" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is more than the given delta.</source>
          <target state="translated">Неудача,если два объекта неравны,что определяется их разницей,округленной до заданного числа десятичных разрядов (по умолчанию 7)и сравниваемой с нулем,или путем сравнения,что разница между двумя объектами больше заданной дельты.</target>
        </trans-unit>
        <trans-unit id="b90c05535c1484beaa10b9e343151d2dda2df269" translate="yes" xml:space="preserve">
          <source>Fail if the two sequences are unequal as determined by their value differences rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between each value in the two sequences is more than the given delta.</source>
          <target state="translated">Неудача,если две последовательности неравны,что определяется их разностью значений,округленных до заданного числа десятичных разрядов (по умолчанию 7)и сравниваемых с нулем,или путем сравнения того,что разница между каждым значением в двух последовательностях больше заданной дельты.</target>
        </trans-unit>
        <trans-unit id="6b09491a2e091e0d4883b90c183a399ea8883f86" translate="yes" xml:space="preserve">
          <source>Fail immediately with the given message, optionally prefixed.</source>
          <target state="translated">Немедленный сбой с переданным сообщением,опционально префикс.</target>
        </trans-unit>
        <trans-unit id="a54388df2306db1f46868df1364def0f8214cbb4" translate="yes" xml:space="preserve">
          <source>Fail the test if the text matches the regular expression.</source>
          <target state="translated">Неудачный тест,если текст соответствует регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="18174045d242bd42e10c3c0a79548ccc7b04f8e1" translate="yes" xml:space="preserve">
          <source>Fail the test unless the text matches the regular expression.</source>
          <target state="translated">Провалите тест,если текст не соответствует регулярному выражению.</target>
        </trans-unit>
        <trans-unit id="317a53187e390a71514cd2ea9224a8dd8fd2c2cb" translate="yes" xml:space="preserve">
          <source>Fail unless a log message of level &lt;em&gt;level&lt;/em&gt; or higher is emitted on &lt;em&gt;logger_name&lt;/em&gt; or its children. If omitted, &lt;em&gt;level&lt;/em&gt; defaults to INFO and &lt;em&gt;logger&lt;/em&gt; defaults to the root logger.</source>
          <target state="translated">Ошибка, если сообщение журнала уровня &lt;em&gt;level&lt;/em&gt; или выше не &lt;em&gt;отправлено&lt;/em&gt; на &lt;em&gt;logger_name&lt;/em&gt; или его дочерние &lt;em&gt;элементы&lt;/em&gt; . Если этот параметр опущен, &lt;em&gt;уровень&lt;/em&gt; по умолчанию для INFO и &lt;em&gt;регистратора&lt;/em&gt; по умолчанию для корневого регистратора.</target>
        </trans-unit>
        <trans-unit id="224a729bea443ca313463dee8480aee3bf36395c" translate="yes" xml:space="preserve">
          <source>Fail unless a warning of class warnClass is triggered by the callable when invoked with specified positional and keyword arguments. If a different type of warning is triggered, it will not be handled: depending on the other warning filtering rules in effect, it might be silenced, printed out, or raised as an exception.</source>
          <target state="translated">Сбой,если только предупреждение класса warningClass не вызвано вызываемым при вызове с указанными аргументами позиционирования и ключевого слова.Если срабатывает предупреждение другого типа,то оно не будет обработано:в зависимости от других действующих правил фильтрации предупреждений,оно может быть заглушено,распечатано или поднято как исключение.</target>
        </trans-unit>
        <trans-unit id="794fe5fe43f2b133d3282805e5b8fcb9248b06f4" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class expected_exception is raised by the callable when invoked with specified positional and keyword arguments. If a different type of exception is raised, it will not be caught, and the test case will be deemed to have suffered an error, exactly as for an unexpected exception.</source>
          <target state="translated">Отказ,если только при вызове с указанными аргументами позиционирования и ключевого слова не вызывается исключение класса expected_exception.Если будет поднят другой тип исключения,то оно не будет перехвачено,а тестовый случай будет считаться ошибочным,точно так же,как и для неожиданного исключения.</target>
        </trans-unit>
        <trans-unit id="65f7df05d2464c13cd5f0bbde6f45d941d8961b4" translate="yes" xml:space="preserve">
          <source>Fails if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9444367645842529e9a3b57a826433c9c9f6b6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="translated">Поддельное квантование тензора &amp;laquo;входов&amp;raquo; типа float и одной из форм: &lt;code&gt;[d]&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bbedf832b83cf67d1d445ceada9805aa72173218" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ef99c6b8428d09f63e4a7d97f3a72400b7c4f6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="translated">Поддельное квантование тензора &amp;laquo;входов&amp;raquo; типа float с помощью глобальных скаляров с плавающей запятой &lt;code&gt;min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe600ba02649a81014bb25f5be55edb94bb2afd8" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via per-channel floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52fe643923782ecf2f3d6c9b84b44b2ba6f1284" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="translated">Фальсификация-квантификация тензора 'входов',от типа float до 'выходов' тензора того же типа.</target>
        </trans-unit>
        <trans-unit id="c29ef0a243829482ef6b6023cbd2d09d0e889021" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float per-channel and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;, &lt;code&gt;[b, d]&lt;/code&gt;&lt;code&gt;[b, h, w, d]&lt;/code&gt; via per-channel floats &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; of shape &lt;code&gt;[d]&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727b1207b79f2486a519a9319dd200c9ea9de4c3" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e46f348cd8b7889203cb448d1da505704d10fcb" translate="yes" xml:space="preserve">
          <source>FakeParam</source>
          <target state="translated">FakeParam</target>
        </trans-unit>
        <trans-unit id="f0defc54e271554782715e9167383c6b2d53151f" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgs</source>
          <target state="translated">FakeQuantWithMinMaxArgs</target>
        </trans-unit>
        <trans-unit id="59c4408930e4b26ad854a59cd35ceee3cd12a936" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgsGradient</source>
          <target state="translated">FakeQuantWithMinMaxArgsGradient</target>
        </trans-unit>
        <trans-unit id="9516add6c09133d08b61494ba8b5e16f3a1b95ee" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVars</source>
          <target state="translated">FakeQuantWithMinMaxVars</target>
        </trans-unit>
        <trans-unit id="47f90df5afb9d7d45bf8ddfa20626b2abefbf0aa" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsGradient</target>
        </trans-unit>
        <trans-unit id="ce35d79dfb2d1f0c87514e8314f60eda45600d4e" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannel</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannel</target>
        </trans-unit>
        <trans-unit id="7918bf198a7672ba7efcb25b3f8fbdd65d1206df" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannelGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannelGradient</target>
        </trans-unit>
        <trans-unit id="fc2a938c669af601e0e2b74ec4df166952f52ab4" translate="yes" xml:space="preserve">
          <source>FakeQueue</source>
          <target state="translated">FakeQueue</target>
        </trans-unit>
        <trans-unit id="f29ff2d48a6268f2adc2ad839d270aea14973b8a" translate="yes" xml:space="preserve">
          <source>False (inference): Mean must be a &lt;code&gt;Tensor&lt;/code&gt; of the same shape as scale containing the estimated population mean computed during training. is_training</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6466b40658f50255a966ff6bc949e1eaf7f324" translate="yes" xml:space="preserve">
          <source>False: executes each operation asynchronously.</source>
          <target state="translated">Ложно:выполняет каждую операцию асинхронно.</target>
        </trans-unit>
        <trans-unit id="92bacbc01b8e8d65a81b7a577564a2ad70746d23" translate="yes" xml:space="preserve">
          <source>Fashion-MNIST dataset.</source>
          <target state="translated">Набор данных Fashion-MNIST.</target>
        </trans-unit>
        <trans-unit id="6fe9878782b0da78594267486a5626a0be461e0b" translate="yes" xml:space="preserve">
          <source>Fast Fourier transform.</source>
          <target state="translated">Быстрое преобразование Фурье.</target>
        </trans-unit>
        <trans-unit id="360d68ba6f807c157ba9ba7b70550e6c9f3ffa4d" translate="yes" xml:space="preserve">
          <source>Fast GRU implementation backed by cuDNN.</source>
          <target state="translated">Быстрое внедрение ГРУ при поддержке КУДН.</target>
        </trans-unit>
        <trans-unit id="8e8bb42b9fb0290de9166de7c16619501a1feb12" translate="yes" xml:space="preserve">
          <source>Fast LSTM implementation backed by cuDNN.</source>
          <target state="translated">Быстрое внедрение LSTM при поддержке cuDNN.</target>
        </trans-unit>
        <trans-unit id="4245fa3f7cbed5285f7a0350256c3ba269ba7d00" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)</source>
          <target state="translated">Быстрое и точное глубокое сетевое обучение с помощью экспоненциальных линейных блоков (ELU)</target>
        </trans-unit>
        <trans-unit id="d8237bbce750fd0f52af835e027a65a99328e838" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs) (Clevert et al, 2016)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1c1fc16a871c94652815a12e26ab11263cad5" translate="yes" xml:space="preserve">
          <source>Faster than sigmoid. Returns &lt;code&gt;0.&lt;/code&gt; if &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt;, &lt;code&gt;1.&lt;/code&gt; if &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt;. In &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt;, returns &lt;code&gt;0.2 * x + 0.5&lt;/code&gt;.</source>
          <target state="translated">Быстрее сигмовидной. Возвращает &lt;code&gt;0.&lt;/code&gt; если &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt; , &lt;code&gt;1.&lt;/code&gt; если &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt; . В &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt; возвращает &lt;code&gt;0.2 * x + 0.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6c1e072633d22e2aade44664891ba9a15e50cd9" translate="yes" xml:space="preserve">
          <source>Faster to compute than sigmoid activation.</source>
          <target state="translated">Быстрее вычислить,чем сигмовидная активация.</target>
        </trans-unit>
        <trans-unit id="34bfe60cc099d90bd06ed304ed295cf858476330" translate="yes" xml:space="preserve">
          <source>Feature columns are of type V2.</source>
          <target state="translated">Функциональные колонки типа V2.</target>
        </trans-unit>
        <trans-unit id="070e6dab4ad4acc3df2f022293102d5f296b468a" translate="yes" xml:space="preserve">
          <source>Feature-wise normalization of the data.</source>
          <target state="translated">Функциональная нормализация данных.</target>
        </trans-unit>
        <trans-unit id="c8df39e24b85a777de03f489c7d7b28c6ce75e8b" translate="yes" xml:space="preserve">
          <source>Features to pass to &lt;code&gt;Model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18562ca43bb61eaf2ba3b85a644d004ea8dbd2c0" translate="yes" xml:space="preserve">
          <source>Feeds multiple Tensor values into the computation as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0393f05a48a53b0acc3a57a2c1f23aefef05410" translate="yes" xml:space="preserve">
          <source>Felix Gers, Jurgen Schmidhuber, and Fred Cummins. &quot;Learning to forget: Continual prediction with LSTM.&quot; IET, 850-855, 1999.</source>
          <target state="translated">Феликс Герс,Юрген Шмидхубер и Фред Камминс.&quot;Научиться забывать:Непрерывное предсказание с помощью LSTM.&quot; ИТ,850-855,1999.</target>
        </trans-unit>
        <trans-unit id="cef781e4eba5fab9683184738bf500b8295f2bfa" translate="yes" xml:space="preserve">
          <source>Fetch the current asset path.</source>
          <target state="translated">Найдите путь к текущим активам.</target>
        </trans-unit>
        <trans-unit id="7db8b651e30c06e23e32a46b09058541af7a5658" translate="yes" xml:space="preserve">
          <source>Fetches a list of optimizer variables in the default graph.</source>
          <target state="translated">Получает список переменных оптимизатора на графике по умолчанию.</target>
        </trans-unit>
        <trans-unit id="bff8257ab5af6c57135d5ef7ab020a8747f72ac0" translate="yes" xml:space="preserve">
          <source>Fetches multiple values from infeed as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208b0c51cfaca2d2db585f2665561398e6f952bf" translate="yes" xml:space="preserve">
          <source>Fetches the Jacobian-vector product computed for &lt;code&gt;primals&lt;/code&gt;.</source>
          <target state="translated">Получает произведение векторов Якоби, вычисленное для &lt;code&gt;primals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37a293b575bf1d5a103c6e0e28889a74b7565cee" translate="yes" xml:space="preserve">
          <source>Fields:</source>
          <target state="translated">Fields:</target>
        </trans-unit>
        <trans-unit id="6c74664d5467bedeeec61d6de90b295aefeb2531" translate="yes" xml:space="preserve">
          <source>Figure illustrates the interaction of these components. &quot;/job:worker/task:0&quot; and &quot;/job:ps/task:0&quot; are both tasks with worker services.</source>
          <target state="translated">На рисунке показано взаимодействие этих компонентов.&quot;/job:worker/task:0&quot; и &quot;/job:ps/task:0&quot;-это задачи с рабочими службами.</target>
        </trans-unit>
        <trans-unit id="159e9d467070447df6944016c6ee0bba81137641" translate="yes" xml:space="preserve">
          <source>File I/O wrappers without thread locking.</source>
          <target state="translated">Обмотчики для ввода/вывода файлов без фиксации резьбы.</target>
        </trans-unit>
        <trans-unit id="584ee58755e2076e25264007123aa2d2050b00ff" translate="yes" xml:space="preserve">
          <source>File name of the plot image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f961ad24d1f79d5639b56b5b84eebf670b4873" translate="yes" xml:space="preserve">
          <source>File not found. Unable to parse input file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661f27230645d7517555d35a4f8d6aebea7127b6" translate="yes" xml:space="preserve">
          <source>File object we write to. Default None means sys.stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2587e69f02d48d802800b9b142e0a026de4abb" translate="yes" xml:space="preserve">
          <source>FileStatistics struct that contains information about the path</source>
          <target state="translated">Структура FileStatistics,содержащая информацию о пути</target>
        </trans-unit>
        <trans-unit id="527e8517195d6b5d4287766fb96efe43836a8f10" translate="yes" xml:space="preserve">
          <source>Filename for the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76400426742eb499ed7b34ca39d25c0a420914e8" translate="yes" xml:space="preserve">
          <source>Filename of the CSV file, e.g. &lt;code&gt;'run/log.csv'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47805197178266d81d15ed833d217302d0468cd7" translate="yes" xml:space="preserve">
          <source>Files in tar, tar.gz, tar.bz, and zip formats can also be extracted. Passing a hash will verify the file after download. The command line programs &lt;code&gt;shasum&lt;/code&gt; and &lt;code&gt;sha256sum&lt;/code&gt; can compute the hash.</source>
          <target state="translated">Файлы в форматах tar, tar.gz, tar.bz и zip также могут быть извлечены. Передача хэша позволит проверить файл после загрузки. Программы командной строки &lt;code&gt;shasum&lt;/code&gt; и &lt;code&gt;sha256sum&lt;/code&gt; могут вычислять хэш.</target>
        </trans-unit>
        <trans-unit id="7adb6736cf2c9ae017b128f98738ffbae0e58655" translate="yes" xml:space="preserve">
          <source>Fill</source>
          <target state="translated">Fill</target>
        </trans-unit>
        <trans-unit id="1ed5236bdaf974f37a0f419a92c7732085d21554" translate="yes" xml:space="preserve">
          <source>Fills empty rows in the input 2-D &lt;code&gt;SparseTensor&lt;/code&gt; with a default value.</source>
          <target state="translated">Заполняет пустые строки во входном 2D &lt;code&gt;SparseTensor&lt;/code&gt; значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5e3594f61821d7256db224b8240957470bce4c5d" translate="yes" xml:space="preserve">
          <source>FilterByLastComponentDataset</source>
          <target state="translated">FilterByLastComponentDataset</target>
        </trans-unit>
        <trans-unit id="dfd7871a81a156bd17377802a56cf380df48a360" translate="yes" xml:space="preserve">
          <source>FilterDataset</source>
          <target state="translated">FilterDataset</target>
        </trans-unit>
        <trans-unit id="191ef391edf179c62838570c65fd5d59b43d8a96" translate="yes" xml:space="preserve">
          <source>Filters &lt;code&gt;sk_params&lt;/code&gt; and returns those in &lt;code&gt;fn&lt;/code&gt;'s arguments.</source>
          <target state="translated">Фильтрует &lt;code&gt;sk_params&lt;/code&gt; и возвращает их в аргументы &lt;code&gt;fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7f85fe5e0eb5829649fc74501c2797e0a5749f7" translate="yes" xml:space="preserve">
          <source>Filters stack frames from the module where this is used (best effort).</source>
          <target state="translated">Фильтры складывают кадры из модуля,в котором они используются (наилучшее усилие).</target>
        </trans-unit>
        <trans-unit id="f73b921eb11bf8c6c7c26ac1f940650c83b38724" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">Фильтрует этот набор данных в соответствии с &lt;code&gt;predicate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f09cc083d67b76042568ffa75f3802f349b3495d" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;. (deprecated)</source>
          <target state="translated">Фильтрует этот набор данных в соответствии с &lt;code&gt;predicate&lt;/code&gt; . (не рекомендуется)</target>
        </trans-unit>
        <trans-unit id="c903b1bc45a8ada25a60850da0b09b84ebcde19f" translate="yes" xml:space="preserve">
          <source>Finalizes this graph, making it read-only.</source>
          <target state="translated">Завершает этот график,делая его доступным только для чтения.</target>
        </trans-unit>
        <trans-unit id="ecfa9d80e6f64745e132d951f00acbf9be7b6485" translate="yes" xml:space="preserve">
          <source>Finally use a method (such as &lt;a href=&quot;strategy#reduce&quot;&gt;&lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt;&lt;/a&gt;) to convert the resulting &quot;per-replica&quot; values into ordinary &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">Наконец, используйте метод (например, &lt;a href=&quot;strategy#reduce&quot;&gt; &lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt; &lt;/a&gt; ) для преобразования результирующих значений &quot;для каждой реплики&quot; в обычные &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3acf3bc9d828b2ec13c9c22f9d93cb8857e33537" translate="yes" xml:space="preserve">
          <source>Finds the filename of latest saved checkpoint file.</source>
          <target state="translated">Находит имя файла последнего сохраненного файла контрольно-пропускного пункта.</target>
        </trans-unit>
        <trans-unit id="f5714c745bc465ce920adeb9148ea0e19c01510a" translate="yes" xml:space="preserve">
          <source>Finds the filename of the latest saved checkpoint file in &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">Находит имя последнего сохраненного файла контрольной точки в &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c497ed1562ad942752e69be962a205e29a0fa402" translate="yes" xml:space="preserve">
          <source>Finds the index of the closest cluster center to each input point.</source>
          <target state="translated">Находит индекс ближайшего центра кластера к каждой точке входа.</target>
        </trans-unit>
        <trans-unit id="8da15b6736177a4d172880d414ea982c2a73af6b" translate="yes" xml:space="preserve">
          <source>Finds unique elements along an axis of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ce4a21b2fba42ff49470d900e55ccd05344b0" translate="yes" xml:space="preserve">
          <source>Finds unique elements in a 1-D tensor.</source>
          <target state="translated">Находит уникальные элементы в 1-D тензоре.</target>
        </trans-unit>
        <trans-unit id="ce1610505bb23ec2475caec959a3d3e9dcaa8b92" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest elements for the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67864305a840562104d7b5e16db9cc161966329" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest entries for the last dimension.</source>
          <target state="translated">Находит значения и индексы &lt;code&gt;k&lt;/code&gt; самых больших записей для последнего измерения.</target>
        </trans-unit>
        <trans-unit id="d869f52ff41ab5eeded0e9e726302f4621f7c537" translate="yes" xml:space="preserve">
          <source>Finds values of the &lt;code&gt;n&lt;/code&gt;-th order statistic for the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed4c9053d8c85c9d95957c6e01431c7805f793d" translate="yes" xml:space="preserve">
          <source>Fingerprint</source>
          <target state="translated">Fingerprint</target>
        </trans-unit>
        <trans-unit id="af30be9d790e1e119e17560066c8c66fb8f37088" translate="yes" xml:space="preserve">
          <source>Fingerprint op considers the first dimension of &lt;code&gt;data&lt;/code&gt; as the batch dimension, and &lt;code&gt;output[i]&lt;/code&gt; contains the fingerprint value generated from contents in &lt;code&gt;data[i, ...]&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">Операция по отпечатку пальца рассматривает первое измерение &lt;code&gt;data&lt;/code&gt; как измерение пакета, а &lt;code&gt;output[i]&lt;/code&gt; содержит значение отпечатка пальца, созданное из содержимого в &lt;code&gt;data[i, ...]&lt;/code&gt; для всех &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76c15bbb59710f1b314ab98c78d26b50b325ff21" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;a href=&quot;../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt; array of size 8, in little-endian order.</source>
          <target state="translated">Операция по отпечатку пальца записывает значения отпечатка пальца в виде байтовых массивов. Например, метод по умолчанию &lt;code&gt;farmhash64&lt;/code&gt; генерирует 64-битное значение отпечатка пальца за раз. Это 8-байтовое значение записывается как массив &lt;a href=&quot;../tf#uint8&quot;&gt; &lt;code&gt;tf.uint8&lt;/code&gt; &lt;/a&gt; размером 8 в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="24ae78f56927f08bdbc48d3e1281bff3edb20d8e" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;code&gt;uint8&lt;/code&gt; array of size 8, in little-endian order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a242c8a885f83aee8a0830dee3aaf16d961a5a01" translate="yes" xml:space="preserve">
          <source>First image batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1713f72b3872acdb411943d79c34f5f92844d757" translate="yes" xml:space="preserve">
          <source>First lets look at the &lt;code&gt;TPUStrategy&lt;/code&gt; mode. Initial setup looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88825dd2c9ca761b4e4082e799e362eccb087d5f" translate="yes" xml:space="preserve">
          <source>First set of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0294ba11a5be64d665b2772cb87eba1fb22ce5ec" translate="yes" xml:space="preserve">
          <source>First we define the following:</source>
          <target state="translated">Сначала мы определяем следующее:</target>
        </trans-unit>
        <trans-unit id="8f4e055f26792fc37dc0795930fb9e3effd084cc" translate="yes" xml:space="preserve">
          <source>Fits the data generator to some sample data.</source>
          <target state="translated">Устанавливает генератор данных на некоторые образцы данных.</target>
        </trans-unit>
        <trans-unit id="c0b7fa426d96a8c15b52923880d79992cbbd900d" translate="yes" xml:space="preserve">
          <source>Fits the model on data yielded batch-by-batch by a Python generator. (deprecated)</source>
          <target state="translated">Подходит для модели по данным,полученным пакетным способом с помощью питонового генератора.(устаревший)</target>
        </trans-unit>
        <trans-unit id="12d2a04ec34e8795ff7f5f33aa56f7a77c8bcc78" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the data being passed.</source>
          <target state="translated">Устанавливает состояние препроцессингового слоя на передаваемые данные.</target>
        </trans-unit>
        <trans-unit id="6f150a50fe544ef1c90226d7313155896658e69c" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the dataset.</source>
          <target state="translated">Устанавливает состояние препроцессингового слоя в набор данных.</target>
        </trans-unit>
        <trans-unit id="b4c93ad759588e5315cfabd75c2a83720a3e7ed5" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDataset</source>
          <target state="translated">FixedLengthRecordDataset</target>
        </trans-unit>
        <trans-unit id="3574a34e4d48af24eeac301a412e2a8ed6606857" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDatasetV2</source>
          <target state="translated">FixedLengthRecordDatasetV2</target>
        </trans-unit>
        <trans-unit id="35a112ec36d191800f440593ed2f721eccf12a2a" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReader</source>
          <target state="translated">FixedLengthRecordReader</target>
        </trans-unit>
        <trans-unit id="b90915625e692ba60987cbe78c6dfc6ac20d16f4" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReaderV2</source>
          <target state="translated">FixedLengthRecordReaderV2</target>
        </trans-unit>
        <trans-unit id="e8090f0ecfbc570479326449b41013d25258ad70" translate="yes" xml:space="preserve">
          <source>FixedUnigramCandidateSampler</source>
          <target state="translated">FixedUnigramCandidateSampler</target>
        </trans-unit>
        <trans-unit id="bd43985b6e84e310537bfc5ce6baae18de89f97d" translate="yes" xml:space="preserve">
          <source>Flag, a flag that is key to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2e1f778c6645f96905666b9789656bb26fed63" translate="yes" xml:space="preserve">
          <source>Flag, the Flag instance that is key to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4094b5a2e81c815e8e34bcf4cd3b25eee8b9a58" translate="yes" xml:space="preserve">
          <source>FlagValues, if it is not None, it should be the FlagValues object where the second definition of flagname occurs. If it is None, we assume that we're being called when attempting to create the flag a second time, and we use the module calling this one as the source of the second definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ad94b7ab5cfa3bb49b5cf66ed68ef4cc88f05d" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing flags to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66158fb7032c7330f941e05310a8365855a84e2" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing the first definition of flagname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3a1b2efacdb9266fcf824696665571c3cb5e29" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance from which to copy flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a98d203a5932a60d1d21ad86dfe32d7b596174" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523577cd08a5dadf1fa8ca51be720cf50ea970e8" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flags will be declared as key flags. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9e34c5bedd5799d70c5be2dc016736bd7f599c" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9aa474a9d19af988bc2752388fc3ad87fabba8" translate="yes" xml:space="preserve">
          <source>FlatMapDataset</source>
          <target state="translated">FlatMapDataset</target>
        </trans-unit>
        <trans-unit id="be7c20b6836a1a8e925b2cd5cc10ae1834fe3d78" translate="yes" xml:space="preserve">
          <source>Flatten a tensor.</source>
          <target state="translated">Раздвинь тензор.</target>
        </trans-unit>
        <trans-unit id="b3f67378d5dfd2e28a398854dac316c760ad7f67" translate="yes" xml:space="preserve">
          <source>Flattening a 3D tensor to 2D by collapsing the last dimension.</source>
          <target state="translated">Сглаживание 3D тензора до 2D путем сглаживания последнего измерения.</target>
        </trans-unit>
        <trans-unit id="98d6725dbcd4174b52a67ca8012a9fe8d4866758" translate="yes" xml:space="preserve">
          <source>Flattens an input tensor while preserving the batch axis (axis 0).</source>
          <target state="translated">Облегчает входной тензор,сохраняя при этом ось партии (ось 0).</target>
        </trans-unit>
        <trans-unit id="56b885e27e87eca4ac7366c4be1d9b94ad78c3ef" translate="yes" xml:space="preserve">
          <source>Flattens the filter to a 2-D matrix with shape &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt;.</source>
          <target state="translated">Сглаживает фильтр до двухмерной матрицы с формой &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2a63b5612a9d61a1bb9f06334c61eebfd78ea2" translate="yes" xml:space="preserve">
          <source>Flattens the input. Does not affect the batch size.</source>
          <target state="translated">Смягчает вход.Не влияет на размер партии.</target>
        </trans-unit>
        <trans-unit id="604fa3f4b0a02d70b991c191d54820a41775d62a" translate="yes" xml:space="preserve">
          <source>Flip an image horizontally (left to right).</source>
          <target state="translated">Переверните изображение по горизонтали (слева направо).</target>
        </trans-unit>
        <trans-unit id="94b52601c861ca2ab292144c650c85f55273f72f" translate="yes" xml:space="preserve">
          <source>Flip an image vertically (upside down).</source>
          <target state="translated">Переверните изображение вертикально (вверх ногами).</target>
        </trans-unit>
        <trans-unit id="3d3f317cb7fee65325f7052ae8fe630967b8fe4c" translate="yes" xml:space="preserve">
          <source>Flip each bit of supported types. For example, type &lt;code&gt;int8&lt;/code&gt; (decimal 2) binary 00000010 becomes (decimal -3) binary 11111101. This operation is performed on each element of the tensor argument &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Переверните каждый бит поддерживаемых типов. Например, тип &lt;code&gt;int8&lt;/code&gt; (десятичный 2) двоичный 00000010 становится (десятичный -3) двоичным 11111101. Эта операция выполняется для каждого элемента аргумента тензора &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcda6c98cb9e0a0755cc58255d1c2b6975073159" translate="yes" xml:space="preserve">
          <source>Flipping, Rotating and Transposing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68474eaa2dfbf245adcb7772e577a27e89ca992f" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Maximum activation value. Default to None, which means unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c02bc3f6133f11fb75ea8a03fc5d60230f9825" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d12594d8171788bee6da84ae17e9e6935dd960" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be19122321c8821714126391793d30f54fefef8" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Threshold location of activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f86fc1cf0e82078e671d21863798aa25b378e8" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and &lt;code&gt;predictions&lt;/code&gt; has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943d4a865cbffca174e2885620f7eb9333c71a0" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and predictions has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee5d04425b55ed3c9e7a09590913fec4ce70f2" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; logits outputs of the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517d085479f5cda5431638e7e5e8ca05dd220945" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the dataset to be used as test data. Defaults to 0.2, meaning 20% of the dataset is used as test data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c8249e6941260faf8265f241d81626aeb48987" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the input units to drop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f17f81d04b5a69e3312a3e85057813edf15cf7" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a03838e31ae32dff4cbddc4baeaf2074d2453dd" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb694ad9da36e4c6e6511fda4c64089561c3b567" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the attention scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d744e34143b64f1c95f03f4eeb55dcb4b1b9b7e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9a9fde9c898e8df4e03950cdd4bfe7e409334b" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6120061a59f7fa93691e8f9a7f7d69c6882fe17e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1b02c175939fbac4ba1a3690a49b6760ce6db4" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bab07d87f67062be43b4853d5ba6a86f11c1fa" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV2 paper, but the name is kept for consistency with &lt;code&gt;applications.MobileNetV1&lt;/code&gt; model in Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31711227ec413764215a5f8420434d3a2e3ab01" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. If &amp;gt; &lt;code&gt;0&lt;/code&gt; then smooth the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ed0dffee2ad958b3c7a5730581f019bcdfee82" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When &amp;gt; 0, label values are smoothed, meaning the confidence on label values are relaxed. e.g. &lt;code&gt;label_smoothing=0.2&lt;/code&gt; means that we will use a value of &lt;code&gt;0.1&lt;/code&gt; for label &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;0.9&lt;/code&gt; for label &lt;code&gt;1&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542ca9d0b8111373cb343d51c4f7653bd67ac923" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When 0, no smoothing occurs. When &amp;gt; 0, we compute the loss between the predicted labels and a smoothed version of the true labels, where the smoothing squeezes the labels towards 0.5. Larger values of &lt;code&gt;label_smoothing&lt;/code&gt; correspond to heavier smoothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571a944629b74395deeef2dd46c89375833ef1ec" translate="yes" xml:space="preserve">
          <source>Float or Int. Value used for points outside the boundaries when &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c7373c4d600371c8388f4ec8d1368219eb307f" translate="yes" xml:space="preserve">
          <source>Float or String, padding value. (Optional, defaults to 0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db15264d2f77064978f496269f734646754696a9" translate="yes" xml:space="preserve">
          <source>Float or [lower, upper]. Range for random zoom. If a float, &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657b826a18a5ab0724c4bee3029a6fe179a224d6" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc356951b1ebf8bcf6c4f33900eda3669d369c2" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same dtype as and broadcastable to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97356e0e6bb617cad32df5f2dc24252713dbdb" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab97103686ce99291d77e40e99e85c96e3e49b99" translate="yes" xml:space="preserve">
          <source>Float, 1-D array-like or int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fc673ce09e5453387e297c70756854196ead55" translate="yes" xml:space="preserve">
          <source>Float, drop probability (as with &lt;code&gt;Dropout&lt;/code&gt;). The multiplicative noise will have standard deviation &lt;code&gt;sqrt(rate / (1 - rate))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6af1b96050d537498291ec624ed09409794a092" translate="yes" xml:space="preserve">
          <source>Float, lower boundary of the output interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83467c093496629270603f2b93822a26ada466a" translate="yes" xml:space="preserve">
          <source>Float, mean of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c353aa659bac6e7ec221e19db500b9e130d4c927" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the noise distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbe8b05653a4a49ffc6852b7a7a22396cc5412d" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f896efb7c89a8ed25cdd8ebd048ab467a6e6181" translate="yes" xml:space="preserve">
          <source>Float, the offset to apply to the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d45b04048fc2269b71a6ac7ead70ebc4bcdfaeb" translate="yes" xml:space="preserve">
          <source>Float, the scale to apply to the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaaae9f08955516005c76ecbc47953c81affd96" translate="yes" xml:space="preserve">
          <source>Float, upper boundary of the output interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86ccaab14de4c58d861390f0e0692236672fba5" translate="yes" xml:space="preserve">
          <source>Float. A multiplicative factor by which the values will be scaled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084fa1e5102b2fd03b8229b23e59b95fcc0e480c" translate="yes" xml:space="preserve">
          <source>Float. Fraction of images reserved for validation (strictly between 0 and 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a153ad993b58e91534aaa1b0194100c39e780a2" translate="yes" xml:space="preserve">
          <source>Float. Range for random channel shifts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f298b29df0aaed3c2269372e55d5d95d6479cc14" translate="yes" xml:space="preserve">
          <source>Float. Shear Intensity (Shear angle in counter-clockwise direction in degrees)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61a6c9d692f4f07e8ed530942501016a4e248b8" translate="yes" xml:space="preserve">
          <source>Float. Sleep for up to that many seconds waiting for should_stop() to become True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b216453945e2387161200857251f449d037b3948" translate="yes" xml:space="preserve">
          <source>Float. The decay to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8d2374e2cdf12bb0ad483865021b7b46af8084" translate="yes" xml:space="preserve">
          <source>Float. Threshold value for thresholded activation. Default to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb464c8d0de78b41f137b84b0a45a7ef1df1306" translate="yes" xml:space="preserve">
          <source>Float; L1 regularization factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e545332d824ca10ae9436e8e94121d2688432cd4" translate="yes" xml:space="preserve">
          <source>Float; L2 regularization factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98d28f78e216bda13139a52fd08416526b5fd50" translate="yes" xml:space="preserve">
          <source>Floating point dtype of &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1108f1c23cbc1e57319f627f818d48f1bc5ea8b3" translate="yes" xml:space="preserve">
          <source>Floating point tensor representing unnormalized log-probabilities of a positive event with shape broadcastable to &lt;code&gt;[N1,..., Nm, K]&lt;/code&gt;&lt;code&gt;m &amp;gt;= 0&lt;/code&gt;, and the same dtype as &lt;code&gt;total_count&lt;/code&gt;. Defines this as a batch of &lt;code&gt;N1 x ... x Nm&lt;/code&gt; different &lt;code&gt;K&lt;/code&gt; class Multinomial distributions. Only one of &lt;code&gt;logits&lt;/code&gt; or &lt;code&gt;probs&lt;/code&gt; should be passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecab45c217e3d9a346314ec4e398aa11dd87ce21" translate="yes" xml:space="preserve">
          <source>Floating point tensor which characterizes the location (center) of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22ad41332a3111722a8770b295e776925f1ab64" translate="yes" xml:space="preserve">
          <source>Floating point tensor, equivalent to &lt;code&gt;1 / mean&lt;/code&gt;. Must contain only positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebec1c58e95127ff044f512a93e456ed5e0f423a" translate="yes" xml:space="preserve">
          <source>Floating point tensor, lower boundary of the output interval. Must have &lt;code&gt;low &amp;lt; high&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a469e0804bf541623d16583f6919e570634685" translate="yes" xml:space="preserve">
          <source>Floating point tensor, the concentration params of the distribution(s). Must contain only positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8a724a94fb47724c39c1be0f5af846a44c632d" translate="yes" xml:space="preserve">
          <source>Floating point tensor, the inverse scale params of the distribution(s). Must contain only positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5327a6fa2b169fe97edfd87b3231c2fc0e85d1d3" translate="yes" xml:space="preserve">
          <source>Floating point tensor, upper boundary of the output interval. Must have &lt;code&gt;low &amp;lt; high&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21ecae5ea295908a041bff28ab082db7d65a86e" translate="yes" xml:space="preserve">
          <source>Floating point tensor; the means of the distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f7e6b0fe6613bd3d52f8409a688348e04f4a6d" translate="yes" xml:space="preserve">
          <source>Floating point tensor; the stddevs of the distribution(s). Must contain only positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaf74f02e9ba66941d4fb8e98d09812330541ef" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[B1, ..., Bn, k', k']&lt;/code&gt; where the first &lt;code&gt;n&lt;/code&gt; dimensions are batch coordinates and &lt;code&gt;k' = reduce_prod(self.event_shape)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1009ba855ce72dff0358aacd603e698195e0cc2e" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt; with shape identical to &lt;code&gt;batch_shape + event_shape&lt;/code&gt;, i.e., the same shape as &lt;code&gt;self.mean()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7844a942513a10bbbb9e00e72332f173c63976" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The degrees of freedom of the distribution(s). &lt;code&gt;df&lt;/code&gt; must contain only positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d90b467f05cdb99ed3725de235ef01720d9a043" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The mean(s) of the distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e8504e26a1e405a364b16182f146926ce77d1d" translate="yes" xml:space="preserve">
          <source>Floating-point &lt;code&gt;Tensor&lt;/code&gt;. The scaling factor(s) for the distribution(s). Note that &lt;code&gt;scale&lt;/code&gt; is not technically the standard deviation of this distribution but has semantics more similar to standard deviation than variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db82f74092fc3160e6bc0d9e9bd4849c5c06c0f" translate="yes" xml:space="preserve">
          <source>Floor</source>
          <target state="translated">Floor</target>
        </trans-unit>
        <trans-unit id="6459c53ba8e729ad9aabb9ade4a34e551f147d2f" translate="yes" xml:space="preserve">
          <source>FloorDiv</source>
          <target state="translated">FloorDiv</target>
        </trans-unit>
        <trans-unit id="e19f1321e0f0e74f314d249fb2231ea22ddbb827" translate="yes" xml:space="preserve">
          <source>FloorMod</source>
          <target state="translated">FloorMod</target>
        </trans-unit>
        <trans-unit id="3a522d2554ce1f4be52f55076b2741713cbd45ec" translate="yes" xml:space="preserve">
          <source>Flush the file.</source>
          <target state="translated">Промойте файл.</target>
        </trans-unit>
        <trans-unit id="dd5993032f3482cc7f5027e64c00852d5ba8b251" translate="yes" xml:space="preserve">
          <source>Flush the quantile summaries from each quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfeaaa5a96eaede43e8bbe386e2dc6ef41feac38" translate="yes" xml:space="preserve">
          <source>Flush the summaries for a quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e3fc25c8039e27103eb4fe6d62a39fa677f1d" translate="yes" xml:space="preserve">
          <source>FlushSummaryWriter</source>
          <target state="translated">FlushSummaryWriter</target>
        </trans-unit>
        <trans-unit id="6f8d4e8b184b36bf829848dabccbd29eed8aad30" translate="yes" xml:space="preserve">
          <source>Flushes and closes the summary writer.</source>
          <target state="translated">Смывает и закрывает автора сводки.</target>
        </trans-unit>
        <trans-unit id="9dbf53cec96a5446255caa0966d9befabc811892" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data.</source>
          <target state="translated">Смывает любые буферизованные данные.</target>
        </trans-unit>
        <trans-unit id="bb205e45a353b942abb883e789503bde26fce540" translate="yes" xml:space="preserve">
          <source>Flushes the Writable file.</source>
          <target state="translated">Промывает записываемый файл.</target>
        </trans-unit>
        <trans-unit id="7ba4cab89493ed49c06282e139f3f44d50a23884" translate="yes" xml:space="preserve">
          <source>Flushes the event file to disk and close the file.</source>
          <target state="translated">Промывает файл события на диск и закрывает файл.</target>
        </trans-unit>
        <trans-unit id="411ec1b384ddb34e5e50e858b2000e66bb3e655d" translate="yes" xml:space="preserve">
          <source>Flushes the event file to disk.</source>
          <target state="translated">Промывает файл события на диск.</target>
        </trans-unit>
        <trans-unit id="9b7edfcf83a187737117b2f47b6141554f630be7" translate="yes" xml:space="preserve">
          <source>Folds in data to an RNG seed to form a new RNG seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15713d62ed5ca4009b476df4c237ce2bc0ad0830" translate="yes" xml:space="preserve">
          <source>Following explains differences between the expected SparseTensors: For example if dense form of your sparse data has shape &lt;code&gt;[3, 5]&lt;/code&gt; and values:</source>
          <target state="translated">Ниже объясняются различия между ожидаемыми SparseTensors: Например, если плотная форма ваших разреженных данных имеет форму &lt;code&gt;[3, 5]&lt;/code&gt; и значения:</target>
        </trans-unit>
        <trans-unit id="1f587840359f89bcceb77644a681ee1053752a4d" translate="yes" xml:space="preserve">
          <source>Following standard Python indexing rules, a negative &lt;code&gt;axis&lt;/code&gt; counts from the end so &lt;code&gt;axis=-1&lt;/code&gt; adds an inner most dimension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4d707a678724dde2fddb59f45c1e15e1429fb9" translate="yes" xml:space="preserve">
          <source>Following standard python indexing rules, a negative &lt;code&gt;axis&lt;/code&gt; counts from the end so &lt;code&gt;axis=-1&lt;/code&gt; adds an inner most dimension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="4fd9985785e46b3b8d2eb080ecf31ffb84a61f11" translate="yes" xml:space="preserve">
          <source>For &amp;gt;0D tensors, truthiness is determined by looking at the number of elements. If has zero elements, then the result is false. Otherwise the result is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f9a841a7e0cc5b022e6318bea78b55a9efc104" translate="yes" xml:space="preserve">
          <source>For 'channels_last' data_format, the 2nd, 3rd and 4th dimension will be padded. For 'channels_first' data_format, the 3rd, 4th and 5th dimension will be padded.</source>
          <target state="translated">Для 'channel_last' data_format будет добавлено 2-е,3-е и 4-е измерение.Для переменной 'channels_first' data_format будет добавлено 3-е,4-е и 5-е измерение.</target>
        </trans-unit>
        <trans-unit id="4d447d9221f45cdb582dda20329208318ce162fc" translate="yes" xml:space="preserve">
          <source>For 0 &amp;lt;= i &amp;lt; len(spatial_dims), we assign:</source>
          <target state="translated">Для 0 &amp;lt;= i &amp;lt;len (space_dims) мы назначаем:</target>
        </trans-unit>
        <trans-unit id="146f00a85b68b92b896f97b975828e18300e6475" translate="yes" xml:space="preserve">
          <source>For 0-D (scalar) &lt;code&gt;indices&lt;/code&gt;:</source>
          <target state="translated">Для 0-D (скалярных) &lt;code&gt;indices&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="547112f2822cdd1e4adf3817f29d09a381834041" translate="yes" xml:space="preserve">
          <source>For 0D tensors, truthiness is determined by comparing against a &quot;zero&quot; value. For numerical types it is the obvious zero. For strings it is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93086c1250897fa853eb236163fc696ad9b7ad7a" translate="yes" xml:space="preserve">
          <source>For 1-D (vector) &lt;code&gt;indices&lt;/code&gt; with &lt;code&gt;batch_dims=0&lt;/code&gt;:</source>
          <target state="translated">Для &lt;code&gt;batch_dims=0&lt;/code&gt; (векторных) &lt;code&gt;indices&lt;/code&gt; с batch_dims = 0 :</target>
        </trans-unit>
        <trans-unit id="0a015181e096f8a1581f3a9641d414e5785efcf9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;1+1j&lt;/code&gt; the value would be computed as: \(e^1{\\cos(1)+i\\sin(1)} = 2.7182817 \\times (0.5403023+0.84147096j)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defba424886a691f2ba7bcc4056171fb0d0e0d47" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SparseTensor&lt;/code&gt;s, the first (batch) column of the indices matrix is removed (the indices matrix is a column vector), the values vector is unchanged, and the first (&lt;code&gt;batch_size&lt;/code&gt;) entry of the shape vector is removed (it is now a single element vector).</source>
          <target state="translated">Для &lt;code&gt;SparseTensor&lt;/code&gt; s первый (пакетный) столбец матрицы индексов удаляется (матрица индексов является вектором-столбцом), вектор значений не изменяется, а первая запись ( &lt;code&gt;batch_size&lt;/code&gt; ) вектора формы удаляется (теперь это одноэлементный вектор).</target>
        </trans-unit>
        <trans-unit id="44ae4bb96a98281ba7a5f41018a3c0cf10c4dea5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.EVAL&lt;/code&gt;: required field is &lt;code&gt;loss&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;mode == ModeKeys.EVAL&lt;/code&gt; : обязательное поле - &lt;code&gt;loss&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa798daa39c957c071f1ef2d8ef9c584caee3af3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.PREDICT&lt;/code&gt;: required fields are &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;mode == ModeKeys.PREDICT&lt;/code&gt; : обязательные поля являются &lt;code&gt;predictions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c1da15aacc237948a45719180b4b1f05786246a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;mode == ModeKeys.TRAIN&lt;/code&gt;: required fields are &lt;code&gt;loss&lt;/code&gt; and &lt;code&gt;train_op&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;mode == ModeKeys.TRAIN&lt;/code&gt; : обязательные поля: &lt;code&gt;loss&lt;/code&gt; и &lt;code&gt;train_op&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f68e1644d616fa9efc4179ea412ad0959f6e10" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;nesterov=True&lt;/code&gt;, See &lt;a href=&quot;http://jmlr.org/proceedings/papers/v28/sutskever13.pdf&quot;&gt;Sutskever et al., 2013&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bd7f5eecabe99afa580fb13d864a7f7973624c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;x&lt;/code&gt; with more dimensions, independently normalizes each 1-D slice along dimension &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;x&lt;/code&gt; с большим количеством измерений независимо нормализует каждый одномерный срез по &lt;code&gt;axis&lt;/code&gt; измерений .</target>
        </trans-unit>
        <trans-unit id="43544e8b815a7d32d165c045ffe8994b597cc573" translate="yes" xml:space="preserve">
          <source>For AMSGrad see &lt;a href=&quot;https://openreview.net/pdf?id=ryQu7f-RZ&quot;&gt;On The Convergence Of Adam And Beyond. Reddi et al., 5-8&lt;/a&gt;.</source>
          <target state="translated">Относительно AMSGrad см. &lt;a href=&quot;https://openreview.net/pdf?id=ryQu7f-RZ&quot;&gt;&amp;laquo;Конвергенция Адама и не только&amp;raquo;. Редди и др., 5-8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13ebc2a0e8c090e78de3fad9e601fded772c3334" translate="yes" xml:space="preserve">
          <source>For DNN model, &lt;code&gt;indicator_column&lt;/code&gt; can be used to wrap any &lt;code&gt;categorical_column_*&lt;/code&gt; (e.g., to feed to DNN). Consider to Use &lt;code&gt;embedding_column&lt;/code&gt; if the number of buckets/unique(values) are large.</source>
          <target state="translated">Для модели DNN &lt;code&gt;indicator_column&lt;/code&gt; может использоваться для обертывания любого &lt;code&gt;categorical_column_*&lt;/code&gt; (например, для передачи в DNN). Рассмотрите возможность использования &lt;code&gt;embedding_column&lt;/code&gt; , если количество сегментов / уникальных (значений) велико.</target>
        </trans-unit>
        <trans-unit id="358d84aa8148063b462186c221ef88a0bda8ec99" translate="yes" xml:space="preserve">
          <source>For Example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="698c0c83d084957c23756fca89030c92b5e65b9c" translate="yes" xml:space="preserve">
          <source>For Gaussian and Laplacian kernels, this corresponds to a scaling factor of the corresponding kernel approximated by the layer (see concrete definitions above). When provided, it should be a positive float. If None, a default value is used: if the kernel initializer is set to &quot;gaussian&quot;, &lt;code&gt;scale&lt;/code&gt; defaults to &lt;code&gt;sqrt(input_dim / 2)&lt;/code&gt;, otherwise, it defaults to 1.0. Both the approximation error of the kernel and the classification quality are sensitive to this parameter. If &lt;code&gt;trainable&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, this parameter is learned end-to-end during training and the provided value serves as the initial value. &lt;strong&gt;Note:&lt;/strong&gt; When features from this layer are fed to a linear model, by making &lt;code&gt;scale&lt;/code&gt; trainable, the resulting optimization problem is no longer convex (even if the loss function used by the linear model is convex).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12448879835e54272469ca384e2db601805a9b6d" translate="yes" xml:space="preserve">
          <source>For NVIDIA GPUs with Tensor cores, as a general performance guide, dimensions (such as batch size, input size, output size, and channel counts) should be powers of two if under 256, or otherwise divisible by 8 if above 256. For more information, check out the &lt;a href=&quot;https://docs.nvidia.com/deeplearning/sdk/dl-performance-guide/index.html&quot;&gt;NVIDIA Deep Learning Performance Guide&lt;/a&gt;.</source>
          <target state="translated">Для графических процессоров NVIDIA с ядрами Tensor, как общее руководство по производительности, размеры (такие как размер пакета, размер ввода, размер вывода и количество каналов) должны быть степенями двойки, если меньше 256, или делиться на 8, если больше 256. Подробнее Для получения дополнительной информации ознакомьтесь с &lt;a href=&quot;https://docs.nvidia.com/deeplearning/sdk/dl-performance-guide/index.html&quot;&gt;Руководством по производительности NVIDIA Deep Learning&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c57b61b2025e89cc1b96b3f8c44dc568631574" translate="yes" xml:space="preserve">
          <source>For RaggedTensors with multiple ragged dimensions, the &lt;code&gt;row_splits&lt;/code&gt; for all nested &lt;code&gt;RaggedTensor&lt;/code&gt; objects are cast to the given dtype.</source>
          <target state="translated">Для RaggedTensor с несколькими рваными измерениями &lt;code&gt;row_splits&lt;/code&gt; для всех вложенных объектов &lt;code&gt;RaggedTensor&lt;/code&gt; приводится к заданному типу dtype.</target>
        </trans-unit>
        <trans-unit id="680d2331fce0b7a83d542b4d1de0958158b6ff5b" translate="yes" xml:space="preserve">
          <source>For Tensor arguments, &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; instantiates a separate graph for every unique set of input shapes and datatypes. The example below creates two separate graphs, each specialized to a different shape:</source>
          <target state="translated">Для аргументов Tensor &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; создает отдельный граф для каждого уникального набора входных форм и типов данных. В приведенном ниже примере создаются два отдельных графика, каждый из которых имеет свою форму:</target>
        </trans-unit>
        <trans-unit id="affb3fda9deede559b712893d926e23f939195d8" translate="yes" xml:space="preserve">
          <source>For Unicode, see the &lt;a href=&quot;working%20with%20unicode%20text&quot;&gt;https://www.tensorflow.org/tutorials/representation/unicode&lt;/a&gt; tutorial.</source>
          <target state="translated">Для Unicode см. &lt;a href=&quot;working%20with%20unicode%20text&quot;&gt;Руководство https://www.tensorflow.org/tutorials/presentation/unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="438450c314656d91b7eb58ac47d34990ac07e0e9" translate="yes" xml:space="preserve">
          <source>For Wide (aka linear) model, &lt;code&gt;indicator_column&lt;/code&gt; is the internal representation for categorical column when passing categorical column directly (as any element in feature_columns) to &lt;code&gt;linear_model&lt;/code&gt;. See &lt;code&gt;linear_model&lt;/code&gt; for details.</source>
          <target state="translated">Для широкой (также известной как линейная) модели &lt;code&gt;indicator_column&lt;/code&gt; является внутренним представлением категориального столбца при передаче категориального столбца напрямую (как любой элемент в feature_columns) в &lt;code&gt;linear_model&lt;/code&gt; . Подробнее см. &lt;code&gt;linear_model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1809fcc8df392d7ea85c0ac28ccfcbd2a81ee6c" translate="yes" xml:space="preserve">
          <source>For a 1-D tensor with &lt;code&gt;axis = 0&lt;/code&gt;, computes</source>
          <target state="translated">Для одномерного тензора с &lt;code&gt;axis = 0&lt;/code&gt; вычисляет</target>
        </trans-unit>
        <trans-unit id="eb040fc5b017a63cdc59b792f1488c8b7f490212" translate="yes" xml:space="preserve">
          <source>For a 1D tensor, &lt;code&gt;tf.gather(values, tf.argsort(values))&lt;/code&gt; is equivalent to &lt;a href=&quot;sort&quot;&gt;&lt;code&gt;tf.sort(values)&lt;/code&gt;&lt;/a&gt;. For higher dimensions, the output has the same shape as &lt;code&gt;values&lt;/code&gt;, but along the given axis, values represent the index of the sorted element in that slice of the tensor at the given position.</source>
          <target state="translated">Для одномерного тензора &lt;code&gt;tf.gather(values, tf.argsort(values))&lt;/code&gt; эквивалентен &lt;a href=&quot;sort&quot;&gt; &lt;code&gt;tf.sort(values)&lt;/code&gt; &lt;/a&gt; . Для более высоких измерений выходные данные имеют ту же форму, что и &lt;code&gt;values&lt;/code&gt; , но вдоль данной оси значения представляют индекс отсортированного элемента в этом срезе тензора в данной позиции.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
