<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="119ae71c8ad80c8aece0c06b5fe1235443a12697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/greater_equal&quot;&gt;&lt;code&gt;greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;gt;= y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/greater_equal&quot;&gt; &lt;code&gt;greater_equal(...)&lt;/code&gt; &lt;/a&gt; : поэлементно возвращает истинное значение (x&amp;gt; = y).</target>
        </trans-unit>
        <trans-unit id="789c23704950ee4f6783e3a866d33ecb68c69f1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/greater_equal&quot;&gt;&lt;code&gt;tf.math.greater_equal&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/greater_equal&quot;&gt; &lt;code&gt;tf.math.greater_equal&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d1786102640d0e458502af16e8078d767a0eae62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/igamma&quot;&gt;&lt;code&gt;igamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the lower regularized incomplete Gamma function &lt;code&gt;P(a, x)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../math/igamma&quot;&gt; &lt;code&gt;igamma(...)&lt;/code&gt; &lt;/a&gt; : вычислить нижнюю регуляризованную неполную гамма-функцию &lt;code&gt;P(a, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b42f27321649c8702874ada5a7dcd79bd5cf492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/igammac&quot;&gt;&lt;code&gt;igammac(...)&lt;/code&gt;&lt;/a&gt;: Compute the upper regularized incomplete Gamma function &lt;code&gt;Q(a, x)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../math/igammac&quot;&gt; &lt;code&gt;igammac(...)&lt;/code&gt; &lt;/a&gt; : вычислить верхнюю регуляризованную неполную гамма-функцию &lt;code&gt;Q(a, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df38fb3b88d7be48ce3acddb4fc604d8b613c51d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/imag&quot;&gt;&lt;code&gt;imag(...)&lt;/code&gt;&lt;/a&gt;: Returns the imaginary part of a complex (or real) tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/imag&quot;&gt; &lt;code&gt;imag(...)&lt;/code&gt; &lt;/a&gt; : возвращает мнимую часть комплексного (или действительного) тензора.</target>
        </trans-unit>
        <trans-unit id="8b27f3003dd24f52e217ea6bd4f76c3f59680340" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/imag&quot;&gt;&lt;code&gt;tf.math.imag&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/imag&quot;&gt; &lt;code&gt;tf.math.imag&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; ввод&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0825e4fbff09a8b11eda2e70d66ed1d38e3e841d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/in_top_k&quot;&gt;&lt;code&gt;in_top_k(...)&lt;/code&gt;&lt;/a&gt;: Says whether the targets are in the top &lt;code&gt;K&lt;/code&gt; predictions.</source>
          <target state="translated">&lt;a href=&quot;../../math/in_top_k&quot;&gt; &lt;code&gt;in_top_k(...)&lt;/code&gt; &lt;/a&gt; : указывает, находятся ли цели в &lt;code&gt;K&lt;/code&gt; самых популярныхпрогнозов.</target>
        </trans-unit>
        <trans-unit id="95d7e54ba86a0c59a7c06d636119a0bbcaf39cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/invert_permutation&quot;&gt;&lt;code&gt;invert_permutation(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse permutation of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/invert_permutation&quot;&gt; &lt;code&gt;invert_permutation(...)&lt;/code&gt; &lt;/a&gt; : вычисляет обратную перестановку тензора.</target>
        </trans-unit>
        <trans-unit id="df7c86f02ac61353d1425ebd6612b95d87e34d49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_finite&quot;&gt;&lt;code&gt;is_finite(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are finite.</source>
          <target state="translated">&lt;a href=&quot;../../math/is_finite&quot;&gt; &lt;code&gt;is_finite(...)&lt;/code&gt; &lt;/a&gt; : возвращает конечные элементы x.</target>
        </trans-unit>
        <trans-unit id="7e5b3a1a459822d1888fef53ad36a466e3eb83c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_finite&quot;&gt;&lt;code&gt;tf.math.is_finite&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/is_finite&quot;&gt; &lt;code&gt;tf.math.is_finite&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5cdb701fe33d864bfcb227bd87e19acc74c86cf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_inf&quot;&gt;&lt;code&gt;is_inf(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are Inf.</source>
          <target state="translated">&lt;a href=&quot;../../math/is_inf&quot;&gt; &lt;code&gt;is_inf(...)&lt;/code&gt; &lt;/a&gt; : возвращает, какие элементы x являются Inf.</target>
        </trans-unit>
        <trans-unit id="3b49df2405cf6199f1e3ed8453703b8b0a8f93f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_inf&quot;&gt;&lt;code&gt;tf.math.is_inf&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/is_inf&quot;&gt; &lt;code&gt;tf.math.is_inf&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4f9d01a88bb76135aa48114faf84544e8c852783" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_nan&quot;&gt;&lt;code&gt;is_nan(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are NaN.</source>
          <target state="translated">&lt;a href=&quot;../../math/is_nan&quot;&gt; &lt;code&gt;is_nan(...)&lt;/code&gt; &lt;/a&gt; : возвращает, какие элементы x являются NaN.</target>
        </trans-unit>
        <trans-unit id="74fabd5049a6bb3a6290cd4e8cab2766055882e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_nan&quot;&gt;&lt;code&gt;tf.math.is_nan&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/is_nan&quot;&gt; &lt;code&gt;tf.math.is_nan&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ff3e18a2819ff80b725fc4471637365e5f2087e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_non_decreasing&quot;&gt;&lt;code&gt;is_non_decreasing(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is non-decreasing.</source>
          <target state="translated">&lt;a href=&quot;../../math/is_non_decreasing&quot;&gt; &lt;code&gt;is_non_decreasing(...)&lt;/code&gt; &lt;/a&gt; : возвращает &lt;code&gt;True&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; не убывает.</target>
        </trans-unit>
        <trans-unit id="a4cd6e625bea769fdafbada9cf4de64b66729bac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/is_strictly_increasing&quot;&gt;&lt;code&gt;is_strictly_increasing(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is strictly increasing.</source>
          <target state="translated">&lt;a href=&quot;../../math/is_strictly_increasing&quot;&gt; &lt;code&gt;is_strictly_increasing(...)&lt;/code&gt; &lt;/a&gt; : возвращает &lt;code&gt;True&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; строго увеличивается.</target>
        </trans-unit>
        <trans-unit id="bdfbf8f711a2fb4527c8f0baf6969ea23a903e3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/l2_normalize&quot;&gt;&lt;code&gt;l2_normalize(...)&lt;/code&gt;&lt;/a&gt;: Normalizes along dimension &lt;code&gt;axis&lt;/code&gt; using an L2 norm.</source>
          <target state="translated">&lt;a href=&quot;../../math/l2_normalize&quot;&gt; &lt;code&gt;l2_normalize(...)&lt;/code&gt; &lt;/a&gt; : нормализуется по &lt;code&gt;axis&lt;/code&gt; размеровс использованием нормы L2.</target>
        </trans-unit>
        <trans-unit id="abe7591aa6a0b7af6382bcd4c49159e282e06d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/lbeta&quot;&gt;&lt;code&gt;lbeta(...)&lt;/code&gt;&lt;/a&gt;: Computes \(ln(|Beta(x)|)\), reducing along the last dimension.</source>
          <target state="translated">&lt;a href=&quot;../../math/lbeta&quot;&gt; &lt;code&gt;lbeta(...)&lt;/code&gt; &lt;/a&gt; : вычисляет \ (ln (| Beta (x) |) \), уменьшая по последнему измерению.</target>
        </trans-unit>
        <trans-unit id="f59d7b3a1e739e2e0fd99148506e8491d432ddf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/less&quot;&gt;&lt;code&gt;less(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt; y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/less&quot;&gt; &lt;code&gt;less(...)&lt;/code&gt; &lt;/a&gt; : поэлементно возвращает истинное значение (x &amp;lt;y).</target>
        </trans-unit>
        <trans-unit id="95a71093bd1f3dabe403e3ccbebf3af5f72bf971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/less&quot;&gt;&lt;code&gt;tf.math.less&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/less&quot;&gt; &lt;code&gt;tf.math.less&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f88bb8c6ed1694e4711eb226e144bb0610a79549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/less_equal&quot;&gt;&lt;code&gt;less_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt;= y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/less_equal&quot;&gt; &lt;code&gt;less_equal(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает истинное значение (x &amp;lt;= y).</target>
        </trans-unit>
        <trans-unit id="ae27b794504440e3bd5867c009dc21d8fe375894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/less_equal&quot;&gt;&lt;code&gt;tf.math.less_equal&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/less_equal&quot;&gt; &lt;code&gt;tf.math.less_equal&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1f8e633161c165bd5eade85740e35a431ecb7f6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/lgamma&quot;&gt;&lt;code&gt;lgamma(...)&lt;/code&gt;&lt;/a&gt;: Computes the log of the absolute value of &lt;code&gt;Gamma(x)&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/lgamma&quot;&gt; &lt;code&gt;lgamma(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет журнал абсолютного значения &lt;code&gt;Gamma(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="148c2fde91b11b2c3956ff5c1861979490fe17ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/lgamma&quot;&gt;&lt;code&gt;tf.math.lgamma&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/lgamma&quot;&gt; &lt;code&gt;tf.math.lgamma&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="de6ad89350561952889bfe2e6994ed5b41ab0a55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log&quot;&gt;&lt;code&gt;log(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/log&quot;&gt; &lt;code&gt;log(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет натуральный логарифм x.</target>
        </trans-unit>
        <trans-unit id="b8e15506a0aaa078d9b302f1d12fdb18b4ca49f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log&quot;&gt;&lt;code&gt;tf.math.log&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/log&quot;&gt; &lt;code&gt;tf.math.log&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="391d59919ac16d437065bab2d6d115b986b2144b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log1p&quot;&gt;&lt;code&gt;log1p(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of (1 + x) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/log1p&quot;&gt; &lt;code&gt;log1p(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет натуральный логарифм (1 + x).</target>
        </trans-unit>
        <trans-unit id="e0c4c5982520fee1cdc9b78eeefa1cb235ec0337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log1p&quot;&gt;&lt;code&gt;tf.math.log1p&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/log1p&quot;&gt; &lt;code&gt;tf.math.log1p&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bbeb495bf7877ca3d616437ec05b1680dcf9f806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log_sigmoid&quot;&gt;&lt;code&gt;log_sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Computes log sigmoid of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/log_sigmoid&quot;&gt; &lt;code&gt;log_sigmoid(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет сигмоид журнала &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6468d8259e332114e0c4040009dec00391733a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/log_sigmoid&quot;&gt;&lt;code&gt;tf.math.log_sigmoid&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/log_sigmoid&quot;&gt; &lt;code&gt;tf.math.log_sigmoid&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fd1225bf4815e5f655e6bfbc46ce55a91c97307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_and&quot;&gt;&lt;code&gt;logical_and(...)&lt;/code&gt;&lt;/a&gt;: Logical AND function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4550ebec6f444c395c6668dc3fc3aa62a62a26af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_and&quot;&gt;&lt;code&gt;logical_and(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x AND y element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_and&quot;&gt; &lt;code&gt;logical_and(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает истинное значение x И y.</target>
        </trans-unit>
        <trans-unit id="024f456592f39f6c5c0d5f6d0b4212b5dc91aefd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_and&quot;&gt;&lt;code&gt;tf.math.logical_and&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_and&quot;&gt; &lt;code&gt;tf.math.logical_and&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="539d28ad80a9554fc1f540e7d2a01aa84ded53a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_not&quot;&gt;&lt;code&gt;logical_not(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of &lt;code&gt;NOT x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db1a131fdedf4b06cba8ff0d727e6cde543f13d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_not&quot;&gt;&lt;code&gt;logical_not(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of NOT x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_not&quot;&gt; &lt;code&gt;logical_not(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает истинное значение НЕ x.</target>
        </trans-unit>
        <trans-unit id="8b14c61270d50e49124905a2a79fa10745207c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_not&quot;&gt;&lt;code&gt;tf.math.logical_not&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_not&quot;&gt; &lt;code&gt;tf.math.logical_not&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2810a4ee78e7b12899d7deb3e2557159f00f508b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_or&quot;&gt;&lt;code&gt;logical_or(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x OR y element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_or&quot;&gt; &lt;code&gt;logical_or(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает истинное значение x ИЛИ y.</target>
        </trans-unit>
        <trans-unit id="c93d7517bd8937f2f85809598bdd79bf7a992f0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_or&quot;&gt;&lt;code&gt;tf.math.logical_or&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_or&quot;&gt; &lt;code&gt;tf.math.logical_or&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f44394bce4d8e0d7ee300fada0c3d94b9187ddd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_xor&quot;&gt;&lt;code&gt;logical_xor(...)&lt;/code&gt;&lt;/a&gt;: Logical XOR function.</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_xor&quot;&gt; &lt;code&gt;logical_xor(...)&lt;/code&gt; &lt;/a&gt; : логическая функция XOR.</target>
        </trans-unit>
        <trans-unit id="78aae2f50e4beb9955544701a5bc57f3a1dd8ead" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/logical_xor&quot;&gt;&lt;code&gt;tf.math.logical_xor&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;'LogicalXor'&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/logical_xor&quot;&gt; &lt;code&gt;tf.math.logical_xor&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;'LogicalXor'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e4f8bd098d3ea918a0fc8b0779dd6ae7db7a8d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/maximum&quot;&gt;&lt;code&gt;maximum(...)&lt;/code&gt;&lt;/a&gt;: Returns the max of x and y (i.e. x &amp;gt; y ? x : y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/maximum&quot;&gt; &lt;code&gt;maximum(...)&lt;/code&gt; &lt;/a&gt; : возвращает максимальные значения x и y (т.е. x&amp;gt; y? x: y) поэлементно.</target>
        </trans-unit>
        <trans-unit id="338c1c17bbc1826b3550ea8863ff30dfdccc2c5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/maximum&quot;&gt;&lt;code&gt;tf.math.maximum&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/maximum&quot;&gt; &lt;code&gt;tf.math.maximum&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dfea6c3fa2c1d9eaff85c676ee0bc91edf818915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/minimum&quot;&gt;&lt;code&gt;minimum(...)&lt;/code&gt;&lt;/a&gt;: Returns the min of x and y (i.e. x &amp;lt; y ? x : y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/minimum&quot;&gt; &lt;code&gt;minimum(...)&lt;/code&gt; &lt;/a&gt; : возвращает минимум x и y (т.е. x &amp;lt;y? x: y) поэлементно.</target>
        </trans-unit>
        <trans-unit id="371a34b34922dc34abc9dba92cf986bd036025ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/minimum&quot;&gt;&lt;code&gt;tf.math.minimum&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/minimum&quot;&gt; &lt;code&gt;tf.math.minimum&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="54b8b863ac2027e39d5bfcab8b4bd7b9369b1bb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/multiply&quot;&gt;&lt;code&gt;multiply(...)&lt;/code&gt;&lt;/a&gt;: Returns an element-wise x * y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baafe16eb75316a048baf320cd3a1be206e2e63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/multiply&quot;&gt;&lt;code&gt;multiply(...)&lt;/code&gt;&lt;/a&gt;: Returns x * y element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/multiply&quot;&gt; &lt;code&gt;multiply(...)&lt;/code&gt; &lt;/a&gt; : возвращает x * y поэлементно.</target>
        </trans-unit>
        <trans-unit id="80cbee75bcfc902bdb190baf3e0c77f477a04fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/multiply&quot;&gt;&lt;code&gt;tf.math.multiply&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/multiply&quot;&gt; &lt;code&gt;tf.math.multiply&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c192176b9ff0522cbef0bce4eb32f3d153e7b985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/multiply_no_nan&quot;&gt;&lt;code&gt;multiply_no_nan(...)&lt;/code&gt;&lt;/a&gt;: Computes the product of x and y and returns 0 if the y is zero, even if x is NaN or infinite.</source>
          <target state="translated">&lt;a href=&quot;../../math/multiply_no_nan&quot;&gt; &lt;code&gt;multiply_no_nan(...)&lt;/code&gt; &lt;/a&gt; : вычисляет произведение x и y и возвращает 0, если y равен нулю, даже если x равен NaN или бесконечен.</target>
        </trans-unit>
        <trans-unit id="f26f897acca2c44f36e60d93df6c7746c0647d13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/ndtri&quot;&gt;&lt;code&gt;ndtri(...)&lt;/code&gt;&lt;/a&gt;: Compute quantile of Standard Normal.</source>
          <target state="translated">&lt;a href=&quot;../../math/ndtri&quot;&gt; &lt;code&gt;ndtri(...)&lt;/code&gt; &lt;/a&gt; : вычислить квантиль стандартной нормы.</target>
        </trans-unit>
        <trans-unit id="8124454357f106efbb1f501530d4a718bdcbe627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/ndtri&quot;&gt;&lt;code&gt;tf.math.ndtri&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/ndtri&quot;&gt; &lt;code&gt;tf.math.ndtri&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a3720102a8fc69031ff7a37e327e2b0d56f04a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/negative&quot;&gt;&lt;code&gt;negative(...)&lt;/code&gt;&lt;/a&gt;: Computes numerical negative value element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/negative&quot;&gt; &lt;code&gt;negative(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет отрицательное числовое значение.</target>
        </trans-unit>
        <trans-unit id="8fbccf27f82a4304f3ad71a37b840690bd8328b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/negative&quot;&gt;&lt;code&gt;tf.math.negative&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/negative&quot;&gt; &lt;code&gt;tf.math.negative&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5bf424de4f12586a2af58601561643f006c4870b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/nextafter&quot;&gt;&lt;code&gt;nextafter(...)&lt;/code&gt;&lt;/a&gt;: Returns the next representable value of &lt;code&gt;x1&lt;/code&gt; in the direction of &lt;code&gt;x2&lt;/code&gt;, element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/nextafter&quot;&gt; &lt;code&gt;nextafter(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает следующее представимое значение &lt;code&gt;x1&lt;/code&gt; в направлении &lt;code&gt;x2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4163c3c704686743ec328ba96df37a823245c868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/not_equal&quot;&gt;&lt;code&gt;not_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x != y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/not_equal&quot;&gt; &lt;code&gt;not_equal(...)&lt;/code&gt; &lt;/a&gt; : поэлементно возвращает истинное значение (x! = y).</target>
        </trans-unit>
        <trans-unit id="68195251fce50dfd0f06e93216067274ef84ac35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/not_equal&quot;&gt;&lt;code&gt;tf.math.not_equal&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/not_equal&quot;&gt; &lt;code&gt;tf.math.not_equal&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ac720e16ab288af6f45d9686fefc071ffc29e8be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/polygamma&quot;&gt;&lt;code&gt;polygamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the polygamma function \(\psi^{(n)}(x)\).</source>
          <target state="translated">&lt;a href=&quot;../../math/polygamma&quot;&gt; &lt;code&gt;polygamma(...)&lt;/code&gt; &lt;/a&gt; : вычислить функцию polygamma \ (\ psi ^ {(n)} (x) \).</target>
        </trans-unit>
        <trans-unit id="8931d7e8a84000744ff2036f3b0238f50cc11a57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/polyval&quot;&gt;&lt;code&gt;polyval(...)&lt;/code&gt;&lt;/a&gt;: Computes the elementwise value of a polynomial.</source>
          <target state="translated">&lt;a href=&quot;../../math/polyval&quot;&gt; &lt;code&gt;polyval(...)&lt;/code&gt; &lt;/a&gt; : вычисляет поэлементное значение полинома.</target>
        </trans-unit>
        <trans-unit id="5d45bb7d3b0a990dd8cedd8fabb45b30c8110e74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/pow&quot;&gt;&lt;code&gt;pow(...)&lt;/code&gt;&lt;/a&gt;: Computes the power of one value to another.</source>
          <target state="translated">&lt;a href=&quot;../../math/pow&quot;&gt; &lt;code&gt;pow(...)&lt;/code&gt; &lt;/a&gt; : вычисляет степень отношения одного значения к другому.</target>
        </trans-unit>
        <trans-unit id="22a4b4d782dbe2bfd5afad9ad7bd0aa7c4f7c54b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/pow&quot;&gt;&lt;code&gt;tf.math.pow&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/pow&quot;&gt; &lt;code&gt;tf.math.pow&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="83b8a7c00cb4702bd0f9b06d1c5c73d1548d0283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/real&quot;&gt;&lt;code&gt;real(...)&lt;/code&gt;&lt;/a&gt;: Returns the real part of a complex (or real) tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/real&quot;&gt; &lt;code&gt;real(...)&lt;/code&gt; &lt;/a&gt; : возвращает действительную часть комплексного (или действительного) тензора.</target>
        </trans-unit>
        <trans-unit id="9321155d0417f3d3cab08a0d76ae6ffbd52fedba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/real&quot;&gt;&lt;code&gt;tf.math.real&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/real&quot;&gt; &lt;code&gt;tf.math.real&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; ввод&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d82f163c22eb5353233f12e0f66df5b342951786" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reciprocal&quot;&gt;&lt;code&gt;reciprocal(...)&lt;/code&gt;&lt;/a&gt;: Computes the reciprocal of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/reciprocal&quot;&gt; &lt;code&gt;reciprocal(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет обратную величину x.</target>
        </trans-unit>
        <trans-unit id="45bd7da91bb8d6c8c8af24e84d77d98ca9e14358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reciprocal&quot;&gt;&lt;code&gt;tf.math.reciprocal&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reciprocal&quot;&gt; &lt;code&gt;tf.math.reciprocal&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a105d7925aa40ca84798741593c558006d88f204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reciprocal_no_nan&quot;&gt;&lt;code&gt;reciprocal_no_nan(...)&lt;/code&gt;&lt;/a&gt;: Performs a safe reciprocal operation, element wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/reciprocal_no_nan&quot;&gt; &lt;code&gt;reciprocal_no_nan(...)&lt;/code&gt; &lt;/a&gt; : выполняет безопасную обратную операцию поэлементно.</target>
        </trans-unit>
        <trans-unit id="726a39b9ad44e696c27b662f27b4c3a8748ee105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_all&quot;&gt;&lt;code&gt;tf.math.reduce_all&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79112b5f86a632de7654c300b6b34f2cefe6dbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_any&quot;&gt;&lt;code&gt;reduce_any(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical or&quot; of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_any&quot;&gt; &lt;code&gt;reduce_any(...)&lt;/code&gt; &lt;/a&gt; : вычисляет &amp;laquo;логическое ИЛИ &amp;raquo; элементов по измерениям тензора.</target>
        </trans-unit>
        <trans-unit id="af0a11ac4bac4efe2b01161e78cc240a2b68d09b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_any&quot;&gt;&lt;code&gt;tf.math.reduce_any&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_any&quot;&gt; &lt;code&gt;tf.math.reduce_any&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4c5fb90247cfb4ea18f53ca2756a1a77b9e541be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_euclidean_norm&quot;&gt;&lt;code&gt;reduce_euclidean_norm(...)&lt;/code&gt;&lt;/a&gt;: Computes the Euclidean norm of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_euclidean_norm&quot;&gt; &lt;code&gt;reduce_euclidean_norm(...)&lt;/code&gt; &lt;/a&gt; : вычисляет евклидову норму элементов по измерениям тензора.</target>
        </trans-unit>
        <trans-unit id="8277db64485a321d816ec50661f851e9db4ab48d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_logsumexp&quot;&gt;&lt;code&gt;reduce_logsumexp(...)&lt;/code&gt;&lt;/a&gt;: Computes log(sum(exp(elements across dimensions of a tensor))).</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_logsumexp&quot;&gt; &lt;code&gt;reduce_logsumexp(...)&lt;/code&gt; &lt;/a&gt; : вычисляет log (sum (exp (элементы по измерениям тензора))).</target>
        </trans-unit>
        <trans-unit id="380412a540815a9d7b6952059dd2f5df1f81e729" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_max&quot;&gt;&lt;code&gt;reduce_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_max&quot;&gt; &lt;code&gt;reduce_max(...)&lt;/code&gt; &lt;/a&gt; : вычисляет максимум элементов по размеру тензора.</target>
        </trans-unit>
        <trans-unit id="7d08671ea200caec613b8a1a5860a4955f088362" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_max&quot;&gt;&lt;code&gt;tf.math.reduce_max&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_max&quot;&gt; &lt;code&gt;tf.math.reduce_max&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c6e0a980599fda03cec9849f06559ff7a71be299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;reduce_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;reduce_mean(...)&lt;/code&gt; &lt;/a&gt; : вычисляет среднее значение элементов по размеру тензора.</target>
        </trans-unit>
        <trans-unit id="5c381bf91d984a461915c445e4af3ec417cd1383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_mean&quot;&gt;&lt;code&gt;tf.math.reduce_mean&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_mean&quot;&gt; &lt;code&gt;tf.math.reduce_mean&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="19884aa935268c7d5faac74781fe7bf06bca5102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_min&quot;&gt;&lt;code&gt;reduce_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_min&quot;&gt; &lt;code&gt;reduce_min(...)&lt;/code&gt; &lt;/a&gt; : вычисляет минимум элементов по размерам тензора.</target>
        </trans-unit>
        <trans-unit id="fa6665d476df35c357a6b01c2f3fa3bf199f0eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_min&quot;&gt;&lt;code&gt;tf.math.reduce_min&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_min&quot;&gt; &lt;code&gt;tf.math.reduce_min&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2e060d927993ce9d58b5dc45d8a745ea021c402b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_prod&quot;&gt;&lt;code&gt;reduce_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_prod&quot;&gt; &lt;code&gt;reduce_prod(...)&lt;/code&gt; &lt;/a&gt; : вычисляет произведение элементов по измерениям тензора.</target>
        </trans-unit>
        <trans-unit id="cac9113205dba4e1530ead2393d6e5846470c02a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_prod&quot;&gt;&lt;code&gt;tf.math.reduce_prod&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_prod&quot;&gt; &lt;code&gt;tf.math.reduce_prod&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e0d8385930c75f9d6050eafee743a8005f73e264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_std&quot;&gt;&lt;code&gt;reduce_std(...)&lt;/code&gt;&lt;/a&gt;: Computes the standard deviation of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_std&quot;&gt; &lt;code&gt;reduce_std(...)&lt;/code&gt; &lt;/a&gt; : вычисляет стандартное отклонение элементов по размерам тензора.</target>
        </trans-unit>
        <trans-unit id="e67800060c5ddcae4341cd2dfdfa8fbb8e9161dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_sum&quot;&gt;&lt;code&gt;reduce_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_sum&quot;&gt; &lt;code&gt;reduce_sum(...)&lt;/code&gt; &lt;/a&gt; : вычисляет сумму элементов по измерениям тензора.</target>
        </trans-unit>
        <trans-unit id="7c8cfcdcdc34e04617cba4b7e0576967bd547b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_sum&quot;&gt;&lt;code&gt;tf.math.reduce_sum&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_sum&quot;&gt; &lt;code&gt;tf.math.reduce_sum&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; input_tensor&lt;/strong&gt; , axis = &lt;code&gt;None&lt;/code&gt; , keepdims = &lt;code&gt;False&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="12b3854ac8ec35fb4fbe0d8838dea16b2552ffa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/reduce_variance&quot;&gt;&lt;code&gt;reduce_variance(...)&lt;/code&gt;&lt;/a&gt;: Computes the variance of elements across dimensions of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/reduce_variance&quot;&gt; &lt;code&gt;reduce_variance(...)&lt;/code&gt; &lt;/a&gt; : вычисляет дисперсию элементов по размерам тензора.</target>
        </trans-unit>
        <trans-unit id="07e9e10cc49bcd879ac35bce13b9e40f9c15ff6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/rint&quot;&gt;&lt;code&gt;rint(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise integer closest to x.</source>
          <target state="translated">&lt;a href=&quot;../../math/rint&quot;&gt; &lt;code&gt;rint(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно возвращает целое число, ближайшее к x.</target>
        </trans-unit>
        <trans-unit id="be8088a896333ddc8608182baeb6c2c8fef738dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/rint&quot;&gt;&lt;code&gt;tf.math.rint&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/rint&quot;&gt; &lt;code&gt;tf.math.rint&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="07c9780b1f0b90dd39b3601b8a87282b579a44e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/round&quot;&gt;&lt;code&gt;round(...)&lt;/code&gt;&lt;/a&gt;: Rounds the values of a tensor to the nearest integer, element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/round&quot;&gt; &lt;code&gt;round(...)&lt;/code&gt; &lt;/a&gt; : округляет значения тензора до ближайшего целого числа поэлементно.</target>
        </trans-unit>
        <trans-unit id="505d2d885a15b9d4f1c19490226bc82854a87a36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/round&quot;&gt;&lt;code&gt;tf.math.round&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/round&quot;&gt; &lt;code&gt;tf.math.round&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5f6a45f0c8b6eb65e77ef6601aafcb83e5df38cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/rsqrt&quot;&gt;&lt;code&gt;rsqrt(...)&lt;/code&gt;&lt;/a&gt;: Computes reciprocal of square root of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/rsqrt&quot;&gt; &lt;code&gt;rsqrt(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет величину, обратную квадратному корню из x.</target>
        </trans-unit>
        <trans-unit id="1895a99430fd59d48fd69de513f8c8e79821b1bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/rsqrt&quot;&gt;&lt;code&gt;tf.math.rsqrt&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/rsqrt&quot;&gt; &lt;code&gt;tf.math.rsqrt&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="499e119c7059116a251df188d3d51dcd62f3f21b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/scalar_mul&quot;&gt;&lt;code&gt;scalar_mul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies a scalar times a &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../../math/scalar_mul&quot;&gt; &lt;code&gt;scalar_mul(...)&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;IndexedSlices&lt;/code&gt; объект &lt;code&gt;Tensor&lt;/code&gt; или IndexedSlices .</target>
        </trans-unit>
        <trans-unit id="177bacc877e39a8e361aed0ff59c20701fa18f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/segment_max&quot;&gt;&lt;code&gt;segment_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_max&quot;&gt; &lt;code&gt;segment_max(...)&lt;/code&gt; &lt;/a&gt; : вычисляет максимум по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="d724ec37b6b6553bedef405383d4cc3a341451be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/segment_mean&quot;&gt;&lt;code&gt;segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_mean&quot;&gt; &lt;code&gt;segment_mean(...)&lt;/code&gt; &lt;/a&gt; : вычисляет среднее значение по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="e21123c1aa2b4ed70d38f2bbf61c677f852494aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/segment_min&quot;&gt;&lt;code&gt;segment_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_min&quot;&gt; &lt;code&gt;segment_min(...)&lt;/code&gt; &lt;/a&gt; : вычисляет минимум по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="485455c70d66db9b7df30c541f90f24d151ea49b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/segment_prod&quot;&gt;&lt;code&gt;segment_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_prod&quot;&gt; &lt;code&gt;segment_prod(...)&lt;/code&gt; &lt;/a&gt; : вычисляет произведение по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="7cbfe210fa0640a5d1f3f2cbf348810776b4051d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/segment_sum&quot;&gt;&lt;code&gt;segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/segment_sum&quot;&gt; &lt;code&gt;segment_sum(...)&lt;/code&gt; &lt;/a&gt; : вычисляет сумму по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="4168897a0f360eceb769406e022b2d34ca2e140c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sigmoid&quot;&gt;&lt;code&gt;sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Computes sigmoid of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/sigmoid&quot;&gt; &lt;code&gt;sigmoid(...)&lt;/code&gt; &lt;/a&gt; :поэлементновычисляет сигмоид &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a15eb6568ba183d772a7a50480d077117cbf3cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sign&quot;&gt;&lt;code&gt;sign(...)&lt;/code&gt;&lt;/a&gt;: Returns an element-wise indication of the sign of a number.</source>
          <target state="translated">&lt;a href=&quot;../../math/sign&quot;&gt; &lt;code&gt;sign(...)&lt;/code&gt; &lt;/a&gt; : возвращает поэлементное указание знака числа.</target>
        </trans-unit>
        <trans-unit id="c67f67f5a44c2111e34045cb905ade460753b8f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sign&quot;&gt;&lt;code&gt;tf.math.sign&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/sign&quot;&gt; &lt;code&gt;tf.math.sign&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4e98754b661020bc830e786859cf9f6f68f6d21b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sin&quot;&gt;&lt;code&gt;sin(...)&lt;/code&gt;&lt;/a&gt;: Computes sine of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/sin&quot;&gt; &lt;code&gt;sin(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет синус x.</target>
        </trans-unit>
        <trans-unit id="60fcecb8be7f7cd82e8c43dc255320dd95098c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sin&quot;&gt;&lt;code&gt;tf.math.sin&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/sin&quot;&gt; &lt;code&gt;tf.math.sin&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cfba6caef8e41bd39594a12c11181f8f91af0ffe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sinh&quot;&gt;&lt;code&gt;sinh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic sine of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/sinh&quot;&gt; &lt;code&gt;sinh(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет гиперболический синус x.</target>
        </trans-unit>
        <trans-unit id="4edc46141527af9a82279625a728fff7e78f6f89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sinh&quot;&gt;&lt;code&gt;tf.math.sinh&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/sinh&quot;&gt; &lt;code&gt;tf.math.sinh&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b9385b5d72650d311981cd24bb9b8705f4d827d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sobol_sample&quot;&gt;&lt;code&gt;sobol_sample(...)&lt;/code&gt;&lt;/a&gt;: Generates points from the Sobol sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9c38b6f5f8657f7f2dce868d79c4a363a2d29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/softplus&quot;&gt;&lt;code&gt;softplus(...)&lt;/code&gt;&lt;/a&gt;: Computes softplus: &lt;code&gt;log(exp(features) + 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../math/softplus&quot;&gt; &lt;code&gt;softplus(...)&lt;/code&gt; &lt;/a&gt; : вычисляет softplus: &lt;code&gt;log(exp(features) + 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef306ceb37cb6d13e79b9cc160b6c2d4ad0e2561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sqrt&quot;&gt;&lt;code&gt;sqrt(...)&lt;/code&gt;&lt;/a&gt;: Computes element-wise square root of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2029df8d74955580b728dbd1155c030cb77f5ee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sqrt&quot;&gt;&lt;code&gt;sqrt(...)&lt;/code&gt;&lt;/a&gt;: Computes square root of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/sqrt&quot;&gt; &lt;code&gt;sqrt(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет квадратный корень из x.</target>
        </trans-unit>
        <trans-unit id="71fad86fca5e59eaf83f571c88306dd851f25f9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/sqrt&quot;&gt;&lt;code&gt;tf.math.sqrt&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/sqrt&quot;&gt; &lt;code&gt;tf.math.sqrt&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fee83503ddd8ccdac0b1de33f81bfe3809702e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/square&quot;&gt;&lt;code&gt;square(...)&lt;/code&gt;&lt;/a&gt;: Computes square of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/square&quot;&gt; &lt;code&gt;square(...)&lt;/code&gt; &lt;/a&gt; : поэлементно вычисляет квадрат x.</target>
        </trans-unit>
        <trans-unit id="6e4fc0e8a3e2b8711152ad665d12f8b63f3ce2df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/square&quot;&gt;&lt;code&gt;tf.math.square&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/square&quot;&gt; &lt;code&gt;tf.math.square&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="91a7a74fa5428ec0deb9208c872d2cc3e727dc56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/squared_difference&quot;&gt;&lt;code&gt;squared_difference(...)&lt;/code&gt;&lt;/a&gt;: Returns (x - y)(x - y) element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/squared_difference&quot;&gt; &lt;code&gt;squared_difference(...)&lt;/code&gt; &lt;/a&gt; : возвращает (x - y) (x - y) поэлементно.</target>
        </trans-unit>
        <trans-unit id="74b427bed6b997f8eb61d816dfa9eed7199efa85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/squared_difference&quot;&gt;&lt;code&gt;tf.math.squared_difference&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/squared_difference&quot;&gt; &lt;code&gt;tf.math.squared_difference&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4c4af1eb164038028d08446ac71411a736173388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/subtract&quot;&gt;&lt;code&gt;subtract(...)&lt;/code&gt;&lt;/a&gt;: Returns x - y element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/subtract&quot;&gt; &lt;code&gt;subtract(...)&lt;/code&gt; &lt;/a&gt; : возвращает x - y поэлементно.</target>
        </trans-unit>
        <trans-unit id="85ea1eccefcdc506a53c1a2a4123270025e7af77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/subtract&quot;&gt;&lt;code&gt;tf.math.subtract&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/subtract&quot;&gt; &lt;code&gt;tf.math.subtract&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="831ad35fa7ed4e1572f8a629925e45439958a886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/tan&quot;&gt;&lt;code&gt;tan(...)&lt;/code&gt;&lt;/a&gt;: Computes tan of x element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/tan&quot;&gt; &lt;code&gt;tan(...)&lt;/code&gt; &lt;/a&gt; : Поэлементно вычисляет загар x.</target>
        </trans-unit>
        <trans-unit id="aab5cf34c7085f5c36d2f9dc41ea50a9b05ae535" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/tan&quot;&gt;&lt;code&gt;tf.math.tan&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/tan&quot;&gt; &lt;code&gt;tf.math.tan&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f8ba62d710245f20337bc3e6d318f3ec6987a8e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/tanh&quot;&gt;&lt;code&gt;tanh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic tangent of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="translated">&lt;a href=&quot;../../math/tanh&quot;&gt; &lt;code&gt;tanh(...)&lt;/code&gt; &lt;/a&gt; :поэлементновычисляет гиперболический тангенс &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49421fb36227ea5241b2029f02a474284a0ba475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/top_k&quot;&gt;&lt;code&gt;top_k(...)&lt;/code&gt;&lt;/a&gt;: Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest entries for the last dimension.</source>
          <target state="translated">&lt;a href=&quot;../../math/top_k&quot;&gt; &lt;code&gt;top_k(...)&lt;/code&gt; &lt;/a&gt; : находит значения и индексы &lt;code&gt;k&lt;/code&gt; самых больших записей для последнего измерения.</target>
        </trans-unit>
        <trans-unit id="0595bc9916c7c7d1408bf277a2a1fc31043eb5e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/truediv&quot;&gt;&lt;code&gt;tf.math.truediv&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/truediv&quot;&gt; &lt;code&gt;tf.math.truediv&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; x&lt;/strong&gt; ,&lt;strong&gt; y&lt;/strong&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e325a08f8c410dfd84d43f28a7207d7a2c623a41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/truediv&quot;&gt;&lt;code&gt;truediv(...)&lt;/code&gt;&lt;/a&gt;: Divides x / y elementwise (using Python 3 division operator semantics).</source>
          <target state="translated">&lt;a href=&quot;../../math/truediv&quot;&gt; &lt;code&gt;truediv(...)&lt;/code&gt; &lt;/a&gt; : делит x / y поэлементно (используя семантику оператора деления Python 3).</target>
        </trans-unit>
        <trans-unit id="59ad864b3b3bf80e433aaeaa0ac14e0c0a3ed934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_max&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_max&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_max&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_max&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="78d5aae4289a0c43ce92b438360d141cf51ef7a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_max&quot;&gt;&lt;code&gt;unsorted_segment_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_max&quot;&gt; &lt;code&gt;unsorted_segment_max(...)&lt;/code&gt; &lt;/a&gt; : вычисляет максимум по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="4aaf8ee3cc6a854dffa674d605ca419fa7bf3d72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_mean&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_mean&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_mean&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_mean&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5ac0a76ca3ea8fbce18d02482503f0b6ca1282a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_mean&quot;&gt;&lt;code&gt;unsorted_segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_mean&quot;&gt; &lt;code&gt;unsorted_segment_mean(...)&lt;/code&gt; &lt;/a&gt; : вычисляет среднее значение по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="5c6fadac29a9cad1d6fcb22584c3f62378d7dc4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_min&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_min&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_min&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_min&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="35d457f24c1044bc6b2acfe8fb1824ab86364f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_min&quot;&gt;&lt;code&gt;unsorted_segment_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_min&quot;&gt; &lt;code&gt;unsorted_segment_min(...)&lt;/code&gt; &lt;/a&gt; : вычисляет минимум по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="a9611cd8659066c5e30f06cf22e6b9ad77a34486" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_prod&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_prod&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_prod&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_prod&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3795e663354064469aad63811e944dbba73b4eb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_prod&quot;&gt;&lt;code&gt;unsorted_segment_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_prod&quot;&gt; &lt;code&gt;unsorted_segment_prod(...)&lt;/code&gt; &lt;/a&gt; : вычисляет произведение по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="861c81cdae2a63bcd12204fcec99e2920b6dc509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_sqrt_n&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_sqrt_n&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_sqrt_n&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_sqrt_n&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="50330a437d4ede5d551502af6b9d10a87227149b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_sqrt_n&quot;&gt;&lt;code&gt;unsorted_segment_sqrt_n(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor divided by the sqrt(N).</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_sqrt_n&quot;&gt; &lt;code&gt;unsorted_segment_sqrt_n(...)&lt;/code&gt; &lt;/a&gt; : вычисляет сумму по сегментам тензора, деленную на sqrt (N).</target>
        </trans-unit>
        <trans-unit id="6654473e6e2526b4e77b28f63884ce7209aef00e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_sum&quot;&gt;&lt;code&gt;tf.math.unsorted_segment_sum&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;data&lt;/strong&gt;, &lt;strong&gt;segment_ids&lt;/strong&gt;, num_segments, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_sum&quot;&gt; &lt;code&gt;tf.math.unsorted_segment_sum&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; данные&lt;/strong&gt; ,&lt;strong&gt; segment_ids&lt;/strong&gt; , NUM_SEGMENTS, имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fe14cf700e5c5337790141fa47e991777365d907" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/unsorted_segment_sum&quot;&gt;&lt;code&gt;unsorted_segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../math/unsorted_segment_sum&quot;&gt; &lt;code&gt;unsorted_segment_sum(...)&lt;/code&gt; &lt;/a&gt; : вычисляет сумму по сегментам тензора.</target>
        </trans-unit>
        <trans-unit id="27b5e97a5405da432988382944ef306910e303ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/xdivy&quot;&gt;&lt;code&gt;xdivy(...)&lt;/code&gt;&lt;/a&gt;: Returns 0 if x == 0, and x / y otherwise, elementwise.</source>
          <target state="translated">&lt;a href=&quot;../../math/xdivy&quot;&gt; &lt;code&gt;xdivy(...)&lt;/code&gt; &lt;/a&gt; : возвращает 0, если x == 0, и x / y в противном случае, поэлементно.</target>
        </trans-unit>
        <trans-unit id="58c4d8e65575f5fd77c2c6fbb574f0c186475f4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/xlog1py&quot;&gt;&lt;code&gt;xlog1py(...)&lt;/code&gt;&lt;/a&gt;: Compute x * log1p(y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa32d8baef8e7de5e3b500562ed008a38f2bfbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/xlogy&quot;&gt;&lt;code&gt;xlogy(...)&lt;/code&gt;&lt;/a&gt;: Returns 0 if x == 0, and x * log(y) otherwise, elementwise.</source>
          <target state="translated">&lt;a href=&quot;../../math/xlogy&quot;&gt; &lt;code&gt;xlogy(...)&lt;/code&gt; &lt;/a&gt; : возвращает 0, если x == 0, и x * log (y) в противном случае, поэлементно.</target>
        </trans-unit>
        <trans-unit id="8bead41385513c8b3e7b910d10202e28180cf0d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/zero_fraction&quot;&gt;&lt;code&gt;zero_fraction(...)&lt;/code&gt;&lt;/a&gt;: Returns the fraction of zeros in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../math/zero_fraction&quot;&gt; &lt;code&gt;zero_fraction(...)&lt;/code&gt; &lt;/a&gt; : возвращает долю нулей в &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7e51a6b7166bdbbbc10b602c715a6a6cd963ebe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../math/zeta&quot;&gt;&lt;code&gt;zeta(...)&lt;/code&gt;&lt;/a&gt;: Compute the Hurwitz zeta function \(\zeta(x, q)\).</source>
          <target state="translated">&lt;a href=&quot;../../math/zeta&quot;&gt; &lt;code&gt;zeta(...)&lt;/code&gt; &lt;/a&gt; : вычислить дзета-функцию Гурвица \ (\ zeta (x, q) \).</target>
        </trans-unit>
        <trans-unit id="287065dcfa5920bfc20c81b8bb6ebb4861e94465" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nest/assert_same_structure&quot;&gt;&lt;code&gt;assert_same_structure(...)&lt;/code&gt;&lt;/a&gt;: Asserts that two structures are nested in the same way.</source>
          <target state="translated">&lt;a href=&quot;../../nest/assert_same_structure&quot;&gt; &lt;code&gt;assert_same_structure(...)&lt;/code&gt; &lt;/a&gt; : утверждает, что две структуры вложены одинаково.</target>
        </trans-unit>
        <trans-unit id="08557a7e78ae7a6e5d89fe89846230442ea5715c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nest/flatten&quot;&gt;&lt;code&gt;flatten(...)&lt;/code&gt;&lt;/a&gt;: Returns a flat list from a given nested structure.</source>
          <target state="translated">&lt;a href=&quot;../../nest/flatten&quot;&gt; &lt;code&gt;flatten(...)&lt;/code&gt; &lt;/a&gt; : возвращает плоский список из заданной вложенной структуры.</target>
        </trans-unit>
        <trans-unit id="d8051945c8d22015798d9a2903f37c90d528a73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nest/is_nested&quot;&gt;&lt;code&gt;is_nested(...)&lt;/code&gt;&lt;/a&gt;: Returns true if its input is a collections.abc.Sequence (except strings).</source>
          <target state="translated">&lt;a href=&quot;../../nest/is_nested&quot;&gt; &lt;code&gt;is_nested(...)&lt;/code&gt; &lt;/a&gt; : возвращает истину, если его вводом является последовательность collections.abc.Sequence (кроме строк).</target>
        </trans-unit>
        <trans-unit id="ded27c073869a66493e57298d2a7ebaf7b6bf62c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nest/map_structure&quot;&gt;&lt;code&gt;map_structure(...)&lt;/code&gt;&lt;/a&gt;: Applies &lt;code&gt;func&lt;/code&gt; to each entry in &lt;code&gt;structure&lt;/code&gt; and returns a new structure.</source>
          <target state="translated">&lt;a href=&quot;../../nest/map_structure&quot;&gt; &lt;code&gt;map_structure(...)&lt;/code&gt; &lt;/a&gt; : применяет &lt;code&gt;func&lt;/code&gt; к каждой записи в &lt;code&gt;structure&lt;/code&gt; и возвращает новую структуру.</target>
        </trans-unit>
        <trans-unit id="6261d9f4a62ae1e44d40b2bba8cd6f63433a3331" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nest/pack_sequence_as&quot;&gt;&lt;code&gt;pack_sequence_as(...)&lt;/code&gt;&lt;/a&gt;: Returns a given flattened sequence packed into a given structure.</source>
          <target state="translated">&lt;a href=&quot;../../nest/pack_sequence_as&quot;&gt; &lt;code&gt;pack_sequence_as(...)&lt;/code&gt; &lt;/a&gt; : возвращает заданную уплощенную последовательность, упакованную в заданную структуру.</target>
        </trans-unit>
        <trans-unit id="b963fbd34483100219454a537dee7b55aa696fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/atrous_conv2d&quot;&gt;&lt;code&gt;atrous_conv2d(...)&lt;/code&gt;&lt;/a&gt;: Atrous convolution (a.k.a. convolution with holes or dilated convolution).</source>
          <target state="translated">&lt;a href=&quot;../../nn/atrous_conv2d&quot;&gt; &lt;code&gt;atrous_conv2d(...)&lt;/code&gt; &lt;/a&gt; : Атрозная свертка (также известная как свертка с отверстиями или расширенная свертка).</target>
        </trans-unit>
        <trans-unit id="1eb552da69922454ea9c2ee93a0f618d70bf35b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/atrous_conv2d_transpose&quot;&gt;&lt;code&gt;atrous_conv2d_transpose(...)&lt;/code&gt;&lt;/a&gt;: The transpose of &lt;code&gt;atrous_conv2d&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/atrous_conv2d_transpose&quot;&gt; &lt;code&gt;atrous_conv2d_transpose(...)&lt;/code&gt; &lt;/a&gt; : транспонирование &lt;code&gt;atrous_conv2d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b172a47698b86b0d810ff69d9ae74622b82fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/avg_pool&quot;&gt;&lt;code&gt;avg_pool(...)&lt;/code&gt;&lt;/a&gt;: Performs the avg pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/avg_pool&quot;&gt; &lt;code&gt;avg_pool(...)&lt;/code&gt; &lt;/a&gt; : Выполняет средний пул на входе.</target>
        </trans-unit>
        <trans-unit id="8278be5ed2c56c9c97528b5520a142aac14ace7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/avg_pool&quot;&gt;&lt;code&gt;avg_pool_v2(...)&lt;/code&gt;&lt;/a&gt;: Performs the avg pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/avg_pool&quot;&gt; &lt;code&gt;avg_pool_v2(...)&lt;/code&gt; &lt;/a&gt; : Выполняет средний пул на входе.</target>
        </trans-unit>
        <trans-unit id="e2cde20097cad0e32bbc86f87984e906654d9f3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/avg_pool1d&quot;&gt;&lt;code&gt;avg_pool1d(...)&lt;/code&gt;&lt;/a&gt;: Performs the average pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/avg_pool1d&quot;&gt; &lt;code&gt;avg_pool1d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет средний пул на входе.</target>
        </trans-unit>
        <trans-unit id="a57cf11874e398edf1b99e2ccd79ec0cd21ca0e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/avg_pool2d&quot;&gt;&lt;code&gt;avg_pool2d(...)&lt;/code&gt;&lt;/a&gt;: Performs the average pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/avg_pool2d&quot;&gt; &lt;code&gt;avg_pool2d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет средний пул на входе.</target>
        </trans-unit>
        <trans-unit id="76ba71a36b763ac59bc9fd05a75b0cfca2b41492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/avg_pool3d&quot;&gt;&lt;code&gt;avg_pool3d(...)&lt;/code&gt;&lt;/a&gt;: Performs the average pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/avg_pool3d&quot;&gt; &lt;code&gt;avg_pool3d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет средний пул на входе.</target>
        </trans-unit>
        <trans-unit id="289bb20dd45b3d23abeac8bfeca480e749a2f91e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/batch_norm_with_global_normalization&quot;&gt;&lt;code&gt;batch_norm_with_global_normalization(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="translated">&lt;a href=&quot;../../nn/batch_norm_with_global_normalization&quot;&gt; &lt;code&gt;batch_norm_with_global_normalization(...)&lt;/code&gt; &lt;/a&gt; : пакетная нормализация.</target>
        </trans-unit>
        <trans-unit id="1260de1bc8e8edcffed3b26cfca579e47138a955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/batch_normalization&quot;&gt;&lt;code&gt;batch_normalization(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="translated">&lt;a href=&quot;../../nn/batch_normalization&quot;&gt; &lt;code&gt;batch_normalization(...)&lt;/code&gt; &lt;/a&gt; : пакетная нормализация.</target>
        </trans-unit>
        <trans-unit id="adf77009e454fb51a75068208f14f5798827cb38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/bias_add&quot;&gt;&lt;code&gt;bias_add(...)&lt;/code&gt;&lt;/a&gt;: Adds &lt;code&gt;bias&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/bias_add&quot;&gt; &lt;code&gt;bias_add(...)&lt;/code&gt; &lt;/a&gt; : добавляет &lt;code&gt;bias&lt;/code&gt; к &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a245f6cd0e5b9ec9e96e6f78ab73c37d51963d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/collapse_repeated&quot;&gt;&lt;code&gt;collapse_repeated(...)&lt;/code&gt;&lt;/a&gt;: Merge repeated labels into single labels.</source>
          <target state="translated">&lt;a href=&quot;../../nn/collapse_repeated&quot;&gt; &lt;code&gt;collapse_repeated(...)&lt;/code&gt; &lt;/a&gt; : объединить повторяющиеся метки в отдельные метки.</target>
        </trans-unit>
        <trans-unit id="2e7d03b4f8408c041ba3358c2cb6f7393bda9f42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/compute_accidental_hits&quot;&gt;&lt;code&gt;compute_accidental_hits(...)&lt;/code&gt;&lt;/a&gt;: Compute the position ids in &lt;code&gt;sampled_candidates&lt;/code&gt; matching &lt;code&gt;true_classes&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/compute_accidental_hits&quot;&gt; &lt;code&gt;compute_accidental_hits(...)&lt;/code&gt; &lt;/a&gt; : вычислить идентификаторы позиций в &lt;code&gt;sampled_candidates&lt;/code&gt; , соответствующие &lt;code&gt;true_classes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="082002b8896bf9b28f3beb67ad83a7d3c423ffbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/compute_average_loss&quot;&gt;&lt;code&gt;compute_average_loss(...)&lt;/code&gt;&lt;/a&gt;: Scales per-example losses with sample_weights and computes their average.</source>
          <target state="translated">&lt;a href=&quot;../../nn/compute_average_loss&quot;&gt; &lt;code&gt;compute_average_loss(...)&lt;/code&gt; &lt;/a&gt; : масштабирует потери для каждого примера с помощью sample_weights и вычисляет их среднее значение.</target>
        </trans-unit>
        <trans-unit id="aa802dce57e83bcc30d4c4a4cd78ff5bf2dbc282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv1d&quot;&gt;&lt;code&gt;conv1d(...)&lt;/code&gt;&lt;/a&gt;: Computes a 1-D convolution given 3-D input and filter tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv1d&quot;&gt; &lt;code&gt;conv1d(...)&lt;/code&gt; &lt;/a&gt; : вычисляет одномерную свертку с учетом входных трехмерных данных и фильтрует тензоры.</target>
        </trans-unit>
        <trans-unit id="66f1e3d52596e06391be35816fdfb71564c21c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv1d_transpose&quot;&gt;&lt;code&gt;conv1d_transpose(...)&lt;/code&gt;&lt;/a&gt;: The transpose of &lt;code&gt;conv1d&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv1d_transpose&quot;&gt; &lt;code&gt;conv1d_transpose(...)&lt;/code&gt; &lt;/a&gt; : транспонирование &lt;code&gt;conv1d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddabf5ac14d16cf62bfd72eeac9e3c84b2cf8044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv2d&quot;&gt;&lt;code&gt;conv2d(...)&lt;/code&gt;&lt;/a&gt;: Computes a 2-D convolution given 4-D &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv2d&quot;&gt; &lt;code&gt;conv2d(...)&lt;/code&gt; &lt;/a&gt; : вычисляет двумерную свертку с учетом &lt;code&gt;input&lt;/code&gt; четырехмерных данных и &lt;code&gt;filters&lt;/code&gt; тензоры.</target>
        </trans-unit>
        <trans-unit id="3c8a4ff335d13b9e645e21a37756993f452face0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv2d_transpose&quot;&gt;&lt;code&gt;conv2d_transpose(...)&lt;/code&gt;&lt;/a&gt;: The transpose of &lt;code&gt;conv2d&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv2d_transpose&quot;&gt; &lt;code&gt;conv2d_transpose(...)&lt;/code&gt; &lt;/a&gt; : транспонирование &lt;code&gt;conv2d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35b918dc958284e8813d7af1f68ad9772e9890d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv3d&quot;&gt;&lt;code&gt;conv3d(...)&lt;/code&gt;&lt;/a&gt;: Computes a 3-D convolution given 5-D &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv3d&quot;&gt; &lt;code&gt;conv3d(...)&lt;/code&gt; &lt;/a&gt; : вычисляет 3- мерную свертку с заданным 5- мерным &lt;code&gt;input&lt;/code&gt; и &lt;code&gt;filters&lt;/code&gt; тензоры.</target>
        </trans-unit>
        <trans-unit id="27d2565d4c7f0b4f3be896b8ab793e769d476644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv3d_transpose&quot;&gt;&lt;code&gt;conv3d_transpose(...)&lt;/code&gt;&lt;/a&gt;: The transpose of &lt;code&gt;conv3d&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv3d_transpose&quot;&gt; &lt;code&gt;conv3d_transpose(...)&lt;/code&gt; &lt;/a&gt; : транспонирование &lt;code&gt;conv3d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2691778ffc53b213c67e980dddf68d7120e335e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/conv_transpose&quot;&gt;&lt;code&gt;conv_transpose(...)&lt;/code&gt;&lt;/a&gt;: The transpose of &lt;code&gt;convolution&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/conv_transpose&quot;&gt; &lt;code&gt;conv_transpose(...)&lt;/code&gt; &lt;/a&gt; : транспонирование &lt;code&gt;convolution&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09432d1d49ae80e05dade05fa99ba14cd01f5dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/convolution&quot;&gt;&lt;code&gt;convolution(...)&lt;/code&gt;&lt;/a&gt;: Computes sums of N-D convolutions (actually cross-correlation).</source>
          <target state="translated">&lt;a href=&quot;../../nn/convolution&quot;&gt; &lt;code&gt;convolution(...)&lt;/code&gt; &lt;/a&gt; : вычисляет суммы сверток ND (фактически взаимная корреляция).</target>
        </trans-unit>
        <trans-unit id="7f3568e761f59426d568958fc6a070225caba42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/crelu&quot;&gt;&lt;code&gt;crelu(...)&lt;/code&gt;&lt;/a&gt;: Computes Concatenated ReLU.</source>
          <target state="translated">&lt;a href=&quot;../../nn/crelu&quot;&gt; &lt;code&gt;crelu(...)&lt;/code&gt; &lt;/a&gt; : вычисляет составное ReLU.</target>
        </trans-unit>
        <trans-unit id="98722e2a85c9c9c7e7658ce6d7108a5c2b875efc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_beam_search_decoder&quot;&gt;&lt;code&gt;ctc_beam_search_decoder(...)&lt;/code&gt;&lt;/a&gt;: Performs beam search decoding on the logits given in input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_beam_search_decoder&quot;&gt; &lt;code&gt;ctc_beam_search_decoder(...)&lt;/code&gt; &lt;/a&gt; : выполняет декодирование поиска луча по логитам, указанным на входе.</target>
        </trans-unit>
        <trans-unit id="4d48dd41e133a6360004c9fff68172d44c725692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_beam_search_decoder&quot;&gt;&lt;code&gt;ctc_beam_search_decoder_v2(...)&lt;/code&gt;&lt;/a&gt;: Performs beam search decoding on the logits given in input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_beam_search_decoder&quot;&gt; &lt;code&gt;ctc_beam_search_decoder_v2(...)&lt;/code&gt; &lt;/a&gt; : выполняет декодирование поиска луча по логитам, указанным во входных данных.</target>
        </trans-unit>
        <trans-unit id="cf864e1884f5377f62d6737b66da0a4e9d0641ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_greedy_decoder&quot;&gt;&lt;code&gt;ctc_greedy_decoder(...)&lt;/code&gt;&lt;/a&gt;: Performs greedy decoding on the logits given in input (best path).</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_greedy_decoder&quot;&gt; &lt;code&gt;ctc_greedy_decoder(...)&lt;/code&gt; &lt;/a&gt; : выполняет жадное декодирование логитов, указанных во входных данных (лучший путь).</target>
        </trans-unit>
        <trans-unit id="bc9862420741e061dafef581348819b887dd2d94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_loss&quot;&gt;&lt;code&gt;ctc_loss(...)&lt;/code&gt;&lt;/a&gt;: Computes CTC (Connectionist Temporal Classification) loss.</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_loss&quot;&gt; &lt;code&gt;ctc_loss(...)&lt;/code&gt; &lt;/a&gt; : вычисляет потерю CTC (временная классификация коннекционистов ).</target>
        </trans-unit>
        <trans-unit id="6965b9b5c90525a8cb7e938c01b82e94b4b3086c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_loss&quot;&gt;&lt;code&gt;ctc_loss_v2(...)&lt;/code&gt;&lt;/a&gt;: Computes CTC (Connectionist Temporal Classification) loss.</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_loss&quot;&gt; &lt;code&gt;ctc_loss_v2(...)&lt;/code&gt; &lt;/a&gt; : вычисляет потерю CTC (временная классификация подключений).</target>
        </trans-unit>
        <trans-unit id="8c7ecf4f9e1df8bb1c01bcd80997f06aa33a7e9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/ctc_unique_labels&quot;&gt;&lt;code&gt;ctc_unique_labels(...)&lt;/code&gt;&lt;/a&gt;: Get unique labels and indices for batched labels for &lt;a href=&quot;../../nn/ctc_loss&quot;&gt;&lt;code&gt;tf.nn.ctc_loss&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/ctc_unique_labels&quot;&gt; &lt;code&gt;ctc_unique_labels(...)&lt;/code&gt; &lt;/a&gt; : получить уникальные метки и индексы для&lt;a href=&quot;../../nn/ctc_loss&quot;&gt; &lt;code&gt;tf.nn.ctc_loss&lt;/code&gt; &lt;/a&gt; меток для tf.nn.ctc_loss .</target>
        </trans-unit>
        <trans-unit id="19e575bc93292a80d8b9172529871afb0994e8be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depth_to_space&quot;&gt;&lt;code&gt;depth_to_space(...)&lt;/code&gt;&lt;/a&gt;: DepthToSpace for tensors of type T.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depth_to_space&quot;&gt; &lt;code&gt;depth_to_space(...)&lt;/code&gt; &lt;/a&gt; : DepthToSpace для тензоров типа T.</target>
        </trans-unit>
        <trans-unit id="348834f98197f5e24b4b2ae5c0196feef67a73b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depthwise_conv2d&quot;&gt;&lt;code&gt;depthwise_conv2d(...)&lt;/code&gt;&lt;/a&gt;: Depthwise 2-D convolution.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depthwise_conv2d&quot;&gt; &lt;code&gt;depthwise_conv2d(...)&lt;/code&gt; &lt;/a&gt; : Двумерная свертка по глубине .</target>
        </trans-unit>
        <trans-unit id="6ea5e030d43716cdc6886f8eaedf0d09deb3adfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_filter&quot;&gt;&lt;code&gt;depthwise_conv2d_backprop_filter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the filter.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_filter&quot;&gt; &lt;code&gt;depthwise_conv2d_backprop_filter(...)&lt;/code&gt; &lt;/a&gt; : вычисляет градиенты глубинной свертки по отношению к фильтру.</target>
        </trans-unit>
        <trans-unit id="c7a91555085b446f037824ec7a8a2615f1170829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_filter&quot;&gt;&lt;code&gt;depthwise_conv2d_native_backprop_filter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the filter.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_filter&quot;&gt; &lt;code&gt;depthwise_conv2d_native_backprop_filter(...)&lt;/code&gt; &lt;/a&gt; : вычисляет градиенты глубинной свертки по отношению к фильтру.</target>
        </trans-unit>
        <trans-unit id="59c5af7bd2366dafbd6d581162a33a3be6d11e5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_input&quot;&gt;&lt;code&gt;depthwise_conv2d_backprop_input(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_input&quot;&gt; &lt;code&gt;depthwise_conv2d_backprop_input(...)&lt;/code&gt; &lt;/a&gt; : вычисляет градиенты глубинной свертки относительно входа.</target>
        </trans-unit>
        <trans-unit id="c01619326c8cf718fe6708906e6d0c208c124fe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_input&quot;&gt;&lt;code&gt;depthwise_conv2d_native_backprop_input(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/depthwise_conv2d_backprop_input&quot;&gt; &lt;code&gt;depthwise_conv2d_native_backprop_input(...)&lt;/code&gt; &lt;/a&gt; : вычисляет градиенты глубинной свертки относительно входа.</target>
        </trans-unit>
        <trans-unit id="f1c086b05ade1fe8fe1bc689c5081a80b26a4cf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/dilation2d&quot;&gt;&lt;code&gt;dilation2d(...)&lt;/code&gt;&lt;/a&gt;: Computes the grayscale dilation of 4-D &lt;code&gt;input&lt;/code&gt; and 3-D &lt;code&gt;filters&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/dilation2d&quot;&gt; &lt;code&gt;dilation2d(...)&lt;/code&gt; &lt;/a&gt; : вычисляет расширение оттенков серого для 4-мерных &lt;code&gt;input&lt;/code&gt; тензорови 3-мерных тензоров &lt;code&gt;filters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c95ede5027fec9e4e8da78e540695e8f64b6623" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/dropout&quot;&gt;&lt;code&gt;dropout(...)&lt;/code&gt;&lt;/a&gt;: Computes dropout: randomly sets elements to zero to prevent overfitting.</source>
          <target state="translated">&lt;a href=&quot;../../nn/dropout&quot;&gt; &lt;code&gt;dropout(...)&lt;/code&gt; &lt;/a&gt; : вычисляет dropout: случайным образом устанавливает элементы в ноль для предотвращения переобучения.</target>
        </trans-unit>
        <trans-unit id="5af998096e318ea7ffa286bcc0c113a66e0e405f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/dropout&quot;&gt;&lt;code&gt;tf.nn.dropout&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, keep_prob=&lt;code&gt;None&lt;/code&gt;, noise_shape=&lt;code&gt;None&lt;/code&gt;, seed=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;, rate=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3d5594f1b4b13c0ccaa4f3f76cb578de57d6c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/elu&quot;&gt;&lt;code&gt;elu(...)&lt;/code&gt;&lt;/a&gt;: Computes exponential linear: &lt;code&gt;exp(features) - 1&lt;/code&gt; if &amp;lt; 0, &lt;code&gt;features&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;../../nn/elu&quot;&gt; &lt;code&gt;elu(...)&lt;/code&gt; &lt;/a&gt; : вычисляет экспоненциальную линейную: &lt;code&gt;exp(features) - 1&lt;/code&gt; если &amp;lt;0, &lt;code&gt;features&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="bc104bf951fdbc6e64449e5b378d756aa6565952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/embedding_lookup&quot;&gt;&lt;code&gt;embedding_lookup(...)&lt;/code&gt;&lt;/a&gt;: Looks up &lt;code&gt;ids&lt;/code&gt; in a list of embedding tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/embedding_lookup&quot;&gt; &lt;code&gt;embedding_lookup(...)&lt;/code&gt; &lt;/a&gt; : ищет &lt;code&gt;ids&lt;/code&gt; в списке встраиваемых тензоров.</target>
        </trans-unit>
        <trans-unit id="bd4c4eabf808a2aa489bec00a7db23ac27af57ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/embedding_lookup_sparse&quot;&gt;&lt;code&gt;embedding_lookup_sparse(...)&lt;/code&gt;&lt;/a&gt;: Computes embeddings for the given ids and weights.</source>
          <target state="translated">&lt;a href=&quot;../../nn/embedding_lookup_sparse&quot;&gt; &lt;code&gt;embedding_lookup_sparse(...)&lt;/code&gt; &lt;/a&gt; : вычисляет вложения для заданных идентификаторов и весов.</target>
        </trans-unit>
        <trans-unit id="e901eae00568192d554547c0afb4afbb6ebabba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/erosion2d&quot;&gt;&lt;code&gt;erosion2d(...)&lt;/code&gt;&lt;/a&gt;: Computes the grayscale erosion of 4-D &lt;code&gt;value&lt;/code&gt; and 3-D &lt;code&gt;filters&lt;/code&gt; tensors.</source>
          <target state="translated">&lt;a href=&quot;../../nn/erosion2d&quot;&gt; &lt;code&gt;erosion2d(...)&lt;/code&gt; &lt;/a&gt; : вычисляет эрозию в оттенках серого длятензоров4-D &lt;code&gt;value&lt;/code&gt; и 3-D &lt;code&gt;filters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adfe9ed445e73dd2e0a408dde9ed99c27151352e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/fractional_avg_pool&quot;&gt;&lt;code&gt;fractional_avg_pool(...)&lt;/code&gt;&lt;/a&gt;: Performs fractional average pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/fractional_avg_pool&quot;&gt; &lt;code&gt;fractional_avg_pool(...)&lt;/code&gt; &lt;/a&gt; : Выполняет объединение дробных средних значений на входе.</target>
        </trans-unit>
        <trans-unit id="67e0892886ad96de6248a1e3a49f7951f8a5a5cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/fractional_max_pool&quot;&gt;&lt;code&gt;fractional_max_pool(...)&lt;/code&gt;&lt;/a&gt;: Performs fractional max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/fractional_max_pool&quot;&gt; &lt;code&gt;fractional_max_pool(...)&lt;/code&gt; &lt;/a&gt; : Выполняет дробное максимальное объединение на входе.</target>
        </trans-unit>
        <trans-unit id="bbbd4676b90c15a9deb39c6414caa91c9520bc7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/l2_loss&quot;&gt;&lt;code&gt;l2_loss(...)&lt;/code&gt;&lt;/a&gt;: L2 Loss.</source>
          <target state="translated">&lt;a href=&quot;../../nn/l2_loss&quot;&gt; &lt;code&gt;l2_loss(...)&lt;/code&gt; &lt;/a&gt; : Убыток L2.</target>
        </trans-unit>
        <trans-unit id="eec4a4bd0a138dbc2ef581995210b089cfbe8a15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/leaky_relu&quot;&gt;&lt;code&gt;leaky_relu(...)&lt;/code&gt;&lt;/a&gt;: Compute the Leaky ReLU activation function.</source>
          <target state="translated">&lt;a href=&quot;../../nn/leaky_relu&quot;&gt; &lt;code&gt;leaky_relu(...)&lt;/code&gt; &lt;/a&gt; : вычислить функцию активации Leaky ReLU.</target>
        </trans-unit>
        <trans-unit id="8835f30d35bbfacc4f1292073eea03cc3e879cca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/local_response_normalization&quot;&gt;&lt;code&gt;local_response_normalization(...)&lt;/code&gt;&lt;/a&gt;: Local Response Normalization.</source>
          <target state="translated">&lt;a href=&quot;../../nn/local_response_normalization&quot;&gt; &lt;code&gt;local_response_normalization(...)&lt;/code&gt; &lt;/a&gt; : Нормализация местного отклика.</target>
        </trans-unit>
        <trans-unit id="4c3cd0505eb250fd3abcd881620dd880b67d1d68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/local_response_normalization&quot;&gt;&lt;code&gt;lrn(...)&lt;/code&gt;&lt;/a&gt;: Local Response Normalization.</source>
          <target state="translated">&lt;a href=&quot;../../nn/local_response_normalization&quot;&gt; &lt;code&gt;lrn(...)&lt;/code&gt; &lt;/a&gt; : Нормализация местного отклика.</target>
        </trans-unit>
        <trans-unit id="b2690bbcd73c29c1541d7aebaf060de18d486b81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/log_poisson_loss&quot;&gt;&lt;code&gt;log_poisson_loss(...)&lt;/code&gt;&lt;/a&gt;: Computes log Poisson loss given &lt;code&gt;log_input&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/log_poisson_loss&quot;&gt; &lt;code&gt;log_poisson_loss(...)&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;log_input&lt;/code&gt; потерю Пуассона журнала для заданного log_input .</target>
        </trans-unit>
        <trans-unit id="42bea2183b662def9180462b8bf2a9640fbeed12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/log_softmax&quot;&gt;&lt;code&gt;log_softmax(...)&lt;/code&gt;&lt;/a&gt;: Computes log softmax activations.</source>
          <target state="translated">&lt;a href=&quot;../../nn/log_softmax&quot;&gt; &lt;code&gt;log_softmax(...)&lt;/code&gt; &lt;/a&gt; : вычисляет журнал активации softmax.</target>
        </trans-unit>
        <trans-unit id="9461c1c5cecc6a7e822bec3f7e65e7952a93f5aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool&quot;&gt;&lt;code&gt;max_pool(...)&lt;/code&gt;&lt;/a&gt;: Performs the max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool&quot;&gt; &lt;code&gt;max_pool(...)&lt;/code&gt; &lt;/a&gt; : Выполняет максимальный пул на входе.</target>
        </trans-unit>
        <trans-unit id="9b02dec81fae7db6cec991ae2e2b524bbf255f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool&quot;&gt;&lt;code&gt;max_pool_v2(...)&lt;/code&gt;&lt;/a&gt;: Performs the max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool&quot;&gt; &lt;code&gt;max_pool_v2(...)&lt;/code&gt; &lt;/a&gt; : Выполняет максимальный пул на входе.</target>
        </trans-unit>
        <trans-unit id="935af9f448be8d24d9d3b85cc99f1e9ff1943232" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool1d&quot;&gt;&lt;code&gt;max_pool1d(...)&lt;/code&gt;&lt;/a&gt;: Performs the max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool1d&quot;&gt; &lt;code&gt;max_pool1d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет максимальное объединение входных данных.</target>
        </trans-unit>
        <trans-unit id="40bb0bcd83ab6e39e9146a8bbaf893caa3e6b67e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool2d&quot;&gt;&lt;code&gt;max_pool2d(...)&lt;/code&gt;&lt;/a&gt;: Performs the max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool2d&quot;&gt; &lt;code&gt;max_pool2d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет максимальное объединение входных данных.</target>
        </trans-unit>
        <trans-unit id="586980f11dbcf8e61212e8633e537fc9816cade0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool3d&quot;&gt;&lt;code&gt;max_pool3d(...)&lt;/code&gt;&lt;/a&gt;: Performs the max pooling on the input.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool3d&quot;&gt; &lt;code&gt;max_pool3d(...)&lt;/code&gt; &lt;/a&gt; : Выполняет максимальный пул на входе.</target>
        </trans-unit>
        <trans-unit id="48a853542faa3118b14af42056270793f7c9caf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/max_pool_with_argmax&quot;&gt;&lt;code&gt;max_pool_with_argmax(...)&lt;/code&gt;&lt;/a&gt;: Performs max pooling on the input and outputs both max values and indices.</source>
          <target state="translated">&lt;a href=&quot;../../nn/max_pool_with_argmax&quot;&gt; &lt;code&gt;max_pool_with_argmax(...)&lt;/code&gt; &lt;/a&gt; : выполняет максимальное объединение на входе и выводит как максимальные значения, так и индексы.</target>
        </trans-unit>
        <trans-unit id="90061c0180c7baa3491ec43090bbeff06608c30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/moments&quot;&gt;&lt;code&gt;moments(...)&lt;/code&gt;&lt;/a&gt;: Calculates the mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/moments&quot;&gt; &lt;code&gt;moments(...)&lt;/code&gt; &lt;/a&gt; : вычисляет среднее значение и дисперсию &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6a3a66d2204c82871101848c2ee16f99dd72cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/nce_loss&quot;&gt;&lt;code&gt;nce_loss(...)&lt;/code&gt;&lt;/a&gt;: Computes and returns the noise-contrastive estimation training loss.</source>
          <target state="translated">&lt;a href=&quot;../../nn/nce_loss&quot;&gt; &lt;code&gt;nce_loss(...)&lt;/code&gt; &lt;/a&gt; : вычисляет и возвращает потери при обучении для оценки контрастности шума.</target>
        </trans-unit>
        <trans-unit id="a8d57af34164e8c10d3fa2ebdce901d35c107ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/normalize_moments&quot;&gt;&lt;code&gt;normalize_moments(...)&lt;/code&gt;&lt;/a&gt;: Calculate the mean and variance of based on the sufficient statistics.</source>
          <target state="translated">&lt;a href=&quot;../../nn/normalize_moments&quot;&gt; &lt;code&gt;normalize_moments(...)&lt;/code&gt; &lt;/a&gt; : вычислить среднее значение и дисперсию на основе достаточной статистики.</target>
        </trans-unit>
        <trans-unit id="78c97d2cadae895aad7ca4f244870357c29ccc15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/pool&quot;&gt;&lt;code&gt;pool(...)&lt;/code&gt;&lt;/a&gt;: Performs an N-D pooling operation.</source>
          <target state="translated">&lt;a href=&quot;../../nn/pool&quot;&gt; &lt;code&gt;pool(...)&lt;/code&gt; &lt;/a&gt; : Выполняет операцию объединения ND.</target>
        </trans-unit>
        <trans-unit id="5d2196a79fc4c34e3ae734f5889964554e942e9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/relu&quot;&gt;&lt;code&gt;relu(...)&lt;/code&gt;&lt;/a&gt;: Computes rectified linear: &lt;code&gt;max(features, 0)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/relu&quot;&gt; &lt;code&gt;relu(...)&lt;/code&gt; &lt;/a&gt; : вычисляет выпрямленную линейную: &lt;code&gt;max(features, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="886658a861142d9d147e0e5ff290a4c81b49aa31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/relu6&quot;&gt;&lt;code&gt;relu6(...)&lt;/code&gt;&lt;/a&gt;: Computes Rectified Linear 6: &lt;code&gt;min(max(features, 0), 6)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/relu6&quot;&gt; &lt;code&gt;relu6(...)&lt;/code&gt; &lt;/a&gt; : вычисляет выпрямленное линейное число 6: &lt;code&gt;min(max(features, 0), 6)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1388deacee92c19faac97e1f5f415e37786ad5bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/rnncelldevicewrapper&quot;&gt;&lt;code&gt;class RNNCellDeviceWrapper&lt;/code&gt;&lt;/a&gt;: Operator that ensures an RNNCell runs on a particular device.</source>
          <target state="translated">&lt;a href=&quot;../../nn/rnncelldevicewrapper&quot;&gt; &lt;code&gt;class RNNCellDeviceWrapper&lt;/code&gt; &lt;/a&gt; : оператор, обеспечивающий работу RNNCell на определенном устройстве.</target>
        </trans-unit>
        <trans-unit id="290f5ff6d3a7a3fd6d0d883be269c83ef252c021" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/rnncelldropoutwrapper&quot;&gt;&lt;code&gt;class RNNCellDropoutWrapper&lt;/code&gt;&lt;/a&gt;: Operator adding dropout to inputs and outputs of the given cell.</source>
          <target state="translated">&lt;a href=&quot;../../nn/rnncelldropoutwrapper&quot;&gt; &lt;code&gt;class RNNCellDropoutWrapper&lt;/code&gt; &lt;/a&gt; : Оператор, добавляющий выпадение ко входам и выходам данной ячейки.</target>
        </trans-unit>
        <trans-unit id="63b0b287c25c302870415433ac404ca231da4191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/rnncellresidualwrapper&quot;&gt;&lt;code&gt;class RNNCellResidualWrapper&lt;/code&gt;&lt;/a&gt;: RNNCell wrapper that ensures cell inputs are added to the outputs.</source>
          <target state="translated">&lt;a href=&quot;../../nn/rnncellresidualwrapper&quot;&gt; &lt;code&gt;class RNNCellResidualWrapper&lt;/code&gt; &lt;/a&gt; : оболочка RNNCell, которая обеспечивает добавление входных данных ячеек к выходным.</target>
        </trans-unit>
        <trans-unit id="a8c832efdcbe3ccacdc4fe4b5e2ef7f1e0db10df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/safe_embedding_lookup_sparse&quot;&gt;&lt;code&gt;safe_embedding_lookup_sparse(...)&lt;/code&gt;&lt;/a&gt;: Lookup embedding results, accounting for invalid IDs and empty features.</source>
          <target state="translated">&lt;a href=&quot;../../nn/safe_embedding_lookup_sparse&quot;&gt; &lt;code&gt;safe_embedding_lookup_sparse(...)&lt;/code&gt; &lt;/a&gt; : поиск результатов внедрения с учетом недопустимых идентификаторов и пустых функций.</target>
        </trans-unit>
        <trans-unit id="c7ee26b76f18dfd2780f0377f893999dc4360a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/sampled_softmax_loss&quot;&gt;&lt;code&gt;sampled_softmax_loss(...)&lt;/code&gt;&lt;/a&gt;: Computes and returns the sampled softmax training loss.</source>
          <target state="translated">&lt;a href=&quot;../../nn/sampled_softmax_loss&quot;&gt; &lt;code&gt;sampled_softmax_loss(...)&lt;/code&gt; &lt;/a&gt; : вычисляет и возвращает выборку потерь при обучении softmax.</target>
        </trans-unit>
        <trans-unit id="4acd50c2531959eb87d7528c6be36c7a8d7e6f6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/scale_regularization_loss&quot;&gt;&lt;code&gt;scale_regularization_loss(...)&lt;/code&gt;&lt;/a&gt;: Scales the sum of the given regularization losses by number of replicas.</source>
          <target state="translated">&lt;a href=&quot;../../nn/scale_regularization_loss&quot;&gt; &lt;code&gt;scale_regularization_loss(...)&lt;/code&gt; &lt;/a&gt; : Масштабирует сумму заданных потерь регуляризации по количеству реплик.</target>
        </trans-unit>
        <trans-unit id="e26268373ac3fea9caa6d3794924c09770c7bb66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/selu&quot;&gt;&lt;code&gt;selu(...)&lt;/code&gt;&lt;/a&gt;: Computes scaled exponential linear: &lt;code&gt;scale * alpha * (exp(features) - 1)&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../nn/selu&quot;&gt; &lt;code&gt;selu(...)&lt;/code&gt; &lt;/a&gt; : вычисляет масштабированную экспоненциальную линейную: &lt;code&gt;scale * alpha * (exp(features) - 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f9eb1651aed6aa55698cb3d3fe960320ecfdefb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/separable_conv2d&quot;&gt;&lt;code&gt;separable_conv2d(...)&lt;/code&gt;&lt;/a&gt;: 2-D convolution with separable filters.</source>
          <target state="translated">&lt;a href=&quot;../../nn/separable_conv2d&quot;&gt; &lt;code&gt;separable_conv2d(...)&lt;/code&gt; &lt;/a&gt; : двумерная свертка с разделяемыми фильтрами.</target>
        </trans-unit>
        <trans-unit id="01c383331bb1cc79a5bdbed4ff1e4953595aaa54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/sigmoid_cross_entropy_with_logits&quot;&gt;&lt;code&gt;sigmoid_cross_entropy_with_logits(...)&lt;/code&gt;&lt;/a&gt;: Computes sigmoid cross entropy given &lt;code&gt;logits&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/sigmoid_cross_entropy_with_logits&quot;&gt; &lt;code&gt;sigmoid_cross_entropy_with_logits(...)&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;logits&lt;/code&gt; перекрестную энтропию сигмоида с учетом логитов .</target>
        </trans-unit>
        <trans-unit id="6c2a608c764ed21201322e33fd0a50437568ee57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/softmax&quot;&gt;&lt;code&gt;softmax(...)&lt;/code&gt;&lt;/a&gt;: Computes softmax activations.</source>
          <target state="translated">&lt;a href=&quot;../../nn/softmax&quot;&gt; &lt;code&gt;softmax(...)&lt;/code&gt; &lt;/a&gt; : вычисляет активации softmax.</target>
        </trans-unit>
        <trans-unit id="8a942fd55f78e97cbc1a32d06680f0fc7b4db472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/softmax_cross_entropy_with_logits&quot;&gt;&lt;code&gt;softmax_cross_entropy_with_logits(...)&lt;/code&gt;&lt;/a&gt;: Computes softmax cross entropy between &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/softmax_cross_entropy_with_logits&quot;&gt; &lt;code&gt;softmax_cross_entropy_with_logits(...)&lt;/code&gt; &lt;/a&gt; : вычисляет перекрестную энтропию &lt;code&gt;logits&lt;/code&gt; между логитами и &lt;code&gt;labels&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a56101601ad4840a146fc2feaaa29c8075ae6e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/softsign&quot;&gt;&lt;code&gt;softsign(...)&lt;/code&gt;&lt;/a&gt;: Computes softsign: &lt;code&gt;features / (abs(features) + 1)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/softsign&quot;&gt; &lt;code&gt;softsign(...)&lt;/code&gt; &lt;/a&gt; : вычисляет softsign: &lt;code&gt;features / (abs(features) + 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c01eaafd4331b4f0c347b6d56ae7439c31302908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/space_to_depth&quot;&gt;&lt;code&gt;space_to_depth(...)&lt;/code&gt;&lt;/a&gt;: SpaceToDepth for tensors of type T.</source>
          <target state="translated">&lt;a href=&quot;../../nn/space_to_depth&quot;&gt; &lt;code&gt;space_to_depth(...)&lt;/code&gt; &lt;/a&gt; : SpaceToDepth для тензоров типа T.</target>
        </trans-unit>
        <trans-unit id="37e397b5db805e6c37f07f16a309392f786a93a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/sparse_softmax_cross_entropy_with_logits&quot;&gt;&lt;code&gt;sparse_softmax_cross_entropy_with_logits(...)&lt;/code&gt;&lt;/a&gt;: Computes sparse softmax cross entropy between &lt;code&gt;logits&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/sparse_softmax_cross_entropy_with_logits&quot;&gt; &lt;code&gt;sparse_softmax_cross_entropy_with_logits(...)&lt;/code&gt; &lt;/a&gt; : вычисляет разреженную перекрестную энтропию &lt;code&gt;logits&lt;/code&gt; между логитами и &lt;code&gt;labels&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="924e3565341080552f8b73c1fd99cc6643349ef1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/sufficient_statistics&quot;&gt;&lt;code&gt;sufficient_statistics(...)&lt;/code&gt;&lt;/a&gt;: Calculate the sufficient statistics for the mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/sufficient_statistics&quot;&gt; &lt;code&gt;sufficient_statistics(...)&lt;/code&gt; &lt;/a&gt; : вычислить достаточную статистику для среднего и дисперсии &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0112753d76200ad044c71df60330074b07eb2559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/swish&quot;&gt;&lt;code&gt;swish(...)&lt;/code&gt;&lt;/a&gt;: Computes the Swish activation function: &lt;code&gt;x * sigmoid(x)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/swish&quot;&gt; &lt;code&gt;swish(...)&lt;/code&gt; &lt;/a&gt; : вычисляет функцию активации Swish: &lt;code&gt;x * sigmoid(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf5a7d15a80f764d431c86bf2b7b2cd15e2000dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/weighted_cross_entropy_with_logits&quot;&gt;&lt;code&gt;weighted_cross_entropy_with_logits(...)&lt;/code&gt;&lt;/a&gt;: Computes a weighted cross entropy.</source>
          <target state="translated">&lt;a href=&quot;../../nn/weighted_cross_entropy_with_logits&quot;&gt; &lt;code&gt;weighted_cross_entropy_with_logits(...)&lt;/code&gt; &lt;/a&gt; : вычисляет взвешенную перекрестную энтропию.</target>
        </trans-unit>
        <trans-unit id="929451b77d9a4118a9b4abe4980d399e57345111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/weighted_moments&quot;&gt;&lt;code&gt;weighted_moments(...)&lt;/code&gt;&lt;/a&gt;: Returns the frequency-weighted mean and variance of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/weighted_moments&quot;&gt; &lt;code&gt;weighted_moments(...)&lt;/code&gt; &lt;/a&gt; : возвращает средневзвешенное значение и дисперсию &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a606cb9e4269c22a4ede8b7fcb942e1ac0c7667" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../nn/with_space_to_batch&quot;&gt;&lt;code&gt;with_space_to_batch(...)&lt;/code&gt;&lt;/a&gt;: Performs &lt;code&gt;op&lt;/code&gt; on the space-to-batch representation of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../nn/with_space_to_batch&quot;&gt; &lt;code&gt;with_space_to_batch(...)&lt;/code&gt; &lt;/a&gt; : Выступает &lt;code&gt;op&lt;/code&gt; на представлении пространства-к-партии &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42a01e7a99717e9fbe4f3a3a9f14c25ddba5f271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../norm&quot;&gt;&lt;code&gt;norm(...)&lt;/code&gt;&lt;/a&gt;: Computes the norm of vectors, matrices, and tensors.</source>
          <target state="translated">&lt;a href=&quot;../../norm&quot;&gt; &lt;code&gt;norm(...)&lt;/code&gt; &lt;/a&gt; : вычисляет норму векторов, матриц и тензоров.</target>
        </trans-unit>
        <trans-unit id="80e82335508ac476bd16cc82eb23b60eb7ca79c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../one_hot&quot;&gt;&lt;code&gt;tf.one_hot&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;indices&lt;/strong&gt;, depth, on_value=&lt;code&gt;None&lt;/code&gt;, off_value=&lt;code&gt;None&lt;/code&gt;, axis=&lt;code&gt;None&lt;/code&gt;, dtype=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../one_hot&quot;&gt; &lt;code&gt;tf.one_hot&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; индексы&lt;/strong&gt; , глубина, on_value = &lt;code&gt;None&lt;/code&gt; , off_value = &lt;code&gt;None&lt;/code&gt; , axis = &lt;code&gt;None&lt;/code&gt; , dtype = &lt;code&gt;None&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6e897849d6a008a06fc6d7aa334955d50e4f2754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ones_like&quot;&gt;&lt;code&gt;tf.ones_like&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;tensor&lt;/strong&gt;, dtype=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;, optimize=&lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../ones_like&quot;&gt; &lt;code&gt;tf.ones_like&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; тензор&lt;/strong&gt; , dtype = &lt;code&gt;None&lt;/code&gt; , name = &lt;code&gt;None&lt;/code&gt; , optimize = &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e79fca2ea019ea458b4a2a34c71b223a46dac92c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../print&quot;&gt;&lt;code&gt;tf.print&lt;/code&gt;&lt;/a&gt;(*&lt;strong&gt;inputs&lt;/strong&gt;, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd49c0d9d9b662574038142896e96515ed7094d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/dequantize&quot;&gt;&lt;code&gt;dequantize(...)&lt;/code&gt;&lt;/a&gt;: Dequantize the 'input' tensor into a float Tensor.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/dequantize&quot;&gt; &lt;code&gt;dequantize(...)&lt;/code&gt; &lt;/a&gt; : Деквантование тензора &amp;laquo;входных данных&amp;raquo; в тензор с плавающей запятой.</target>
        </trans-unit>
        <trans-unit id="80f63697de98f39fe8d07ae86d3d83bcdd0202a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/dequantize&quot;&gt;&lt;code&gt;dequantize(...)&lt;/code&gt;&lt;/a&gt;: Dequantize the 'input' tensor into a float or bfloat16 Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf34e1548636f350c47724ba422174a4669fbe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_args&quot;&gt;&lt;code&gt;fake_quant_with_min_max_args(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_args&quot;&gt; &lt;code&gt;fake_quant_with_min_max_args(...)&lt;/code&gt; &lt;/a&gt; : поддельное квантование тензора &amp;laquo;входов&amp;raquo;, введите float для тензора &amp;laquo;выходов&amp;raquo; того же типа.</target>
        </trans-unit>
        <trans-unit id="e6fb2f427874a32d88551ddb7e48a2a8685e9e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_args_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_args_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxArgs operation.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_args_gradient&quot;&gt; &lt;code&gt;fake_quant_with_min_max_args_gradient(...)&lt;/code&gt; &lt;/a&gt; : вычислить градиенты для операции FakeQuantWithMinMaxArgs.</target>
        </trans-unit>
        <trans-unit id="f8be3654afa2ed3394381434d67fd3c73ae135d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via global float scalars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3b76824ba19af051b3d084056fc8912575f748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars&quot;&gt; &lt;code&gt;fake_quant_with_min_max_vars(...)&lt;/code&gt; &lt;/a&gt; : поддельное квантование тензора 'входов' типа float с помощью глобальных скаляров float &lt;code&gt;min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b84cb81ad8c9da529cffd9d024de487f35542a99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVars operation.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_gradient&quot;&gt; &lt;code&gt;fake_quant_with_min_max_vars_gradient(...)&lt;/code&gt; &lt;/a&gt; : вычислить градиенты для операции FakeQuantWithMinMaxVars.</target>
        </trans-unit>
        <trans-unit id="603b0879471e904f644fae9f7869b510a25e6975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel&quot;&gt; &lt;code&gt;fake_quant_with_min_max_vars_per_channel(...)&lt;/code&gt; &lt;/a&gt; : поддельное квантование тензора 'входов' типа float и одной из форм: &lt;code&gt;[d]&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="52ccece1c9b13bcc2fb49053835c1fa40f2c249f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via per-channel floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abe00e87db0a0bda345adef0de50217828b7372" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVarsPerChannel operation.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel_gradient&quot;&gt; &lt;code&gt;fake_quant_with_min_max_vars_per_channel_gradient(...)&lt;/code&gt; &lt;/a&gt; : вычислить градиенты для операции FakeQuantWithMinMaxVarsPerChannel.</target>
        </trans-unit>
        <trans-unit id="48fda70215dc709939dddea98be951bacd823f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantize&quot;&gt;&lt;code&gt;quantize(...)&lt;/code&gt;&lt;/a&gt;: Quantize the 'input' tensor of type float to 'output' tensor of type 'T'.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/quantize&quot;&gt; &lt;code&gt;quantize(...)&lt;/code&gt; &lt;/a&gt; : квантовать тензор &amp;laquo;входной&amp;raquo; типа float в &amp;laquo;выходной&amp;raquo; тензор типа &amp;laquo;T&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="68edd1b27671d35c4aee956c48008bdbf3eedd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantize_and_dequantize&quot;&gt;&lt;code&gt;quantize_and_dequantize(...)&lt;/code&gt;&lt;/a&gt;: Quantizes then dequantizes a tensor.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/quantize_and_dequantize&quot;&gt; &lt;code&gt;quantize_and_dequantize(...)&lt;/code&gt; &lt;/a&gt; : квантует, а затем деквантовывает тензор.</target>
        </trans-unit>
        <trans-unit id="41f6645d02148d8205144574d7887dc83da788fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantized_concat&quot;&gt;&lt;code&gt;quantized_concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates quantized tensors along one dimension.</source>
          <target state="translated">&lt;a href=&quot;../../quantization/quantized_concat&quot;&gt; &lt;code&gt;quantized_concat(...)&lt;/code&gt; &lt;/a&gt; : объединяет квантованные тензоры по одному измерению.</target>
        </trans-unit>
        <trans-unit id="07ee190f55461b3a18c8a53dc378c1debb379d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/fifoqueue&quot;&gt;&lt;code&gt;class FIFOQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in first-in first-out order.</source>
          <target state="translated">&lt;a href=&quot;../../queue/fifoqueue&quot;&gt; &lt;code&gt;class FIFOQueue&lt;/code&gt; &lt;/a&gt; : реализация очереди, которая удаляет элементы из очереди в порядке очереди.</target>
        </trans-unit>
        <trans-unit id="8358510df6c87e8167d99b6f8fb4a619f62dadc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/paddingfifoqueue&quot;&gt;&lt;code&gt;class PaddingFIFOQueue&lt;/code&gt;&lt;/a&gt;: A FIFOQueue that supports batching variable-sized tensors by padding.</source>
          <target state="translated">&lt;a href=&quot;../../queue/paddingfifoqueue&quot;&gt; &lt;code&gt;class PaddingFIFOQueue&lt;/code&gt; &lt;/a&gt; : FIFOQueue, который поддерживает пакетирование тензоров переменного размера путем заполнения.</target>
        </trans-unit>
        <trans-unit id="997431819d983778f1b2003b78e7410c060c1bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/priorityqueue&quot;&gt;&lt;code&gt;class PriorityQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in prioritized order.</source>
          <target state="translated">&lt;a href=&quot;../../queue/priorityqueue&quot;&gt; &lt;code&gt;class PriorityQueue&lt;/code&gt; &lt;/a&gt; : реализация очереди, которая удаляет элементы из очереди в порядке приоритета.</target>
        </trans-unit>
        <trans-unit id="9e96b933e9ebc10cf9b71de610652d5a58f69106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/queuebase&quot;&gt;&lt;code&gt;class QueueBase&lt;/code&gt;&lt;/a&gt;: Base class for queue implementations.</source>
          <target state="translated">&lt;a href=&quot;../../queue/queuebase&quot;&gt; &lt;code&gt;class QueueBase&lt;/code&gt; &lt;/a&gt; : базовый класс для реализаций очереди.</target>
        </trans-unit>
        <trans-unit id="482f092aba2773e62c705f74cd48c573eb1e7aff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/randomshufflequeue&quot;&gt;&lt;code&gt;class RandomShuffleQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in a random order.</source>
          <target state="translated">&lt;a href=&quot;../../queue/randomshufflequeue&quot;&gt; &lt;code&gt;class RandomShuffleQueue&lt;/code&gt; &lt;/a&gt; : реализация очереди, которая удаляет элементы из очереди в случайном порядке.</target>
        </trans-unit>
        <trans-unit id="0ea58c0a2ace0ff559acdb4d7e8a182999203402" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/boolean_mask&quot;&gt;&lt;code&gt;boolean_mask(...)&lt;/code&gt;&lt;/a&gt;: Applies a boolean mask to &lt;code&gt;data&lt;/code&gt; without flattening the mask dimensions.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/boolean_mask&quot;&gt; &lt;code&gt;boolean_mask(...)&lt;/code&gt; &lt;/a&gt; : применяет логическую маску к &lt;code&gt;data&lt;/code&gt; без сглаживания размеров маски.</target>
        </trans-unit>
        <trans-unit id="8821521f2dfb6ce801d5cd65230ccee0039632e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/constant&quot;&gt;&lt;code&gt;constant(...)&lt;/code&gt;&lt;/a&gt;: Constructs a constant RaggedTensor from a nested Python list.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/constant&quot;&gt; &lt;code&gt;constant(...)&lt;/code&gt; &lt;/a&gt; : создает константу RaggedTensor из вложенного списка Python.</target>
        </trans-unit>
        <trans-unit id="2b8142e0f4398d68bd60dcb84ccbbaf528629c29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/cross&quot;&gt;&lt;code&gt;cross(...)&lt;/code&gt;&lt;/a&gt;: Generates feature cross from a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2cfd98041ddc1205aa2da925b6eabf2e1c9c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/cross_hashed&quot;&gt;&lt;code&gt;cross_hashed(...)&lt;/code&gt;&lt;/a&gt;: Generates hashed feature cross from a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bdba7250f8fa9f207d88d4041feb39ca68614f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/map_flat_values&quot;&gt;&lt;code&gt;map_flat_values(...)&lt;/code&gt;&lt;/a&gt;: Applies &lt;code&gt;op&lt;/code&gt; to the values of one or more RaggedTensors.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/map_flat_values&quot;&gt; &lt;code&gt;map_flat_values(...)&lt;/code&gt; &lt;/a&gt; : применяет &lt;code&gt;op&lt;/code&gt; к значениям одного или нескольких RaggedTensors.</target>
        </trans-unit>
        <trans-unit id="0940e2d0e83ac8fe6950faa57f86ab5778fdbc39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/map_flat_values&quot;&gt;&lt;code&gt;tf.ragged.map_flat_values(fn, rt)&lt;/code&gt;&lt;/a&gt; (if fn is expressible as TensorFlow ops)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee7e9c197b43e1cb2f041613dd641c89516efdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/range&quot;&gt;&lt;code&gt;range(...)&lt;/code&gt;&lt;/a&gt;: Returns a &lt;code&gt;RaggedTensor&lt;/code&gt; containing the specified sequences of numbers.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/range&quot;&gt; &lt;code&gt;range(...)&lt;/code&gt; &lt;/a&gt; : возвращает &lt;code&gt;RaggedTensor&lt;/code&gt; , содержащий указанные последовательности чисел.</target>
        </trans-unit>
        <trans-unit id="bb9df0595b696efec34bf49f1e1b509db7e524a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/row_splits_to_segment_ids&quot;&gt;&lt;code&gt;row_splits_to_segment_ids(...)&lt;/code&gt;&lt;/a&gt;: Generates the segmentation corresponding to a RaggedTensor &lt;code&gt;row_splits&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/row_splits_to_segment_ids&quot;&gt; &lt;code&gt;row_splits_to_segment_ids(...)&lt;/code&gt; &lt;/a&gt; : генерирует сегментацию, соответствующую RaggedTensor &lt;code&gt;row_splits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29c51a5e750aebbdf6eecbbb75baa5c8e98f7fc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/segment_ids_to_row_splits&quot;&gt;&lt;code&gt;segment_ids_to_row_splits(...)&lt;/code&gt;&lt;/a&gt;: Generates the RaggedTensor &lt;code&gt;row_splits&lt;/code&gt; corresponding to a segmentation.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/segment_ids_to_row_splits&quot;&gt; &lt;code&gt;segment_ids_to_row_splits(...)&lt;/code&gt; &lt;/a&gt; : генерирует RaggedTensor &lt;code&gt;row_splits&lt;/code&gt; , соответствующие сегментации.</target>
        </trans-unit>
        <trans-unit id="4b2af368cfaf8a0dd59cc24067d40063cd4dc2c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/stack&quot;&gt;&lt;code&gt;stack(...)&lt;/code&gt;&lt;/a&gt;: Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/stack&quot;&gt; &lt;code&gt;stack(...)&lt;/code&gt; &lt;/a&gt; : складывает списоктензоровранга &lt;code&gt;R&lt;/code&gt; в один &lt;code&gt;RaggedTensor&lt;/code&gt; ранга &lt;code&gt;(R+1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a08c86ecedb3217c9a701ec4dafe26f9f18269" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/stack_dynamic_partitions&quot;&gt;&lt;code&gt;stack_dynamic_partitions(...)&lt;/code&gt;&lt;/a&gt;: Stacks dynamic partitions of a Tensor or RaggedTensor.</source>
          <target state="translated">&lt;a href=&quot;../../ragged/stack_dynamic_partitions&quot;&gt; &lt;code&gt;stack_dynamic_partitions(...)&lt;/code&gt; &lt;/a&gt; : складывает динамические разделы Tensor или RaggedTensor.</target>
        </trans-unit>
        <trans-unit id="c00bca439313f5703d63eb3a100e212835823187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/algorithm&quot;&gt;&lt;code&gt;class Algorithm&lt;/code&gt;&lt;/a&gt;: An enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dda21e8696e28ad772078693ed74e0d0e572e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/all_candidate_sampler&quot;&gt;&lt;code&gt;all_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Generate the set of all classes.</source>
          <target state="translated">&lt;a href=&quot;../../random/all_candidate_sampler&quot;&gt; &lt;code&gt;all_candidate_sampler(...)&lt;/code&gt; &lt;/a&gt; : создать набор всех классов.</target>
        </trans-unit>
        <trans-unit id="5e291d989c580873167c9287b4b49362b9aea8e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/categorical&quot;&gt;&lt;code&gt;categorical(...)&lt;/code&gt;&lt;/a&gt;: Draws samples from a categorical distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/categorical&quot;&gt; &lt;code&gt;categorical(...)&lt;/code&gt; &lt;/a&gt; : выборка из категориального распределения.</target>
        </trans-unit>
        <trans-unit id="26d81c1754db30eb2df7d813f6cd2a0dd7c83a1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/create_rng_state&quot;&gt;&lt;code&gt;create_rng_state(...)&lt;/code&gt;&lt;/a&gt;: Creates a RNG state from an integer or a vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc9dbb7043f46950d32044656786183dcb85010" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/fixed_unigram_candidate_sampler&quot;&gt;&lt;code&gt;fixed_unigram_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using the provided (fixed) base distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/fixed_unigram_candidate_sampler&quot;&gt; &lt;code&gt;fixed_unigram_candidate_sampler(...)&lt;/code&gt; &lt;/a&gt; : выборка набора классов с использованием предоставленного (фиксированного) базового распределения.</target>
        </trans-unit>
        <trans-unit id="6b38580cadc23eca2375a880c9d843a72c9b4275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/gamma&quot;&gt;&lt;code&gt;gamma(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="translated">&lt;a href=&quot;../../random/gamma&quot;&gt; &lt;code&gt;gamma(...)&lt;/code&gt; &lt;/a&gt; : рисуетобразцы &lt;code&gt;shape&lt;/code&gt; из каждого из заданных гамма-распределения.</target>
        </trans-unit>
        <trans-unit id="d7154ba6e5bcb8b826b9c3354afc542097289098" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/generator&quot;&gt;&lt;code&gt;class Generator&lt;/code&gt;&lt;/a&gt;: Random-number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8490af5cb923abacaa1277a121c27d1dd429b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/get_global_generator&quot;&gt;&lt;code&gt;get_global_generator(...)&lt;/code&gt;&lt;/a&gt;: Retrieves the global generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8765d27cadf9987246302efe5eee32387b446fda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/learned_unigram_candidate_sampler&quot;&gt;&lt;code&gt;learned_unigram_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes from a distribution learned during training.</source>
          <target state="translated">&lt;a href=&quot;../../random/learned_unigram_candidate_sampler&quot;&gt; &lt;code&gt;learned_unigram_candidate_sampler(...)&lt;/code&gt; &lt;/a&gt; : выборка набора классов из распределения, изученного во время обучения.</target>
        </trans-unit>
        <trans-unit id="bf69f64cf3aeb548a0eb4f553df7e36680339d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/log_uniform_candidate_sampler&quot;&gt;&lt;code&gt;log_uniform_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using a log-uniform (Zipfian) base distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/log_uniform_candidate_sampler&quot;&gt; &lt;code&gt;log_uniform_candidate_sampler(...)&lt;/code&gt; &lt;/a&gt; : выборка набора классов с использованием логарифмически унифицированного (Zipfian) базового распределения.</target>
        </trans-unit>
        <trans-unit id="291802e2799aa60ac6e181911f1ef122126e4645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/normal&quot;&gt;&lt;code&gt;normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a normal distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/normal&quot;&gt; &lt;code&gt;normal(...)&lt;/code&gt; &lt;/a&gt; : выводит случайные значения из нормального распределения.</target>
        </trans-unit>
        <trans-unit id="5ab4f656b17b6444019d7ee82afe0e79143a1183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/poisson&quot;&gt;&lt;code&gt;poisson(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="translated">&lt;a href=&quot;../../random/poisson&quot;&gt; &lt;code&gt;poisson(...)&lt;/code&gt; &lt;/a&gt; : Рисуетобразцы &lt;code&gt;shape&lt;/code&gt; из каждого из заданных распределений Пуассона.</target>
        </trans-unit>
        <trans-unit id="b32caf98378217251f24d376615fd7ed4d0049dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/set_global_generator&quot;&gt;&lt;code&gt;set_global_generator(...)&lt;/code&gt;&lt;/a&gt;: Replaces the global generator with another &lt;code&gt;Generator&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95914a78f821e48b80e3f1a074b306a8ebfd4111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/set_seed&quot;&gt;&lt;code&gt;set_seed(...)&lt;/code&gt;&lt;/a&gt;: Sets the global random seed.</source>
          <target state="translated">&lt;a href=&quot;../../random/set_seed&quot;&gt; &lt;code&gt;set_seed(...)&lt;/code&gt; &lt;/a&gt; : устанавливает глобальное случайное начальное число.</target>
        </trans-unit>
        <trans-unit id="317f8a21811273d82d3f48356e633ee99b9722fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/shuffle&quot;&gt;&lt;code&gt;shuffle(...)&lt;/code&gt;&lt;/a&gt;: Randomly shuffles a tensor along its first dimension.</source>
          <target state="translated">&lt;a href=&quot;../../random/shuffle&quot;&gt; &lt;code&gt;shuffle(...)&lt;/code&gt; &lt;/a&gt; : случайным образом перемешивает тензор по его первому измерению.</target>
        </trans-unit>
        <trans-unit id="1a4de1cccecc1f29127998ef272fb79922b74704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_binomial&quot;&gt;&lt;code&gt;stateless_binomial(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a binomial distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbcd86977b5e132990acc444e1804e3e59cc927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_categorical&quot;&gt;&lt;code&gt;stateless_categorical(...)&lt;/code&gt;&lt;/a&gt;: Draws deterministic pseudorandom samples from a categorical distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/stateless_categorical&quot;&gt; &lt;code&gt;stateless_categorical(...)&lt;/code&gt; &lt;/a&gt; : рисует детерминированные псевдослучайные выборки из категориального распределения.</target>
        </trans-unit>
        <trans-unit id="7e4283bb8212b487eb246bda7520394b2b33124a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_gamma&quot;&gt;&lt;code&gt;stateless_gamma(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a gamma distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f75035734705b100bfc8ca7dbb82cfd18c6eee8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_normal&quot;&gt;&lt;code&gt;stateless_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a normal distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/stateless_normal&quot;&gt; &lt;code&gt;stateless_normal(...)&lt;/code&gt; &lt;/a&gt; : выводит детерминированные псевдослучайные значения из нормального распределения.</target>
        </trans-unit>
        <trans-unit id="c67267ccff25392604d91467661c9525a5f20a54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_parameterized_truncated_normal&quot;&gt;&lt;code&gt;stateless_parameterized_truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a truncated normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbe420b11d97a18415fff4bc95075f8c771b28f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_poisson&quot;&gt;&lt;code&gt;stateless_poisson(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a Poisson distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78b1743c923a72a1a6b024f294bda0824356636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_truncated_normal&quot;&gt;&lt;code&gt;stateless_truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values, truncated normally distributed.</source>
          <target state="translated">&lt;a href=&quot;../../random/stateless_truncated_normal&quot;&gt; &lt;code&gt;stateless_truncated_normal(...)&lt;/code&gt; &lt;/a&gt; : выводит детерминированные псевдослучайные значения, усеченные с нормальным распределением.</target>
        </trans-unit>
        <trans-unit id="7553f89003950318f3e7fd86ba6293d9d14f579c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_uniform&quot;&gt;&lt;code&gt;stateless_uniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a uniform distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/stateless_uniform&quot;&gt; &lt;code&gt;stateless_uniform(...)&lt;/code&gt; &lt;/a&gt; : выводит детерминированные псевдослучайные значения из равномерного распределения.</target>
        </trans-unit>
        <trans-unit id="7c184e42679f261f586ab35239563a8540145f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/truncated_normal&quot;&gt;&lt;code&gt;truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a truncated normal distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/truncated_normal&quot;&gt; &lt;code&gt;truncated_normal(...)&lt;/code&gt; &lt;/a&gt; : выводит случайные значения из усеченного нормального распределения.</target>
        </trans-unit>
        <trans-unit id="d6d4dea622a11a86fb4be4402e0cdbc94ad67067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/uniform&quot;&gt;&lt;code&gt;uniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a uniform distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/uniform&quot;&gt; &lt;code&gt;uniform(...)&lt;/code&gt; &lt;/a&gt; : выводит случайные значения из равномерного распределения.</target>
        </trans-unit>
        <trans-unit id="155dd429eaa3267477dddca4e68b33e032800a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/uniform_candidate_sampler&quot;&gt;&lt;code&gt;uniform_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using a uniform base distribution.</source>
          <target state="translated">&lt;a href=&quot;../../random/uniform_candidate_sampler&quot;&gt; &lt;code&gt;uniform_candidate_sampler(...)&lt;/code&gt; &lt;/a&gt; : выборки набора классов с использованием однородного базового распределения.</target>
        </trans-unit>
        <trans-unit id="072b3c08d61d91a6a893b85a1e93ee71e47c38ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../rank&quot;&gt;&lt;code&gt;tf.rank&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../../rank&quot;&gt; &lt;code&gt;tf.rank&lt;/code&gt; &lt;/a&gt; (&lt;strong&gt; ввод&lt;/strong&gt; , имя = &lt;code&gt;None&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="95ae9a5e594830cdbea69e82af41ea6baed01d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/abort&quot;&gt;&lt;code&gt;Abort(...)&lt;/code&gt;&lt;/a&gt;: Raise a exception to abort the process when called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3eaca8464f580087b43a0495bafe8c7d5670590" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/abs&quot;&gt;&lt;code&gt;Abs(...)&lt;/code&gt;&lt;/a&gt;: Computes the absolute value of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d90c41b310f66c922f12dbb55c28d99229c3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/accumulatenv2&quot;&gt;&lt;code&gt;AccumulateNV2(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise sum of a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6903ef3e1fb7650d960760f7d674b57d7fa59155" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/accumulatorapplygradient&quot;&gt;&lt;code&gt;AccumulatorApplyGradient(...)&lt;/code&gt;&lt;/a&gt;: Applies a gradient to a given accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b070a038279bb50764c9aae029ca81d909d31f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/accumulatornumaccumulated&quot;&gt;&lt;code&gt;AccumulatorNumAccumulated(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of gradients aggregated in the given accumulators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22c8f2249372389c4ae0451d674e79ce601b0f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/accumulatorsetglobalstep&quot;&gt;&lt;code&gt;AccumulatorSetGlobalStep(...)&lt;/code&gt;&lt;/a&gt;: Updates the accumulator with a new value for global_step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49974d6bb4470b3bbbd8d20fedcb44aa656631ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/accumulatortakegradient&quot;&gt;&lt;code&gt;AccumulatorTakeGradient(...)&lt;/code&gt;&lt;/a&gt;: Extracts the average gradient in the given ConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a094fafd2c02fd0f7ab3e96318bf06b6c88e1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/acos&quot;&gt;&lt;code&gt;Acos(...)&lt;/code&gt;&lt;/a&gt;: Computes acos of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826b2b086f096473e5ddb3549be8e31a0d88a803" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/acosh&quot;&gt;&lt;code&gt;Acosh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic cosine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4babfa91c5c8a34e3037680f5210ef19774e1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/add&quot;&gt;&lt;code&gt;Add(...)&lt;/code&gt;&lt;/a&gt;: Returns x + y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a648e9126f1d419d1f986ea73b0d288613abf5b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/addmanysparsetotensorsmap&quot;&gt;&lt;code&gt;AddManySparseToTensorsMap(...)&lt;/code&gt;&lt;/a&gt;: Add an &lt;code&gt;N&lt;/code&gt;-minibatch &lt;code&gt;SparseTensor&lt;/code&gt; to a &lt;code&gt;SparseTensorsMap&lt;/code&gt;, return &lt;code&gt;N&lt;/code&gt; handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba63369cba59fa81afe002918c9ceb39fb4833ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/addn&quot;&gt;&lt;code&gt;AddN(...)&lt;/code&gt;&lt;/a&gt;: Add all input tensors element wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41ad92f931b2d45915645ab34008d54e311f94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/addsparsetotensorsmap&quot;&gt;&lt;code&gt;AddSparseToTensorsMap(...)&lt;/code&gt;&lt;/a&gt;: Add a &lt;code&gt;SparseTensor&lt;/code&gt; to a &lt;code&gt;SparseTensorsMap&lt;/code&gt; return its handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78a76bfb78f7fc369e23a8640dddc883b997c58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/addv2&quot;&gt;&lt;code&gt;AddV2(...)&lt;/code&gt;&lt;/a&gt;: Returns x + y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f32136950d3bc1a1263591effb9a7afe9fdc150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/adjustcontrast&quot;&gt;&lt;code&gt;AdjustContrast(...)&lt;/code&gt;&lt;/a&gt;: Deprecated. Disallowed in GraphDef version &amp;gt;= 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b0c73364338043355f82c99326f126c2e36109" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/adjustcontrastv2&quot;&gt;&lt;code&gt;AdjustContrastv2(...)&lt;/code&gt;&lt;/a&gt;: Adjust the contrast of one or more images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c5036f99e040f5fa36b521485ea42d5240c27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/adjusthue&quot;&gt;&lt;code&gt;AdjustHue(...)&lt;/code&gt;&lt;/a&gt;: Adjust the hue of one or more images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503e50987e0f306422f0a48178989fd67caeb028" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/adjustsaturation&quot;&gt;&lt;code&gt;AdjustSaturation(...)&lt;/code&gt;&lt;/a&gt;: Adjust the saturation of one or more images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d5fefcd0997ff8f625b26b21bc9ea5c166a899" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/all&quot;&gt;&lt;code&gt;All(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical and&quot; of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe843092e7445156be5e6b1cf66a610250b4084" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/allcandidatesampler&quot;&gt;&lt;code&gt;AllCandidateSampler(...)&lt;/code&gt;&lt;/a&gt;: Generates labels for candidate sampling with a learned unigram distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eb77bb73559e45180529f3a07a09435811010d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/alltoall&quot;&gt;&lt;code&gt;AllToAll(...)&lt;/code&gt;&lt;/a&gt;: An Op to exchange data across TPU replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2a7448d439ec15daf838d3154c366d37b7bba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/angle&quot;&gt;&lt;code&gt;Angle(...)&lt;/code&gt;&lt;/a&gt;: Returns the argument of a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7921719eb6a2ddef19ef0806d2ef00df0687e57b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/anonymousiterator&quot;&gt;&lt;code&gt;AnonymousIterator(...)&lt;/code&gt;&lt;/a&gt;: A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89e9e770f35fa52f8ec972297df95aa579c291c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/anonymousiteratorv2&quot;&gt;&lt;code&gt;AnonymousIteratorV2(...)&lt;/code&gt;&lt;/a&gt;: A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3894b41897f43dbf8083df1a86b1581708d554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/anonymousmultideviceiterator&quot;&gt;&lt;code&gt;AnonymousMultiDeviceIterator(...)&lt;/code&gt;&lt;/a&gt;: A container for a multi device iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d595e475f5a5c29dfe2f2c459d87b102752ddb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/any&quot;&gt;&lt;code&gt;Any(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical or&quot; of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e745a8fc28df41c92c67953b21261479c6467bde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadadelta&quot;&gt;&lt;code&gt;ApplyAdadelta(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the adadelta scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd7caa831337155bd0491dd5bac21b72f25f267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadagrad&quot;&gt;&lt;code&gt;ApplyAdagrad(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the adagrad scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8390920fa9460a7e758181d0ff0ac51ab4fa636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadagradda&quot;&gt;&lt;code&gt;ApplyAdagradDA(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the proximal adagrad scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21c0a39f07e90520306d0efe31bcd9edd6a7001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadagradv2&quot;&gt;&lt;code&gt;ApplyAdagradV2(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the adagrad scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3628334169d7b661f9371aa1adaa5a7654cd2c38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadam&quot;&gt;&lt;code&gt;ApplyAdam(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the Adam algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86b7c6845a33bb70d56774a3c301d0c61e687c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyadamax&quot;&gt;&lt;code&gt;ApplyAdaMax(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the AdaMax algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad6e5d4794e03edef821b65d564e7ff0489e1c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyaddsign&quot;&gt;&lt;code&gt;ApplyAddSign(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the AddSign update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1504f20db799c7d3358ef59e3e972a910549f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applycenteredrmsprop&quot;&gt;&lt;code&gt;ApplyCenteredRMSProp(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the centered RMSProp algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ef57d0721985639633921c2d138854444b0955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyftrl&quot;&gt;&lt;code&gt;ApplyFtrl(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the Ftrl-proximal scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98be1102b753dbe3d776b10ae0fef685626ddb13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyftrlv2&quot;&gt;&lt;code&gt;ApplyFtrlV2(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the Ftrl-proximal scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fda5c166c70ae61d0cbcd57e1e7ee4ead1a069" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applygradientdescent&quot;&gt;&lt;code&gt;ApplyGradientDescent(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' by subtracting 'alpha' * 'delta' from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888b636008e0ff9a8f12c0d9940ed0fe6645232a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applymomentum&quot;&gt;&lt;code&gt;ApplyMomentum(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the momentum scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf859ac83ca224a84f6af63bb8ad316a2c063a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applypowersign&quot;&gt;&lt;code&gt;ApplyPowerSign(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the AddSign update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58053e3e899f95876b77a8508379b2f97c7c09cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyproximaladagrad&quot;&gt;&lt;code&gt;ApplyProximalAdagrad(...)&lt;/code&gt;&lt;/a&gt;: Update '&lt;em&gt;var' and '&lt;/em&gt;accum' according to FOBOS with Adagrad learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83ab6fe0abc78157b8fd63a958313d9eb60ee2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyproximalgradientdescent&quot;&gt;&lt;code&gt;ApplyProximalGradientDescent(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' as FOBOS algorithm with fixed learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c541f594f995d3a0046f438ff332e19d6fd55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/applyrmsprop&quot;&gt;&lt;code&gt;ApplyRMSProp(...)&lt;/code&gt;&lt;/a&gt;: Update '*var' according to the RMSProp algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade16a9c98dea2e1b698884aaeb1674dc806cfbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/approximateequal&quot;&gt;&lt;code&gt;ApproximateEqual(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of abs(x-y) &amp;lt; tolerance element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534707c95c1434ada2ae99e8d514e18819fd3a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/argmax&quot;&gt;&lt;code&gt;ArgMax(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the largest value across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eed36dc22eccf2b1b954d1ade1fb11b636a40e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/argmin&quot;&gt;&lt;code&gt;ArgMin(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the smallest value across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce28b5efa437fb97ddddf7dc8ef4ac99c204eb76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/asin&quot;&gt;&lt;code&gt;Asin(...)&lt;/code&gt;&lt;/a&gt;: Computes the trignometric inverse sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db142e900dbcd717599b7844b611b41728d4e80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/asinh&quot;&gt;&lt;code&gt;Asinh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24fe0bb884436b3872bd80a0273cdebe1c745e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assert&quot;&gt;&lt;code&gt;Assert(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given condition is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50130db033c9106b938137423585a3247893ecaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assertnextdataset&quot;&gt;&lt;code&gt;AssertNextDataset(...)&lt;/code&gt;&lt;/a&gt;: A transformation that asserts which transformations happen next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6109b493a118f116f6cda5fd70ebee3eaf078b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assign&quot;&gt;&lt;code&gt;Assign(...)&lt;/code&gt;&lt;/a&gt;: Update 'ref' by assigning 'value' to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2c7f7800f890d9e93dd5075d1e77d01d79a17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assignadd&quot;&gt;&lt;code&gt;AssignAdd(...)&lt;/code&gt;&lt;/a&gt;: Update 'ref' by adding 'value' to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32596cd6ce1d53d269789d41df544555897a0545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assignaddvariableop&quot;&gt;&lt;code&gt;AssignAddVariableOp(...)&lt;/code&gt;&lt;/a&gt;: Adds a value to the current value of a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69727966d829448d8955501b42a68251464eea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assignsub&quot;&gt;&lt;code&gt;AssignSub(...)&lt;/code&gt;&lt;/a&gt;: Update 'ref' by subtracting 'value' from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcd5160036a769d3c4eabd6aef6764216504506" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assignsubvariableop&quot;&gt;&lt;code&gt;AssignSubVariableOp(...)&lt;/code&gt;&lt;/a&gt;: Subtracts a value from the current value of a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8d15737fd87232baa9ddb895b92a238bfe576a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/assignvariableop&quot;&gt;&lt;code&gt;AssignVariableOp(...)&lt;/code&gt;&lt;/a&gt;: Assigns a new value to a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfb7bafc0ecc81ce93984cd58d4cb11bb5d1b14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/asstring&quot;&gt;&lt;code&gt;AsString(...)&lt;/code&gt;&lt;/a&gt;: Converts each entry in the given tensor to strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afe983a64f7f6652ab6ce3b9c0bc790e1357fcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/atan&quot;&gt;&lt;code&gt;Atan(...)&lt;/code&gt;&lt;/a&gt;: Computes the trignometric inverse tangent of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f70a0508f594302eb388793b2ab92f2e0d25c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/atan2&quot;&gt;&lt;code&gt;Atan2(...)&lt;/code&gt;&lt;/a&gt;: Computes arctangent of &lt;code&gt;y/x&lt;/code&gt; element-wise, respecting signs of the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9daddc0b777ca80cace66b9f4572b55f08a3e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/atanh&quot;&gt;&lt;code&gt;Atanh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic tangent of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844acfdf0515e1d055168a8820cbc8682ddbb633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/audiospectrogram&quot;&gt;&lt;code&gt;AudioSpectrogram(...)&lt;/code&gt;&lt;/a&gt;: Produces a visualization of audio data over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785306f3d0243a47ab156597c38892bdc9c31f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/audiosummary&quot;&gt;&lt;code&gt;AudioSummary(...)&lt;/code&gt;&lt;/a&gt;: Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fc10a468e783c68515c46785e10258ed78f339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/audiosummaryv2&quot;&gt;&lt;code&gt;AudioSummaryV2(...)&lt;/code&gt;&lt;/a&gt;: Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0042e729d84e32315679792da283e1c2801d761b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/autosharddataset&quot;&gt;&lt;code&gt;AutoShardDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that shards the input dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e10f2544253cecbe77cb94c950ca254e8a1a0d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/avgpool&quot;&gt;&lt;code&gt;AvgPool(...)&lt;/code&gt;&lt;/a&gt;: Performs average pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e381e523805deb76732b7734d528e3b7d587c4af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/avgpool3d&quot;&gt;&lt;code&gt;AvgPool3D(...)&lt;/code&gt;&lt;/a&gt;: Performs 3D average pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b855adad25ad5769204d411a14348bea9b54cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/avgpool3dgrad&quot;&gt;&lt;code&gt;AvgPool3DGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of average pooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497e9819d6f2e0d0433957b192b00eb2b3ac633f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/avgpoolgrad&quot;&gt;&lt;code&gt;AvgPoolGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of the average pooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ca2e415ca45ccd06f6a48c31c87ea26bafd5dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barrier&quot;&gt;&lt;code&gt;Barrier(...)&lt;/code&gt;&lt;/a&gt;: Defines a barrier that persists across different graph executions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4b81a4517360fd0726edefebfad5d92f85338c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barrierclose&quot;&gt;&lt;code&gt;BarrierClose(...)&lt;/code&gt;&lt;/a&gt;: Closes the given barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9dc5a81adde2cdf12fd0353622f8a6d8375627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barrierincompletesize&quot;&gt;&lt;code&gt;BarrierIncompleteSize(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of incomplete elements in the given barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba583110f0c07d32cac6f0bd8762fd7aca251e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barrierinsertmany&quot;&gt;&lt;code&gt;BarrierInsertMany(...)&lt;/code&gt;&lt;/a&gt;: For each key, assigns the respective value to the specified component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50adce8e081056ee559e419525a907dccbf9ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barrierreadysize&quot;&gt;&lt;code&gt;BarrierReadySize(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of complete elements in the given barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f42309ad599d55fdbf7750609a388781074d92e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/barriertakemany&quot;&gt;&lt;code&gt;BarrierTakeMany(...)&lt;/code&gt;&lt;/a&gt;: Takes the given number of completed elements from a barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2659e0211cc40c8096bbc613e5327baaf33c4c05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batch&quot;&gt;&lt;code&gt;Batch(...)&lt;/code&gt;&lt;/a&gt;: Batches all input tensors nondeterministically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdd80c1c024973d45d1a3f03b0c33ac28452009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchdataset&quot;&gt;&lt;code&gt;BatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches &lt;code&gt;batch_size&lt;/code&gt; elements from &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaa903d2efec7266633d5b7b2331f5ae21fc3c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchdatasetv2&quot;&gt;&lt;code&gt;BatchDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches &lt;code&gt;batch_size&lt;/code&gt; elements from &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9957339883941b366b73d0900067107f4c7ee417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchfunction&quot;&gt;&lt;code&gt;BatchFunction(...)&lt;/code&gt;&lt;/a&gt;: Batches all the inputs tensors to the computation done by the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033050255cca176af550770ed124112a897afb11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchmatmul&quot;&gt;&lt;code&gt;BatchMatMul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies slices of two tensors in batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169a2d1b0dc690d6b4c640c03e113d06aa1bc6f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchmatmulv2&quot;&gt;&lt;code&gt;BatchMatMulV2(...)&lt;/code&gt;&lt;/a&gt;: Multiplies slices of two tensors in batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a4ea5c4a296914d2d510eb5c60c9a1ec5ceb6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchnormwithglobalnormalization&quot;&gt;&lt;code&gt;BatchNormWithGlobalNormalization(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f482d9e5d084ce85bba3115ffe7826c742f1f0dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchnormwithglobalnormalizationgrad&quot;&gt;&lt;code&gt;BatchNormWithGlobalNormalizationGrad(...)&lt;/code&gt;&lt;/a&gt;: Gradients for batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd3a86dcbb1c69e318b89d0c6b029ec4de5648a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchtospace&quot;&gt;&lt;code&gt;BatchToSpace(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for 4-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace69d74b6c0af08b5151eadb2c22484df4f7dd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/batchtospacend&quot;&gt;&lt;code&gt;BatchToSpaceND(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dacb6d1e491829e076783c0e0a7bb7bd3f41ce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/betainc&quot;&gt;&lt;code&gt;Betainc(...)&lt;/code&gt;&lt;/a&gt;: Compute the regularized incomplete beta integral \(I_x(a, b)\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d062ecae996647ba10522a2cc3ed5774223eb11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/biasadd&quot;&gt;&lt;code&gt;BiasAdd(...)&lt;/code&gt;&lt;/a&gt;: Adds &lt;code&gt;bias&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0598faf2b31336d516cc16a1d72231f7d1957e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/biasaddgrad&quot;&gt;&lt;code&gt;BiasAddGrad(...)&lt;/code&gt;&lt;/a&gt;: The backward operation for &quot;BiasAdd&quot; on the &quot;bias&quot; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1795127ff879087b8dc6ccd4cd82a7fc19d9be7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/biasaddv1&quot;&gt;&lt;code&gt;BiasAddV1(...)&lt;/code&gt;&lt;/a&gt;: Adds &lt;code&gt;bias&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14381ab4ab48d0f69d05b74b465228282aec754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bincount&quot;&gt;&lt;code&gt;Bincount(...)&lt;/code&gt;&lt;/a&gt;: Counts the number of occurrences of each value in an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aab32ead13442af6639fa810191553fd6c32bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bitcast&quot;&gt;&lt;code&gt;Bitcast(...)&lt;/code&gt;&lt;/a&gt;: Bitcasts a tensor from one type to another without copying data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55de86d8d4b2ba38754c477d4bfb956a7438065c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bitwiseand&quot;&gt;&lt;code&gt;BitwiseAnd(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise AND of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53e903ac2886f95aa5ca2ae1c2dec1dfeb97ecf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bitwiseor&quot;&gt;&lt;code&gt;BitwiseOr(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise OR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1d7a5ee630eab9d73aa9f7262270e1f9e31cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bitwisexor&quot;&gt;&lt;code&gt;BitwiseXor(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise XOR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f670284a73e246d164197826661b4ef83dc15b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/blocklstm&quot;&gt;&lt;code&gt;BlockLSTM(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell forward propagation for all the time steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9e58c892b2bccf84caca258681f43d5f2618d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/blocklstmgrad&quot;&gt;&lt;code&gt;BlockLSTMGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell backward propagation for the entire time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed7aa26c55939b6ac376fa20f651d6f85836c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/blocklstmgradv2&quot;&gt;&lt;code&gt;BlockLSTMGradV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell backward propagation for the entire time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6521ac27b1de783f768f5092cd68830b1c9ab8dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/blocklstmv2&quot;&gt;&lt;code&gt;BlockLSTMV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell forward propagation for all the time steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783516fdf85075201d60a1c3542c30022cd329ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesaggregatestats&quot;&gt;&lt;code&gt;BoostedTreesAggregateStats(...)&lt;/code&gt;&lt;/a&gt;: Aggregates the summary of accumulated stats for the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f365bf514694bdbb6fe48f90b3d17f36846b46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesbucketize&quot;&gt;&lt;code&gt;BoostedTreesBucketize(...)&lt;/code&gt;&lt;/a&gt;: Bucketize each feature based on bucket boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65703acd0a16d6e998084f9ae166da765f09e096" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescalculatebestfeaturesplit&quot;&gt;&lt;code&gt;BoostedTreesCalculateBestFeatureSplit(...)&lt;/code&gt;&lt;/a&gt;: Calculates gains for each feature and returns the best possible split information for the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6658b6de1614ea7a733b57e7c2771207ac5789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescalculatebestfeaturesplitv2&quot;&gt;&lt;code&gt;BoostedTreesCalculateBestFeatureSplitV2(...)&lt;/code&gt;&lt;/a&gt;: Calculates gains for each feature and returns the best possible split information for each node. However, if no split is found, then no split information is returned for that node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9184de4de75dc8751515ae9a500ae9010e9c5793" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescalculatebestgainsperfeature&quot;&gt;&lt;code&gt;BoostedTreesCalculateBestGainsPerFeature(...)&lt;/code&gt;&lt;/a&gt;: Calculates gains for each feature and returns the best possible split information for the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1315e63fbb7a90102f509e03decce7969537f409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescenterbias&quot;&gt;&lt;code&gt;BoostedTreesCenterBias(...)&lt;/code&gt;&lt;/a&gt;: Calculates the prior from the training data (the bias) and fills in the first node with the logits' prior. Returns a boolean indicating whether to continue centering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790e47dd0442d6cc9738048bc9a72e101441164b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescreateensemble&quot;&gt;&lt;code&gt;BoostedTreesCreateEnsemble(...)&lt;/code&gt;&lt;/a&gt;: Creates a tree ensemble model and returns a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeaa7b6c632f3a388c339f7d9854ab3e5d0a7db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreescreatequantilestreamresource&quot;&gt;&lt;code&gt;BoostedTreesCreateQuantileStreamResource(...)&lt;/code&gt;&lt;/a&gt;: Create the Resource for Quantile Streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3494cd926c65889a8cf6ec5117f0c5c7264dc6c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesdeserializeensemble&quot;&gt;&lt;code&gt;BoostedTreesDeserializeEnsemble(...)&lt;/code&gt;&lt;/a&gt;: Deserializes a serialized tree ensemble config and replaces current tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9036f862e8fde1c6c5bbdb8983ff7cfed1c8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesensembleresourcehandleop&quot;&gt;&lt;code&gt;BoostedTreesEnsembleResourceHandleOp(...)&lt;/code&gt;&lt;/a&gt;: Creates a handle to a BoostedTreesEnsembleResource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291b74a4acf04fc78fe6bd5e25eee7d695e22391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesexampledebugoutputs&quot;&gt;&lt;code&gt;BoostedTreesExampleDebugOutputs(...)&lt;/code&gt;&lt;/a&gt;: Debugging/model interpretability outputs for each example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcebf87c69588de64b16fd6f2038eca364e11d86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesflushquantilesummaries&quot;&gt;&lt;code&gt;BoostedTreesFlushQuantileSummaries(...)&lt;/code&gt;&lt;/a&gt;: Flush the quantile summaries from each quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83262dab33905c024f044806d5366323de393e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesgetensemblestates&quot;&gt;&lt;code&gt;BoostedTreesGetEnsembleStates(...)&lt;/code&gt;&lt;/a&gt;: Retrieves the tree ensemble resource stamp token, number of trees and growing statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22a3792e11e43472ed89186003542afdbd4f1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesmakequantilesummaries&quot;&gt;&lt;code&gt;BoostedTreesMakeQuantileSummaries(...)&lt;/code&gt;&lt;/a&gt;: Makes the summary of quantiles for the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8beb34934afe8f953071b11842e9ec7ffa7eed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesmakestatssummary&quot;&gt;&lt;code&gt;BoostedTreesMakeStatsSummary(...)&lt;/code&gt;&lt;/a&gt;: Makes the summary of accumulated stats for the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5983cc294cc448fda5fe6a8280844a5a7ff719d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreespredict&quot;&gt;&lt;code&gt;BoostedTreesPredict(...)&lt;/code&gt;&lt;/a&gt;: Runs multiple additive regression ensemble predictors on input instances and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1f5b0ad2af40f88354d7cf41637a8f3508fa0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesquantilestreamresourceaddsummaries&quot;&gt;&lt;code&gt;BoostedTreesQuantileStreamResourceAddSummaries(...)&lt;/code&gt;&lt;/a&gt;: Add the quantile summaries to each quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7f62a0262add885a1e3fc2fb358bd60893ed8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesquantilestreamresourcedeserialize&quot;&gt;&lt;code&gt;BoostedTreesQuantileStreamResourceDeserialize(...)&lt;/code&gt;&lt;/a&gt;: Deserialize bucket boundaries and ready flag into current QuantileAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887e086202f2a0f59e6c99a42b700c2c5bca739f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesquantilestreamresourceflush&quot;&gt;&lt;code&gt;BoostedTreesQuantileStreamResourceFlush(...)&lt;/code&gt;&lt;/a&gt;: Flush the summaries for a quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827b7ed888508958f12846c0162b6769515e90d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesquantilestreamresourcegetbucketboundaries&quot;&gt;&lt;code&gt;BoostedTreesQuantileStreamResourceGetBucketBoundaries(...)&lt;/code&gt;&lt;/a&gt;: Generate the bucket boundaries for each feature based on accumulated summaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9db247c63c0d43cf6cfa74bfdfbaf5fd3d49db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesquantilestreamresourcehandleop&quot;&gt;&lt;code&gt;BoostedTreesQuantileStreamResourceHandleOp(...)&lt;/code&gt;&lt;/a&gt;: Creates a handle to a BoostedTreesQuantileStreamResource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742aeb0d62293a7050fc7c484324ab35c926f229" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesserializeensemble&quot;&gt;&lt;code&gt;BoostedTreesSerializeEnsemble(...)&lt;/code&gt;&lt;/a&gt;: Serializes the tree ensemble to a proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6366b02f85cc542ed0c2c704e4648bbc9ca580d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreessparseaggregatestats&quot;&gt;&lt;code&gt;BoostedTreesSparseAggregateStats(...)&lt;/code&gt;&lt;/a&gt;: Aggregates the summary of accumulated stats for the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29873237db74fa5f69deff6fc59a7b214158afe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreessparsecalculatebestfeaturesplit&quot;&gt;&lt;code&gt;BoostedTreesSparseCalculateBestFeatureSplit(...)&lt;/code&gt;&lt;/a&gt;: Calculates gains for each feature and returns the best possible split information for the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c9cf0c39daaa18d09700e5695414f2efe1de84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreestrainingpredict&quot;&gt;&lt;code&gt;BoostedTreesTrainingPredict(...)&lt;/code&gt;&lt;/a&gt;: Runs multiple additive regression ensemble predictors on input instances and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d932da0f60a362d5d0e169ff5bcff9671ebe10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesupdateensemble&quot;&gt;&lt;code&gt;BoostedTreesUpdateEnsemble(...)&lt;/code&gt;&lt;/a&gt;: Updates the tree ensemble by either adding a layer to the last tree being grown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdbaf711819dddba82b96127889c9a1f56e1cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/boostedtreesupdateensemblev2&quot;&gt;&lt;code&gt;BoostedTreesUpdateEnsembleV2(...)&lt;/code&gt;&lt;/a&gt;: Updates the tree ensemble by adding a layer to the last tree being grown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabbe85102b12d2c1297acf3c2cf8ac06743e929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/broadcastargs&quot;&gt;&lt;code&gt;BroadcastArgs(...)&lt;/code&gt;&lt;/a&gt;: Return the shape of s0 op s1 with broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c037528bd4121c219c3cc51056c2c19cad6291d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/broadcastgradientargs&quot;&gt;&lt;code&gt;BroadcastGradientArgs(...)&lt;/code&gt;&lt;/a&gt;: Return the reduction indices for computing gradients of s0 op s1 with broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa03ab81d56501b0585125d7faad97eca0c9259f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/broadcastto&quot;&gt;&lt;code&gt;BroadcastTo(...)&lt;/code&gt;&lt;/a&gt;: Broadcast an array for a compatible shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d72f5b70cdafca9f30e78d7d33076046c9a566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bucketize&quot;&gt;&lt;code&gt;Bucketize(...)&lt;/code&gt;&lt;/a&gt;: Bucketizes 'input' based on 'boundaries'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb87482c0c1b5e66c98d207478b33cbb924e090" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/bytesproducedstatsdataset&quot;&gt;&lt;code&gt;BytesProducedStatsDataset(...)&lt;/code&gt;&lt;/a&gt;: Records the bytes size of each element of &lt;code&gt;input_dataset&lt;/code&gt; in a StatsAggregator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906471f8e479af21e93a7f1b8bb9c909a9cae35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cachedataset&quot;&gt;&lt;code&gt;CacheDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that caches elements from &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73f4b7ede592a2813d9010e9f25635ae1060b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/case&quot;&gt;&lt;code&gt;Case(...)&lt;/code&gt;&lt;/a&gt;: An n-way switch statement which calls a single branch function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c5de386ef80f679dd6e58da4424d78fb0b801e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cast&quot;&gt;&lt;code&gt;Cast(...)&lt;/code&gt;&lt;/a&gt;: Cast x of type SrcT to y of DstT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061dce635bda7f323203d3e9dcd94654b590b49e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ceil&quot;&gt;&lt;code&gt;Ceil(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise smallest integer not less than x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078791fa99896ce5b9dfa543f4b93461034b2d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/checknumerics&quot;&gt;&lt;code&gt;CheckNumerics(...)&lt;/code&gt;&lt;/a&gt;: Checks a tensor for NaN and Inf values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25a24ab7778aa9420ab76e5e7a634ab2dcb2838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/checknumericsv2&quot;&gt;&lt;code&gt;CheckNumericsV2(...)&lt;/code&gt;&lt;/a&gt;: Checks a tensor for NaN, -Inf and +Inf values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04d1baaaba90a2cde6f3a3aa209c5a136f375e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cholesky&quot;&gt;&lt;code&gt;Cholesky(...)&lt;/code&gt;&lt;/a&gt;: Computes the Cholesky decomposition of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cea332611a434da3a0cb77b57b93e3dd157cff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/choleskygrad&quot;&gt;&lt;code&gt;CholeskyGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the reverse mode backpropagated gradient of the Cholesky algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4143de830f2236bdf550628d0406794ccdc92fdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/clipbyvalue&quot;&gt;&lt;code&gt;ClipByValue(...)&lt;/code&gt;&lt;/a&gt;: Clips tensor values to a specified min and max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cc392d5f8b9f91683be44cde7befb8fa0348f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/collectivebcastrecv&quot;&gt;&lt;code&gt;CollectiveBcastRecv(...)&lt;/code&gt;&lt;/a&gt;: Receives a tensor value broadcast from another device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9f3936c199125e7d6f493b3977d2cb3ec71d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/collectivebcastsend&quot;&gt;&lt;code&gt;CollectiveBcastSend(...)&lt;/code&gt;&lt;/a&gt;: Broadcasts a tensor value to one or more other devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522c18cfe50e35861bac3486710b248e0929e23f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/collectivegather&quot;&gt;&lt;code&gt;CollectiveGather(...)&lt;/code&gt;&lt;/a&gt;: Mutually accumulates multiple tensors of identical type and shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca03f1fff4c8110d4fe3b10ffffb954a80f24006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/collectivepermute&quot;&gt;&lt;code&gt;CollectivePermute(...)&lt;/code&gt;&lt;/a&gt;: An Op to permute tensors across replicated TPU instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80392ab07f8c1d0cbd1b36fc99b37b8191056a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/collectivereduce&quot;&gt;&lt;code&gt;CollectiveReduce(...)&lt;/code&gt;&lt;/a&gt;: Mutually reduces multiple tensors of identical type and shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13e3018bec7efce0fcfb825b9d3f25c5238e3df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/combinednonmaxsuppression&quot;&gt;&lt;code&gt;CombinedNonMaxSuppression(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a939689c63dd165be249e07629d43a66302b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/compareandbitpack&quot;&gt;&lt;code&gt;CompareAndBitpack(...)&lt;/code&gt;&lt;/a&gt;: Compare values of &lt;code&gt;input&lt;/code&gt; to &lt;code&gt;threshold&lt;/code&gt; and pack resulting bits into a &lt;code&gt;uint8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c772519f3b035913f5df66aab0698e15538ee04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/complex&quot;&gt;&lt;code&gt;Complex(...)&lt;/code&gt;&lt;/a&gt;: Converts two real numbers to a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c76bd8a1b2bc43de4dadf0a01e8c3dae8d9bb01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/complexabs&quot;&gt;&lt;code&gt;ComplexAbs(...)&lt;/code&gt;&lt;/a&gt;: Computes the complex absolute value of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe910f0c2f5339300ac81ad0262bc048307ad00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/compresselement&quot;&gt;&lt;code&gt;CompressElement(...)&lt;/code&gt;&lt;/a&gt;: Compresses a dataset element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf33d73624acf2fe8357100b624407c3fdf24df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/computeaccidentalhits&quot;&gt;&lt;code&gt;ComputeAccidentalHits(...)&lt;/code&gt;&lt;/a&gt;: Computes the ids of the positions in sampled_candidates that match true_labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cbaeb607aab38b0cd100efa3a8b66010e7c4ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/concat&quot;&gt;&lt;code&gt;Concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd8a3ef8d372b93f37c33a559976ff631953645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/concatenatedataset&quot;&gt;&lt;code&gt;ConcatenateDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that concatenates &lt;code&gt;input_dataset&lt;/code&gt; with &lt;code&gt;another_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a1f032c14e50a08171c257dbf23423a533fe3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/concatoffset&quot;&gt;&lt;code&gt;ConcatOffset(...)&lt;/code&gt;&lt;/a&gt;: Computes offsets of concat inputs within its output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb368a41102f5890905c881cd21db596d7c2cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/concatv2&quot;&gt;&lt;code&gt;ConcatV2(...)&lt;/code&gt;&lt;/a&gt;: Concatenates tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f351dbfa3a2b56969e7c8786d392804dd538c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conditionalaccumulator&quot;&gt;&lt;code&gt;ConditionalAccumulator(...)&lt;/code&gt;&lt;/a&gt;: A conditional accumulator for aggregating gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac98b5d02aa75b31b6452b69d352091a30246814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/configuredistributedtpu&quot;&gt;&lt;code&gt;ConfigureDistributedTPU(...)&lt;/code&gt;&lt;/a&gt;: Sets up the centralized structures for a distributed TPU system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec300cd58328a690d1cc49d863f818e0cd781941" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/configuretpuembedding&quot;&gt;&lt;code&gt;ConfigureTPUEmbedding(...)&lt;/code&gt;&lt;/a&gt;: Sets up TPUEmbedding in a distributed TPU system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643cefe6ffdaa5f596357bf6cb49eb58231717ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conj&quot;&gt;&lt;code&gt;Conj(...)&lt;/code&gt;&lt;/a&gt;: Returns the complex conjugate of a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e5219ab38bbb99a81a4b5d5e99ece1bb3c7498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conjugatetranspose&quot;&gt;&lt;code&gt;ConjugateTranspose(...)&lt;/code&gt;&lt;/a&gt;: Shuffle dimensions of x according to a permutation and conjugate the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f170874e4a4cd0144ebb8c1e8d9ae36e17ee325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/const&quot;&gt;&lt;code&gt;Const(...)&lt;/code&gt;&lt;/a&gt;: Returns a constant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2e70f54b580cc38935ff4fe7f1eb917e3fbb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/consumemutexlock&quot;&gt;&lt;code&gt;ConsumeMutexLock(...)&lt;/code&gt;&lt;/a&gt;: This op consumes a lock created by &lt;code&gt;MutexLock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77226cae036a0d7f1fb75c320d25e33713e1a1df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/controltrigger&quot;&gt;&lt;code&gt;ControlTrigger(...)&lt;/code&gt;&lt;/a&gt;: Does nothing. Serves as a control trigger for scheduling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5664f64ebb84f8cb0f32d17445ef4fb2a7af01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv2d&quot;&gt;&lt;code&gt;Conv2D(...)&lt;/code&gt;&lt;/a&gt;: Computes a 2-D convolution given 4-D &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68caf1b6bfd3e5911e9454ad075f82f8f748c7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv2dbackpropfilter&quot;&gt;&lt;code&gt;Conv2DBackpropFilter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of convolution with respect to the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ee61aeb074a5949b031b4409ecefc9ead2bb62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv2dbackpropinput&quot;&gt;&lt;code&gt;Conv2DBackpropInput(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of convolution with respect to the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba09812156ddab10e04814951fc1d3c645b34c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv3d&quot;&gt;&lt;code&gt;Conv3D(...)&lt;/code&gt;&lt;/a&gt;: Computes a 3-D convolution given 5-D &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82a1014537cecdb4038b3639280734d87b2202c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv3dbackpropfilter&quot;&gt;&lt;code&gt;Conv3DBackpropFilter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of 3-D convolution with respect to the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff8ea1544ad0fe9e4ca99399d7485e952e49efc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv3dbackpropfilterv2&quot;&gt;&lt;code&gt;Conv3DBackpropFilterV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of 3-D convolution with respect to the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dcdc158c6fef9153e4c920121dbbe029575e0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv3dbackpropinput&quot;&gt;&lt;code&gt;Conv3DBackpropInput(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of 3-D convolution with respect to the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eece0a4cf4ebbc0ae9a8bd3d5f5cc9321ed7b291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/conv3dbackpropinputv2&quot;&gt;&lt;code&gt;Conv3DBackpropInputV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of 3-D convolution with respect to the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc17578b2e91be2203d4afc8d5b0b7bf92c9c4b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/copy&quot;&gt;&lt;code&gt;Copy(...)&lt;/code&gt;&lt;/a&gt;: Copy a tensor from CPU-to-CPU or GPU-to-GPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c1370806f1fe5728e8a423a6f56007e554e72a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/copyhost&quot;&gt;&lt;code&gt;CopyHost(...)&lt;/code&gt;&lt;/a&gt;: Copy a tensor to host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f97f806ba909b0a1e7777ebc0c094ebcffb99c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cos&quot;&gt;&lt;code&gt;Cos(...)&lt;/code&gt;&lt;/a&gt;: Computes cos of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9264f284b083b12991626d04f9189bc82f5b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cosh&quot;&gt;&lt;code&gt;Cosh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic cosine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2264a4048966716af92b96bdba18e36038613c0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/countupto&quot;&gt;&lt;code&gt;CountUpTo(...)&lt;/code&gt;&lt;/a&gt;: Increments 'ref' until it reaches 'limit'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a68ee5fe4c8afcf1efc2a9a0cdb93c5f73c417e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cropandresize&quot;&gt;&lt;code&gt;CropAndResize(...)&lt;/code&gt;&lt;/a&gt;: Extracts crops from the input image tensor and resizes them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf19f0204ac8d5dd3fdf4fbedb41dbb1be6198bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cropandresizegradboxes&quot;&gt;&lt;code&gt;CropAndResizeGradBoxes(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient of the crop_and_resize op wrt the input boxes tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f0aec22c03c283e9fe7677c253639aabe499ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cropandresizegradimage&quot;&gt;&lt;code&gt;CropAndResizeGradImage(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient of the crop_and_resize op wrt the input image tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bd7528ee288b51306fcadcfb657424aa1c2066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cross&quot;&gt;&lt;code&gt;Cross(...)&lt;/code&gt;&lt;/a&gt;: Compute the pairwise cross product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3ce7822439aeeabb3ddcc63623b12b8dab419b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/crossreplicasum&quot;&gt;&lt;code&gt;CrossReplicaSum(...)&lt;/code&gt;&lt;/a&gt;: An Op to sum inputs across replicated TPU instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409fc9985b696ac84d94f138b06cb926a0390221" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/csrsparsematrixcomponents&quot;&gt;&lt;code&gt;CSRSparseMatrixComponents(...)&lt;/code&gt;&lt;/a&gt;: Reads out the CSR components at batch &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3196159b4ead7d682dbe43026176c02adc92f75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/csrsparsematrixtodense&quot;&gt;&lt;code&gt;CSRSparseMatrixToDense(...)&lt;/code&gt;&lt;/a&gt;: Convert a (possibly batched) CSRSparseMatrix to dense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e297900cfbc9e765134bcb2b8601dd302b76ca7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/csrsparsematrixtosparsetensor&quot;&gt;&lt;code&gt;CSRSparseMatrixToSparseTensor(...)&lt;/code&gt;&lt;/a&gt;: Converts a (possibly batched) CSRSparesMatrix to a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9207231470eecfae9f3d039cebda65b720bcba7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ctcbeamsearchdecoder&quot;&gt;&lt;code&gt;CTCBeamSearchDecoder(...)&lt;/code&gt;&lt;/a&gt;: Performs beam search decoding on the logits given in input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bef060380667c09e61bac28e766bc1600ea3035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ctcgreedydecoder&quot;&gt;&lt;code&gt;CTCGreedyDecoder(...)&lt;/code&gt;&lt;/a&gt;: Performs greedy decoding on the logits given in inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc58bf1e5e8979d6fe51242148716dd8c3bfefc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ctcloss&quot;&gt;&lt;code&gt;CTCLoss(...)&lt;/code&gt;&lt;/a&gt;: Calculates the CTC Loss (log probability) for each batch entry. Also calculates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bc00f9fbb9023b70df0b8d19313ecb7eaece2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ctclossv2&quot;&gt;&lt;code&gt;CTCLossV2(...)&lt;/code&gt;&lt;/a&gt;: Calculates the CTC Loss (log probability) for each batch entry. Also calculates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c04b6c59342d6bf8c277d0749b2cb8c3c5e50c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnn&quot;&gt;&lt;code&gt;CudnnRNN(...)&lt;/code&gt;&lt;/a&gt;: A RNN backed by cuDNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26ac66e50ec0d86284a38bedc952b8077af4b8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnbackprop&quot;&gt;&lt;code&gt;CudnnRNNBackprop(...)&lt;/code&gt;&lt;/a&gt;: Backprop step of CudnnRNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7625b64a73e318899ce97e4548ef1ab50a4564ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnbackpropv2&quot;&gt;&lt;code&gt;CudnnRNNBackpropV2(...)&lt;/code&gt;&lt;/a&gt;: Backprop step of CudnnRNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecf15cfe90f1be7b999a2b6041edef9ec4741d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnbackpropv3&quot;&gt;&lt;code&gt;CudnnRNNBackpropV3(...)&lt;/code&gt;&lt;/a&gt;: Backprop step of CudnnRNNV3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aa2b92912168bda2ec6ab2472bba030fdc1ac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnncanonicaltoparams&quot;&gt;&lt;code&gt;CudnnRNNCanonicalToParams(...)&lt;/code&gt;&lt;/a&gt;: Converts CudnnRNN params from canonical form to usable form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae0d027fea2cf362afe4d9c25c97f8477d53c7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnncanonicaltoparamsv2&quot;&gt;&lt;code&gt;CudnnRNNCanonicalToParamsV2(...)&lt;/code&gt;&lt;/a&gt;: Converts CudnnRNN params from canonical form to usable form. It supports the projection in LSTM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf149520b2fdff358618210a9045a7d07f6ca5be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnparamssize&quot;&gt;&lt;code&gt;CudnnRNNParamsSize(...)&lt;/code&gt;&lt;/a&gt;: Computes size of weights that can be used by a Cudnn RNN model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68a5f251ed323a54a8d73c865e6a7f34c55c928" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnparamstocanonical&quot;&gt;&lt;code&gt;CudnnRNNParamsToCanonical(...)&lt;/code&gt;&lt;/a&gt;: Retrieves CudnnRNN params in canonical form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900c1a7de663e1f9696a395b5092c40b14510ed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnparamstocanonicalv2&quot;&gt;&lt;code&gt;CudnnRNNParamsToCanonicalV2(...)&lt;/code&gt;&lt;/a&gt;: Retrieves CudnnRNN params in canonical form. It supports the projection in LSTM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7f74da20cbdbc940396f549fa266df0a470f11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnv2&quot;&gt;&lt;code&gt;CudnnRNNV2(...)&lt;/code&gt;&lt;/a&gt;: A RNN backed by cuDNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae326cc65b2e6bfc47c343b963ad1fc8ab1d1465" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cudnnrnnv3&quot;&gt;&lt;code&gt;CudnnRNNV3(...)&lt;/code&gt;&lt;/a&gt;: A RNN backed by cuDNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefceab4a4259970840fac2837fc0e4ba9ec26e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cumprod&quot;&gt;&lt;code&gt;Cumprod(...)&lt;/code&gt;&lt;/a&gt;: Compute the cumulative product of the tensor &lt;code&gt;x&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc85321ac108f65e5f297f65ecdb39314e9dc93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cumsum&quot;&gt;&lt;code&gt;Cumsum(...)&lt;/code&gt;&lt;/a&gt;: Compute the cumulative sum of the tensor &lt;code&gt;x&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e227069ab00a32e504b63bff7242c944b5008c2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/cumulativelogsumexp&quot;&gt;&lt;code&gt;CumulativeLogsumexp(...)&lt;/code&gt;&lt;/a&gt;: Compute the cumulative product of the tensor &lt;code&gt;x&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dbf67c3ace0b9eebd9a159e0d7b5e76ba4debe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dataformatdimmap&quot;&gt;&lt;code&gt;DataFormatDimMap(...)&lt;/code&gt;&lt;/a&gt;: Returns the dimension index in the destination data format given the one in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5d1bf715f0c26cc26cc80c786c51c4d5a35bb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dataformatvecpermute&quot;&gt;&lt;code&gt;DataFormatVecPermute(...)&lt;/code&gt;&lt;/a&gt;: Returns the permuted vector/tensor in the destination data format given the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3d74c1a9d8e8164171aabb05ff268842ef0379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dataservicedataset&quot;&gt;&lt;code&gt;DataServiceDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that reads data from the tf.data service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f34fdb38f4c1664d8940e8aff5c068f7a71513c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasetcardinality&quot;&gt;&lt;code&gt;DatasetCardinality(...)&lt;/code&gt;&lt;/a&gt;: Returns the cardinality of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1688fcf2327002547cbf107e01a50a4e9f61d03f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasetfromgraph&quot;&gt;&lt;code&gt;DatasetFromGraph(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset from the given &lt;code&gt;graph_def&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ab8246b9eb671fad93396d0499a49d845f322a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasettograph&quot;&gt;&lt;code&gt;DatasetToGraph(...)&lt;/code&gt;&lt;/a&gt;: Returns a serialized GraphDef representing &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0593daef909f070380ca4fd0c2145c634609f013" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasettographv2&quot;&gt;&lt;code&gt;DatasetToGraphV2(...)&lt;/code&gt;&lt;/a&gt;: Returns a serialized GraphDef representing &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be2a8439ab51086109bc46d26bcd093b2234bd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasettosingleelement&quot;&gt;&lt;code&gt;DatasetToSingleElement(...)&lt;/code&gt;&lt;/a&gt;: Outputs the single element from the given dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78acac5a4953f4b3787b6deb5fbc686cf1ba5257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/datasettotfrecord&quot;&gt;&lt;code&gt;DatasetToTFRecord(...)&lt;/code&gt;&lt;/a&gt;: Writes the given dataset to the given file using the TFRecord format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c8a04d05f93abfb29a8559902091d0b943bda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debuggradientidentity&quot;&gt;&lt;code&gt;DebugGradientIdentity(...)&lt;/code&gt;&lt;/a&gt;: Identity op for gradient debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a7fc52fa64367c9e6d9ffd3ce5aaecde6aa244" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debuggradientrefidentity&quot;&gt;&lt;code&gt;DebugGradientRefIdentity(...)&lt;/code&gt;&lt;/a&gt;: Identity op for gradient debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd4b06a404db25ae7f9ae5a30c445b81e74048d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debugidentity&quot;&gt;&lt;code&gt;DebugIdentity(...)&lt;/code&gt;&lt;/a&gt;: Provides an identity mapping of the non-Ref type input tensor for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825d132dbca3dec67379b52eaf8596b8b299f062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debugidentityv2&quot;&gt;&lt;code&gt;DebugIdentityV2(...)&lt;/code&gt;&lt;/a&gt;: Debug Identity V2 Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe76b743beaa04e08b245ffbef8a4576732d0211" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debugnancount&quot;&gt;&lt;code&gt;DebugNanCount(...)&lt;/code&gt;&lt;/a&gt;: Debug NaN Value Counter Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92597f246d8466d43c4bde2296b246e282fcef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debugnumericsummary&quot;&gt;&lt;code&gt;DebugNumericSummary(...)&lt;/code&gt;&lt;/a&gt;: Debug Numeric Summary Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5fe174ebe8ad56fed3eab5656cec27e4349e11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/debugnumericsummaryv2&quot;&gt;&lt;code&gt;DebugNumericSummaryV2(...)&lt;/code&gt;&lt;/a&gt;: Debug Numeric Summary V2 Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd12b64e5f8b4e716e067d23d0ae686b172c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodeandcropjpeg&quot;&gt;&lt;code&gt;DecodeAndCropJpeg(...)&lt;/code&gt;&lt;/a&gt;: Decode and Crop a JPEG-encoded image to a uint8 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391d98bec6bc7629d1048fe35a75c1cf083b3a99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodebase64&quot;&gt;&lt;code&gt;DecodeBase64(...)&lt;/code&gt;&lt;/a&gt;: Decode web-safe base64-encoded strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ace97a7f35d00165a372951e2daa22c8eae612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodebmp&quot;&gt;&lt;code&gt;DecodeBmp(...)&lt;/code&gt;&lt;/a&gt;: Decode the first frame of a BMP-encoded image to a uint8 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4964a6bfffbd0f84745cd01d6edb8c98ed94c3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodecompressed&quot;&gt;&lt;code&gt;DecodeCompressed(...)&lt;/code&gt;&lt;/a&gt;: Decompress strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5334155965f5a0c34241b375d26074972d384a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodecsv&quot;&gt;&lt;code&gt;DecodeCSV(...)&lt;/code&gt;&lt;/a&gt;: Convert CSV records to tensors. Each column maps to one tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08a8098915d17a05b536a3885dac09631b98b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodegif&quot;&gt;&lt;code&gt;DecodeGif(...)&lt;/code&gt;&lt;/a&gt;: Decode the frame(s) of a GIF-encoded image to a uint8 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b85b4d38a3b653a469bb90973b3f6dfffb03b90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodejpeg&quot;&gt;&lt;code&gt;DecodeJpeg(...)&lt;/code&gt;&lt;/a&gt;: Decode a JPEG-encoded image to a uint8 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f587729065c8655b6921cbdcf92e063f008b0547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodejsonexample&quot;&gt;&lt;code&gt;DecodeJSONExample(...)&lt;/code&gt;&lt;/a&gt;: Convert JSON-encoded Example records to binary protocol buffer strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3250155b5ead5374a635a1a4fae51f0e73a6458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodepaddedraw&quot;&gt;&lt;code&gt;DecodePaddedRaw(...)&lt;/code&gt;&lt;/a&gt;: Reinterpret the bytes of a string as a vector of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc92a9b434095279eae27fae4f91b800fdc482a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodepng&quot;&gt;&lt;code&gt;DecodePng(...)&lt;/code&gt;&lt;/a&gt;: Decode a PNG-encoded image to a uint8 or uint16 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce76e063f6490c154c700a85be4bbbda13f3017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodeprotov2&quot;&gt;&lt;code&gt;DecodeProtoV2(...)&lt;/code&gt;&lt;/a&gt;: The op extracts fields from a serialized protocol buffers message into tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409faa4c410be1b6947edfedea526d89d92f47cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decoderaw&quot;&gt;&lt;code&gt;DecodeRaw(...)&lt;/code&gt;&lt;/a&gt;: Reinterpret the bytes of a string as a vector of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b9031bf6ec9ffa6ca8686d057732bf0890668c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/decodewav&quot;&gt;&lt;code&gt;DecodeWav(...)&lt;/code&gt;&lt;/a&gt;: Decode a 16-bit PCM WAV file to a float tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e014a86e73480fe9acc4cd4ad94b2756359cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deepcopy&quot;&gt;&lt;code&gt;DeepCopy(...)&lt;/code&gt;&lt;/a&gt;: Makes a copy of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe6fbbd6f62b8dbf233b03982f3c5f84b2d52d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deleteiterator&quot;&gt;&lt;code&gt;DeleteIterator(...)&lt;/code&gt;&lt;/a&gt;: A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa631a3b7c7e89331e4db5838a4d75f8ea6f1b74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deletemultideviceiterator&quot;&gt;&lt;code&gt;DeleteMultiDeviceIterator(...)&lt;/code&gt;&lt;/a&gt;: A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6563b866fb9fcee22ed12cf1e6c8a32114dd97c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deletesessiontensor&quot;&gt;&lt;code&gt;DeleteSessionTensor(...)&lt;/code&gt;&lt;/a&gt;: Delete the tensor specified by its handle in the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9058d74af2b560a323143f376ab1ecf40764c16a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densebincount&quot;&gt;&lt;code&gt;DenseBincount(...)&lt;/code&gt;&lt;/a&gt;: Counts the number of occurrences of each value in an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a5a50a1f23047b1895160093cff46936631f11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densecountsparseoutput&quot;&gt;&lt;code&gt;DenseCountSparseOutput(...)&lt;/code&gt;&lt;/a&gt;: Performs sparse-output bin counting for a tf.tensor input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3933bcc5d4b5b6a679cd556a52fb6c71aab76c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densetocsrsparsematrix&quot;&gt;&lt;code&gt;DenseToCSRSparseMatrix(...)&lt;/code&gt;&lt;/a&gt;: Converts a dense tensor to a (possibly batched) CSRSparseMatrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5899186efc6733ab0b96a48c2a01719ee97d76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densetodensesetoperation&quot;&gt;&lt;code&gt;DenseToDenseSetOperation(...)&lt;/code&gt;&lt;/a&gt;: Applies set operation along last dimension of 2 &lt;code&gt;Tensor&lt;/code&gt; inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2131f21a77b0fa19b45856782aa09d5ac1dff957" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densetosparsebatchdataset&quot;&gt;&lt;code&gt;DenseToSparseBatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches input elements into a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d25e404a028da79d99f1732b52138930376b50c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/densetosparsesetoperation&quot;&gt;&lt;code&gt;DenseToSparseSetOperation(...)&lt;/code&gt;&lt;/a&gt;: Applies set operation along last dimension of &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c8e357fdaf2ee67b9c635dcb539730e0d0f178" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/depthtospace&quot;&gt;&lt;code&gt;DepthToSpace(...)&lt;/code&gt;&lt;/a&gt;: DepthToSpace for tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42908564de5854665c6f6d87b45af4b8088c86a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/depthwiseconv2dnative&quot;&gt;&lt;code&gt;DepthwiseConv2dNative(...)&lt;/code&gt;&lt;/a&gt;: Computes a 2-D depthwise convolution given 4-D &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt; tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972dfce88befeeb87f53608c3f8b640bb394bb50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/depthwiseconv2dnativebackpropfilter&quot;&gt;&lt;code&gt;DepthwiseConv2dNativeBackpropFilter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823ac686dc01ac35e767675507835f736517ce36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/depthwiseconv2dnativebackpropinput&quot;&gt;&lt;code&gt;DepthwiseConv2dNativeBackpropInput(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradients of depthwise convolution with respect to the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04fc19db51ea6b8da46d1050f0afb6231e8a4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dequantize&quot;&gt;&lt;code&gt;Dequantize(...)&lt;/code&gt;&lt;/a&gt;: Dequantize the 'input' tensor into a float or bfloat16 Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee97eee0b743942876da3f0fd6f36e2eac0fae48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deserializeiterator&quot;&gt;&lt;code&gt;DeserializeIterator(...)&lt;/code&gt;&lt;/a&gt;: Converts the given variant tensor to an iterator and stores it in the given resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765f7f0e93151057ccc4a61a0d2f2c45c605a453" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deserializemanysparse&quot;&gt;&lt;code&gt;DeserializeManySparse(...)&lt;/code&gt;&lt;/a&gt;: Deserialize and concatenate &lt;code&gt;SparseTensors&lt;/code&gt; from a serialized minibatch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139d4f4f58303eac2352e68c7305378278790130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deserializesparse&quot;&gt;&lt;code&gt;DeserializeSparse(...)&lt;/code&gt;&lt;/a&gt;: Deserialize &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd0045297ebd78560905078411236ccfa3a5766" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/destroyresourceop&quot;&gt;&lt;code&gt;DestroyResourceOp(...)&lt;/code&gt;&lt;/a&gt;: Deletes the resource specified by the handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f4d9b25e8e6762f14a2b9b06c7961248de6db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/destroytemporaryvariable&quot;&gt;&lt;code&gt;DestroyTemporaryVariable(...)&lt;/code&gt;&lt;/a&gt;: Destroys the temporary variable and returns its final value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd94da1b9f1bf3126918cd4077b7d3c2952138f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/deviceindex&quot;&gt;&lt;code&gt;DeviceIndex(...)&lt;/code&gt;&lt;/a&gt;: Return the index of device the op runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33845791470a7c43910906f2958cc8af08bbad20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/diag&quot;&gt;&lt;code&gt;Diag(...)&lt;/code&gt;&lt;/a&gt;: Returns a diagonal tensor with a given diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1725ced61315623a3dd163644161ae2e5355b15c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/diagpart&quot;&gt;&lt;code&gt;DiagPart(...)&lt;/code&gt;&lt;/a&gt;: Returns the diagonal part of the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9983d05c9ced1a2ba89adfa15908cba498c9704c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/digamma&quot;&gt;&lt;code&gt;Digamma(...)&lt;/code&gt;&lt;/a&gt;: Computes Psi, the derivative of Lgamma (the log of the absolute value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c074dca42a3ccc04990f4c458f1426e5f95823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dilation2d&quot;&gt;&lt;code&gt;Dilation2D(...)&lt;/code&gt;&lt;/a&gt;: Computes the grayscale dilation of 4-D &lt;code&gt;input&lt;/code&gt; and 3-D &lt;code&gt;filter&lt;/code&gt; tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caaec086aaf4868ac959f283a37a3b6c87e0c14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dilation2dbackpropfilter&quot;&gt;&lt;code&gt;Dilation2DBackpropFilter(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient of morphological 2-D dilation with respect to the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a564271d7f9b30396bfe7c131c175bd79b4fda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dilation2dbackpropinput&quot;&gt;&lt;code&gt;Dilation2DBackpropInput(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient of morphological 2-D dilation with respect to the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21a5c0ffb36ffb8e1c1b320a78e3ab977897147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/directedinterleavedataset&quot;&gt;&lt;code&gt;DirectedInterleaveDataset(...)&lt;/code&gt;&lt;/a&gt;: A substitute for &lt;code&gt;InterleaveDataset&lt;/code&gt; on a fixed list of &lt;code&gt;N&lt;/code&gt; datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f1752e5f6b35ace331e60366026da009759913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/div&quot;&gt;&lt;code&gt;Div(...)&lt;/code&gt;&lt;/a&gt;: Returns x / y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1628bea43455dc123527fd3b7383550df7a20b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/divnonan&quot;&gt;&lt;code&gt;DivNoNan(...)&lt;/code&gt;&lt;/a&gt;: Returns 0 if the denominator is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135f0457d7e3c3286e18166573107d44700c2ed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/drawboundingboxes&quot;&gt;&lt;code&gt;DrawBoundingBoxes(...)&lt;/code&gt;&lt;/a&gt;: Draw bounding boxes on a batch of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09584f53c0d84e19efa6ab323a732fb441e9be3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/drawboundingboxesv2&quot;&gt;&lt;code&gt;DrawBoundingBoxesV2(...)&lt;/code&gt;&lt;/a&gt;: Draw bounding boxes on a batch of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b49c2a96802faab1359ec7bfda1853ae599f50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dynamicpartition&quot;&gt;&lt;code&gt;DynamicPartition(...)&lt;/code&gt;&lt;/a&gt;: Partitions &lt;code&gt;data&lt;/code&gt; into &lt;code&gt;num_partitions&lt;/code&gt; tensors using indices from &lt;code&gt;partitions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09bdb1c75e8fd884d5408a868345e2de9f6cedf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/dynamicstitch&quot;&gt;&lt;code&gt;DynamicStitch(...)&lt;/code&gt;&lt;/a&gt;: Interleave the values from the &lt;code&gt;data&lt;/code&gt; tensors into a single tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545064e2dfe8866384ab1a5b82ab7cd8d99ca9c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/eagerpyfunc&quot;&gt;&lt;code&gt;EagerPyFunc(...)&lt;/code&gt;&lt;/a&gt;: Eagerly executes a python function to compute func(input)-&amp;gt;output. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2181ecf2c9d2baaa0e745fda626cf3f69ca8ec6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/editdistance&quot;&gt;&lt;code&gt;EditDistance(...)&lt;/code&gt;&lt;/a&gt;: Computes the (possibly normalized) Levenshtein Edit Distance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d26c08a80977e0cc055c6aff1bbcb7a66b12f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/eig&quot;&gt;&lt;code&gt;Eig(...)&lt;/code&gt;&lt;/a&gt;: Computes the eigen decomposition of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9755ed822abd02077596df246baf492c13664244" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/einsum&quot;&gt;&lt;code&gt;Einsum(...)&lt;/code&gt;&lt;/a&gt;: Tensor contraction according to Einstein summation convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7df0496f74473d9fc8b2f7f3dbc4a8a78a8101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/elu&quot;&gt;&lt;code&gt;Elu(...)&lt;/code&gt;&lt;/a&gt;: Computes exponential linear: &lt;code&gt;exp(features) - 1&lt;/code&gt; if &amp;lt; 0, &lt;code&gt;features&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c982b944eb5be5ff41ab232006be55109ebfde22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/elugrad&quot;&gt;&lt;code&gt;EluGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients for the exponential linear (Elu) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba8b11463a17a60559e0ef0ec4e75539694f22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/empty&quot;&gt;&lt;code&gt;Empty(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with the given shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b31610e261258a6e8466cdeae0f529b1fe24ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/emptytensorlist&quot;&gt;&lt;code&gt;EmptyTensorList(...)&lt;/code&gt;&lt;/a&gt;: Creates and returns an empty tensor list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8d8b6b65f8a31569a93b74b099d88e4eb2574c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodebase64&quot;&gt;&lt;code&gt;EncodeBase64(...)&lt;/code&gt;&lt;/a&gt;: Encode strings into web-safe base64 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7a77347a7c183c317b85d1b6ed810b12428053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodejpeg&quot;&gt;&lt;code&gt;EncodeJpeg(...)&lt;/code&gt;&lt;/a&gt;: JPEG-encode an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974721b8902ed7d58fc43fe72e9a0cdcf1d79bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodejpegvariablequality&quot;&gt;&lt;code&gt;EncodeJpegVariableQuality(...)&lt;/code&gt;&lt;/a&gt;: JPEG encode input image with provided compression quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598ab74a7ca7f353dd6df8e3c5f5657d1be58022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodepng&quot;&gt;&lt;code&gt;EncodePng(...)&lt;/code&gt;&lt;/a&gt;: PNG-encode an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412b244665866f672afc90a5a67919439fb2729c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodeproto&quot;&gt;&lt;code&gt;EncodeProto(...)&lt;/code&gt;&lt;/a&gt;: The op serializes protobuf messages provided in the input tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21edcc0a9d0eeaefe66732afd4a1b194c2f4610" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/encodewav&quot;&gt;&lt;code&gt;EncodeWav(...)&lt;/code&gt;&lt;/a&gt;: Encode audio data using the WAV file format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3d0ea18a50df34b5a27ecf0704f6e1e596bb1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/enqueuetpuembeddingintegerbatch&quot;&gt;&lt;code&gt;EnqueueTPUEmbeddingIntegerBatch(...)&lt;/code&gt;&lt;/a&gt;: An op that enqueues a list of input batch tensors to TPUEmbedding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253f5ccca60eca89244959b0e8786c2f37559fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/enqueuetpuembeddingraggedtensorbatch&quot;&gt;&lt;code&gt;EnqueueTPUEmbeddingRaggedTensorBatch(...)&lt;/code&gt;&lt;/a&gt;: Eases the porting of code that uses tf.nn.embedding_lookup().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f8726053ce5132ad304da6ee960cbafe540e1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/enqueuetpuembeddingsparsebatch&quot;&gt;&lt;code&gt;EnqueueTPUEmbeddingSparseBatch(...)&lt;/code&gt;&lt;/a&gt;: An op that enqueues TPUEmbedding input indices from a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ff453175a07f9297c932ef61707af9da06b9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/enqueuetpuembeddingsparsetensorbatch&quot;&gt;&lt;code&gt;EnqueueTPUEmbeddingSparseTensorBatch(...)&lt;/code&gt;&lt;/a&gt;: Eases the porting of code that uses tf.nn.embedding_lookup_sparse().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64eda6647c006332fb6e4710eabcd0ad76be256" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ensureshape&quot;&gt;&lt;code&gt;EnsureShape(...)&lt;/code&gt;&lt;/a&gt;: Ensures that the tensor's shape matches the expected shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733398bcd1d8a7ad20fd556a0c044e48fef8667a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/enter&quot;&gt;&lt;code&gt;Enter(...)&lt;/code&gt;&lt;/a&gt;: Creates or finds a child frame, and makes &lt;code&gt;data&lt;/code&gt; available to the child frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448ff24dba80fc7c883d707142b9de22815cb190" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/equal&quot;&gt;&lt;code&gt;Equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x == y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ae59ba066385a6dcd084e2bf7c96f930750e77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/erf&quot;&gt;&lt;code&gt;Erf(...)&lt;/code&gt;&lt;/a&gt;: Computes the Gauss error function of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db7c9c1b97e0eaea193380ec1edb69cda736f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/erfc&quot;&gt;&lt;code&gt;Erfc(...)&lt;/code&gt;&lt;/a&gt;: Computes the complementary error function of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b8b8cd5c6ee1a7dcb9e5f20b4c7b577fc38dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/euclideannorm&quot;&gt;&lt;code&gt;EuclideanNorm(...)&lt;/code&gt;&lt;/a&gt;: Computes the euclidean norm of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582135f3536cf96fe335aa9b144a3a2af89635ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/exit&quot;&gt;&lt;code&gt;Exit(...)&lt;/code&gt;&lt;/a&gt;: Exits the current frame to its parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134e2cdff189c2bc8bf3c1bf0722edd1409eded4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/exp&quot;&gt;&lt;code&gt;Exp(...)&lt;/code&gt;&lt;/a&gt;: Computes exponential of x element-wise. \(y = e^x\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c986ad2d3ed8bd31a15725efdce4bd54a27de1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/expanddims&quot;&gt;&lt;code&gt;ExpandDims(...)&lt;/code&gt;&lt;/a&gt;: Inserts a dimension of 1 into a tensor's shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d00c6bf642460a5595410d2736baed0c582f2a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalautosharddataset&quot;&gt;&lt;code&gt;ExperimentalAutoShardDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that shards the input dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd862e324c6c54142b11ce36502897c2e474940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalbytesproducedstatsdataset&quot;&gt;&lt;code&gt;ExperimentalBytesProducedStatsDataset(...)&lt;/code&gt;&lt;/a&gt;: Records the bytes size of each element of &lt;code&gt;input_dataset&lt;/code&gt; in a StatsAggregator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b8999ab88c7158bc7196752e26e50cc026287e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaldatasetcardinality&quot;&gt;&lt;code&gt;ExperimentalDatasetCardinality(...)&lt;/code&gt;&lt;/a&gt;: Returns the cardinality of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f74de8e8fc1418ba058ac84090c044df5d4679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaldatasettotfrecord&quot;&gt;&lt;code&gt;ExperimentalDatasetToTFRecord(...)&lt;/code&gt;&lt;/a&gt;: Writes the given dataset to the given file using the TFRecord format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a611cd5b9a0fc9ed803dd5e709945828c54a90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaldensetosparsebatchdataset&quot;&gt;&lt;code&gt;ExperimentalDenseToSparseBatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches input elements into a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb47017b19687cdb71d5324371c1524614408e7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaldirectedinterleavedataset&quot;&gt;&lt;code&gt;ExperimentalDirectedInterleaveDataset(...)&lt;/code&gt;&lt;/a&gt;: A substitute for &lt;code&gt;InterleaveDataset&lt;/code&gt; on a fixed list of &lt;code&gt;N&lt;/code&gt; datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad165d05176ef64b58631278ee128134fe999576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalgroupbyreducerdataset&quot;&gt;&lt;code&gt;ExperimentalGroupByReducerDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that computes a group-by on &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985631a578be79f9b9bfb85d93f43fd3cca4a66c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalgroupbywindowdataset&quot;&gt;&lt;code&gt;ExperimentalGroupByWindowDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that computes a windowed group-by on &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f345ba01ae42d7660969b0129b1e16e07ec713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalignoreerrorsdataset&quot;&gt;&lt;code&gt;ExperimentalIgnoreErrorsDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that contains the elements of &lt;code&gt;input_dataset&lt;/code&gt; ignoring errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507299dfc68b375db5ba15f03b1a44639d3eb989" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaliteratorgetdevice&quot;&gt;&lt;code&gt;ExperimentalIteratorGetDevice(...)&lt;/code&gt;&lt;/a&gt;: Returns the name of the device on which &lt;code&gt;resource&lt;/code&gt; has been placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c275aa69c03ba86a230f2f1865391d7f6c0dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentallatencystatsdataset&quot;&gt;&lt;code&gt;ExperimentalLatencyStatsDataset(...)&lt;/code&gt;&lt;/a&gt;: Records the latency of producing &lt;code&gt;input_dataset&lt;/code&gt; elements in a StatsAggregator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17d1d9be6b96d4737ec6656606b248e296c354e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalmapandbatchdataset&quot;&gt;&lt;code&gt;ExperimentalMapAndBatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that fuses mapping with batching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0546dbddfbc372b9354212287e757f1cf2e35cec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalmapdataset&quot;&gt;&lt;code&gt;ExperimentalMapDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c687b752376f4eb9f538f0ec1eadc37d083bc327" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalmaxintraopparallelismdataset&quot;&gt;&lt;code&gt;ExperimentalMaxIntraOpParallelismDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that overrides the maximum intra-op parallelism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc87178b64497837607a0cbeccff4297292ec197" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalparallelinterleavedataset&quot;&gt;&lt;code&gt;ExperimentalParallelInterleaveDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8383a0dc16ac26fd1ae56073a898fec01444367c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalparseexampledataset&quot;&gt;&lt;code&gt;ExperimentalParseExampleDataset(...)&lt;/code&gt;&lt;/a&gt;: Transforms &lt;code&gt;input_dataset&lt;/code&gt; containing &lt;code&gt;Example&lt;/code&gt; protos as vectors of DT_STRING into a dataset of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects representing the parsed features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8379bef94b6bf4535ca9404b2755a9216bc71994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalprivatethreadpooldataset&quot;&gt;&lt;code&gt;ExperimentalPrivateThreadPoolDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that uses a custom thread pool to compute &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ad2109d8b3097a14335871bcb276f792099ded" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalrandomdataset&quot;&gt;&lt;code&gt;ExperimentalRandomDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a Dataset that returns pseudorandom numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b70b37fa68e6cb28896fbd57652c244cff0c50a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalrebatchdataset&quot;&gt;&lt;code&gt;ExperimentalRebatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that changes the batch size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40786424cc832fcb9a97481f05e969fe94b37f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalscandataset&quot;&gt;&lt;code&gt;ExperimentalScanDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset successively reduces &lt;code&gt;f&lt;/code&gt; over the elements of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84ad636bc1f53adcba2edc93c29450abbbecb2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalslidingwindowdataset&quot;&gt;&lt;code&gt;ExperimentalSlidingWindowDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that passes a sliding window over &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0335b69f3dce375239617cb1b9d49a125c8983" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalsqldataset&quot;&gt;&lt;code&gt;ExperimentalSqlDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that executes a SQL query and emits rows of the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dd7aedd7c1ad1932d66650d3178b80b51d838a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalstatsaggregatorhandle&quot;&gt;&lt;code&gt;ExperimentalStatsAggregatorHandle(...)&lt;/code&gt;&lt;/a&gt;: Creates a statistics manager resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fb71d09c26b6ab39d34bfcabd3bd4b02287161" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalstatsaggregatorsummary&quot;&gt;&lt;code&gt;ExperimentalStatsAggregatorSummary(...)&lt;/code&gt;&lt;/a&gt;: Produces a summary of any statistics recorded by the given statistics manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7a5be6e43fa1c14a640dd0ae9a42514b445ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaltakewhiledataset&quot;&gt;&lt;code&gt;ExperimentalTakeWhileDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that stops iteration when predicate` is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ee849d372ad0a3190bc40f76e4d7ed6888a0b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalthreadpooldataset&quot;&gt;&lt;code&gt;ExperimentalThreadPoolDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that uses a custom thread pool to compute &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f0654010e1d07120337f2f70f6d6df9c9bd829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalthreadpoolhandle&quot;&gt;&lt;code&gt;ExperimentalThreadPoolHandle(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that uses a custom thread pool to compute &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26044b4238aa38b4ffda8fc174d8e5aaa87d1a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentalunbatchdataset&quot;&gt;&lt;code&gt;ExperimentalUnbatchDataset(...)&lt;/code&gt;&lt;/a&gt;: A dataset that splits the elements of its input into multiple elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcd6a09b13829f118f6bd1300599b3b637adb0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/experimentaluniquedataset&quot;&gt;&lt;code&gt;ExperimentalUniqueDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that contains the unique elements of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6789d5df9060c20634ad3fb3eb2388106e3e02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/expm1&quot;&gt;&lt;code&gt;Expm1(...)&lt;/code&gt;&lt;/a&gt;: Computes &lt;code&gt;exp(x) - 1&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8256e641333b5bb7fc618e19ff7f21a5f8d7ba6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/extractglimpse&quot;&gt;&lt;code&gt;ExtractGlimpse(...)&lt;/code&gt;&lt;/a&gt;: Extracts a glimpse from the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dfd272bd90259b493c1b0b3ba82d80276e47d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/extractglimpsev2&quot;&gt;&lt;code&gt;ExtractGlimpseV2(...)&lt;/code&gt;&lt;/a&gt;: Extracts a glimpse from the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645a7eb832e8c052702bc5fd28c18bf1eb241a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/extractimagepatches&quot;&gt;&lt;code&gt;ExtractImagePatches(...)&lt;/code&gt;&lt;/a&gt;: Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt; and put them in the &quot;depth&quot; output dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d249562d629fadfccd586f92fb8482b5b3e1620" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/extractjpegshape&quot;&gt;&lt;code&gt;ExtractJpegShape(...)&lt;/code&gt;&lt;/a&gt;: Extract the shape information of a JPEG-encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00269ed708ce9cc79a198b52603002bedabd9d6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/extractvolumepatches&quot;&gt;&lt;code&gt;ExtractVolumePatches(...)&lt;/code&gt;&lt;/a&gt;: Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;input&lt;/code&gt; and put them in the &quot;depth&quot; output dimension. 3D extension of &lt;code&gt;extract_image_patches&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a761ca95c1e1a3f57af5afcb759672b2aa208824" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fact&quot;&gt;&lt;code&gt;Fact(...)&lt;/code&gt;&lt;/a&gt;: Output a fact about factorials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992d14c251cb3f31c8bc4f136bd45e198c8a8c33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakeparam&quot;&gt;&lt;code&gt;FakeParam(...)&lt;/code&gt;&lt;/a&gt;: This op is used as a placeholder in If branch functions. It doesn't provide a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bf22f4276301800fdc0734f824a9354c7b5c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxargs&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxArgs(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989d12ef2ddf3e35419d67a59a399dc4998eb8e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxargsgradient&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxArgsGradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxArgs operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6339fa78772c998558038d77436bd51c14572e68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxvars&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxVars(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via global float scalars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00977f4008ee553ab6a67deb12ab488525a5fd75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxvarsgradient&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxVarsGradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVars operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea44575a79ac0e90298ade884604b12bc981647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxvarsperchannel&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxVarsPerChannel(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via per-channel floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5221e67c04722e226e2a69f9ce3d9ea1c205afcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequantwithminmaxvarsperchannelgradient&quot;&gt;&lt;code&gt;FakeQuantWithMinMaxVarsPerChannelGradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVarsPerChannel operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb365627222dee2dd9d2267320f1ad85d87bf96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fakequeue&quot;&gt;&lt;code&gt;FakeQueue(...)&lt;/code&gt;&lt;/a&gt;: Deprecated. Do not use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3826663f99ad5ffaec47e131e8edb0b50a331f08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fft&quot;&gt;&lt;code&gt;FFT(...)&lt;/code&gt;&lt;/a&gt;: Fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a5e0102f2cdc830bdb9f0fb31c7564c2ed27ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fft2d&quot;&gt;&lt;code&gt;FFT2D(...)&lt;/code&gt;&lt;/a&gt;: 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef9f98674674b94bb89cc7821e0eb01338c3a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fft3d&quot;&gt;&lt;code&gt;FFT3D(...)&lt;/code&gt;&lt;/a&gt;: 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d76fe59a067dfcf10bf16fe612c2dfc6a727b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fifoqueue&quot;&gt;&lt;code&gt;FIFOQueue(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24898b7f30c75c0b364d03208821d70de2c6de2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fifoqueuev2&quot;&gt;&lt;code&gt;FIFOQueueV2(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc4a7582cad8204434612913e4f7ba0b7a9c3a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fill&quot;&gt;&lt;code&gt;Fill(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor filled with a scalar value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01df566a169eb86763513865f7a30b6cc005b7ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/filterbylastcomponentdataset&quot;&gt;&lt;code&gt;FilterByLastComponentDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset containing elements of first component of &lt;code&gt;input_dataset&lt;/code&gt; having true in the last component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71554675c6b7326f06f019a20559c0db17c761c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/filterdataset&quot;&gt;&lt;code&gt;FilterDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset containing elements of &lt;code&gt;input_dataset&lt;/code&gt; matching &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02468d52a2e3de4327d5e1d716a344b35d9fad32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fingerprint&quot;&gt;&lt;code&gt;Fingerprint(...)&lt;/code&gt;&lt;/a&gt;: Generates fingerprint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c82a53b91681db4300a2f05dca69062c3ea3db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fixedlengthrecorddataset&quot;&gt;&lt;code&gt;FixedLengthRecordDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that emits the records from one or more binary files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b77907ad119a6ecb0e25bb4f3142c165ff9589" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fixedlengthrecordreader&quot;&gt;&lt;code&gt;FixedLengthRecordReader(...)&lt;/code&gt;&lt;/a&gt;: A Reader that outputs fixed-length records from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0b1e5cc6e0262b352113249237c2f0b8844b07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fixedlengthrecordreaderv2&quot;&gt;&lt;code&gt;FixedLengthRecordReaderV2(...)&lt;/code&gt;&lt;/a&gt;: A Reader that outputs fixed-length records from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979683df570d95782a562ad6a0ca663b9a443eb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fixedunigramcandidatesampler&quot;&gt;&lt;code&gt;FixedUnigramCandidateSampler(...)&lt;/code&gt;&lt;/a&gt;: Generates labels for candidate sampling with a learned unigram distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a289c848b648be7e6b999bbde3ed38d8a75c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/flatmapdataset&quot;&gt;&lt;code&gt;FlatMapDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5450077d4b15bde8065a7cb1342582344d2c5701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/floor&quot;&gt;&lt;code&gt;Floor(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise largest integer not greater than x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c079cfe17024acad89a848fe15fee47d9326aee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/floordiv&quot;&gt;&lt;code&gt;FloorDiv(...)&lt;/code&gt;&lt;/a&gt;: Returns x // y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa0114211e8e362e43c819bae144cee1d0c7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/floormod&quot;&gt;&lt;code&gt;FloorMod(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise remainder of division. When &lt;code&gt;x &amp;lt; 0&lt;/code&gt; xor &lt;code&gt;y &amp;lt; 0&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17809dd5879f592e1e6a80ba9479b116f29c186" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/for&quot;&gt;&lt;code&gt;For(...)&lt;/code&gt;&lt;/a&gt;: ```python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad25cc846d857941d03e68c75b40ed8635ac653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fractionalavgpool&quot;&gt;&lt;code&gt;FractionalAvgPool(...)&lt;/code&gt;&lt;/a&gt;: Performs fractional average pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb22602a2f3a519a0a8a5601ad6762d8a1a31a37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fractionalavgpoolgrad&quot;&gt;&lt;code&gt;FractionalAvgPoolGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradient of the FractionalAvgPool function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea9d2e22739c431edd7393f1010770cd037ad49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fractionalmaxpool&quot;&gt;&lt;code&gt;FractionalMaxPool(...)&lt;/code&gt;&lt;/a&gt;: Performs fractional max pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00ef2e610d6b1a8c56b1daeb4e3bfc974f6cb0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fractionalmaxpoolgrad&quot;&gt;&lt;code&gt;FractionalMaxPoolGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradient of the FractionalMaxPool function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4cd297a09b5c0ce57038ca9ce0da43b078df69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnorm&quot;&gt;&lt;code&gt;FusedBatchNorm(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057cc90889282a22e8120b9c9478bc3a4636a677" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnormgrad&quot;&gt;&lt;code&gt;FusedBatchNormGrad(...)&lt;/code&gt;&lt;/a&gt;: Gradient for batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7510fe26f7c91a4ca189c24b51f46ade530eb52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnormgradv2&quot;&gt;&lt;code&gt;FusedBatchNormGradV2(...)&lt;/code&gt;&lt;/a&gt;: Gradient for batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f888c0f03fd76972fc78f54eac6872028c25ac36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnormgradv3&quot;&gt;&lt;code&gt;FusedBatchNormGradV3(...)&lt;/code&gt;&lt;/a&gt;: Gradient for batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3ec4d725674f7052aba1d5ef94257dc65c3d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnormv2&quot;&gt;&lt;code&gt;FusedBatchNormV2(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32482dd4b395c61f79349144fcf8482e9e7ab7ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedbatchnormv3&quot;&gt;&lt;code&gt;FusedBatchNormV3(...)&lt;/code&gt;&lt;/a&gt;: Batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1347e3975d1170f92a835b02bcd5612547150e7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedpadconv2d&quot;&gt;&lt;code&gt;FusedPadConv2D(...)&lt;/code&gt;&lt;/a&gt;: Performs a padding as a preprocess during a convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c9e5dff7094cf3e11b5223acc24a87650fc167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/fusedresizeandpadconv2d&quot;&gt;&lt;code&gt;FusedResizeAndPadConv2D(...)&lt;/code&gt;&lt;/a&gt;: Performs a resize and padding as a preprocess during a convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704715f34cae1658b91ba5501ea608846726230b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/gather&quot;&gt;&lt;code&gt;Gather(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from &lt;code&gt;params&lt;/code&gt; according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1c4209dd5d6ebcd9ab26fce388615279772376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/gathernd&quot;&gt;&lt;code&gt;GatherNd(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from &lt;code&gt;params&lt;/code&gt; into a Tensor with shape specified by &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53176e4d57d5717ca4c728c5af88f3a7d8878dd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/gatherv2&quot;&gt;&lt;code&gt;GatherV2(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from &lt;code&gt;params&lt;/code&gt; axis &lt;code&gt;axis&lt;/code&gt; according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0603561cd68268b2316e8e064cda0a1c852b3b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/generateboundingboxproposals&quot;&gt;&lt;code&gt;GenerateBoundingBoxProposals(...)&lt;/code&gt;&lt;/a&gt;: This op produces Region of Interests from given bounding boxes(bbox_deltas) encoded wrt anchors according to eq.2 in arXiv:1506.01497</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b234546d3522c2071d5496c1cb8778d5ebe42a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/generatevocabremapping&quot;&gt;&lt;code&gt;GenerateVocabRemapping(...)&lt;/code&gt;&lt;/a&gt;: Given a path to new and old vocabulary files, returns a remapping Tensor of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddaee15d555b3c775c8ea995f2024288f4fe3cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/generatordataset&quot;&gt;&lt;code&gt;GeneratorDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that invokes a function to generate elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413654d077e71ffb4594a9a4867c4deea94115f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/getsessionhandle&quot;&gt;&lt;code&gt;GetSessionHandle(...)&lt;/code&gt;&lt;/a&gt;: Store the input tensor in the state of the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0711e082ff64a70ba71f4c384eb43cd9af89ba55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/getsessionhandlev2&quot;&gt;&lt;code&gt;GetSessionHandleV2(...)&lt;/code&gt;&lt;/a&gt;: Store the input tensor in the state of the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e7f415301669e3b600319168512ef030a24dda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/getsessiontensor&quot;&gt;&lt;code&gt;GetSessionTensor(...)&lt;/code&gt;&lt;/a&gt;: Get the value of the tensor specified by its handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979cec8c8c916bbe0887cf147d80156a424b57be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/greater&quot;&gt;&lt;code&gt;Greater(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;gt; y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f9a33ff2af1b1d609d51129f99c7679da46154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/greaterequal&quot;&gt;&lt;code&gt;GreaterEqual(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;gt;= y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3858144a351ae9c9b0f21df1dca15ff5106fb86e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/groupbyreducerdataset&quot;&gt;&lt;code&gt;GroupByReducerDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that computes a group-by on &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9448a8ff6c3cef0577e471915948eda7ce7d413" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/groupbywindowdataset&quot;&gt;&lt;code&gt;GroupByWindowDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that computes a windowed group-by on &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bd053bfa033affce2c92dc5aa9c35f15d7946a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/grublockcell&quot;&gt;&lt;code&gt;GRUBlockCell(...)&lt;/code&gt;&lt;/a&gt;: Computes the GRU cell forward propagation for 1 time step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47075e668506efa15bf850ff78fdfc2f95cf3641" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/grublockcellgrad&quot;&gt;&lt;code&gt;GRUBlockCellGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the GRU cell back-propagation for 1 time step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a76520dd8e8b5caaac806cffc3e43d5374a395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/guaranteeconst&quot;&gt;&lt;code&gt;GuaranteeConst(...)&lt;/code&gt;&lt;/a&gt;: Gives a guarantee to the TF runtime that the input tensor is a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9ec3623d318a488f7313690114d4c4b03d8da5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/hashtable&quot;&gt;&lt;code&gt;HashTable(...)&lt;/code&gt;&lt;/a&gt;: Creates a non-initialized hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7519138fa5a054290088deb5e505e503c214d80d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/hashtablev2&quot;&gt;&lt;code&gt;HashTableV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a non-initialized hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fde10c4207c81de26c1e8bc7507ee74c12e4f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/histogramfixedwidth&quot;&gt;&lt;code&gt;HistogramFixedWidth(...)&lt;/code&gt;&lt;/a&gt;: Return histogram of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16452b77b546d47d3eaa149e89640dbafffd552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/histogramsummary&quot;&gt;&lt;code&gt;HistogramSummary(...)&lt;/code&gt;&lt;/a&gt;: Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with a histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e333bbfbf823ddfde57c131c5d86f066e4332048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/hsvtorgb&quot;&gt;&lt;code&gt;HSVToRGB(...)&lt;/code&gt;&lt;/a&gt;: Convert one or more images from HSV to RGB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dffdda866e383ab445ff08fcb11b5b29c60817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/identity&quot;&gt;&lt;code&gt;Identity(...)&lt;/code&gt;&lt;/a&gt;: Return a tensor with the same shape and contents as the input tensor or value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c371cdc0e2e60725d753f2e2e88b2f7417b42e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/identityn&quot;&gt;&lt;code&gt;IdentityN(...)&lt;/code&gt;&lt;/a&gt;: Returns a list of tensors with the same shapes and contents as the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f24dab30a18963a5b9772c127b36020ad9d38a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/identityreader&quot;&gt;&lt;code&gt;IdentityReader(...)&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the queued work as both the key and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28c6551f5a33fc824df0e82273dfba71685cb07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/identityreaderv2&quot;&gt;&lt;code&gt;IdentityReaderV2(...)&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the queued work as both the key and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a90340c53e7eb3ba5118cc3732d875d2e54e6a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/if&quot;&gt;&lt;code&gt;If(...)&lt;/code&gt;&lt;/a&gt;: output = cond ? then_branch(input) : else_branch(input)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7397f413ced9485fb8a27f49695651cfd51df2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ifft&quot;&gt;&lt;code&gt;IFFT(...)&lt;/code&gt;&lt;/a&gt;: Inverse fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f18253cc3e123a9336a9a4b85cfc50a1ec6ff3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ifft2d&quot;&gt;&lt;code&gt;IFFT2D(...)&lt;/code&gt;&lt;/a&gt;: Inverse 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4637fe18cf1f0d4b4a886ea7a1b05b815e8540f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ifft3d&quot;&gt;&lt;code&gt;IFFT3D(...)&lt;/code&gt;&lt;/a&gt;: Inverse 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fe5ba43d1047ec035abcc5e9dfaaf46923b645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/igamma&quot;&gt;&lt;code&gt;Igamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the lower regularized incomplete Gamma function &lt;code&gt;P(a, x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a399d7e3db134d095df81a5a313906dc34768b25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/igammac&quot;&gt;&lt;code&gt;Igammac(...)&lt;/code&gt;&lt;/a&gt;: Compute the upper regularized incomplete Gamma function &lt;code&gt;Q(a, x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0e59ec915fb86f190e381ccf50e1ddc0c0881a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/igammagrada&quot;&gt;&lt;code&gt;IgammaGradA(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient of &lt;code&gt;igamma(a, x)&lt;/code&gt; wrt &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8913a4e62351eb660aab72c1044b68457e3692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ignoreerrorsdataset&quot;&gt;&lt;code&gt;IgnoreErrorsDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that contains the elements of &lt;code&gt;input_dataset&lt;/code&gt; ignoring errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc689a1ef2155edf0a38f3e307b46a564ae34346" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/imag&quot;&gt;&lt;code&gt;Imag(...)&lt;/code&gt;&lt;/a&gt;: Returns the imaginary part of a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82642489b0ea059b017b0f7a0af2fa3b6023ebf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/imageprojectivetransformv2&quot;&gt;&lt;code&gt;ImageProjectiveTransformV2(...)&lt;/code&gt;&lt;/a&gt;: Applies the given transform to each of the images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9876d23692b56678e81bb07923fa20acc6c062" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/imagesummary&quot;&gt;&lt;code&gt;ImageSummary(...)&lt;/code&gt;&lt;/a&gt;: Outputs a &lt;code&gt;Summary&lt;/code&gt; protocol buffer with images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55a192ba6c3bc3581522888bc0484bc610576f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/immutableconst&quot;&gt;&lt;code&gt;ImmutableConst(...)&lt;/code&gt;&lt;/a&gt;: Returns immutable tensor from memory region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103d8cbd7dba55517853623282f99a0b286b22da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/infeeddequeue&quot;&gt;&lt;code&gt;InfeedDequeue(...)&lt;/code&gt;&lt;/a&gt;: A placeholder op for a value that will be fed into the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce991477bdfdcc603e549e528c6be0be7a7e3552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/infeeddequeuetuple&quot;&gt;&lt;code&gt;InfeedDequeueTuple(...)&lt;/code&gt;&lt;/a&gt;: Fetches multiple values from infeed as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5555282e91d0e11b98c25ae5423a1efe162d622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/infeedenqueue&quot;&gt;&lt;code&gt;InfeedEnqueue(...)&lt;/code&gt;&lt;/a&gt;: An op which feeds a single Tensor value into the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ed93a348e653d595addf7a603975b09f3217b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/infeedenqueueprelinearizedbuffer&quot;&gt;&lt;code&gt;InfeedEnqueuePrelinearizedBuffer(...)&lt;/code&gt;&lt;/a&gt;: An op which enqueues prelinearized buffer into TPU infeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187a1514d16fff954726f9cde5071b7b62172fae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/infeedenqueuetuple&quot;&gt;&lt;code&gt;InfeedEnqueueTuple(...)&lt;/code&gt;&lt;/a&gt;: Feeds multiple Tensor values into the computation as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec219eee4b4974c5c8a43fc2332997f78b228492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/initializetable&quot;&gt;&lt;code&gt;InitializeTable(...)&lt;/code&gt;&lt;/a&gt;: Table initializer that takes two tensors for keys and values respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cfdad39af05f607159acd8b5f43a68e4456d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/initializetablefromtextfile&quot;&gt;&lt;code&gt;InitializeTableFromTextFile(...)&lt;/code&gt;&lt;/a&gt;: Initializes a table from a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546e4c22996227d242eea9de38f18233d9605a81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/initializetablefromtextfilev2&quot;&gt;&lt;code&gt;InitializeTableFromTextFileV2(...)&lt;/code&gt;&lt;/a&gt;: Initializes a table from a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dfaf65c04c3083ca32a7edf3225bed7bcb10c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/initializetablev2&quot;&gt;&lt;code&gt;InitializeTableV2(...)&lt;/code&gt;&lt;/a&gt;: Table initializer that takes two tensors for keys and values respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63f0b12033a51fb67c682823648ace22bca2d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/inplaceadd&quot;&gt;&lt;code&gt;InplaceAdd(...)&lt;/code&gt;&lt;/a&gt;: Adds v into specified rows of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf9f198585ea7c2098c3a8eadfe86080070bd63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/inplacesub&quot;&gt;&lt;code&gt;InplaceSub(...)&lt;/code&gt;&lt;/a&gt;: Subtracts &lt;code&gt;v&lt;/code&gt; into specified rows of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62034e8b53f7e45323d56228aa99cc39d1c80a5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/inplaceupdate&quot;&gt;&lt;code&gt;InplaceUpdate(...)&lt;/code&gt;&lt;/a&gt;: Updates specified rows 'i' with values 'v'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85e8163a5704c7a8907ff1b57b7b2ad4fb3b0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/interleavedataset&quot;&gt;&lt;code&gt;InterleaveDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55017089a6b74cab621c4eb53e13e21c2ffb9832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/intopk&quot;&gt;&lt;code&gt;InTopK(...)&lt;/code&gt;&lt;/a&gt;: Says whether the targets are in the top &lt;code&gt;K&lt;/code&gt; predictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c03f28b7033e7d40dee08bc6e758da98f93cb1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/intopkv2&quot;&gt;&lt;code&gt;InTopKV2(...)&lt;/code&gt;&lt;/a&gt;: Says whether the targets are in the top &lt;code&gt;K&lt;/code&gt; predictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786bd7de6917d1435939888590a942ccaa3aaa7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/inv&quot;&gt;&lt;code&gt;Inv(...)&lt;/code&gt;&lt;/a&gt;: Computes the reciprocal of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9350abaa6ad8fca28b3f121fa009f2112bf0af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/invert&quot;&gt;&lt;code&gt;Invert(...)&lt;/code&gt;&lt;/a&gt;: Invert (flip) each bit of supported types; for example, type &lt;code&gt;uint8&lt;/code&gt; value 01010101 becomes 10101010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfec47b466823297b182b0635d7e1cf5debf27d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/invertpermutation&quot;&gt;&lt;code&gt;InvertPermutation(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse permutation of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf441328c9a6a0d76f964440a1616cb154d2184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/invgrad&quot;&gt;&lt;code&gt;InvGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the gradient for the inverse of &lt;code&gt;x&lt;/code&gt; wrt its input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14f90010c7cb9f553c1978dc41fd641eb364020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/irfft&quot;&gt;&lt;code&gt;IRFFT(...)&lt;/code&gt;&lt;/a&gt;: Inverse real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdfcad01c589832bd2beb67153295309791b10b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/irfft2d&quot;&gt;&lt;code&gt;IRFFT2D(...)&lt;/code&gt;&lt;/a&gt;: Inverse 2D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521beae89f497613ed0d113b3f4522ca1a6caabd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/irfft3d&quot;&gt;&lt;code&gt;IRFFT3D(...)&lt;/code&gt;&lt;/a&gt;: Inverse 3D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc15401e309911c24f1d524042c60156c137ccac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isboostedtreesensembleinitialized&quot;&gt;&lt;code&gt;IsBoostedTreesEnsembleInitialized(...)&lt;/code&gt;&lt;/a&gt;: Checks whether a tree ensemble has been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479b12a69322e207136809bcd89c5d1ebd6f8810" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isboostedtreesquantilestreamresourceinitialized&quot;&gt;&lt;code&gt;IsBoostedTreesQuantileStreamResourceInitialized(...)&lt;/code&gt;&lt;/a&gt;: Checks whether a quantile stream has been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b32df4449d31059d9775b67a4b4ef60a4934cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isfinite&quot;&gt;&lt;code&gt;IsFinite(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5106c249e12ce32d87acdd54ea68812b38cadb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isinf&quot;&gt;&lt;code&gt;IsInf(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are Inf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6711312365073319095fd78bef3a00a3623f4ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isnan&quot;&gt;&lt;code&gt;IsNan(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13467d6e0f774ba0f6781f1936453ead360c2adf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/isvariableinitialized&quot;&gt;&lt;code&gt;IsVariableInitialized(...)&lt;/code&gt;&lt;/a&gt;: Checks whether a tensor has been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627a27c96055274046880c3fd55fb5f256792947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iterator&quot;&gt;&lt;code&gt;Iterator(...)&lt;/code&gt;&lt;/a&gt;: A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecdd98cb7a8402e5dfc9c86af575635183ae978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratorfromstringhandle&quot;&gt;&lt;code&gt;IteratorFromStringHandle(...)&lt;/code&gt;&lt;/a&gt;: Converts the given string representing a handle to an iterator to a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787807a08d0f50d41043caba369cca0f20caac79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratorgetdevice&quot;&gt;&lt;code&gt;IteratorGetDevice(...)&lt;/code&gt;&lt;/a&gt;: Returns the name of the device on which &lt;code&gt;resource&lt;/code&gt; has been placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64878bfceacd86cd1840f815ccbb94565f4a4b00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratorgetnext&quot;&gt;&lt;code&gt;IteratorGetNext(...)&lt;/code&gt;&lt;/a&gt;: Gets the next output from the given iterator .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612f990c4dcb7a7b26723c3b922fdb94ba0df319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratorgetnextasoptional&quot;&gt;&lt;code&gt;IteratorGetNextAsOptional(...)&lt;/code&gt;&lt;/a&gt;: Gets the next output from the given iterator as an Optional variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ab88baeaa8e05dde24b93bfc1d904b5c611cbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratorgetnextsync&quot;&gt;&lt;code&gt;IteratorGetNextSync(...)&lt;/code&gt;&lt;/a&gt;: Gets the next output from the given iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502da3ca706ae5f9b1388b4d249cfb1fb2cad4ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/iteratortostringhandle&quot;&gt;&lt;code&gt;IteratorToStringHandle(...)&lt;/code&gt;&lt;/a&gt;: Converts the given &lt;code&gt;resource_handle&lt;/code&gt; representing an iterator to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c88758bc377950c65c2e2e87fe399cdbdfa187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/l2loss&quot;&gt;&lt;code&gt;L2Loss(...)&lt;/code&gt;&lt;/a&gt;: L2 Loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8105aa4e7f806633bb8c07224b17e31863a9d37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/latencystatsdataset&quot;&gt;&lt;code&gt;LatencyStatsDataset(...)&lt;/code&gt;&lt;/a&gt;: Records the latency of producing &lt;code&gt;input_dataset&lt;/code&gt; elements in a StatsAggregator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e190601797bc82d4f52799c599829e52528f3c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/leakyrelu&quot;&gt;&lt;code&gt;LeakyRelu(...)&lt;/code&gt;&lt;/a&gt;: Computes rectified linear: &lt;code&gt;max(features, features * alpha)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032baf9fcb35a8dc9947a117aa802d35930a2546" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/leakyrelugrad&quot;&gt;&lt;code&gt;LeakyReluGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes rectified linear gradients for a LeakyRelu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f04b5e1fbc286b5f8f73950ca560afa3442dfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/learnedunigramcandidatesampler&quot;&gt;&lt;code&gt;LearnedUnigramCandidateSampler(...)&lt;/code&gt;&lt;/a&gt;: Generates labels for candidate sampling with a learned unigram distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed70f02b9eb6f5f139e1d441d4199cb839104cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/leftshift&quot;&gt;&lt;code&gt;LeftShift(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise left-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468f805b0215eac64986f958e6347e780cd91713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/legacyparallelinterleavedatasetv2&quot;&gt;&lt;code&gt;LegacyParallelInterleaveDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bf36373db3863ef6780a59c5b960eba377ab40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/less&quot;&gt;&lt;code&gt;Less(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt; y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122450f8e277717062e4da59ac5253c679f415ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lessequal&quot;&gt;&lt;code&gt;LessEqual(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt;= y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df00ffe708a4ff8f63884d4b014265d98e8ce43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lgamma&quot;&gt;&lt;code&gt;Lgamma(...)&lt;/code&gt;&lt;/a&gt;: Computes the log of the absolute value of &lt;code&gt;Gamma(x)&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6f18047f2620968b0a66f716d2887d74c7249" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/linspace&quot;&gt;&lt;code&gt;LinSpace(...)&lt;/code&gt;&lt;/a&gt;: Generates values in an interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2942b8575195494843c97c3ef2004013d4463c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/listdiff&quot;&gt;&lt;code&gt;ListDiff(...)&lt;/code&gt;&lt;/a&gt;: Computes the difference between two lists of numbers or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c25fc5ffee4a1d16c22e0d6cd76e44620ad44f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lmdbdataset&quot;&gt;&lt;code&gt;LMDBDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that emits the key-value pairs in one or more LMDB files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca01f852438f2a310ae8d5d67396699a11422df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lmdbreader&quot;&gt;&lt;code&gt;LMDBReader(...)&lt;/code&gt;&lt;/a&gt;: A Reader that outputs the records from a LMDB file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8346edc1f79e127e38e9367cd9c4e5483c1334e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadandremapmatrix&quot;&gt;&lt;code&gt;LoadAndRemapMatrix(...)&lt;/code&gt;&lt;/a&gt;: Loads a 2-D (matrix) &lt;code&gt;Tensor&lt;/code&gt; with name &lt;code&gt;old_tensor_name&lt;/code&gt; from the checkpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e21ac2639efa80c72bfae93ed257eb51f8d498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadadeltaparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingAdadeltaParameters(...)&lt;/code&gt;&lt;/a&gt;: Load Adadelta embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1e668f290ec870586198a54e9d23e146d2f504" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadadeltaparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingAdadeltaParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load Adadelta parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528580efd683e194ddea0c25de1ab4c25396b0e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadagradparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingAdagradParameters(...)&lt;/code&gt;&lt;/a&gt;: Load Adagrad embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0229de33e40c1ddd5b5b7c62116c661a16b87520" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadagradparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingAdagradParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load Adagrad embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88a4a1275ad9525668bcef811f557e8132e0c0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadamparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingADAMParameters(...)&lt;/code&gt;&lt;/a&gt;: Load ADAM embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca93b0412d4643172f9f79330f1c96f7e59d43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingadamparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingADAMParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load ADAM embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd0874eab8a59db5e08075e4aac924bf94b2d2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingcenteredrmspropparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingCenteredRMSPropParameters(...)&lt;/code&gt;&lt;/a&gt;: Load centered RMSProp embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11a049bab8c21796be3cce321033b5ae571492b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingftrlparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingFTRLParameters(...)&lt;/code&gt;&lt;/a&gt;: Load FTRL embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ec979cfa3596f6df412bc4fafc79cd38707ea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingftrlparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingFTRLParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load FTRL embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5b0d5397a4850b9f802ddc127386f471feb7b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingmdladagradlightparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingMDLAdagradLightParameters(...)&lt;/code&gt;&lt;/a&gt;: Load MDL Adagrad Light embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7775ad44069a315565578dada6cb30c259783b53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingmomentumparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingMomentumParameters(...)&lt;/code&gt;&lt;/a&gt;: Load Momentum embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f1cbfbc6eef6fcfd3fbbea7e37bb9801abe29e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingmomentumparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingMomentumParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load Momentum embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8091258488a5aba5ffb5b347f38475c751de9583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingproximaladagradparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingProximalAdagradParameters(...)&lt;/code&gt;&lt;/a&gt;: Load proximal Adagrad embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131074a1de1f08cd590cf6aee953d28d896ec58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingproximaladagradparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load proximal Adagrad embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11dfe4885026a080798ac2fe628dbb06b98f202" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingrmspropparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingRMSPropParameters(...)&lt;/code&gt;&lt;/a&gt;: Load RMSProp embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e73c26fcbfa242d676c07d90381fca49bff37c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingrmspropparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingRMSPropParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load RMSProp embedding parameters with debug support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a2acf47bd82964f3cfecc098adf32791ffff9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingstochasticgradientdescentparameters&quot;&gt;&lt;code&gt;LoadTPUEmbeddingStochasticGradientDescentParameters(...)&lt;/code&gt;&lt;/a&gt;: Load SGD embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d3de44d23ada9c6a91b289553aceef8670b274" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loadtpuembeddingstochasticgradientdescentparametersgradaccumdebug&quot;&gt;&lt;code&gt;LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug(...)&lt;/code&gt;&lt;/a&gt;: Load SGD embedding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea4cefc790d9f0d7bd31c6503ed9768d7095b03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/log&quot;&gt;&lt;code&gt;Log(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ee0fb27272dd4622fcc6020cc7306fb774305d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/log1p&quot;&gt;&lt;code&gt;Log1p(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of (1 + x) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdd4a94d5061145bd09173642663491aef98385" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/logicaland&quot;&gt;&lt;code&gt;LogicalAnd(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x AND y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e725e398e66069b6ad5e24f526feddb8f4b8af05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/logicalnot&quot;&gt;&lt;code&gt;LogicalNot(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of &lt;code&gt;NOT x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5b59cf018b1544965c40607a68ef4874943114" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/logicalor&quot;&gt;&lt;code&gt;LogicalOr(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x OR y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832b93b9371471b86feebc7651f629b99c03e4a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/logmatrixdeterminant&quot;&gt;&lt;code&gt;LogMatrixDeterminant(...)&lt;/code&gt;&lt;/a&gt;: Computes the sign and the log of the absolute value of the determinant of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8032220acf76b11e33daea0a12b2996182dbed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/logsoftmax&quot;&gt;&lt;code&gt;LogSoftmax(...)&lt;/code&gt;&lt;/a&gt;: Computes log softmax activations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d907a98100402e8bfaad4d0ef52720f4c69381e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loguniformcandidatesampler&quot;&gt;&lt;code&gt;LogUniformCandidateSampler(...)&lt;/code&gt;&lt;/a&gt;: Generates labels for candidate sampling with a log-uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693eb58457848fc36a4d83fde74140e2d15ebcb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableexport&quot;&gt;&lt;code&gt;LookupTableExport(...)&lt;/code&gt;&lt;/a&gt;: Outputs all keys and values in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecc4779b0f9bfd0de9418aed9a5f9a8029aa184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableexportv2&quot;&gt;&lt;code&gt;LookupTableExportV2(...)&lt;/code&gt;&lt;/a&gt;: Outputs all keys and values in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcf29a1a6a190ab777a98bda28cc76898583a8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptablefind&quot;&gt;&lt;code&gt;LookupTableFind(...)&lt;/code&gt;&lt;/a&gt;: Looks up keys in a table, outputs the corresponding values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbfa2eb615669aaf742a72e9cb2c2c201df1a39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptablefindv2&quot;&gt;&lt;code&gt;LookupTableFindV2(...)&lt;/code&gt;&lt;/a&gt;: Looks up keys in a table, outputs the corresponding values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5156163c6322e8cd097ec06979345c1d267cf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableimport&quot;&gt;&lt;code&gt;LookupTableImport(...)&lt;/code&gt;&lt;/a&gt;: Replaces the contents of the table with the specified keys and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896cfd43c1295699b9b5203f589079b720c0bf2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableimportv2&quot;&gt;&lt;code&gt;LookupTableImportV2(...)&lt;/code&gt;&lt;/a&gt;: Replaces the contents of the table with the specified keys and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd493f22fca694b62913dc4f52149f9a8ebabd48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableinsert&quot;&gt;&lt;code&gt;LookupTableInsert(...)&lt;/code&gt;&lt;/a&gt;: Updates the table to associates keys with values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e83cdf63c212ec6dfd6b50fb916093ada8866ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableinsertv2&quot;&gt;&lt;code&gt;LookupTableInsertV2(...)&lt;/code&gt;&lt;/a&gt;: Updates the table to associates keys with values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d43b0637b308ba2d3768cb4d4bc1806cbfbcd2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptableremovev2&quot;&gt;&lt;code&gt;LookupTableRemoveV2(...)&lt;/code&gt;&lt;/a&gt;: Removes keys and its associated values from a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918aa51f40e9a83a657754196ccfa7f3c6fb73a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptablesize&quot;&gt;&lt;code&gt;LookupTableSize(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of elements in the given table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c29d0bd10de64a47ce8e51ec06f7abdc4fa3082" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lookuptablesizev2&quot;&gt;&lt;code&gt;LookupTableSizeV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of elements in the given table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c892b45ecc96033819c804387986e4f3100c95d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/loopcond&quot;&gt;&lt;code&gt;LoopCond(...)&lt;/code&gt;&lt;/a&gt;: Forwards the input to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208ffbc79ba9e2f2e7067c1beb76937e80462332" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lowerbound&quot;&gt;&lt;code&gt;LowerBound(...)&lt;/code&gt;&lt;/a&gt;: Applies lower_bound(sorted_search_values, values) along each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37177b9a64c0c3ca8920ad0c666941762fd0ed5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lrn&quot;&gt;&lt;code&gt;LRN(...)&lt;/code&gt;&lt;/a&gt;: Local Response Normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74f7a71fc59c5660875550768ab9a3acaf1bfba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lrngrad&quot;&gt;&lt;code&gt;LRNGrad(...)&lt;/code&gt;&lt;/a&gt;: Gradients for Local Response Normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71adb7c0d1052d7c1fef6a3a7cb8ae6ad260843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lstmblockcell&quot;&gt;&lt;code&gt;LSTMBlockCell(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell forward propagation for 1 time step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c98a3e81506be6a8bfe9dbed4ab4b4437efcf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lstmblockcellgrad&quot;&gt;&lt;code&gt;LSTMBlockCellGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the LSTM cell backward propagation for 1 timestep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3964bd2417498600c8b01b8454b824cac22de5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/lu&quot;&gt;&lt;code&gt;Lu(...)&lt;/code&gt;&lt;/a&gt;: Computes the LU decomposition of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a541efa388800fbc9ebd12b6eb5180e3747c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/makeiterator&quot;&gt;&lt;code&gt;MakeIterator(...)&lt;/code&gt;&lt;/a&gt;: Makes a new iterator from the given &lt;code&gt;dataset&lt;/code&gt; and stores it in &lt;code&gt;iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8406550677d273c4bcea056bbcf30e9375c37d92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapandbatchdataset&quot;&gt;&lt;code&gt;MapAndBatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that fuses mapping with batching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be372d5f90d2980e4dabcc109745ba73c1eea67f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapclear&quot;&gt;&lt;code&gt;MapClear(...)&lt;/code&gt;&lt;/a&gt;: Op removes all elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96bff5811367bd7029ce7487c781a99b708f7ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapdataset&quot;&gt;&lt;code&gt;MapDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de38a86a025184948b9010a4095ad550bc3f1048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapdefun&quot;&gt;&lt;code&gt;MapDefun(...)&lt;/code&gt;&lt;/a&gt;: Maps a function on the list of tensors unpacked from arguments on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ac0c1edc0d4e91e416f8bd924cc2dd9a715ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapincompletesize&quot;&gt;&lt;code&gt;MapIncompleteSize(...)&lt;/code&gt;&lt;/a&gt;: Op returns the number of incomplete elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ece840846aa2c8a6f9bd1087552e45cf3abbead" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mappeek&quot;&gt;&lt;code&gt;MapPeek(...)&lt;/code&gt;&lt;/a&gt;: Op peeks at the values at the specified key. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2867db7fedf52e43edeabdb8a4b6fd5974c0c856" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapsize&quot;&gt;&lt;code&gt;MapSize(...)&lt;/code&gt;&lt;/a&gt;: Op returns the number of elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9726f3096bb6f5c2fe28c47804934d192d4d737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapstage&quot;&gt;&lt;code&gt;MapStage(...)&lt;/code&gt;&lt;/a&gt;: Stage (key, values) in the underlying container which behaves like a hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00ccb2e5ab35b04afe1ef0376aa8bd5b5adf17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapunstage&quot;&gt;&lt;code&gt;MapUnstage(...)&lt;/code&gt;&lt;/a&gt;: Op removes and returns the values associated with the key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08303fa4e39e8904913c968c080d20056af120f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mapunstagenokey&quot;&gt;&lt;code&gt;MapUnstageNoKey(...)&lt;/code&gt;&lt;/a&gt;: Op removes and returns a random (key, value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfb6f8be1fc4c9425a7294bd5675a56ca7bb472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matchingfiles&quot;&gt;&lt;code&gt;MatchingFiles(...)&lt;/code&gt;&lt;/a&gt;: Returns the set of files matching one or more glob patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b78299bf22ebe29e20e94dad22799084f8b7aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matmul&quot;&gt;&lt;code&gt;MatMul(...)&lt;/code&gt;&lt;/a&gt;: Multiply the matrix &quot;a&quot; by the matrix &quot;b&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d2d115cc9f3440f2befbe08072faa87cfae6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixbandpart&quot;&gt;&lt;code&gt;MatrixBandPart(...)&lt;/code&gt;&lt;/a&gt;: Copy a tensor setting everything outside a central band in each innermost matrix to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d6919153dc8de5be6838cc52955c8da983e752" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdeterminant&quot;&gt;&lt;code&gt;MatrixDeterminant(...)&lt;/code&gt;&lt;/a&gt;: Computes the determinant of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ecf133a77e723fe4df974bf6e8e218060c5eb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiag&quot;&gt;&lt;code&gt;MatrixDiag(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched diagonal tensor with a given batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca6ff998ea4dfa734f4a76f455135167c235685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiagpart&quot;&gt;&lt;code&gt;MatrixDiagPart(...)&lt;/code&gt;&lt;/a&gt;: Returns the batched diagonal part of a batched tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ef056b6b337eda949eb7f279dc1c90b2d0fbf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiagpartv2&quot;&gt;&lt;code&gt;MatrixDiagPartV2(...)&lt;/code&gt;&lt;/a&gt;: Returns the batched diagonal part of a batched tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6413a5425fe675aa2f3000d9aec5b90a0714393d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiagpartv3&quot;&gt;&lt;code&gt;MatrixDiagPartV3(...)&lt;/code&gt;&lt;/a&gt;: Returns the batched diagonal part of a batched tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a948f8faf344f476fdffc19827aab3d00baee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiagv2&quot;&gt;&lt;code&gt;MatrixDiagV2(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched diagonal tensor with given batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1623f6bfe69a20534228193ec18684b594406269" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixdiagv3&quot;&gt;&lt;code&gt;MatrixDiagV3(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched diagonal tensor with given batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe29944681466f97d2400ec1a01b11ecd9ded6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixexponential&quot;&gt;&lt;code&gt;MatrixExponential(...)&lt;/code&gt;&lt;/a&gt;: Deprecated, use python implementation tf.linalg.matrix_exponential.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d466ef2f894f2357b61cef6f15e19ba12f388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixinverse&quot;&gt;&lt;code&gt;MatrixInverse(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse of one or more square invertible matrices or their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e476b6f18e9d678cfd9ba16a11e7e1ba29eb742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixlogarithm&quot;&gt;&lt;code&gt;MatrixLogarithm(...)&lt;/code&gt;&lt;/a&gt;: Computes the matrix logarithm of one or more square matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bba36677a8630419cc9dcbfca7249566eaf8452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsetdiag&quot;&gt;&lt;code&gt;MatrixSetDiag(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched matrix tensor with new batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e190fcf9267465e5c90acd444cac78b2bef9f18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsetdiagv2&quot;&gt;&lt;code&gt;MatrixSetDiagV2(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched matrix tensor with new batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f49656668af9f2acdaaef98200dedb43095ad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsetdiagv3&quot;&gt;&lt;code&gt;MatrixSetDiagV3(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched matrix tensor with new batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9baa16d68589640a677b3f3b51fcca789f3f144" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsolve&quot;&gt;&lt;code&gt;MatrixSolve(...)&lt;/code&gt;&lt;/a&gt;: Solves systems of linear equations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e00287172a8ccb279f95f8185e7890950276de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsolvels&quot;&gt;&lt;code&gt;MatrixSolveLs(...)&lt;/code&gt;&lt;/a&gt;: Solves one or more linear least-squares problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d492990174f11a8e8f6e351b498ca969376bc802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixsquareroot&quot;&gt;&lt;code&gt;MatrixSquareRoot(...)&lt;/code&gt;&lt;/a&gt;: Computes the matrix square root of one or more square matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3d8f28d2ba436894761b89e2296c39b1369b68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/matrixtriangularsolve&quot;&gt;&lt;code&gt;MatrixTriangularSolve(...)&lt;/code&gt;&lt;/a&gt;: Solves systems of linear equations with upper or lower triangular matrices by backsubstitution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1cafbe7c5c3f2e2976b3ab071c7cd3b5b50fa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/max&quot;&gt;&lt;code&gt;Max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de44c0a93623baf1a2c17c603358995db95e2c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maximum&quot;&gt;&lt;code&gt;Maximum(...)&lt;/code&gt;&lt;/a&gt;: Returns the max of x and y (i.e. x &amp;gt; y ? x : y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e61ad183629ba362714358a4651dda6d4a401bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxintraopparallelismdataset&quot;&gt;&lt;code&gt;MaxIntraOpParallelismDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that overrides the maximum intra-op parallelism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4944455a19a040ade8329b6106db5aff2fcb2d50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpool&quot;&gt;&lt;code&gt;MaxPool(...)&lt;/code&gt;&lt;/a&gt;: Performs max pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c94bf188426555546062cc30de1ae0feeebf48b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpool3d&quot;&gt;&lt;code&gt;MaxPool3D(...)&lt;/code&gt;&lt;/a&gt;: Performs 3D max pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a1ef73280f00f76f2592bcfbf29416d95d6934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpool3dgrad&quot;&gt;&lt;code&gt;MaxPool3DGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of 3D max pooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43706875b5fc956ac0f3e69c32b6013bedab053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpool3dgradgrad&quot;&gt;&lt;code&gt;MaxPool3DGradGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes second-order gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b522b9646130926a85c17bcd7865ad91d544eb11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgrad&quot;&gt;&lt;code&gt;MaxPoolGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001531b4efc5290694eb44edf01d40b891163f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgradgrad&quot;&gt;&lt;code&gt;MaxPoolGradGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes second-order gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323909c00a57d03c6384bf60fcf8104ad7937459" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgradgradv2&quot;&gt;&lt;code&gt;MaxPoolGradGradV2(...)&lt;/code&gt;&lt;/a&gt;: Computes second-order gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05170b65fc20c9d7a70713e88af9cca81680829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgradgradwithargmax&quot;&gt;&lt;code&gt;MaxPoolGradGradWithArgmax(...)&lt;/code&gt;&lt;/a&gt;: Computes second-order gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ba7666df6c67dc20bbc13053faa19480af0ed5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgradv2&quot;&gt;&lt;code&gt;MaxPoolGradV2(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd6d63c4a754b13f218bf67253f12764ce92ad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolgradwithargmax&quot;&gt;&lt;code&gt;MaxPoolGradWithArgmax(...)&lt;/code&gt;&lt;/a&gt;: Computes gradients of the maxpooling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b381e7b24662a55eba9578101c9f38342454910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolv2&quot;&gt;&lt;code&gt;MaxPoolV2(...)&lt;/code&gt;&lt;/a&gt;: Performs max pooling on the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc4a06c3be23bd7a7fffeb39f5a4505b52ac311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/maxpoolwithargmax&quot;&gt;&lt;code&gt;MaxPoolWithArgmax(...)&lt;/code&gt;&lt;/a&gt;: Performs max pooling on the input and outputs both max values and indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7ce4d97e7d87058cbfc38169f37936ad47723b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mean&quot;&gt;&lt;code&gt;Mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc05404ffc66f09f7dc42a1d94dedefdbb13a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/merge&quot;&gt;&lt;code&gt;Merge(...)&lt;/code&gt;&lt;/a&gt;: Forwards the value of an available tensor from &lt;code&gt;inputs&lt;/code&gt; to &lt;code&gt;output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b3957abffa36b28604323e0d8a6d7370f47bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mergesummary&quot;&gt;&lt;code&gt;MergeSummary(...)&lt;/code&gt;&lt;/a&gt;: Merges summaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4633b8557cfef91d7c1f6c14acad7084b7bb28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mergev2checkpoints&quot;&gt;&lt;code&gt;MergeV2Checkpoints(...)&lt;/code&gt;&lt;/a&gt;: V2 format specific: merges the metadata files of sharded checkpoints. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7319d71b95ae2b95a72cd89a923c322ae249b38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mfcc&quot;&gt;&lt;code&gt;Mfcc(...)&lt;/code&gt;&lt;/a&gt;: Transforms a spectrogram into a form that's useful for speech recognition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74232614a882c3c0faf3f3f25991f99942887d20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/min&quot;&gt;&lt;code&gt;Min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f6db3423255b3ff42c2b89500358f4cd614c31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/minimum&quot;&gt;&lt;code&gt;Minimum(...)&lt;/code&gt;&lt;/a&gt;: Returns the min of x and y (i.e. x &amp;lt; y ? x : y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd875f2c0bbaea3b48957af496d37bb6d4bff1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mirrorpad&quot;&gt;&lt;code&gt;MirrorPad(...)&lt;/code&gt;&lt;/a&gt;: Pads a tensor with mirrored values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd8043db10019b013ac9b721bac5660caae0881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mirrorpadgrad&quot;&gt;&lt;code&gt;MirrorPadGrad(...)&lt;/code&gt;&lt;/a&gt;: Gradient op for &lt;code&gt;MirrorPad&lt;/code&gt; op. This op folds a mirror-padded tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5258ef2ed31ccd6c95d5bbd72cd7ca1bce58e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mod&quot;&gt;&lt;code&gt;Mod(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise remainder of division. This emulates C semantics in that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526999d71c63c382849463d4d85c522cbda219e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/modeldataset&quot;&gt;&lt;code&gt;ModelDataset(...)&lt;/code&gt;&lt;/a&gt;: Identity transformation that models performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525e2c46da01893f9e17577e1a43a2be20bcb599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mul&quot;&gt;&lt;code&gt;Mul(...)&lt;/code&gt;&lt;/a&gt;: Returns x * y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebde26c1674bcf47b95c23bc555ee67073c649a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mulnonan&quot;&gt;&lt;code&gt;MulNoNan(...)&lt;/code&gt;&lt;/a&gt;: Returns x * y element-wise. Returns zero if y is zero, even if x if infinite or NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c637a53a25815a2df657ac8471bf145b727eb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multideviceiterator&quot;&gt;&lt;code&gt;MultiDeviceIterator(...)&lt;/code&gt;&lt;/a&gt;: Creates a MultiDeviceIterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcb008a9afa4825e2be5554287c367cd4288f49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multideviceiteratorfromstringhandle&quot;&gt;&lt;code&gt;MultiDeviceIteratorFromStringHandle(...)&lt;/code&gt;&lt;/a&gt;: Generates a MultiDeviceIterator resource from its provided string handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f16383d00563a762c30fbd604676bc1baf81a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multideviceiteratorgetnextfromshard&quot;&gt;&lt;code&gt;MultiDeviceIteratorGetNextFromShard(...)&lt;/code&gt;&lt;/a&gt;: Gets next element for the provided shard number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d46a6bf7c6a01e5e2bd0b06ce7356da168810c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multideviceiteratorinit&quot;&gt;&lt;code&gt;MultiDeviceIteratorInit(...)&lt;/code&gt;&lt;/a&gt;: Initializes the multi device iterator with the given dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb39f5b4f8750afa4b89d932c123da56681969e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multideviceiteratortostringhandle&quot;&gt;&lt;code&gt;MultiDeviceIteratorToStringHandle(...)&lt;/code&gt;&lt;/a&gt;: Produces a string handle for the given MultiDeviceIterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7247d5b970e2d57de2e6abf026dc9601777505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/multinomial&quot;&gt;&lt;code&gt;Multinomial(...)&lt;/code&gt;&lt;/a&gt;: Draws samples from a multinomial distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdeee418f26cecec016b8df37292517a5e91fb6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutabledensehashtable&quot;&gt;&lt;code&gt;MutableDenseHashTable(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table that uses tensors as the backing store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6cdf72ad07dcf8004bbd73bccecd3dcdf4e251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutabledensehashtablev2&quot;&gt;&lt;code&gt;MutableDenseHashTableV2(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table that uses tensors as the backing store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fa548d58bea88a1db9c0932383c0471ace15ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutablehashtable&quot;&gt;&lt;code&gt;MutableHashTable(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9431f1df32146d14011e68aa655ab02e7b257b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutablehashtableoftensors&quot;&gt;&lt;code&gt;MutableHashTableOfTensors(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73504f650f7822319e9bb93888c23ae68b11250e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutablehashtableoftensorsv2&quot;&gt;&lt;code&gt;MutableHashTableOfTensorsV2(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b1c32aa74589e5b2791b36a1be0b4047569f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutablehashtablev2&quot;&gt;&lt;code&gt;MutableHashTableV2(...)&lt;/code&gt;&lt;/a&gt;: Creates an empty hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c2c4327872d32116618ffdf740ea4556d667df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutexlock&quot;&gt;&lt;code&gt;MutexLock(...)&lt;/code&gt;&lt;/a&gt;: Locks a mutex resource. The output is the lock. So long as the lock tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26143706960aa16d4c59f1e8363cf35e65ad4bef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/mutexv2&quot;&gt;&lt;code&gt;MutexV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a Mutex resource that can be locked by &lt;code&gt;MutexLock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a176d0f5cc7c41ff123442eb3ea92c9722388235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ncclallreduce&quot;&gt;&lt;code&gt;NcclAllReduce(...)&lt;/code&gt;&lt;/a&gt;: Outputs a tensor containing the reduction across all input tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea803eeaa39bf6bc4b391a3651882bdca41031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ncclbroadcast&quot;&gt;&lt;code&gt;NcclBroadcast(...)&lt;/code&gt;&lt;/a&gt;: Sends &lt;code&gt;input&lt;/code&gt; to all devices that are connected to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf26f9e1e1d5e244500471622df8b242f4090ea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/ncclreduce&quot;&gt;&lt;code&gt;NcclReduce(...)&lt;/code&gt;&lt;/a&gt;: Reduces &lt;code&gt;input&lt;/code&gt; from &lt;code&gt;num_devices&lt;/code&gt; using &lt;code&gt;reduction&lt;/code&gt; to a single device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af70937fb04caf03908b1b791500c151cd072af4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/neg&quot;&gt;&lt;code&gt;Neg(...)&lt;/code&gt;&lt;/a&gt;: Computes numerical negative value element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8090bc07f18d0cac779735af55366ac7de8c8f1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nextafter&quot;&gt;&lt;code&gt;NextAfter(...)&lt;/code&gt;&lt;/a&gt;: Returns the next representable value of &lt;code&gt;x1&lt;/code&gt; in the direction of &lt;code&gt;x2&lt;/code&gt;, element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a931679d3e9a4d72be0081be6e3a36777141e6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nextiteration&quot;&gt;&lt;code&gt;NextIteration(...)&lt;/code&gt;&lt;/a&gt;: Makes its input available to the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc6e8215464e585456da18e6396b054dbd38dee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nondeterministicints&quot;&gt;&lt;code&gt;NonDeterministicInts(...)&lt;/code&gt;&lt;/a&gt;: Non-deterministically generates some integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7ad76ee03c56b0a5a22471cbb281e40f52b054" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppression&quot;&gt;&lt;code&gt;NonMaxSuppression(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac56006e92bd200a7ea4e91ef875271546f39b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppressionv2&quot;&gt;&lt;code&gt;NonMaxSuppressionV2(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5571f2f5c08e70a427ab3241a532fa9273de46fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppressionv3&quot;&gt;&lt;code&gt;NonMaxSuppressionV3(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83ee3b03b896c25d51dc645cb32f39aeae2343d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppressionv4&quot;&gt;&lt;code&gt;NonMaxSuppressionV4(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2593036941e28f685ac85b96c1866d11b700c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppressionv5&quot;&gt;&lt;code&gt;NonMaxSuppressionV5(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ad09ac9e758779c8ac1f4e8f919e9982476e40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nonmaxsuppressionwithoverlaps&quot;&gt;&lt;code&gt;NonMaxSuppressionWithOverlaps(...)&lt;/code&gt;&lt;/a&gt;: Greedily selects a subset of bounding boxes in descending order of score,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39093bc81885b29f9f02fdd19842ea6aadce1dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/noop&quot;&gt;&lt;code&gt;NoOp(...)&lt;/code&gt;&lt;/a&gt;: Does nothing. Only useful as a placeholder for control edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e99db8b41ed78f174635fc1a134355e8135e563" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/notequal&quot;&gt;&lt;code&gt;NotEqual(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x != y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b1569d9d9d08b2a0ddf84c909f13fb6525dfb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/nthelement&quot;&gt;&lt;code&gt;NthElement(...)&lt;/code&gt;&lt;/a&gt;: Finds values of the &lt;code&gt;n&lt;/code&gt;-th order statistic for the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fbe5d05f7a7809caac95c3ecd211cf8bdfb485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/onehot&quot;&gt;&lt;code&gt;OneHot(...)&lt;/code&gt;&lt;/a&gt;: Returns a one-hot tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fb06791736e76f491c08e7341928290ce46d72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/oneshotiterator&quot;&gt;&lt;code&gt;OneShotIterator(...)&lt;/code&gt;&lt;/a&gt;: Makes a &quot;one-shot&quot; iterator that can be iterated only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5498b39e58e421dbf3880500791150905bc55886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/oneslike&quot;&gt;&lt;code&gt;OnesLike(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor of ones with the same shape and type as x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f52deb29fae1ef6e48ba4ce0387f67cf6cca7f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/optimizedataset&quot;&gt;&lt;code&gt;OptimizeDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset by applying optimizations to &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4304c3f56ad92a9c55d89a34d9546f056c9c3741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/optionalfromvalue&quot;&gt;&lt;code&gt;OptionalFromValue(...)&lt;/code&gt;&lt;/a&gt;: Constructs an Optional variant from a tuple of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beea7c3a9e87de790eadf7ead501698a0582e85f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/optionalgetvalue&quot;&gt;&lt;code&gt;OptionalGetValue(...)&lt;/code&gt;&lt;/a&gt;: Returns the value stored in an Optional variant or raises an error if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268b56608f87d6ca69227236135019e53f6accef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/optionalhasvalue&quot;&gt;&lt;code&gt;OptionalHasValue(...)&lt;/code&gt;&lt;/a&gt;: Returns true if and only if the given Optional variant has a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539c501afa910736d3db94b0f929088da4583275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/optionalnone&quot;&gt;&lt;code&gt;OptionalNone(...)&lt;/code&gt;&lt;/a&gt;: Creates an Optional variant with no value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae7e81b8c45366e5ed495739c64a82599d657f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapclear&quot;&gt;&lt;code&gt;OrderedMapClear(...)&lt;/code&gt;&lt;/a&gt;: Op removes all elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308ca823b2183ea0bd4e6190b2e2d4b29ed19ecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapincompletesize&quot;&gt;&lt;code&gt;OrderedMapIncompleteSize(...)&lt;/code&gt;&lt;/a&gt;: Op returns the number of incomplete elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb242ab4061c7ded8bb00a25ed71a3697621a4ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmappeek&quot;&gt;&lt;code&gt;OrderedMapPeek(...)&lt;/code&gt;&lt;/a&gt;: Op peeks at the values at the specified key. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3689667e1c1eb87c8976b50cfe824427a269a2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapsize&quot;&gt;&lt;code&gt;OrderedMapSize(...)&lt;/code&gt;&lt;/a&gt;: Op returns the number of elements in the underlying container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14429fb6a3b58ad27da5083844c5d7b4947bbbda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapstage&quot;&gt;&lt;code&gt;OrderedMapStage(...)&lt;/code&gt;&lt;/a&gt;: Stage (key, values) in the underlying container which behaves like a ordered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71009b30290294d558f8a9871a36fcdb02232717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapunstage&quot;&gt;&lt;code&gt;OrderedMapUnstage(...)&lt;/code&gt;&lt;/a&gt;: Op removes and returns the values associated with the key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc8f13e9164b242fc563c0f954cb4401761bb76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/orderedmapunstagenokey&quot;&gt;&lt;code&gt;OrderedMapUnstageNoKey(...)&lt;/code&gt;&lt;/a&gt;: Op removes and returns the (key, value) element with the smallest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dd4b96a40fbd12bb77cc3affa78a137e991c81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/outfeeddequeue&quot;&gt;&lt;code&gt;OutfeedDequeue(...)&lt;/code&gt;&lt;/a&gt;: Retrieves a single tensor from the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5465c8999a0f7617456617cea57dfc69f43bb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/outfeeddequeuetuple&quot;&gt;&lt;code&gt;OutfeedDequeueTuple(...)&lt;/code&gt;&lt;/a&gt;: Retrieve multiple values from the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc59a9eda108bdd29f23335d3333dbc2899783a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/outfeedenqueue&quot;&gt;&lt;code&gt;OutfeedEnqueue(...)&lt;/code&gt;&lt;/a&gt;: Enqueue a Tensor on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3f3b2ea803eee4dbace25ba61781762d93b6f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/outfeedenqueuetuple&quot;&gt;&lt;code&gt;OutfeedEnqueueTuple(...)&lt;/code&gt;&lt;/a&gt;: Enqueue multiple Tensor values on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c18e32b7cbb89a9efeb6ee225f296fea79eee1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/pack&quot;&gt;&lt;code&gt;Pack(...)&lt;/code&gt;&lt;/a&gt;: Packs a list of &lt;code&gt;N&lt;/code&gt; rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83fc3cf2813319c970265ad5de94f00d47dedcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/pad&quot;&gt;&lt;code&gt;Pad(...)&lt;/code&gt;&lt;/a&gt;: Pads a tensor with zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48067779bbef885244e9307d0caa97492c16e53d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/paddedbatchdataset&quot;&gt;&lt;code&gt;PaddedBatchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches and pads &lt;code&gt;batch_size&lt;/code&gt; elements from the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30274ffa94d3753d3c9c05bdb37e6bf332689bb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/paddedbatchdatasetv2&quot;&gt;&lt;code&gt;PaddedBatchDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that batches and pads &lt;code&gt;batch_size&lt;/code&gt; elements from the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992a7eb4b03542cbec390eabdbab89070a45aef7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/paddingfifoqueue&quot;&gt;&lt;code&gt;PaddingFIFOQueue(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ad4abdec772417c96af418d0012af875968f86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/paddingfifoqueuev2&quot;&gt;&lt;code&gt;PaddingFIFOQueueV2(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697e9bb5eed58798b251028d7d2830ef5ef9a3a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/padv2&quot;&gt;&lt;code&gt;PadV2(...)&lt;/code&gt;&lt;/a&gt;: Pads a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db88e8afbbbbdb167c8895e44b61e829982132fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelconcat&quot;&gt;&lt;code&gt;ParallelConcat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates a list of &lt;code&gt;N&lt;/code&gt; tensors along the first dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94645f4f862359743e0820c4b83fffa90df418a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/paralleldynamicstitch&quot;&gt;&lt;code&gt;ParallelDynamicStitch(...)&lt;/code&gt;&lt;/a&gt;: Interleave the values from the &lt;code&gt;data&lt;/code&gt; tensors into a single tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe89649ef859f257be0103371f716325732db0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelinterleavedataset&quot;&gt;&lt;code&gt;ParallelInterleaveDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3015f3c699e378130e3b782bb05c3c11635f1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelinterleavedatasetv2&quot;&gt;&lt;code&gt;ParallelInterleaveDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25634952b7330281c8110b903215e82cf4abfbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelinterleavedatasetv3&quot;&gt;&lt;code&gt;ParallelInterleaveDatasetV3(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84f55a701f0aa064678d2301cbff0ddd65f4b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelinterleavedatasetv4&quot;&gt;&lt;code&gt;ParallelInterleaveDatasetV4(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87101e05b14ab4999340e1e21d6844158e5005d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelmapdataset&quot;&gt;&lt;code&gt;ParallelMapDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3794d80866a0552ec70a88d18e158e542ee13f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parallelmapdatasetv2&quot;&gt;&lt;code&gt;ParallelMapDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that applies &lt;code&gt;f&lt;/code&gt; to the outputs of &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd307324d8b901a05481d3a9778959672163400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parameterizedtruncatednormal&quot;&gt;&lt;code&gt;ParameterizedTruncatedNormal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a normal distribution. The parameters may each be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7c35e56fcde9207e321992c25ef356240cae76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parseexample&quot;&gt;&lt;code&gt;ParseExample(...)&lt;/code&gt;&lt;/a&gt;: Transforms a vector of brain.Example protos (as strings) into typed tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fc11cf4e5cb149e253fcdc5ecd9f41f456811b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parseexampledataset&quot;&gt;&lt;code&gt;ParseExampleDataset(...)&lt;/code&gt;&lt;/a&gt;: Transforms &lt;code&gt;input_dataset&lt;/code&gt; containing &lt;code&gt;Example&lt;/code&gt; protos as vectors of DT_STRING into a dataset of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects representing the parsed features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933417c8e7f7841598fbbcf258dfffc74081f44d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parseexampledatasetv2&quot;&gt;&lt;code&gt;ParseExampleDatasetV2(...)&lt;/code&gt;&lt;/a&gt;: Transforms &lt;code&gt;input_dataset&lt;/code&gt; containing &lt;code&gt;Example&lt;/code&gt; protos as vectors of DT_STRING into a dataset of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects representing the parsed features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dadaa0ae3ab0f595aee83e77ada614295c29c11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parseexamplev2&quot;&gt;&lt;code&gt;ParseExampleV2(...)&lt;/code&gt;&lt;/a&gt;: Transforms a vector of tf.Example protos (as strings) into typed tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ced40ae5162bede4b05c3749c2088f89ee91c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parsesequenceexample&quot;&gt;&lt;code&gt;ParseSequenceExample(...)&lt;/code&gt;&lt;/a&gt;: Transforms a vector of brain.SequenceExample protos (as strings) into typed tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01da0ad26d58b0f89b6cbdf08024d0b7f278e401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parsesequenceexamplev2&quot;&gt;&lt;code&gt;ParseSequenceExampleV2(...)&lt;/code&gt;&lt;/a&gt;: Transforms a vector of tf.io.SequenceExample protos (as strings) into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33af0bb306f7e06903e3a9d54ac88b357b984d41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parsesingleexample&quot;&gt;&lt;code&gt;ParseSingleExample(...)&lt;/code&gt;&lt;/a&gt;: Transforms a tf.Example proto (as a string) into typed tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49a19f08fc0979175cabc6b9b068395f9b570fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parsesinglesequenceexample&quot;&gt;&lt;code&gt;ParseSingleSequenceExample(...)&lt;/code&gt;&lt;/a&gt;: Transforms a scalar brain.SequenceExample proto (as strings) into typed tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a892f8ab7c2166270fb20bed12aa342c1290c422" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/parsetensor&quot;&gt;&lt;code&gt;ParseTensor(...)&lt;/code&gt;&lt;/a&gt;: Transforms a serialized tensorflow.TensorProto proto into a Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0d340b16ae06c3c1e55837b8db235bcefeb4cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/partitionedcall&quot;&gt;&lt;code&gt;PartitionedCall(...)&lt;/code&gt;&lt;/a&gt;: returns &lt;code&gt;f(inputs)&lt;/code&gt;, where &lt;code&gt;f&lt;/code&gt;'s body is placed and partitioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d925f9566b762409dc96b9abed73c77052c54cca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/placeholder&quot;&gt;&lt;code&gt;Placeholder(...)&lt;/code&gt;&lt;/a&gt;: A placeholder op for a value that will be fed into the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529170b411cd8129cd76cd8b8c0335096f0d96cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/placeholderv2&quot;&gt;&lt;code&gt;PlaceholderV2(...)&lt;/code&gt;&lt;/a&gt;: A placeholder op for a value that will be fed into the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cd2c2f7a44968eb2921a3ab90282f0e9a14649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/placeholderwithdefault&quot;&gt;&lt;code&gt;PlaceholderWithDefault(...)&lt;/code&gt;&lt;/a&gt;: A placeholder op that passes through &lt;code&gt;input&lt;/code&gt; when its output is not fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6efa60a83c9aabd4611b5d2986129ad834d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/polygamma&quot;&gt;&lt;code&gt;Polygamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the polygamma function \(\psi^{(n)}(x)\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605eb259cfd1fbf135391570ca8adf3d3276c76a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/populationcount&quot;&gt;&lt;code&gt;PopulationCount(...)&lt;/code&gt;&lt;/a&gt;: Computes element-wise population count (a.k.a. popcount, bitsum, bitcount).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7162ef6129efd02d6eb8531c2e943a5b9f0c5d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/pow&quot;&gt;&lt;code&gt;Pow(...)&lt;/code&gt;&lt;/a&gt;: Computes the power of one value to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9803550a2402d3b75c8c28919a486bed813a884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/prefetchdataset&quot;&gt;&lt;code&gt;PrefetchDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that asynchronously prefetches elements from &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a03007886930c21a16bd808695c3b7077a652f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/prelinearize&quot;&gt;&lt;code&gt;Prelinearize(...)&lt;/code&gt;&lt;/a&gt;: An op which linearizes one Tensor value to an opaque variant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d647fb28480f9ce5052307779cdd43ecae8ae03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/prelinearizetuple&quot;&gt;&lt;code&gt;PrelinearizeTuple(...)&lt;/code&gt;&lt;/a&gt;: An op which linearizes multiple Tensor values to an opaque variant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99c3716aa185cc4eee5536f8e9e6b905397462e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/preventgradient&quot;&gt;&lt;code&gt;PreventGradient(...)&lt;/code&gt;&lt;/a&gt;: An identity op that triggers an error if a gradient is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9676ac424404d5826b757bee9e1db87d0290de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/print&quot;&gt;&lt;code&gt;Print(...)&lt;/code&gt;&lt;/a&gt;: Prints a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f5ce52dae7ca00e0ac9fbf5c86f046f0005365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/printv2&quot;&gt;&lt;code&gt;PrintV2(...)&lt;/code&gt;&lt;/a&gt;: Prints a string scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60da9f6ddb204a3f6bc98f59df73f5ebed065d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements sorted by the first component value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ca69d0706f5c660a8d052a8e646d8a0f70f3ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/priorityqueuev2&quot;&gt;&lt;code&gt;PriorityQueueV2(...)&lt;/code&gt;&lt;/a&gt;: A queue that produces elements sorted by the first component value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2c4eeb8f1d10f0bcd3ead17547d6a8420bfd12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/privatethreadpooldataset&quot;&gt;&lt;code&gt;PrivateThreadPoolDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset that uses a custom thread pool to compute &lt;code&gt;input_dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582116f0e36039085dfedcf61b1a15827f4f15c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/prod&quot;&gt;&lt;code&gt;Prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b009d87c458cc3a4f02978d5cfea520c5b41ba44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/pyfunc&quot;&gt;&lt;code&gt;PyFunc(...)&lt;/code&gt;&lt;/a&gt;: Invokes a python function to compute func(input)-&amp;gt;output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2487c6683791095b464206fc6a6b34fa2e23b546" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/pyfuncstateless&quot;&gt;&lt;code&gt;PyFuncStateless(...)&lt;/code&gt;&lt;/a&gt;: A stateless version of PyFunc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d389181ad13602c391e6d7225c7e45ae2487ecb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/qr&quot;&gt;&lt;code&gt;Qr(...)&lt;/code&gt;&lt;/a&gt;: Computes the QR decompositions of one or more matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e9c3d03365fa5758e30c87c454f9527fa4e19d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeanddequantize&quot;&gt;&lt;code&gt;QuantizeAndDequantize(...)&lt;/code&gt;&lt;/a&gt;: Use QuantizeAndDequantizeV2 instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3575144f8fad8576bff71f2dff52d2585fedb644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeanddequantizev2&quot;&gt;&lt;code&gt;QuantizeAndDequantizeV2(...)&lt;/code&gt;&lt;/a&gt;: Quantizes then dequantizes a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9cbea59238ceb8a3a6d8e9cc12f445ef16cc1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeanddequantizev3&quot;&gt;&lt;code&gt;QuantizeAndDequantizeV3(...)&lt;/code&gt;&lt;/a&gt;: Quantizes then dequantizes a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3b5d812b7b59df3b8a265da8cce1c396e25976" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedadd&quot;&gt;&lt;code&gt;QuantizedAdd(...)&lt;/code&gt;&lt;/a&gt;: Returns x + y element-wise, working on quantized buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dd7533c703536203a6a75abf514cdb599eb543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedavgpool&quot;&gt;&lt;code&gt;QuantizedAvgPool(...)&lt;/code&gt;&lt;/a&gt;: Produces the average pool of the input tensor for quantized types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ea8eb1c00b595085610ceee19e3a1cdcd0cea4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedbatchnormwithglobalnormalization&quot;&gt;&lt;code&gt;QuantizedBatchNormWithGlobalNormalization(...)&lt;/code&gt;&lt;/a&gt;: Quantized Batch normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90df61fff2cc7617d58468eabc983483f33278b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedbiasadd&quot;&gt;&lt;code&gt;QuantizedBiasAdd(...)&lt;/code&gt;&lt;/a&gt;: Adds Tensor 'bias' to Tensor 'input' for Quantized types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db697e0f41800e3dc214d38aac692d372e0642bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedconcat&quot;&gt;&lt;code&gt;QuantizedConcat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates quantized tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a4d428e2cb0256086b77e042531be044f3ce24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedconv2d&quot;&gt;&lt;code&gt;QuantizedConv2D(...)&lt;/code&gt;&lt;/a&gt;: Computes a 2D convolution given quantized 4D input and filter tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd58b1ca0f17d7c5261412e4e7053923babdcefb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedconv2dperchannel&quot;&gt;&lt;code&gt;QuantizedConv2DPerChannel(...)&lt;/code&gt;&lt;/a&gt;: Computes QuantizedConv2D per channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad428b62b8b73bcc5d107d3735221cebac4bcd34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeddepthwiseconv2d&quot;&gt;&lt;code&gt;QuantizedDepthwiseConv2D(...)&lt;/code&gt;&lt;/a&gt;: Computes quantized depthwise Conv2D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a125e55273b74de88b27ba03df2dde7f7716865" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeddepthwiseconv2dwithbias&quot;&gt;&lt;code&gt;QuantizedDepthwiseConv2DWithBias(...)&lt;/code&gt;&lt;/a&gt;: Computes quantized depthwise Conv2D with Bias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3be980fb95269017ec4c19ad0a2142a1b6eab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeddepthwiseconv2dwithbiasandrelu&quot;&gt;&lt;code&gt;QuantizedDepthwiseConv2DWithBiasAndRelu(...)&lt;/code&gt;&lt;/a&gt;: Computes quantized depthwise Conv2D with Bias and Relu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbda0362a10ceb0101dcee0367ee44fc7e369cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizeddepthwiseconv2dwithbiasandreluandrequantize&quot;&gt;&lt;code&gt;QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize(...)&lt;/code&gt;&lt;/a&gt;: Computes quantized depthwise Conv2D with Bias, Relu and Requantize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef5ca6c5540643f1eaf52d946e149b4140574ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedinstancenorm&quot;&gt;&lt;code&gt;QuantizedInstanceNorm(...)&lt;/code&gt;&lt;/a&gt;: Quantized Instance normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9063b8d176b448d630192fb4a86877849d452c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmatmul&quot;&gt;&lt;code&gt;QuantizedMatMul(...)&lt;/code&gt;&lt;/a&gt;: Perform a quantized matrix multiplication of &lt;code&gt;a&lt;/code&gt; by the matrix &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf897a90dbd3a67eeb06c48d4ba81d10de64f90f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmatmulwithbias&quot;&gt;&lt;code&gt;QuantizedMatMulWithBias(...)&lt;/code&gt;&lt;/a&gt;: Performs a quantized matrix multiplication of &lt;code&gt;a&lt;/code&gt; by the matrix &lt;code&gt;b&lt;/code&gt; with bias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091e32416c6820f9d0a7c5e27f00051c89136945" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmatmulwithbiasandrelu&quot;&gt;&lt;code&gt;QuantizedMatMulWithBiasAndRelu(...)&lt;/code&gt;&lt;/a&gt;: Perform a quantized matrix multiplication of &lt;code&gt;a&lt;/code&gt; by the matrix &lt;code&gt;b&lt;/code&gt; with bias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b10b2863adcf0c3640eafcd09dec00d54c6826c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmatmulwithbiasandreluandrequantize&quot;&gt;&lt;code&gt;QuantizedMatMulWithBiasAndReluAndRequantize(...)&lt;/code&gt;&lt;/a&gt;: Perform a quantized matrix multiplication of &lt;code&gt;a&lt;/code&gt; by the matrix &lt;code&gt;b&lt;/code&gt; with bias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14169996f6d2638b8b6cdf30925b3307d65521fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmaxpool&quot;&gt;&lt;code&gt;QuantizedMaxPool(...)&lt;/code&gt;&lt;/a&gt;: Produces the max pool of the input tensor for quantized types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da016402a0da736a9c6309a31d630dd2a7fca0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedmul&quot;&gt;&lt;code&gt;QuantizedMul(...)&lt;/code&gt;&lt;/a&gt;: Returns x * y element-wise, working on quantized buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bea01d550d32fd263ba93044e514d7f5c8c8aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedownandshrinkrange&quot;&gt;&lt;code&gt;QuantizeDownAndShrinkRange(...)&lt;/code&gt;&lt;/a&gt;: Convert the quantized 'input' tensor into a lower-precision 'output', using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1831532c2acaea6c8ae19481d8915f43aa1e5c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedrelu&quot;&gt;&lt;code&gt;QuantizedRelu(...)&lt;/code&gt;&lt;/a&gt;: Computes Quantized Rectified Linear: &lt;code&gt;max(features, 0)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2376d384349971f6cc6a1feee1c59dcb7852ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedrelu6&quot;&gt;&lt;code&gt;QuantizedRelu6(...)&lt;/code&gt;&lt;/a&gt;: Computes Quantized Rectified Linear 6: &lt;code&gt;min(max(features, 0), 6)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f12f6c44e5480737bee291687006aeabf2e973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedrelux&quot;&gt;&lt;code&gt;QuantizedReluX(...)&lt;/code&gt;&lt;/a&gt;: Computes Quantized Rectified Linear X: &lt;code&gt;min(max(features, 0), max_value)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cc1a047047128ce644bb0c9283c8c9aced32ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedreshape&quot;&gt;&lt;code&gt;QuantizedReshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a quantized tensor as per the Reshape op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b252d970c7bec65ef0bdd74d67e7956920a007" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizedresizebilinear&quot;&gt;&lt;code&gt;QuantizedResizeBilinear(...)&lt;/code&gt;&lt;/a&gt;: Resize quantized &lt;code&gt;images&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; using quantized bilinear interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785646c97a97ddb82c9bae094d3c1123e3b4f13b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/quantizev2&quot;&gt;&lt;code&gt;QuantizeV2(...)&lt;/code&gt;&lt;/a&gt;: Quantize the 'input' tensor of type float to 'output' tensor of type 'T'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c6e7da12524fefd0673fd1322d69103e48a5ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueclose&quot;&gt;&lt;code&gt;QueueClose(...)&lt;/code&gt;&lt;/a&gt;: Closes the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56d39651ad4b30667f811ab4dbd9f875ec2db0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueclosev2&quot;&gt;&lt;code&gt;QueueCloseV2(...)&lt;/code&gt;&lt;/a&gt;: Closes the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcc24ed17d7ee3d6e76982bca4007d76a807df3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeue&quot;&gt;&lt;code&gt;QueueDequeue(...)&lt;/code&gt;&lt;/a&gt;: Dequeues a tuple of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4317bc459c493cc45fcec47bc3b9f9b72ed8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeuemany&quot;&gt;&lt;code&gt;QueueDequeueMany(...)&lt;/code&gt;&lt;/a&gt;: Dequeues &lt;code&gt;n&lt;/code&gt; tuples of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b454d4d8e8ae450218c9b83be503b52c0df34d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeuemanyv2&quot;&gt;&lt;code&gt;QueueDequeueManyV2(...)&lt;/code&gt;&lt;/a&gt;: Dequeues &lt;code&gt;n&lt;/code&gt; tuples of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9160a1b88fd8b93a1bb18c77fb0b58184a101e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeueupto&quot;&gt;&lt;code&gt;QueueDequeueUpTo(...)&lt;/code&gt;&lt;/a&gt;: Dequeues &lt;code&gt;n&lt;/code&gt; tuples of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbd1561e5440e1b78b27741e3fafc6faf93ad79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeueuptov2&quot;&gt;&lt;code&gt;QueueDequeueUpToV2(...)&lt;/code&gt;&lt;/a&gt;: Dequeues &lt;code&gt;n&lt;/code&gt; tuples of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9adf694d66597e7db5644df6b8a6eeeea325af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuedequeuev2&quot;&gt;&lt;code&gt;QueueDequeueV2(...)&lt;/code&gt;&lt;/a&gt;: Dequeues a tuple of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26174c039379a59679b24a58357f042f8311d95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueenqueue&quot;&gt;&lt;code&gt;QueueEnqueue(...)&lt;/code&gt;&lt;/a&gt;: Enqueues a tuple of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291984dec98df481845d9ac91264525d25fd21e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueenqueuemany&quot;&gt;&lt;code&gt;QueueEnqueueMany(...)&lt;/code&gt;&lt;/a&gt;: Enqueues zero or more tuples of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448f3478a4479aeb627eaee0c0a189c7a84502c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueenqueuemanyv2&quot;&gt;&lt;code&gt;QueueEnqueueManyV2(...)&lt;/code&gt;&lt;/a&gt;: Enqueues zero or more tuples of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9a80cb0fb1e594def4ab7ce6dc0f0db5b6de31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueenqueuev2&quot;&gt;&lt;code&gt;QueueEnqueueV2(...)&lt;/code&gt;&lt;/a&gt;: Enqueues a tuple of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc686e53f991961f50e3a8cc23bfb93b8b942981" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueisclosed&quot;&gt;&lt;code&gt;QueueIsClosed(...)&lt;/code&gt;&lt;/a&gt;: Returns true if queue is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c6d7387855f647b3934da3a317a1045e9e82a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queueisclosedv2&quot;&gt;&lt;code&gt;QueueIsClosedV2(...)&lt;/code&gt;&lt;/a&gt;: Returns true if queue is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e723d3ca907b41cbe55f051095611f9b5831769b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuesize&quot;&gt;&lt;code&gt;QueueSize(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of elements in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43994a6e9fb50eccdc081bf5740f476d98fa6ea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/queuesizev2&quot;&gt;&lt;code&gt;QueueSizeV2(...)&lt;/code&gt;&lt;/a&gt;: Computes the number of elements in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3baf60f2084d77b2f93060b42930a4c7fe9f49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedbincount&quot;&gt;&lt;code&gt;RaggedBincount(...)&lt;/code&gt;&lt;/a&gt;: Counts the number of occurrences of each value in an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90de2c1b2703aaabbb2d66b2d1b7986b534ff23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedcountsparseoutput&quot;&gt;&lt;code&gt;RaggedCountSparseOutput(...)&lt;/code&gt;&lt;/a&gt;: Performs sparse-output bin counting for a ragged tensor input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8615fe34e8ae2403da20dfc6020c975ff3445672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedcross&quot;&gt;&lt;code&gt;RaggedCross(...)&lt;/code&gt;&lt;/a&gt;: Generates a feature cross from a list of tensors, and returns it as a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5521a1bec01bdee422e8aae21cac4eb8b932b4e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedgather&quot;&gt;&lt;code&gt;RaggedGather(...)&lt;/code&gt;&lt;/a&gt;: Gather ragged slices from &lt;code&gt;params&lt;/code&gt; axis &lt;code&gt;0&lt;/code&gt; according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebad362b955ff622230c40c4ffe571e1639ebad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedrange&quot;&gt;&lt;code&gt;RaggedRange(...)&lt;/code&gt;&lt;/a&gt;: Returns a &lt;code&gt;RaggedTensor&lt;/code&gt; containing the specified sequences of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c11f2a9e209ff365c29b2df93927aa71c097ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedtensorfromvariant&quot;&gt;&lt;code&gt;RaggedTensorFromVariant(...)&lt;/code&gt;&lt;/a&gt;: Decodes a &lt;code&gt;variant&lt;/code&gt; Tensor into a &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f282a8f02abf4aad096a4f6dcedccdb14ba9d6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedtensortosparse&quot;&gt;&lt;code&gt;RaggedTensorToSparse(...)&lt;/code&gt;&lt;/a&gt;: Converts a &lt;code&gt;RaggedTensor&lt;/code&gt; into a &lt;code&gt;SparseTensor&lt;/code&gt; with the same values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a0e942266b46487ed4b426776773c0e5488db5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedtensortotensor&quot;&gt;&lt;code&gt;RaggedTensorToTensor(...)&lt;/code&gt;&lt;/a&gt;: Create a dense tensor from a ragged tensor, possibly altering its shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5bea55668aefbb6894c0510008098e7449e23c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/raggedtensortovariant&quot;&gt;&lt;code&gt;RaggedTensorToVariant(...)&lt;/code&gt;&lt;/a&gt;: Encodes a &lt;code&gt;RaggedTensor&lt;/code&gt; into a &lt;code&gt;variant&lt;/code&gt; Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77198c33dd64510f57287fb2b563b21d3fdea290" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomcrop&quot;&gt;&lt;code&gt;RandomCrop(...)&lt;/code&gt;&lt;/a&gt;: Randomly crop &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf466ce35440245e971a3e474b9f5ceff31c751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomdataset&quot;&gt;&lt;code&gt;RandomDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a Dataset that returns pseudorandom numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348f7ae0383c9e0b7ac112070c374960255e41ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomgamma&quot;&gt;&lt;code&gt;RandomGamma(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from the Gamma distribution(s) described by alpha.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032bb097d71c93736fe18f32119a861d5d75e1a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomgammagrad&quot;&gt;&lt;code&gt;RandomGammaGrad(...)&lt;/code&gt;&lt;/a&gt;: Computes the derivative of a Gamma random sample w.r.t. &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c36c0e088749ae0d3d897cd964666932518e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randompoisson&quot;&gt;&lt;code&gt;RandomPoisson(...)&lt;/code&gt;&lt;/a&gt;: Use RandomPoissonV2 instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2491ba7a586a92f220f247544b5b8cc7bc9c69b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randompoissonv2&quot;&gt;&lt;code&gt;RandomPoissonV2(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from the Poisson distribution(s) described by rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a193db1a2c9cda5bdebc9c8e06437945da1877c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomshuffle&quot;&gt;&lt;code&gt;RandomShuffle(...)&lt;/code&gt;&lt;/a&gt;: Randomly shuffles a tensor along its first dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7962d3e86fdf9df51901d2c9b63b54e0d59e2308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomshufflequeue&quot;&gt;&lt;code&gt;RandomShuffleQueue(...)&lt;/code&gt;&lt;/a&gt;: A queue that randomizes the order of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b306d1d4b0d6f80a607abb04773a56398e8ddcdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomshufflequeuev2&quot;&gt;&lt;code&gt;RandomShuffleQueueV2(...)&lt;/code&gt;&lt;/a&gt;: A queue that randomizes the order of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb32099c41d4d3456ce9ae3935c6c50e32051501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomstandardnormal&quot;&gt;&lt;code&gt;RandomStandardNormal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d21e661513508426172fe308d1ba7f1d6542e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomuniform&quot;&gt;&lt;code&gt;RandomUniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a8710e27504a9e6422d1dd2506299f249428ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/randomuniformint&quot;&gt;&lt;code&gt;RandomUniformInt(...)&lt;/code&gt;&lt;/a&gt;: Outputs random integers from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00246fee68fbc67233e54475f2d78bc1b45876c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/range&quot;&gt;&lt;code&gt;Range(...)&lt;/code&gt;&lt;/a&gt;: Creates a sequence of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bd746c179be02289fb351d6a12e5a7b5105ade" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/rangedataset&quot;&gt;&lt;code&gt;RangeDataset(...)&lt;/code&gt;&lt;/a&gt;: Creates a dataset with a range of values. Corresponds to python's xrange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b5ecd0d082e6a3ae0e15d01bf95fc664fd249f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/rank&quot;&gt;&lt;code&gt;Rank(...)&lt;/code&gt;&lt;/a&gt;: Returns the rank of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff646e78daf77428ddbf396e9a9b227d423667d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readernumrecordsproduced&quot;&gt;&lt;code&gt;ReaderNumRecordsProduced(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of records this Reader has produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae603f683a76b44ac94e4cbe43fa00356f29466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readernumrecordsproducedv2&quot;&gt;&lt;code&gt;ReaderNumRecordsProducedV2(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of records this Reader has produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d58cbc82088684dcc66b6af5d6cf3f974934a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readernumworkunitscompleted&quot;&gt;&lt;code&gt;ReaderNumWorkUnitsCompleted(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of work units this Reader has finished processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addf51aaba97116542170a8b7069419ed7f15736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readernumworkunitscompletedv2&quot;&gt;&lt;code&gt;ReaderNumWorkUnitsCompletedV2(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of work units this Reader has finished processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66436812e18b76e89c87479e68bb485fbb7b145b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readerread&quot;&gt;&lt;code&gt;ReaderRead(...)&lt;/code&gt;&lt;/a&gt;: Returns the next record (key, value pair) produced by a Reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956e27c6cc068ae1a2ace005526a5ecce325d378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../raw_ops/readerreadupto&quot;&gt;&lt;code&gt;ReaderReadUpTo(...)&lt;/code&gt;&lt;/a&gt;: Returns up to &lt;code&gt;num_records&lt;/code&gt; (key, value) pairs produced by a Reader.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
