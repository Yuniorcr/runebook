<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="42280a839a8aa1e9118ec2a1d439d20dff9edc86" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;x&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bd0161c274745f5550fb84606f9eb8bf3f3a56" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;y&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfee9de876886d040a66497077682dbb4741dbb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized bias value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05a3abd93e4100aec8867bda6ef73c69e6b8164" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized filter value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd610595fc57c4fa763e3af888f653d8e35b916" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized input value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162e2d7d771758b3b2300fc93692b9e313f776de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125687d47ea2bc7f7a124d20980a9d27d53eb54f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;a&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6992b63cfdba0de238b8f6777758bb20deaafc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;b&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9199f20439c16559e7e88ea98b96dc8f3209c6f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;x&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a42aa7ea3946bdae028b1f2647544985663ebb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;y&lt;/code&gt; value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3bafec5069fd369eb94bb7977344d5da1c9816" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized bias value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56a149cf3f4964d22fd4d2890b1c6fd20c1fc9f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized filter value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebb3d7e9959669277779f65fcdf011c14100c35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized input value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4346775d4dd46a06d81b7d13609d028ac240236" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01774067346f8da026935b0d3a71ba7d73762d0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the maximum quantized filter value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be66e8f2737a8bc600bf463cc39fc478f85d9050" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the maximum quantized input value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51eadbb68abab450bf8185c8008f937b6e1bacf9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the maximum quantized output value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98c48e9237052c70f06bfbd9dd5779b379f57e9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the minimum quantized filter value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974b5ca8d342c3d422df4befdeac2c0aefede0c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the minimum quantized input value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8632cece5ed8431649419185a8cafa475902fe14" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the minimum quantized output value represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba705a09cc9c3a1abc891c041cb9ff0ba44d151" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum float value of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0d7b6e17ba510f6d26fcd71efffe07f7238a5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum scalar value possibly produced for the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a80484a58eb29537b2c94e440fa480ca91cddba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum value of the filter tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e260c5c19c1f48427a34c8496474bf8fb4e5ffd7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum value of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111a2e9e0459b6eb03cf2e0a45004cba6e2c01cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum value of the output tensor requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e265d4e8dba56f029b6d1f164fb5c4b624ccf9ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The maximum value of the quantization range. This value may be adjusted by the op depending on other parameters. The adjusted value is written to &lt;code&gt;output_max&lt;/code&gt;. If the &lt;code&gt;axis&lt;/code&gt; attribute is specified, this must be a 1-D tensor whose size matches the &lt;code&gt;axis&lt;/code&gt; dimension of the input and output tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72049fabc33637f721afcdb5a0c404d0e0d1aa3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum float value of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7337d527382c1cc1275780711c5ac3685ebbec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum scalar value possibly produced for the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8b6750e011dee0d46132f6480a8e0fb9da47d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum value of the filter tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f1614f7652d5e33cb11906373cbee3f2d254ea" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum value of the input tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad541dc5185cc99cc0cbda47d74a5079674573ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum value of the output tensor requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e5276ab5fc34aa2d4da40bd2893a96ee73740d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The minimum value of the quantization range. This value may be adjusted by the op depending on other parameters. The adjusted value is written to &lt;code&gt;output_min&lt;/code&gt;. If the &lt;code&gt;axis&lt;/code&gt; attribute is specified, this must be a 1-D tensor whose size matches the &lt;code&gt;axis&lt;/code&gt; dimension of the input and output tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0004fd9c53b9df367f5827a5a8fa309ac19a37" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The original bias tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b87fa926fbc2e34302bbf77d2429af4c446918" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The sample rate of the signal in hertz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b4f8b14658624eac3ce4df7fbd0beca84fe943" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the highest quantized gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4034e3b49f3663fd16e1c2463057dbf7b9447e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the highest quantized input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7527ef49a550b8b61a81cf5aeb0f0ad906d4d516" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the highest quantized mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43a9fd31dac3287b0d459a736fc8347ef7d16d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the highest quantized offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a976e3ac7665786ab60b29939e1e13ad2a10d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the highest quantized variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad4a015e2113aca0d9f832ce1cc2af17023b0c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the lowest quantized gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20ca28bbc970fb1119eb535841188646acfb15c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the lowest quantized input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03584070db15371f23e049620800adfdc3476a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the lowest quantized mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5bbf4781d248b390dfe0b21a1e8d82164f08b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the lowest quantized offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441d2e480490f2011360ad36324820994328fd2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The value represented by the lowest quantized variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583d05932c0c1e078d3c747ea98bbd764b54f743" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Typically produced by the Spectrogram op, with magnitude_squared set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e6e6a20f85b0ee977bef00e64b5564c1e539c0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of accumulators used in the Adadelta optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc92d54cfb4e261d617e8a61607c8333f0abc816" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of accumulators used in the Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0097dc2547d692c9c36d7683ff311b4b4556f711" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of accumulators used in the FTRL optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4087b478ce911845e3852075219302b2e2d42efe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of accumulators used in the MDL Adagrad Light optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e106fffa2537ff800c9cb35cafe55a0e8bbbe00c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of accumulators used in the proximal Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22a16e0e8f0a387e2adb989b973ebe2c4977040" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of benefits used in the MDL Adagrad Light optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90ca66114ff27d99c19dc0d5ff1e489df8d5c46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the ADAM optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c93766d1020a317da8af60b51ae6af2abf946e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the Adadelta optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2212a2ef94ba199ddf86cc6e32573d580c2f1e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db90756dbb70efd9fdfce5784bb96e2cbbf4d02" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the FTRL optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52296f3884422eb9dada440dc63f7952e927cb08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the Momentum optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccb8c0d7743f76e9229ae18022de3427808f753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af759c8b9ab13386d808182adb4f7d62dc307019" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of gradient_accumulators used in the proximal Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f94e24c3f64b579568767a3626f625ef0c13ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of linears used in the FTRL optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bdcda940230fb76394aa246ee479f9efa9a86d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of mg used in the centered RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade1cc347cada6a0e8eb5ee6beb255b58efc3a62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of mom used in the RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85af2224e7580918d75e47d7ec2c90130cba323" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of mom used in the centered RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcdcd78647b2e40c34bc286d3b72f20bb1fab2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of momenta used in the ADAM optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fae38c4ea3f9da6d6ef648fca530570b5040a5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of momenta used in the Momentum optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610048dc138b27da03d35c2d6501ff073caa0788" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of ms used in the RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1720d9662ec13a2dee5faaac30a8484cc3b72b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of ms used in the centered RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d1caea520c46d7d9648937f9ab5df5ac9e395d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the ADAM optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59647ed618be5685e727b02c0478a165eb0f40a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the Adadelta optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290f0be2ef1e50d0dd14507207a86c48285ea39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c2b41f1378d60bfff72e01503ccfb7d02e9ed3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the FTRL optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac22f438855895976a9763fc6fc08bee5dc7af0f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the MDL Adagrad Light optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c6a0f76323248b397a62f9ef94c62cfa2ca10f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the Momentum optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cbedc3c6e7ab7b452aa831ca107bba6383fe1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf7ce367455ca0390997d5d29ed5ce5a35b984b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the centered RMSProp optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561156f206ca3a30536a045ccf0b8d872740aab1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the proximal Adagrad optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82ccd3a4953629c49000f6f941d0e4983dccdf0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of parameters used in the stochastic gradient descent optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5259226ddaae2f6de2381e750df15f5430981968" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of updates used in the Adadelta optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d52627d2a122eb2571016e4c802d2a73fb2c62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of velocities used in the ADAM optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b838ac0c46407b35c39ec9af9881b51361d088" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Value of weights used in the MDL Adagrad Light optimization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adacfe24b2ad2083f79d35a0fad7fd58172e738" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxArgs operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f30294755985772c10e09b669b94e1a6cb0fe1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxVars operation, shape same as &lt;code&gt;gradients&lt;/code&gt;. min, max: Quantization interval, floats of shape &lt;code&gt;[d]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53679786e8237272ad30e4b4d19e3e384e1898c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Values passed as inputs to the FakeQuantWithMinMaxVars operation. min, max: Quantization interval, scalar floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02093625ae34eceb58b9b39ff28f4a69345045d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a list of vectors containing the example state data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddda299260a641d86eb58b8c5b5065f2c623ea8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the label/target associated with each example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea2fb71a283a8b3c7c5f6f387f783a8f2c08ccd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. a vector which contains the weight associated with each example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d437d432d5922cbb7597bdd13a56ce77a02b26ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. adjustment to the gain, per leaf based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a18333e2f1adb86a6b681273656378117351d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float32; Rank 2 Tensor (shape=[#examples, 1]) for gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384fa9602c5b22fb81d7b46deab41f17a825ddb1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float32; Rank 2 Tensor (shape=[#examples, 1]) for hessians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079250716b2b08cb9e2a62eec50b805454350d8f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float32; Rank 2 Tensor (shape=[batch_size, hessian_dimension]) with hessians for each example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99496e5397e50a682c42a4d784e86e10175460fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float32; Rank 2 Tensor (shape=[batch_size, logits_dimension]) with gradients for each example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1612178b2b3e5ba6b6a4dbe60f7e495755da12af" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float; Rank 1 Tensor with weights per instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299b2efa9b9c7394a1864f7173817bd0f418c880" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float; The required approximation error of the stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e374f9b96c909db8e61385081c635047f2f87504" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. float; The required maximum approximation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd699a3f8b4f6346b11caf3e7413e7afec9ef9f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. l1 regularization factor on leaf weights, per instance based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1344a46cefdb672ebe21486e1412c9eb06182a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. l2 regularization factor on leaf weights, per instance based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29a2c14e29e22839dabcc742da16fd2d646abb4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. minimum avg of hessians in a node before required for the node to be considered for splitting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95260d553187262f655a962545f362a74c717998" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. shrinkage const for each new tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69023ad8a89b75ad6d59d4e8d0b9b96ee3df924b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;float64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d97a689b01d674cbc50554e6695af4d34abd3249" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float64&lt;/code&gt;. Scalar tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407744730eeedf0782bc9a439eaa1423d861b925" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Each value is &lt;code&gt;-FLOAT_MAX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c2d2aae3eb9828ebd098d9c345f369f5fc6272" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; (default: 0). Must be in the range &lt;code&gt;[-rank(x), rank(x))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224a77c49510ee6bc0bbf7c62f3ff8289c12b606" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Values indicate rows in &lt;code&gt;true_classes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea0e45b353b4b98ea11a90b115f313e5978e3f4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; (default: 0). Must be in the range &lt;code&gt;[-rank(x), rank(x))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872da1bbeb1419cfdd670cda491cbed1b6c7dc2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;, containing the length of the input string in the same element of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e9feeefd3ca94dcdc658e990765616287dbcde" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;int32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84262f1c3fc84cde1d39b7af7ba818848940dccc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-D. Number of independent samples to draw for each row slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b5964afaaa7c0a312f78364d8b96f6d6dd9f2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-D. Number of top elements to look for along the last dimension (along each row for matrices).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ab4c180d9d3764e8d9ef318fe3346c94c1332b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-D. Position of sorted vector to select along the last dimension (along each row for matrices). Valid range of n is &lt;code&gt;[0, input.shape[:-1])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d7579b0dc197eefa53ea4c8a00133b16c0021f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-D. The dimension along which to concatenate. Must be in the range [0, rank(values)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d73c86207baf45014e12e1eeb54ea8f48694e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-D. The dimension along which to split. Must be in the range &lt;code&gt;[-rank(value), rank(value))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc3736f240d75da02e6248a050a14d9ee4f593c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 0-No pruning, 1-Pre-pruning, 2-Post-pruning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3da5fc11e9501ed3830914957897332c6ca0995" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D Tensor [new_height, new_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4b1c618a17beeab43bd5ae0bf3df382c533da0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D. Length-&lt;code&gt;K&lt;/code&gt; vector containing the reduction axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c564c834884d9e0413e9668c3921f31f2421fcdf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D. Shape of the original input to &lt;code&gt;avg_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415b7fdc3119e0a951a43a9c26c29a92fe6fbc4a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D. The crop window: [crop_y, crop_x, crop_height, crop_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d209581d24872f3c2475c54dc53f3a24e9b609" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1-D int32 Tensor of 2 elements: &lt;code&gt;new_height, new_width&lt;/code&gt;. The new size for the images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca00b20eb939e383a458e341022414a69546a020" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1-D tensor of 2 elements containing the size of the glimpses to extract. The glimpse height must be specified first, following by the glimpse width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac4b83a43b3e1795b89914be14bee409792f160" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1-D tensor of 2 elements, &lt;code&gt;size = [crop_height, crop_width]&lt;/code&gt;. All cropped image patches are resized to this size. The aspect ratio of the image content is not preserved. Both &lt;code&gt;crop_height&lt;/code&gt; and &lt;code&gt;crop_width&lt;/code&gt; need to be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e43455ccb30513340f01949ad5d8343704b9fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1-D tensor of shape &lt;code&gt;[num_boxes]&lt;/code&gt; with int32 values in &lt;code&gt;[0, batch)&lt;/code&gt;. The value of &lt;code&gt;box_ind[i]&lt;/code&gt; specifies the image that the &lt;code&gt;i&lt;/code&gt;-th box refers to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6885d3b7e7f269d822c20d0219975709c4bed3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A 1D tensor containing the unicode codepoints that should be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e88ec10faed478197f056cca7e87f3d99be6237" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A Rank 1 float tensor of dense shape [4], which specifies the dense shape of the sparse tensor, which is [num tree nodes, feature dimensions, num buckets, stats dim].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d68267ba3a227d3f5c0e624e3e88642875501ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A Rank 1 tensor (shape=[2]) to specify the range [first, last) of node ids to process within &lt;code&gt;stats_summary_list&lt;/code&gt;. The nodes are iterated between the two nodes specified by the tensor, as like &lt;code&gt;for node_id in range(node_id_range[0], node_id_range[1])&lt;/code&gt; (Note that the last index node_id_range[1] is exclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a18d1d1ea4440d8469d7b9f798fbc7a031ec2c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A Rank 2 int64 tensor of dense shape &lt;a href=&quot;n%20specifies%20the%20number%20of%20non-zero%20values&quot;&gt;N, 4&lt;/a&gt; for accumulated stats summary (gradient/hessian) per node per bucket for each feature. The second dimension contains node id, feature dimension, bucket id, and stats dim. stats dim is the sum of logits dimension and hessian dimension, hessian dimension can either be logits dimension if diagonal hessian is used, or logits dimension^2 if full hessian is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3f5ed78c4a594e3116e97cb95bd589bece2c97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A Tensor of int32 Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad061215a3307989ece5c9919a495574b2c9ba0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A fill-in reducing permutation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0013f2f83f5658fc178147390099c1337e5ebd8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar defining the depth of the one hot dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ab8de36ab763c0c150b3152f8ac462674c83de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar int tensor for the number of top scoring boxes to be used as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca158beab54c300f9f19c6d32fc07b7b87b7653" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar integer tensor representing the maximum number of boxes to be selected by non max suppression per class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9407c558f50a2dab20b26cdac6ffaa0ec873249a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar integer tensor representing the maximum number of boxes to be selected by non max suppression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b8882c6838d5e296a19e1b4e19ccd054928502" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar representing maximum number of boxes retained over all classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93662cedb9f7db137ccd453694c454467efce8a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A scalar that determines the input that gets selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870bc40498632bbb0408d89b40538ccac50bf10e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A single-element tensor containing the number of elements to take.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3fa0e571c13e256aef5a341c95f0ee457b2c49" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A tensor with shape [num_pairs, 2].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157ec0815aae26d445bd705d66a6876269e51268" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A two-column matrix specifying the padding sizes. The number of rows must be the same as the rank of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ef4edc73d2cdbe7388b2824b5e20949d3b0138" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A vector containing sequence lengths (batch).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529517ab388af6e1df49f1ead6bb8c5a01f428a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A vector containing sequence lengths, size &lt;code&gt;(batch)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1e4fc4c53643ade319b670335e828718329bb9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A vector containing sequence lengths, size &lt;code&gt;(batch_size)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79d99ba9520661d3e449fe0367a2e5b0026abca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. A vector. Indices into the left-most dimension of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4f2928b904a65cee79ced6c7c5c3fbe351305b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int quality to encode to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd207b911174823c6aeff9952946f01df708ca1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [1]. The FFT length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0029660a4aabc1991016b5c5542b00fc4f206ff1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [2]. The FFT length for each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c9c8ff3d5fc530cecd01c710ea564a31a5b167" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor of shape [3]. The FFT length for each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e2a100d37a86265b0fbea004ab6c1037a3b51b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 tensor with shape [num_groups, num_replicas_per_group]. &lt;code&gt;group_assignment[i]&lt;/code&gt; represents the replica ids in the ith subgroup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751327a07a8bb69141f2ebdb6866db220f23e407" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An int32 vector representing a shape. Elements in the gradient accumulator will have shape which is this shape_to_prepend value concatenated with shape of the elements in the TensorArray corresponding to the input handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f510f43aca22904359b31a7ef36bed5a400de71" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the shape of &lt;code&gt;input&lt;/code&gt;, based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c9d5a066aa8260fa3fc8bd4bb856f12d610951" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the shape of &lt;code&gt;input&lt;/code&gt;, where &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5636817768248a3ca84888cd2314bf071c6d719" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb4d0c4107a2d58c4fae54d907d0f567c38b5d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 4-D &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be8139eacf1e36d4244b3d97aa677326763c85b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;filter&lt;/code&gt;, where &lt;code&gt;filter&lt;/code&gt; is a 5-D &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9bf481e0b94d7ad648895b680deba6d95e1256" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Any shape. Indices in the range &lt;code&gt;[0, num_partitions)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1578abd1c76a8a3191cc4743a10ed833b618f328" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Diagonal offset(s). Positive value means superdiagonal, 0 refers to the main diagonal, and negative value means subdiagonals. &lt;code&gt;k&lt;/code&gt; can be a single integer (for a single diagonal) or a pair of integers specifying the low and high ends of a matrix band. &lt;code&gt;k[0]&lt;/code&gt; must not be larger than &lt;code&gt;k[1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99916dd8b8661f1ab377d6f4b9a9c5293ad980cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. How many samples per second the source audio used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4245742c3ead8b485854c85c9f05b373c69426" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Integer representing which shard to fetch data for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4bd20cc8cc0927408e108edb641e41ed34fd3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Length in bytes for each element of the decoded output. Must be a multiple of the size of the output type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66aaf0c26af1026c02aff960e32734a5586f46cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Max depth of the tree to build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab27da22560b2726f8a2ee1cb3e21bf7bb7e60a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Number of gradients required before we return an aggregate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7c4244965fe839e1c6d72ba7a1375d1944fc33" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Positive scalar &lt;code&gt;Tensor&lt;/code&gt; of dtype int32. The number of Sobol points to return in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc4baa54b16eb8b81aeb789beefa5b563099e93" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Positive scalar &lt;code&gt;Tensor&lt;/code&gt; of dtype int32. The number of initial points of the Sobol sequence to skip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3ee6d03172d9383ed796f7eaabd22e8e09f0f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Positive scalar &lt;code&gt;Tensor&lt;/code&gt; representing each sample's dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8612aad9026372047c21303cdfb6beef0693b9b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Rank 1 Tensor containing cached node id which is the starting node of prediction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef58aba8af41b08537162a91f0093387d4c61e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Rank 1 Tensor containing cached tree ids which is the starting tree of prediction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8b9b07b8d621b214b1936ed8ae8fc78e549c1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Rank 1 tensor with ids for each feature. This is the real id of the feature that will be used in the split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4aa9aca5487d809a1fc27bd7c069f79ca395bfd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Rank 1 tensor with ids for each feature. This is the real id of the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8530d121ce5171aed7b1139dfe790aeb7b007ad3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Scalar &lt;code&gt;int32 Tensor&lt;/code&gt;. Number of histogram bins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2cd43b1a36c345fde9d59ea098530cb1fbda19" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Scalar containing the sample frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0e53d6fa96061cf15fe2b2ef456cd7bf861db2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. Tensor of int32 with shape &lt;code&gt;[batch_shape, len(field_names)]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff670d15ba354d57f09a0aaa95e4dfc89960cf1e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The TPU device ordinal to run the function on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e290e4bff9d0aa97946230fd7947bacb74e0607" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The branch selector, an int32 Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c55815c85d61a47215469b6a39aad803567ebd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The dimension along which to concatenate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d69896aeb4b31e5c93638739ce2966a824c6cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The dimensions to reduce over. Dimensions are reduced in the order specified. Omitting &lt;code&gt;reduction_indices&lt;/code&gt; is equivalent to passing &lt;code&gt;[n-1, n-2, ..., 0]&lt;/code&gt;. Negative indices from &lt;code&gt;-n&lt;/code&gt; to &lt;code&gt;-1&lt;/code&gt; are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2e8e92b85856a5e76faeae82fe317c9e0bcf2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The increment. An int32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d2035e4e0d3cb8201da5a45394d71fe26f32e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The index in &lt;code&gt;csr_sparse_matrix&lt;/code&gt;'s batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc33953b6a32ab1c33192783de72fa75674483e7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The locations at which to write the tensor elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d74710f4e4fcb54e18eff313659e4a9d522351" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The locations in the TensorArray from which to read tensor elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ebf031e87a7467cac5f649b0bf628fe2b3e839" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The lower bound. An int32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3432ceb6ea8f9eb40c2e7b97a4ad74bf42606747" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The maximum size of the stack if non-negative. If negative, the stack size is unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66fed3954278fb8221c24c5cd477bc271ee7844" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The number of columns of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from k and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8694d3bb170529df7c505c76cfd79f06b0c6fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The number of concurrent invocations of &lt;code&gt;f&lt;/code&gt; that process elements from &lt;code&gt;input_dataset&lt;/code&gt; in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8238418d77398f777fc9d84af58ce5de52b9d5bd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The number of rows of the output matrix. If it is not provided, the op assumes the output matrix is a square matrix and infers the matrix size from k and the innermost dimension of &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffeb0ab9c96a91aab33cb19f25febc9f91ecbf17" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The number of tuples to dequeue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cad5243207b86ba6bbe47e5a38bc50c28be826b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The original input dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6941b75d73276f149cf97b4f286f75b9f1d84f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The position to write to inside the TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016153a958310163a536463f6d97454b0e0c7e13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The size of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b64e05b4f811c4116b56723fc8dbd67899dec09" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c2f5be94af45940a16690273e18d082335a346" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10489d2870c5bca25a21d667510490de0829896" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The upper bound. An int32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be819908fb6aaf24677450213f03a0488ecc6a3d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. The values (labels) associated with the given batch and time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de1b82a45f4f2fb7f822b5c38b2f14d0e450418" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. dimension 0 of &quot;data&quot; passed to SparseSegmentMean op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396090d95ee30e2fd8ad9ab2f9696dbc70701ccc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. dimension 0 of &quot;data&quot; passed to SparseSegmentSqrtN op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbf088d62b5fd5ba4f0b00ec1eded4c5fbfd52e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32 &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb4c5e5b26a426c87d4a199f7485be85a726ed8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32 Rank 1 Tensor containing node ids, which each example falls into for the requested layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2ed724479e213af98028fcd197d73fcb5821f5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32; Rank 1 Tensor containing node ids for each example, shape [batch_size].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b949a2c1cadc6be1e587de3eebd204ea5e98ce9b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32; Rank 1 dense shape of feature sparse Tensors (shape=[2]). The first axis can only have 2 values, [batch_size, feature_dimension].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93925d07a04c9195198bfbe7b1af0aeaf418f2fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32; Rank 1 values of feature sparse Tensors (shape=[number of sparse entries]). Number of sparse entries across all instances from the batch. The first value is the index of the instance, the second is dimension of the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ca2cf140a3be479a201ffabb312b72243d9c1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32; Rank 2 feature Tensors (shape=[batch_size, feature_dimension]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdca2f4c5cdcdcfddc759d26e9d2e7d595e9314" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. int32; Rank 2 indices of feature sparse Tensors (shape=[number of sparse entries, 2]). Number of sparse entries across all instances from the batch. The first value is the index of the instance, the second is dimension of the feature. The second axis can only have 2 values, i.e., the input dense version of Tensor can only be matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e30fefd9705015a2649d7f804cf0e761524b26e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. non-negative int32 scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde82e4cb63d52b20fa72de747d14e5cf0d3d63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt; and shape &lt;code&gt;[batch_size, num_true]&lt;/code&gt;. The target classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7057166a89f6daeb38986852eb0583da3a1d5a29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt; and shape &lt;code&gt;[batch_size, num_true]&lt;/code&gt;. The target classes. Note that this format differs from the &lt;code&gt;labels&lt;/code&gt; argument of &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/nn/softmax_cross_entropy_with_logits&quot;&gt;&lt;code&gt;nn.softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f4b35d5e50104c879041f6190d387dc1a0d791" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt; and shape &lt;code&gt;[batch_size, num_true]&lt;/code&gt;. The target classes. Note that this format differs from the &lt;code&gt;labels&lt;/code&gt; argument of &lt;a href=&quot;softmax_cross_entropy_with_logits&quot;&gt;&lt;code&gt;nn.softmax_cross_entropy_with_logits&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9fc104c2b91cc86d1147513c77f5d39d7538b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt; and shape &lt;code&gt;[num_accidental_hits]&lt;/code&gt;. Values indicate positions in &lt;code&gt;sampled_candidates&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa1395e68971ddc4939d3bc30ce632df51a23c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;int64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cbdc0c614d62bd52fb9567e87e17c3ac3b20d09" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 0-D. The dimension along which to split. Must be in the range &lt;code&gt;[0, rank(shape))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19be2eec512ad1be3216680bf5f069a2cc8e3014" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D of length 2 containing: &lt;code&gt;crop_height&lt;/code&gt;, &lt;code&gt;crop_width&lt;/code&gt;..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2422fd1998f072a78b50f0c86b08ea1c743e239" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D, The &lt;code&gt;N&lt;/code&gt; serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects. Shape: &lt;code&gt;[N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38768b4486522c82142e4d8d563658ae5fb68b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. &lt;code&gt;R_in&lt;/code&gt; vector with the input SparseTensor's dense shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbbd245324fd5fe39eb8571b1ad96323263ae17" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. &lt;code&gt;R_out&lt;/code&gt; vector with the requested new dense shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83f713eb7d694d1f5ff18d1e837c0385ee2ea7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. Shape of the input SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2205a95bad74cb897eea2d7570f0a53531abfa87" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[2]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefc9c79d5da5a8e1f13a2487357eb1ff76a553f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee7c0885be33682c41f275c97578329eea02ba2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the first &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[ndims]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47054abac99fca5f75a26418ff69912e0bf14940" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the minibatch &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add3d77a7cc637c6358dd4cc36c93fa408d41ff9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the minibatch &lt;code&gt;SparseTensor&lt;/code&gt;. The minibatch size &lt;code&gt;N == sparse_shape[0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee0e76a5f8034ab9aefd1a5bc26d3290aa891ec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the second &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[ndims]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4222ab180ce6bfb92ae9009bce89fe463f63fdc7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. The reverse index map from SparseFillEmptyRows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648faa2e132556a118593d0aeec6998fbdd83083" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. tensor represents the shape of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946074cd84afe4bc283be62c393f6b0b2fee8cf0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. tensor represents the shape of the sparse tensor. output indices: A list of 1-D tensors represents the indices of the output sparse tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e382636e17c3b3118da28f0fa43365bf2b6225ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. tensor represents the size of the slice. output indices: A list of 1-D tensors represents the indices of the output sparse tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8177b906f5adc0b024cd6990c3be9f2a13fc1722" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. tensor represents the start of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6337bb0bec3c19521f5f471e796f27c8ae4f19" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1-D. the shape of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d028730c77cc0025d246b2532983edf53bd0d2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, shape of a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfb7d06a6267259647bc63e8a2777edeb1360be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, shape of a &lt;code&gt;SparseTensor&lt;/code&gt;. &lt;code&gt;set1_shape[0...n-1]&lt;/code&gt; must be the same as &lt;code&gt;set2_shape[0...n-1]&lt;/code&gt;, &lt;code&gt;set1_shape[n]&lt;/code&gt; is the max set size across &lt;code&gt;0...n-1&lt;/code&gt; dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c3a6fdbeb5fcf51f4637d8bbded21ac4d67a48" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, shape of a &lt;code&gt;SparseTensor&lt;/code&gt;. &lt;code&gt;set2_shape[0...n-1]&lt;/code&gt; must be the same as &lt;code&gt;set1_shape[0...n-1]&lt;/code&gt;, &lt;code&gt;set2_shape[n]&lt;/code&gt; is the max set size across &lt;code&gt;0...n-1&lt;/code&gt; dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66008ba495502c9ce6cb6ebe8e18ab74fed3bde1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, shape of a &lt;code&gt;SparseTensor&lt;/code&gt;. &lt;code&gt;set2_shape[0...n-1]&lt;/code&gt; must be the same as the 1st &lt;code&gt;n-1&lt;/code&gt; dimensions of &lt;code&gt;set1&lt;/code&gt;, &lt;code&gt;result_shape[n]&lt;/code&gt; is the max set size across &lt;code&gt;n-1&lt;/code&gt; dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a675d4788c7e2a463f6623053ca9f1da778f24" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 1D int64 &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608267695d9cad8bf95a762debb6d881ee7a0872" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D tensor represents the indices of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bfe6c97b515fe3b1f3fc571def415419df0c97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. &lt;code&gt;N x R&lt;/code&gt; matrix with the indices of non-empty values in a SparseTensor, in the canonical lexicographic ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933f9e11876e257ee63442b9038bc7892202ba4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. &lt;code&gt;N x R&lt;/code&gt; matrix with the indices of non-empty values in a SparseTensor, possibly not in canonical ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b58b413610cdda51a9341d16bbb3988683212" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. &lt;code&gt;N x R_in&lt;/code&gt; matrix with the indices of non-empty values in a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f530e4221b713795d14d9ee2474ca2271c1a1627" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. &lt;code&gt;NNZ x R&lt;/code&gt; matrix with the indices of non-empty values in a SparseTensor, in canonical ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f1334ed4512ab01b401a62bedd3021b62af90f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt; A, size &lt;code&gt;[nnz(A), ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78aab902db01958cd9ec40bc2e6a7c42c5ad744" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt; B, size &lt;code&gt;[nnz(B), ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50669d7c3a5f5deb5e971e9fdd6640176311e9c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0726ac58a970ca2dda2e404d6219179c483e8e7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the first &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz, ndims]&lt;/code&gt; Matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5daba425c7a908ff63a79b5f5f2fc8f6f72580c9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df57f173f3b7849eba02d9fa52dcf7eb8db285b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the minibatch &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484b6364d6dc52d92731fee505ead8793e7ba11d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the minibatch &lt;code&gt;SparseTensor&lt;/code&gt;. &lt;code&gt;sparse_indices[:, 0]&lt;/code&gt; must be ordered values in &lt;code&gt;[0, N)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb0fc60512d5001a8e3110d27bebcfcf72887f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the second &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz, ndims]&lt;/code&gt; Matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ec682982049a50aa6c8ffc9cd60fc03d5d2e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the sliced &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c625689844c827da30da4dd7b4f08400c7d0dcb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the sum &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz(sum), ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26646dd69a13cbba2aabb20a0532369976b319dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2-D. the indices of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14b7e1bc467da54e9c5ae35fee994f3572801ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2D &lt;code&gt;Tensor&lt;/code&gt;, indices of a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dcc9ca046d423ab0d193b69cab7f158eda2476" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2D &lt;code&gt;Tensor&lt;/code&gt;, indices of a &lt;code&gt;SparseTensor&lt;/code&gt;. Must be in row-major order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18af75941f481d3693e97548d3d5da28a78f823a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. 2D int64 &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee86dd12b8701b0caef7871f2c95d0668e2f7959" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A batch_size * num_true matrix, in which each row contains the IDs of the num_true target_classes in the corresponding original label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908932b056d2232abf3c5cce4cfde4c2ce087d20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar containing the number of bytes to buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172b9b5accc7f3f412994b6ed6ee49faf7160e58" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing seed of random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be80526062b365df44843fb50386fb38c08c3934" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing seed2 of random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa456b86024925849700fad0f24f6b2a8118db2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the index of the current worker out of num_workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da801fff4c1a0d6b7854e3ada0f5a8fc20736130" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the maximum number of parallel invocations of the &lt;code&gt;map_fn&lt;/code&gt; function. Applying the &lt;code&gt;map_fn&lt;/code&gt; on consecutive input elements in parallel has the potential to improve input pipeline throughput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0f15ce9fade908e8ace65711b6938371fc7f7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of bytes in each record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb5e457f2ed1525f03df57acf668209a4621b3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of bytes to buffer. A value of 0 means no buffering will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81c50aef4a82d54a2093bf815115180bf314d72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of bytes to buffer. Must be &amp;gt; 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa3dd2328830f7230f2f3056781a1dfa0da44aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of bytes to skip at the beginning of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1c0bd6cb720ec56b0ab33831e1b2ce33cb9e97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of bytes to skip at the end of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ea66fdf00bc295dff894fe20afc1dfc3106a0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of elements from the &lt;code&gt;input_dataset&lt;/code&gt; that should be skipped. If count is -1, skips everything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddaf0056222924f710591ca9c24e30b9dc8ac84" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of elements from the &lt;code&gt;input_dataset&lt;/code&gt; that should be taken. A value of &lt;code&gt;-1&lt;/code&gt; indicates that all of &lt;code&gt;input_dataset&lt;/code&gt; is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9410cad512547ab54d72d3feb17b9e660d60df7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of elements in the sliding window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3060899e2a3eeb4c44d70f265134e84701867e95" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of elements to accumulate in a batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936c887f4fc1a2c8faa594e683501c669967a86f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of elements to accumulate in a batch. It determines the number of concurrent invocations of &lt;code&gt;f&lt;/code&gt; that process elements from &lt;code&gt;input_dataset&lt;/code&gt; in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9522a4856c076e3f58555518e84c168920cba49" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of replicas to distribute this batch across. As a result of this transformation the current batch size would end up being divided by this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bb4f6136475472209984080bbff4a9f66e54dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of times that &lt;code&gt;input_dataset&lt;/code&gt; should be repeated. A value of &lt;code&gt;-1&lt;/code&gt; indicates that it should be repeated infinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4668e078f458269dc82a579cdd3639925cc9adf1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of times the underlying dataset should be repeated. The default is &lt;code&gt;-1&lt;/code&gt;, which results in infinite repetition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87651e29f1f9f30858cd9d1450d034f8e9193ad2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the number of workers to distribute this dataset across.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe24efe8be688c995a3de282d43943e0bfccde35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the steps moving the sliding window forward in one iteration. It must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8b152688e15b4f2c5bb76e1fe9ee3504ec7761" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar representing the stride of the input elements of the sliding window. It must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022372bcc8b66362e055ef277e329e31f9933c20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar seed for the random number generator. If either &lt;code&gt;seed&lt;/code&gt; or &lt;code&gt;seed2&lt;/code&gt; is set to be non-zero, the random number generator is seeded by the given seed. Otherwise, a random seed is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718be13e8fe7c3758a47e39623f9e6a6693092bb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A scalar seed for the random number generator. If either seed or seed2 is set to be non-zero, the random number generator is seeded by the given seed. Otherwise, a random seed is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bc7c8e9253a816a3deb8e636834ddb3da042fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A second scalar seed to avoid seed collision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760d0e67971db2a8c807f23547787eee00d307c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. A vector representing the dense shape of each row in the produced SparseTensor. The shape may be partially specified, using &lt;code&gt;-1&lt;/code&gt; to indicate that a particular dimension should use the maximum size of all batch elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c650e832932c09aacb59903149f1aabaa70809" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An int &lt;code&gt;Tensor&lt;/code&gt; of column remappings (generally created by &lt;code&gt;generate_vocab_remapping&lt;/code&gt;). May be a size-0 &lt;code&gt;Tensor&lt;/code&gt; if only row remapping is to be done (e.g. column ordering is the same).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf49e3283ea3f49240c1a6ea7cd049f7651bf0e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An int &lt;code&gt;Tensor&lt;/code&gt; of row remappings (generally created by &lt;code&gt;generate_vocab_remapping&lt;/code&gt;). Even if no row remapping is needed, this must still be an index-valued Tensor (e.g. [0, 1, 2, ...]), or a shifted index-valued &lt;code&gt;Tensor&lt;/code&gt; (e.g. [8, 9, 10, ...], for partitioned &lt;code&gt;Variables&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81457a054995a01167e2d4c54122fdb40c82c30a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An integer representing the current worker index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c83601bb14860a246fe7581225c3502dd59700" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An integer representing the number of shards operating in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6f86f6ec72affbe2adcfb4f94bff92fb32c03a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An integer scalar, representing the number of elements of the input dataset to combine into a window. Must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0c1807286f2454046db12ad1d5560ba21a5b1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An integer scalar, representing the number of input elements by which the window moves in each iteration. Defaults to &lt;code&gt;size&lt;/code&gt;. Must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0f60786871558b80bef6bab06b4847ea96f16d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. An integer scalar, representing the stride of the input elements in the sliding window. Must be positive. The default value of 1 means &quot;retain every input element&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b5449d052595c47e5d5aa89782645d13da62db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Determines the number of iterators to prefetch, allowing buffers to warm up and data to be pre-fetched without blocking the main thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0f12325cd4167c928238df12299b2fe8685922" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Determines the number of threads that should be used for fetching data from input datasets in parallel. The Python API &lt;a href=&quot;../data/experimental#AUTOTUNE&quot;&gt;&lt;code&gt;tf.data.experimental.AUTOTUNE&lt;/code&gt;&lt;/a&gt; constant can be used to indicate that the level of parallelism should be autotuned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8530ea7f344756963ff6a65539e6738626e244" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Identifies the maximum intra-op parallelism to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e70b4736144a5fc475eb828f5339cc9739eda02" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Identifies the number of threads to use for the private threadpool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4030f6e0166055512495658a96a5dd99ead596f9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Indices of nonzero elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8146f4b79d3e0a5b1ed9ea4a4b7300771c9eec69" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Indices of the sparse gradient to be accumulated. Must be a vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa7b87a2c4410529f2b8058283bdf1e6d80e2d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. It is used if hashed_output is true. output = hashed_value%num_buckets if num_buckets &amp;gt; 0 else hashed_value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95a0184cac675d594f63252eb0eaabb496ded15" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Maximum time length actually used by this input. Outputs are padded with zeros beyond this length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045a3745ec379ae93294b2d772e0c7b9ac37f8c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Number of datasets (each created by applying &lt;code&gt;f&lt;/code&gt; to the elements of &lt;code&gt;input_dataset&lt;/code&gt;) among which the &lt;code&gt;ParallelInterleaveDataset&lt;/code&gt; will cycle in a round-robin fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83a01e9179b67aac513d24005f4222ca8b01e48" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Number of datasets (each created by applying &lt;code&gt;f&lt;/code&gt; to the elements of &lt;code&gt;input_dataset&lt;/code&gt;) among which the &lt;code&gt;ParallelInterleaveDatasetV2&lt;/code&gt; will cycle in a round-robin fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd62e055967f8b3baa39fc914fff33f12337624" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Number of elements at a time to produce from each interleaved invocation of a dataset returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e603ab975a027bf574d72158c14868c54cdd5c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Original input tensor shape for &lt;code&gt;fractional_avg_pool&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7586fa602d92eac7c5adf8fcd5289ee3abc13a2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Shape of the sparse gradient to be accumulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43119fcb5f6c53591faf4ad58af56318dcabba32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. SparseTensor dense shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d09f751e287b88382801c64f13010cd1e84e9a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. SparseTensor indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee69cd56c3a52ad8351ee234842ba976c0c45804" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Specify the salt that will be used by the siphash function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c80f7ef6022e5664195b5f1339c2bcb235d5f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Tensor containing the dense shape of the sparse tensor to count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa1d8d2598de6ea8b4617073a4dc634a4e307ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Tensor containing the indices of the sparse tensor to count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91dafa414a719c4149ca5cd9c1fd9804232c3f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Tensor containing the row splits of the ragged tensor to count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d80d72e4f63545def053ae5a990caeeaa5a6648" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The RNG algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729583479a7fbcd1434c3d837b1b92acb8bf8699" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The amount of advancement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0718e54866b493c8fabd16a65202f6999bb623" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The desired matrix shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754620e5a24c67686968f454d0ab570b75edf702" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The indices of a &lt;code&gt;SparseTensor&amp;lt;int32, 2&amp;gt;&lt;/code&gt;. &lt;code&gt;labels_indices(i, :) == [b, t]&lt;/code&gt; means &lt;code&gt;labels_values(i)&lt;/code&gt; stores the id for &lt;code&gt;(batch b, time t)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff8c214a10dc97d4e5c016372a18b91af4426a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The indices of the hypothesis list SparseTensor. This is an N x R int64 matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155e648d72caf0525e0b99e4252793fb5bc86304" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The indices of the truth list SparseTensor. This is an M x R int64 matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbf8ecb6497697be9367eb7ed8c985f2b3dcc21" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The local_step value at which the gradient was computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78359712d4bd3f688224671dc533d7cf27866c34" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The local_step value at which the sparse gradient was computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d134998546d0ad1ba9e481fc7349bf99bd69eaa3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The maximum number of elements to buffer in an iterator over this dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e661e066cc4888f50180924d833a8c5e565a0b56" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The maximum size of the host side per device buffer to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96c14b8b7cd0934a1c89392b6e97f5f2ffaf5f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The new global_step value to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28168492be060b43050247279fa293f45b044341" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The number of concurrent invocations of &lt;code&gt;f&lt;/code&gt; that process elements from &lt;code&gt;input_dataset&lt;/code&gt; in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f83f94a8bca298240c6be07ff8c0fddec59d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The number of elements each iterator being interleaved should buffer (similar to the &lt;code&gt;.prefetch()&lt;/code&gt; transformation for each interleaved iterator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123d9710c9d77dc1db66b6e130f4c2d98161f157" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The number of output elements to buffer in an iterator over this dataset. Compare with the &lt;code&gt;min_after_dequeue&lt;/code&gt; attr when creating a &lt;code&gt;RandomShuffleQueue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97c631f3162c95093cbbddac4d04ef8820ce34d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The sampled_candidates output of CandidateSampler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd642c4a7d672394730985e0e6410592a4fe903" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The shape of the hypothesis list SparseTensor. This is an R-length vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc927e628b71c66a4bfd8aac2c2d29e4d29be1c2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The true_classes output of UnpackSparseLabels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa3865828cae04c0ac47f89e639218054457217" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. The vector of lengths, how to split the rows of value into the TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542f6019dc5ac350d4a429bca712edec15066643" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Token to use as the initial value of the resource stamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7083f4472403f5baf6d14e00cc1978c9d17a3bc4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Token to use as the new value of the resource stamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26397c33ab5fbf1e1de0382ed0e3992a12fedd32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Training step number. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd4bee986a9f2177d42f11ec9d0ca3387e54ce5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. Which incarnation of the MultiDeviceIterator is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54f4f86e54606fcf89ea0ad103b8f06da101a9f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. column pooling sequence, form pooling region with row_pooling sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0204990e2ff8fe8f1ac4cbde984b6187d51440" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. corresponds to start in python's xrange().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3067aca76f7d1a5ef261665b4ef941a10f8924a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. corresponds to step in python's xrange().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66524f24aa590187ee0ad78221eaeed8c562e006" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. corresponds to stop in python's xrange().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9879155ad56604a495639eb43411289bb9a4eb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. counterpart to &lt;code&gt;a_indices&lt;/code&gt; for the other operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a49f34d278cf4d0991e746732a5dde0b204117" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. counterpart to &lt;code&gt;a_shape&lt;/code&gt; for the other operand; the two shapes must be equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3484e41f9aa9771405e29115532c5edba9bc4f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. int64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8319e60f21ada6c0e6565ad9927b9afc49cfaed2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. int; The number of streams managed by the resource that shares the same epsilon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb986f1df732ca6fb2926331e93f5c1b32fb9f0f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. int; approximate number of buckets unless using generate_quantiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fe96beaf36eb691da468a9f4229c10cbd342ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. number of records to read from &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59bcee6374700abbfd960bf9dc1d82941df6e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. row pooling sequence, form pooling region with col_pooling_sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33feae6d5b9a8cba67a204d3ef12a296d3b53071" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int64&lt;/code&gt;. truth indices, vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef9460b9e8a4ed48113d7fe98719f08828ce6d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4b9724f7d17f30ad7e597576cdc02c3d374bc9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;out_idx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2a4d317f76581b4ec7990dc93d8a9e64f482b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;out_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;out_type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12e9867fb89f7d2dfa7876670890e039b7dec0fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;out_type&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;out_type&lt;/code&gt; . По умолчанию &lt;a href=&quot;../../../tf#int32&quot;&gt; &lt;code&gt;tf.int32&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b47b7f31f8eeabaa0b95a45fb4687bc1b228ad5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;out_type&lt;/code&gt;. Defaults to &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7445a5977e68486249735c72c27b7ffa54015" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;output_dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc84dc2f856ca3680154c1322281c99e45f0352" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;output_idx_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f1d92e1552334864145cd2561994aa84867447" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;output_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;output_type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2244c8a1bffa8027153991ea428e06021176d92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320d5674865d9e29d05f4f092d5d74f4d718335e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A MultiDeviceIterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc14a604dd6245127fd9df1371e38b10debd09da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A MultiDeviceIteratorResource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1b48387c541bdad1205699d78ae1ccc555586f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A handle to an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cb9c0a1da975d1c138d283df083f7f6acaed39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A handle to the iterator to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255caf959fdd90c31d8c2a477599a4e101632b98" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A handle to the multi device iterator to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe757f616af0a987ebdd0582f896e302d58a5e1c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A resource handle. Must be from a VarHandleOp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1a8b6f626f6dcffcf492fdd590c5dc671e9ac8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. A resource produced by the ThreadPoolHandle op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c9a98a4b7c7e6fddd5cf51c0c221b618827fc3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to a &lt;code&gt;Queue&lt;/code&gt;, with string work items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c61cae601795fe4ec0ad2147334f01f7c2aa73" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to a &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80db7036d1f3e05e17b212349412b80de626dcf3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to a Queue, with string work items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73af23d671a9940d6ce62dd0d01d055c1b69f53e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to a Reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432a5d04d792ea384ad78fe167640a7aa3a2dbbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to a table which will be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c598797755ec7adbe7aa98ae72dae18784560c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to the ensemble variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f941795580001cf262e9ccb45b314e7176a075" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8ac7404ede69b26c5ed8f0ab9cf06b820b7243" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to the tree ensemble resource to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8776803debc7bb1fc4360b6ebc43c04c2c4ef72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to the tree ensemble resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d58d185e904135874ccbde26ae4de10c84adab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Handle to the tree ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36953dd889832a1955347d6cbbeed56c6b9116b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Should be from a &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b882bcd1ccb63afcbe8315842aa2e5a3481ed2ee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Should be from a Variable().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e640e398fbec4ee6c0802c5af7d557533fe123a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. Should be from a scalar &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30fba6063c8f6372733403623838e98efb3a490" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle of the resource variable that stores the state of the RNG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7b1583a28c0933b791080c001e5008bfb8f21b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to a TensorArray (output of TensorArray or TensorArrayGrad).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66dd67bba6fcf95507b11ff185b3fe29be7e59d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to a TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a3f215241a2b55b3d4b3d75aeb53d971d66d65" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to a accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a70087db627334ab44974a5fbe25bf78d11047" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b7608dc017ddbb6ac219030a69d1165beaf162" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219c4f56d9d1f260f79ddf147a77ae89b9f2377c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to an accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36a2896325d1c17782ce74c4c65e6d271b4172" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The handle to the forward TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4b67b8718bdc595c97a829f5db0ece0886af75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. The mutex resource to lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd52a200a5230232238d43b58db0c008b392470" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. handle to the resource in which to store the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355c35d64d204199161cd7875fe1b0c68bb193a5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. handle to the resource to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366f27f2f79a52c6bce7f974a02d56447bd1115e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. resource handle referring to a QuantileStreamResource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da7adc5945611f81aebbf0dd0ebafec41927733" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. resource; Handle to quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e6b1ad084ff87fb9a5ca307dc9ccb90fec2dc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. resource; The reference to quantile stream resource handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17deb7f35d63a3735592b24d5bc60af922f9a147" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;resource&lt;/code&gt;. the input resource handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7110bcc3741980d24287751c73543d989c781c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;shape_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a426485f343ffb1e98b2d47b27ff0ded0fe3ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fdea52253b919355edbfd955d38f2381dcf902a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 0-D. Delimiter characters (bytes), or empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0331b90e6cbeae148228e9eec30b3f1e4f1884fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 0-D. The BMP-encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5b229c9698f1602d2a921c68191b581253e64c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 0-D. The GIF-encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f7a38077f9649656dc7679bd5e6abf115230f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 0-D. The JPEG-encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f199e6699b239cb119fb6ca493608b5518327ecb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 0-D. The PNG-encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5427a028b1a1e65b2dccac614dfa67f575a50c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 1-D. Strings to split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1735ac0942d6f521da87f2342cb8f22787a49d2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. 2-D, The &lt;code&gt;N&lt;/code&gt; serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects. Must have 3 columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c68bc8b8a35aac21ea8454e008908e04d9ec746" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. &lt;code&gt;0-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the delimiter character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd43f3f15cfe005dccede4af6512f17fbf5e2069" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. &lt;code&gt;1-D&lt;/code&gt; string &lt;code&gt;Tensor&lt;/code&gt;, the strings to split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838bac3e46491fae7f5a76e4557434a366b3c66e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; vector &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; identifying optimizations to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700d4406584a2348022d0771e03d3e221ab339da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt; vector &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; identifying the transformations that are expected to happen next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fce94a245114ca0de4e8b1ca2e0f2d8cba51ab0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A Rank 1 tensor indicating if this Op should perform inequality split or equality split per feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2905bb27064bae4bdd0fce0f02bd666db950b36d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A SQL query to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4218272818f0ef4500ba955cd71dd5c5ab28e1cc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A Tensor of string which is compressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6558388c19bcd2bb8a2156083d7f6a72064ee8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A connection string to connect to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b829f96b7332301959cb194a40c1853fcd8ffc7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A fully specified device name where we want to run the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d890806ee45dfca4d7d9a77eb79aa66b943bee95" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A one-dimensional tensor of keys, with length n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec859dd1104469cdf27474ca4ab5f2f2972711ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A path on the filesystem where we should cache the dataset. Note: this will be a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8602712a19e9ca9dd3b3b58a130fec544170d870" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar containing a binary serialized SequenceExample proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64820a937336970c95dbf5e8fd459463e8d518db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar containing either (i) the empty string (no compression), (ii) &quot;ZLIB&quot;, or (iii) &quot;GZIP&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c4be41b9eabf4573e448faf3f1ee4b019bedae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar containing the name of the serialized proto. May contain, for example, table key (descriptive) name for the corresponding serialized proto. This is purely useful for debugging purposes, and the presence of values here has no effect on the output. May also be an empty scalar if no name is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7309f9ded04d654811e5730050f6d84e45ee95" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or a vector containing the name(s) of the binary file(s) to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3d450818699fa108628c5cf0aa80c6b32b6ab8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or a vector containing the name(s) of the file(s) to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bcc1987533468b26e97b855396c6f27351a0d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or vector containing binary serialized Example protos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65ab1d1e682c5d279ff1c488d1f960c96f11d7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or vector containing the name(s) of the file(s) to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8b86a15ef53f2c7082b234a8f866394bb85cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar string containing a serialized TensorProto proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef662a8f5df638104bbcb56d1b899690ab1a1cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar string tensor containing either (i) the empty string (no compression), (ii) &quot;ZLIB&quot;, or (iii) &quot;GZIP&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841a12c6ed58c8487021769a2d8392666cf38a45" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar string tensor containing the regular expression to match the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3989f1d77ada6cbc2ddb68d6badac27f7fdece" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar string tensor representing the filename to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18cd50861b64c0faf9c0ce3f65e7a0f7a00979c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A serialized SummaryMetadata proto. Contains plugin data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5596daa53cba0b9057ff024ff95227b2f8d354e7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string &lt;code&gt;Tensor&lt;/code&gt; of any shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af285ce0ddcebb6960af33de28c95f446e9fb2de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string attached to this summary. Used for organization in TensorBoard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd938f92a144617ff8cc7a0ff4c925632944150" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string input that overrides the mode specified in the TPUEmbeddingConfiguration. Supported values are {'unspecified', 'inference', 'training', 'backward_pass_only'}. When set to 'unspecified', the mode set in TPUEmbeddingConfiguration is used, otherwise mode_override is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff0b8495b5874c88de26649387de750abb9b0b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string representation of the given handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62bc750380f82662b2996fd0df0088de1f15c11" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string tensor containing a serialized WorkerHeartbeatRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de1aa4ddd7d9842864bcf74f54aca610833c903" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A string tensor of the text to be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a1317f45fe96161ad0eafa0a4427d13c10eb6c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A tensor containing the names of the serialized protos. Corresponds 1:1 with the &lt;code&gt;serialized&lt;/code&gt; tensor. May contain, for example, table key (descriptive) names for the corresponding serialized protos. These are purely useful for debugging purposes, and the presence of values here has no effect on the output. May also be an empty vector if no names are available. If non-empty, this tensor must have the same shape as &quot;serialized&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92adf9df63ceb9ffa28f224a25d2660cf4bd8e68" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A vector containing a batch of binary serialized Example protos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f51fd3fe85f17c751f674131bf02c251f64c077" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A vector containing binary serialized SequenceExample protos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe914e8fec4af5589386018deb5a77aeb965a62f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A vector containing the names of the serialized protos. May contain, for example, table key (descriptive) name for the corresponding serialized proto. This is purely useful for debugging purposes, and the presence of values here has no effect on the output. May also be an empty vector if no name is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9fcb5e201af76bd98e2e35012439729bca77b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A vector containing the names of the serialized protos. May contain, for example, table key (descriptive) names for the corresponding serialized protos. These are purely useful for debugging purposes, and the presence of values here has no effect on the output. May also be an empty vector if no names are available. If non-empty, this vector must be the same length as &quot;serialized&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41930d0228cb48757c7a73e3c0c85e7e71c5b9fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A vector listing the FeatureList keys which may be missing from the SequenceExample. If the associated FeatureList is missing, it is treated as empty. By default, any FeatureList not listed in this vector must exist in the SequenceExample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a577e69a215a3584437d293c17d77d3c1fc563ec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. All the elements must have the same length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da05fa7becf56956d1a8987894c73b2795b29f25" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Base64 strings to decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7b5134d74e2bdf79fa0cdc34c284d20b755928" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Each string is a JSON object serialized according to the JSON mapping of the Example proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da53bbb927a934b2b8849d57e8a20ebd55cbc6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Each string is a record/row in the csv and all records should have the same format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2713b1f8adbcfc2960fcddcf97cfafbf2b6c3c80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Filename of a vocabulary text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeb3024d8f87931884bf9a1f027aa413846e7a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Fingerprint method used by this op. Currently available method is &lt;code&gt;farmhash::fingerprint64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ccbb072746c4864f2766705653cb0af97c8b1c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Must have a single element. The name of the file to which we write the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4129e179c68f7e543d3627aa67cdb8f2055da5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Must have a single element. The name of the tensor to be restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c828255605f843c394d88ef41c83341c0a580137" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Must have a single element. The pattern of the files from which we read the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaf93a205a67547dd166c88a79fcfef98028f43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Must have a single element. The prefix of a V2 checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c3e08f095b3f8bfe4def3e14b7e79f297023c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Must have a single element. The prefix of the V2 checkpoint to which we write the tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b6495ba65110d80f50a147d3507ab89d224380" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Name of the 2-D &lt;code&gt;Tensor&lt;/code&gt; to load from checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c022f7722a3cda2e5ad0797fcaf7f8793f7605c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Path to the TensorFlow checkpoint (version 2, &lt;code&gt;TensorBundle&lt;/code&gt;) from which the old matrix &lt;code&gt;Tensor&lt;/code&gt; will be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1b8d4db80286389210052e6d2788c21c593012" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Path to the new vocab file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584df598800bf5f10b1e327bb55cd27b6c9610f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Path to the old vocab file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738ea30dee1819519d7331a05a88caa3db209813" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Result of a ReaderSerializeState of a Reader with type matching reader_handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c88f8289963874e101c12df06b0c28752fb8d77" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Scalar. Tag to use for the &lt;code&gt;Summary.Value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f43db1cbb373b828e34199f734ef85525261a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Scalar. The shapes and slice specifications to use when restoring a tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9ff45077103a7368531538ca2870114f824371" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Scalar. Used to build the &lt;code&gt;tag&lt;/code&gt; attribute of the summary values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4894cfbd8a400faabd2e9ab76bbf268d17a05892" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Serialized proto of the ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f201912a5b75a1b1858f7712286b1ea3a383d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Serialized proto of the tree ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9a7a9b4b8b3e5f5e79da145242c0ba64d98d6a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Shape &lt;code&gt;[N]&lt;/code&gt;. The names of the tensors to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210e1e0c7c4678c52b3623e797d890e75fe10d61" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Shape &lt;code&gt;[N]&lt;/code&gt;. The shapes and slice specifications to use when saving the tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515f393e4d8a817317912c9667cecfb6d5582089" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Shell wildcard pattern(s). Scalar or vector of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3653c5f808bbf12585c0ee05bc23ee75258512" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. String representing the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42a30e97b31c00744500b764033c8c87b0fc78f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Strings to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c05ab3f52426c1c6ba0ca5b323a46f02ef891c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Tags for the summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3740caa5e58ca48402fff5c0bf42e4479b8b632b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Tensor of serialized protos with shape &lt;code&gt;batch_shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39251640fa3bcf2b6468af8a35bd7f9c91d866a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Tensor of string to be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42396c6280fb319eb9319ca656570da4ce249ef0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Tensor of strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16a0c338bc39bf92ab983ab90528bbe486c6c96" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The WAV-encoded audio, usually from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751daa3ce6bd64742282c837444c99ef151d02a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The database type. Currently, the only supported type is 'sqlite'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48f375bfc139dc896dee56d11f1fca2ef579686" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The graph representation of the dataset (as serialized GraphDef).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f03a0e02703b567b94b927385701e3371f8ed6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The handle for a tensor stored in the session state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a982c8d895cef25b0cfd861164bee7fb8f9fbb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The input to be joined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6457ee396687c6cde2f2d2c28200ac3568071aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The input to be joined. All reduced indices must have non-zero size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b544a1c90618f6fff283800adda09836045ce6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The path we should write snapshots to / read snapshots from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70a24eda249a3a009459f8d8b15fa273ed2bc31" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The string scalar to print.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05fce3e1b742af36c07f3141c96de3ea87240c9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The strings for which to compute the length for each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4255e3ef13b9475a4d6e6806ae5754b577690c75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The strings to assign a hash bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690d3ce60afd6ee2ab1eb7cc4bc65cefe33ec551" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The text to be decoded. Can have any shape. Note that the output is flattened to a vector of char values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0ec3e7d4cc39d3753818913132d719bc2513d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The text to be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fc026a42b444e72b336a5aa2d7834c234d2d36" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The text to be processed. Can have any shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f75f463d25716916e7b35e3264b8a8e157bfcaf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The values tensor of the ragged string tensor to make ngrams out of. Must be a 1D string tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c26e69f0c70d21aff4daf9703233e6c63395a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Vector of strings. The keys expected in the Examples' features associated with dense values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b85b8c3722b27a44cbacd2ca3bf260287c0e8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Vector of strings. The keys expected in the Examples' features associated with ragged values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4184266b3d80d7fc5e252b0f9cccad62d52da0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. Vector of strings. The keys expected in the Examples' features associated with sparse values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d91cd131dad003885daf9bc61d0ab85854fc02d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. prefixes of V2 checkpoints to merge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f643f33132ad566d032f20f83523825195250d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. scalar. The content to be written to the output file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e3d7121f546117138227ee554dc8f9c0ea04f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. scalar. The desired final prefix. Allowed to be the same as one of the checkpoint_prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d593fbfc15b67c6399f6f844f3e5d686820cdb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. scalar. The name of the file to which we write the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7a3e77aaa216d408ca59a0c1ba97fdca49be87" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. shape {N}. The names of the tensors to be restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208128de8772404683f5f7c6c5fbae627ef0ea0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. shape {N}. The names of the tensors to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0354975a0d5ace112e60ebf796cecc09e1f3e1cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. shape {N}. The slice specs of the tensors to be restored. Empty strings indicate that they are non-partitioned tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b714d33a8adf6ef43dc7885c7f5727127ac080" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. shape {N}. The slice specs of the tensors to be saved. Empty strings indicate that they are non-partitioned tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b589422948803a46af5f8e59aa74e947ed249d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. string used when joining a list of string inputs, can be used as separator later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c96da56a1235b03d1e7011e4e3b16d28da1ba8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. vector of strings to compute fingerprints on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103342490a8eba71da32cadcccfc32a68d2ccf13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;tensor_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa52a927bac67ce7b331f9074f86d247006461" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eca32cd0359d3692d1b5f7206800c727fd138eeb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;uint8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа &lt;code&gt;uint8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55e3dd0d7de0364ea8e0eb21efaa8ffeef738ffe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;uint8&lt;/code&gt;. 3-D with shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab4bbbe13e12986edb4739ea52471a393ff9d3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;uint8&lt;/code&gt;. Images to adjust. At least 3-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1742f2be45d2b8e8e19723a5a0ab68bf72faac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70686abe15d49aedecf552ac52b5a16ed621eaee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A (possibly batched) CSRSparseMatrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83555d9ba9ee31bc0ea7c4ec8413971dd3ffb58e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A &lt;code&gt;CSRSparseMatrix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b9ef95e24f5838827875a5bb0f8602fd27d367" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A &lt;code&gt;variant&lt;/code&gt; Tensor containing encoded &lt;code&gt;RaggedTensor&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320aa404ec80dab0489323821bd496e199cbd464" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A CSRSparseMatrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d47e1970c030035059f08c2840ee1445992d143" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A batched CSRSparseMatrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94e63934a04b8113975f077c8ee9919b6c31743" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A dataset of scalar &lt;code&gt;DT_INT64&lt;/code&gt; elements that determines which of the &lt;code&gt;N&lt;/code&gt; data inputs should produce the next output element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a011465e4ad5ed1e06f36dac9116140d247cb75c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A handle to a dataset that contains a single element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57f7dc8187c147fa0c522f28d1a360d0a400db7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A handle to an input dataset. Must have a single component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3248addc646c9eb4d3fb82ffef58b5a80615cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A tensor returned by &lt;code&gt;MutexLock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11b2405d23be3d6f355dc6f0f7fe1a62885cb0e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant deleter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49ed2b512d28eaf1e6d40f11c4a03f7844da611" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing linearized output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a308b49b27fca036daad980ccb068cc566503a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing the dataset to return cardinality for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f4ba8664e4af616cbbc5d72fcdbf49d72bbe31" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing the dataset to return the graph representation for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3131b2dc2dd9d06a02f62985cacebff3054ba467" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing the dataset to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31a7b62d519188b2957fbb3a4eae018a4ea0317" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing the input dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8e239e90cf5b3ebe63c72c612b5529e700460f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor representing the input dataset. &lt;code&gt;AssertNextDataset&lt;/code&gt; passes through the outputs of its input dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fcf99acf3308c060126bb9ee97bb44734d7130" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. A variant tensor storing the state of the iterator contained in the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c1faf2e8d9e39481810c7a04e2a941b25769e9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. Dataset that produces a stream of arguments for the function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5721184492925585134ed8a853b217196d9876f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. Dataset to be iterated upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab9a22b523e9a0c4a011906c67f64da04054b18" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;variant&lt;/code&gt;. The gradient of &lt;code&gt;softmax&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899211c7c97acffd33c20b1428a8aa19d11d6baa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type bool with the same size as that of x or y.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; типа BOOL с тем же размером, что и х или у.</target>
        </trans-unit>
        <trans-unit id="7a31f89a11131c514565315733ac779fe79379d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356c2746062dcfab0ef8d258c554e1e79805ab23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to a &lt;code&gt;Queue&lt;/code&gt;, with string work items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f027c77a342edc3c57b0988454010e4b2f323e68" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to a &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe569fc8cd58e6abb254116e9a1be42aa60cbb5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to a Queue, with string work items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf290ce7f669a2b99871b67409148d3fec5fbef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to a Reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82608a08a8a824de9f1fac80d84c408a6903c6a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to a table which will be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d310835ad388e94b08fceb481833c0b5102ff645" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. Handle to the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc87e00fe82359e00cbfdd4058a9b10b49f6779a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. The handle to a SparseConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc32bc02ae0865576e1520cc506813163d025f82" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. The handle to a accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecf6116e68389d7ef9839ef742f2f6155dabb3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. The handle to a barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372c0067f31d880d106ce082a1f2c20ec187b9a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. The handle to a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f11a9bd237cda681166993a1b6413b980efff32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; of type mutable &lt;code&gt;string&lt;/code&gt;. The handle to an accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec12cfcc0a9c1758d7173b6fd4f8fe2cce7005b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; to be scaled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f47affee3bb3bfefae777ca0be19fac6736b4e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f59ef5e5bf47816e0ed8344c9c9262a9cdcb4f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;. This must be a floating point type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e2764833693db2fc7b1f965445861d20e9e6c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; containing the values to stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d21be39ccac99b4de8a77bf63d0a99a6b29a34" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;RaggedTensor&lt;/code&gt; object. Values that include at least one ragged dimension are returned as &lt;code&gt;RaggedTensor&lt;/code&gt;. Values that include no ragged dimensions are returned as &lt;code&gt;Tensor&lt;/code&gt;. See above for examples of expressions that return &lt;code&gt;Tensor&lt;/code&gt;s vs &lt;code&gt;RaggedTensor&lt;/code&gt;s.</source>
          <target state="translated">Объект &lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;RaggedTensor&lt;/code&gt; . Значения, включающие по крайней мере одно рваное измерение, возвращаются как &lt;code&gt;RaggedTensor&lt;/code&gt; . Значения, не содержащие рваных размеров, возвращаются как &lt;code&gt;Tensor&lt;/code&gt; . См. Выше примеры выражений, которые возвращают &lt;code&gt;Tensor&lt;/code&gt; vs &lt;code&gt;RaggedTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75693e1b4b4d4d836beb29b9827478fcff298902" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; of the same size, type and sparsity as &lt;code&gt;x&lt;/code&gt;, with absolute values. Note, for &lt;code&gt;complex64&lt;/code&gt; or &lt;code&gt;complex128&lt;/code&gt; input, the returned &lt;code&gt;Tensor&lt;/code&gt; will be of type &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c9f4481e054b707369ddc247b65ab2144d12df" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt; or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20c2dbd4d8e9777a5b42983a8a3e530ec5a8808" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; of numeric type. It could be &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e637003e61b0d567a649b1645db4b92e6f7232d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; and same type as &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; и того же типа , как &lt;code&gt;dtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a69d11f4bb4821910061f3f0af2c97c44b847520" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;bfloat16&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;bfloat16&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7809f9a3ad61f631bbf1ac030ddd392bac99822" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;complex128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4472f52668cd8f1d302bba41cd1a09c41b06123a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;complex64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;complex64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0c75d81577d14990f8d81c15f54e8f1e9a3e0a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;float32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5a3c5b71d4702b7463c16a1a406a1a502fa9e46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;float64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ad845572fc458865d6a268755a3d0ff3474570f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;int32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af2964ae4bad54bd4369a0096dae1a534130baa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; with same shape as &lt;code&gt;x&lt;/code&gt; with type &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; или &lt;code&gt;IndexedSlices&lt;/code&gt; с такой же формы , как &lt;code&gt;x&lt;/code&gt; с типом &lt;code&gt;int64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cad3258c3ace04fa996c7a1ead5227ef8e0c4150" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a645b515348196c3446bf00c0da8032c56f2ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; the same size, type, and sparsity as &lt;code&gt;x&lt;/code&gt; with absolute values. Note, for &lt;code&gt;complex64&lt;/code&gt; or &lt;code&gt;complex128&lt;/code&gt; input, the returned &lt;code&gt;Tensor&lt;/code&gt; will be of type &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; тот же самый размер, тип и разреженности , как &lt;code&gt;x&lt;/code&gt; с абсолютными значениями. Обратите внимание, для &lt;code&gt;complex64&lt;/code&gt; или &lt;code&gt;complex128&lt;/code&gt; входа, возвращенные &lt;code&gt;Tensor&lt;/code&gt; будет иметь тип &lt;code&gt;float32&lt;/code&gt; или &lt;code&gt;float64&lt;/code&gt; , соответственно.</target>
        </trans-unit>
        <trans-unit id="a3349aa42bdbc3a457cedaa9b89b27cebe2363f2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, respectively. Has the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; , соответственно. Имеет тот же тип, что и &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5510798448a6e0a20cdba0681ba39ec533c867f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acdd2fc7d26c08eb527775113be7357525fe253" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf2942b7bfd58fda458e2cd635b4ba8cd98d647" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9c4f04c13115291bc1d435410e0c8fa643ef14" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or Python value of type &lt;code&gt;dtype&lt;/code&gt;. The maximum value of the truncated normal distribution. This must broadcast with &lt;code&gt;means&lt;/code&gt;, &lt;code&gt;stddevs&lt;/code&gt; and &lt;code&gt;minvals&lt;/code&gt;, and the broadcasted shape must be dominated by &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a155aa8fc1f721612824c0c3790569a66ba98605" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or Python value of type &lt;code&gt;dtype&lt;/code&gt;. The mean of the truncated normal distribution. This must broadcast with &lt;code&gt;stddevs&lt;/code&gt;, &lt;code&gt;minvals&lt;/code&gt; and &lt;code&gt;maxvals&lt;/code&gt;, and the broadcasted shape must be dominated by &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77971ff120713b2dbf90496e18085b1955a58ea9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or Python value of type &lt;code&gt;dtype&lt;/code&gt;. The minimum value of the truncated normal distribution. This must broadcast with &lt;code&gt;means&lt;/code&gt;, &lt;code&gt;stddevs&lt;/code&gt; and &lt;code&gt;maxvals&lt;/code&gt;, and the broadcasted shape must be dominated by &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98a94ef51c4eeb0bb30919a092fc0b953eab313" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or Python value of type &lt;code&gt;dtype&lt;/code&gt;. The standard deviation of the truncated normal distribution. This must broadcast with &lt;code&gt;means&lt;/code&gt;, &lt;code&gt;minvals&lt;/code&gt; and &lt;code&gt;maxvals&lt;/code&gt;, and the broadcasted shape must be dominated by &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7552ef2658be9eb06fe656651e45657bf9b92d6d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a 'RaggedTensor' with type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; containing the ids to be looked up in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e3f2f8a66b2cb459ff07acea335110c29fe4f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a 'RaggedTensor', depending on the input, with the same type as the tensors in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; или &amp;laquo;RaggedTensor&amp;raquo;, в зависимости от входных данных, с тем же типом, что и тензоров в &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a98b4d3c54be759fb54ce58bcd43c96cf5726b2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a dict of string to &lt;code&gt;Tensor&lt;/code&gt; representing the predictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c382f5f35f68893cc14ff36704d5824d9c180814" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. A constant epsilon used to better conditioning the grad update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb455a31095347b88b9dfe38258ca2deae1806d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. The decay rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0405a8a4de31c1a66279431934ff2e5139d0c7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. The learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f299fd6213a5e3afdeddc1e3b40c274dd1e0789" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. The learning rate. To match the exact form in the original paper use 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab91b3b192edc4975cbe5eba0bb05b2a342c6f3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or a floating point value. The momentum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b1f83cdde6654d09ae2d0a557deb8c6130b1d3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or array-like object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d8f445e551bb06b001798e8dd665810670572c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors to be differentiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c253a0e02a70219faba605672e0ba353f9997a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or list of tensors to be used for differentiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bda78290617395bdc15951fbcdc8873b24f21b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; or tuple of &lt;code&gt;Tensor&lt;/code&gt;s describing left-hand sides. The shape depends of &lt;code&gt;diagonals_format&lt;/code&gt;, see description above. Must be &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1891a36e1e8eaeb6d5e5a822aa36770cd68b22fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing audio data with shape &lt;code&gt;[k, t, c]&lt;/code&gt;, where &lt;code&gt;k&lt;/code&gt; is the number of audio clips, &lt;code&gt;t&lt;/code&gt; is the number of frames, and &lt;code&gt;c&lt;/code&gt; is the number of channels. Elements should be floating-point values in &lt;code&gt;[-1.0, 1.0]&lt;/code&gt;. Any of the dimensions may be statically unknown (i.e., &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e247cb74599be7fd97c25365328f6c54af6149" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing pixel data with shape &lt;code&gt;[k, h, w, c]&lt;/code&gt;, where &lt;code&gt;k&lt;/code&gt; is the number of images, &lt;code&gt;h&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; are the height and width of the images, and &lt;code&gt;c&lt;/code&gt; is the number of channels, which should be 1, 2, 3, or 4 (grayscale, grayscale with alpha, RGB, RGBA). Any of the dimensions may be statically unknown (i.e., &lt;code&gt;None&lt;/code&gt;). Floating point data will be clipped to the range [0,1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b4a44c89b83e5dc55a4dd50e6b413ce837201" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing preactivation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323d692829a1cb9fac1754e77f60c91fd617e63f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the accuracy, the value of &lt;code&gt;total&lt;/code&gt; divided by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae80700bc40207144e52131c431012fcb85b9ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the current mean, the value of &lt;code&gt;total&lt;/code&gt; divided by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a269716d77d5993ce29122cbfcc0804a5c6e4ef7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the current value of the metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdf25ba6711ecf7e20db64de6fd26a4d75a817a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the input tensor, transformed by the relu activation function. Tensor will be of the same shape and dtype of input &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , представляющий тензор входного сигнала, преобразованного с помощью функции активации Relu. Тензор будет иметь ту же форму и тип d, что и вход &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ddbe0daffc98eb8537fa660987822e4083e6ac6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the mean intersection-over-union.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a48ba5ecbd3f9404ab4a4280d681360ffd79f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the mean per class accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd6f5d2c8783fb1decadb92f0c5385916ba20ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; representing the variable of the polynomial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3dd0f321dcc859f753ae7dde6b8869664a3e05" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; resulting from concatenation of the input tensors.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; в результате конкатенации входных тензоров.</target>
        </trans-unit>
        <trans-unit id="ddd7434f3115a4dc15535e8c2f553c6b1ec5cc59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that contains the softmax cross entropy loss. Its type is the same as &lt;code&gt;logits&lt;/code&gt; and its shape is the same as &lt;code&gt;labels&lt;/code&gt; except that it does not have the last dimension of &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который содержит SoftMax кросс потери энтропии. Его тип такой же, как у &lt;code&gt;logits&lt;/code&gt; и его форма такая же, как у &lt;code&gt;labels&lt;/code&gt; за исключением того, что у него нет последнего измерения &lt;code&gt;labels&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6e7290517f372650c0585199a09fece4fc9a53d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that is the conjugate of &lt;code&gt;x&lt;/code&gt; (with the same type).</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; что конъюгат &lt;code&gt;x&lt;/code&gt; (с тем же типом).</target>
        </trans-unit>
        <trans-unit id="8a5df07c5640680708ae4d6cb50abe2d16e14a3f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that may be used as a handle for feeding a value, but not evaluated directly.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , которые могут быть использованы в качестве ручки для подачи значения, но не обрабатываются напрямую.</target>
        </trans-unit>
        <trans-unit id="14e312bacdb65fb2de4e6841044fc46c68648103" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of &lt;code&gt;ref&lt;/code&gt; after the assignment has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение &lt;code&gt;ref&lt;/code&gt; после того, как задание завершено.</target>
        </trans-unit>
        <trans-unit id="d73c67ed7414039556fd4787b1eb8ea826f2c30a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the addition has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как добавление завершено.</target>
        </trans-unit>
        <trans-unit id="1ddfa403e1503748d02e8d1056e183f6cc602672" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the assignment has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после присваивания завершена.</target>
        </trans-unit>
        <trans-unit id="fc247d8e945d8ec8ac2c548c96fc12095764d93d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered addition has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как рассеянное добавление завершено.</target>
        </trans-unit>
        <trans-unit id="713cf4f1e8902fb088a2fac4c06864ef52f69819" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered assignment has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как рассеянное задание завершено.</target>
        </trans-unit>
        <trans-unit id="9c63754fbd06933b4d1a778405d18dc9f72e05e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered division has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как рассеянное деление завершено.</target>
        </trans-unit>
        <trans-unit id="d4f3c9e3b842895cb97b7bb14c47cefbaedbc890" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered maximization has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этого переменного после того, как рассеянная максимизация завершена.</target>
        </trans-unit>
        <trans-unit id="f9150c5d50484b97905906a03597658bfa313579" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered minimization has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этого переменный после рассеянной минимизации завершена.</target>
        </trans-unit>
        <trans-unit id="ba248292ec1e64002f3694e5835c1f806e208c2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered multiplication has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как рассеянное умножение завершено.</target>
        </trans-unit>
        <trans-unit id="f5544320fd4c71e57801ed4537f52a85d547bbd2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the scattered subtraction has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после того, как рассеянное вычитание завершено.</target>
        </trans-unit>
        <trans-unit id="ff7fbcfb51bd68aac4eea75cdce287e8abb34a62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the new value of this variable after the subtraction has completed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать новое значение этой переменной после вычитания завершена.</target>
        </trans-unit>
        <trans-unit id="bb0eec9be291ca5bb0b7c4ace125865444290680" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; that will hold the variable value before the increment. If no other Op modifies this variable, the values produced will all be distinct.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который будет содержать значение переменной до инкремента. Если никакая другая операция не изменяет эту переменную, все полученные значения будут разными.</target>
        </trans-unit>
        <trans-unit id="25b2cfd4f2b652fa3a2c261fdb1cb2bcfaf9381c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; того же типа , как &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f846de88bedd42bbd6e4b08eaae3a99b3a957f73" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; the same type as &lt;code&gt;input_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; того же типа , как &lt;code&gt;input_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc53314397cb87f52a3fc2ef2420ecc9aa71278" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; to quantize and dequantize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3937e44a4868c5bb4c6583e9872d2ea5813ef1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; which is summed across replicas.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который суммируется по репликам.</target>
        </trans-unit>
        <trans-unit id="883f1fb2773415c30368415afb6b324e6013b2b6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; which may have the same shape as &lt;code&gt;condition&lt;/code&gt;. If &lt;code&gt;condition&lt;/code&gt; is rank 1, &lt;code&gt;x&lt;/code&gt; may have higher rank, but its first dimension must match the size of &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8c8c2d85a194ed9b4b2f4c0259ce8dc69bbbff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; which represents input layer of a model. Its shape is (batch_size, first_layer_dimension) and its dtype is &lt;code&gt;float32&lt;/code&gt;. first_layer_dimension is determined based on given &lt;code&gt;feature_columns&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который представляет входной слой модели. Его форма - (размер_пакета, размер_первого_слея), а его тип - &lt;code&gt;float32&lt;/code&gt; . first_layer_dimension определяется на основе заданных &lt;code&gt;feature_columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e77a2198594b5a3c73f961b953791816da30c1fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; which represents predictions/logits of a linear model. Its shape is (batch_size, units) and its dtype is &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , который представляет предсказания / логит линейной модели. Его форма - (размер_пакета, единицы), а его тип - &lt;code&gt;float32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea9c02dc75dabceabe0e2b8dde6056e3379ad4e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; whose dtype is compatible with &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6f9ba0ce2772dbbe6d346d88f2375b26b8d5f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; whose shape matches &lt;code&gt;predictions&lt;/code&gt;. Will be cast to &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f2d577949b960e1ab5b0296e727ad607f17855" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; whose value represents the total loss.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , значение которого представляет собой полную потерю.</target>
        </trans-unit>
        <trans-unit id="a57b82e87d46acd274cfab8dd4de5786b9bffa0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;rank &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ec1a9f81017bfff1d51cb3f7113cfbb7adeb0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;rank k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772d6e8f3f4d3f957638199ecaa4ffff0dd5b806" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with &lt;code&gt;rank k &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9d1a95e64a119ed10e60ee1fb993d0ce9e5f92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with all elements set to 1.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; со всеми элементами , установленными на 1.</target>
        </trans-unit>
        <trans-unit id="3372f3cf7ffac781d39eb112bb41676b1513a25b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with all elements set to one (1).</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; со всеми элементами , установленными на один (1).</target>
        </trans-unit>
        <trans-unit id="14e86c3e44154c88bb5988cbb024043391b0cf79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with all elements set to one.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; со всеми элементами , установленными на один.</target>
        </trans-unit>
        <trans-unit id="df7edb8b63e1c97fd93dcb278d04c8b8612a8ffc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with all elements set to zero.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; со всеми элементами , установленными в нуль.</target>
        </trans-unit>
        <trans-unit id="a0bcbf531cc3d89cb96534b877328ac5a6cf6706" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with broadcast shape and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с формой вещания и тем же &lt;code&gt;dtype&lt;/code&gt; как &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d81bce65ac8d044e2f4413a65011a803b33fda7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with data that will be assembled in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b213e90f0300f68953f7fe1434da23bdf89bd0a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with floating point or complex dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02504d70a6c458f84f90d63e165e633d5caed21b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with loss.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с потерей.</target>
        </trans-unit>
        <trans-unit id="af3b5f6a2417ebac8e0aa195a894d7b10c315395" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;k + 1&lt;/code&gt;, where &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8558d99f64fde416b9365b820cb515119a31f20f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;k&lt;/code&gt;, when &lt;code&gt;d_lower == d_upper&lt;/code&gt;, or &lt;code&gt;k + 1&lt;/code&gt;, otherwise. &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2bae79f3c6f80e70557ff984d00459462e1b50" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with same shape and dtype as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с одинаковой формой и DTYPE как &lt;code&gt;image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="204c4c4ed953414ac7b120623bd8aec0d45f1950" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with same shape as input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79c4576ee30bf2baa2ded62fbea29186786a71" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[..., M]&lt;/code&gt; and same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с формой &lt;code&gt;[..., M]&lt;/code&gt; и тот же &lt;code&gt;dtype&lt;/code&gt; , как &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="374cff4f270aadfc37d97f47d7dc33fd4178ce15" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;[..., output_size]&lt;/code&gt; containing the overlap-added frames of &lt;code&gt;signal&lt;/code&gt;'s inner-most two dimensions.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с формой &lt;code&gt;[..., output_size]&lt;/code&gt; , содержащие кадры перекрытия добавленными из &lt;code&gt;signal&lt;/code&gt; &amp;laquo;с внутренних-самых двумя измерений.</target>
        </trans-unit>
        <trans-unit id="815f21d99b3088b7a1db0dc6c006c5e12b308a6f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;ragged.bounding_shape(self)&lt;/code&gt; and the values specified by the non-empty values in &lt;code&gt;self&lt;/code&gt;. Empty values are assigned &lt;code&gt;default_value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с формой &lt;code&gt;ragged.bounding_shape(self)&lt;/code&gt; и значений , указанных непустых значений в &lt;code&gt;self&lt;/code&gt; . Пустым значениям присваивается &lt;code&gt;default_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ca4382b04f7f7c6ce3d112d724e1a44893bc298" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same data as &lt;code&gt;input&lt;/code&gt;, but its shape has an additional dimension of size 1 added.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с теми же данными , как &lt;code&gt;input&lt;/code&gt; , но его форма имеет дополнительное измерение размера 1 добавленных.</target>
        </trans-unit>
        <trans-unit id="3b5e5fd3afafa1e0e2963560678d42fe3652a3f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same dtype and shape as &lt;code&gt;values&lt;/code&gt;, with the elements sorted along the given &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же DTYPE и формы , как и &lt;code&gt;values&lt;/code&gt; , с элементами , отсортированных по заданной &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc05a6e3ea48910a21392f808dd2704de28461a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same shape and dtype as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9348d157256ebf27f8c619d17c1badee3d70ecc1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с той же формы, что и &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71b685b9bd21239fbd2d58267800d18871424103" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type and shape as &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; if they are non-None. Otherwise, a &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;(num_true, rank(condition))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом и формой , как &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , если они не являются не-Ни. В противном случае - &lt;code&gt;Tensor&lt;/code&gt; с формой &lt;code&gt;(num_true, rank(condition))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b63d0ba4378e08002f95f8379a78b9543d57f713" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type and shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df9b240a5e260299006cabca766d49e03a7cbe9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом , как и . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d82894eb7b1e614718f0f7313a6b50aa1137f1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;features&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типа &lt;code&gt;features&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8bb7a9bf2f3be7e1552138f2b64496629c2bbea" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt; of shape</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с той же типа, что и &lt;code&gt;input&lt;/code&gt; формы</target>
        </trans-unit>
        <trans-unit id="fb07cc0661be6996a5bc61a7e8e3edbfbfadf7de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с той же типа, что и &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ffd55dcffdfd06a9b79165a23b479647f57a235" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом , как и &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c275e0612fc8709d2c1e2c7edd48dc26aafe8b7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt;. Output shape with &lt;code&gt;'VALID'&lt;/code&gt; padding is:</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом , как и &lt;code&gt;value&lt;/code&gt; . Форма вывода с заполнением &lt;code&gt;'VALID'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8c2c1e6230596bddff7b13f43be5bbe95245319b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;value&lt;/code&gt;. The average pooled output tensor.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом , как и &lt;code&gt;value&lt;/code&gt; . Тензор среднего суммарного выхода.</target>
        </trans-unit>
        <trans-unit id="93c18b9b04cd1e271a8d0b3f617f9f4007fed413" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, and shape that is broadcast from &lt;code&gt;condition&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; are non-None. Otherwise, a &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;(num_true, dim_size(condition))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом, что &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; , и формы , которые транслируются из &lt;code&gt;condition&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; не не-Ни. В противном случае - &lt;code&gt;Tensor&lt;/code&gt; с формой &lt;code&gt;(num_true, dim_size(condition))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76a45bf37a5c5d1bddd6b03a3e187fbc09958614" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with the same type as the tensors in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; с тем же типом, что и тензоры в &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dda98ca22d8f8086a91dac6be29749b8e6907c05" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, or &lt;code&gt;int8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ff4431fdb5122bfd369c4ae90c5e5c4edf4408" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0a77b8e1c00cc6c224e474307c0067a7240e6a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt; with type &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt; containing the ids to be looked up in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895ebee14d8a9f654840cb544a9baebaef3554b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;IndexedSlices&lt;/code&gt;, or &lt;code&gt;SparseTensor&lt;/code&gt; based on &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;IndexedSlices&lt;/code&gt; или &lt;code&gt;SparseTensor&lt;/code&gt; на основе &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70d6342985e4a661deeae09b84b44546b7b0858f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string or int to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, specifying the features to be passed to the model. Note: if &lt;code&gt;features&lt;/code&gt; passed is not a dict, it will be wrapped in a dict with a single entry, using 'feature' as the key. Consequently, the model must accept a feature dict of the form {'feature': tensor}. You may use &lt;code&gt;TensorServingInputReceiver&lt;/code&gt; if you want the tensor to be passed as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa07843b31896ba2dfabdac4311e92aee02cbf8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, or dict of string to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;, specifying input nodes where this receiver expects to be fed by default. Typically, this is a single placeholder expecting serialized &lt;code&gt;tf.Example&lt;/code&gt; protos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3e06c8dd855b0d22b6fcbd73f65fec61f8873a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, The shifted tensor.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; , Сдвинутая тензор.</target>
        </trans-unit>
        <trans-unit id="80ca47f1774ca7d0ea65bbb2c1a4439eb727e3ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, an &lt;code&gt;Operation&lt;/code&gt;, or the name of a tensor or operation. Can also be any object with an &lt;code&gt;_as_graph_element()&lt;/code&gt; method that returns a value of one of these types. Note: &lt;code&gt;_as_graph_element&lt;/code&gt; will be called inside the graph's lock and so may not modify the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df2ed27c9568fd03c07dfe2fa1bb0a53465569" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, floating point value, or a schedule that is a &lt;a href=&quot;schedules/learningrateschedule&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.LearningRateSchedule&lt;/code&gt;&lt;/a&gt;, or a callable that takes no arguments and returns the actual value to use, The learning rate. Defaults to 0.001.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f42ba6dd733ab6ab4af2fefafc9981a4586a7a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, floating point value, or a schedule that is a &lt;a href=&quot;schedules/learningrateschedule&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.LearningRateSchedule&lt;/code&gt;&lt;/a&gt;, or a callable that takes no arguments and returns the actual value to use. The learning rate. Defaults to 0.01.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96478720737f7190a2b1b9c831414a0d8c739ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, floating point value, or a schedule that is a &lt;a href=&quot;schedules/learningrateschedule&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.LearningRateSchedule&lt;/code&gt;&lt;/a&gt;, or a callable that takes no arguments and returns the actual value to use. The learning rate. Defeaults to 0.001.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9924400643be8fcc59b743f3ab26a19cda5cb800" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, floating point value, or a schedule that is a &lt;a href=&quot;schedules/learningrateschedule&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.LearningRateSchedule&lt;/code&gt;&lt;/a&gt;. The learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a704221dee3bf23139ea25afeaea9396556cae0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, floating point value, or a schedule that is a &lt;a href=&quot;schedules/learningrateschedule&quot;&gt;&lt;code&gt;tf.keras.optimizers.schedules.LearningRateSchedule&lt;/code&gt;&lt;/a&gt;. The learning rate. To match the exact form in the original paper use 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f5b04e4962110c5d6d081853bc395501b98bbc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, or Python object convertible to a &lt;code&gt;Tensor&lt;/code&gt;, which is the initial value for the Variable. The initial value must have a shape specified unless &lt;code&gt;validate_shape&lt;/code&gt; is set to False. Can also be a callable with no argument that returns the initial value when called. In that case, &lt;code&gt;dtype&lt;/code&gt; must be specified. (Note that initializer functions from init_ops.py must first be bound to a shape before being used here.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34abf751f82e3be0884c98dcd4da7995bee8adf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;, same type as &lt;code&gt;chol&lt;/code&gt;, shape is &lt;code&gt;[..., M, K]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9121cc5cee61824f15d62120a0a771c6185c4773" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c235fd2026e6126ba6744ee52fbb3f7ede9f8e5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 0-D (scalar). Value to fill the returned tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e4feda525617ef018a0514881a36b8c3352a9f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D or higher, with &lt;code&gt;axis&lt;/code&gt; dimension size equal to &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c6dfb9614bbb3b7bb0139ac80835d74bac66c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f1154bbee4d93e964ed867bfac3cf40528470" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D tensor represents the values of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fca9485f4a7952df80c6bfb29040ed1de0e193" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7d45354c424710e12b92c0398fa3da8572f738" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;input_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6636da37cf9ae666f1d59f666b349b6c3cea75c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b169de0af18378fc980e8a2e97fa625e572645cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e932e6ee1fb1edcb7b391bc316e4accb6740506b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the minibatch &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f72092058e3cc7964c24b65103952f65920efa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. The gradients from backprop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83006b932098a0912db1d6fa4c3cc4d49b0b1887" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. Values corresponding to each row of &lt;code&gt;sparse_indices&lt;/code&gt;, or a scalar value to be used for all sparse indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147f5198a3fe21c3bfaac32ef5426eff78ad2b0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. Values to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6219258ef395e8888a033e0acbb69afe103321" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 1-D. the values of the sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf95a9ceba027dabb76657c27dad85a214576ad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 2-D Tensor where each row is ordered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c6d817eeaefe228b4c62cb97bd77d14bce37c8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 4-D tensor with shape &lt;code&gt;[batch*block_size*block_size, height_pad/block_size, width_pad/block_size, depth]&lt;/code&gt;. Note that the batch size of the input tensor must be divisible by &lt;code&gt;block_size * block_size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eae69b693785a9b0e4373eee2926daf13b705d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c052cf40339806ddbeda30580cccca4532b425b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66481e732d042ec9f2492d4b58dfe80137d5650" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f6ccd81515c74ffaf1faccff1a45fe9c01eb60" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A 1D tensor representing the values of the ragged tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd32852b24cf3dde686a45f6e964cce5470ee06" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dfb5454bffbb3a5445b95759f74b8576e31459" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddf2fb983688de08285b098350fb23f95592ee7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123612939b39f995a7dc5fed4193053711525c5f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor representing the values of the input &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07313b529c58498355168407f296188b23f6cb40" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor to broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b991c062f79992cb83b93633cfab346a15bddb3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor. If the tensor is a scalar of non-boolean type, the scalar is converted to a boolean according to the following rule: if the scalar is a numerical value, non-zero means &lt;code&gt;True&lt;/code&gt; and zero means False; if the scalar is a string, non-empty means &lt;code&gt;True&lt;/code&gt; and empty means &lt;code&gt;False&lt;/code&gt;. If the tensor is not a scalar, being empty means False and being non-empty means True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a9bdb5d5b97545dbced736f130734d7407d85d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of updated values to add to ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ca36fcee1efc7e49e03b23f02a62062a2816fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of values to add to ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381bced1ca37784debc40e9ea04132fdb5cb6765" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of values whose element wise max is taken with ref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb45168b6a8c1844ec5ce53025dc280cc3e71482" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of values whose element wise min is taken with ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d5df14bd72c0e4792462d8143889bc209a5928" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11555ee04b0ebe832d67986b9083b6428301456" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A scalar defining the value to fill in output when &lt;code&gt;indices[j] = i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b72025c02407b8112757fdc7ba55df9e8133e7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0713edd232c7f057820edcce9f012ffa21d4b93" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor of updated values to add to &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4bda560ba0db957960a9e48a1a66dc69913084" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor that will be inserted into the outfeed queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b6cb3866210cc34ca59f9768a1f1279bfbb816" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor that will be linearized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e2d8baebefcb782fde348776dfb2239d4b5a92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor that will be provided using the infeed mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbf1a57ac4eae5be7b4e9680bda1873761e556b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor to serialize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b1148f9998d2ef9609d8665e65adac13183baa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. A tensor, whose shape is to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13387b7095148375165185625c67f0fac1143dd2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. An any-dimensional tensor of values, which are associated with the respective keys. The 0th dimension must have length n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba24caad52d9ea190b31883ad0104eb06b7b34ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Any shape. Keys of the elements to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9a91b4666c0c1cdc208d58d9ca295312cc822d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Any shape. Keys to look up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c22a37c78eed857c459e90e4efe36ebd3ddbc94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Each element is the result of quantizing and dequantizing the corresponding element of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Каждый элемент является результатом квантования и деквантования соответствующего элемента &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="670126d58620ef7021d8ade94c0ba7b84549e494" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has same shape as data, except for the first &lt;code&gt;segment_ids.rank&lt;/code&gt; dimensions, which are replaced with a single dimension which has size &lt;code&gt;num_segments&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет ту же форму, что и данные, за исключением первых измерений &lt;code&gt;segment_ids.rank&lt;/code&gt; , которые заменяются одним измерением с размером &lt;code&gt;num_segments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28370af90e3af60b928be28771d8c9455b299348" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same shape and type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет ту же форму и тип, что и &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4540a2fb3b4152e7423dd8efbfd17fa609523583" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type and contents as &lt;code&gt;input_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип и содержимое, что и &lt;code&gt;input_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5732300c3bca1b186bc49c0969b513c47a24e5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type and contents as &lt;code&gt;x&lt;/code&gt;. At runtime, raises a &lt;a href=&quot;errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;shape&lt;/code&gt; is incompatible with the shape of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип и содержимое, что и &lt;code&gt;x&lt;/code&gt; . Во время выполнения вызывает &lt;a href=&quot;errors/invalidargumenterror&quot;&gt; &lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt; &lt;/a&gt; если &lt;code&gt;shape&lt;/code&gt; несовместима с формой &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d399a187ae8139c7418e823543948f2eb3d7941" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type and shape as &lt;code&gt;logits&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же вид и форму, что и &lt;code&gt;logits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfabd869dbf7fd90192fd1011234a200c24530e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2cb1c16b925306f90683ed65b84ec6aaef1c780" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;a_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4f79891a587b306d2815c057a893a4809906e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c893b8bc6ee5c68bce8819693d94a7e6c7d3d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00e6da6c3d8c8324b31586e6449a15d9127cde8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;backprop_val_grad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca549fe3c81488aca13227d31d0e5d74c496a0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;batched_tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb3af3741ee25ef62c7e375e92a1a78a0aa679f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;boxes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed677a899f3a2d29735127901869ebd130f2a82d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19f749c2e48cbfee070dddbd22e5fba3d8e61a07" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;data_splits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe9e1f32e604ee4cf7806f0fd32b98707167978" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;default_value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83def9776a8644014a3a6a30fff8e13446b44035" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;diagonal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7130f226099078d907402704303ae906fde3c701" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;diagonals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e403c246c3296fa413a9486ec010f1feab46ec92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;dy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2aa1f7dc8161388c0994d0602ca926aed947da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcd08fed4fe7ffefc026aac674bd285db9bdeec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;features&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;features&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bf6d79dc7868f2184fa425ddd72b691a426f894" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa277d4bfabff8efb674b0af852aea25c30fe81" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;grad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8523364e39c2b3ab90b1a49c5dfbad2a4399dda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;grad_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef1e96deb8fd436fcc6dbcb640682d8d6458731" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;gradients&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2669c31120dba43e455eb86d66ea65ca9f4666e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;grads&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b7cbc5c90b745078905000361ef0168b661afd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e05ec3deae2d5b668e45b750acddb52b773836e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image_size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3255f21953345ec007d6f65ccfae1fc138fa039" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image_size&lt;/code&gt;. 1-D, containing &lt;code&gt;[offset_height, offset_width, 0]&lt;/code&gt;. Provide as input to &lt;a href=&quot;../../../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a567b773a2fec4be110b55942975b383d2f0d9f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image_size&lt;/code&gt;. 1-D, containing &lt;code&gt;[offset_height, offset_width, 0]&lt;/code&gt;. Provide as input to &lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7dafd116839c2b93e94bc5610720215943d4b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image_size&lt;/code&gt;. 1-D, containing &lt;code&gt;[target_height, target_width, -1]&lt;/code&gt;. Provide as input to &lt;a href=&quot;../../../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dbf12834fe7301635aa234cc78e02ce8e4a692" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;image_size&lt;/code&gt;. 1-D, containing &lt;code&gt;[target_height, target_width, -1]&lt;/code&gt;. Provide as input to &lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;tf.slice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccdf7f061ae989b25005833f7c5b9e9ed15e432" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;images&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b10eeeae79bfc60604dc85417e9009761ef6bad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;indices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf8f5325e8c6ebc23cb5d33dd9735341587f88b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input&lt;/code&gt; and the same outer batch shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141ff82ae75830631f98fe2ae459981d9378013a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="760bdb9bf9226500709f4d5de0c8a92a7a7a2d9e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input&lt;/code&gt;. Contains the same data as &lt;code&gt;input&lt;/code&gt;, but has one or more dimensions of size 1 removed.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;input&lt;/code&gt; . Содержит те же данные, что и &lt;code&gt;input&lt;/code&gt; , но из него удалено одно или несколько измерений размера 1.</target>
        </trans-unit>
        <trans-unit id="46a51f46282431a595b95d7954531dacf6b2aec2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input_grads&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106f6f200f2bcdf861d7581c89e04268c2cd6685" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;input_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204f69790d0bf645d4494e7a8b3ec4bb66b14d08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a6c013a5e06cb4f848be26e63bad428026de41" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b29ed35182a8fad009320b75a6892eb3cbef1d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;logits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a3db80166b04c999f0532725b145cfc2898c2c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;logits&lt;/code&gt;. Same shape as &lt;code&gt;logits&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;logits&lt;/code&gt; . Форма &lt;code&gt;logits&lt;/code&gt; же, как у логитов .</target>
        </trans-unit>
        <trans-unit id="d684c2731339e72fba3319a3dde06da81461dac6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;matrix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;matrix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78a4a72f8acb7cdfd4ef002a624f5488aba07494" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;means&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f04c973a72f57f5b69e9836f47c1d9d9d00c4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;minval&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe800999652f0eb5626ad58b5f379e8e96293df" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;on_value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c471cec30ae0964b5eba6c9db45b384b7c6e22" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;orig_input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5d6616dc7f6abb2fd99f8554d2361952812637" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;original_image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39a76e40d4c8fa19aa01b93c2ae5a054f51466f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;original_input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa475ea9fcbe6b6b9b81998d0e6eb706b0b4da3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;out_backprop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef715302b9cfa616aaf846e95c55b5977934f54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="094d31ad2d7e102e8a6b8f3e83d4baa635fabfe1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;params_dense_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db71b02985a32d651d315a4c56addaaedd9d5cb8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;rate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa59e8feb1f25198f5b4e366a24235b12c8aa39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5640542c5120148112608af16f58d4989baa37b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;ref&lt;/code&gt;. A copy of the input before increment. If nothing else modifies the input, the values produced will all be distinct.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;ref&lt;/code&gt; . Копия ввода до приращения. Если ничто другое не изменяет ввод, все полученные значения будут разными.</target>
        </trans-unit>
        <trans-unit id="45818458c47a7d5c8260d040793622f0efd2e12d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;reserve_space_1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95473d2161d1173eb971fa11e9b11c6b3a7358fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;rt_dense_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eff71b9c237363dcfd73ad914d6548aaa3268d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;s0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2273cfc57d6930cc9fcbefa60a10d1ac8b4bfe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;scale&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de13c03789092d66dd846d8d0dc7716636472b4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;set1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc2df0b2f292f3b8ebb7d2268f83cbd82850179" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;set1_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b416ea39c3f142b2cc7970993f71a8a8ff2d1712" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;sp_values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;sp_values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95d743ff39e5be7f54a7031019d405dc70e4e7ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;sparse_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33adaac6c16e44685affd5920aa0a3e382437d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6901b33982ed7144a010a897a500be8a8c7695c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;starts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e915635a94a9d854d531c8b45480068c9b02d631" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;superdiag&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a89f3a7da0064729515b362b42fda5f344d241f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5090037a6fe0cebc44e1345286006635c02d0341" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72211d56359e3390dcd378167298a26a3e4c70e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;updates&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;updates&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79a70906919f9a42d75b38bbfab93f22503b7a81" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0e2de6d5ef2c7aa05ba305f453a6f19e460cd14" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;value&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;value&lt;/code&gt; . 4-D с формой &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05718f9e5c492c1151060e09402c089a25308dcd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63027a304f396b8fbe9c50b0791f1a86c7e9f2dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;weights&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1d7c5750b2f703df5ecbbd1a080e1d8a5c6b4e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;x1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;x1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a54e10761af2d6861802d1ead9954a9b013c64d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39dd104710ce1258ef7f152a5ea7075457a1ac62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="619a1ad33fe189c03a51e088f0de562fd49a630d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as &lt;code&gt;y_backprop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf25df5b5cf7ce075de4c2904141d04c19a195e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as input.</source>
          <target state="translated">&lt;code&gt;Tensor&lt;/code&gt; . Имеет тот же тип, что и вход.</target>
        </trans-unit>
        <trans-unit id="534041045f2795ebd2b85723354cc43248dd51c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Has the same type as matrix, and shape is &lt;code&gt;[..., M, N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fa93edc24aabcfae1cc1bfd885e592c3e13170" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Input tensor, non-Reference type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8edafb86d0bc56cc8f42e791cf8676ece4238ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Input tensor, non-Reference type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09bc720df5ddacb7a40382fc0ac50f38abc2676" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Input tensor, to be summarized by the op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7268166a7d8d84bb2915cdde9b5a548f09382773" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41da1e87acaa50fea79461ae44abdff1e55b6623" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Keys of type Tkey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f816ef9c1e024f0126df86cb681f513e027bcc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Minimum value (inclusive, scalar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1e5ec987a65a57b65e3d4f43fe816b2cd6c680" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt; with shape &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ab3d07816fbfae066fc96c634113186c1f61aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;, shape is &lt;code&gt;[..., M, M]&lt;/code&gt;. Cholesky factorization of &lt;code&gt;A&lt;/code&gt;, e.g. &lt;code&gt;chol = tf.linalg.cholesky(A)&lt;/code&gt;. For that reason, only the lower triangular parts (including the diagonal) of the last two dimensions of &lt;code&gt;chol&lt;/code&gt; are used. The strictly upper part is assumed to be zero and not accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0299dc361a946d9de3a7865ba4524f65cdd355" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The starts of each range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7f8c1785bc2196e36a2381e1b4fb70e30cb784" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ac48bde090ca3927508557f8f293298a211802" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. N-D tensor. First entry in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb38fc429d778e89cfe84323a66b976461085f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ea29171bfd501b1acad1bae2942abd41e05fae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;. The local input to the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0020dd01ea0cdc1f4421e8edc763f044a8e09011" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557599839291b0760fc3bfa2c3f50378885a02bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f4340ceb637cc7a10fa696cd56887137ff8da4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. 2-D or higher with shape &lt;code&gt;[..., r_x, c_x]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db8e7bf1a9cf1d3807e4ce4d5999039e6b0a348" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Rank k tensor where k is at most 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d30fd5d23b1bb882c34c48127d9be2cb23d573" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Rank k tensor where k is even and not zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b027cfccdf669c3c1fe6469ada3e0b9cd550907" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D (scalar). First entry in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48da51150b37fa93ee7e4884d6641edbdb9549c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf71dcf5c2d66608491fe4232cf67c7c3e895620" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadfa8b147b5481942a8dc4e0c37cc61a439ad8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;. 4-D Tensor with shape &lt;code&gt;[batch, in_rows, in_cols, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107a63e44d56512fa390bba8dbd57b14601917ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c645e06895c688b067774f7fd1a3ade13ff960" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;. a tensor of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4182cdcda3859a4f84e342d6876fb7ecc8325" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb4b315c17bf2d6ae7a5132e332bb0e9bcab77d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5164ba12757ea925d82438fbf9937a14fe61f851" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d032586bf61dac8b313712c295636bbe6e573b89" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618ce511f0022efc1b0bf744e3e0247d90a9e5f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb2aeed93158cbb86b5b482966c8bba4630f841" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfc6a4f6acf10a5c16c2b3192fd834624172cfd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b123764065d755a0777321a0e6a88d200115ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 0-D tensor. First entry in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017e276c8baa325790dbab5b92c5147de32b4393" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Tensor to quantize and then dequantize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce540d60f2d5ead108182a6bcb2b1684da309d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d26f7aca28a9dc1dd0f89c97e9d06bd5a69807" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Values to compare against &lt;code&gt;threshold&lt;/code&gt; and bitpack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e90f4d6322d20b740ae045c56af140e32cd654e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75623b0b457c32acf22dc29f0621903b1277d14c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2326692a9aee773f8f3d66fbe387ee5e8dd223" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A complex tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1d3883a5e32facec5412e04502d9654553bb29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9bed2d9713a4297bcbe9720dfbe7fd1f121645" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ec2ca1d66f69c9f092cc5a5f9629670932ccae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, orig_height, orig_width, channels]&lt;/code&gt;, The image tensor that was resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7027550a6082c78034d2b827eb302efea5c35f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00903472cb8c87bbf204bd8af76c3b4f24691615" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72943028df6aea38b09b951eadacf12dec823ed2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. &lt;code&gt;Tensor&lt;/code&gt; input of shape &lt;code&gt;[N, N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b3d7d612f2ad1ad4d06db2ec47e1671e834d01" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A Dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6203487bfeade077afc70fd191141c44a747ed4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A constant scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3807849889a6ecaf4e84ce0e7adc5178f2e3a1c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. SparseTensor values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abcb8e38a73fdcf31c24790a6219f2ee6c5babc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6eef87c0ad7caa8145ccff676ce12a3f7b44977" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Gradients w.r.t. the output of &lt;code&gt;fractional_avg_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97997d5b3ff3cb12ff66eebc8e2185611fb8af" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Original input for &lt;code&gt;fractional_max_pool&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6358204ad1597436bd18ae2653b8917e85bf4a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4978f9b47ef365224addef3e44ca3d2bbab6310" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;. A Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac84a2500208748d166345eaad954e4d61330953" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;. The local input to the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e48583c8ae05473c1fe3c4aa76671d4a2c51a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343cfd859afa31eff1417421ec1be981358cda2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D with shape &lt;code&gt;[nnz(sum)]&lt;/code&gt;. The gradient with respect to the non-empty values of the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18795f938d775b9a3220bd0ec56673a9cff0fa8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;a_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e4ff61cac07f366c0835724cfd0d2976453897" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;input_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aeae687ee01b623ca3b055ba0ebf3bee0ad6bbc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;sp_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68a400cec378a6a42ea23aeb96968096bd5b13e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, with shape &lt;code&gt;[nnz]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880b2bcb9b974522fb173579caa0c49198f8af0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the first &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e142121a0cc52a0c917772f37df644cfec40344e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. The gradient with respect to the non-empty values of the sliced &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee320d083c4dc2d02a1f3e44c382ba3f50f9884f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A 4D input Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606050e23a357fffa090ced98a804ded62bd7f5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8858b8708404a9d940a6839391caf6143da5fe1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee047c30c7bb4d7b02a007fca9a2615c13be12c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A tensor of the gradient to be accumulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d59966a63e632cddc4a23905ce88a3bda3d587" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A tensor of updated values to add to &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815db1ec99283c6c214aa52c7ac83741a6805452" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Any number of dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ea7eb29d921e029d4af11d6dc03a8ecf45d098" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Learning rate. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da30983801ed711deb26a9bafac8a27c9efe2d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cff00d4d82e19a442914b557b360102f396a11" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Scaling factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9117f115aff68ffa52d9a0c0fe0ab1debf55eeb8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1642a160633e05e0e81be6a40a1ff93a3b3991" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The local input to be permuted. Currently only supports float and bfloat16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f888530853ae7f69c0c598a816c54427ec116c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The tensor to reduce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae2886ac6d259d223556b23f2d4fc0625c0ef72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Values are the non-zero slices of the gradient, and must have the same first dimension as indices, i.e., the nnz represented by indices and values must be consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85b22ff62e59d40fb5ca427ccf6e3e11c096eb2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a202de1cda817efc217a4825b04bdb8c469914" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0483ec3d5407f561afec3b90970ee5d9dd24ec5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 0-D. The magnitude threshold that determines if an output value/index pair takes space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eed539fe8996614cebf58053659374761c5e10" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D or higher with last dimension at least &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8eff724e776a4d7ad076fd500281dcafeff16c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D or higher with last dimension at least &lt;code&gt;n+1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f2cd661b8f74c8b003e51bae1a379f0b5d94a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;a_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bac9b563c067cd159c9820bc464ff2358726dc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 1-D. &lt;code&gt;N&lt;/code&gt; non-empty values corresponding to &lt;code&gt;input_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40f7540c9777024c38fc5a8fc8e4fea09e437a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 2-D Tensor with shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;. Each slice &lt;code&gt;[i, :]&lt;/code&gt; represents the unnormalized log probabilities for all classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7c8f030bb7f1a5b8bc5ee553573a68ae0d0a7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Input to pool over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f93b02a2cc81072f911e3ac1adeb98a1e8c600" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9b2ca9de4af586ce6ca5c7782cbe86c806995f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 5-D Tensor with shape &lt;code&gt;[batch, in_planes, in_rows, in_cols, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db4720fbe56898d1cf2b95e8f79036084a6828e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. A tensor containing 3-element vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76676f51e78be353e3514b3484de53547805a3d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Any shape. Values to use to build the histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b91924ca026c633357db212eb5c052d8bd98b20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. Same shape as &lt;code&gt;tags. Values for the summary. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4205285f0e8fe44b9f7df470ff1f48f18633c23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The backpropagated gradients to the corresponding Relu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174115d6225cfbfea88d28d19371b38bc56c687e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The backpropagated gradients to the corresponding Relu6 operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f403fbdbeef37c0befd22ad4eae1eb2f9242d1ee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The original input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56be707a848575426044a0e9d7b81b744a9eeb26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. The original input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1ffc4f1430144be872957c0eccbf9672a87e0f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432d5116d9ffdddc25b014edf51a807ac52517a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2032070b22c3cc2ffdb33f19364a9e4e33cfbc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 1-D. &lt;code&gt;NNZ&lt;/code&gt; non-empty values corresponding to &lt;code&gt;sp_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c22f9f2d04df5f280922455a3b8652d60e927e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 3-D, shape: &lt;code&gt;(max_time x batch_size x num_classes)&lt;/code&gt;, the logits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b221c01059380d6cd0a63bfdd162541b3f142f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, orig_height, orig_width, channels]&lt;/code&gt;, The image tensor that was resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a18c53a99d9c929f29929e0f8b7d11b41d96a7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A float32 tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a9e2f1445f6543824ecbfc339a038fa3f02898" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. gradient propagated to the SparseSegmentMean op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57013f65d9df9ebe49b33cc76733df490ffd53d2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. gradient propagated to the SparseSegmentSqrtN op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f1b2535de5921b7ffe0436350077e98d94870c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48224dbaf7da03e3b738ada070cae646b4dd9638" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, depth]&lt;/code&gt;. A batch of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2da9b045ef943d2181be93904a323d957efe35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6da9870eeacef065665dd5d0a9473b909239daf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;. The original bias tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acef0b3a39bd7eda45b26c04ea44cd05bb055c9e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964dc8835b47cf033b43c031d79b279999f76123" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;. A 1D Tensor for scaling factor, to scale the normalized x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7979b2752eabca4b33af3a108bd8a8e90b7daf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;. A 4D Tensor for input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7f617ac0ea6aa79f0c997c70defb619ca98dae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;. A 4D Tensor for the gradient with respect to y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab5235621ad5469939f1df9128fa5f639ab8f2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;. When is_training is True, a 1D Tensor for the computed batch mean to be reused in gradient computation. When is_training is False, a 1D Tensor for the population mean to be reused in both 1st and 2nd order gradient computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53b5480defe3d76693cd43736708e331573bf0a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d05243f6b5f3b82cb02574583315f936ecb080" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., 1, M]&lt;/code&gt;, representing superdiagonals of tri-diagonal matrices to the left of multiplication. Last element is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a37a68d6881ea77433a1e3c9f4d505648163cf1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., 3, M]&lt;/code&gt; whose innermost 2 dimensions represent the tridiagonal matrices with three rows being the superdiagonal, diagonals, and subdiagonals, in order. The last element of the superdiagonal and the first element of the subdiagonal is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbce35015f5f25f5ae16bbf87e953ee665192cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b97ce55bbf095429e618c360ca671bc9839f69" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. &lt;code&gt;Tensor&lt;/code&gt; input of shape &lt;code&gt;[N, N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732b17965331652eb69e6d3209a96c34d260100a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A tensor of shape &lt;code&gt;[..., M, M]&lt;/code&gt; whose inner-most 2 dimensions form matrices of size &lt;code&gt;[M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6dd040b7bb8b09fac2fd9eb58bebf345f6d54e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. A tensor of shape &lt;code&gt;[..., M, N]&lt;/code&gt; whose inner-most 2 dimensions form matrices of size &lt;code&gt;[M, N]&lt;/code&gt;. Let &lt;code&gt;P&lt;/code&gt; be the minimum of &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8d5f3c3d03f18cbc4957b27da88b3b68c76c65" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b3eda90906f9846920d782edb207fed5690cf1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fcafc3a6ad06dc0b6ebc42ef3c27e82991e945" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484f9287fd725d41fc44392900e23f886842bd78" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7745c0a40e6c64e480a60e0b0fa45f3682bd01" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99e0a2d9cfbc5ce57716ba8f1596da3b893e977" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;qint8&lt;/code&gt;. 4-D input to pool over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a59e3da20c7c237937d983aea3f477543fa23f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b86c4f1191af312883e58485b07badfbca9fd24" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;. A 4-D tensor. The dimension order is interpreted according to the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a8ee29b3f0775c73c920809986a6083ba222cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e208fadfe26e1adba13eb30f70ede66e2ebbd862" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 1-D or higher rank. HSV data to convert. Last dimension must be size 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d18473525e86b157ec79055461190415844b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 1-D or higher rank. RGB data to convert. Last dimension must be size 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872747cb731032dfe0702f5ce84623866944c138" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 2-D with shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08224a20783f070356cba2636c37dffd6311be18" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ecb3266f947194384cfe1face3ddd12f7b1e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Gradients w.r.t. the output of &lt;code&gt;avg_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b485faf04b25583e631498b703eece73cc596eab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46518f18b8c3b003fb93a7f3dd185d97d51ea68d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, depthwise_multiplier]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff34a4d60fdd41350c94f6544f7a6386d218625" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09291557c544664da8f80655ba864fba32c3490" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then &lt;code&gt;input&lt;/code&gt; is a 4-D &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b5a76b432df3cd61c179fa52e396578b7fc7ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A 4-D tensor. The dimension order is interpreted according to the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3697c821a905ecbca3b878ae3dd3b2162f871751" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A Tensor of rank at least 4. The dimension order is interpreted according to the value of &lt;code&gt;data_format&lt;/code&gt;; with the all-but-inner-3 dimensions acting as batch dimensions. See below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d39d8dd5ac7bffd6fe9644133c7a7f276cf0377" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Output backprop of shape &lt;code&gt;[batch, depth, rows, cols, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f350ec082c297117c54c95384c755ee08464ee2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, depth, rows, cols, channels]&lt;/code&gt; tensor to pool over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c0b2442317726bac1fa5a335f9d78cf6ef4dfc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d7ae5ef9f8395b655dd84f66f13d345fefe452" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, in_depth, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0180bbf9563013d6496e78b8b0b70e67ee146f20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[depth, rows, cols, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878b01097a084357e8ffea147fb94477b4342944" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The backpropagated gradients to the corresponding Elu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afea52e303d35c6a01a8986e684e485e1c0f280" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The backpropagated gradients to the corresponding LeakyRelu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593e9b2d18f184be3ea33204c284cca00c34550b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The backpropagated gradients to the corresponding Selu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb0901f36bfc74aed6d4121d13c96cfe14a8f22" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The backpropagated gradients to the corresponding softplus operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9c3fbf4126faf528d1147eb8609da0a2c0bff0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The backpropagated gradients to the corresponding softsign operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183415387097226f184a7e323c016a8b6ac13b8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The mean parameter of each batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcf7a74caabb242d8660d39d8f3ea6ce5ce9601" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Typically 2-D, but may have any dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b814cb598253b89048e684fd48c07e0bc89ffa03" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. batch_size x num_classes matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a7e6bf22f5423066232327ef766593f3da0b9a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9607d92dc1587e70789a35550f54e0a64da26aaa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. 4-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509c5d4fc56251d359238b3fc77b6b17ddaef4ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. A 4D Tensor for input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ffb96c1c6f3db8afd2823b984c596809d44e29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. A 4D Tensor for the gradient with respect to y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54cecb8c17b8eb85b9db376d2359567d5e87484" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. Output backprop of shape &lt;code&gt;[batch, depth, rows, cols, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77570340d3bbe82f472a1f8421372fa9c1a02868" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. Shape &lt;code&gt;[batch, depth, rows, cols, channels]&lt;/code&gt; tensor to pool over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f33dee14c8f19df4bb652f642b285f08add377" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. The original input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d0f8906d0e0626dc0200b26b2a38ab23748308" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8125ad1454b2d41915725a1abbeecb2764ffefb6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d5b344151546ddeb8780422cc48c0ae684f49b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;. Shape is &lt;code&gt;[N, M, M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd3557cbe7234d088d582b29c8177e3cac6ccf1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fbd18b0ba9b41901d95f13d52c00a591e7ebed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor in which each scalar is a &quot;rate&quot; parameter describing the associated poisson distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c76e5782aa92d4c87971c094e6c354453fd7ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The counts of the binomial distribution. Must be broadcastable with &lt;code&gt;probs&lt;/code&gt;, and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd80842c589463efe3958677a3b1d087ae82075" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The rate of the Poisson distribution. Shape must match the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c69207b25bcca2719fba2901bcdc3cec35d8aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc454fa60160f2dbc981afdc7d93892d912ca1d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, in_height, in_width, in_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92572b1c3c62ea45628c34a1b4accbb6fec74533" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf648a22bdc748396037112acf8e670ae7fa6c90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A tensor in which each scalar is a &quot;shape&quot; parameter describing the associated gamma distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbb43da90c7a05100e807c3ba493d5bce632e71" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Output of batch Cholesky algorithm l = cholesky(A). Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;. Algorithm depends only on lower triangular part of the innermost matrices of this tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1c3037b125863501ae6512dcc7cb638d01d4c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Shape &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ba2ebe06a50fedbb2cbd7ce60b46974aa104f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The concentration of the gamma distribution. Shape must match the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f35a04d5b5a23a7d0753ad92cbf17c149602cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. The mean parameter of each batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b951b2e071ddc75c6b51ab741fef0e8ad71f73a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. A 0-D float tensor representing the threshold for deciding whether boxes overlap too much with respect to IOU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9707641725016e933eb31c7c15ffe820347058fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. A 2-D float tensor of shape &lt;code&gt;[num_boxes, 4]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7a0d50e21d09b1d292b137c4bf3dbb75fa73b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. Images to adjust. At least 3-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521c952f78ce6d0970daf4b0bc5205084357e928" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. The input to the LSTM cell, shape (batch_size, num_inputs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b3dc797f5de07af44624d3622a03267f1031b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. The sequence input to the LSTM, shape (timelen, batch_size, num_inputs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ed06283f62637d3eb944af36df34b003d1ca99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734eb2ee5e5772f0cd9e3a7a3ba59b4ff863c3cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A Tensor of the same shape as indices containing per-index weight values. May also be the empty tensor if no weights are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b35bd9c715bda2365ae867981d1579645ba0b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Any shape of Tensor contains with int or float type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9573e2c9dbe953a679287bbb9628bb4097b141b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. Numeric &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e793ed26dfa62fb4147cd3be1feed242d2c4a3f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. is an int32, int64, float32, or float64 &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;arr&lt;/code&gt;, or a length-0 &lt;code&gt;Tensor&lt;/code&gt;, in which case it acts as all weights equal to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1a7a2f4453f877b7f3acac787d7c3cca87b6c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. is an int32, int64, float32, or float64 &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;input&lt;/code&gt;, or a length-0 &lt;code&gt;Tensor&lt;/code&gt;, in which case it acts as all weights equal to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bb559d4c198b848f34cf65e4712a507ba8eaec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eaad706a0077e72ca903e1c059ee0eae378bab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;. 2 seeds (shape [2]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d10194b420af8347b217198e0228d6f68288e4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fb4f6f42e3ebdbbe45613e0215a7905bfa7e50" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f2d8c9b5c674ffe377123792dcc182df9de8ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D (scalar). Specifies the dimension index at which to expand the shape of &lt;code&gt;input&lt;/code&gt;. Must be in the range &lt;code&gt;[-rank(input) - 1, rank(input)]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899ffd412369f63b42b427ada28a2ad24e1aa123" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D tensor. Number of subdiagonals to keep. If negative, keep entire lower triangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f04e262cfe8fe6fd08d2a5a60c533cff28eb69" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D tensor. Number of values to generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10273ed2591fa8e6d830e3592cf6629eac41f62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D, 1-D, or 2-D. &lt;code&gt;sparse_indices[i]&lt;/code&gt; contains the complete index where &lt;code&gt;sparse_values[i]&lt;/code&gt; will be placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b14414d7d2a48d6b885842cef4dc0cbecd2a29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D. Inclusive lower bound on the generated integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df6cd9144731641fe5a40dc99b4940448ae1d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D. The dimension along which to concatenate. Must be in the range [-rank(values), rank(values)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd5dab22d65126fdc3d5a6fd2cc5026e1e9a428" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D integer tensor. Shape of independent samples to draw from each distribution described by the shape parameters given in alpha.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcf61f265a3647bde9f2b3068a8853b9f55cc32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D integer tensor. Shape of independent samples to draw from each distribution described by the shape parameters given in rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc774613a63786c5541ad3b4a7fb49e189226ed0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with length &lt;code&gt;input.dims(batch_axis)&lt;/code&gt; and &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_axis)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ffa6c36d29023684bb676a33eba446f30e73c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with length &lt;code&gt;input.dims(batch_dim)&lt;/code&gt; and &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_dim)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deab15e3caa18bcfe364b4fe6a1079c0276c791" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with shape &lt;code&gt;[M]&lt;/code&gt;, all values must be &amp;gt;= 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3c819f326a415ac9ef59622a893e866f7494a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c723f9f63f4af13785554d4cbbf3b4b8361941e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. Length must be the same as the number of dimensions in &lt;code&gt;input&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e3fed0a5fd470a71269b74cba89b42bf1bc528" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. Represents the shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b2370c0a4b5e9d9195080627c6cb9a5c720e80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. The indices of the dimensions to reverse. Must be in the range &lt;code&gt;[-rank(tensor), rank(tensor))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b45e599eac49ad923a42abd7c3c9d7ae44a403" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcd7c6da0989f8ba02a34a298f8371cbe5bcbe9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1D or 2D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abd746003e0a2c218b500af18c75ea4aea972c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2 seeds (shape [2]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff574434aa7b7e31eec5a0b3d6e4fba59a468eec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D tensor of non-negative integers with shape &lt;code&gt;[2, 2]&lt;/code&gt;. It specifies how many elements to crop from the intermediate result across the spatial dimensions as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a252f5db0e0af64e0c0eac704d985341a8f2b558" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D tensor of non-negative integers with shape &lt;code&gt;[2, 2]&lt;/code&gt;. It specifies the padding of the input with zeros across the spatial dimensions as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a80f38e444d42fd3cd4119dae4efa0863df5b6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; specifies the amount to crop from input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cb1aab0a4b7a24400e50818301045f5387ca88" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;paddings[i] = [pad_start, pad_end]&lt;/code&gt; specifies the padding for input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;block_shape[i]&lt;/code&gt; divides &lt;code&gt;input_shape[i + 1] + pad_start + pad_end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e78dfd3921d3d60ff25673c5bc60e4343895e80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz, 2]&lt;/code&gt; Matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132d8348821a140c3ff1cefb13a9ebdaca4d74bb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, with shape &lt;code&gt;[nnz, ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f660280f966c9c2f77802100c1622f6edb27aad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b388ea5b445ae575da8ab90910106413ae7061" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. &lt;code&gt;begin[k]&lt;/code&gt; specifies the offset into the &lt;code&gt;k&lt;/code&gt;th range specification. The exact dimension this corresponds to will be determined by context. Out-of-bounds values will be silently clamped. If the &lt;code&gt;k&lt;/code&gt;th bit of &lt;code&gt;begin_mask&lt;/code&gt; then &lt;code&gt;begin[k]&lt;/code&gt; is ignored and the full range of the appropriate dimension is used instead. Negative values causes indexing to start from the highest element e.g. If &lt;code&gt;foo==[1,2,3]&lt;/code&gt; then &lt;code&gt;foo[-1]==3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d74633ce01b43292faeb99b8bd7aec5abf70dda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor whose size is equal to the size of &lt;code&gt;data&lt;/code&gt;'s first dimension. Values should be sorted and can be repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1075f09345c9b10e7e8ca44c87c8fe108647bc3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor. Has same rank as &lt;code&gt;segment_ids&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a5e80715378e9983c985d4316f534d7af3d83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor. Values should be sorted and can be repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6f430563b56c758dc3f85a5b97d97a95bb5266" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1D tensor specifying how the unicode codepoints should be split into strings. In particular, &lt;code&gt;output[i]&lt;/code&gt; is constructed by encoding the codepoints in the slice &lt;code&gt;input_values[input_splits[i]:input_splits[i+1]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f298af3436ded2e2b0147a88393f19d1994018aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; (default: 0). Must be in the range &lt;code&gt;[-rank(x), rank(x))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de56b619cf425890b2303c2f23b2686a5c84fac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; (default: None). The axis of the Tensor to find the unique elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a9a32da0a060a7383270d42c2471d498d755a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;batch_size&lt;/code&gt; vector of class ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70874af5336a894eb803d0f404d219c44cef4ad8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor with each element as a dimension index in source data format. Must be in the range [-4, 4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773b4cf625bb3915754e128c2b6a9cc103170832" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad57b7e90bb55b62d7dd92e7b978904169e3c59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor. Must be one of the following types: int32, int64. A tensor of indices into ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64b9f38a5312b4e7beb0c5693175771b44be36f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99dbe2fc328e392d0303912a7a527e63a1cd01c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee027d693ecb1bcc3c67bf4b3fd636c739f20442" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into the first dimension of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a81879420a0a4c33c2ac67fbc3141be69e28be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor whose shape is a prefix of &lt;code&gt;data.shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a0868080338a5ebe7b9d7ee0cfb8c3d3b6665" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor whose shape is a prefix of data.shape. Negative segment ids are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ff78504e4a39a319d8fc52101d4de814ba906" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A two-column matrix specifying the padding sizes. The number of rows must be the same as the rank of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352b95987e398d9905b9dc58c942bac04fb89581" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A vector of indices into the first dimension of var and accum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e671cacc8ac2d19931be3800689def2130c2abf6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A vector of indices into the first dimension of var, ms and mom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a12fa2611a30d096f1c01179b853d8fa56ba663" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An 0-D or 1-D &lt;code&gt;int&lt;/code&gt; Tensor whose elements are indices into the flattened version of an array of dimensions dims.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc295fdb8f10c2d814bf163bbc5e37807a13fbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An 1-D &lt;code&gt;int&lt;/code&gt; Tensor. The shape of the desired output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1233135f510bf63f71b96fe21fdb9918630eb7ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;input&lt;/code&gt;, where &lt;code&gt;input&lt;/code&gt; is a 5-D &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde3e61f67e98610d7457a5fe1140e4906603845" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Defines the shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b86e22248ae903c00bf210939bb8ad96aa56a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Dimension must be 0-D or 1-D. &lt;code&gt;axis[i]&lt;/code&gt; specifies the dimension that the shift &lt;code&gt;shift[i]&lt;/code&gt; should occur. If the same axis is referenced more than once, the total shift for that axis will be the sum of all the shifts that belong to that axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a0c2eb9ef3c1985cae14cf4808926be159fc8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Dimension must be 0-D or 1-D. &lt;code&gt;shift[i]&lt;/code&gt; specifies the number of places by which elements are shifted positively (towards larger indices) along the dimension specified by &lt;code&gt;axis[i]&lt;/code&gt;. Negative shifts will roll the elements in the opposite direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5df90f296f893b9fccec93fdf3a2cdfa63edcbb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Index tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e91109727cba023fbd055d1adfa129a115329cc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Index tensor. Must be in range &lt;code&gt;[0, params.shape[axis])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96f10abf260b1246ddc98086fe69c5076421ef6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Indices in the outermost dimension of &lt;code&gt;params&lt;/code&gt; of the values that should be gathered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc85fe080b3455167be9467ef88c6260c15f31ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Minimum value (inclusive, scalar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161c5b1745670183a06f10aaaad668207d4f632b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Scalar defining the position of first character in each substring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824c80bfb0f41f3291d6d4d145824599527d89cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Should equal the number of distinct segment IDs.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
